C=DECK      QUESTIONSLIB
C
C  THIS IS THE QUESTIONS LIBRARY  (SOURCE FILE)
C
C
C
C=DECK      QUEST
      SUBROUTINE QUEST(CASE,ITYPE)
C+---------------------------------------------------------------------+
C+---------------------------------------------------------------------+
C
C  PURPOSE OF THIS PROGRAM IS TO ALLOW USER TO ANSWER QUESTIONS
C  FOR ANY PORTION OF A BOSOR INPUT DECK. THE USER CAN THEN INSERT
C  THE LITTLE FILE THEREBY GENERATED INTO THE PROPER PLACE IN THE
C  BOSOR INPUT DECK, THUS GENERATING A MODIFIED CASE WITHOUT HAVING
C  TO ANSWER ALL THE QUESTIONS FOR ALL THE SEGMENTS ALL OVER AGAIN.
C
      COMMON/PRMFIL/IFILE,IFILE2,IOUT,IPRM(5)   
      COMMON/PRMOUT/IFILE3,IFILE4   
      COMMON/INDAT/INFILE
      COMMON/SEGEND/R1,Z1,R2,Z2,IFLAG1,IFLAG2,IFLAG3,IFLAG4,ISEG
      CHARACTER*4 ANSOUT,CHARAC
      CHARACTER*33 FNAME,CASE,VNAME
      CHARACTER*10 NAME1
      CHARACTER*11 NAME2,NAME3
      LOGICAL ANSL1     
      logical exists
C
      CHARACTER*9 WORDS(30)
      DATA WORDS(1)/'MESH     '/
      DATA WORDS(2)/'GEOM     '/
      DATA WORDS(3)/'REFSURF  '/
      DATA WORDS(4)/'IMPERF   '/
      DATA WORDS(5)/'RINGS    '/
      DATA WORDS(6)/'LINELOADS'/
      DATA WORDS(7)/'DISTLOADS'/
      DATA WORDS(8)/'WALL     '/
      DATA WORDS(9)/'SMEARED  '/
      DATA WORDS(10)/'PRESTRESS'/
      DATA WORDS(11)/'CONSTRAIN'/
      DATA WORDS(12)/'RIGIDBODY'/
      DATA WORDS(13)/'GLOBAL1  '/
      DATA WORDS(14)/'GLOBAL2  '/
      DATA WORDS(15)/'GLOBAL3  '/
C
      IFLAG1 = 0
      IFLAG2 = 0
      IFLAG3 = 0
      ISEG = 0
      IOUT = 3
      IFILE = 2   
      IFILE2= 4   
      IFILE3 = 7  
      INFILE = 5
C
C FOLLOWING USED FOR VAX/VMS..
C     OPEN(UNIT=2,FILE='BOSOR4:PROMPT.DAT',STATUS='OLD',READONLY)
C     OPEN(UNIT=4,FILE='BOSOR4:PROMPT2.DAT',STATUS='OLD',READONLY)
C     OPEN(UNIT=7,FILE='BOSOR4:PROMPT3.DAT',STATUS='OLD',READONLY)
C END VAX/VMS OPEN STATEMENTS
C
C FOLLOWING USED FOR UNIX...
      OPEN(UNIT=IFILE,FILE='PROMPT.DAT',STATUS='OLD')
      OPEN(UNIT=IFILE2,FILE='PROMPT2.DAT',STATUS='OLD')
      OPEN(UNIT=IFILE3,FILE='PROMPT3.DAT',STATUS='OLD')
#if rs6k
      rewind(IFILE)
      rewind(IFILE2)
      rewind(IFILE3)
#endif
C END UNIX OPEN STATEMENTS
C
      inquire(FILE=case, EXIST=exists)
      if (exists) then
	OPEN(UNIT=17, FILE=case, STATUS='OLD')
#if rs6k
        rewind(17)
#endif
      else
	OPEN(UNIT=17, FILE=case, STATUS='NEW')
      endif
C
      REWIND IFILE3
      CALL DATUM(IFILE3,300,0,0,INT,REALL,CHARAC,10,0,1)
      CALL DATUM(IFILE3,320,1,1,ITYPE,REALL,CHARAC,10,0,1)
C
      FNAME = WORDS(ITYPE)
      I = INDEX(FNAME,' ')
      IF (I.NE.0) THEN
        VNAME = FNAME(:I-1)//'.QUE'
      ELSE
        VNAME = FNAME//'.QUE'
      ENDIF
C
C BEG JAN 1993
      IF (ITYPE.LE.5)  CALL REREAD(IOUT,IFILE3,INFILE,VNAME)
      IF (ITYPE.EQ.8.OR.ITYPE.EQ.9)
     1                 CALL REREAD(IOUT,IFILE3,INFILE,VNAME)
      IF (ITYPE.GE.11) CALL REREAD(IOUT,IFILE3,INFILE,VNAME)
C END JAN 1993
C
      GO TO (5,10,15,20,25,30,35,40,45,50,55,60,65,70,75),ITYPE
C
    5 CALL MESHQ
      GO TO 100
   10 CALL GEOMQ
      GO TO 100
   15 CALL REFSUR
      GO TO 100
   20 CALL IMPERQ
      GO TO 100
   25 CALL RINGS(NRINGS)
      GO TO 100
   30 CONTINUE
      REWIND IFILE
      CALL DATUM(IFILE,2,1,2,INDIC,REALL,CHARAC,10,0,1)
      IF (INDIC.EQ.4) INDIC = 3
   31 CONTINUE
      REWIND IFILE2
      CALL DATUM(IFILE2,148,1,2,NRINGS,REALL,CHARAC,10,0,1)
      IF (NRINGS.GT.20) THEN
       WRITE(6,*)' A MAXIMUM OF 20 RINGS PERMITTED IN ONE SEGMENT.'
       GO TO 31
      ENDIF
      IF (INDIC.LT.3) GO TO 33
   32 CONTINUE
      REWIND IFILE
      CALL DATUM(IFILE,29,1,2,INT,THETAM,CHARAC,10,0,1)
      IF (THETAM.LT.0.00001.OR.THETAM.GT.180.1) THEN
       WRITE(6,*)' THETAM MUST BE IN THE RANGE FROM 0 TO 180 DEG.'
       GO TO 32
      ENDIF
   33 CONTINUE
C BEG JAN 1993
      CALL REREAD(IOUT,IFILE3,INFILE,VNAME)
C END JAN 1993
      CALL LINLOD(INDIC,NRINGS,THETAM)
      GO TO 100
   35 CONTINUE
      REWIND IFILE
      CALL DATUM(IFILE,2,1,2,INDIC,REALL,CHARAC,10,0,1)
      IF (INDIC.EQ.4) INDIC = 3
      IF (INDIC.LT.3) GO TO 38
   37 CONTINUE
      REWIND IFILE
      CALL DATUM(IFILE,29,1,2,INT,THETAM,CHARAC,10,0,1)
      IF (THETAM.LT.0.00001.OR.THETAM.GT.180.1) THEN
       WRITE(6,*)' THETAM MUST BE IN THE RANGE FROM  0  TO  180  DEG.'
       GO TO 37
      ENDIF
   38 CONTINUE
C BEG JAN 1993
      CALL REREAD(IOUT,IFILE3,INFILE,VNAME)
C END JAN 1993
      CALL DISLOD(INDIC,THETAM)
      GO TO 100
   40 CALL WALL
      GO TO 100
   45 CALL SMEAR
      GO TO 100
   50 CONTINUE
      REWIND IFILE2
      CALL DATUM(IFILE2,90,1,1,ISEG,REALL,CHARAC,10,0,1)
C BEG JAN 1993
      CALL REREAD(IOUT,IFILE3,INFILE,VNAME)
      CALL GETPSQ(ISEG)
      GO TO 100
   55 CALL POLES
      CALL BOUND
      CALL JUNCTQ
      GO TO 100
   60 CALL RIGID(INDIC)
      GO TO 100
   65 CALL GLOB1(INDSIG,INDIC,THETAM,IPRE,NSEG)
      GO TO 100
   70 CALL GLOB2(1,INDSIG,INDIC,THETAM,IPRE,NSEG)
      GO TO 100
   75 CALL GLOB3(1,INDIC,THETAM,IPRE,NSEG)
  100 CONTINUE
C
      CLOSE(UNIT=3,STATUS='KEEP')
      CLOSE(UNIT=10,STATUS='DELETE')
      RETURN
      END
C=DECK      MESHQ
      SUBROUTINE MESHQ
C+---------------------------------------------------------------------+
C+---------------------------------------------------------------------+
C
C  PURPOSE IS TO ASK QUESTIONS RELATIVE TO NODAL POINT DISTRIBUTION.
C
      DIMENSION IHVALU(100)
      COMMON/PRMFIL/IFILE,IFILE2,IOUT,IPRM(5)
      COMMON/INDAT/INFILE
      COMMON/SEGEND/R1,Z1,R2,Z2,IFLAG1,IFLAG2,IFLAG3,IFLAG4,ISEG
      CHARACTER*4 CHARAC
C
      WRITE(IOUT,5)
    5 FORMAT(6X,'H',9X,'$ NODAL POINT DISTRIBUTION FOLLOWS...')
   25 CONTINUE
      REWIND IFILE2
      CALL DATUM(IFILE2,101,1,2,NMESH,REALL,CHARAC,IOUT,ISEG,1)
      IF (NMESH.LT.3.OR.NMESH.GT.98) THEN
      WRITE(6,*)' NMESH MUST BE IN THE RANGE FROM 3 TO 98'
      BACKSPACE(IOUT)
      GO TO 25
      ENDIF
      IF (IFLAG1.EQ.0) THEN
        WRITE(6,24) NMESH
   24   FORMAT(/' WARNING:  DO NOT FORGET TO MODIFY CONSTRAINT CONDI-'/
     1  ' TIONS TO CORRESPOND WITH THE NEW VALUE OF NMESH=',I3,' IN'/
     1  ' THIS SEGMENT!'/)
      ENDIF
C
   26 CONTINUE
      CALL DATUM(IFILE2,102,1,3,NTYPEH,REALL,CHARAC,IOUT,0,1)
      IF (NTYPEH.NE.1.AND.NTYPEH.NE.3) THEN
      WRITE(6,*)' NTYPEH MUST BE EITHER  1   OR   3  '
      BACKSPACE(IOUT)
      REWIND IFILE2
      GO TO 26
      ENDIF
C     
      NMESH1 = NMESH - 1
      GO TO (50,90,100),NTYPEH
   50 CONTINUE
      CALL DATUM(IFILE2,103,1,2,NHVALU,REALL,CHARAC,IOUT,0,1)
      IF (NHVALU.LT.2.OR.NHVALU.GT.20) THEN
      WRITE(6,*)' NHVALU MUST BE IN THE RANGE FROM  2   TO   20'
      BACKSPACE(IOUT)
      REWIND IFILE2
      GO TO 50
      ENDIF
C
      DO 55 I = 1,NHVALU
      IPROMP = 1
      IF (I.GT.1) IPROMP = 0
   54 CONTINUE
      CALL DATUM(IFILE2,104,1,2,IHVALU(I),REALL,CHARAC,IOUT,I,IPROMP)
      IF (I.EQ.1) THEN
       IF (IHVALU(I).NE.1) THEN
        WRITE(6,*)' THE FIRST VALUE, IHVALU(1), MUST BE  1'
        BACKSPACE(IOUT)
        REWIND IFILE2
        GO TO 54
       ENDIF
      ENDIF
      IF (I.EQ.NHVALU) THEN
       IF (IHVALU(I).NE.NMESH1) THEN
         WRITE(6,*)' THE LAST VALUE, IHVALU(NHVALU), MUST BE', NMESH1
         BACKSPACE(IOUT)
         REWIND IFILE2
         GO TO 54
       ENDIF
      ENDIF
   55 CONTINUE
      DO 75 I = 1,NHVALU
      IPROMP = 1
      IF (I.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,105,1,2,INT,HVALU,CHARAC,IOUT,I,IPROMP)
   75 CONTINUE
      GO TO 120
   90 CONTINUE
      DO 95 I = 1,NMESH1
      IPROMP = 1
      IF (I.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,105,1,2,INT,DW,CHARAC,IOUT,I,IPROMP)
   95 CONTINUE
      GO TO 120   
  100 CONTINUE
  120 CONTINUE
      RETURN
      END   
C=DECK      GEOMQ
      SUBROUTINE GEOMQ
C+---------------------------------------------------------------------+
C+---------------------------------------------------------------------+
C
C  PURPOSE IS TO ASK QUESTIONS RELATIVE TO MERIDIAN GEOMETRY
C
      COMMON/PRMFIL/IFILE,IFILE2,IOUT,IPRM(5)
      COMMON/PRMOUT/IFILE3,IFILE4
      COMMON/INDAT/INFILE
      COMMON/SEGEND/R1,Z1,R2,Z2,IFLAG1,IFLAG2,IFLAG3,IFLAG4,IFLAG5
      CHARACTER*4 ANSOUT,CHARAC
      LOGICAL ANSL1
C
      WRITE(IOUT,2)
    2 FORMAT(6X,'H',9X,'$ REFERENCE SURFACE GEOMETRY FOLLOWS...')
      REWIND IFILE2
      CALL DATUM(IFILE2,110,0,0,INT,REALL,CHARAC,IOUT,0,1)
    5 CONTINUE
      CALL DATUM(IFILE2,111,1,2,NSHAPE,REALL,CHARAC,IOUT,0,1)
      IF (NSHAPE.NE.1.AND.NSHAPE.NE.2.AND.NSHAPE.NE.4) THEN
       WRITE(6,*)' NSHAPE MUST BE EITHER  1  or  2  or  4  '
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 5
      ENDIF
C
C
      GO TO (10,20,30,40),NSHAPE
C
   10 CONTINUE
      CALL DATUM(IFILE2,112,1,2,INT,R1,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,113,1,1,INT,Z1,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,114,1,1,INT,R2,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,115,1,1,INT,Z2,CHARAC,IOUT,0,1)
      GO TO 100
   20 CONTINUE
C
      CALL DATUM(IFILE2,116,1,2,INT,R1,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,117,1,1,INT,Z1,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,118,1,1,INT,R2,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,119,1,1,INT,Z2,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,120,1,2,INT,RC,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,121,1,1,INT,ZC,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,122,1,2,INT,SROT,CHARAC,IOUT,0,1)
      GO TO 100
C BEG FEB 2008
C 30  GO TO 100
   30 CONTINUE
      WRITE(6,'(/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/)')
     1' ********** THIS RUN WILL ABORT ***************',
     1' You cannot use GEOM3 because of element "lockup"',
     1' caused by the meridional radius of curvature changing',
     1' within a single shell segment. Generate the shell',
     1' geometry in another way, with multiple segments',
     1' in which the meridional curvature is constant in',
     1' each of these segments, such as toroidal segments',
     1' combined with cylindrical, conical, or flat segments.',
     1' *********** RUN ABORT *************************'
      CALL ERREX
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2008
   40 CONTINUE
      CALL DATUM(IFILE2,123,1,1,NST,REALL,CHARAC,IOUT,0,1)
      IF (NST.NE.1.AND.NST.NE.4) THEN
        WRITE(6,*)' NST MUST BE EITHER   1    OR    4  '
        BACKSPACE(IOUT)
        REWIND IFILE2
        GO TO 40
      ENDIF
C
      GO TO (50,60,70,80),NST
50    CONTINUE    
      CALL DATUM(IFILE2,124,1,1,NRZIN,REALL,CHARAC,IOUT,0,1)
      IF (NRZIN.LT.5.OR.NRZIN.GT.50) THEN
      WRITE(6,*)' NRZIN MUST BE IN THE RANGE FROM   5   TO   50  '
      BACKSPACE(IOUT)
      REWIND IFILE2
      GO TO 50
      ENDIF
      DO 52 I = 1,NRZIN
      IPROMP = 1
      REWIND IFILE2
      CALL DATUM(IFILE2,125,1,1,INT,Z,CHARAC,IOUT,I,IPROMP)
      CALL DATUM(IFILE2,126,1,1,INT,R,CHARAC,IOUT,I,IPROMP)
      IF (I.EQ.1) THEN
         R1 = R
         Z1 = Z
      ENDIF
      IF (I.EQ.NRZIN) THEN
         R2 = R
         Z2 = Z
      ENDIF
C
   52 CONTINUE
      GO TO 90
C
   60 GO TO 90
   70 GO TO 90
   80 CONTINUE
C
      CALL DATUM(IFILE2,127,1,1,INT,ZMAX,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,128,1,1,INT,XMAX,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,129,1,1,INT,ZA  ,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,130,1,1,INT,ZB  ,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,131,1,2,INT,ALPHAT,CHARAC,IOUT,0,1)
C BEG JULY 1996
      INNER = 0
      IF (NSHAPE.EQ.4.AND.NST.EQ.4.AND.(ALPHAT-XMAX).GT.0.0) THEN
         REWIND IFILE3
         CALL DATUM(IFILE3,584,1,2,INT,REALL,ANSOUT,IOUT,0,1)
         IF (ANSL1('Y',ANSOUT,INFILE)) INNER = 1
      ENDIF
C END JULY 1996
C BEG MARCH 1990
      CALL DATUM(IFILE2,132,1,2,INT,ZGLOBL,CHARAC,IOUT,0,1)
C END MARCH 1990
      R1 = SQRT(1. -( (ZA-ZMAX)/ZMAX )**2 ) * XMAX + ALPHAT
      R2 = SQRT(1. -( (ZB-ZMAX)/ZMAX )**2 ) * XMAX + ALPHAT
      Z1 = ZA
      Z2 = ZB
   90 CONTINUE
      REWIND IFILE3
      CALL DATUM(IFILE3,602,1,1,INT,REALL,ANSOUT,IOUT,0,1)
      IF (ANSL1('N',ANSOUT,INFILE)) GO TO 100
  100 CONTINUE
C BEG NOV 1995
      IF (NSHAPE.EQ.4.AND.NST.EQ.4.AND.(ALPHAT-XMAX).GT.0.0) THEN
C BEG JULY 1996
C        REWIND IFILE3
C        CALL DATUM(IFILE3,582,1,2,INT,REALL,ANSOUT,IOUT,0,1)
         IF (INNER.EQ.0) GO TO 1000
         IF (ZA.GT.ZB) THEN
            TEMPZ = ZA
            ZA = ZB
            ZB = TEMPZ
         ENDIF
C END JULY 1996
         IF (ZB.GE.1.99*ZMAX) THEN
C  THIS IS A "TOP" (AS OPPOSED TO "BOTTOM") DOME...
            IF (ZB.LT.1.9999*ZMAX) THEN
               WRITE(IFILE4,225) ZB, 2.0*ZMAX
  225          FORMAT(/' END POINT ZB IS NOT NEAR ENOUGH TO TOP OF'/
     1       ' DOME TO PERMIT "REFLECTING" THE ELLIPSOIDAL SEGMENT'/
     1       ' ZB = ',1PE12.4,'. ZB MUST BE EQUAL TO',1PE12.4,'.'/
     1       ' RUN WILL NOW ABORT IN GEOM4. PLEASE RESET ZB.'/)
               CALL ERREX
            ENDIF
            IPROSS = 1
C BEG JULY 1996
C           RDIFF = R1 - ALPHAT
C           R2 = ALPHAT - RDIFF
            R1 = ALPHAT
            R2 = ALPHAT - XMAX
            Z1 = ZB
            Z2 = ZA
C END JULY 1996
         ENDIF
         IF (ZA.GE.0.0.AND.ZA.LE.0.001*ZMAX) THEN
C  THIS IS A "BOTTOM" (AS OPPOSED TO "TOP") DOME...
            IF (ZA.GT.0.00001*ZMAX) THEN
               WRITE(IFILE4,245) ZA
  245          FORMAT(/' STARTING POINT ZA IS NOT NEAR ENOUGH TO'/
     1       ' BOTTOM OF DOME TO PERMIT "REFLECTING" THE'/
     1       ' TORI-ELLIPSOIDAL SEGMENT. ZA = ',1PE12.4,'. ZA MUST'/
     1       ' BE EQUAL TO ZERO.'/
     1       ' RUN WILL NOW ABORT IN GEOM4. PLEASE RESET ZA.'/)
               CALL ERREX
            ENDIF
            IPROSS = 1
C BEG JULY 1996
C           RDIFF = R2 - ALPHAT
C           R1 = ALPHAT - RDIFF
            R1 = ALPHAT - XMAX
            R2 = ALPHAT
            Z1 = ZB
            Z2 = ZA
C END JULY 1996
         ENDIF
         IF (IPROSS.EQ.0) THEN
            WRITE(IFILE4,265)
  265       FORMAT(/' SOMETHING IS WRONG WITH YOUR INPUT IN GEOM4.'/
     1              ' PLEASE TRY AGAIN. TORI-ELLIPSOIDAL REFLECTING'/
     1              ' NOT PERMITTED FOR THE INPUT DATA YOU SUPPLIED.'/
     1              ' CHANGE YOUR ZA AND/OR ZB INPUT')
            CALL ERREX
         ENDIF
 1000 CONTINUE
      ENDIF
C END NOV 1995
C
      RETURN
      END
C=DECK      REFSUR
      SUBROUTINE REFSUR
C+---------------------------------------------------------------------+
C+---------------------------------------------------------------------+
C
C  PURPOSE IS TO ASK QUESTIONS RELATIVE TO REFERENCE SURFACE LOCATION
C  RELATIVE TO MATERIAL IN SHELL WALL.
C
      COMMON/PRMFIL/IFILE,IFILE2,IOUT,IPRM(5)
      COMMON/PRMOUT/IFILE3,IFILE4
      COMMON/INDAT/INFILE
      CHARACTER*4 ANSOUT,CHARAC
      LOGICAL ANSL1
C
      WRITE(IOUT,5)
    5 FORMAT(6X,'H',9X,'$ REFERENCE SURFACE LOCATION RELATIVE TO WALL')
C
   10 CONTINUE
      REWIND IFILE2
      CALL DATUM(IFILE2,141,1,2,NTYPEZ,REALL,CHARAC,IOUT,0,1)
      IF (NTYPEZ.NE.1.AND.NTYPEZ.NE.3) THEN
       WRITE(6,*)' NTYPEZ MUST BE EITHER   1    OR   3  '
       BACKSPACE(IOUT)
       GO TO 10
      ENDIF
      IPRM(1) = 142
      IPRM(2) = 143
C
      GO TO (30,60,80),NTYPEZ     
30    CONTINUE    
      CALL DATUM(IFILE2,142,1,2,NZVALU,REALL,CHARAC,IOUT,0,1)
      IF (NZVALU.LT.2.OR.NZVALU.GT.20) THEN
       WRITE(6,*)' NZVALU SHOULD BE IN THE RANGE FROM 2 TO 20'
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 30
      ENDIF
      CALL STAQ(NZVALU)
C
      DO 55 J = 1,NZVALU
      IPROMP = 1
      IF (J.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,146,1,2,INT,ZVAL,CHARAC,IOUT,J,IPROMP)
   55 CONTINUE
C     
      GO TO 120   
   60 CONTINUE
      GO TO 120
80    CONTINUE    
      CALL DATUM(IFILE2,147,1,2,INT,ZVAL,CHARAC,IOUT,0,1)
120   CONTINUE    
C
      REWIND IFILE3
      CALL DATUM(IFILE3,601,1,1,INT,REALL,ANSOUT,IOUT,0,1)
      IF (ANSL1('N',ANSOUT,INFILE)) RETURN
      RETURN
      END
C=DECK      STAQ
      SUBROUTINE STAQ(NPOINT)
C+---------------------------------------------------------------------+
C+---------------------------------------------------------------------+
C
C  PURPOSE IS TO ESTABLISH CALLOUT POINTS ALONG MERIDIAN OF SHELL
C
      COMMON/PRMFIL/IFILE,IFILE2,IOUT,IPRM(5)
      COMMON/PRMOUT/IFILE3,IFILE4
      COMMON/INDAT/INFILE
      COMMON/SEGEND/R1,Z1,R2,Z2,IFLAG1,IFLAG2,IFLAG3,IFLAG4,IFLAG5
      CHARACTER*4 CHARAC
C
   10 CONTINUE
      CALL DATUM(IFILE2,IPRM(2),1,2,NTYPE,REALL,CHARAC,IOUT,0,1)
      IF (NTYPE.NE.2.AND.NTYPE.NE.3) THEN
       WRITE(6,*)' NTYPE MUST BE EITHER   2   OR   3'
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 10
      ENDIF
      IF (NTYPE.EQ.2.AND.IFLAG1.NE.0) THEN
       ZLONG = (ABS(Z1) + ABS(Z2))/2.
       DIFF = 0.
       IF (ZLONG.NE.0.) DIFF = ABS(Z2-Z1)/ZLONG
C BEG 7 MARCH 1989
       IF (DIFF.LT.0.0001) THEN
C END 7 MARCH 1989
         WRITE(6,*)' AXIAL COORDINATE IS UNSUITABLE CHOICE FOR'
         WRITE(6,*)' MERIDIONAL CALLOUTS SINCE Z2=Z1. CHOOZE NTYPE = 3'
         BACKSPACE(IOUT)
         REWIND IFILE2
         GO TO 10
       ENDIF
      ENDIF
      IF (NTYPE.EQ.3.AND.IFLAG1.NE.0) THEN
       RLONG = (ABS(R1) + ABS(R2))/2.
       DIFF = 0.
       IF (RLONG.NE.0.) DIFF = ABS(R2-R1)/RLONG
C BEG 7 MARCH 1989
       IF (DIFF.LT.0.0001) THEN
C END 7 MARCH 1989
         WRITE(6,*)' RADIAL COORDINATE IS UNSUITABLE CHOICE FOR'
         WRITE(6,*)' MERIDIONAL CALLOUTS SINCE R2=R1. CHOOZE NTYPE = 2'
         BACKSPACE(IOUT)
         REWIND IFILE2
         GO TO 10
       ENDIF
      ENDIF
      GO TO (40,50,70),NTYPE
   40 CONTINUE
      GO TO 130
   50 CONTINUE
      DO 55 J = 1,NPOINT
      IPROMP = 1
      IF (J.GT.1) IPROMP = 0
   52 CONTINUE
      CALL DATUM(IFILE2,IPRM(2)+1,1,2,INT,Z,CHARAC,IOUT,J,IPROMP)
      IF (J.EQ.1.AND.IFLAG1.NE.0.AND.IFLAG2.EQ.0) THEN
       ZLONG = (ABS(Z1) + ABS(Z))/2.
       IF (ZLONG.EQ.0.) GO TO 55
       DIFF = ABS(Z1 - Z)/ZLONG
       IF (DIFF.LT.0.001) GO TO 55
       WRITE(6,53) Z1
   53  FORMAT(/' FIRST CALLOUT MUST CORRESPOND TO THE BEGINNING OF'/
     1         ' THE SEGMENT,  WHICH IS AT AXIAL STATION Z =',1PE12.4/)
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 52
      ENDIF
C
      IF (J.EQ.NPOINT.AND.IFLAG1.NE.0.AND.IFLAG2.EQ.0) THEN
       ZLONG = (ABS(Z2) + ABS(Z))/2.
       IF (ZLONG.EQ.0.) GO TO 55
       DIFF = ABS(Z2 - Z)/ZLONG
       IF (DIFF.LT.0.001) GO TO 55
       WRITE(6,54) Z2
   54  FORMAT(/' LAST CALLOUT MUST CORRESPOND TO THE END OF'/
     1         ' THE SEGMENT,  WHICH IS AT AXIAL STATION Z =',1PE12.4/)
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 52
      ENDIF
C
   55 CONTINUE
      GO TO 130   
   70 CONTINUE
      DO 75 J = 1,NPOINT
      IPROMP = 1
      IF (J.GT.1) IPROMP = 0
   72 CONTINUE
      CALL DATUM(IFILE2,IPRM(2)+2,1,2,INT,R,CHARAC,IOUT,J,IPROMP)
      IF (J.EQ.1.AND.IFLAG1.NE.0.AND.IFLAG2.EQ.0) THEN
       RLONG = ABS(R1+R)/2.
       IF (RLONG.EQ.0.) GO TO 75
       DIFF = ABS(R1 - R)/RLONG
       IF (DIFF.LT.0.001) GO TO 75
       WRITE(6,73) R1
   73  FORMAT(/' FIRST CALLOUT MUST CORRESPOND TO THE BEGINNING OF'/
     1         ' THE SEGMENT, WHICH IS AT RADIAL STATION R =',1PE12.4/)
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 72
      ENDIF
C
      IF (J.EQ.NPOINT.AND.IFLAG1.NE.0.AND.IFLAG2.EQ.0) THEN
       RLONG = ABS(R2+R)/2.
       IF (RLONG.EQ.0.) GO TO 75
       DIFF = ABS(R2 - R)/RLONG
       IF (DIFF.LT.0.001) GO TO 75
       WRITE(6,74) R2
   74  FORMAT(/' LAST CALLOUT MUST CORRESPOND TO THE END OF'/
     1         ' THE SEGMENT, WHICH IS AT RADIAL STATION R =',1PE12.4/)
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 72
      ENDIF
C
   75 CONTINUE
130   CONTINUE    
      RETURN
      END   
C=DECK      IMPERQ
      SUBROUTINE IMPERQ
C+---------------------------------------------------------------------+
C+---------------------------------------------------------------------+
C
C  PURPOSE IS TO ASK QUESTIONS RELATIVE TO AXISYMMETRIC IMPERFECTION
C
      COMMON/PRMFIL/IFILE,IFILE2,IOUT,IPRM(5)
      COMMON/PRMOUT/IFILE3,IFILE4
      COMMON/INDAT/INFILE
      CHARACTER*4 CHARAC
C
      WRITE(IOUT,5)
    5 FORMAT(6X,'H',9X,'$ IMPERFECTION SHAPE FOLLOWS...')
      REWIND IFILE2
C BEG MARCH 1990   (Following statement is commented out...)
C     CALL DATUM(IFILE2,132,0,0,INT,REALL,CHARAC,IOUT,0,1)
C END MARCH 1990
      CALL DATUM(IFILE2,133,1,1,IMP,REALL,CHARAC,IOUT,0,1)
C
      IF (IMP.EQ.0) GO TO 200  
C
      CALL DATUM(IFILE2,134,1,2,ITYPE,REALL,CHARAC,IOUT,0,1)
      GO TO (30,130,170),ITYPE
30    CONTINUE    
C     RANDOM SERIES OF SINUSOIDAL IMPERFECTIONS 
C     
      CALL DATUM(IFILE2,135,1,1,INT,FM   ,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,136,1,1,INT,C    ,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,137,1,1,INT,FLMIN,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,138,1,1,INT,FLMAX,CHARAC,IOUT,0,1)
      GO TO 180   
  130 CONTINUE
C     
C     IMPERFECTION IS SIMPLE SINE WAVE    
C     
      CALL DATUM(IFILE2,139,1,1,INT,W0    ,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,140,1,2,INT,WLNGTH,CHARAC,IOUT,0,1)
      GO TO 180   
170   CONTINUE    
C     DUMMY POSITION ,  TO BE FILLED IN BY USER.
C BEG DEC 1992
C  IMPERFECTION IS DETERMINISTIC SUM OF SINUSOIDS.
      CALL DATUM(IFILE2,135,1,1,INT,FM   ,CHARAC,IOUT,0,1)
      M = FM
      I = 0
171   CONTINUE
      I = I + 1
      IF (I.GT.M) GO TO 173
      REWIND IFILE2
      CALL DATUM(IFILE2,139,1,1,INT,W0    ,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,140,1,2,INT,WLNGTH,CHARAC,IOUT,0,1)
      GO TO 171
173   CONTINUE
C END DEC 1992
180   CONTINUE    
200   CONTINUE
      RETURN
      END   
C=DECK      RINGS
      SUBROUTINE RINGS(NRINGS)
C+---------------------------------------------------------------------+
C+---------------------------------------------------------------------+
C
C  PURPOSE IS TO ASK QUESTIONS RELATIVE TO DISCRETE RINGS
C
      COMMON/PRMFIL/IFILE,IFILE2,IOUT,IPRM(5)
      COMMON/PRMOUT/IFILE3,IFILE4
      COMMON/INDAT/INFILE
      COMMON/SEGEND/R1,Z1,R2,Z2,IFLAG1,IFLAG2,IFLAG3,IFLAG4,IFLAG5
      CHARACTER*4 CHARAC
      DIMENSION L(3),T(3),Y(3)
      DIMENSION NTYPER(50)
      REAL IX,IY,IXY
C
      WRITE(IOUT,2)
    2 FORMAT(6X,'H',9X,'$ DISCRETE RING INPUT FOLLOWS...')
    3 CONTINUE
      REWIND IFILE2
      CALL DATUM(IFILE2,148,1,2,NRINGS,REALL,CHARAC,IOUT,0,1)
      IF (NRINGS.EQ.0) GO TO 200
      IF (NRINGS.GT.20) THEN
      WRITE(6,*)' A MAXIMUM OF 20 RINGS IS ALLOWED IN ONE SEGMENT'
      BACKSPACE(IOUT)
      GO TO 3
      ENDIF
C
      IPRM(2)= 149
      IFLAG2 = 1
      CALL STAQ(NRINGS)
      IFLAG2 = 0
C
      DO 65 J = 1,NRINGS
      IPROMP = 1
      IF (J.GT.1) IPROMP = 0
   64 CONTINUE
      CALL DATUM(IFILE2,152,1,2,NTYPER(J),REALL,CHARAC,IOUT,J,IPROMP)
      IF (NTYPER(J).EQ.3) THEN
      WRITE(6,*)' NTYPER MUST BE  0  or  1  or  2  or  4  or  5  '
      BACKSPACE(IOUT)
      REWIND IFILE2
      GO TO 64
      ENDIF
   65 CONTINUE
C
      DO 190 J=1,NRINGS
      NT = NTYPER(J)
      IF (NT.EQ.0) NT = 3
      GO TO (70,80,90,100,100),NT
C
C     RING CROSS SECTION ORIENTED IN PLANE OF PARALLEL CIRCLE.
   70 CONTINUE
      REWIND IFILE2
      CALL DATUM(IFILE2,153,1,1,INT,ER  ,CHARAC,IOUT,J,1)
      CALL DATUM(IFILE2,154,1,1,INT,AREA,CHARAC,IOUT,J,1)
      CALL DATUM(IFILE2,155,1,1,INT,IY  ,CHARAC,IOUT,J,1)
      CALL DATUM(IFILE2,156,1,1,INT,IX  ,CHARAC,IOUT,J,1)
      CALL DATUM(IFILE2,157,1,1,INT,IXY ,CHARAC,IOUT,J,1)
      CALL DATUM(IFILE2,158,1,1,INT,E1  ,CHARAC,IOUT,J,1)
      CALL DATUM(IFILE2,159,1,1,INT,E2  ,CHARAC,IOUT,J,1)
      CALL DATUM(IFILE2,160,1,1,INT,GJ  ,CHARAC,IOUT,J,1)
      CALL DATUM(IFILE2,161,1,1,INT,RM  ,CHARAC,IOUT,J,1)
C
      GO TO 190
C
C     RING CROSS SECTION ORIENTED NORMAL AND TANGENTIAL TO SHELL MERIDIA
   80 CONTINUE
      REWIND IFILE2
      CALL DATUM(IFILE2,162,1,1,INT,ER  ,CHARAC,IOUT,J,1)
      CALL DATUM(IFILE2,163,1,1,INT,AREA,CHARAC,IOUT,J,1)
      CALL DATUM(IFILE2,164,1,1,INT,FIS ,CHARAC,IOUT,J,1)
      CALL DATUM(IFILE2,165,1,1,INT,FIN ,CHARAC,IOUT,J,1)
      CALL DATUM(IFILE2,166,1,1,INT,FISN,CHARAC,IOUT,J,1)
      CALL DATUM(IFILE2,167,1,1,INT,ZC  ,CHARAC,IOUT,J,1)
      CALL DATUM(IFILE2,168,1,1,INT,SC  ,CHARAC,IOUT,J,1)
      CALL DATUM(IFILE2,169,1,1,INT,GJ  ,CHARAC,IOUT,J,1)
      CALL DATUM(IFILE2,170,1,1,INT,RM  ,CHARAC,IOUT,J,1)
C
      GO TO 190
90    CONTINUE
C
C     NO RING HERE.
C
      GO TO 190
C
  100 CONTINUE
      REWIND IFILE2
      CALL DATUM(IFILE2,171,1,1,INT,L(1)  ,CHARAC,IOUT,J,1)
      CALL DATUM(IFILE2,172,1,1,INT,L(2)  ,CHARAC,IOUT,J,1)
      CALL DATUM(IFILE2,173,1,1,INT,L(3)  ,CHARAC,IOUT,J,1)
      CALL DATUM(IFILE2,174,1,1,INT,T(1)  ,CHARAC,IOUT,J,1)
      CALL DATUM(IFILE2,175,1,1,INT,T(2)  ,CHARAC,IOUT,J,1)
      CALL DATUM(IFILE2,176,1,1,INT,T(3)  ,CHARAC,IOUT,J,1)
      CALL DATUM(IFILE2,177,1,1,INT,E     ,CHARAC,IOUT,J,1)
      CALL DATUM(IFILE2,178,1,1,INT,U     ,CHARAC,IOUT,J,1)
      CALL DATUM(IFILE2,179,1,1,INT,X1P   ,CHARAC,IOUT,J,1)
      CALL DATUM(IFILE2,180,1,1,INT,Y(1)  ,CHARAC,IOUT,J,1)
      CALL DATUM(IFILE2,181,1,1,INT,Y(2)  ,CHARAC,IOUT,J,1)
      CALL DATUM(IFILE2,182,1,1,INT,Y(3)  ,CHARAC,IOUT,J,1)
      CALL DATUM(IFILE2,183,1,1,INT,RM    ,CHARAC,IOUT,J,1)
C
  190 CONTINUE
  200 CONTINUE
      RETURN
      END
C=DECK      LINLOD
      SUBROUTINE LINLOD(INDIC,NRINGS,THETAM)
C+---------------------------------------------------------------------+
C+---------------------------------------------------------------------+
C
C  PURPOSE IS TO ASK QUESTIONS RELATIVE TO LINE LOADS.
C
      COMMON/PRMFIL/IFILE,IFILE2,IOUT,IPRM(5)
      COMMON/PRMOUT/IFILE3,IFILE4
      COMMON/INDAT/INFILE
      COMMON/SEGEND/R1,Z1,R2,Z2,IFLAG1,IFLAG2,IFLAG3,IFLAG4,IFLAG5
      CHARACTER*4 CHARAC
C
      WRITE(IOUT,2)
    2 FORMAT(6X,'H',9X,'$ LINE LOAD INPUT FOLLOWS...')
   10 CONTINUE
      REWIND IFILE2
      CALL DATUM(IFILE2,192,0,0,INT,REALL,CHARAC,IOUT,0,1)
C
      LINAB = 1
      LINTYP = 0
      LMECH  = 0
      ILOOP  = 0
      IF (INDIC.NE.3) GO TO 15
   11 CONTINUE
      CALL DATUM(IFILE2,194,1,2,LINAB,REALL,CHARAC,IOUT,0,1)
      IF (LINAB.GT.3) THEN
       WRITE(6,*)' LINAB MUST BE  0  or  1  or  2  or  3  '
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 11
      ENDIF
      IF (LINAB.EQ.1.OR.LINAB.EQ.3)
     1CALL DATUM(IFILE2,196,0,0,INT,REALL,CHARAC,IOUT,0,1)
      IF (LINAB.EQ.2)
     1CALL DATUM(IFILE2,198,0,0,INT,REALL,CHARAC,IOUT,0,1)
   15 CONTINUE
C
      INDXAB = 1
      IF (ILOOP.EQ.2.OR.LINAB.EQ.2) INDXAB = 2
      LSET = 1
      IF (ILOOP.EQ.2.OR.LINAB.EQ.2) LSET   = 4
C
      IF (LINAB.EQ.0) GO TO 18
      IF (LSET.EQ.1.AND.INDIC.GE.3) WRITE(6,13)
   13 FORMAT(/' LINE LOADS FOR LOAD SYSTEM "A"...')
      IF (LSET.EQ.4) WRITE(6,14)
   14 FORMAT(/' LINE LOADS FOR LOAD SYSTEM "B"...')
      IF (LSET.EQ.1.AND.INDIC.GE.3) WRITE(IOUT,16)
   16 FORMAT(6X,'H',9X,'$ LINE LOAD INPUT FOR LOAD SET "A" FOLLOWS')
      IF (LSET.EQ.4) WRITE(IOUT,17)
   17 FORMAT(6X,'H',9X,'$ LINE LOAD INPUT FOR LOAD SET "B" FOLLOWS')
   18 CONTINUE
C
      IF (ILOOP.EQ.2)
     1CALL DATUM(IFILE2,198,0,0,INT,REALL,CHARAC,IOUT,0,1)
   19 CONTINUE
      IF (LINAB.NE.0)
     1CALL DATUM(IFILE2,201,1,2,LINTYP,REALL,CHARAC,IOUT,0,1)
      IF (LINTYP.GT.3) THEN
       WRITE(6,*)' LINTYP MUST BE  0  or  1  or  2  or  3  '
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 19
      ENDIF
C
C     LINTYP = 0 - - - NO LOAD
C     LINTYP = 1 - - - MECHANICAL LOADS ONLY
C     LINTYP = 2 - - - THERMAL LINE LOADS ONLY
C     LINTYP = 3 - - - MECHANICAL AND THERMAL LINE LOADS
C
      IF (LINTYP.EQ.0) GO TO 41
C
      IF (NRINGS.EQ.0) THEN
        WRITE(6,*)' LINE LOADS CAN ONLY BE APPLIED AT DISCRETE RINGS.'
        WRITE(6,*)' IF YOU HAVE LINE LOADS IN THIS SEGMENT, YOU MUST'
        WRITE(6,*)' PUT A "PHONY" RING AT EACH MERIDIONAL STATION'
        WRITE(6,*)' WHERE THE LINE LOADS ARE APPLIED. '
        CALL ERREX
        GO TO 100
      ENDIF
      IF (IFLAG1.EQ.0) THEN
        WRITE(6,20) NRINGS
   20   FORMAT(/' WARNING: DO NOT FORGET TO MODIFY THE NUMBER OF'/
     1  ' RINGS, NRINGS=',I3,' IF YOU ARE CHANGING NRINGS IN ORDER TO'/
     1  ' ACCOMMODATE A NEW LINE LOAD. YOU CAN DO THIS BY DOING'//
     1  '                 MODIFY'//
     1  ' AGAIN ON THIS SEGMENT AFTER YOU COMPLETE THE CURRENT MODIFY.'/
     1    )
      ENDIF
C
      IF (LINTYP.EQ.2) GO TO 35
      CALL DATUM(IFILE2,202,0,0,INT,REALL,CHARAC,IOUT,0,1)
      IF (INDIC.NE.3) GO TO 32
C
C    READ NONSYMMETRIC MECHANICAL LINE LOADS...
C
      CALL LOADRQ(1,4,NRINGS,INDIC,203,LMECH,LSET,THETAM)
C
      GO TO 35
C
   32 CONTINUE
C    READ FIXED AXISYMMETRICAL MECHANICAL LINE LOADS...
C
      CALL LOADRQ(1,4,NRINGS,INDIC,203,LMECH,LSET,THETAM)
C
      IF (LSET.NE.1) GO TO 35
C
C    READ VARIABLE AXISYMMETRIC MECHANICAL LINE LOADS OR MECHANICAL
C    LINE LOAD INCREMENTS...
C
      CALL LOADRQ(1,4,NRINGS,INDIC,211,LMECH,LSET,THETAM)
C
   35 CONTINUE
      IF (LINTYP.EQ.1) GO TO 41
C
C    READ THERMAL LINE LOADS...
C
      CALL DATUM(IFILE2,230,0,0,INT,REALL,CHARAC,IOUT,0,1)
C
      IF (INDIC.NE.3) GO TO 37
C
C    READ NONSYMMETRIC THERMAL LINE LOADS...
C
      CALL LOADRQ(2,3,NRINGS,INDIC,231,LMECH,LSET,THETAM)
C
      GO TO 41
C
   37 CONTINUE
C    READ AXISYMMETRIC THERMAL LINE LOADS...
C
      CALL LOADRQ(2,3,NRINGS,INDIC,231,LMECH,LSET,THETAM)
C
   41 CONTINUE
C
      IF (LINAB.NE.3) GO TO 42
      IF (ILOOP.EQ.2) GO TO 42
      ILOOP = 2
      REWIND IFILE2
      GO TO 15
   42 CONTINUE
C
  100 CONTINUE
      RETURN
      END
C=DECK      DISLOD
      SUBROUTINE DISLOD(INDIC,THETAM)
C+---------------------------------------------------------------------+
C+---------------------------------------------------------------------+
C
C  PURPOSE IS TO ASK QUESTIONS RELATIVE TO DISTRIBUTED LOADS.
C
      COMMON/PRMFIL/IFILE,IFILE2,IOUT,IPRM(5)
      COMMON/PRMOUT/IFILE3,IFILE4
      COMMON/INDAT/INFILE
      CHARACTER*4 CHARAC
C
      WRITE(IOUT,2)
    2 FORMAT(6X,'H',9X,'$ DISTRIBUTED LOAD INPUT FOLLOWS...')
      REWIND IFILE2
   10 CONTINUE
      CALL DATUM(IFILE2,240,1,2,IDISAB,REALL,CHARAC,IOUT,0,1)
      IF (IDISAB.GT.3) THEN
       WRITE(6,*)' IDISAB MUST BE EITHER  0  or  1  or  2  or  3  '
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 10
      ENDIF
      NLTYPE = 0
      LMECH  = 0
      IF (IDISAB.EQ.1.OR.IDISAB.EQ.3)
     1CALL DATUM(IFILE2,242,0,0,INT,REALL,CHARAC,IOUT,0,1)
      IF (IDISAB.EQ.2)
     1CALL DATUM(IFILE2,244,0,0,INT,REALL,CHARAC,IOUT,0,1)
      ILOOP = 1
   45 CONTINUE
C
      INDXAB = 1
      IF (ILOOP.EQ.2.OR.IDISAB.EQ.2) INDXAB = 2
      LSET = 7
      IF (ILOOP.EQ.2.OR.IDISAB.EQ.2) LSET   = 10
      ILPRE = 1
      IF (ILOOP.EQ.2.OR.IDISAB.EQ.2) ILPRE = 4
      IF (IDISAB.EQ.0) GO TO 49
      IF (ILPRE.EQ.1) WRITE(6,43)
   43 FORMAT(/' SURFACE LOADS FOR LOAD SYSTEM "A"...')
      IF (ILPRE.EQ.4) WRITE(6,44)
   44 FORMAT(/' SURFACE LOADS FOR LOAD SYSTEM "B"...')
      IF (ILPRE.EQ.1) WRITE(IOUT,46)
   46 FORMAT(6X,'H',9X,'$ SURFACE LOAD INPUT FOR LOAD SET "A" FOLLOWS')
      IF (ILPRE.EQ.4) WRITE(IOUT,47)
   47 FORMAT(6X,'H',9X,'$ SURFACE LOAD INPUT FOR LOAD SET "B" FOLLOWS')
   49 CONTINUE
C
      IF (ILOOP.EQ.2)
     1CALL DATUM(IFILE2,244,0,0,INT,REALL,CHARAC,IOUT,0,1)
   11 CONTINUE
      IF (IDISAB.NE.0)
     1CALL DATUM(IFILE2,250,1,2,NLTYPE,REALL,CHARAC,IOUT,0,1)
      IF (NLTYPE.GT.3) THEN
       WRITE(6,*)' NLTYPE MUST BE EITHER  0  or  1  or  2  or  3  '
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 11
      ENDIF
C
C     NLTYPE = 0 - - - NO LOAD
C     NLTYPE = 1 - - - MECHANICAL LOADS ONLY
C     NLTYPE = 2 - - - THERMAL DISTRIBUTED LOADS ONLY
C     NLTYPE = 3 - - - MECHANICAL AND THERMAL DISTRIBUTED LOADS
C
      IF (NLTYPE.EQ.0) GO TO 41
      IF (NLTYPE.EQ.2) GO TO 36
   20 CONTINUE
      CALL DATUM(IFILE2,252,1,2,NPSTAT,REALL,CHARAC,IOUT,0,1)
      IF (NPSTAT.EQ.0.AND.INDIC.NE.3) GO TO 30
      IF (NPSTAT.LT.2.OR.NPSTAT.GT.20) THEN
       WRITE(6,*)' NPSTAT MUST BE IN THE RANGE FROM  2  TO  20 '
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 20
      ENDIF
C
      IF (INDIC.NE.3) GO TO 32
C
C    READ NONSYMMETRIC MECHANICAL DISTRIBUTED LOADS...
C
      CALL LOADRQ(3,3,NPSTAT,INDIC,255,LMECH,LSET,THETAM)
C
      GO TO 35
C
   32 CONTINUE
C    READ FIXED AXISYMMETRICAL MECHANICAL DISTRIBUTED LOADS...
C
      CALL LOADRQ(3,3,NPSTAT,INDIC,255,LMECH,LSET,THETAM)
C
      GO TO 35
   30 CONTINUE
      LMECH = 1
      CALL DATUM(IFILE2,253,1,1,INT,P11,CHARAC,IOUT,0,1)
C
      CALL DATUM(IFILE2,254,1,1,INT,P21,CHARAC,IOUT,0,1)
C
      GO TO 36
C
   35 CONTINUE
      IPRM(2) = 264
      CALL STAQ(NPSTAT)
   36 CONTINUE
C
      IF (NLTYPE.EQ.1) GO TO 41
C
C    READ THERMAL DISTRIBUTED LOADS...
C
      CALL DATUM(IFILE2,270,0,0,INT,REALL,CHARAC,IOUT,0,1)
C
  102 CONTINUE
      CALL DATUM(IFILE2,271,1,2,NTSTAT,REALL,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,272,1,2,NTGRAD,REALL,CHARAC,IOUT,0,1)
C
      IF (NTSTAT.EQ.0.AND.INDIC.NE.3) GO TO 120
      IF (NTSTAT.LT.2.OR.NTSTAT.GT.20) THEN
       WRITE(6,*)' NTSTAT MUST BE IN THE RANGE FROM  2  TO  20  '
       BACKSPACE(IOUT)
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 102
      ENDIF
C
      IF (INDIC.NE.3) GO TO 37
C
C    READ NONSYMMETRIC THERMAL DISTRIBUTED LOADS...
C
      CALL LOADRQ(4,3,NTSTAT,INDIC,276,LMECH,LSET,THETAM)
C
      GO TO 38
C
   37 CONTINUE
C
C    READ AXISYMMETRIC THERMAL DISTRIBUTED LOADS...
C
      CALL LOADRQ(4,3,NTSTAT,INDIC,276,LMECH,LSET,THETAM)
C
   38 CONTINUE
      IPRM(2) = 284
      CALL STAQ(NTSTAT)
      GO TO 41
C
120   CONTINUE
      IF (NLTYPE.EQ.2) LMECH = 0
      CALL DATUM(IFILE2,273,1,1,INT,T11,CHARAC,IOUT,0,1)
C
      CALL DATUM(IFILE2,274,1,1,INT,T21,CHARAC,IOUT,0,1)
C
      CALL DATUM(IFILE2,275,1,1,INT,T31,CHARAC,IOUT,0,1)
C
   41 CONTINUE
C
      IF (IDISAB.NE.3) GO TO 42
      IF (ILOOP.EQ.2) GO TO 42
      ILOOP = 2
      REWIND IFILE2
      GO TO 45
   42 CONTINUE
C
      RETURN
      END
C=DECK      LOADRQ
      SUBROUTINE LOADRQ(LTYPE,LKIND,KSTATN,INDIC,JPRM,LMECH,LSET,THETAM)
C+---------------------------------------------------------------------+
C+---------------------------------------------------------------------+
C
C  PURPOSE IS TO READ LOADS AND   KSTATN  STATIONS.
C
      COMMON/PRMFIL/IFILE,IFILE2,IOUT,IPRM(5)
      COMMON/PRMOUT/IFILE3,IFILE4
      COMMON/INDAT/INFILE
      CHARACTER*4 CHARAC
      DIMENSION NLOAD(4),P1(100),P2(100)
C
      IF (KSTATN.EQ.0) GO TO 90
      IF (INDIC.EQ.3) THEN
   10 CONTINUE
      REWIND IFILE2
      CALL DATUM(IFILE2,JPRM,1,2,NTYPEL,REALL,CHARAC,IOUT,0,1)
      IF (NTYPEL.NE.4) THEN
       WRITE(6,*)' NTYPEL SHOULD BE  4  '
       BACKSPACE(IOUT)
       GO TO 10
      ENDIF
      ENDIF
      NLOAD(4) = 0
      DO 23 I = 1,LKIND
      IPROMP = JPRM + I
   22 CONTINUE
      CALL DATUM(IFILE2,IPROMP,1,1,NLOAD(I),REALL,CHARAC,IOUT,0,1)
      IF (NLOAD(I).NE.0.AND.NLOAD(I).NE.1) THEN
       WRITE(6,*)' NLOAD  MUST BE EITHER  0  OR  1  '
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 22
      ENDIF
   23 CONTINUE
      IF (LTYPE.EQ.1.OR.LTYPE.EQ.3) CALL LODMCQ(NLOAD,LMECH)
      JPRMN = JPRM + LKIND
      IF (NLOAD(2).NE.0) NLOAD(2) = -1
C     AXIAL DISTRIBUTIONS
      DO 50 M=1,LKIND
      NHLP = 2
      IF (NLOAD(M).EQ.0) GO TO 30
      DO 26 L = 1,KSTATN
      IPROMP = 1
      IF (L.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,JPRMN+M,1,NHLP,INT,P,CHARAC,IOUT,L,IPROMP)
   26 CONTINUE
      GO TO 50
   30 CONTINUE
50    CONTINUE
      IF (INDIC.NE.3) GO TO 90
C     CIRCUMFERENTIAL DISTRIBUTION DEVELOPED
      IF (NTYPEL.EQ.4) GO TO 60
C     HARMONIC AMPLITUDES READ IN
      JPRMN = JPRM + 2*LKIND
      IF (LKIND.EQ.4) JPRMN = JPRM + 4*LKIND
C BEG JAN 1993
C THIS BRANCH NEVER REACHED, SO SETTING NHARM = 1
      NHARM = 1
C END JAN 1993
      DO 52 L = 1,NHARM
      IPROMP = 1
      IF (L.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,JPRMN+1,1,2,INT,P1(L),CHARAC,IOUT,L,IPROMP)
   52 CONTINUE
C
      IF (LTYPE.EQ.2.OR.LTYPE.EQ.4) GO TO 90
      DO 55 L = 1,NHARM
      IPROMP = 1
      IF (L.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,JPRMN+2,1,1,INT,P2(L),CHARAC,IOUT,L,IPROMP)
   55 CONTINUE
      GO TO 90
60    CONTINUE
C     FOURIER SERIES DEVELOPED, GIVEN INPUT CIRCUMFERENTIAL DISTRIBUTION
      IF (LTYPE.EQ.2.OR.LTYPE.EQ.4) GO TO 53
      IF (NLOAD(1).EQ.0.AND.NLOAD(3).EQ.0.AND.NLOAD(4).EQ.0) GO TO 70
53    CONTINUE
      M = 1
      INDX = 1
      IF (LTYPE.EQ.1) WRITE (6,62)
   62 FORMAT(/' Next provide input for the circumferential variation'/
     1' of axial load V, radial load H, and meridional moment M in'/
     1' this segment. Note that all these three load components must'/
     1' have the same circumferential variation and this circumfer-'/
     1' ential variation must be the same for all the rings in this'/
     1' shell segment.'/)
      IF (LTYPE.EQ.2) WRITE (6,63)
   63 FORMAT(/' Next provide input for the circumferential variation'/
     1' of thermal line loads in this segment. Note that this circum-'/
     1' ferential variation must be the same for all the rings in this'/
     1' shell segment.'/)
      IF (LTYPE.EQ.3) WRITE(6,64)
   64 FORMAT(/' Next provide input for the circumferential variation'/
     1' of the axial component of traction PT and the normal pressure'/
     1' PN.   Note that both of these two distributed load components'/
     1' must have the same circumferential variation.'/)
      IF (LTYPE.EQ.4) WRITE(6,65)
   65 FORMAT(/' Next provide input for the circumferential variation'/
     1' of the temperature in this segment.'/)
C
      CALL FOURQ(P1(1),INDX,M,LTYPE,THETAM)
      IF (LTYPE.EQ.2.OR.LTYPE.EQ.4) GO TO 80
70    IF (NLOAD(2).EQ.0) GO TO 80
      M = 2
      INDX = -1
      IF (LTYPE.EQ.1) WRITE(6,72)
   72 FORMAT(/' Next provide input for the circumferential variation'/
     1' of the shear load S in this segment.  Note that this circum-'/
     1' ferential variation must be the same for all rings in this'/
     1' segment'/)
      IF (LTYPE.EQ.3) WRITE(6,74)
   74 FORMAT(/' Next provide input for the circumferential variation'/
     1' of the circumferential component of traction PC.'/)
C
      CALL FOURQ(P2(1),INDX,M,LTYPE,THETAM)
80    CONTINUE
90    CONTINUE
      RETURN
      END
C=DECK      FOURQ
      SUBROUTINE FOURQ(A,NLOAD,M,LTYPE,THETAM)
C+---------------------------------------------------------------------+
C+---------------------------------------------------------------------+
C     CALLED FROM LOADRQ
C
      DIMENSION XPLUS(100),XMINUS(100),YPLUS(100),YMINUS(100),A(20)
      COMMON/PRMFIL/IFILE,IFILE2,IOUT,IPRM(5)
      COMMON/PRMOUT/IFILE3,IFILE4
      COMMON/INDAT/INFILE
      CHARACTER*4 ANSOUT,CHARAC
      LOGICAL ANSL1
C
      REWIND IFILE2
    2 CONTINUE
      CALL DATUM(IFILE2,324,1,2,NX,REALL,CHARAC,IOUT,0,1)
      IF (NX.LT.2.OR.NX.GT.100) THEN
       WRITE(6,*)' NTHETA MUST BE IN THE RANGE FROM  2  TO  100  '
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 2
      ENDIF
   11 CONTINUE
      CALL DATUM(IFILE2,325,1,2,NOPT,REALL,CHARAC,IOUT,0,1)
      IF (NOPT.NE.1.AND.NOPT.NE.2.AND.NOPT.NE.3) THEN
       WRITE(6,*)' NOPT  MUST BE EITHER  1  or  2  or  3  '
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 11
      ENDIF
   12 CONTINUE
      CALL DATUM(IFILE2,326,1,2,NODD,REALL,CHARAC,IOUT,0,1)
      IF (NODD.NE.1.AND.NODD.NE.2.AND.NODD.NE.3) THEN
       WRITE(6,*)' NODD  MUST BE EITHER  1  or  2  or  3  '
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 12
      ENDIF
C     XPLUS = CIRCUMFERENTIAL STATION IN DEGREES
      DO 3 I = 1,NX
      IPROMP = 1
      IF (I.GT.1) IPROMP = 0
   13 CONTINUE
      CALL DATUM(IFILE2,327,1,2,INT,XPLUS(I),CHARAC,IOUT,I,IPROMP)
      IF (I.EQ.1) THEN
       IF (XPLUS(I).LT.-.001.OR.XPLUS(I).GT.0.001) THEN
        WRITE(6,*)' THE FIRST VALUE OF THETA MUST BE 0.0'
        BACKSPACE(IOUT)
        REWIND IFILE2
        GO TO 13
       ENDIF
      ENDIF
      IF (I.EQ.NX) THEN
       DIFF = ABS(THETAM - XPLUS(NX) )/THETAM
       IF (DIFF.GT.0.01) THEN
        WRITE(6,*)' THE LAST VALUE OF THETA MUST EQUAL THETAM'
        BACKSPACE(IOUT)
        REWIND IFILE2
        GO TO 13
       ENDIF
      ENDIF
    3 CONTINUE
C
      GO TO (50,60),NOPT
C     YPLUS,YMINUS = VALUES OF INPUT FUNCTION Y AT XPLUS AND XMINUS
C     STATIONS AROUND THE CIRCUMFERENCE OF THE SHELL
   50 CONTINUE
      DO 55 I = 1,NX
      IPROMP = 1
      IF (I.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,328,1,2,INT,YPLUS(I),CHARAC,IOUT,I,IPROMP)
   55 CONTINUE
      DO 56 I = 1,NX
      IPROMP = 1
      IF (I.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,329,1,2,INT,YMINUS(I),CHARAC,IOUT,I,IPROMP)
   56 CONTINUE
C
      GO TO 120
   60 CONTINUE
      DO 65 I = 1,NX
      IPROMP = 1
      IF (I.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,328,1,2,INT,YPLUS(I),CHARAC,IOUT,I,IPROMP)
   65 CONTINUE
C
120   CONTINUE
      REWIND IFILE3
      CALL DATUM(IFILE3,604,1,1,INT,REALL,ANSOUT,IOUT,0,1)
      REWIND IFILE2
      IF (ANSL1('N',ANSOUT,INFILE)) RETURN
      RETURN
      END
C=DECK      LODMCQ
      SUBROUTINE LODMCQ(NLOAD,LMECH)
C+---------------------------------------------------------------------+
C+---------------------------------------------------------------------+
C
C  PURPOSE IS TO DETERMINE A VALUE FOR LMECH FROM NLOAD(i), i=1,4
C
C  INPUT DATA...
C
C  NLOAD = ARRAY OF INDICATORS FOR LOADING TYPE
C          0 MEANS NO LOAD OF THAT TYPE
C          1 MEANS YES LOAD OF THAT TYPE
C
C  OUTPUT DATA...
C
C  LMECH = INDICATOR FOR WHETHER OR NOT SHEARING LOADS ARE PRESENT
C          WITH OR WITHOUT NONSHEARING LOADS
C          0 MEANS NO LOADS
C          1 MEANS NON SHEARING LOADS ONLY
C          2 MEANS SHEARING     LOADS ONLY
C          3 MEANS BOTH SHEARING LOADS AND NON SHEARING LOADS
C
      DIMENSION NLOAD(*)
C
      IF (NLOAD(2).EQ.0) GO TO 20
C
C  SHEARING LOAD PRESENT...
C
      IF (NLOAD(1).NE.0.OR.NLOAD(3).NE.0.OR.NLOAD(4).NE.0) THEN
         LMECH = 3
      ELSE
         LMECH = 2
      ENDIF
      GO TO 100
C
   20 CONTINUE
C
C     SHEARING LOAD ABSENT...
C
      IF (NLOAD(1).NE.0.OR.NLOAD(3).NE.0.OR.NLOAD(4).NE.0) THEN
         LMECH = 1
      ELSE
         LMECH = 0
      ENDIF
  100 CONTINUE
      RETURN
      END
C=DECK      GETPSQ
      SUBROUTINE GETPSQ(ISEG)
C+---------------------------------------------------------------------+
C+---------------------------------------------------------------------+
C  
C   QUESTIONS PERTAINING TO DIRECT INPUT OF PRESTRESS QUANTITIES...
C
      COMMON/PRMFIL/IFILE,IFILE2,IOUT,IPRM(5)
      COMMON/PRMOUT/IFILE3,IFILE4
      COMMON/INDAT/INFILE
      CHARACTER*4 ANSOUT,CHARAC
      LOGICAL ANSL1
C
      WRITE(IOUT,2)
    2 FORMAT(6X,'H',9X,'$ PREBUCKLING RESULTANTS INPUT FOLLOWS...')
      REWIND IFILE2
      CALL DATUM(IFILE2,310,0,0,INT,REALL,CHARAC,IOUT,0,1)
   10 CONTINUE
      CALL DATUM(IFILE2,311,1,2,NSTRES,REALL,CHARAC,IOUT,0,1)
      IF (NSTRES.LT.2.OR.NSTRES.GT.50) THEN
       WRITE(6,*)' NSTRESS MUST BE IN THE RANGE FROM  2  TO  50  '
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 10
      ENDIF
      CALL DATUM(IFILE2,312,1,2,NRLOAD,REALL,CHARAC,IOUT,0,1)
      IF (NSTRES.EQ.0) GO TO 60
   25 CONTINUE
      IPRM(2) = 313
      CALL STAQ(NSTRES)
C
      DO 50 J=1,2
C     STRESS(I) = N10 IF J = 1
C               = N20 IF J = 2
      NHLP = 2
      IF (J.EQ.2) NHLP = 1
      JPRM = 316
      IF (J.EQ.2) JPRM = 317
      DO 45 I = 1,NSTRES
      IPROMP = 1
      IF (I.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,JPRM,1,NHLP,INT,STRESS,CHARAC,IOUT,I,IPROMP)
   45 CONTINUE
C
50    CONTINUE
   60 CONTINUE
      IF (ISEG.NE.1) GO TO 110
      IF (NRLOAD.EQ.0) GO TO 110
      DO 85 I = 1,NRLOAD
      IPROMP = 1
      IF (I.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,318,1,2,IRING,REALL,CHARAC,IOUT,I,IPROMP)
   85 CONTINUE
C
      DO 87 I = 1,NRLOAD
      IPROMP = 1
      IF (I.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,319,1,1,INT,STRESS,CHARAC,IOUT,I,IPROMP)
   87 CONTINUE
C
110   CONTINUE
      REWIND IFILE3
      CALL DATUM(IFILE3,605,1,1,INT,REALL,ANSOUT,IOUT,0,1)
      IF (ANSL1('N',ANSOUT,INFILE)) RETURN
      RETURN
      END
C=DECK      SMEAR
      SUBROUTINE SMEAR
C+---------------------------------------------------------------------+
C+---------------------------------------------------------------------+
C
C   PURPOSE IS TO GET QUESTIONS FOR SMEARED STIFFENERS
C
      COMMON/PRMFIL/IFILE,IFILE2,IOUT,IPRM(5)
      COMMON/PRMOUT/IFILE3,IFILE4
      COMMON/INDAT/INFILE
      CHARACTER*4 ANSWER,ANSCON,ANSREC,CHARAC
      LOGICAL ANSL1
C
      WRITE(IOUT,2)
    2 FORMAT(6X,'H',9X,'$ SMEARED STIFFENER INPUT FOLLOWS...')
      REWIND IFILE2
C
C     IRECT1 = 1   RECTANGULAR STRINGERS
C     IRECT1 = 0  NON-RECTANGULAR STRINGERS
C     IRECT2 = 1  RECTANGULAR RINGS
C     IRECT2 = 0  NON-RECTANGULAR RINGS
C     IVAR1 = 1  STRINGER CROSS-SECTION PROPERTIES VARY ALONG MERIDIAN
C     IVAR2 = 1      RING CROSS-SECTION PROPERTIES VARY ALONG MERIDIAN
C     IVAR1 = 0  STRINGER CROSS-SECTION CONSTANT ALONG MERIDIAN
C     IVAR2 = 0      RING CROSS-SECTION CONSTANT ALONG MERIDIAN
C
      CALL DATUM(IFILE2,500,0,0,INT,REALL,CHARAC,IOUT,0,1)
      IRECT1 = 1
      IRECT2 = 1
      IVAR1  = 0
      IVAR2  = 0
      CALL DATUM(IFILE2,501,1,1,INT,REALL,ANSWER,IOUT,0,1)
      IF (ANSL1('N',ANSWER,INFILE)) GO TO 130
C
      CALL DATUM(IFILE2,502,1,1,N1,REALL,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,503,1,2,K1,REALL,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,504,1,1,INT,E1,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,505,1,1,INT,U1,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,506,1,1,INT,STIFMD,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,509,1,1,INT,REALL,ANSCON,IOUT,0,1)
      IF (ANSL1('Y',ANSCON,INFILE)) GO TO 80
C
C    STRINGER CROSS SECTION VARIES IN THE MERIDIONAL DIRECTION..
C
      IVAR1 = 1
   10 CONTINUE
      CALL DATUM(IFILE2,510,1,2,NSTATN,REALL,CHARAC,IOUT,0,1)
      IF (NSTATN.LT.2.OR.NSTATN.GT.20) THEN
       WRITE(6,*)' NSTATN MUST BE IN THE RANGE FROM  2  TO  20  '
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 10
      ENDIF
      IPRM(2) = 511
      CALL STAQ(NSTATN)
   80 CONTINUE
      CALL DATUM(IFILE2,514,1,1,INT,REALL,ANSREC,IOUT,0,1)
      IF (ANSL1('N',ANSREC,INFILE)) GO TO 90
C
C   STRINGER CROSS SECTIONS ARE RECTANGULAR...
C
      IF (ANSL1('Y',ANSCON,INFILE)) GO TO 85
C
C   RECTANGULAR CROSS SECTION OF STRINGER VARIES ALONG THE MERIDIAN..
C
      DO 83 K= 1,NSTATN
      IPROMP = 1
      IF (K.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,515,1,1,INT,T,CHARAC,IOUT,K,IPROMP)
   83 CONTINUE
      DO 84 K = 1,NSTATN
      IPROMP = 1
      IF (K.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,516,1,1,INT,H,CHARAC,IOUT,K,IPROMP)
   84 CONTINUE
C
      GO TO 130
C
   85 CONTINUE
C
C   RECTANGULAR CROSS SECTION IS CONSTANT ALONG THE MERIDIAN...
C
      CALL DATUM(IFILE2,521,1,1,INT,T1,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,522,1,1,INT,H1,CHARAC,IOUT,0,1)
      GO TO 130
C
   90 CONTINUE
      IRECT1 = 0
C
C   STRINGER CROSS SECTIONS ARE NOT RECTANGULAR...
C
      IF (ANSL1('Y',ANSCON,INFILE)) GO TO 100
C
C   STRINGER CROSS SECTION VARIES ALONG THE MERIDIAN...
C
      DO 92 K = 1,NSTATN
      IPROMP =1
      IF (K.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,517,1,2,INT,X,CHARAC,IOUT,K,IPROMP)
   92 CONTINUE
      DO 94 K = 1,NSTATN
      IPROMP = 1
      IF (K.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,518,1,1,INT,A,CHARAC,IOUT,K,IPROMP)
   94 CONTINUE
      DO 96 K = 1,NSTATN
      IPROMP = 1
      IF (K.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,519,1,2,INT,XI,CHARAC,IOUT,K,IPROMP)
   96 CONTINUE
      DO 98 K = 1,NSTATN
      IPROMP = 1
      IF (K.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,520,1,1,INT,XJ,CHARAC,IOUT,K,IPROMP)
   98 CONTINUE
C
C     SMEARED STRINGER PROPERTIES FOLLOW
C     NSTATN = NO. OF MERIDIONAL STATIONS FOR WHICH STRINGER PROPERTIES
C              ARE TO BE READ IN
C     N1 = NO. OF STRINGERS
C     K1 = 1  EXTERNAL STRINGERS
C     K1 = 0  INTERNAL STRINGERS
C     E1 = STRINGER MODULUS
C     U1 = STRINGER POISSON RATIO
C     STIFMD = STRINGER MATERIAL MASS DENSITY
C     T1 = STRINGER THICKNESS
C     H1 = STRINGER HEIGHT
C     XS = DISTANCE FROM NEUTRAL SURFACE OF STRINGER TO CLOSEST SHELL
C              SURFACE.
C     A1 = CROSS-SECTION AREA OF STRINGER
C     XI1 = STRINGER MOMENT OF INERTIA ABOUT ITS CENTROID
C     XJ1 = STRINGER TORSIONAL CONSTANT, J
C
C
      GO TO 130
C
  100 CONTINUE
C
C     NON-RECTANGULAR STRINGER CROSS SECTIONS ARE MERIDIONALLY CONSTANT.
C
      CALL DATUM(IFILE2,523,1,2,INT,XS,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,524,1,1,INT,A1,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,525,1,2,INT,XI1,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,526,1,1,INT,XJ1,CHARAC,IOUT,0,1)
C
130   CONTINUE
C
C
C     SMEARED RING PROPERTIES
C
C
C     K2 = 0  INTERNAL RINGS
C     K2 = 1  EXTERNAL RINGS
C     E2 =  RING MODULUS
C     U2 = RING POISSON RATIO
C     RGMD =  RING MASS DENSITY
C     D2 =  SPACING BETWEEN RINGS
C     T2 =  RING THICKNESS
C     H2 =  RING HEIGHT
C     NRINGS = NO. OF MERIDIONAL STATIONS FOR WHICH RING PROPERTIES
C              ARE READ IN
C     XR =  DISTANCE FROM NEUTRAL SURFACE OF RING TO CLOSEST SHELL
C              SURFACE
C     A2 =  RING CROSS-SECTION AREA
C     XI2 = RING MOMENT OF INERTIA ABOUT CENTROID
C     XJ2 = RING TORSION CONSTANT, J
C
      CALL DATUM(IFILE2,530,1,1,INT,REALL,ANSWER,IOUT,0,1)
      IF (ANSL1('N',ANSWER,INFILE)) GO TO 190
C
      CALL DATUM(IFILE2,531,1,2,K2,REALL,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,532,1,1,INT,E2,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,533,1,1,INT,U2,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,534,1,1,INT,RGMD,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,535,1,1,INT,REALL,ANSCON,IOUT,0,1)
      IF (ANSL1('Y',ANSCON,INFILE)) GO TO 135
C
C    RING CROSS SECTION VARIES IN THE MERIDIONAL DIRECTION..
C
      IVAR2 = 1
  134 CONTINUE
      CALL DATUM(IFILE2,536,1,2,NSTATN,REALL,CHARAC,IOUT,0,1)
      IF (NSTATN.LT.2.OR.NSTATN.GT.20) THEN
       WRITE(6,*)' NSTATN MUST BE IN THE RANGE FROM  2  TO  20  '
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 134
      ENDIF
      IPRM(2) = 537
      CALL STAQ(NSTATN)
  135 CONTINUE
      CALL DATUM(IFILE2,540,1,1,INT,REALL,ANSREC,IOUT,0,1)
      IF (ANSL1('N',ANSREC,INFILE)) GO TO 150
C
C   RING CROSS SECTIONS ARE RECTANGULAR...
C
      IF (ANSL1('Y',ANSCON,INFILE)) GO TO 140
C
C   RECTANGULAR CROSS SECTION OF STRINGER VARIES ALONG THE MERIDIAN..
C
      DO 136 K = 1,NSTATN
      IPROMP = 1
      IF (K.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,541,1,1,INT,D,CHARAC,IOUT,K,IPROMP)
  136 CONTINUE
      DO 137 K= 1,NSTATN
      IPROMP = 1
      IF (K.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,542,1,1,INT,T,CHARAC,IOUT,K,IPROMP)
  137 CONTINUE
      DO 138 K = 1,NSTATN
      IPROMP = 1
      IF (K.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,543,1,1,INT,H,CHARAC,IOUT,K,IPROMP)
  138 CONTINUE
C
      GO TO 190
C
  140 CONTINUE
C
C   RECTANGULAR CROSS SECTION IS CONSTANT ALONG THE MERIDIAN...
C
      CALL DATUM(IFILE2,549,1,1,INT,D2,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,550,1,1,INT,T2,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,551,1,1,INT,H2,CHARAC,IOUT,0,1)
      GO TO 190
C
C
  150 CONTINUE
      IRECT2 = 0
C
C   RING CROSS SECTIONS ARE NOT RECTANGULAR...
C
      IF (ANSL1('Y',ANSCON,INFILE)) GO TO 170
C
C   RING CROSS SECTION VARIES ALONG THE MERIDIAN...
C
      DO 152 K = 1,NSTATN
      IPROMP = 1
      IF (K.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,544,1,2,INT,X,CHARAC,IOUT,K,IPROMP)
  152 CONTINUE
      DO 154 K = 1,NSTATN
      IPROMP =1
      IF (K.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,545,1,1,INT,D,CHARAC,IOUT,K,IPROMP)
  154 CONTINUE
      DO 156 K = 1,NSTATN
      IPROMP = 1
      IF (K.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,546,1,1,INT,A,CHARAC,IOUT,K,IPROMP)
  156 CONTINUE
      DO 158 K = 1,NSTATN
      IPROMP = 1
      IF (K.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,547,1,2,INT,XI,CHARAC,IOUT,K,IPROMP)
  158 CONTINUE
      DO 160 K = 1,NSTATN
      IPROMP = 1
      IF (K.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,548,1,1,INT,XJ,CHARAC,IOUT,K,IPROMP)
  160 CONTINUE
C
      GO TO 190
  170 CONTINUE
C
C     NON-RECTANGULAR RING CROSS SECTIONS ARE MERIDIONALLY CONSTANT.
C
      CALL DATUM(IFILE2,552,1,2,INT,XR,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,553,1,1,INT,D2,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,555,1,1,INT,A2,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,556,1,2,INT,XI2,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,557,1,1,INT,XJ2,CHARAC,IOUT,0,1)
C
190   CONTINUE
C
      RETURN
      END
C=DECK      WALL
      SUBROUTINE WALL
C+---------------------------------------------------------------------+
C+---------------------------------------------------------------------+
C
C  PURPOSE IS TO ASK QUESTIONS RELATIVE TO SHELL WALL CONSTRUCTION
C
      COMMON/PRMFIL/IFILE,IFILE2,IOUT,IPRM(5)
      COMMON/PRMOUT/IFILE3,IFILE4
      COMMON/INDAT/INFILE
      COMMON/SEGEND/R1,Z1,R2,Z2,IFLAG1,IFLAG2,IFLAG3,IFLAG4,ISEG
      DIMENSION NPOINT(100)
      CHARACTER*4 ANSOUT,CHARAC
      LOGICAL ANSL1
C
      WRITE(IOUT,5)
    5 FORMAT(6X,'H',9X,'$ SHELL WALL CONSTRUCTION FOLLOWS...')
      REWIND IFILE2
      CALL DATUM(IFILE2,340,0,0,INT,REALL,CHARAC,IOUT,0,1)
    6 CONTINUE
      CALL DATUM(IFILE2,341,1,2,NWALL,REALL,CHARAC,IOUT,0,1)
      IF (NWALL.EQ.3) THEN
       WRITE(6,*)' SORRY, NO PROVISION FOR NWALL = ', NWALL
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 6
      ENDIF
      IF (IFLAG1.EQ.0) THEN
        WRITE(6,40)
   40   FORMAT(/' WARNING: IF YOU PLAN TO CHANGE THICKNESS IN THIS'/
     1  ' SEGMENT, IT MAY BE NECESSARY ALSO TO MODIFY THE DATA'/
     1  ' RELATING TO REFERENCE SURFACE LOCATION (ZVAL). YOU CAN DO'/
     1  ' THIS BY RUNNING'//
     1  '                    MODIFY'//
     1  ' AGAIN FOR THIS SEGMENT AFTER YOU COMPLETE THE CURRENT MODIFY.'
     1     /)
      ENDIF
C
C BEG APR 1992
      GO TO (50,60,70,80,90,100,110,120,300),NWALL
C END APR 1992
C
   50 CONTINUE
C
C     READ STIFFNESS COEFFICIENTS FOR ARBITRARY SHELL.
C
      CALL DATUM(IFILE2,350,0,0,INT,REALL,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,351,1,1,INT,SMPAD,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,352,1,1,INT,D11,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,353,1,1,INT,D12,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,354,1,1,INT,D14,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,355,1,1,INT,D15,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,356,1,1,INT,D22,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,357,1,1,INT,D24,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,358,1,1,INT,D25,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,359,1,1,INT,D33,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,360,1,1,INT,D44,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,361,1,1,INT,D45,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,362,1,1,INT,D55,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,363,1,1,INT,D66,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,364,1,1,INT,D36,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,365,1,2,NRS,REALL,CHARAC,IOUT,0,1)
C
      GO TO 1000
C
   60 CONTINUE
C
C   PROPERTIES OF MONOCOQUE WALL...
C
C     E = MODULUS
C     U = POISSON,S RATIO
C     SM = WALL MATERIAL MASS DENSITY
C     ALPHA = THERMAL EXPANSION COEFFICIENT
C     NRS = 1 SMEARED STRINGERS AND RINGS TO BE ADDED
C     NRS = 0 NO SMEARED STRINGERS AND RINGS
C     SUR = 0 REFERENCE SURFACE IS MIDDLE SURFACE
C     SUR = 1 REFERENCE SURFACE IS OUTER SURFACE
C     SUR =-1 REFERENCE SURFACE IS LOCATED AN ARBITRARY DISTANCE FROM
C             THE WALL INNER SURFACE
C
C
      CALL DATUM(IFILE2,370,0,0,INT,REALL,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,371,1,1,INT,E,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,372,1,1,INT,U,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,373,1,1,INT,SM,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,374,1,1,INT,ALPHA,CHARAC,IOUT,0,1)
    7 CONTINUE
      CALL DATUM(IFILE2,375,1,2,NRS,REALL,CHARAC,IOUT,0,1)
      IF (NRS.NE.0.AND.NRS.NE.1) THEN
       WRITE(6,*)' NRS  MUST BE EITHER  0  OR  1  '
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 7
      ENDIF
    8 CONTINUE
      CALL DATUM(IFILE2,376,1,2,NSUR,REALL,CHARAC,IOUT,0,1)
      IF (NSUR.NE.0.AND.NSUR.NE.1.AND.NSUR.NE.-1) THEN
       WRITE(6,*)' NSUR  MUST BE EITHER  0  or  1  or  -1'
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 8
      ENDIF
C
      IF (NSUR.EQ.0) GO TO 69
      IF (NSUR.EQ.1) GO TO 69
    9 CONTINUE
      CALL DATUM(IFILE2,377,1,2,NTYPET,REALL,CHARAC,IOUT,0,1)
      IF (NTYPET.NE.1.AND.NTYPET.NE.3) THEN
       WRITE(6,*)' NTYPET  MUST BE EITHER  1  OR  3  '
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 9
      ENDIF
      IPRM(1) = 378
      IPRM(2) = 379
C     
      GO TO (62,64,66),NTYPET 
62    CONTINUE    
      CALL DATUM(IFILE2,378,1,2,NTVALU,REALL,CHARAC,IOUT,0,1)     
      IF (NTVALU.LT.2.OR.NTVALU.GT.20) THEN
       WRITE(6,*)' NTVALU  MUST BE IN THE RANGE FROM  2  TO  20  '
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 62
      ENDIF
      CALL STAQ(NTVALU)  
C     
      DO 63 J = 1,NTVALU
      IPROMP = 1  
      IF (J.GT.1) IPROMP = 0  
      CALL DATUM(IFILE2,382,1,2,INT,TVAL,CHARAC,IOUT,J,IPROMP)    
   63 CONTINUE    
C     
      GO TO 67   
64    GO TO 67   
66    CONTINUE    
      CALL DATUM(IFILE2,383,1,2,INT,TVAL,CHARAC,IOUT,0,1)   
 67   CONTINUE    
  69  CONTINUE
      IF (NSUR.EQ.1) GO TO 1000
      REWIND IFILE3
      CALL DATUM(IFILE3,606,1,1,INT,REALL,ANSOUT,IOUT,0,1)
      IF (ANSL1('N',ANSOUT,INFILE)) GO TO 1000
      GO TO 1000
C
   70 GO TO 1000
   80 CONTINUE
C LAYERED COMPOSITE SHELL WALL..
      CALL INPROP(IFILE2,IOUT,NRS)
c changed 10/22/91 (NODOUT -> NODEOP)
      CALL NODEOP(IFILE3,IOUT)
c end 10/22/91 changes
      GO TO 1000
C
   90 CONTINUE
C
C   LAYERED ORTHOTROPIC SHELL...
C
      CALL DATUM(IFILE2,410,0,0,INT,REALL,CHARAC,IOUT,0,1)
   11 CONTINUE
      CALL DATUM(IFILE2,411,1,1,LAYERS,REALL,CHARAC,IOUT,0,1)
      IF (LAYERS.LT.1.OR.LAYERS.GT.20) THEN
       WRITE(6,*)' LAYERS  MUST BE IN THE RANGE FROM  1  TO  20  '
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 11
      ENDIF
   12 CONTINUE
      CALL DATUM(IFILE2,412,1,2,NRS,REALL,CHARAC,IOUT,0,1)
      IF (NRS.NE.0.AND.NRS.NE.1) THEN
       WRITE(6,*)' NRS  MUST BE EITHER  0  OR  1  '
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 12
      ENDIF
   13 CONTINUE
      CALL DATUM(IFILE2,413,1,2,NTYPET,REALL,CHARAC,IOUT,0,1)
      IF (NTYPET.NE.0.AND.NTYPET.NE.1) THEN
       WRITE(6,*)' NTYPET  MUST BE EITHER  0  OR  1 '
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 13
      ENDIF
C
C     LAYERS = NO. OF LAYERS
C     NRS = 0 NO SMEARED STRINGERS OR RINGS
C     NRS = 1    SMEARED STRINGERS OR RINGS
C     NTYPET = 0 CONSTANT THICKNESS LAYERS
C     NTYPET = 1 VARIABLE THICKNESS LAYERS,  READ LAYER THICKNESSES
C     NTYPET = 2 VARIABLE THICKNESS LAYERS,  LAYER THICKNESS FROM FUNCT.
C
C     I = 1 . . INNER LAYER,   I = LAYERS . . OUTER LAYER
C     T =  THICKNESS
C     G =  SHEAR MODULUS
C     EX =  MERIDIONAL MODULUS
C     EY =  CIRCUMFERENTIAL MODULUS
C     UXY = POISSON,S RATIO . . EY*UXY = EX*UYX
C     SM = LAYER MATERIAL MASS DENSITY
C     ALPHA1 = MERIDIONAL THERMAL EXPANSION COEFFICIENT
C     ALPHA2 = CIRCUMFERENTIAL THERMAL EXPANSION COEFFICIENT
C
      IF (NTYPET.NE.0) GO TO 82
      DO 81 I = 1,LAYERS
      IPROMP = 1
      IF (I.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,414,1,1,INT,T,CHARAC,IOUT,I,IPROMP)
   81 CONTINUE
   82 CONTINUE
      DO 83 I = 1,LAYERS
      IPROMP = 1
      IF (I.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,415,1,1,INT,G,CHARAC,IOUT,I,IPROMP)
   83 CONTINUE
      DO 84 I = 1,LAYERS
      IPROMP = 1
      IF (I.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,416,1,1,INT,EX,CHARAC,IOUT,I,IPROMP)
   84 CONTINUE
      DO 85 I = 1,LAYERS
      IPROMP = 1
      IF (I.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,417,1,1,INT,EY,CHARAC,IOUT,I,IPROMP)
   85 CONTINUE
      DO 86 I = 1,LAYERS
      IPROMP = 1
      IF (I.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,418,1,1,INT,UXY,CHARAC,IOUT,I,IPROMP)
   86 CONTINUE
      DO 87 I = 1,LAYERS
      IPROMP = 1
      IF (I.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,419,1,1,INT,SM,CHARAC,IOUT,I,IPROMP)
   87 CONTINUE
      DO 88 I = 1,LAYERS
      IPROMP = 1
      IF (I.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,420,1,1,INT,ALPHA1,CHARAC,IOUT,I,IPROMP)
   88 CONTINUE
      DO 89 I = 1,LAYERS
      IPROMP = 1
      IF (I.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,421,1,1,INT,ALPHA2,CHARAC,IOUT,I,IPROMP)
   89 CONTINUE
C
      IF (NTYPET.EQ.0) GO TO 1000
      IF (NTYPET.EQ.2) GO TO 1000
C
C     NTIN = NO. OF MERIDIONAL STATIONS FOR WHICH LAYER THICKNESSES
C            TO BE READ IN.. LOCATION OF CALLOUTS DETERMINED IN STA
C     TIN = THICKNESS OF GIVEN LAYER AT THE NTIN CALLOUT POINTS DETER-
C           MINED IN SUBROUTINE STA.
C
   14 CONTINUE
      CALL DATUM(IFILE2,422,1,2,NTIN,REALL,CHARAC,IOUT,0,1)
      IF (NTIN.LT.2.OR.NTIN.GT.20) THEN
       WRITE(6,*)' NTIN  MUST BE IN THE RANGE FROM  2  TO  20  '
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 14
      ENDIF
C
      IPRM(2) = 423
      CALL STAQ(NTIN)
      CALL DATUM(IFILE2,426,0,0,INT,REALL,CHARAC,IOUT,0,1)
      DO 95 I=1,LAYERS
      WRITE(6,*)' LAYER NUMBER', I
      DO 93 II = 1,NTIN
      IPROMP = 1
      IF (II.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,426,1,1,INT,TIN,CHARAC,IOUT,II,IPROMP)
   93 CONTINUE
C
      REWIND IFILE2
  95  CONTINUE
C
      IF (NTYPET.EQ.0) GO TO 1000
      REWIND IFILE3
      CALL DATUM(IFILE3,608,1,1,INT,REALL,ANSOUT,IOUT,0,1)
      IF (ANSL1('N',ANSOUT,INFILE)) GO TO 1000
C
      GO TO 1000
C
  100 CONTINUE
C
C   CORRUGATED SHELL WITHOUT SMOOTH SKIN...
C
      CALL DATUM(IFILE2,598,0,0,INT,REALL,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,600,1,1,INT,E,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,602,1,1,INT,U,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,604,1,2,NRS,REALL,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,606,1,2,INT,SMPAD,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,607,0,0,INT,REALL,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,608,1,1,INT,CT,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,610,1,2,INT,CB,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,612,1,1,INT,CC,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,614,1,1,INT,CD,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,616,1,1,INT,CH,CHARAC,IOUT,0,1)
C
C     E=MODULUS OF ELASTICITY OF CORRUGATED SKIN
C     U=POISSON'S RATIO OF CORRUGATED SKIN
C     NRS=INDICATOR OF WALL STIFFENING
C            IF 0 ... NO STRINGERS AND/OR RINGS
C            IF 1 ... STIFFENED BY STRINGERS AND/OR RINGS
C     SMPA = SHELL MASS PER UNIT AREA
C     CC=WIDTH OF TOP OF CORRUGATION (AT MIDDLE SURFACE)
C     CH=TOTAL OVER-ALL HEIGHT OF CORRUGATION
C     CD=WIDTH OF TROUGH BETWEEN CORRUGATIONS (AT MIDDLE SURFACE)
C     CT=THICKNESS OF CORRUGATED SHEET
C     CB=CENTERLINE-TO-CENTERLINE SPACING OF CORRUGATIONS
C     Z = DISTANCE FROM SHELL INNER SURFACE TO REFERENCE SURFACE
C
      GO TO 1000
C
  110 CONTINUE
C
C   CORRUGATED SHELL WITH A SMOOTH SKIN...
C
      CALL DATUM(IFILE2,617,0,0,INT,REALL,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,618,1,1,INT,E,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,620,1,1,INT,U,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,622,1,2,NRS,REALL,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,624,1,2,INT,SMPAD,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,625,0,0,INT,REALL,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,626,1,1,INT,CT,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,628,1,2,INT,CB,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,630,1,1,INT,CC,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,632,1,1,INT,CD,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,634,1,1,INT,CH,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,635,0,0,INT,REALL,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,636,1,1,INT,ES,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,638,1,1,INT,US,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,640,1,1,INT,TS,CHARAC,IOUT,0,1)
   15 CONTINUE
      CALL DATUM(IFILE2,642,1,2,NTYPET,REALL,CHARAC,IOUT,0,1)
      IF (NTYPET.NE.0.AND.NTYPET.NE.1) THEN
       WRITE(6,*)' NTYPET  MUST BE EITHER  0  OR  1 '
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 15
      ENDIF
      CALL DATUM(IFILE2,644,1,2,INT,FIBOND,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,646,1,1,INOUT,REALL,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,648,1,2,INT,PHI,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,650,1,2,INT,BAXIAL,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,652,1,2,INT,BHOOP,CHARAC,IOUT,0,1)
C
C     E=MODULUS OF ELASTICITY OF CORRUGATED SKIN
C     U=POISSON'S RATIO OF CORRUGATED SKIN
C     NRS=INDICATOR OF WALL STIFFENING
C            IF 0 ... NO STRINGERS AND/OR RINGS
C            IF 1 ... STIFFENED BY STRINGERS AND/OR RINGS
C     SMPA = SHELL MASS PER UNIT AREA
C     BAXIAL = KNOCKDOWN FACTOR FOR AXIAL BENDING STIFFNESS C44 WHICH
C              DEPENDS ON THE DISCRETE RING SPACING.
C     BHOOP = KNOCKUP FACTOR FOR HOOP BENDING STIFFNESS, C55
C
C     CC=WIDTH OF TOP OF CORRUGATION (AT MIDDLE SURFACE)
C     CH=TOTAL OVER-ALL HEIGHT OF CORRUGATION
C     CD=WIDTH OF TROUGH BETWEEN CORRUGATIONS (AT MIDDLE SURFACE)
C     CT=THICKNESS OF CORRUGATED SHEET
C     CB=CENTERLINE-TO-CENTERLINE SPACING OF CORRUGATIONS
C     PHI=REDUCTION FACTOR FOR TORSIONAL STIFFNESS...SOMEWHERE BETWEEN
C                       0.25 AND 0.85
C
C     ES = MODULUS OF SMOOTH SKIN
C     POISSON'S RATION OF SMOOTH SKIN
C     THICKNESS OF SMOOTH SKIN
C     ANC=INDICATOR FOR POSITION OF CORRUGATION
C            IF 0 ... INSIDE CORRUGATION
C            IF 1 ... OUTSIDE CORRUGATION
C    NTYPET = THICKNESS VARIATION INDICATOR. . .
C                       0 = CONSTANT THICKNESS SKIN
C                       1 = VARIABLE THICKNESS SKIN, INPUT DATA READ
C                           IN FROM SUBROUTINE GETZ
C     FIBOND = MANUFACTURING TECHNIQUE INDICATOR - -
C                  0 = SKIN RIVETED TO CORRUGATIONS
C                  1 = SKIN WELDBONDED TO CORRUGATIONS
C     Z = DISTANCE FROM SHELL INNER SURFACE TO REFERENCE SURFACE
C     IF CORRUGATION INTERNAL, Z= DISTANCE FROM CROWN OF CORRUGATION
C     TO REFERENCE SURFACE.
      IF (NTYPET.NE.1) GO TO 112
      IPRM(1) = 658
      IPRM(2) = 659
C     
      IF (NTYPET.EQ.0) NGO = 3
      IF (NTYPET.EQ.1) NGO = 1
      GO TO (72,74,76),NGO 
72    CONTINUE    
      CALL DATUM(IFILE2,658,1,2,NTVALU,REALL,CHARAC,IOUT,0,1)     
      IF (NTVALU.LT.2.OR.NTVALU.GT.20) THEN
       WRITE(6,*)' NTVALU  MUST BE IN THE RANGE FROM   2  TO  20  '
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 72
      ENDIF
      CALL STAQ(NTVALU)  
C     
      DO 73 J = 1,NTVALU
      IPROMP = 1  
      IF (J.GT.1) IPROMP = 0  
      CALL DATUM(IFILE2,662,1,2,INT,TVAL,CHARAC,IOUT,J,IPROMP)    
   73 CONTINUE    
C     
      GO TO 77   
74    GO TO 77   
76    CONTINUE    
      CALL DATUM(IFILE2,663,1,2,INT,TVAL,CHARAC,IOUT,0,1)   
 77   CONTINUE    
  79  CONTINUE
  112 CONTINUE
C
      GO TO 1000
C
  120 CONTINUE
C
C  LAYERED ORTHOTROPIC SHELLS WITH TEMPERATURE-DEPENDENT MATERIAL PROPS
C
C     LAYERS = NO.OF LAYERS
C     NRS = 0 . . NO STRINGERS AND RINGS
C     NRS = 1  STRINGERS AND RINGS
C     NTYPET = 0  CONSTANT LAYER THICKNESSES
C     NTYPET = 1 VARIABLE LAYER THICKNESSES
C
      CALL DATUM(IFILE2,430,0,0,INT,REALL,CHARAC,IOUT,0,1)
   16 CONTINUE
      CALL DATUM(IFILE2,431,1,1,LAYERS,REALL,CHARAC,IOUT,0,1)
      IF (LAYERS.LT.1.OR.LAYERS.GT.20) THEN
       WRITE(6,*)' LAYERS  MUST BE IN THE RANGE FROM  1  TO  20  '
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 16
      ENDIF
   17 CONTINUE
      CALL DATUM(IFILE2,432,1,2,NRS,REALL,CHARAC,IOUT,0,1)
      IF (NRS.NE.0.AND.NRS.NE.1) THEN
       WRITE(6,*)' NRS  MUST BE EITHER  0  OR  1  '
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 17
      ENDIF
   18 CONTINUE
      CALL DATUM(IFILE2,433,1,2,NTYPET,REALL,CHARAC,IOUT,0,1)
      IF (NTYPET.NE.0.AND.NTYPET.NE.1) THEN
       WRITE(6,*)' NTYPET  MUST BE EITHER  0  OR  1 '
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 18
      ENDIF
C
C     J = 1 . . INNERMOST LAYER. = LAYERS . . OUTERMOST LAYER
C     T = LAYER THICKNESS
C
      IF (NTYPET.NE.0) GO TO 125
      DO 123 J = 1,LAYERS
      IPROMP = 1
      IF (J.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,434,1,1,INT,T,CHARAC,IOUT,J,IPROMP)
  123 CONTINUE
      GO TO 130
  125 CONTINUE
C     NTIN = NO. OF MERIDIONAL STATIONS FOR WHICH THICKNESS TO BE
C            SPECIFIED. POSITION (MESH PT TAG) OF THICKNESS CALLOUTS
C            DETERMINED IN STA
C     TIN =  THICKNESS OF GIVEN LAYER AT CALLOUT POINTS. THICKNESSES
C            AT INTERMEDIATE POINTS OBTAINED BY LINEAR INTERPOLATION
   19 CONTINUE
      CALL DATUM(IFILE2,435,1,2,NTIN,REALL,CHARAC,IOUT,0,1)
      IF (NTIN.LT.2.OR.NTIN.GT.20) THEN
       WRITE(6,*)' NTIN  MUST BE IN THE RANGE FROM  2  TO  20 '
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 19
      ENDIF
      IPRM(2) = 436
      CALL STAQ(NTIN)
      CALL DATUM(IFILE2,439,0,0,INT,REALL,CHARAC,IOUT,0,1)
      DO 127 J=1,LAYERS
      WRITE(6,*)' LAYER NUMBER', J
      DO 126 II = 1,NTIN
      IPROMP = 1
      IF (II.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,439,1,1,INT,TIN,CHARAC,IOUT,II,IPROMP)
  126 CONTINUE
      REWIND IFILE2
127   CONTINUE
130   CONTINUE
C
      DO 133 J = 1,LAYERS
      IPROMP = 1
      IF (J.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,440,1,1,INT,SM,CHARAC,IOUT,J,IPROMP)
  133 CONTINUE
C
C     NPOINT(J) = NUMBER OF VALUES OF TEMPERATURE RISE FOR WHICH
C                 PROPERTIES GIVEN IN JTH LAYER
      DO 135 J = 1,LAYERS
      IPROMP = 1
      IF (J.GT.1) IPROMP = 0
   21 CONTINUE
      CALL DATUM(IFILE2,441,1,2,NPOINT(J),REALL,CHARAC,IOUT,J,IPROMP)
      IF (NPOINT(J).LT.2.OR.NPOINT(J).GT.20) THEN
       WRITE(6,*)' NPOINT  MUST BE IN THE RANGE FROM  2  TO  20 '
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 21
      ENDIF
  135 CONTINUE
      IF (NTYPET.EQ.0) GO TO 160
      REWIND IFILE3
      CALL DATUM(IFILE3,609,1,1,INT,REALL,ANSOUT,IOUT,0,1)
      IF (ANSL1('N',ANSOUT,INFILE)) GO TO 160
  160 CONTINUE
      IF (NTYPET.NE.0) REWIND IFILE2
C
      DO 230 J=1,LAYERS
      WRITE(6,*)' LAYER NUMBER', J
      NPT = NPOINT(J)
C
C     HEAT = TEMPERATURES ABOVE ZERO-STRESS FOR WHICH WALL PROPERTIES
C            WILL BE SPECIFIED
C     G = SHEAR MODULUS
C     EX = MERIDIONAL MODULUS
C     EY = CIRCUMFERENTIAL MODULUS
C     UXY = POISSON,S RATIO
C     A1 = MERIDIONAL THERMAL COEFFICIENT OF EXPANSION
C     A2 = CIRCUMFERENTIAL THERMAL COEFFICIENT OF EXPANSION
      DO 191 K = 1,NPT
      IPROMP = 1
      IF (K.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,442,1,2,INT,HEAT,CHARAC,IOUT,K,IPROMP)
  191 CONTINUE
      DO 192 K = 1,NPT
      IPROMP = 1
      IF (K.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,443,1,1,INT,G,CHARAC,IOUT,K,IPROMP)
  192 CONTINUE
      DO 193 K = 1,NPT
      IPROMP = 1
      IF (K.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,444,1,1,INT,EX,CHARAC,IOUT,K,IPROMP)
  193 CONTINUE
      DO 194 K = 1,NPT
      IPROMP = 1
      IF (K.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,445,1,1,INT,EY,CHARAC,IOUT,K,IPROMP)
  194 CONTINUE
      DO 195 K = 1,NPT
      IPROMP = 1
      IF (K.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,446,1,2,INT,UXY,CHARAC,IOUT,K,IPROMP)
  195 CONTINUE
      DO 196 K = 1,NPT
      IPROMP = 1
      IF (K.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,447,1,1,INT,A1,CHARAC,IOUT,K,IPROMP)
  196 CONTINUE
      DO 197 K = 1,NPT
      IPROMP = 1
      IF (K.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,448,1,1,INT,A2,CHARAC,IOUT,K,IPROMP)
  197 CONTINUE
C
      REWIND IFILE2
  230 CONTINUE
C
C BEG APR 1992
      GO TO 1000
  300 CONTINUE
C LAYERED COMPOSITE SHELL WALL WITH SOME VARIABLE THICKNESS LAYERS...
      CALL INPROP(IFILE2,IOUT,NRS)
      CALL NODEOP(IFILE3,IOUT)
      CALL DATUM(IFILE2,413,1,2,INT,TYPET,CHARAC,IOUT,0,1)
      NTYPET = TYPET
      IF (NTYPET.NE.0.AND.NTYPET.NE.1) THEN
        WRITE(6,*)' NTYPET NOT IN PERMISSIBLE RANGE 0 TO 1'
        CALL ERREX
      ENDIF
      IF (NTYPET.EQ.0) GO TO 1000
      IVAR = 1
  350 CONTINUE
C  THE THICKNESS OF ONE OR MORE OF THE LAYERS VARIES ALONG THE SEGMENT...
      IF (IVAR.EQ.1)
     1      CALL DATUM(IFILE2,428,0,0,INT,REALL,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,429,1,2,ILVAR,REALL,CHARAC,IOUT,0,1)
      REWIND IFILE2
C     NTIN = NO. OF MERIDIONAL STATIONS FOR WHICH THICKNESS TO BE
C            SPECIFIED. POSITION (MESH PT TAG) OF THICKNESS CALLOUTS
C            DETERMINED IN STA
C     TIN =  THICKNESS OF GIVEN LAYER AT CALLOUT POINTS. THICKNESSES
C            AT INTERMEDIATE POINTS OBTAINED BY LINEAR INTERPOLATION
      CALL DATUM(IFILE2,422,1,2,NTIN,REALL,CHARAC,IOUT,0,1)
      IF (NTIN.LT.2.OR.NTIN.GT.20) THEN
        WRITE(6,*)' NTIN NOT IN PERMISSIBLE RANGE 2 TO 20'
        CALL ERREX
      ENDIF
      IPRM(2) = 423
      CALL STAQ(NTIN)
      DO 360 I = 1,NTIN
      IPROMP = 1
      IF (I.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,426,1,1,INT,TIN,CHARAC,IOUT,I,IPROMP)
  360 CONTINUE
      IVAR = IVAR + 1
      CALL DATUM(IFILE2,427,1,1,INT,REALL,ANSOUT,IOUT,0,1)
      IF (ANSL1('Y',ANSOUT,INFILE)) THEN
         IF (IVAR.GT.10) THEN
            WRITE(6,*)' MAX. OF 10 VARIABLE-THICKNESS LAYERS ALLOWED.'
            CALL ERREX
         ENDIF
         REWIND IFILE2
         GO TO 350
      ENDIF
      REWIND IFILE2
      REWIND IFILE3
      CALL DATUM(IFILE3,608,1,1,INT,REALL,ANSOUT,IOUT,0,1)
      GO TO 1000
C END APR 1992
 1000 CONTINUE
      IF (NRS.NE.0) CALL SMEAR
C
      REWIND IFILE3
      CALL DATUM(IFILE3,607,1,1,INT,REALL,ANSOUT,IOUT,0,1)
      IF (ANSL1('N',ANSOUT,INFILE)) RETURN
C
      RETURN
      END
C
C
C
C=DECK      INPROP
      SUBROUTINE INPROP(IFILE,IOUT,NRS)
C+---------------------------------------------------------------------+
C+---------------------------------------------------------------------+
C
C  PURPOSE IS TO READ IN PROPERTIES OF LAYERED WALL WITH LAMINAE
C  AT VARIOUS WINDING ANGLES.
C
      DIMENSION LTYPE(90),MATL(90)
C BEG APR 1992
      DIMENSION IMATL(90)
C END APR 1992
C
      COMMON/INDAT/INFILE
      CHARACTER*4 ANSOUT,CHARAC
      LOGICAL ANSL1
C
      DO 5 I = 1,90
C BEG APR 1992
      IMATL(I) = 0
C END APR 1992
    5 MATL(I) = 0
      IPROMP = 1
      REWIND IFILE
      CALL DATUM(IFILE,384,0,0,INT,REALL,CHARAC,IOUT,0,IPROMP)
      CALL DATUM(IFILE,385,1,2,NLAY,REALL,CHARAC,IOUT,0,IPROMP)
C
C BEG APR 1992
      LKOUNT = 0
      MAXMAT = 0
C END APR 1992
      DO 30 J = 1,NLAY
      L = J
      REWIND IFILE
   20 CONTINUE
      CALL DATUM(IFILE,386,1,2,LTYPE(L),REALL,CHARAC,IOUT,L,
     1           IPROMP)
      CALL DATUM(IFILE,387,1,1,INT,REALL,ANSOUT,IOUT,0,IPROMP)
      IF (ANSL1('N',ANSOUT,INFILE)) GO TO 30
C
C  NEW LAYER TYPE.  READ IN THICKNESS, WINDING ANGLE, MATERIAL TYPE...
C
      K = LTYPE(L)
      CALL DATUM(IFILE,388,0,0,INT,REALL,CHARAC,IOUT,K,IPROMP)
      CALL DATUM(IFILE,389,1,1,INT,T,CHARAC,IOUT,K,IPROMP)
      CALL DATUM(IFILE,390,1,2,INT,ANGLE,CHARAC,IOUT,K,IPROMP)
      CALL DATUM(IFILE,391,1,1,MATL(K),REALL,CHARAC,IOUT,K,IPROMP)
C BEG APR 1992
      LKOUNT = LKOUNT + 1
      IF (LKOUNT.EQ.1) THEN
         IMATL(J) = MATL(K)
         MAXMAT = 1
C BEG JAN 1993  (FOLLOWING COMMENTED OUT)
C        GO TO 26
C END JAN 1993
      ENDIF
      IF (J.GT.1) THEN
         L1 = J - 1
         DO 25 LL = 1,L1
            IF (MATL(K).EQ.IMATL(LL)) GO TO 26
   25    CONTINUE
         IMATL(J) = MATL(K)
   26    CONTINUE
      ENDIF
   30 CONTINUE
      IF (MAXMAT.GT.0)
     1 CALL DATUM(IFILE,392,0,0,INT,REALL,CHARAC,IOUT,0,IPROMP)
      DO 200 J = 1,NLAY
      I = IMATL(J)
      IF (I.EQ.0) GO TO 200
C END APR 1992
C
      REWIND IFILE
      CALL DATUM(IFILE,393,1,2,INT,REALL,ANSOUT,IOUT,I,IPROMP)
      IF (ANSL1('N',ANSOUT,INFILE)) GO TO 200
      WRITE(6,115) I
  115 FORMAT(//' MATERIAL PROPERTIES FOR MATERIAL TYPE',I3)
C
      CALL DATUM(IFILE,394,0,0,INT,REALL,CHARAC,IOUT,0,IPROMP)
      CALL DATUM(IFILE,395,1,1,INT,E1,CHARAC,IOUT,I,IPROMP)
      CALL DATUM(IFILE,396,1,1,INT,E2,CHARAC,IOUT,I,IPROMP)
      CALL DATUM(IFILE,397,1,1,INT, G,CHARAC,IOUT,I,IPROMP)
      KKOUNT = 0
  150 CONTINUE
      CALL DATUM(IFILE,398,1,1,INT,FNU,CHARAC,IOUT,I,IPROMP)
      FNUTST = 1000000.
      IF (E2.NE.0.) FNUTST = FNU*E1/E2
      DIF    = 1. - FNUTST*FNU
      IF (DIF.LE.0.) THEN
         WRITE(6,155)
  155    FORMAT(/' BAD VALUE FOR POISSONS RATIO. NOTE THAT THERE ARE'/
     1 ' TWO POISSONS RATIOS, NU12 AND NU21. THE ONE THAT YOU ARE'/
     1 ' ASKED TO PROVIDE, NU12, IS GIVEN BY:'/
     1 '               NU12  = NU21*E2/E1'/
     1 ' THEREFORE, IF E1 IS LARGER THAN E2 (WHICH IS USUALLY THE'/
     1 ' CASE), YOU MUST PROVIDE AS INPUT HERE THE SMALLER OF THE TWO'/
     1 ' POISSONS RATIOS.'/)
C
         BACKSPACE(IOUT)
         REWIND IFILE
         GO TO 150
      ENDIF
C
      IF (FNUTST.GT.1.0.AND.KKOUNT.EQ.0.AND.E2.NE.0.) THEN
         WRITE(6,156)
  156    FORMAT(/' POISSONS RATIO MAY BE TOO BIG.  NOTE THAT THERE ARE'/
     1 ' TWO POISSONS RATIOS, NU12 AND NU21. THE ONE THAT YOU ARE'/
     1 ' ASKED TO PROVIDE, NU12, IS GIVEN BY:'/
     1 '               NU12  = NU21*E2/E1'/
     1 ' THEREFORE, IF E1 IS LARGER THAN E2 (WHICH IS USUALLY THE'/
     1 ' CASE), YOU MUST PROVIDE AS INPUT HERE THE SMALLER OF THE TWO'/
     1 ' POISSONS RATIOS.'/)
         WRITE(6,157)
  157    FORMAT(/' PANDA2 WILL ASK YOU AGAIN FOR THE POISSONS RATIO.'/
     1 ' PLEASE MAKE SURE THAT YOU SUPPLY THE SMALLER OF THE TWO'/
     1 ' POISSONS RATIOS FOR THIS ORTHOTROPIC MATERIAL.'/)
         BACKSPACE(IOUT)
         REWIND IFILE
         KKOUNT = KKOUNT + 1
         GO TO 150
      ENDIF
C
  160 CONTINUE
      CALL DATUM(IFILE,399,1,1,INT,ALPHA1,CHARAC,IOUT,I,IPROMP)
      CALL DATUM(IFILE,400,1,1,INT,ALPHA2,CHARAC,IOUT,I,IPROMP)
      CALL DATUM(IFILE,401,1,2,INT,CURETP,CHARAC,IOUT,I,IPROMP)
      CALL DATUM(IFILE,402,1,2,INT,DENS,CHARAC,IOUT,I,IPROMP)
      CALL DATUM(IFILE,403,0,0,INT,REALL,CHARAC,IOUT,0,IPROMP)
      CALL DATUM(IFILE,404,1,1,INT,EALLOW,CHARAC,IOUT,I,IPROMP)
      CALL DATUM(IFILE,405,1,1,INT,EALLOW,CHARAC,IOUT,I,IPROMP)
      CALL DATUM(IFILE,406,1,1,INT,EALLOW,CHARAC,IOUT,I,IPROMP)
      CALL DATUM(IFILE,407,1,1,INT,EALLOW,CHARAC,IOUT,I,IPROMP)
      CALL DATUM(IFILE,408,1,1,INT,EALLOW,CHARAC,IOUT,I,IPROMP)
  200 CONTINUE
      CALL DATUM(IFILE,409,1,2,NRS,REALL,CHARAC,IOUT,0,IPROMP)
C
      RETURN
      END
C
C
C
c changed 10/22/91 (NODOUT -> NODEOP)
C=DECK      NODEOP
      SUBROUTINE NODEOP(IFILE3,IOUT)
C+---------------------------------------------------------------------+
C+---------------------------------------------------------------------+
c end 10/22/91 changes
C
C  PURPOSE IS TO CHOOSE NODAL POINTS FOR STRESS OUTPUT FOR COMPOSITE
C  SEGMENTS.
C
      COMMON/INDAT/INFILE
      CHARACTER*4 CHARAC,ANSOUT
      LOGICAL ANSL1
C
      REWIND IFILE3
      CALL DATUM(IFILE3,620,0,0,INT,REALL,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE3,622,1,1,INT,REALL,ANSOUT,IOUT,ISEG,1)
      IF (ANSL1('Y',ANSOUT,INFILE)) GO TO 100
      CALL DATUM(IFILE3,624,0,0,INT,REALL,CHARAC,IOUT,0,1)
   10 CONTINUE
      REWIND IFILE3
      CALL DATUM(IFILE3,626,1,1,NODE,REALL,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE3,628,1,1,INT,REALL,ANSOUT,IOUT,0,1)
      IF (ANSL1('Y',ANSOUT,INFILE)) GO TO 10
C
  100 CONTINUE
      RETURN
      END
C
C
C
C=DECK      POLES
      SUBROUTINE POLES
C+---------------------------------------------------------------------+
C+---------------------------------------------------------------------+
C
C   PURPOSE IS TO ASK QUESTIONS RELATED TO POLES
C
      COMMON/PRMFIL/IFILE,IFILE2,IOUT,IPRM(5)   
      CHARACTER*4 CHARAC
C
      WRITE(IOUT,5)
    5 FORMAT(6X,'H',9X,'$ POLES INPUT FOLLOWS...')
      REWIND IFILE
      CALL DATUM(IFILE,62,1,2,NPOLES,REALL,CHARAC,IOUT,0,1)    
      IF (NPOLES.EQ.0) GO TO 20     
C     
C    CONSTRAINT CONDITIONS FOR A POLE (r=0)...  
C     
      DO 10 I = 1,NPOLES
      REWIND IFILE
      CALL DATUM(IFILE,64,1,1,IMESH,REALL,CHARAC,IOUT,I,1)     
   10 CONTINUE    
   20 CONTINUE    
C     
      RETURN
      END
C=DECK      BOUND
      SUBROUTINE BOUND
C+---------------------------------------------------------------------+
C+---------------------------------------------------------------------+
C
C   PURPOSE IS TO ASK QUESTIONS RELATING TO CONSTRAINTS TO GROUND...
C
      COMMON/PRMFIL/IFILE,IFILE2,IOUT,IPRM(5)   
      COMMON/INDAT/INFILE
      CHARACTER*4 CHARAC
      DIMENSION IMESH(100)
      CHARACTER*4 ANSCON
      LOGICAL ANSL1
C
      WRITE(IOUT,5)
    5 FORMAT(6X,'H',9X,'$ INPUT FOR CONSTRAINTS TO GROUND FOLLOWS...')
C
      REWIND IFILE
C     
C   CONSTRAINTS TO GROUND (OTHER THAN POLES) FOLLOW....     
C     
      CALL DATUM(IFILE,66,1,2,NGRND,REALL,CHARAC,IOUT,0,1)  
      IF (NGRND.EQ.0) GO TO 40
      DO 30 I = 1,NGRND 
      REWIND IFILE
      I1 = I - 1  
   22 CONTINUE    
      CALL DATUM(IFILE,68,1,1,IMESH(I),REALL,CHARAC,IOUT,I,1)     
      IF (I.EQ.1) GO TO 24    
      MESHDF = IMESH(I) - IMESH(I1) 
      IF (MESHDF.GE.3) GO TO 24     
      WRITE(6,'(A,A)')' CONSTRAINTS TO GROUND MUST BE AT INTERVALS',    
     1' ALONG THE MERIDIAN OF AT LEAST 3 NODAL POINTS'
      REWIND IFILE
      BACKSPACE(IOUT)
      GO TO 22    
   24 CONTINUE    
      CALL DATUM(IFILE,70,1,2,IFIX,REALL,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE,71,1,1,IFIX,REALL,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE,72,1,1,IFIX,REALL,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE,73,1,1,IFIX,REALL,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE,74,1,2,INT,D1,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE,75,1,1,INT,D2,CHARAC,IOUT,0,1)
C     
      CALL DATUM(IFILE,80,1,2,INT,REALL,ANSCON,IOUT,0,1)    
      IF (ANSL1('Y',ANSCON,INFILE)) GO TO 30    
C     
      CALL DATUM(IFILE,81,1,2,IFIXB,REALL,CHARAC,IOUT,0,1)     
      CALL DATUM(IFILE,82,1,1,IFIXB,REALL,CHARAC,IOUT,0,1)     
      CALL DATUM(IFILE,83,1,1,IFIXB,REALL,CHARAC,IOUT,0,1)     
      CALL DATUM(IFILE,84,1,1,IFIXB,REALL,CHARAC,IOUT,0,1)     
C     
   30 CONTINUE    
   40 CONTINUE    
C     
      RETURN
      END
C=DECK      JUNCTQ
      SUBROUTINE JUNCTQ
C+---------------------------------------------------------------------+
C+---------------------------------------------------------------------+
C
C   PURPOSE IS TO ASK QUESTIONS RELATIVE TO JUNCTION CONDITIONS...
C
      COMMON/PRMFIL/IFILE,IFILE2,IOUT,IPRM(5)   
      COMMON/INDAT/INFILE
      DIMENSION IMESH(100)
      CHARACTER*4 ANSCON,CHARAC
      LOGICAL ANSL1
C
      WRITE(IOUT,5)
    5 FORMAT(6X,'H',9X,'$ JUNCTION CONDITION INPUT FOLLOWS...')
C
      REWIND IFILE
C     
C    JUNCTURE CONDITIONS ARE NEXT...
C     
      CALL DATUM(IFILE,86,1,2,INT,REALL,ANSCON,IOUT,0,1)    
      IF (ANSL1('N',ANSCON,INFILE)) GO TO 80    
      CALL DATUM(IFILE,88,1,2,NJUNCT,REALL,CHARAC,IOUT,0,1) 
      IF (NJUNCT.EQ.0) GO TO 80     
      DO 60 I = 1,NJUNCT
      REWIND IFILE
      I1 = I - 1  
   42 CONTINUE    
      CALL DATUM(IFILE,90,1,1,IMESH(I),REALL,CHARAC,IOUT,I,1)     
      IF (I.EQ.1) GO TO 44    
      MESHDF = IMESH(I) - IMESH(I1) 
      IF (MESHDF.GE.3) GO TO 44     
      WRITE(6,'(A,A)')' JUNCTURES TO EARLIER SEGMENTS MUST BE SPACED',  
     1' AT INTERVALS OF AT LEAST 3 NODAL POINTS.'     
      REWIND IFILE
      BACKSPACE(IOUT)
      GO TO 42    
   44 CONTINUE    
      CALL DATUM(IFILE,92,1,1,JSEG,REALL,CHARAC,IOUT,0,1)   
      CALL DATUM(IFILE,94,1,1,JNODE,REALL,CHARAC,IOUT,0,1)  
      CALL DATUM(IFILE,96,1,2,IFIX,REALL,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE,98,1,1,IFIX,REALL,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE,100,1,1,IFIX,REALL,CHARAC,IOUT,0,1)     
      CALL DATUM(IFILE,102,1,1,IFIX,REALL,CHARAC,IOUT,0,1)     
      CALL DATUM(IFILE,104,1,2,INT,D1,CHARAC,IOUT,0,1)     
      CALL DATUM(IFILE,106,1,1,INT,D2,CHARAC,IOUT,0,1)     
C     
      CALL DATUM(IFILE,108,1,2,INT,REALL,ANSCON,IOUT,0,1)   
      IF (ANSL1('Y',ANSCON,INFILE)) GO TO 60    
      CALL DATUM(IFILE,110,1,2,IFIXB,REALL,CHARAC,IOUT,0,1)    
      CALL DATUM(IFILE,111,1,1,IFIXB,REALL,CHARAC,IOUT,0,1)    
      CALL DATUM(IFILE,112,1,1,IFIXB,REALL,CHARAC,IOUT,0,1)    
      CALL DATUM(IFILE,113,1,1,IFIXB,REALL,CHARAC,IOUT,0,1)    
C     
   60 CONTINUE    
   80 CONTINUE    
C     
      RETURN
      END
C=DECK      RIGID
      SUBROUTINE RIGID(INDIC)
C+---------------------------------------------------------------------+
C+---------------------------------------------------------------------+
C
C   PURPOSE IS TO ASK QUESTIONS RELATIVE TO RIGID BODY CONSTRAINTS...
C
      COMMON/PRMFIL/IFILE,IFILE2,IOUT,IPRM(5)   
      COMMON/INDAT/INFILE
      CHARACTER*4 ANSCON,CHARAC
      LOGICAL ANSL1
C
      WRITE(IOUT,5)
    5 FORMAT(6X,'H',9X,'$ RIGID BODY CONSTRAINT INPUT FOLLOWS...')
C
      REWIND IFILE
C     
C    RIGID BODY MOTION STUFF FOLLOWS...   
C     
      REWIND IFILE
      CALL DATUM(IFILE,115,0,0,INT,REALL,CHARAC,IOUT,0,1)   
      CALL DATUM(IFILE,120,1,2,INT,REALL,ANSCON,IOUT,0,1)   
      IF (ANSL1('N',ANSCON,INFILE)) GO TO 200   
      CALL DATUM(IFILE,121,1,2,INT,REALL,ANSCON,IOUT,0,1)   
      IF (ANSL1('N',ANSCON,INFILE)) GO TO 190
      CALL DATUM(IFILE,122,0,0,INT,REALL,CHARAC,IOUT,0,1)   
      CALL DATUM(IFILE,123,1,1,ISEG,REALL,CHARAC,IOUT,0,1)  
      CALL DATUM(IFILE,124,1,1,INODE,REALL,CHARAC,IOUT,0,1) 
      CALL DATUM(IFILE,125,0,0,INT,REALL,CHARAC,IOUT,0,1)   
      CALL DATUM(IFILE,126,1,2,ISTOP0,REALL,CHARAC,IOUT,0,1)   
      CALL DATUM(IFILE,127,1,1,ISTOP0,REALL,CHARAC,IOUT,0,1)   
      CALL DATUM(IFILE,128,1,1,ISTOP0,REALL,CHARAC,IOUT,0,1)   
      CALL DATUM(IFILE,129,1,1,ISTOP0,REALL,CHARAC,IOUT,0,1)   
      CALL DATUM(IFILE,130,1,1,ISTOP1,REALL,CHARAC,IOUT,0,1)   
      CALL DATUM(IFILE,131,1,1,ISTOP1,REALL,CHARAC,IOUT,0,1)   
      CALL DATUM(IFILE,132,1,1,ISTOP1,REALL,CHARAC,IOUT,0,1)   
      CALL DATUM(IFILE,133,1,1,ISTOP1,REALL,CHARAC,IOUT,0,1)   
  190 CONTINUE
C DYNAMIC REACTION STUFF ADDED AUG 17, 1985...
      IF (INDIC.LT.3) GO TO 200
      CALL DATUM(IFILE,150,0,0,INT,REALL,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE,155,1,2,INT,REALL,ANSCON,IOUT,0,1)
      CALL DATUM(IFILE,160,1,2,INT,REALL,ANSCON,IOUT,0,1)
C END 17 AUG 85 MODS...
C     
  200 CONTINUE    
      RETURN
      END   
C=DECK      GLOB1
      SUBROUTINE GLOB1(INDSIG,INDIC,THETAM,IPRE,NSEG) 
C+---------------------------------------------------------------------+
C+---------------------------------------------------------------------+
C
C   PURPOSE IS TO READ DATA FROM BEGINNING OF CASE
C
      COMMON/PRMFIL/IFILE,IFILE2,IOUT,IPRM(5)   
      COMMON/PRMOUT/IFILE3,IFILE4   
      COMMON/INDAT/INFILE     
      COMMON/SEGEND/R1,Z1,R2,Z2,IFLAG1,IFLAG2,IFLAG3,IFLAG4,IFLAG5
      DIMENSION TITLE(12)     
      CHARACTER*4 ANSOUT,ANSWER,CHARAC     
      LOGICAL ANSL1     
C     
C  "GLOBAL1" QUESTIONS FOLLOW...    
C     
      REWIND IFILE
C
      CALL DATUM(IFILE,1,0,0,INT,REALL,CHARAC,IOUT,0,1)     
      WRITE(6,53) 
   53 FORMAT(' Please provide a title (42 characters or less)...')   
   54 CONTINUE    
      READ(INFILE,12) (TITLE(I),I=1,12)   
      WRITE(IOUT,12) (TITLE(I),I=1,12)    
   12 FORMAT(18A4)
C
      CALL DATUM(IFILE,2,1,2,INDIC,REALL,CHARAC,IOUT,0,1)   
      IF (IFLAG1.EQ.0) THEN   
        WRITE(6,55)     
   55   FORMAT(/' WARNING: IF YOU ARE CHANGING INDIC FROM 3 or 4 TO'/   
     1  ' -2,-1,0,1, or 2,  OR FROM -2,-1,0,1,2  TO  3 or 4, YOU WILL'/ 
     1  ' HAVE TO MODIFY THE INPUT DATA FOR ANY SEGMENTS WITH EITHER'/  
     1  ' LINE LOADS OR DISTRIBUTED LOADS.  YOU WILL ALSO HAVE TO'/     
     1  ' MODIFY THE GLOBAL INPUT DATA THAT FOLLOW THE LAST SEGMENT,'/  
     1  ' AS THESE DATA DEPEND ON INDIC. USE MODIFICATION INDEX 6 FOR'/ 
     1  ' LINE LOADS, 7 FOR DISTRIBUTED LOADS, AND 14 FOR GLOBAL DATA.'/
     1    ) 
      ENDIF 
C     
      CALL DATUM(IFILE,3,1,1,NPRT,REALL,CHARAC,IOUT,0,1)    
      CALL DATUM(IFILE,5,1,2,ISTRES,REALL,CHARAC,IOUT,0,1)  
      IF (INDIC.EQ.4)CALL DATUM(IFILE,6,1,2,IPRE,REALL,CHARAC,IOUT,0,1) 
      CALL DATUM(IFILE,10,1,1,NSEG,REALL,CHARAC,IOUT,0,1)   
      IF (IFLAG1.EQ.0) THEN   
        WRITE(6,56)     
   56   FORMAT(/' WARNING: IF YOU ARE CHANGING THE NUMBER OF SEGMENTS'/ 
     1  ' YOU WILL HAVE TO REARRANGE YOUR NAME.SEGn FILES SO THAT n'/  
     1  ' STILL REPRESENTS THE CORRECT SEGMENT OR, FOR  n = NSEG+1,'/   
     1  ' THE GLOBAL DATA AND CONSTRAINT CONDITIONS. IT WOULD BE BEST'/ 
     1  ' TO DO THIS AS SOON AS YOU COMPLETE THIS INTERACTIVE SESSION.'/
     1  ' THEN IF YOU ARE ADDING SEGMENTS YOU CAN USE THE  INPUT COM-'/ 
     1  ' MAND AND GENERATE THE NEW SEGMENTS IN THEIR PROPER POSITIONS'/
     1  ' WITHOUT HAVING TO SHUFFLE THEM AROUND.  ALSO, IF YOU ARE'/    
     1  ' CHANGING THE NUMBER OF SEGMENTS,  DO NOT FORGET TO MODIFY'/   
     1  ' THE CONSTRAINT CONDITIONS. USE MODIFICATION INDEX 11 FOR'/    
     1  ' THIS AFTER YOU HAVE PLACED THE NAME.SEGn FILE CORRESPONDING'/
     1  ' TO n = (old NSEG) + 1  INTO ITS PROPER, n=(new NSEG) + 1,'/   
     1  ' POSITION.'/)  
      ENDIF 
C     
      IF (INDIC.LT.3) GO TO 162     
      IF (INDIC.EQ.4.AND.IPRE.EQ.0) GO TO 162   
      CALL DATUM(IFILE,16,1,2,NSTART,REALL,CHARAC,IOUT,0,1) 
      CALL DATUM(IFILE,17,1,2,NFIN  ,REALL,CHARAC,IOUT,0,1) 
   15 CONTINUE
      CALL DATUM(IFILE,18,1,2,INCR  ,REALL,CHARAC,IOUT,0,1) 
      IF (INCR.EQ.0) THEN
        WRITE(6,*)' INCR must be non-zero. Provide another value.'
        BACKSPACE(IOUT)
        REWIND IFILE
        GO TO 15
      ENDIF
C
    9 CONTINUE    
      CALL DATUM(IFILE,29,1,2,INT,THETAM,CHARAC,IOUT,0,1)   
      IF (THETAM.LT.0.00001.OR.THETAM.GT.180.1) THEN
       WRITE(6,*)' THETAM MUST BE IN THE RANGE FROM 0 TO 180 DEG.'
       WRITE(6,*)' THETAM WILL USUALLY BE 180 DEGREES.'     
       BACKSPACE(IOUT)  
       REWIND IFILE     
       GO TO 9    
      ENDIF 
      IF (IFLAG1.EQ.0) THEN   
        WRITE(6,57)     
   57 FORMAT(/' WARNING: IF YOU HAVE CHANGED THETAM YOU WILL HAVE TO'/  
     1  ' MODIFY INPUT DATA FOR ANY SEGMENT WITH LINE LOADS OR'/  
     1  ' DISTRIBUTED LOADS, BECAUSE THE CIRCUMFERENTIAL DISTRIBUTIONS'/
     1  ' OF THESE LOADS EXTENDS FROM THETA = 0 TO THETA = THETAM.'/    
     1  ' USE MODIFICATION INDICES 6 AND 7 AS DESCRIBED ABOVE.'/) 
      ENDIF 
C     
  162 CONTINUE    
      IF (INDIC.NE.4) IPRE = 1
      INDSIG = 0  
      IF (INDIC.EQ.4.AND.IPRE.EQ.1) INDSIG = 1  
C
      RETURN
      END
C=DECK      GLOB2
      SUBROUTINE GLOB2(ITRAN,INDSIG,INDIC,THETAM,IPRE,NSEG) 
C+---------------------------------------------------------------------+
C+---------------------------------------------------------------------+
C     
C  PURPOSE IS TO ASK QUESTIONS THAT PERTAIN TO ENTIRE STRUCTURE, OTHER  
C  THAN QUESTIONS RELATING TO CONSTRAINT CONDITIONS.  
C     
      COMMON/PRMFIL/IFILE,IFILE2,IOUT,IPRM(5)   
      COMMON/PRMOUT/IFILE3,IFILE4   
      COMMON/INDAT/INFILE     
      COMMON/SEGEND/R1,Z1,R2,Z2,IFLAG1,IFLAG2,IFLAG3,IFLAG4,IFLAG5
      DIMENSION TITLE(12)     
      CHARACTER*4 ANSOUT,ANSWER,CHARAC     
      LOGICAL ANSL1     
C     
C   "GLOBAL2" QUESTIONS FOLLOW...   
C     
      IF (ITRAN.EQ.2) WRITE(IOUT,36)
   36 FORMAT(6X,'H',9X,'$'/6X,'H',9X,'$ GLOBAL DATA BEGINS...')   
      IF (ITRAN.EQ.1) WRITE(IOUT,37)
   37 FORMAT(6X,'H',9X,'$ GLOBAL DATA BEGINS...')     
      REWIND IFILE
      IF (ITRAN.EQ.1)CALL DATUM(IFILE,2,1,2,INDIC,REALL,CHARAC,10,0,1)  
      IF (ITRAN.EQ.1.AND.INDIC.EQ.4)
     1  CALL DATUM(IFILE,6,1,2,IPRE,REALL,CHARAC,10,0,1)    
      IF (INDIC.NE.4) IPRE = 1
      INDSIG = 0  
      IF (INDIC.EQ.4.AND.IPRE.EQ.1) INDSIG = 1  
      REWIND IFILE
      CALL DATUM(IFILE,4,1,2,NLAST,REALL,CHARAC,IOUT,0,1)   
      IF (NLAST.EQ.-1) GO TO 168    
      JPLOT = 0   
      REWIND IFILE3     
      CALL DATUM(IFILE3,500,0,0,INT,REALL,CHARAC,IOUT,0,1)  
      CALL DATUM(IFILE3,510,1,1,INT,REALL,ANSWER,IOUT,0,1)  
      IF (ANSL1('N',ANSWER,INFILE)) GO TO 100   
   20 CONTINUE    
      JPLOT = JPLOT + 1 
      REWIND IFILE3     
      IF (JPLOT.GT.1)   
     1      CALL DATUM(IFILE3,520,1,1,INT,REALL,ANSWER,IOUT,0,1)  
      IF (ANSL1('N',ANSWER,INFILE)) GO TO 100   
      CALL DATUM(IFILE3,530,1,2,ISEG,REALL,CHARAC,IOUT,0,1) 
   22 CONTINUE    
      CALL DATUM(IFILE3,540,1,2,LPLOT,REALL,CHARAC,IOUT,0,1)
      IF (LPLOT.LT.1) THEN    
         WRITE(6,*)' IMPROPER MAGNIFICATION FACTOR. USE INTEGER > 1 '   
         BACKSPACE(IOUT)
         REWIND IFILE3  
         GO TO 22 
      ENDIF 
      GO TO 20    
  100 CONTINUE    
  168 CONTINUE    
C     
      IF (INDIC.EQ.0.OR.INDIC.EQ.3) GO TO 62    
      CALL DATUM(IFILE,19,1,1,N0B   ,REALL,CHARAC,IOUT,0,1) 
      CALL DATUM(IFILE,20,1,1,NMINB ,REALL,CHARAC,IOUT,0,1) 
  169 CONTINUE
      CALL DATUM(IFILE,21,1,1,NMAXB ,REALL,CHARAC,IOUT,0,1) 
      IF (NMAXB.LT.NMINB) THEN
       WRITE(6,*)' NMAXB  MUST BE GREATER THAN OR EQUAL TO  NMINB'
       BACKSPACE(IOUT)
       GO TO 169
      ENDIF
      CALL DATUM(IFILE,22,1,1,INCRB ,REALL,CHARAC,IOUT,0,1) 
      CALL DATUM(IFILE,23,1,1,NVEC  ,REALL,CHARAC,IOUT,0,1) 
   62 CONTINUE    
      IF (INDIC.LT.3.OR.IPRE.EQ.0) GO TO 69     
      CALL DATUM(IFILE,24,1,2,NDIST ,REALL,CHARAC,IOUT,0,1) 
      IF (NDIST.EQ.0) GO TO 61
      DO 63 I = 1,NDIST 
      IPROMP = 1  
      IF (I.GT.1) IPROMP = 0  
      CALL DATUM(IFILE,25,1,1,INT   ,THETA,CHARAC,IOUT,I,IPROMP)  
   63 CONTINUE    
   61 CONTINUE    
      CALL DATUM(IFILE,26,1,2,NCIRC ,REALL,CHARAC,IOUT,0,1) 
      IF (NCIRC.EQ.0) GO TO 65
      DO 64 I = 1,NCIRC 
      IPROMP = 1  
      IF (I.GT.1) IPROMP = 0  
      CALL DATUM(IFILE,27,1,2,ITHETA,REALL,CHARAC,IOUT,I,IPROMP)  
   64 CONTINUE    
  644 CONTINUE
      CALL DATUM(IFILE,28,1,2,NTHETA,REALL,CHARAC,IOUT,0,1) 
      IF (NTHETA.LE.1) THEN
         WRITE(6,*)' NTHETA MUST BE GREATER THAN 1. TRY AGAIN'
         BACKSPACE(IOUT)
         REWIND IFILE
         GO TO 644
      ENDIF
   65 CONTINUE    
      CALL DATUM(IFILE,30,1,2,INT,THETAS,CHARAC,IOUT,0,1)   
   69 CONTINUE    
C     
      IF (INDIC.GT.2) GO TO 160     
      CALL DATUM(IFILE,45,0,0,INT,REALL,CHARAC,IOUT,0,1)    
      CALL DATUM(IFILE,47,1,2,INT,P,CHARAC,IOUT,0,1)  
      IF (INDIC.NE.2)CALL DATUM(IFILE,48,1,1,INT,STEP,CHARAC,IOUT,0,1)  
      CALL DATUM(IFILE,49,1,2,INT,TEMP,CHARAC,IOUT,0,1)     
      IF (INDIC.NE.2)CALL DATUM(IFILE,50,1,1,INT,DTEMP,CHARAC,IOUT,0,1) 

      IF (INDIC.NE.0.AND.INDIC.NE.-2) GO TO 160 
   72 CONTINUE
      CALL DATUM(IFILE,51,1,2,NSTEPS,REALL,CHARAC,IOUT,0,1) 
      IF (NSTEPS.LE.0) THEN
        WRITE(6,*)' BAD VALUE FOR  NSTEPS.  USE POSITIVE INTEGER.'
        BACKSPACE(IOUT)
        REWIND IFILE
        GO TO 72
      ENDIF
C
160   CONTINUE    
C     
      IF (IPRE.EQ.0) GO TO 164
      CALL DATUM(IFILE,55,1,1,INT,OMEGA,CHARAC,IOUT,0,1)    
      IF (INDIC.LT.3) GO TO 164     
      REWIND IFILE3     
      CALL DATUM(IFILE3,480,1,2,IOMGAB,REALL,CHARAC,IOUT,0,1)     
      REWIND IFILE
  164 CONTINUE    
      IF (INDIC.LT.2)   
     1CALL DATUM(IFILE,56,1,1,INT,DOMEGA,CHARAC,IOUT,0,1)   
C     
C     
      IF (INDIC.LT.3.OR.IPRE.EQ.0) GO TO 174    
C     
      REWIND IFILE3     
      CALL DATUM(IFILE3,702,1,1,INT,REALL,ANSOUT,IOUT,0,1)  
      IF (ANSL1('N',ANSOUT,INFILE)) GO TO 174   
      REWIND IFILE
      CALL DATUM(IFILE,57,1,1,INT,OMEGDR,CHARAC,IOUT,0,1)   
      REWIND IFILE3     
      CALL DATUM(IFILE3,704,1,1,INT,REALL,ANSOUT,IOUT,0,1)  
      IF (ANSL1('N',ANSOUT,INFILE)) GO TO 174   
      CALL DATUM(IFILE3,706,1,1,INT,GRAVTY,CHARAC,IOUT,0,1) 
      REWIND IFILE
      CALL DATUM(IFILE,58,1,1,INT,GEES,CHARAC,IOUT,0,1)     
      CALL DATUM(IFILE,59,1,1,INT,GEES,CHARAC,IOUT,0,1)     
C BEG SEP 1997
      CALL DATUM(IFILE,134,1,2,INT,REALL,ANSOUT,IOUT,0,1)
      IF (ANSL1('N',ANSOUT,INFILE)) GO TO 174   
      CALL DATUM(IFILE,136,1,1,INT,GAMMA,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE,138,1,1,INT,AXLONG,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE,140,1,1,INT,RBIG,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE,142,1,1,INT,ZBEGIN,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE,144,0,0,INT,REALL,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE,146,1,2,NSEGFL,REALL,CHARAC,IOUT,0,1)
      DO 172 I = 1,NSEGFL
         CALL DATUM(IFILE,148,1,1,ISTANK,REALL,CHARAC,IOUT,I,1)
         CALL DATUM(IFILE,149,1,2,INT,REALL,ANSOUT,IOUT,0,1)
         REWIND IFILE
  172 CONTINUE
  174 CONTINUE    
      REWIND IFILE
C END SEP 1997
C     
      WRITE(IOUT,32)    
   32 FORMAT(6X,'H',9X,'$ CONSTRAINT CONDITIONS FOLLOW....')
      REWIND IFILE
      CALL DATUM(IFILE,61,1,1,NSEG,REALL,CHARAC,IOUT,0,1)   
C     
      RETURN
      END
C=DECK      GLOB3
      SUBROUTINE GLOB3(ITRAN,INDIC,THETAM,IPRE,NSEG) 
C+---------------------------------------------------------------------+
C+---------------------------------------------------------------------+
C
C   PURPOSE IS TO ASK QUESTIONS ABOUT OUTPUT THAT COME AT VERY END OF
C   INPUT DECK.
C
      COMMON/PRMFIL/IFILE,IFILE2,IOUT,IPRM(5)   
      COMMON/PRMOUT/IFILE3,IFILE4   
      COMMON/INDAT/INFILE     
      COMMON/SEGEND/R1,Z1,R2,Z2,IFLAG1,IFLAG2,IFLAG3,IFLAG4,IFLAG5
      DIMENSION TITLE(12)     
      CHARACTER*4 ANSOUT,ANSWER,CHARAC     
      LOGICAL ANSL1     
C     
      IF (ITRAN.NE.0) WRITE(IOUT,181)     
  181 FORMAT(6X,'H',9X,'$ "GLOBAL3" QUESTIONS (AT END OF CASE)...')     
C     
      IF (ITRAN.EQ.1) THEN    
        REWIND IFILE    
        CALL DATUM(IFILE,61,1,1,NSEG,REALL,CHARAC,10,0,1)   
      ENDIF 
      REWIND IFILE3     
      DO 175 I = 1,NSEG 
      IPROMP = 1  
      IF (I.GT.1) IPROMP = 0  
      CALL DATUM(IFILE3,710,1,1,INT,REALL,ANSOUT,IOUT,I,IPROMP)   
      IF (ANSL1('N',ANSOUT,INFILE)) GO TO 175   
  175 CONTINUE    
      CALL DATUM(IFILE3,740,1,1,INT,REALL,ANSOUT,IOUT,0,1)  
      IF (ANSL1('N',ANSOUT,INFILE)) RETURN
C     
      RETURN
      END   
