C=DECK      ARRAYSLIB
C
C  THIS IS THE ARRAYS LIBRARY  (SOURCE FILE)
C
C
C=DECK      ARRAYS
      SUBROUTINE ARRAYS(BBB,B,C,DI,DIAG)
C
C     CALLED FROM MAIN.. FINDS STIFFNESS MATRIX FOR UNLOADED SHELL,
C     MATRIX OF ELEMENTS ARISING FROM PRESTRESS AND PRE-DEFORMATION,
C     AND MASS MATRIX, ALL FOR A GIVEN CIRCUMFERENTIAL WAVE NUMBER N.
C
      DOUBLE PRECISION B,FB,C,DI
      COMMON/IFRHX/IFB,RHFIX(98),KKKK,MNUMB,ISWTCH,KNT,IFTOT,INDSIG,LFIX
      COMMON/RGFCE/RHF(98)
C BEG DEC 1990
      DIMENSION B(*),IW(1000),ILOC(3000)
#if cray
      DIMENSION DS(1000),BBB(10000),FB(12000),C(*),DIAG(3000),DI(3000)
#else
      DIMENSION DS(1000),BBB(10000),FB(6000),C(*),DIAG(3000),DI(3000)
#endif
C END DEC 1990
      COMMON/BKSIZE/ IMAXP,IMAXB,KMAXP(20),KMAXB(20)
      COMMON/DETER/DET,NEX
      COMMON/IDEIG/IDMODE(500),NVECTL,EIGENW(500)
      COMMON/BLK/IBLK,NGBK(20),NFK(20)
      COMMON/BCK/IDRW(20,5)
      COMMON/SHEL/ISHL(95),IWAL(95),ITHK(95),IARC(95),ILOAD(95)
      COMMON/GLOBAL/IDZ,IZRING(98),ISAVE(20),INOTE
      COMMON/DSPACE/IDS
      COMMON/WAVES/ N0,N,NMIN,NMAX,INCR
      COMMON/INSTAB/INDIC
      COMMON/SEGS/NSEG,M2,I5(95),I2,I2G
      COMMON/TOTPTS/M3
      COMMON/LOCATN/ILOCP,ILOCB,IROWCP(98),IROWCB(98),IIWP,IIWB
      COMMON/OUTP/NPRT
      COMMON/COUNTR/NKOUNT
      COMMON/TWORHS/ITWO,IDMOD2(200)
      COMMON/LOADHM/NLPOS(95),LAB(95),IDAB(95),ILPOS(12,95),PALL(6000)
      IF (NPRT.GT.1) WRITE (6,10)N
10    FORMAT(///107H ENTER SUBROUTINE ARRAYS TO CALCULATE STIFFNESS MATR
     1IX, LOAD-GEOMETRIC MATRIX,L**2 MATRIX, OR MASS MATRIX.  I6,6H WAVE
     2S   )
      IF (NPRT.GT.1) CALL SR100T(2)
      FITWO = ITWO
      ITOT = I2 + 2*NSEG
      CALL GASP(ILOC,M3,3,ILOCB)
      IF (INDIC.EQ.3.AND.NKOUNT.GT.1) GO TO 20
      CALL GASP(IW,ITOT,3,IIWB)
      CALL GASP(DS,I2,3,IDS)
20    IF (INOTE.EQ.1.AND.NKOUNT.GT.1) GO TO 30
      IF (INOTE.EQ.1) CALL GASP(BBB,ISAVE(1),3,ISHL(1))
30    CONTINUE
C
C     BASIC STIFFNESS MATRIX CALCULATED (IBUCK=1)
C
      IF (NPRT.GT.1) WRITE (6,40)
40    FORMAT(/50H    BEGIN STIFFNESS MATRIX COMPUTATION. IBUCK = 1     )
      IF (NPRT.GT.1) CALL SR100T(2)
      CALL ASTAB(1,B,IFB,RHF,RHFIX,IW,ILOC,DS,BBB,FB)
      IF (NPRT.GT.1) WRITE (6,50)
50    FORMAT(40H    STIFFNESS MATRIX COMPUTED, IBUCK = 1    )
      IF (NPRT.GT.1) CALL SR100T(2)
      IF (INDIC.EQ.3.OR.INDIC.EQ.-2) GO TO 110
      IF (INDIC.EQ.2) GO TO 90
60    CONTINUE
C
C     LOAD-GEOMETRIC MATRIX COMPUTATION
C
      CALL ASTAB(2,B,IFB,RHF,RHFIX,IW,ILOC,DS,BBB,FB)
      IF (NPRT.GT.1) WRITE (6,70)
70    FORMAT('    LOAD-GEOMETRIC MATRIX COMPUTED. IBUCK=2.')
      IF (NPRT.GT.1) CALL SR100T(2)
90    IF (INDIC.NE.2) GO TO 110
C
C     MASS MATRIX IS DERIVED FOR VIBRATION PROBLEMS (INDIC=2,IBUCK=3)
C
      CALL ASTAB(3,B,IFB,RHF,RHFIX,IW,ILOC,DS,BBB,FB)
      IF (NPRT.GT.1) WRITE (6,100)
100   FORMAT(35H    MASS MATRIX COMPUTED, IBUCK = 3   )
      IF (NPRT.GT.1) CALL SR100T(2)
110   CONTINUE
      IF (INDIC.NE.3) GO TO 180
C     SOLUTION OF LINEAR STRESS PROBLEM FOR GIVEN VALUE OF WAVENUMBER, N
      CALL FACTR(C,B,IDRW(1,1),DET,NEX,IBLK,NGBK,NFK,ILOC,DIAG,DI,KMAXB)
      IF (NPRT.LT.3) GO TO 140
      IF (NKOUNT.EQ.1) WRITE(6,115) (PALL(J),J=1,100)
  115 FORMAT(//' PALL(J), J=1,100 ='/(1P10E12.4))
      DO 135 J = 1,ITWO
      IF (J.EQ.1) WRITE(6,120)
      IF (J.EQ.2) WRITE(6,125)
120   FORMAT(//' INDIC = 3, RIGHT-HAND-SIDE FOLLOWS, LOAD SYSTEM A') 
125   FORMAT(//' INDIC = 3, RIGHT-HAND-SIDE FOLLOWS, LOAD SYSTEM B')
      IF (J.EQ.1) THEN
      WRITE (6,130)(FB(I),I=1,M3)
      ELSE
      IBEG = M3+1
      IEND = 2*M3
      WRITE (6,130)(FB(I),I=IBEG,IEND)
      ENDIF
130   FORMAT(1P10E12.5)       
135   CONTINUE
140   CALL SOLVE(B,FB,IBLK,IDRW(1,1),NGBK,ILOC,DIAG,M3,ITWO)
      MNUMB = MNUMB + 1
      IF (NPRT.LT.3) GO TO 160
      WRITE (6,150)MNUMB
150   FORMAT(//38H SOLUTION VECTOR FOLLOWS FOR MNUMB =   ,I3//)
      WRITE (6,130)(FB(I),I=1,M3)
160   M32 = 2*M3
      CALL GASP(FB,M32,1,IDMODE(MNUMB))
      IF (ITWO.EQ.2) CALL GASP(FB(M3+1),M32,1,IDMOD2(MNUMB))
  165 FORMAT(//' M3,M32,MNUMB,IDMODE(MNUMB),(FB(I),I=1,M3)=',4I10/
     1 (1P10E12.3))
      IF (NPRT.LT.2) GO TO 180
      WRITE (6,170)
170   FORMAT(//100H LINEAR EQUILIBRIUM EQUATIONS SOLVED FOR CURRENT VALU
     1E OF CIRCUMFERENTIAL WAVENUMBER,N.                             //)
180   CONTINUE
      RETURN
      END
C=DECK      ASTAB
C./      ADD   NAME=ASTAB
      SUBROUTINE ASTAB(IBUCK,B,IFB,RHF,RHFIX,IW,ILOC,DS,BBB,FB)
C
C     CALLED FROM ARRAYS, WHICH IS CALLED FROM MAIN. FINDS COEFFICIENT
C     MATRICES FOR ALL SHELL SEGMENTS FOR A GIVEN VALUE OF WAVENUMBER N.
C     WITH IBUCK = 1, STIFFNESS MATRIX OF SHELL LOADED BY FIXED LOADS
C                     IS DERIVED.
C     WITH IBUCK=2, THE LOAD-GEOMETRIC MATRIX IS CALCULATED (BUCKLING)
C     WITH IBUCK=3, THE MASS MATRIX IS CALCULATED (VIBRATION)
C     WITH IBUCK=4, THE LAMBDA-SQUARED MATRIX IS COMPUTED (BUCKLING)
C
      DOUBLE PRECISION B,FB
      COMMON/GLOBAL/IDZ,IZRING(98),ISAVE(20),INOTE
      COMMON/SHEL/ISHL(95),IWAL(95),ITHK(95),IARC(95),ILOAD(95)
      COMMON/SEGS/NSEG,M2,I5(95),I2,I2G
      DIMENSION RHF(98),RHFIX(98),FB(1980),IW(*),ILOC(*)
C BEG DEC 1990
      DIMENSION B(*),BBB(10000),DS(1000),Z(1000)
C END DEC 1990
      COMMON/MISCEL/ICOND1,ICOND2,KK,NSUB,KLAP,I5TOT,IC,III,IV
      COMMON/JUNCT/IFIX(98,6),IFX(98,6),ITYPE(98)
      COMMON/JUNCTB/IFIXB(98,6),IFXB(98,6),ITYPEB(98)
      COMMON/LOCATN/ILOCP,ILOCB,IROWCP(98),IROWCB(98),IIWP,IIWB
      COMMON/ORTA/IFLGG,KTM,KROOTS
      COMMON/TOTPTS/M3
      COMMON/RMASS/RM(98)
      COMMON/INSTAB/INDIC
      COMMON/BKSIZE/IMAXP,IMAXB,KMAXP(20),KMAXB(20)
      COMMON/LOADHM/NLPOS(95),LAB(95),IDAB(95),ILPOS(12,95),PALL(6000)
      COMMON/TWORHS/ITWO,IDMOD2(200)
C  FOLLOWING 7 STATEMENTS FOR DYNAMIC REACTION (AUG. 17, 1985)
      COMMON/IZDTR/IZZ
      COMMON/COUNTR/NKOUNT
      IF (IBUCK.NE.1) GO TO 5
      IF (INDIC.NE.3) GO TO 5
      IF (NKOUNT.GT.1) GO TO 5
      CALL GASP(Z,I2,3,IZZ)
    5 CONTINUE
C
      ICOND1 = 1
      ICOND2 = 1
      KK = 1
      NSUB = 7
      KLAP = 4
      I5TOT = 0
      IC = 4
      III = 1
      IV = 0
      FITWO = ITWO
      IF (IBUCK.EQ.1) KROOTS = 0
      IF (INDIC.NE.3) GO TO 20
      M32 = ITWO*M3
      DO 10 I=1,M32
10    FB(I) = 0.0
20    CONTINUE
      IMAX = IMAXB
      DO 30 I=1,IMAX
30    B(I)  = 0.0
40    FORMAT(1P9E13.4)
      ITOT = 1
      ITOTL = 0
      IF (INOTE.GT.1) CALL GASP(BBB,ISAVE(1),3,ISHL(1))
      IADD = 2
      DO 70 I=1,NSEG
C
C     CALCULATE MATRIX ELEMENTS FOR NEXT SHELL SEGMENT
C     ALSO RIGHT-HAND-SIDE CALCULATED FOR NONSYMMETRIC STRESS ANALYSIS
C     IF INDIC = 3.
C
      I5I = I5(I)
50    IPOS = 43*ITOTL + 1
      IEND = IPOS + 43*I5I - 1
      IF (IEND.LT.10000) GO TO 60
      CALL GASP(BBB,ISAVE(IADD),3,ISHL(IADD))
      ITOTL = 0
      IADD = IADD + 1
      GO TO 50
60    CONTINUE
C
      IF (INDIC.EQ.3) CALL STABIL(I,I5I,DS(ITOT),NSEG,IBUCK,
     1 BBB(8*I5I+IPOS),BBB(27*I5I+IPOS),BBB(22*I5I+IPOS),FB,B,IW,
     2 BBB(IPOS),ILOC,IFX,IFIX,IROWCB,ITYPE,IMAX,BBB(33*I5I+IPOS),
     3 BBB(36*I5I+IPOS),RHF,RHFIX,RM,IFXB(1,2),PALL,ILPOS(1,I),
     4 Z(ITOT))
C
      IF (INDIC.NE.3)
     1CALL STABIL(I,I5I,DS(ITOT),NSEG,IBUCK,BBB(8*I5I+IPOS),
     1BBB(27*I5I +IPOS),BBB(22*I5I+IPOS),FB,B,IW,BBB(IPOS),ILOC,IFXB,
     2IFIXB,IROWCB,ITYPEB,IMAX,BBB(33*I5I+IPOS),BBB(36*I5I+IPOS),
     3RHF,RHFIX,RM,IFXB(1,2),PALL,ILPOS(1,I),Z(ITOT))
C
      ITOT = ITOT + I5I
      ITOTL = ITOTL + I5I
70    CONTINUE
      RETURN
      END
C=DECK      STABIL
      SUBROUTINE STABIL(ISEG,L5,HS,NSEG,IBUCK,COEF,PR,BG,FFF,AS,IW,THERM
     1,ILOC,IFX,IFIX,IROWC,ITYPE,IMAX,PSVAR,PSFIX,RHF,RHFIX,RM,IROWCN,
     1 PALL,IPOS,Z)
C
C     CALLED FROM ASTAB, WHICH IS CALLED FROM ARRAYS, WHICH IS CALLED
C     FROM MAIN.  SETS UP STABILITY OR VIBRATION OR NONSYMMETRIC
C     STRESS EQUATIONS FOR CURRENT SEGMENT (ISEG) AND CURRENT WAVE-
C     NUMBER N. SEE THE DESCRIPTION UNDER PRESTS FOR MORE DETAILS OF
C     METHOD. BASED ON MINIMIZATION OF ENERGY WITH RESPECT TO MESH
C     POINT DISPLACEMENTS.
C
      DOUBLE PRECISION  R,RD,FK1,FK2,CURD,RDS,FN,H
      DOUBLE PRECISION C,B1,D,  G,E,TR1,U,ROT,TR2,PRE,TR3,G1,QD,AS
      DOUBLE PRECISION DS,SMS,RHORC,RHORCA,CHIFIX,CHIVAR
      DOUBLE PRECISION FFF,VN1,VN2,WB,VB,UB,QSAVE
      DOUBLE PRECISION USTAR,VSTAR,WSTAR,HPAST,HI,WBD
      DIMENSION UB(7),VB(7),WB(7),HS(*),WBD(7),Z(*)
      DIMENSION COEF(L5,14),BG(L5,5),PR(L5,6),RHFIX(98),RHF(98)
      COMMON/ORTA/IFLGG,KTM,KROOTS
      COMMON/INERT/FIS(98),FIN(98),FISN(98)
      COMMON/WAVES/N0,N,NMIN,NMAX,INCR
      COMMON/INTRG/NSTATN(95),IRING(95,20)
      COMMON/GGG/ R,RD,FK1,FK2,CURD,RDS,FN,H
      COMMON/RNGGEO/RC(98),AREA(98),ER(98),IY(98),IX(98),IXY(98),IP(98)
      REAL IX,IY,IXY,IP
      COMMON/FNDAT/FSTIF(95)
      COMMON/THEMAL/ITHERM(95)
      COMMON/INSTAB/INDIC
      DIMENSION G1(4,4),QD(4,7),RM(95),PSVAR(L5,3),PSFIX(L5,3)
      DIMENSION IFX(98,6),IFIX(98,6),ILOC(*),ITYPE(98),IROWC(98)
      DIMENSION IROWCN(98),PALL(*),IPOS(*)
C BEG DEC 1990
      DIMENSION QSAVE(70,4,7),IRSAVE(70),ISAVE(70,7),IW(*),AS(*)
C END DEC 1990
      DIMENSION FFF(*),THERM(L5,8)
      DIMENSION C(6,6),B1(6,7),D(4,7),G(4,4),E(4,4)
      DIMENSION TR1(4,4),U(7,7),ROT(3,7),TR2(3,3),PRE(3,3),TR3(4,4)
      COMMON/EIGENV/P,OMG2,RHO
      COMMON/STEPS/STEP,STEP1(98),STEP2(98),STEP3(98)
      COMMON/MISCEL/ICOND1,ICOND2,IK,NSUB,KLAP,I5TOT,IC,III,IV
      COMMON/FORCES/V(98),HF(98),FM(98)
      COMMON/FORFIX/IOMGAB,VFIX(98),SHFIX(98),HFIX(98),FMFIX(98)
      COMMON/RGTEMP/TNR(98),TMR(98),TMRX(98)
      COMMON/DRGTEM/TNRFIX(98),TMRFIX(98),TMXFIX(98)
      COMMON/TWORHS/ITWO,IDMOD2(200)
      COMMON/TOTPTS/M3
      COMMON/SHEARF/SHEAR(98)
      COMMON/NOHARM/NHARM
      COMMON/COUNTR/NKOUNT
      COMMON/NCONDS/NCOND
      COMMON/OUTP/NPRT
      COMMON/CMAXS/CMAX
      COMMON/BCK/IDRW( 20,5)
      COMMON/BLK/IBLK,NGBK(20),NKF(20)
      COMMON/RING3/D1(98),D2(98)
c Renamed SIGNAL to SIGNAx, Feb 1996
      COMMON/PRERT/PREROT,SIGNAx,IPREBK
      COMMON/INDICS/I3M,I2M,I1M,I0,I1P,I2P,I3P
      COMMON/RBODY/ISTOP0(6),ISTOP1(6)
      COMMON/AMPFAC/OMEGDR,YLATRL,YAXIAL,BDAMP,AMPLTD,GAMP(200)
      COMMON/ALLRNG/NTOT,IPRE
      COMMON/RHARM/RVAR(98),RFIX(98)
C BEG SEP 1997
      COMMON/NUMTNK/IFLSEG(95)
C END SEP 1997
50    KK = 1
C
C     SOME INITIALIZATIONS FOLLOW.
      DO 70 I=1,6
      DO 60 J=1,6
60    C(I,J) = 0.0
      DO 70 J=1,7
70    B1(I,J) = 0.0
      DO 90 I=1,4
      DO 80 J=1,7
      QD(I,J) = 0.0
80    D(I,J) = 0.0
      DO 90 J=1,4
      G(I,J) = 0.0
      E(I,J) = 0.0
90    TR1(I,J) = 0.0
      DO 110 I=1,3
      DO 100 J=1,7
100   ROT(I,J) = 0.0
      DO 110 J=1,3
      TR2(I,J) = 0.0
110   PRE(I,J) = 0.0
      DO 120 I=1,7
      UB(I) = 0.0
      VB(I) = 0.0
      WBD(I) = 0.0
120   WB(I) = 0.0
      UB(2) = 0.5
      UB(5) = 0.5
      VB(3) = 0.5
      VB(6) = 0.5
      FN = FLOAT(N)
C
C     LOOP BEGINS FOR COEFFICIENT MATRIX AND RIGHT-HAND-SIDE  VECTOR,
C     IF ANY.
      HI = HS(1)
      DO 710 I=1,L5
      H = HS(I)
      HPAST = HI
      HI = 2.*H - HPAST
      IT = I5TOT + I + 1
C     GLOBAL EQUATION NO.S FOR FINITE-DIFFERENCE 'ELEMENT' MODULE ARE
C     I3M,I2M,I1M,I0,I1P,I2P,I3P.  THESE LOCATE THE LOCAL ELEMENT
C     MATRICES FOR ASSEMBLY INTO THE GLOBAL MATRICES
      I3M = IW(IT - 1)
      I0 = IW(IT)
      I3P = IW(IT + 1)
      I2M = I0 - 2
      I1M = I0 - 1
      I1P = I0 + 1
      I2P = I0 + 2
C     CERTAIN LOCAL MATRICES ARE 'EXPLODED' BECAUSE OF MINUS SIDES OF
C     CONSTRAINT CONDITIONS.
      I3PI0 = I3P - I0
      ICNSUB = IC + NSUB - KLAP
      IF(I3PI0.EQ.ICNSUB) I1P = I0 + IC + 1
      IF(I3PI0.EQ.ICNSUB) I2P = I0 + IC + 2
C     INITIALIZE LOCAL ENERGY MATRIX U.
      DO 130 II=1,7
      DO 130 JJ=1,7
130   U(II,JJ) = 0.0
      DS = H
      IF (I.EQ.1.OR.I.EQ.L5) DS = H/2.
C     SHELL GEOMETRY PARAMETERS . .
C        R = PARALLEL CIRCLE RADIUS
C        RD= DERIVATIVE OF PARALLEL CIRCLE RADIUS WITH RESPECT TO S
C       FK1= MERIDIONAL CURVATURE
C       FK2= NORMAL CIRCUMFERENTIAL CURVATURE
C      CURD =DERIVATIVE OF MERIDIONAL CURVATURE W.R.T. S
C
      R = BG(I,1)
      RD = BG(I,2)
      FK1 = BG(I,3)
      FK2 = BG(I,4)
      CURD = BG(I,5)
      RDS = R*DS
C     POLE CONDITIONS
      ISIG = 0
      RI = R
      IF (R.NE.0.) GO TO 140
      R = H/100000.
      ISIG = 1
      RDS = H**2/8.
140   CONTINUE
C     DIFFERENCE EXPRESSIONS FOR W,W' FOR VARIABLE SPACING
C
      CALL GETWWD(H,HI,HPAST,WB,WBD)
C     CONSTITUTIVE EQUATION COEFFICIENTS
      CALL GETC(L5,I,COEF,C)
C     KINEMATIC RELATIONS FOR UNDEFORMED SHELL
      CALL GETROT(ROT,I,L5,ISIG,WB,WBD)
      CHIFIX = PSFIX(I,3)
      IF (INDIC.GE.3) CHIFIX = 0.0
      IF (IBUCK.NE.1) CHIFIX = 0.0
      IF (IBUCK.LT.3) CALL GETB1(B1,CHIFIX,ROT,L5,ISIG,WB,WBD,HPAST,HI)
      IF (IBUCK.NE.1) GO TO 160
      IF (INDIC.EQ.3) GO TO 150
C     'FIXED' PRESSURE-ROTATION EFFECT
      PSEC = 1.0
      PBEFOR = P - STEP
      IF (INDIC.EQ.2.OR.INDIC.EQ.-2) PBEFOR = P
      IF (INDIC.EQ.4) PBEFOR = 0.
      IF (INDIC.EQ.4) PSEC = PSFIX(I,3)
      CALL GETP(PBEFOR,PR(I,3),PSEC,PR(I,6),WB,U)
      PRE(1,1) = PSFIX(I,1)*RDS
      PRE(2,2) = PSFIX(I,2)*RDS
      PRE(3,3) = PRE(1,1) + PRE(2,2)
C     WORK DONE BY 'FIXED' PRESTRESSES DURING BUCKLING OR VIBRATION
      CALL MATMU4(PRE,ROT,U,3,7,1)
C     SHELL WALL STRAIN ENERGY INDEPENDENT OF 'VARIABLE' LOADS
150   CALL MATMU4(C,B1,U,6,7,1)
C
C     ADD ELASTIC FOUNDATION CONTRIBUTION...
C
      CALL FOUNDA(FSTIF(ISEG),WB,RDS,U)
C
C     CONTRIBUTIONS OF DISTRIBUTED THERMAL AND MECHANICAL LOADS TO RHS
C BEG SEP 1997
C     WRITE(6,'(A,2I4)')' ISEG,IFLSEG(ISEG)=', ISEG,IFLSEG(ISEG)
      IF (INDIC.EQ.3)CALL SRHS(I,L5,B1,THERM,PR,FFF,WB,ISEG,COEF(I,14),
     1  IPOS(7),PALL,1,IOMGAB,Z(I),IFLSEG(ISEG))
      IF (INDIC.EQ.3.AND.ITWO.EQ.2) CALL SRHS(I,L5,B1,THERM(1,5),
     1  PR(1,4),FFF(M3+1),WB,ISEG,COEF(I,14),IPOS(10),PALL,2,IOMGAB,
     1  Z(I),IFLSEG(ISEG))
C END SEP 1997
      IF (OMEGDR.GT.0.) CALL MASDRV(OMEGDR,COEF(I,14),RDS,WB,U)
      GO TO 220
160   IF (IBUCK.NE.2) GO TO 200
C     VN1 = MERIDONAL PRESTRESS RESULTANT
C     VN2 = CIRCUMFERENTIAL PRESTRESS RESULTANT
      IF (INDIC.NE.4) THEN
      VN1 = RDS*(PSVAR(I,1)-     PSFIX(I,1))
      VN2 = RDS*(PSVAR(I,2)-     PSFIX(I,2))
      ELSE
      VN1 = RDS*PSVAR(I,1)
      VN2 = RDS*PSVAR(I,2)
      ENDIF
C     'VARIABLE' PRESSURE-ROTATION EFFECT
      IF (INDIC.NE.4) CALL GETP(STEP,PR(I,3),0.,0.,WB,U)
      IF (INDIC.EQ.4.AND.IPRE.EQ.1)
     1  CALL GETP(PSVAR(I,3),PR(I,3),0.,0.,WB,U)
      PRE(1,1) = VN1
      PRE(2,2) = VN2
      PRE(3,3) = VN1 + VN2
C     WORK DONE BY 'VARIABLE' PRESTRESS DURING BUCKLING
      CALL MATMU4(PRE,ROT,U,3,7,1)
      GO TO 220
200   IF (IBUCK.NE.4) GO TO 210
210   IF (IBUCK.NE.3) GO TO 220
C     LOCAL MASS MATRIX GENERATED
      SMS = COEF(I,14)
      U(2,2) = -0.25*SMS*RDS
      U(3,3) = U(2,2)
      U(1,1) =-WB(1)*WB(1)*RDS*SMS
      U(4,1) =-WB(4)*WB(1)*RDS*SMS
      U(7,1) =-WB(7)*WB(1)*RDS*SMS
      U(7,4) =-WB(7)*WB(4)*RDS*SMS
      U(4,4) =-WB(4)*WB(4)*RDS*SMS
      U(7,7) =-WB(7)*WB(7)*RDS*SMS
      U(5,2) = U(2,2)
      U(5,5) = U(2,2)
      U(6,3) = U(2,2)
      U(6,6) = U(2,2)
220   CONTINUE
C     RING ENERGY AND RIGHT-HAND-SIDE
C
      IF (I.NE.IRING(ISEG,KK)) GO TO 260
      IF (IBUCK.NE.1) GO TO 230
C     E-MATRIX RELATES DISCRETE RING CENTROIDAL VARIABLES TO AXIAL AND
C     RADIAL DISPLACEMENTS OF REFERENCE SURFACE OF SHELL AT RING ATTACH-
C     MENT POINT
      CALL GETE(IK,E)
C     D-MATRIX RELATES AXIAL AND RADIAL DISPLACEMENTS TO NORMAL AND
C     TANGENTIAL DISPLACEMENTS
      CALL GETD(I,D,ROT,UB,VB,WB)
C     G-MATRIX RELATES RING FORCES TO RING CENTROIDAL DISPLACEMENTS
C     FIXED PRELOAD EFFECTS INCLUDED
      HBEFOR = HF(IK) - STEP2(IK) + HFIX(IK)
      IF (INDIC.EQ.2.OR.INDIC.EQ.-2) HBEFOR = HF(IK) + HFIX(IK)
      IF (INDIC.EQ.4) HBEFOR = HFIX(IK)*RFIX(IK)
      IF (INDIC.EQ.3) HBEFOR = 0.
      CALL GETG(IK,FN,HBEFOR,RHFIX,G)
      CALL MATMU2(G,E,G1,4,4,0)
      CALL MATMU4(G1,D,U,4,7,1)
C     CONTRIBUTION TO RIGHT-HAND-SIDE VECTOR OF LINE LOADS IN RRHS
      IF (INDIC.EQ.3) CALL RRHS(I,E,D,FFF,IK,ISEG,IPOS,PALL,1,
     1                       V,SHEAR,HF,FM,TNR,TMR,TMRX,IOMGAB,Z(I))
      IF (INDIC.EQ.3.AND.ITWO.EQ.2) CALL RRHS(I,E,D,FFF(M3+1),IK,ISEG,
     1 IPOS(4),PALL,2,VFIX,SHFIX,HFIX,FMFIX,TNRFIX,TMRFIX,TMXFIX,
     1 IOMGAB,Z(I))
      IF (OMEGDR.GT.0.) CALL RMASDV(OMEGDR,RM(IK),RC(IK),AREA(IK),
     1 FIS(IK),FIN(IK),FISN(IK),E,D,ROT,TR1,TR2,TR3,U)
      GO TO 250
230   IF (IBUCK.NE.2) GO TO 240
C     WORK DONE BY 'VARIABLE' LOADS DURING BUCKLING DISPLACEMENTS OF
C     DISCRETE RING.
      CALL GETE(IK,E)
      CALL GETD(I,D,ROT,UB,VB,WB)
C
      DH = STEP2(IK)
      IF (INDIC.EQ.4.AND.IPRE.EQ.1) DH = HF(IK)*RVAR(IK)
      IF (INDIC.EQ.4.AND.IPRE.EQ.0) DH = 0.
C
      IF (INDIC.NE.4) THEN
      RHFIK = RHF(IK) - RHFIX(IK)
      ELSE
      RHFIK = RHF(IK)
      ENDIF
C
      G(1,1) = FN*FN*RHFIK  /RC(IK)
      G(2,2) = RHFIK  /RC(IK) - DH
      G(2,3) = -FN*RHFIK  /RC(IK)
      G(3,2) = G(2,3)
      G(3,3) = G(1,1) + DH
      CALL MATMU2(G,E,G1,4,4,0)
      CALL MATMU4(G1,D,U,4,7,1)
      GO TO 250
240   IF (IBUCK.NE.3) GO TO 250
C     CONTRIBUTION TO THE MASS MATRIX OF DISCRETE RING
      CALL GETE(IK,E)
      CALL GETD(I,D,ROT,UB,VB,WB)
      RHORC = - RM(IK)*RC(IK)
      RHORCA = RHORC*AREA(IK)
      TR1(1,1) = RHORCA
      TR1(2,2) = RHORCA
      TR1(3,3) = RHORCA
      TR1(4,4) = RHORC*(FIS(IK) + FIN(IK))
      TR2(2,2) = RHORC*FIS(IK)
      TR2(2,3) = - RHORC*FISN(IK)
      TR2(3,2) = TR2(2,3)
      TR2(3,3) = RHORC*FIN(IK)
      CALL MATMU2(TR1,E,TR3,4,4,0)
      CALL MATMU4(TR3,D,U,4,7,1)
      CALL MATMU4(TR2,ROT,U,3,7,1)
250   IK = IK + 1
      KK = KK + 1
260   CONTINUE
C
C     CONSTRAINT CONDITIONS
C
C     IFX(ICOND1,1) CONTAINS LOCATIONS OF 'MINUS' SIDE OF JUNCTURE
C     IN MONOTONICALLY INCREASING ORDER.
      IF (ICOND1.GT.NCOND) GO TO 410
      IF (I.EQ.(IFX(ICOND1,1)-ISEG*1000)) GO TO 270
      GO TO 410
C     FILL THE 'MINUS'PART OF THE CONSTRAINT CONDITION
C
C     IR,IR1,IR2,IR3 CONTAIN GLOBAL MATRIX ROW NOS. CORRESPONDING TO THE
C     LAGRANGE MULTIPLIERS ASSOCIATED WITH CONSTRAINT CONDITIONS
C     IDENTIFIED BY IFX(ICOND1,1)
270   IR = IROWCN(ICOND1)
      IR1 = IR + 1
      IR2 = IR + 2
      IR3 = IR + 3
      IF (IBUCK.EQ.1) GO TO 280
      ICOND1 = ICOND1 + 1
      GO TO 260
280   KKK = ICOND1
C
C     FIFX1, 2, 3, AND 4 CONTAIN INTEGERS WHICH MAY OR MAY NOT RELEASE
C     THE CONSTRAINT CONDITIONS.
      IF (IABS(N).GT.1) GO TO 300
      IF (IABS(N).GT.0) GO TO 290
      IF ((ISTOP0(1)/1000).NE.ISEG) GO TO 300
      IF ((ISTOP0(1)-1000*ISEG).NE.I) GO TO 300
      IF(IFX(ICOND1,3).EQ.1.AND.IFX(ICOND1,4).EQ.1) GO TO 300
C     RIGID BODY AXISYMMETRIC DISPLACEMENTS PREVENTED
      FIFX1 = ISTOP0(3)*CMAX
      FIFX2 = ISTOP0(4)*CMAX
      FIFX3 = ISTOP0(5)*CMAX
      FIFX4 = ISTOP0(6)*CMAX
      GO TO 310
290   IF ((ISTOP1(1)/1000).NE.ISEG) GO TO 300
      IF ((ISTOP1(1)-1000*ISEG).NE.I) GO TO 300
      IF(IFX(ICOND1,3).EQ.1.AND.IFX(ICOND1,4).EQ.1) GO TO 300
C     RIGID BODY DISPLACEMENTS CORRESPONDING TO N=1 CIRCUMFERENTIAL
C     WAVE ARE PREVENTED
      FIFX1 = ISTOP1(3)*CMAX
      FIFX2 = ISTOP1(4)*CMAX
      FIFX3 = ISTOP1(5)*CMAX
      FIFX4 = ISTOP1(6)*CMAX
      GO TO 310
300   CONTINUE
      FIFX1 = IFX(ICOND1,3)*CMAX
      FIFX2 = IFX(ICOND1,4)*CMAX
      FIFX3 = IFX(ICOND1,5)*CMAX
      FIFX4 = IFX(ICOND1,6)*CMAX
C
      IF (INDIC.NE.3) GO TO 305
C
C     ADD STATEMENTS FOR ENFORCED NONSYMMETRIC LINE LOADS...
C
      IF (IFX(ICOND1,3).EQ.2) FIFX1 = CMAX
      IF (IFX(ICOND1,4).EQ.2) FIFX2 = CMAX
      IF (IFX(ICOND1,5).EQ.2) FIFX3 = CMAX
      IF (IFX(ICOND1,6).EQ.2) FIFX4 = CMAX
      USPEC = 0.
      VSPEC = 0.
      WSPEC = 0.
      CHISPC= 0.
      IF (IPOS(1).EQ.0.AND.IPOS(2).EQ.0) GO TO 303
      INDX1 = IPOS(1) + NKOUNT - 1
      INDX2 = IPOS(2) + NKOUNT - 1
      IF (IFX(ICOND1,3).EQ.2) USPEC = V(KK-1)*PALL(INDX1)
      IF (IFX(ICOND1,4).EQ.2) VSPEC = SHEAR(KK-1)*PALL(INDX2)
      IF (IFX(ICOND1,5).EQ.2) WSPEC = HF(KK-1)*PALL(INDX1)
      IF (IFX(ICOND1,6).EQ.2) CHISPC= FM(KK-1)*PALL(INDX1)
  303 CONTINUE
      USPECB = 0.
      VSPECB = 0.
      WSPECB = 0.
      CHISPB = 0.
      IF (ITWO.NE.2) GO TO 305
      IF (IPOS(4).EQ.0.AND.IPOS(5).EQ.0) GO TO 305
      INDX1 = IPOS(4) + NKOUNT - 1
      INDX2 = IPOS(5) + NKOUNT - 1
      IF (IFX(ICOND1,3).EQ.2) USPECB = VFIX(KK-1)*PALL(INDX1)
      IF (IFX(ICOND1,4).EQ.2) VSPECB = SHFIX(KK-1)*PALL(INDX2)
      IF (IFX(ICOND1,5).EQ.2) WSPECB = HFIX(KK-1)*PALL(INDX1)
      IF (IFX(ICOND1,6).EQ.2) CHISPB= FMFIX(KK-1)*PALL(INDX1)
305   CONTINUE
C
310   IF (RI.NE.0.) GO TO 320
C     POLE CONDITIONS
C
      FIFX1 = CMAX
      FIFX2 = CMAX
      FIFX3 = CMAX
      FIFX4 = CMAX
      IF (N.EQ.0) FIFX1 = 0.
      IF (IABS(N).NE.1) GO TO 320
      FIFX2 = 0.
      FIFX3 = 0.
      FIFX4 = 0.
320   CONTINUE
      IF (INDIC.EQ.3) GO TO 330
C     KROOTS = NO. OF NEGATIVE EIGENVALUES DUE TO LAGRANGE MULTIPLIERS
C              WE KEEP TRACK OF THIS TO AVOID MISSING ROOTS IN
C              EBAND,EBAND2, AND EIGEN, THE THREE EQUATION-SOLVING
C              ROUTINES.
      IF (FIFX1.NE.0.) KROOTS = KROOTS+1
      IF (FIFX2.NE.0.) KROOTS = KROOTS+1
      IF (FIFX3.NE.0.) KROOTS = KROOTS+1
      IF (FIFX4.NE.0.) KROOTS = KROOTS+1
330   CONTINUE
C
C     D1(KKK) = KKKTH RADIAL DISCONTINUITY
C     D2(KKK) = KKKTH AXIAL  DISCONTINUITY
      IF (INDIC.NE.3) GO TO 335
C
C     R.H.S. VECTOR CONTRIBUTIONS FROM IMPOSED NONSYMMETRIC DISPLACE...
C
      FFF(IR) = FFF(IR) - USPEC*FIFX1
      FFF(IR1)= FFF(IR1)- VSPEC*FIFX2
      FFF(IR2)= FFF(IR2)- WSPEC*FIFX3
      FFF(IR3)= FFF(IR3)- CHISPC*FIFX4
      IF (ITWO.NE.2) GO TO 335
      FFF(M3+IR) = FFF(M3+IR) - USPECB*FIFX1
      FFF(M3+IR1)= FFF(M3+IR1)- VSPECB*FIFX2
      FFF(M3+IR2)= FFF(M3+IR2)- WSPECB*FIFX3
      FFF(M3+IR3)= FFF(M3+IR3)- CHISPB*FIFX4
335   CONTINUE
C
C     BEGINNING OF LOOP FOR CONTRIBUTION TO ENERGY OF 'MINUS' PART
C     OF CONSTRAINT AND BOUNDARY CONTITIONS.
C
      DO 340 II=1,NSUB
      USTAR = R*FK2*UB(II) - RD*WB(II)
      VSTAR = VB(II)
      WSTAR = RD*UB(II) + R*FK2*WB(II)
      IF (IFX(ICOND1,3).EQ.3) USTAR = UB(II)
      IF (IFX(ICOND1,5).EQ.3) WSTAR = WB(II)
C     QD( ) = LOCAL MATRIX CONTAINING 'MINUS' PART OF CONSTRAINTS
C
      QD(1,II) = FIFX1*(-USTAR + D1(KKK)*ROT(1,II))
      QD(2,II) = FIFX2*(-VSTAR +
     1(D1(KKK)*(FN*WSTAR-VSTAR) +D2(KKK)*FN*USTAR)/R)
      QD(3,II) = FIFX3*(-WSTAR - D2(KKK)*ROT(1,II))
      QD(4,II) = -FIFX4*ROT(1,II)
340   CONTINUE
      IF (RI.NE.0.) GO TO 360
      IF (IABS(N).NE.1) GO TO 360
C     POLE CONDITION
      DO 350 II=1,NSUB
      QD(3,II) = QD(3,II) + QD(2,II)
350   QD(2,II) = 0.
360   CONTINUE
C
C     END OF LOOP FOR 'MINUS' PART OF CONSTRAINT CONDITIONS.
C
      ICOND1 = ICOND1 + 1
C     FILL AS ARRAY WITH MINUS PART OF CONSTRAINT CONDITIONS.
C
      IF ((ILOC(IR)-ILOC(IR-1)).GT.(NSUB+1)) GO TO 380
C     THIS BRANCH CORRESPONDS TO CONSTRAINT CONDITIONS OF TYPE 1,2,AND5
      DO 370 II=1,NSUB
      IB = ILOC(IR) - NSUB - 1 + II
      AS(IB) = QD(1,II)
      IB = ILOC(IR1) - NSUB - 2 + II
      AS(IB)= QD(2,II)
      IB = ILOC(IR2) - NSUB - 3 + II
      AS(IB)= QD(3,II)
      IB = ILOC(IR3) - NSUB - 4 + II
370   AS(IB)= QD(4,II)
      GO TO 260
380   IF (NGBK(III).LT.IR) GO TO 390
C     THIS BRANCH CORRESPONDS TO CONSTRAINT CONDITIONS OF TYPE
C     3 AND 4 AS LONG AS CURRENT QD(I,J) IS STORED IN CURRENT BLOCK.
C
      CALL FILLB(IC,NSUB,I3M,I2M,I1M,I0,I1P,I2P,I3P,IR,ILOC,QD,AS)
      GO TO 260
C     THIS BRANCH CORRESPONDS TO CONSTRAINT CONDITIONS OF TYPE 3 AND 4
C     EXCEPT THAT QD(I,J) HAS TO BE SAVED BECAUSE IT CONTRIBUTES
C     ELEMENTS TO A FUTURE BLOCK.
C
390   IV = IV + 1
      IRSAVE(IV) = IR
      ISAVE(IV,1) = I3M
      ISAVE(IV,2) = I2M
      ISAVE(IV,3) = I1M
      ISAVE(IV,4) = I0
      ISAVE(IV,5) = I1P
      ISAVE(IV,6) = I2P
      ISAVE(IV,7) = I3P
      DO 400 II=1,IC
      DO 400 J=1,NSUB
400   QSAVE(IV,II,J) = QD(II,J)
      GO TO 260
C
C     FILL THE 'PLUS' PART OF THE CONSTRAINT CONDITION
C     IFIX(ICOND2,2) CONTAINS LOCATIONS OF 'PLUS' SIDE OF JUNCTURE
C     IN MONOTONICALLY INCREASING ORDER.
410   IF (ICOND2.GT.NCOND) GO TO 520
      IF (I.EQ.(IFIX(ICOND2,2)-ISEG*1000)) GO TO 420
      GO TO 520
C     NO 'PLUS' SIDE IF CONDITION REPRESENTS BOUNDARY.
420   IF (IFIX(ICOND2,2).EQ.IFIX(ICOND2,1)) GO TO 500
      KKK = ICOND2
C     IR,IR1,IR2,IR3 HAVE SAVE MEANING AS ABOVE
      IR = IROWC(ICOND2)
      IR1 = IR + 1
      IR2 = IR + 2
      IR3 = IR + 3
      IF (IBUCK.NE.1) GO TO 500
      FIFX1 = IFIX(ICOND2,3)*CMAX
      FIFX2 = IFIX(ICOND2,4)*CMAX
      FIFX3 = IFIX(ICOND2,5)*CMAX
      FIFX4 = IFIX(ICOND2,6)*CMAX
C
C     LOOP FOR CONTRIBUTION OF 'PLUS' SIDE TO LOCAL MATRIX
C
      DO 430 II=1,NSUB
      USTAR = R*FK2*UB(II) - RD*WB(II)
      VSTAR = VB(II)
      WSTAR = RD*UB(II) + R*FK2*WB(II)
      IF (IFIX(ICOND2,3).EQ.3) USTAR = UB(II)
      IF (IFIX(ICOND2,5).EQ.3) WSTAR = WB(II)
C     D( ) = LOCAL MATRIX CONTAINING 'PLUS' SIDE OF CONSTRAINT CONDS.
      D(1,II) = USTAR*FIFX1
      D(2,II) = VSTAR*FIFX2
      D(3,II) = WSTAR*FIFX3
      D(4,II) = FIFX4*ROT(1,II)
430   CONTINUE
C
C
C     FILL AS( ) WITH LOCAL MATRIX CONTAINING 'PLUS' SIDE OF CONSTRAINTS
C     ITYPE( ) = TYPE OF CONSTRAINT CONDITION. 5 MEANS SEGS. IN SERIES.
C
      IF (ITYPE(ICOND2).EQ.5) GO TO 480
C     THIS BRANCH FOR PLUS SIDES OF ALL TYPES OF CONSTRAINT CONDITIONS
C     EXCEPT ITYPE(ICOND2) = 5.
C
      DO 440 II=1,NSUB
      IB = ILOC(IR ) - NSUB - 1 + II
      AS(IB) = D(1,II)
      IB = ILOC(IR1) - NSUB - 2 + II
      AS(IB) = D(2,II)
      IB = ILOC(IR2) - NSUB - 3 + II
      AS(IB) = D(3,II)
      IB = ILOC(IR3) - NSUB - 4 + II
440   AS(IB) = D(4,II)
      IF (IV.EQ.0) GO TO 500
      DO 450 IIV=1,IV
      IF (IR.EQ.IRSAVE(IIV)) GO TO 460
450   CONTINUE
      GO TO 500
C     THIS BRANCH FOR INSERTION INTO GLOBAL STIFFNESS MATRIX OF
C     'MINUS' SIDE OF CONSTRAINT CONDITIONS REQUIRING VARIABLES FROM
C     PREVIOUS BLOCKS.
C
460   DO 470 II=1,IC
      DO 470 J=1,NSUB
470   QD(II,J) = QSAVE(IIV,II,J)
      I3MS = ISAVE(IIV,1)
      I2MS = ISAVE(IIV,2)
      I1MS = ISAVE(IIV,3)
      I0S  = ISAVE(IIV,4)
      I1PS = ISAVE(IIV,5)
      I2PS = ISAVE(IIV,6)
      I3PS = ISAVE(IIV,7)
C BEG DEC 1990
      CALL FILLB(IC,NSUB,I3MS,I2MS,I1MS,I0S,I1PS,I2PS,I3PS,IR,ILOC,QD,
     1           AS)
C END DEC 1990
      GO TO 500
480   CONTINUE
C
C     THIS BRANCH FOR PLUS SIDE OF CONSTRAINT CONDITION TYPE 5
C
      DO 490 II=1,NSUB
      I1 = IR3 + II
      DO 490 J=1,IC
      IB = ILOC(I1) - IC + J - II
490   AS(IB) = D(J,II)
500   ICOND2 = ICOND2 + 1
      DO 510 II=1,NSUB
      DO 510 J=1,IC
510   D(J,II) = 0.0
      GO TO 410
520   CONTINUE
C
C     FILL AS( ) WITH LOCAL MATRIX CORRESPONDING TO MESH POINT I
C
      DO 700 II=1,NSUB
      GO TO (530,540,550,560,570,580,590),II
530   J = I3M
      GO TO 600
540   J = I2M
      GO TO 600
550   J = I1M
      GO TO 600
560   J = I0
      GO TO 600
570   J = I1P
      GO TO 600
580   J = I2P
      GO TO 600
590   J = I3P
600   CONTINUE
      DO 690 K=1,II
      GO TO (610,620,630,640,650,660,670),K
610   INDX = I3M
      GO TO 680
620   INDX = I2M
      GO TO 680
630   INDX = I1M
      GO TO 680
640   INDX = I0
      GO TO 680
650   INDX = I1P
      GO TO 680
660   INDX = I2P
      GO TO 680
670   INDX = I3P
680   CONTINUE
      IB = ILOC(J) - J + INDX
      AS(IB) = AS(IB) + U(II,K)
690   CONTINUE
700   CONTINUE
710   CONTINUE
C
C     END OF LOOP OVER MESH POINTS IN CURRENT SEGMENT
C
      I5TOT = I5TOT + L5  + 2
      IF (I3P.EQ.NGBK(III)) GO TO 720
      IR3 = I3P + IC
      IF (IR3.EQ.NGBK(III)) GO TO 720
      GO TO 800
720   NN = 2*ILOC(I3P)
      IF (IR3.EQ.NGBK(III)) NN = 2*ILOC(IR3)
C     STORE BLOCK NUMBER III ON DISK OR DRUM.
      IF(IBLK.NE.1.OR.INDIC.NE.3) CALL GASP(AS,NN,1,IDRW(III,IBUCK))
      IF (NPRT.LT.3) GO TO 770
      ZERO = 0.0
      WRITE (6,730)III,IBUCK
      IF (III.EQ.1) NROWS  = 0
730   FORMAT(//23H PREFACTORED BLOCK NO.    ,I3,16H FOLLOWS. IBUCK= ,I3
     1       //)
      NROWS1 = NROWS + 1
      NROWS = NGBK(III)
      DO 760 I=NROWS1,NROWS
      IF (I.NE.NROWS1) J1 = ILOC(I-1) + 1
      IF (I.EQ.NROWS1) J1 = 1
      J2 = ILOC(I)
      J3 = 10- J2 + J1
      IF (J3.GT.0) WRITE (6,740)I,(ZERO,J=1,J3),(AS(J),J=J1,J2)
      IF (J3.LE.0) WRITE (6,750)I,(AS(J),J=J1,J2)
740   FORMAT(1X,I3,11E11.3)
750   FORMAT(1X,I3,(11E11.3))
760   CONTINUE
770   IF (IBLK.EQ.1.AND.INDIC.EQ.3) GO TO 790
C BEG DEC 1990
      DO 780 I=1,IMAX
C END DEC 1990
780   AS(I) = 0.0
790   III = III + 1
800   CONTINUE
      RETURN
      END
C=DECK      GETWWD
      SUBROUTINE GETWWD(DS,K,H,WB,WBD)
C     CALLED FROM STABIL
C     FINITE-DIFFERENCE EXPRESSIONS FOR VARIABLE MESH SPACING WITH
C     U,V HALF-WAY BETWEEN W.
C
      DOUBLE PRECISION DS,K,H,WB,WBD,HMK,KPDS,HPDS
      DIMENSION WB(7),WBD(7)
      HMK = H - K
      KPDS = K + DS
      HPDS = H + DS
      WB(1) = HMK*KPDS/(16.*H*DS)
      WB(4) = KPDS*HPDS/(4.*H*K)
      WB(7) = -HMK*HPDS/(16.*K*DS)
      WBD(1) = -0.5/H
      WBD(7) = 0.5/K
      WBD(4) = -WBD(1) - WBD(7)
      RETURN
      END
C=DECK      GETC
      SUBROUTINE GETC(L5,IGL,COEF,C)
C
C     CALLED FROM STABIL, WHOSE TRACE IS STABIL,ASTAB,ARRAYS,MAIN
C     THE WALL STIFFNESS MATRIX COEF IS TRANSFERRED TO ARRAY C, FOR
C     CURRENT MESH STATION IN CURRENT SEGMENT.
C
      DOUBLE PRECISION R,RD,FK1,FK2,CURD,RDS,FN,H
      DOUBLE PRECISION C
      COMMON/GGG/ R,RD,FK1,FK2,CURD,RDS,FN,H
      DIMENSION C(6,6),COEF(L5,14)
      C(1,1) = COEF(IGL,1)
      C(1,2) = COEF(IGL,2)
      C(1,4) = COEF(IGL,3)
      C(1,5) = COEF(IGL,4)
      C(2,2) = COEF(IGL,5)
      C(2,4) = COEF(IGL,6)
      C(2,5) = COEF(IGL,7)
      C(3,3) = COEF(IGL,11)
      C(3,6) = COEF(IGL,12)
      C(4,4) = COEF(IGL,8)
      C(4,5) = COEF(IGL,9)
      C(5,5) = COEF(IGL,10)
      C(6,6) = COEF(IGL,13)
      C(2,1) = C(1,2)
      C(4,1) = C(1,4)
      C(5,1) = C(1,5)
      C(4,2) = C(2,4)
      C(5,2) = C(2,5)
      C(6,3) = C(3,6)
      C(5,4) = C(4,5)
      DO 10 I=1,6
      DO 10 J=1,6
10    C(I,J) = C(I,J) *RDS
      RETURN
      END
C=DECK      GETROT
C     OVERLAY(1,5)
      SUBROUTINE GETROT(ROT,I,L5,ISIG,WB,WBD)
C
C     CALLED FROM STABIL. MATRIX ROT(I,J) IS SET UP WHICH RELATES
C     ROTATION VECTOR WITH SHELL REFERENCE SURFACE DISPLACEMENT COMPONEN
C
      DOUBLE PRECISION R,RD,FK1,FK2,CURD,RDS,FN,H
      DOUBLE PRECISION ROT,WB,WBD
      COMMON/GGG/ R,RD,FK1,FK2,CURD,RDS,FN,H
      COMMON/INSTAB/INDIC
      COMMON/FICTP/ IFICT
      DIMENSION ROT(3,7),WB(7),WBD(7)
      ROT(1,1) = WBD(1)
      ROT(1,2) = -0.5*FK1
      ROT(1,4) = WBD(4)
      ROT(1,5) = ROT(1,2)
      ROT(1,7) = WBD(7)
      ROT(2,1) = WB(1)*FN/R
      ROT(2,2) = 0.0
      ROT(2,3) = -0.5*FK2
      ROT(2,4) = WB(4)*FN/R
      ROT(2,5) = 0.0
      ROT(2,6) = ROT(2,3)
      ROT(2,7) = WB(7)*FN/R
      ROT(3,2) = 0.25*FN/R
      ROT(3,3) = 0.5/H - 0.25*RD/R
      ROT(3,5) = ROT(3,2)
      ROT(3,6) = -0.5/H - 0.25*RD/R
      IF (ISIG.NE.1) RETURN
      DO 10 K=1,7
10    ROT(2,K) = ROT(1,K)
      IF (FN.NE.0.) GO TO 30
      DO 20 K=1,7
20    ROT(3,K) = 0.0
      RETURN
30    ROT(3,2) = -.5*FN/H
      ROT(3,3) = 1./H
      ROT(3,5) = .5*FN/H
      ROT(3,6) = -1./H
      RETURN
      END
C=DECK      GETB1
C./      ADD   NAME=GETBLK
      SUBROUTINE GETB1(B1,CHIFIX,ROT,L5,ISIG,WB,WBD,HPAST,HI)
C
C     CALLED FROM STABIL, WHOSE TRACE IS STABIL,ASTAB,ARRAYS,MAIN
C     STRAIN-DISPLACEMENT AND CURVATURE DISPLACEMENT RELATIONS IN
C     FINITE-DIFFERENCE FORM. CORRESPONDS TO ITH MESH POINT IN SEGMENT
C     NUMBER ISEG.
C
      DOUBLE PRECISION R,RD,FK1,FK2,CURD,RDS,FN,H
      DOUBLE PRECISION C,B1,ROT,CHIFIX,WB,WBD,HPAST,HI
      COMMON/GGG/ R,RD,FK1,FK2,CURD,RDS,FN,H
      COMMON/INSTAB/INDIC
      COMMON/FICTP/ IFICT
      DIMENSION B1(6,7),ROT(3,7),WB(7),WBD(7)
C
C     CENTRAL DIFFERENCES USED INSIDE DOMAIN. U AND V LOCATED AT
C     HALF-STATIONS.
      B1(1,1) = FK1*WB(1) + CHIFIX*ROT(1,1)
      B1(1,2) = -1./H + CHIFIX*ROT(1,2)
      B1(1,4) = FK1*WB(4) + CHIFIX*ROT(1,4)
      B1(1,5) = 1./H + CHIFIX*ROT(1,5)
      B1(1,7) = FK1*WB(7) + CHIFIX*ROT(1,7)
      B1(2,1) = FK2*WB(1)
      B1(2,2) = 0.5*RD/R
      B1(2,3) = - 0.5*FN/R
      B1(2,4) = FK2*WB(4)
      B1(2,5) = B1(2,2)
      B1(2,6) = B1(2,3)
      B1(2,7) = FK2*WB(7)
      B1(3,1) = CHIFIX*ROT(2,1)
      B1(3,2) = - B1(2,6)
      B1(3,3) = -1./H -.5*RD/R + CHIFIX*ROT(2,3)
      B1(3,4) = CHIFIX*ROT(2,4)
      B1(3,5) = B1(3,2)
      B1(3,6) = 1./H - .5*RD/R + CHIFIX*ROT(2,6)
      B1(3,7) = CHIFIX*ROT(2,7)
      FMUL = 0.0
      B1(4,1) = 1./(HPAST*H)  -FMUL*B1(1,1)*FK1
      B1(4,2) = FK1/H         -FMUL*B1(1,2)*FK1
      B1(4,4) =-2./(HI*HPAST) -FMUL*B1(1,4)*FK1
      B1(4,5) = -FK1/H        -FMUL*B1(1,5)*FK1
      B1(4,7) = 1./(H*HI)     -FMUL*B1(1,7)*FK1
C
      DO 10 I=1,7
      B1(5,I) = (-ROT(2,I)*FN +ROT(1,I)*RD)/R -FMUL*B1(2,I)*FK2
10    B1(6,I) = 2.*(-ROT(1,I)*FN + ROT(2,I)*RD)/R
      B1(6,3) = B1(6,3) - 2.*FK2/H
      B1(6,6) = B1(6,6) + 2.*FK2/H
      IF (ISIG.NE.1) RETURN
      IF (FN.NE.0.) GO TO 30
      DO 20 J=1,7
      B1(2,J) = B1(1,J)
      B1(5,J) = B1(4,J)
      B1(3,J) = 0.0
20    B1(6,J) = 0.0
      RETURN
30    DO 40 K=1,3
      DO 40 J=1,7
40    B1(K,J) = 0.0
      B1(1,2) = -1./H
      B1(1,5) =  1./H
      B1(2,2) = -1./H
      B1(2,3) = FN/H
      B1(2,5) = 1./H
      B1(2,6) = -FN/H
      B1(3,2) = -FN/H
      B1(3,5) =  FN/H
      B1(5,1) = B1(4,1) - .5*(FN/H)**2
      B1(5,2) = 0.0
      C = FN*(FK1+FK2)
      B1(5,3) = -C/H
      B1(5,4) = B1(4,4) + (FN/H)**2
      B1(5,5) = 0.0
      B1(5,6) = C/H
      B1(5,7) = B1(4,7) - .5*(FN/H)**2
      DO 50 J=1,7
50    B1(6,J) = FN*B1(4,J)
      RETURN
      END
C=DECK      GETP
      SUBROUTINE GETP(P,PCOEFA,P2,PCOEFB,WB,U)
C     CALLED FROM STABIL, WHOSE TRACE IS ASTAB,ARRAYS,MAIN.
C     PRESSURE ROTATION EFFECT FOR BUCKLING PROBLEMS
      DOUBLE PRECISION R,RD,FK1,FK2,CURD,RDS,FN,H
      DOUBLE PRECISION U,PR,PP,WB,PROD,PROD1,PROD2
      COMMON/GGG/R,RD,FK1,FK2,CURD,RDS,FN,H
      DIMENSION U(7,7),WB(7)
      PR = (P*PCOEFA + P2*PCOEFB)*RDS
      PP = 0.0
      PROD = PR*(FK1+FK2)
      PROD1 = -.25*PR*FK1
      PROD2 = -.25*PR*FK2
      U(1,1) = PROD*WB(1)*WB(1)
      U(2,1) = PP*WB(1)
      U(4,1) = PROD*WB(1)*WB(4)
      U(5,1) = PP*WB(1)
      U(7,1) = PROD*WB(1)*WB(7)
      U(2,2) = PROD1
      U(4,2) = PP*WB(4)
      U(5,2) = PROD1
      U(7,2) = PP*WB(7)
      U(3,3) = PROD2
      U(6,3) = PROD2
      U(4,4) = PROD*WB(4)*WB(4)
      U(5,4) = PP*WB(4)
      U(7,4) = PROD*WB(4)*WB(7)
      U(5,5) = PROD1
      U(7,5) = PP*WB(7)
      U(6,6) = PROD2
      U(7,7) = PROD*WB(7)*WB(7)
      RETURN
      END
C=DECK      SRHS
      SUBROUTINE SRHS(I,L5,B,THERM,PR,F,WB,ISEG,SMPA,IPOS,PALL,
C BEG SEP 1997
     1   ILODAB,IOMGAB,Z,IFLSEG)
C END SEP 1997
C
C     CALLED FROM STABIL, WHOSE TRACE IS ASTAB,ARRAYS,MAIN.
C     CALLED WHEN INDIC = 3 (LINEAR,NONSYMMETRIC STRESS ANALYSIS), THIS
C     SUBROUTINE CALCULATES THE RIGHT-HAND-SIDE VECTOR CORRESPONDING TO
C     DISTRIBUTED MECHANICAL AND THERMAL LOADS ON SHELL SURFACE FOR
C     SEGMENT NO. ISEG, MESH POINT NO. I.
C
      DOUBLE PRECISION R,RD,FK1,FK2,CURD,RDS,FN,H
      DOUBLE PRECISION WB,B,F,FAXL,FLATL
      DIMENSION WB(7),IPOS(*),PALL(*)
      DIMENSION B(6,7),THERM(L5,4),PR(L5,3),F(*)
       COMMON/DYNAM/FX(2),FY(2),FZ(2),MX(2),MY(2),MZ(2),
     1              ICM,IZ,M,ZCM,IDYN(2)
       REAL MX,MY,MZ,ICM,IZ,M
      COMMON/GGG/R,RD,FK1,FK2,CURD,RDS,FN,H
      COMMON/INDICS/I3M,I2M,I1M,I0,I1P,I2P,I3P
      COMMON/NOHARM/NHARM
      COMMON/COUNTR/NKOUNT
      COMMON/ROTATN/OMEGA,DOMEGA
      COMMON/AMPFAC/OMEGDR,YLATRL,YAXIAL,BDAMP,AMPLTD,GAMP(200)
C BEG SEP 1997
      COMMON/FLUTNK/GAMMAF,AXLONG,RBIG,ZBEGIN
      COMMON/ACCELR/GRAVTY,GLATRL,GAXIAL
C END SEP 1997
C     THERMAL LOADS
      INDX1 = IPOS(1) + NKOUNT - 1
      INDX2 = IPOS(2) + NKOUNT - 1
      INDX3 = IPOS(3) + NKOUNT - 1
      FACT = 1.0
      IF (DABS(FN).GT.0.1) FACT = 0.
      IF (ILODAB.NE.IOMGAB) FACT = 0.
      T1 = THERM(I,1)*PALL(INDX3)
      T2 = THERM(I,2)*PALL(INDX3)
      T4 = THERM(I,3)*PALL(INDX3)
      T5 = THERM(I,4)*PALL(INDX3)
C     MECHANICAL SURFACE TRACTIONS
      PT = PR(I,1)*PALL(INDX1)
     1 + R*OMEGA**2*SMPA*RD*FACT
      PC = PR(I,2)*PALL(INDX2)
      PN = PR(I,3)*PALL(INDX1)
     1 + R*OMEGA**2*SMPA*R*FK2*FACT
C BEG SEP 1997
      N = FN
C     WRITE(6,'(A,4I3,1P3E12.4)')' N,I,ILODAB,IFLSEG,R,GAMMAF,GLATRL=',
C    1                             N,I,ILODAB,IFLSEG,R,GAMMAF,GLATRL
      IF (ILODAB.EQ.1.AND.IFLSEG.NE.0) THEN
         N = FN
         FFLSEG = IFLSEG
         IF (N.EQ.0) THEN
            AGLAT = ABS(GLATRL)
            AGAXL = ABS(GAXIAL)
            IF (GAXIAL.EQ.0.) AGAXL = 1.
            PN = PN + FFLSEG*GAMMAF*(AGLAT*RBIG
     1            + GAXIAL*(0.5*(1.+GAXIAL/AGAXL)*AXLONG -(Z-ZBEGIN)))
         ENDIF
         IF (N.EQ.1.OR.N.EQ.-1) THEN
            PN = PN - FFLSEG*GAMMAF*GLATRL*R
         ENDIF
      ENDIF
C END SEP 1997
C
C  ADDITIONS TO LOADS DUE TO DYNAMIC REACTION OF NON-SELF-EQUILIBRATING
C  LOADS. ADDED ON 17 AUGUST, 1985. OBTAINED FROM BOSBILTAPE (UNIVAC)
C
      IF (IDYN(ILODAB).EQ.0) GO TO 200
      N = FN
      IF (IABS(N).GT.1) GO TO 200
      ZP = Z - ZCM
      C3 = SMPA*(MY(ILODAB) - FX(ILODAB)*ZCM)/ICM
      C4 = SMPA*(MX(ILODAB) + FY(ILODAB)*ZCM)/ICM
      C1 = SMPA*FX(ILODAB)/M + ZP*C3
      C2 = SMPA*FY(ILODAB)/M - ZP*C4
      IF (N.NE.-1) GO TO 10
      PTD = -C1*RD + C3*R*R*FK2
      PCD = C1
      PND = -C1*R*FK2 - C3*R*RD
      GO TO 100
   10 IF (N.NE.0) GO TO 20
      PTD = -SMPA*R*FK2*FZ(ILODAB)/M
      PCD =  SMPA*R*MZ(ILODAB)/IZ
      PND =  SMPA*RD*FZ(ILODAB)/M
      GO TO 100
   20 IF (N.NE.1) GO TO 100
      PTD = C2*RD + C4*R*R*FK2
      PCD = C2
      PND = C2*R*FK2 - C4*R*RD
  100 CONTINUE
      PT = PT + PTD
      PC = PC + PCD
      PN = PN + PND
  200 CONTINUE
C     ADDITIONS TO RIGHT-HAND-SIDE VECTOR.
      F(I3M)=F(I3M)+RDS*(-T1*B(1,1)-T2*B(2,1)-T4*B(4,1)-T5*B(5,1)+PN*WB
     1(1) )
      F(I2M)=F(I2M)+RDS*(-T1*B(1,2)-T2*B(2,2)-T4*B(4,2)-T5*B(5,2)+PT/2.)
      F(I1M)=F(I1M)+RDS*(-T1*B(1,3)-T2*B(2,3)-T4*B(4,3)-T5*B(5,3)+PC/2.)
      F(I0 )=F(I0 )+RDS*(-T1*B(1,4)-T2*B(2,4)-T4*B(4,4)-T5*B(5,4)+PN*WB
     1(4) )
      F(I1P)=F(I1P)+RDS*(-T1*B(1,5)-T2*B(2,5)-T4*B(4,5)-T5*B(5,5)+PT/2.)
      F(I2P)=F(I2P)+RDS*(-T1*B(1,6)-T2*B(2,6)-T4*B(4,6)-T5*B(5,6)+PC/2.)
      F(I3P)=F(I3P)+RDS*(-T1*B(1,7)-T2*B(2,7)-T4*B(4,7)-T5*B(5,7)+PN*WB
     1(7) )
C
      IF (OMEGDR.EQ.0.) RETURN
      IF (ILODAB.NE.1) RETURN
      N = DABS(FN) + 0.1
      IF (N.GT.1) RETURN
      IF (N.EQ.1.AND.YLATRL.EQ.0.) RETURN
      IF (N.EQ.0.AND.YAXIAL.EQ.0.) RETURN
C
      RHORCA = OMEGDR*OMEGDR*RDS*SMPA
      FAXL = -YAXIAL*RHORCA
      FLATL= -YLATRL*RHORCA
      IF (N.EQ.1) GO TO 22
C
C    AXIAL BASE MOTION (N = 0 CIRC. WAVES)...
C
      F(I3M) = F(I3M) - FAXL*RD*WB(1)
      F(I2M) = F(I2M) + FAXL*.5*R*FK2
      F(I0)  = F(I0)  - FAXL*RD*WB(4)
      F(I1P) = F(I1P) + FAXL*.5*R*FK2
      F(I3P) = F(I3P) - FAXL*RD*WB(7)
C
      GO TO 30
C
   22 CONTINUE
C
C    LATERAL BASE MOTION (N = 1 CIRC. WAVE)...
C
      FACT = 1.0
      IF (FN.LT.0.1) FACT = -1.0
      F(I3M) = F(I3M) + FLATL*R*FK2*WB(1)
      F(I2M) = F(I2M) + FLATL*.5*RD
      F(I1M) = F(I1M) + FLATL*.5*FACT
      F(I0)  = F(I0)  + FLATL*R*FK2*WB(4)
      F(I1P) = F(I1P) + FLATL*.5*RD
      F(I2P) = F(I2P) + FLATL*.5*FACT
      F(I3P) = F(I3P) + FLATL*R*FK2*WB(7)
C
   30 CONTINUE
C
      RETURN
      END
C=DECK      GETE
      SUBROUTINE GETE(K,E)
C
C     CALLED FROM STABIL, WHOSE TRACE IS ASTAB,ARRAYS,MAIN
C     CALCULATES TRANSFORMATION MATRIX WHICH RELATES DISPLACEMENTS OF
C     RING CENTROID TO DISPLACEMENTS OF SHELL REFERENCE SURFACE. ALL
C     DISPLACEMENTS IN THIS TRANSFORMATION ARE NORMAL AND TANGENTIAL
C     TO AXIS OF REVOLUTION.
C
C     E1(K) IS THE RADIAL DISTANCE OF THE KTH RING CENTROID FROM THE
C     SHELL REFERENCE SURFACE. E2(K) IS THE AXIAL DISTANCE.
C
      DOUBLE PRECISION R,RD,FK1,FK2,CURD,RDS,FN,H
      DOUBLE PRECISION E
      COMMON/GGG/ R,RD,FK1,FK2,CURD,RDS,FN,H
      COMMON/RING2/GAM(98),GJ(98), YC(98), XC(98),E1(98),E2(98),PHI(100)
      DIMENSION E(4,4)
      E(1,1) = 1.
      E(1,4) = -E1(K)
      E(2,1) = -E2(K)*FN/R
      E(2,2) = 1. + E1(K)/R
      E(2,3) = -E1(K)*FN/R
      E(3,3) = 1.
      E(3,4) = E2(K)
      E(4,4) = 1.
      RETURN
      END
C=DECK      GETD
      SUBROUTINE GETD(K,D,ROT,UB,VB,WB)
C
C     CALLED FROM STABIL,WHOSE TRACE IS STABIL,ASTAB,ARRAYS,MAIN
C     CALCULATES MATRIX WHICH TRANSFORMS DISPLACEMENTS NORMAL AND
C     TANGENTIAL TO AXIS OF REVOLUTION TO DISPLACEMENTS NORMAL AND
C     TANGENTIAL TO SHELL REFERENCE SURFACE. CURRENT MESH POINT IN CUR-
C     RENT SEGMENT.
C
      DOUBLE PRECISION R,RD,FK1,FK2,CURD,RDS,FN,H
      DOUBLE PRECISION D,ROT,UB,VB,WB,RFK2
      COMMON/GGG/ R,RD,FK1,FK2,CURD,RDS,FN,H
      DIMENSION D(4,7),ROT(3,7),UB(7),VB(7),WB(7)
      RFK2 = R*FK2
      DO 10 I=1,7
      D(1,I) = RFK2*UB(I) - RD*WB(I)
      D(2,I) = VB(I)
      D(3,I) = RD*UB(I) + RFK2*WB(I)
10    D(4,I) = ROT(1,I)
      RETURN
      END
C=DECK      GETG
      SUBROUTINE GETG(I,FN,HOOPF,RINGF,G)
C
C     CALLED FROM STABIL, WHOSE TRACE IS ASTAB,ARRAYS,MAIN
C     RING STIFFNESS MATRIX CALCULATED FOR N WAVES. FORMULAS FROM COHEN.
C
      DOUBLE PRECISION HF,RHF,G,FN,FN2,R,R2,R4,E,AR,FIX,FIY,FIXY,FGJ
      COMMON/RNGGEO/RC(98),AREA(98),ER(98),IY(98),IX(98),IXY(98),IP(98)
      COMMON/RING2/GAM(98),GJ(98), YC(98), XC(98),E1(98),E2(98),PHI(100)
      COMMON/INSTAB/INDIC
      REAL IX,IY,IXY,IP
      DIMENSION G(4,4),RINGF(*)
      FN2 = FN*FN
      R = RC(I)
      R2 = R*R
      R4 = R2*R2
      E = ER(I)
      AR= AREA(I)
      FIX = IX(I)
      FIY = IY(I)
      FIXY = IXY(I)
      FGJ = GJ(I)
      RHF = RINGF(I)
      HF = HOOPF
C     IF (INDIC.GE.3) HF = 0.0
C     IF (INDIC.GE.3)RHF = 0.0
      G(1,1) = R*FN2*(FN2*E*FIX + FGJ)/R4 + FN2*RHF/R
      G(1,2)= -R*FN**3*E*FIXY/R4
      G(1,3)= R*FN2*FN2*E*FIXY/R4
      G(1,4)= R*FN2*(E*FIX + FGJ)/R**3
      G(2,2) = R*FN2*(E*AR + E*FIY/R2)/R2 - HF + RHF/R
      G(2,3) = -R*FN*(E*AR + FN2*E*FIY/R2)/R2 - FN*RHF/R
      G(2,4)= - FN*E*FIXY/R2
      G(3,3) = (E*AR + FN2*FN2*E*FIY/R2)/R + HF + FN2*RHF/R
      G(3,4)=   FN2*E*FIXY/R2
      G(4,4)= (E*FIX + FN2*FGJ)/R
      G(2,1) = G(1,2)
      G(3,1) = G(1,3)
      G(3,2) = G(2,3)
      G(4,1) = G(1,4)
      G(4,2) = G(2,4)
      G(4,3) = G(3,4)
      RETURN
      END
C=DECK      RRHS
C     OVERLAY(1,1)
      SUBROUTINE RRHS(I,E,D,F,K,ISEG,IPOS,PALL,ILODAB,V,SHEAR,HF,FM,
     1 TNR,TMR,TMRX,IOMGAB,Z)
C
C     CALLED FROM STABIL, WHOSE TRACE IS ASTAB,ARRAYS,MAIN.
C     RRHS IS NEEDED IF INDIC = 3 (LINEAR,NONSYMMETRIC STRESS ANALYSIS)
C     THE WORK DONE BY THE LINE LOADS APPLIED TO THE RING CENTROID IS
C     CALCULATED. ONLY KTH RING INVOLVED.
C
      DOUBLE PRECISION R,RD,FK1,FK2,CURD,RDS,FN,H
      DOUBLE PRECISION F,E,D,ED
      DIMENSION F(*),E(4,4),D(4,7),ED(4,7)
      DIMENSION V(*),SHEAR(*),HF(*),FM(*),IPOS(*),PALL(*)
      DIMENSION TNR(*),TMR(*),TMRX(*)
       COMMON/DYNAM/FX(2),FY(2),FZ(2),MX(2),MY(2),MZ(2),
     1              ICM,IZ,M,ZCM,IDYN(2)
       REAL MX,MY,MZ,ICM,IZ,M
      COMMON/GGG/R,RD,FK1,FK2,CURD,RDS,FN,H
      COMMON/RNGGEO/RC(98),AREA(98),ER(98),IY(98),IX(98),IXY(98),IP(98)
      COMMON/INDICS/I3M,I2M,I1M,I0,I1P,I2P,I3P
      COMMON/NOHARM/NHARM
      COMMON/COUNTR/NKOUNT
      COMMON/ROTATN/OMEGA,DOMEGA
      COMMON/RMASS/RM(98)
      COMMON/AMPFAC/OMEGDR,YLATRL,YAXIAL,BDAMP,AMPLTD,GAMP(200)
      CALL MATMU3(E,D,ED,4,7)
C     EFFECT OF RING THERMAL LOADS.
C     TNR = THERMAL HOOP FORCE
C     TMR = THERMAL MOMENT ABOUT X- AXIS (OUT-OF-PLANE)
C     TMRX = THERMAL MOMENT ABOUT Y-AXIS (IN-PLANE)
      T1R = -FN*FN*TMR(K)/RC(K)
      T2R = FN*(TNR(K) + TMRX(K)/RC(K))
      T3R = -TNR(K) - FN*FN*TMRX(K)/RC(K)
      T4R = - TMR(K)
C     EFFECT OF MECHANICAL LINE LOADS
C     V = AXIAL LINE LOAD
C     SHEAR = SHEAR LINE LOAD
C     HF = RADIAL LINE LOAD
C     FM = MERIDIONAL MOMENT
C
      INDX1 = IPOS(1) + NKOUNT - 1
      INDX2 = IPOS(2) + NKOUNT - 1
      INDX3 = IPOS(3) + NKOUNT - 1
      FACT = 1.0
      IF (DABS(FN).GT.0.1) FACT = 0.
      IF (ILODAB.NE.IOMGAB) FACT = 0.
      F1 = T1R*PALL(INDX3) - V(K)*PALL(INDX1)*RC(K)
      F2 = T2R*PALL(INDX3) + SHEAR(K)*PALL(INDX2)*RC(K)
      F3 = T3R*PALL(INDX3) + HF(K)*PALL(INDX1)*RC(K)
     1  + RC(K)*RC(K)*OMEGA**2*RM(K)*AREA(K)*FACT
      F4 = T4R*PALL(INDX3) + FM(K)*PALL(INDX1)*RC(K)
C
C  ADDITION OF DYNAMIC REACTION TERMS ON AUGUST 17, 1985..
C
      IF (IDYN(ILODAB).EQ.0) GO TO 200
      N =FN
      IF (IABS(N).GT.1) GO TO 200
      ZP = Z - ZCM
      C5 = RM(K)*AREA(K)*RC(K)
      C3 = C5*(MY(ILODAB) - FX(ILODAB)*ZCM)/ICM
      C4 = C5*(MX(ILODAB) + FY(ILODAB)*ZCM)/ICM
      C1 = C5*FX(ILODAB)/M + ZP*C3
      C2 = C5*FY(ILODAB)/M - ZP*C4
      IF (N.NE.-1) GO TO 10
      F1D = RC(K)*C3
      F2D = C1
      F3D = -C1
      GO TO 100
   10 IF (N.NE.0) GO TO 20
      F1D = -C5*FZ(ILODAB)/M
      F2D =  C5*RC(K)*MZ(ILODAB)/IZ
      F3D = 0.
      GO TO 100
   20 IF (N.NE.1) GO TO 100
      F1D = RC(K)*C4
      F2D = C2
      F3D = C2
  100 CONTINUE
      F1 = F1 + F1D
      F2 = F2 + F2D
      F3 = F3 + F3D
  200 CONTINUE
C     MODIFICATIONS OF RIGHT-HAND-SIDE.
C     I3M,I2M,I1M,I0,I1P,I2P,I3P = GLOBAL EQUATION NUMBERS OF LOCAL
C                                  RIGHT-HAND-SIDE
      F(I3M) = F(I3M) + F1*ED(1,1) +F2*ED(2,1) +F3*ED(3,1) +F4*ED(4,1)
      F(I2M) = F(I2M) + F1*ED(1,2) +F2*ED(2,2) +F3*ED(3,2) +F4*ED(4,2)
      F(I1M) = F(I1M) + F1*ED(1,3) +F2*ED(2,3) +F3*ED(3,3) +F4*ED(4,3)
      F(I0 ) = F(I0 ) + F1*ED(1,4) +F2*ED(2,4) +F3*ED(3,4) +F4*ED(4,4)
      F(I1P) = F(I1P) + F1*ED(1,5) +F2*ED(2,5) +F3*ED(3,5) +F4*ED(4,5)
      F(I2P) = F(I2P) + F1*ED(1,6) +F2*ED(2,6) +F3*ED(3,6) +F4*ED(4,6)
      F(I3P) = F(I3P) + F1*ED(1,7) +F2*ED(2,7) +F3*ED(3,7) +F4*ED(4,7)
C
      IF (ILODAB.NE.1) RETURN
      IF (OMEGDR.GT.0.)CALL RINGDR(FN,YLATRL,YAXIAL,K,ED,RC(K),AREA(K),
     1 RM(K),OMEGDR,F)
C
      RETURN
      END
C=DECK      FILLB
      SUBROUTINE FILLB(IC,N,I3M,I2M,I1M,I0,I1P,I2P,I3P,IR,ILOC,QD,BB)
C     CALLED FROM STABIL, WHOSE TRACE IS ASTAB,ARRAYS,MAIN
C     PURPOSE IS TO ASSEMBLE THE 'MINUS' CONSTRAINT CONDITION
C     MATRIX QD(4X7) INTO THE GLOBAL MATRIX BB.
C     BUCKLING,VIBRATION, AND NONSYMMETRIC STRESS PROBLEMS.
C
      DOUBLE PRECISION QD,BB
      DIMENSION ILOC(*),QD(4,7),BB(*)
      DO 100 I=1,IC
      J = IR - 1 + I
      DO 90 K=1,N
      GO TO (10,20,30,40,50,60,70),K
10    INDX = I3M
      GO TO 80
20    INDX = I2M
      GO TO 80
30    INDX = I1M
      GO TO 80
40    INDX = I0
      GO TO 80
50    INDX = I1P
      GO TO 80
60    INDX = I2P
      GO TO 80
70    INDX = I3P
80    CONTINUE
      IB = ILOC(J) - J + INDX
      BB(IB) = QD(I,K)
90    CONTINUE
100   CONTINUE
      RETURN
      END
C=DECK      MASDRV
      SUBROUTINE MASDRV(OMEGDR,COEF,RDS,WB,U)
C
C      ADD SHELL WALL INERTIAL TERMS TO LOCAL STIFFNESS MATRIX U.
C     SHELL IS DRIVEN HARMONICALLY AT AN ANGULAR FREQUENCY OF OMEGDR.
C
      DIMENSION WB(7),U(7,7)
      DOUBLE PRECISION RDS,SMS,WB,U,PROD
C
      SMS = COEF
      PROD = - SMS*RDS*OMEGDR*OMEGDR
C
      U(2,2) = U(2,2) + 0.25*PROD
      U(3,3) = U(3,3) + 0.25*PROD
      U(5,2) = U(5,2) + 0.25*PROD
      U(5,5) = U(5,5) + 0.25*PROD
      U(6,3) = U(6,3) + 0.25*PROD
      U(6,6) = U(6,6) + 0.25*PROD
C
      U(1,1) = U(1,1) + WB(1)*WB(1)*PROD
      U(4,1) = U(4,1) + WB(4)*WB(1)*PROD
      U(4,4) = U(4,4) + WB(4)*WB(4)*PROD
      U(7,1) = U(7,1) + WB(7)*WB(1)*PROD
      U(7,4) = U(7,4) + WB(7)*WB(4)*PROD
      U(7,7) = U(7,7) + WB(7)*WB(7)*PROD
C
      RETURN
      END
C=DECK      RMASDV
      SUBROUTINE RMASDV(OMEGDR,RM,RC,AREA,FIS,FIN,FISN,E,D,ROT,
     1 TR1,TR2,TR3,U)
C
C     PURPOSE IS TO ADD INERTIAL TERMS FOR DISCRETE RINGS TO
C    STIFFNESS MATRIX U CORRESPONDING TO STRUCTURE DRIVEN HARMONICALLY
C    AT A FREQUENCY OF OMEGDR.
C
      DIMENSION E(4,4),D(4,7),ROT(3,7),U(7,7),TR1(4,4),TR2(3,3),TR3(4,4)
      DOUBLE PRECISION E,D,ROT,TR1,TR2,TR3,U,RHORC,RHORCA
C
      RHORC = -OMEGDR*OMEGDR*RM*RC
      RHORCA = RHORC*AREA
C
      TR1(1,1) = RHORCA
      TR1(2,2) = RHORCA
      TR1(3,3) = RHORCA
      TR1(4,4) = RHORC*(FIS + FIN)
C
      TR2(2,2) = RHORC*FIS
      TR2(2,3) = - RHORC*FISN
      TR2(3,2) = TR2(2,3)
      TR2(3,3) = RHORC*FIN
C
      CALL MATMU2(TR1,E,TR3,4,4,0)
      CALL MATMU4(TR3,D,U,4,7,1)
      CALL MATMU4(TR2,ROT,U,3,7,1)
C
      RETURN
      END
C=DECK      RINGDR
      SUBROUTINE RINGDR(FN,YLATRL,YAXIAL,K,ET,RC,AREA,RM,OMEGDR,F)
C
C    PURPOSE IS TO ADD TERMS ON R.H.S. DUE TO BASE MOTION OF DISCRETE
C    RING.
C
      DIMENSION ET(4,7),F(*),TR1(4,4),TR1ET(4,7)
      COMMON/INDICS/I3M,I2M,I1M,I0,I1P,I2P,I3P
      DOUBLE PRECISION ET,F,FN,TR1,RHORCA,TR1ET
C
      N = DABS(FN) + 0.1
      IF (N.GT.1) RETURN
      IF (N.EQ.1.AND.YLATRL.EQ.0.) RETURN
      IF (N.EQ.0.AND.YAXIAL.EQ.0.) RETURN
C
      RHORCA = OMEGDR*OMEGDR*RM*RC*AREA
      TR1(1,1) = RHORCA
      TR1(2,2) = RHORCA
      TR1(3,3) = RHORCA
      TR1(4,4) = 0.
C
      CALL MATMU3(TR1,ET,TR1ET,4,7)
      IF (N.EQ.1) GO TO 20
C
C    AXIAL BASE MOTION (N = 0 CIRC. WAVES)...
C
      F(I3M) = F(I3M)  -YAXIAL*TR1ET(1,1)
      F(I2M) = F(I2M)  -YAXIAL*TR1ET(1,2)
      F(I1M) = F(I1M)  -YAXIAL*TR1ET(1,3)
      F(I0)  = F(I0)   -YAXIAL*TR1ET(1,4)
      F(I1P) = F(I1P)  -YAXIAL*TR1ET(1,5)
      F(I2P) = F(I2P)  -YAXIAL*TR1ET(1,6)
      F(I3P) = F(I3P)  -YAXIAL*TR1ET(1,7)
      GO TO 30
C
   20 CONTINUE
C
C    LATERAL BASE MOTION (N = 1 CIRC. WAVE)
C
      FACT = 1.0
      IF (FN.LT.0.1) FACT = -1.0
      F(I3M) = F(I3M)  -YLATRL*(TR1ET(2,1)*FACT + TR1ET(3,1))
      F(I2M) = F(I2M)  -YLATRL*(TR1ET(2,2)*FACT + TR1ET(3,2))
      F(I1M) = F(I1M)  -YLATRL*(TR1ET(2,3)*FACT + TR1ET(3,3))
      F(I0)  = F(I0)   -YLATRL*(TR1ET(2,4)*FACT + TR1ET(3,4))
      F(I1P) = F(I1P)  -YLATRL*(TR1ET(2,5)*FACT + TR1ET(3,5))
      F(I2P) = F(I2P)  -YLATRL*(TR1ET(2,6)*FACT + TR1ET(3,6))
      F(I3P) = F(I3P)  -YLATRL*(TR1ET(2,7)*FACT + TR1ET(3,7))
C
   30 CONTINUE
      RETURN
      END
C=DECK      FOUNDA
      SUBROUTINE FOUNDA(FSTIFF,WB,RDS,U)
C
C     PURPOSE IS TO ADD CONTRIBUTION DUE TO ELASTIC FOUNDATION OF
C     STIFFNESS FSTIFF...
C
      DOUBLE PRECISION WB, RDS, U, PROD
      DIMENSION WB(7), U(7,7)
C
      PROD = RDS*FSTIFF
      U(1,1) = U(1,1) + WB(1)*WB(1)*PROD
      U(4,1) = U(4,1) + WB(4)*WB(1)*PROD
      U(7,1) = U(7,1) + WB(7)*WB(1)*PROD
      U(7,4) = U(7,4) + WB(7)*WB(4)*PROD
      U(4,4) = U(4,4) + WB(4)*WB(4)*PROD
      U(7,7) = U(7,7) + WB(7)*WB(7)*PROD
C
      RETURN
      END
