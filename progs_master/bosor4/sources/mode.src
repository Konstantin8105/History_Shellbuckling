C=DECK      MODELIB
C
C
C  THIS IS THE MODE LIBRARY  (SOURCE FILE)
C
C
C
C=DECK      MODE1
      SUBROUTINE MODE1(ILOOP,BBB,BMODE,TMODE,SMODE)
C+---------------------------------------------------------------------+
C+---------------------------------------------------------------------+
      COMMON/TOTPTS/M3
      COMMON/SEGS/NSEG,M2,I5(95),I2,I2G
      COMMON/EIGNO/NVEC,EGV(50),AXB
      COMMON/IFRHX/IFB,RHFIX(98),K,MNUMB,ISWTCH,KNT,IFTOT,INDSIG,LFIX
      COMMON/RGFCE/RHF(98)
      COMMON/RHARM/RVAR(98),RFIX(98)
      COMMON/INSTAB/INDIC
      COMMON/NOHARM/NHARM
      COMMON/RESTRT/IREST
      DIMENSION SMODE(9000),TMODE(9000),BMODE(1000,9)
      DIMENSION BBB(*)
      IF (IREST.NE.2) MNUMB = NHARM
C     WRITE(6,*)' IN MODE1...INDIC,MNUMB,NVEC=',INDIC,MNUMB,NVEC
      IF (INDIC.EQ.3) GO TO 10
      MNUMB = NVEC
10    CONTINUE
      CALL MODE(M3,MNUMB,I2,SMODE,TMODE,BMODE,RHF,RHFIX,
     1 RVAR,RFIX,ILOOP,BBB)
      RETURN
      END
C=DECK      MODE
      SUBROUTINE MODE(M3,NVEC,IALL,SMODE,TMODE,BMODE,RHF,RHFIX,
     1 RVAR,RFIX,ILOOP,BBB)
C+---------------------------------------------------------------------+
C+---------------------------------------------------------------------+
C
C     CALLED FROM MAIN.
C     MODE SHAPE OR DISPLACEMENTS AND STRESSES CALCULATED FOR BUCKLING
C     AND VIBRATION OR LINEAR STRESS ANALYSIS.. INPUT EIGENVECTOR IS F,
C     OUTPUT IS U,V,W, AND STRESS RESULTANTS. THESE ARE NORMALIZED IN
C     BUCKLING AND VIBRATION PROBLEMS (EIGENVECTORS) AND DIMENSIONAL
C     IN LINEAR NONSYMMETRIC STRESS PROBLEMS.
C     DISPLACEMENTS AND STRESS RESULTANTS OBTAINED FOR NVEC EIGENVALUES
C
      DOUBLE PRECISION F
      DOUBLE PRECISION XX
#if cray
      DIMENSION F(6000),BMODE(IALL,9),BBB(10000),DS(1000),IW(1000)
      DIMENSION XX(6000),FF(6250),XSINGL(3000)
#else
      DIMENSION F(3000),BMODE(IALL,9),BBB(10000),DS(1000),IW(1000)
      DIMENSION XX(3000),FF(6250),XSINGL(3000)
#endif
      DIMENSION SMODE(9000),TMODE(9000),X(1000),IDIST(1000)
      COMMON/AMPFAC/OMEGDR,YLATRL,YAXIAL,BDAMP,AMPLTD,GAMP(200)
      COMMON/RESTRT/IREST
      COMMON/AMPFC2/IMPHI(200)
      COMMON/RGTEMP/TNR(98),TMR(98),TMRX(98)
      COMMON/ALLRNG/ NTOT,IPRE
      COMMON/NLINS/NSTART,NFIN
      COMMON/SEGS/NSEG,M2,I5(95),I2,I2G
      COMMON/DSPACE/IDS
      COMMON/STRHD/NSHEAD
      COMMON/OUTP/NPRT
      COMMON/INSTAB/INDIC
      COMMON/NOHARM/NHARM
      COMMON/SMOAD/IMOAD(100),IPMODE(95),IPSMD(95)
      COMMON/NCONDS/NCOND
      COMMON/WAVES/N0,N,NMIN,NMAX,INCR
      COMMON/IDEIG/IDMODE(500),NVECTL,EIGENW(500)
      COMMON/TWORHS/ITWO,IDMOD2(200)
      COMMON/LOADHM/NLPOS(95),LAB(95),IDAB(95),ILPOS(12,95),PALL(6000)
      COMMON/ISTUFB/KK,I5TOT,IC,NUNK,KLAP,ICALL
      COMMON/LOCATN/ILOCP,ILOCB,IROWCP(98),IROWCB(98),IIWP,IIWB
      COMMON/GMASS/GM(500)
      COMMON/INTRVL/ INTVAL(95),IOUT,NDIST,NCIRC,NTHETA
      COMMON/SHEL/ISHL(95),IWAL(95),ITHK(95),IARC(95),ILOAD(95)
      COMMON/GLOBAL/IDZ,IZRING(98),ISAVE(20),INOTE
      DIMENSION RHF(*),RHFIX(*),RVAR(*),RFIX(*)
      COMMON/RESPO2/ANALY,WSPEC(40)
      COMMON/NVVIB/NVIB
      CHARACTER*20 WORD1(3)
      CHARACTER*36 WORD2(3)
      DATA WORD1(1),WORD1(2),WORD1(3)/
     1 'HARMONIC EXCITATION ',
     1 'RANDOM EXCITATION   ',
     1 'SHOCK               '/
C
      DATA WORD2(1),WORD2(2),WORD2(3)/
     1 'N*g/(OMEGA**2 * BETA)               ',
     1 'SQRT[OMEGA*SPECD/(2*BETA)]g/OMEGA**2',
     1 '2*N*g/OMEGA**2                      '/
C
10    FORMAT(1P9E13.4)                                      
      II = I2 + 2*NSEG
      M32 = M3*2
C     RECOVER GLOBAL EQUATION NO.S CORRESPONDING TO W.
      CALL GASP(IW,II,3,IIWB)
C     RECOVER ELEMENTAL ARC LENGTHS DS.
      CALL GASP(DS,I2,3,IDS)
      IF (INOTE.EQ.1) CALL GASP(BBB,ISAVE(1),3,ISHL(1))
      IF (INDIC.NE.3) GO TO 82
C     FIND ARRAY X CORRESPONDING TO MERIDIONAL DISTRIBUTION. STRESSES
C     OR STRESS RESULTANTS ARE PRINTED OUT FOR THESE MERIDIONAL STATIONS
20    CALL IFIND(IDIST,X)
40    CONTINUE
      K = NTHETA*NCIRC*9
      IF (K.LE.9000) GO TO 50
      NTHETA = 2*NTHETA/3
      GO TO 40
   50 CONTINUE
      IF (NDIST.EQ.0) GO TO 65
      DO 60 I = 1,9000
60    SMODE(I) = 0.
   65 CONTINUE
      IF (K.EQ.0) GO TO 75
      DO 70 I=1,K
70    TMODE(I) = 0.
   75 CONTINUE
C     BEGIN LOOP OVER NO. OF EIGENVALUES FOR EACH HARMONIC N IN
C     STABILITY OR VIBRATION ANALYSIS.
C     BEGIN LOOP OVER NUMBER OF HARMONICS IN NONSYMMETRIC STRESS ANALY
C     SIS
   80 CONTINUE
      IF (IREST.NE.2) GO TO 82
      IANALY = ANALY
      WRITE(6,81) WORD1(IANALY), WORD2(IANALY)
   81 FORMAT(/' DYNAMIC RESPONSE ANALYSIS...'//
     1'      N = LOAD FACTOR (NUMBER OF GRAVITIES)'/
     1'      g = ACCELERATION OF GRAVITY'/
     1'  OMEGA = NATURAL FREQUENCY IN RADIANS/SEC'/
     1'   BETA = DAMPING COEFFICIENT'/
     1'  PARTICIPATION FACTOR:'/
     1'    P/2 = integral(mass*mode*(base motion)/[2*(generalized mass)]
     1'/
     1/' RESPONSE TO  ',A20/
     1 ' FORMULA FOR MULTIPLIER,m(i) =  ',A36)
C
      WRITE(6,76)
   76 FORMAT(/'   FREQUENCY    PARTICIPATION    LOAD FACTOR     DAMPING 
     1    SPECTRAL    MULTIPLIER     AMPLITUDE'/
     1        '    (HERTZ)      FACTOR, P/2         (N)       COEFFICIEN
     1T   DENSITY        (m)      FACTOR=m*P/2'/)
C
   82 CONTINUE
      DO 250 II=1,NVEC
      AMPLTD = 0.
      IF (IREST.NE.2.OR.INDIC.NE.3) GO TO 85
      FREQU = EIGENW(NVECTL+II)
      CALL RESFAC(FREQU,FMULT,FNGVAL,DAMPNG,SPECD)
      AMPLTD = GAMP(NVECTL+II)*FMULT
      WRITE(6,83) FREQU, GAMP(NVECTL+II), FNGVAL, DAMPNG, SPECD, FMULT,
     1            AMPLTD
   83 FORMAT(1PE12.4,1PE16.4,1PE16.4,1PE14.4,1PE13.4,1PE13.4,1PE14.4)
   85 CONTINUE
      IF (INDIC.EQ.3) GO TO 90
      FN = FLOAT(N)
      GO TO 100
90    FN = FLOAT(NSTART + (II-1)*INCR)
C     RECOVER THE SOLUTION VECTOR F
100   CONTINUE
C BEG JAN 1993
      DO 102 I = 1,M3
  102 F(I) = 0.0
      NVECX = NVECTL+II
      IF (ILOOP.EQ.1.AND.IDMODE(NVECX).NE.0) 
     1             CALL GASP(F,M32,3,IDMODE(NVECX))
      IF (ILOOP.EQ.2.AND.IDMOD2(NVECX).NE.0)
     1             CALL GASP(F,M32,3,IDMOD2(NVECX))
C END JAN 1993
  105 FORMAT(//' NVEC,II,M3,M32,IDMODE(II),F(IM3),IM3=1,M3)=' 5I7/
     1 (1P10E12.3))
C
      IF (INDIC.EQ.2) CALL GASP(XX,M32,3,IMPHI(NVECTL+II))
C
      IF (INDIC.NE.3) GO TO 110
110   WMAX = 0.0
      KK =1
      I5TOT = 0
      IC = 4
      NUNK = 7
      KLAP = 4
      ICALL = 1
      IF (INDIC.EQ.3) GO TO 210
C
C     NORMALIZE EIGENVECTOR (BUCKLING AND VIBRATION PROBLEMS ONLY,
C     INDIC.NE.3.)
      J = 1
      I = 0
120   I = I + 1
      IF (J.GT.NCOND) GO TO 140
      IF (I.EQ.IROWCB(J)) GO TO 130
      GO TO 140
130   I = I + IC
      IF (I.GT.M3) GO TO 150
      J = J + 1
140   FI = F(I)
      WMAX = AMAX1(ABS(FI),WMAX)
      IF (I.GE.M3) GO TO 150
      GO TO 120
  150 CONTINUE
      IF (WMAX.EQ.0.) WMAX = 1.
      DO 160 I=1,M3
160   F(I) = F(I)/WMAX
      DO 170 I=1,M3
      FI = F(I)
      IF (ABS(FI).EQ.1.0) GO TO 180
170   CONTINUE
      GO TO 200
180   IF (FI.GT.0.) GO TO 200
      DO 190 I=1,M3
190   F(I) = - F(I)
200   CONTINUE
      FMULPY = 1.0
      IF (N.EQ.0) FMULPY = 2.0
      IF (INDIC.NE.2) GO TO 210
      GM(NVECTL+II) = FMULPY*3.1415927*ABS(GM(NVECTL+II)/WMAX**2)
C
      DO 205 I = 1,M3
      XSINGL(I) = SNGL(XX(I))*FMULPY*3.1415927/WMAX
  205 CONTINUE
210   IPOINT = 1
      ITOT = 1
      ITOTL = 0
      IF (INOTE.GT.1) CALL GASP(BBB,ISAVE(1),3,ISHL(1))
      IADD = 2
      DO 240 I=1,NSEG
C
C     MODAL DISPLACEMENTS AND STRESSES FOR EACH SEGMENT FOUND IN LOCAL.
C
      I5I = I5(I)
220   IPOS = 43*ITOTL + 1
      IEND = IPOS + 43*I5I - 1
      IF (IEND.LT.10000) GO TO 230
      IF (INDIC.NE.4) CALL GASP(BBB,ISAVE(IADD-1),1,ISHL(IADD-1))
      CALL GASP(BBB,ISAVE(IADD),3,ISHL(IADD))
      ITOTL = 0
      IADD = IADD + 1
      GO TO 220
230   CONTINUE
      CALL LOCAL(IW,I,DS(ITOT),I5I,FN,F,BBB(8*I5I+IPOS),BBB(22*I5I+IPOS)
     1,BBB(33*I5I+IPOS),BMODE,NSEG,BBB(IPOS),BBB(36*I5I+IPOS),INDIC,
     2BBB(39*I5I+IPOS),IALL,II,SMODE,TMODE,IPOINT,IDIST,IANALY,
     3 ILOOP,ILPOS(1,I),PALL,FF,RHF,RHFIX,RVAR,RFIX,XSINGL)
      ITOT = ITOT + I5I
      ITOTL = ITOTL + I5I
240   CONTINUE
C
      IF (INDIC.EQ.2) GAMP(NVECTL+II)=ABS(AMPLTD)/(2.*GM(NVECTL+II))
C
      IF (INDIC.NE.4.AND.INOTE.GT.1)
     1CALL GASP(BBB,ISAVE(IADD-1),1,ISHL(IADD-1))
      IF (INDIC.EQ.3.AND.II.LT.NVEC) GO TO 250
C
      IF (INDIC.NE.4.AND.INOTE.EQ.1)
     1CALL GASP(BBB,ISAVE(IADD-1),1,ISHL(IADD-1))
      NN = IALL*3
C     STORE MODE SHAPES
      IF (INDIC.NE.3) CALL GASP(BMODE,NN,1,IMOAD(II+NVIB))
      IF (INDIC.NE.3) GO TO 250
      NN = IOUT*9*NDIST
      IF (IREST.NE.2) GO TO 247
      IF (IANALY.EQ.1) GO TO 247
      IF (NN.EQ.0) GO TO 244
      INBEG = IOUT*NDIST*3 + 1
C     WRITE(6,*)' IANALY,IOUT,INBEG,NDIST,NN=',
C    1            IANALY,IOUT,INBEG,NDIST,NN
      DO 243 I = INBEG,NN
C     WRITE(6,*)' I,SMODE(I)=',I,SMODE(I)
C     IF (MOD(I,IOUT).EQ.0) WRITE(6,*)' NEW COLUMN...'
  243 SMODE(I) = SQRT(SMODE(I))
  244 NK = NTHETA*NCIRC*9
      IF (NK.EQ.0) GO TO 247
      INBEG = NTHETA*NCIRC*3 + 1
      DO 245 I = INBEG,NK
  245 TMODE(I) = SQRT(TMODE(I))
  247 CONTINUE
C     STORE MERIDIONAL STRESS OR STRESS RESULTANT DISTRIBUTIONS.
C     STORE CIRCUMFERENTIAL DISTRIBUTIONS
C     STORE RING LOADS
      NN1 = IOUT*NDIST*9
      NN2 = NTHETA*NCIRC*9
      NN3 = NTOT*NHARM*4
C
      IF (ILOOP.EQ.1) THEN
      IMOAD(100) = 0
      IF (NN1.NE.0) CALL GASP(SMODE,NN1,1,IMOAD(100))
      IMOAD(99)  = 0
      IF (NN2.NE.0) CALL GASP(TMODE,NN2,1,IMOAD( 99))
      IMOAD(96)  = 0
      IF (NN3.NE.0) CALL GASP(FF,   NN3,1,IMOAD( 96))
      ELSE
      IMOAD(98)  = 0
      IF (NN1.NE.0) CALL GASP(SMODE,NN1,1,IMOAD( 98))
      IMOAD(97)  = 0
      IF (NN2.NE.0) CALL GASP(TMODE,NN2,1,IMOAD( 97))
      IMOAD(95)  = 0
      IF (NN3.NE.0) CALL GASP(FF,   NN3,1,IMOAD( 95))
      ENDIF
C
250   CONTINUE
      RETURN
      END
C=DECK      IFIND
      SUBROUTINE IFIND(IDIST,X)
C+---------------------------------------------------------------------+
C+---------------------------------------------------------------------+
C     CALLED FROM MODE, WHICH IS CALLED FROM MAIN.
C     CALCULATES GLOBAL MERIDIONAL STATIONS FOR WHICH THERE WILL BE
C     OUTPUT. THESE ARE STORED IN X.  OUTPUT IS PROVIDED FOR EVERY
C     INTVAL(ISEG) TH  MESH POINT.
C
      DIMENSION IDIST(1000),X(1000),S(1000)
      COMMON/SHEL/ISHL(95),IWAL(95),ITHK(95),IARC(95),ILOAD(95)
      COMMON/INTRVL/ INTVAL(95),IOUT,NDIST,NCIRC,NTHETA
      COMMON/SEGS/NSEG,M2,I5(95),I2,I2G
      COMMON/XID/IDX
      CALL GASP(S,I2,3,IARC(1))
21    CONTINUE
      IS = 1
      ITOT = 0
      DO 20 ISEG=1,NSEG
      I5I = I5(ISEG)
      INEXT = ITOT+1
      IEND = ITOT + I5I
      DO 10 I=1,I5I
      ITOT = ITOT + 1
      IF (ITOT.NE.INEXT) GO TO 10
      X(IS) = S(ITOT)
      IDIST(IS) = ITOT
      IS = IS + 1
      INEXT = ITOT + INTVAL(ISEG)
      IF (INEXT.GT.IEND) INEXT = IEND
10    CONTINUE
20    CONTINUE
      IOUT = IS - 1
      J = IOUT*NDIST*9
      IF (J.LE.9000) GO TO 25
      DO 22 I = 1,NSEG
22    INTVAL(I) = INTVAL(I) + 1
      GO TO 21
25    CONTINUE
      CALL GASP(X,IOUT,1,IDX)
      RETURN
      END
C=DECK      LOCAL
      SUBROUTINE LOCAL(IW,IS,HC,I5,FN,F,C,B,PSTS,BMODE,NSEG,THERM,
     1PFXD,INDIC,TIO,IALL,IVEC,SMODE,TMODE,IPOINT,IDIST,IANALY,
     1 ILOOP,IPOS,PALL,FF,RHF,RHFIX,RVAR,RFIX,XSINGL)
C+---------------------------------------------------------------------+
C+---------------------------------------------------------------------+
      DOUBLE PRECISION H,HPAST,HI,C1,C2,C3,W,U,V,R,RD,FK1,FK2,CURD
      DOUBLE PRECISION UD,VD,WD,WDD,CHI,PS
      DOUBLE PRECISION F
C
C     CALLED FROM MODE, WHICH IS CALLED FROM MAIN.
C     CALCULATES MODE SHAPE FOR BUCKLING AND VIBRATION MODES.
C     ALSO CALCULATES STRESS RESULTANTS OR STRESSES FOR NONSYMMETRIC
C     LINEAR STRESS ANALYSIS (INDIC=3).  LOCAL DOES THIS FOR CURRENT
C     SHELL SEGMENT AND FOR CURRENT HARMONIC.
C     IN LINEAR STRESS ANALYSIS DISPLACEMENTS, STRESS RESULTANTS,
C     AND STRESSES ARE SUPERPOSED. FORCES AND MOMENTS IN DISCRETE
C     RINGS ARE ALSO CALCULATED, ALTHOUGH THESE ARE NOT SUPERPOSED
C     UNTIL LATER.
C
C     MODE SHAPE IN EACH SHELL SEGMENT CALCULATED ALONG WITH MODAL STRES
      DIMENSION F(*),C(I5,14),B(I5,5),PSTS(I5,3),BMODE(IALL,9)
      DIMENSION SMODE(9000),TMODE(9000),IDIST(1000),XSINGL(3000)
      DIMENSION THERM(I5,8),TIO(I5,4),Z(100),T(100)
      DIMENSION PFXD(I5,3),IW(1000),HC(*),FF(*),IPOS(*),PALL(*)
      DIMENSION RHF(*),RHFIX(*),RVAR(*),RFIX(*)
      COMMON/NOHARM/NHARM
      COMMON/ALLRNG/NTOT,IPRE
      COMMON/SHEL/ISHL(95),IWAL(95),ITHK(95),IARC(95),ILOAD(95)
      COMMON/INTRVL/INTVAL(95),IOUT,NDIST,NCIRC,NTHETA
      COMMON/XTRSS/SIG1I,SIG1O,SIG2I,SIG2O,TAUI,TAUO,SIGEI,SIGEO
      COMMON/IDZREF/IZREF(95)
      COMMON/FICTP/ IFICT
      COMMON/SFLAG/ MONOQ
      COMMON/STRSEG/ISTRSS(95)
      REAL N10,N20
      COMMON/ISTUFB/KK,I5TOT,IC,NUNK,KLAP,ICALL
      REAL N1,N2,N12,M1,M2,MT,K1,K2,K12
      COMMON/INTRG/NSTATN(95),IRING(95,20)
      COMMON/AMPFAC/OMEGDR,YLATRL,YAXIAL,BDAMP,AMPLTD,GAMP(200)
      COMMON/RESTRT/IREST
      COMMON/RGTEMP/TNR(98),TMR(98),TMRX(98)
      COMMON/DRGTEM/TNRFIX(98),TMRFIX(98),TMXFIX(98)
      COMMON/KCHNG/NWALL(95),CCH(95)
C
      N = FN
      IK = 1
      N10 = 0.0
      N20 = 0.0
      CHI0 = 0.0
      IF (NWALL(IS).NE.4.AND.NWALL(IS).NE.9.AND.ISTRSS(IS).EQ.1)
     1      CALL GASP(T,I5,3,ITHK(IS))
C     RETRIEVE REFERENCE SURFACE LOCATION
      IF (ISTRSS(IS).EQ.1) CALL GASP(Z,I5,3,IZREF(IS))
      ITOT = I5TOT - 2*(IS-1)
      LINDX = IPOS(3)
      IF (ILOOP.EQ.2) LINDX = IPOS(6)
      LINDX3 = LINDX + IVEC - 1
C
      INDX = IPOS(9)
      IF (ILOOP.EQ.2) INDX = IPOS(12)
      INDX3 = INDX + IVEC - 1
C
      TIN = 0.
      TOUT= 0.
      HI = HC(1)
C     START LOOP OVER CURRENT SEGMENT MESH POINTS.
      DO 110 I=1,I5
      IF (NWALL(IS).EQ.4.OR.NWALL(IS).EQ.9.OR.ISTRSS(IS).NE.1) GO TO 5
      IF (INDX.EQ.0) GO TO 5
      TIN = TIO(I,1)*PALL(INDX3)
      TOUT = TIO(I,2)*PALL(INDX3)
      IF (ILOOP.NE.1) THEN
          TIN = TIO(I,3)*PALL(INDX3)
          TOUT= TIO(I,4)*PALL(INDX3)
      ENDIF
C
    5 CONTINUE
      H = HC(I)
      HPAST = HI
      HI = 2.*H-HPAST
      ITOT = ITOT + 1
      II = I5TOT + I + 1
      I3M = IW(II - 1)
      I0 = IW(II)
      I3P = IW(II + 1)
      I2M = I0-2
      I1M = I0-1
      I1P = I0+1
      I2P = I0+2
      IF ((I3P-I0).EQ.(IC+NUNK-KLAP)) I1P = I0 + IC + 1
      IF ((I3P-I0).EQ.(IC+NUNK-KLAP)) I2P = I0 + IC + 2
C     DISPLACEMENTS AND DERIVATIVES FOR VARIABLE SPACING MESH
C
      C1 = (HPAST-HI)*(HI + H)/(16.*HPAST*H)
      C2 = (HI + H)*(HPAST + H)/(4.*HPAST*HI)
      C3 = - (HPAST-HI)*(HPAST + H)/(16.*HI*H)
      W = C1*F(I3M) + C2*F(I0) + C3*F(I3P)
      U = (F(I2M) + F(I1P))/2.
      V = (F(I1M) + F(I2P))/2.
      IF (IREST.EQ.2) V = - V
      R = B(I,1)
      RD = B(I,2)
      FK1 = B(I,3)
      FK2 = B(I,4)
      CURD = B(I,5)
      CURD = 0.0
      RS = R
      RDS = RD
      CURV1 = FK1
      CURV2 = FK2
C
C     AMPLITUDE FACTOR FOR HARMONIC DRIVING AT THE RESONANT FREQQUENCY.
C
C     FIND INTEGRAL OF Y*M*PHI.  M*PHI IS STORED IN TMODE.
C
      IF (INDIC.NE.2) GO TO 7
      IF (IABS(N).GT.1) GO TO 7
      IF (N.EQ.0) GO TO 6
C BEG AUG 1991
      FACMLT = 1.0
      IF (N.LT.0) FACMLT = -1.0
C     WRITE(6,*) ' N,FACMLT,AMPLTD,XSINGL(I1M),XSINGL(I0)=',
C    1             N,FACMLT,AMPLTD,XSINGL(I1M),XSINGL(I0)
      AMPLTD = AMPLTD +XSINGL(I1M)*1. +XSINGL(I0)*R*FK2*FACMLT
     1                +XSINGL(I1P)*RD
      IF (I.EQ.1) AMPLTD=AMPLTD +XSINGL(I3M)*R*FK2*FACMLT
     1                          +XSINGL(I2M)*RD
      IF (I.EQ.I5)AMPLTD=AMPLTD +XSINGL(I3P)*R*FK2*FACMLT
     1                          +XSINGL(I2P)*1.
C END AUG 1991
C
C     NOTE...THE ABOVE FORMULA IS FOR LATERAL FORCED MOTIONS ONLY...
C
      GO TO 7
    6 CONTINUE
C
      AMPLTD = AMPLTD +XSINGL(I1M)*1. -XSINGL(I0)*RD +XSINGL(I1P)*R*FK2
      IF (I.EQ.1) AMPLTD=AMPLTD -XSINGL(I3M)*RD +XSINGL(I2M)*R*FK2
      IF (I.EQ.I5)AMPLTD=AMPLTD -XSINGL(I3P)*RD *XSINGL(I2P)*1.
C
C     NOTE...THE ABOVE FORMULA IS FOR AXIAL FORCED VIBRATIONS ONLY.
C
    7 CONTINUE
C
      US = U
      VS = V
      WS = W
      UD = (F(I1P) - F(I2M))/H
      VD = (F(I2P) - F(I1M))/H
      IF (IREST.EQ.2) VD = -VD
      C1 = -.5/HPAST
      C3 = .5/HI
      C2 = -C1 -C3
      WD = C1*F(I3M) + C2*F(I0) + C3*F(I3P)
      C1 = 1./(HPAST*H)
      C2 = -2./(HPAST*HI)
      C3 = 1./(HI*H)
      WDD = C1*F(I3M) + C2*F(I0) + C3*F(I3P)
      CHIO = 0.
      N10 = 0.
      N20 = 0.
      CHI = WD - FK1*U
      CHIS = CHI
C     STRAINS AND CHANGES IN CURVATURE
      E1 = UD + W   *FK1 + CHI0*CHI
      FMUL = 0.0
      K1=WDD-FK1*UD-CURD*U-FMUL*E1*FK1
      IF (R.GT.0.0) GO TO 10
      PS = - CHI
      E2 = E1
      E12 = 0.0
      K2 = K1
      K12 = 0.0
      GO TO 20
10    PS = W*FN/R - FK2*V
      E2 = - V*FN/R + U*RD/R + W*FK2
      E12 = VD - V*RD/R + U*FN/R + CHI0*PS
      K2=-PS*FN/R+CHI*RD/R-FMUL*E2*FK2
      K12 = - CHI*FN/R + PS*RD/R + VD*FK2
   20 CONTINUE
      IF (INDIC.NE.3) GO TO 70
C
C     STRESS AND MOMENT RESULTANTS.
      N1    = C(I,1)*E1 + C(I,2)*E2 + C(I,3)*K1 + C(I,4)*K2
      N2    = C(I,2)*E1 + C(I,5)*E2 + C(I,6)*K1 + C(I,7)*K2
      M1    = C(I,3)*E1 + C(I,6)*E2 + C(I,8)*K1 + C(I,9)*K2
      M2    = C(I,4)*E1 + C(I,7)*E2 + C(I,9)*K1 + C(I,10)*K2
      N12 = C(I,11)*E12 + C(I,12)*K12*2.
      MT = C(I,12)*E12 + C(I,13)*K12*2.
C
      IF (ILOOP.EQ.1) THEN
      N1 = N1 + THERM(I,1)*PALL(INDX3)
      N2 = N2 + THERM(I,2)*PALL(INDX3)
      M1 = M1 + THERM(I,3)*PALL(INDX3)
      M2 = M2 + THERM(I,4)*PALL(INDX3)
      ELSE
      N1 = N1 + THERM(I,5)*PALL(INDX3)
      N2 = N2 + THERM(I,6)*PALL(INDX3)
      M1 = M1 + THERM(I,7)*PALL(INDX3)
      M2 = M2 + THERM(I,8)*PALL(INDX3)
      ENDIF
      IF (I.EQ.1.OR.I.EQ.I5) GO TO 30
      GO TO 70
30    IF (R.GT.0.0) GO TO 40
      GO TO 70
C
C     CORRECTION ADDENDS FOR EDGE STRESS RESULTANTS CALCULATED.
C
40    F1 = 0.5*RD*H/R
      F2 = 0.5*FN*H/R
      CN1 = - N2*F1 - N12*F2 + 0.5*N10*CHI*H*FK1
      CN12 = N12*F1 + N2*F2 + 0.5*N20*PS*H*FK2
      CM1 = -M2*2.*F1 + MT*2.*F2 - N1*CHI0*H - N10*CHI*H
      IF (I.EQ.I5) GO TO 50
      GO TO 60
50    CN1 = - CN1
      CN12 = - CN12
      CM1 = - CM1
60    N1 = N1 + CN1
      N12 = N12 + CN12
      M1 = M1 + CM1
      N2 = N2 + C(I,2)*CN1/C(I,1)
      M2 = M2 + C(I,9)*CM1/C(I,8)
70    CONTINUE
      IF (ISTRSS(IS).EQ.1) GO TO 80
      IF (ISTRSS(IS).EQ.2) GO TO 85
      IF (MONOQ.EQ.1.AND.ISTRSS(IS).EQ.0) GO TO 85
C     BMODE CONTAINS GLOBAL QUANTITIES
      BMODE(ITOT,1) = U
      BMODE(ITOT,2) = V
      BMODE(ITOT,3) = W
      IF (INDIC.NE.3) GO TO 110
      BMODE(ITOT,4) = N1
      BMODE(ITOT,5) = N2
      BMODE(ITOT,6) = N12
      BMODE(ITOT,7) = M1
      BMODE(ITOT,8) = M2
      BMODE(ITOT,9) = MT
      GO TO 90
C     STRESS  CALCULATES INNER AND OUTER FIBER STRESSES OF MONOCOQUE
C     AND SEMI-SANDWICH CORRUGATED SHELLS.
   80 CONTINUE
      IF (NWALL(IS).EQ.4.OR.NWALL(IS).EQ.9) GO TO 85
      IF (ISTRSS(IS).EQ.1) THEN
          CALL STRESS(E1,E2,E12,K1,K2,K12,T(I),Z(I),IS,I,TIN,TOUT,
     1              CURV1,CURV2)
         BMODE(ITOT,1) = U
         BMODE(ITOT,2) = V
         BMODE(ITOT,3) = W
         BMODE(ITOT,4) = SIG1I
         BMODE(ITOT,5) = SIG1O
         BMODE(ITOT,6) = TAUI
         BMODE(ITOT,7) = SIG2I
         BMODE(ITOT,8) = SIG2O
         BMODE(ITOT,9) = TAUO
         GO TO 90
      ENDIF
   85 CONTINUE
      BMODE(ITOT,1) = U
      BMODE(ITOT,2) = V
      BMODE(ITOT,3) = W
      BMODE(ITOT,4) = E1
      BMODE(ITOT,5) = E2
      BMODE(ITOT,6) = E12
      BMODE(ITOT,7) = K1
      BMODE(ITOT,8) = K2
      BMODE(ITOT,9) = K12
C
90    CONTINUE
      IF (I.NE.IRING(IS,IK)) GO TO 100
C     CALCULATE HOOP FORCE, IN-PLANE MOMENT, OUT-OF-PLANE MOMENT
C     AND TORQUE IN DISCRETE RING.
      IF (ILOOP.EQ.1)
     1CALL RINGF(IK,KK,RS,RDS,CURV1,CURV2,FN,US,VS,WS,CHIS,FF,
     1 PALL(LINDX3),NTOT,NHARM,IVEC,RHF,TNR,TMR,TMRX,IPOS(1),PALL,RVAR)
      IF (ILOOP.EQ.2)
     1CALL RINGF(IK,KK,RS,RDS,CURV1,CURV2,FN,US,VS,WS,CHIS,FF,
     1 PALL(LINDX3),NTOT,NHARM,IVEC,RHFIX,TNRFIX,TMRFIX,TMXFIX,
     1 IPOS(4),PALL,RFIX)
      IK = IK + 1
      KK = KK + 1
100   CONTINUE
C     PERFORM SUPEROSITION FOR THIS PARTICULAR AXIAL STATION
C
      INEXT = IDIST(IPOINT)
      NNDIST = NDIST
      IF (NDIST.EQ.0) NNDIST = 1
      NNCIRC = NCIRC
      IF (NCIRC.EQ.0) NNCIRC = 1
      IF (ILOOP.EQ.1)
     1CALL SPOSE(ICALL,I,ITOT,IALL,FN,BMODE,PSTS,CHIS,
     1SMODE,TMODE,I5,NTHETA,IPOINT,INEXT,IOUT,NDIST,NCIRC,IS,IANALY,
     1 IVEC,N1,N2,IPOS(7),PALL,NNDIST,NNCIRC)
      IF (ILOOP.EQ.2)
     1CALL SPOSE(ICALL,I,ITOT,IALL,FN,BMODE,PFXD,CHIS,
     1SMODE,TMODE,I5,NTHETA,IPOINT,INEXT,IOUT,NDIST,NCIRC,IS,IANALY,
     1 IVEC,N1,N2,IPOS(10),PALL,NNDIST,NNCIRC)
C
      IF (ITOT.EQ.INEXT) IPOINT = IPOINT + 1
110   CONTINUE
      I5TOT = I5TOT + I5 + 2
C     STORE PRESTRESS QUANTITIES FOR BUCKLING ANALYSIS (INDIC=4)
      RETURN
      END
C=DECK      RINGF
      SUBROUTINE RINGF(IK,KK,R,RD,FK1,FK2,FN,U,V,W,CHI,F,TLIN,NTOT,NHARM
     1,IVEC,RHF,TNR,TMR,TMRX,IPOS,PALL,RHARM)
C+---------------------------------------------------------------------+
C+---------------------------------------------------------------------+
C     CALLED FROM LOCAL WHOSE TRACE IS MODE,MAIN
C     DISCRETE RING HOOP FORCE,IN-PLANE MOMENT, OUT-OF-PLANE MOMENT
C     AND TORQUE ARE COMPUTED FOR KKTH DISCRETE RING AND FOR HARMONIC
C     FN = FLOAT(N).
C
      DOUBLE PRECISION D,E,G,B,C
      DIMENSION RHF(*),TNR(*),TMR(*),TMRX(*),PALL(*),RHARM(*)
      COMMON/RING2/GAM(98),GJ(98),YC(98),XC(98),E1(98),E2(98),PHI(100)
      COMMON/RNGGEO/RC(98),AREA(98),ER(98),IY(98),IX(98),IXY(98),IP(98)
      REAL IY,IX,IXY,IP
      COMMON/WAVNUM/ITHETA(50),THETA(50),THETAS,THETAM
      COMMON/AMPFAC/OMEGDR,YLATRL,YAXIAL,BDAMP,AMPLTD,GAMP(200)
      COMMON/RESTRT/IREST
      DIMENSION F(NTOT,NHARM,4)
      DIMENSION D(4,4),E(4,4),B(4,4),C(4,4),G(4,4)
      DO 10 I=1,4
      DO 10 J=1,4
      D(I,J) = 0.0
      E(I,J) = 0.0
      G(I,J) = 0.0
10    B(I,J) = 0.0
C     TRANSFORMATION FROM AXIAL AND RADIAL TO NORMAL AND TANGENTIAL
C     DISPLACEMENT COMPONENTS  QSTAR = D(I,J)*Q
      D(1,1) = R*FK2
      D(1,3) = -RD
      D(2,2) = 1.
      D(3,1) = RD
      D(3,3) = R*FK2
      D(4,4) = 1.
C     TRANSFORMATION FROM SHELL REFERENCE SURFACE TO RING CENTROIDAL
C     DISPLACEMENTS    QC = E(I,J)*QSTAR
      E(1,1) = 1.
      E(1,4) = -E1(KK)
      E(2,1) = -E2(KK)*FN/R
      E(2,2) = 1. + E1(KK)/R
      E(2,3) = -E1(KK)*FN/R
      E(3,3) = 1.
      E(3,4) = E2(KK)
      E(4,4) = 1.
C     DISCRETE RING CONSTITUTIVE LAW   S = G(I,J)*EPSILON
      G(1,1) = ER(KK)*AREA(KK)
      G(2,2) = ER(KK)*IX(KK)
      G(2,3) = -ER(KK)*IXY(KK)
      G(3,2) = G(2,3)
      G(3,3) = ER(KK)*IY(KK)
      G(4,4) = GJ(KK)
C     DISCRETE RING KINEMATIC RELATIONS    EPSILON = B(I,J)*QC
      B(1,2) = -FN/RC(KK)
      B(1,3) = 1./RC(KK)
      B(2,1) = FN*FN/RC(KK)**2
      B(2,4) = 1./RC(KK)
      B(3,2) = FN/RC(KK)**2
      B(3,3) = -FN*FN/RC(KK)**2
      B(4,1) = FN/RC(KK)**2
      B(4,4) = FN/RC(KK)
C     MATRIX MULTIPLICATIONS
      CALL MATMU3(E,D,C,4,4)
      CALL MATMU3(B,C,D,4,4)
      CALL MATMU3(G,D,C,4,4)
      F(KK,IVEC,1)
     1= C(1,1)*U + C(1,2)*V + C(1,3)*W + C(1,4)*CHI + TNR(KK)*TLIN
C
      FNANGL = ABS(FN*THETAS)
      SI = SIN(FNANGL)
      CO = COS(FNANGL)
      IF (FN.GT.0.) GO TO 22
      SI = CO
   22 CONTINUE
      IVEC1 = IVEC - 1
      IF (IVEC.EQ.1) RHF(KK) = 0.
      IF (IVEC.EQ.1) RHARM(KK) = 0.
      IF (IREST.NE.2) RHF(KK) = RHF(KK) + F(KK,IVEC,1)*SI
      IF (IREST.NE.2.AND.IPOS.NE.0)
     1                RHARM(KK) = RHARM(KK) + PALL(IPOS+IVEC1)*SI
      IF (IREST.EQ.2) RHF(KK) = RHF(KK) -ABS(AMPLTD*F(KK,IVEC,1))
C
C     F(KK,IVEC,1) = HOOP FORCE,NR CORRESPONDING TO IVEC TH HARMONIC
C     F(KK,IVEC,2)=OUT-OF-PLANE MOMENT FOR IVECTH HARMONIC
C     F(KK,IVEC,3) = IN-PLANE MOMENT FOR IVECTH HARMONIC
C     F(KK,IVEC,4) = TORQUE FOR IVECTH HARMONIC
C
      F(KK,IVEC,2)
     1= C(2,1)*U + C(2,2)*V + C(2,3)*W + C(2,4)*CHI + TMR(KK)*TLIN
      IF ((KK*IVEC*3).GT.6250) RETURN
      F(KK,IVEC,3)
     1= C(3,1)*U + C(3,2)*V + C(3,3)*W + C(3,4)*CHI -TMRX(KK)*TLIN
      IF ((KK*IVEC*4).GT.6250) RETURN
      F(KK,IVEC,4) = C(4,1)*U +C(4,2)*V +C(4,3)*W + C(4,4)*CHI
      RETURN
      END
C=DECK      SPOSE
      SUBROUTINE SPOSE(ICALL,I,ITOT,IALL,FN,BMODE,PSTS,
     1CHI,SMODE,TMODE,I5,NTHETA,IS,INEXT,IOUT,NS,NCIRC,ISEG,IANALY,
     1 IVEC,N1,N2,IPOS,PALL,NNDIST,NNCIRC)
C+---------------------------------------------------------------------+
C+---------------------------------------------------------------------+
C     CALLED FROM LOCAL, WHOSE TRACE IS MODE,MAIN
C     PURPOSE IS TO PERFORM SUPERPOSITION FOR MERIDIONAL AND CIRCUM-
C     FERENTIAL DISTRIBUTIONS IN LINEAR NONSYMMETRIC STRESS ANALYSIS
C
      DIMENSION SMODE(IOUT,NNDIST,9),TMODE(NTHETA,NNCIRC,9)
      DIMENSION BMODE(IALL,9)
      DIMENSION PSTS(I5,3),PALL(*)
      COMMON/WAVNUM/ITHETA(50),THETA(50),THETAS,THETAM
      COMMON/AMPFAC/OMEGDR,YLATRL,YAXIAL,BDAMP,AMPLTD,GAMP(200)
      COMMON/RESTRT/IREST
      COMMON/NLINS/NSTART,NFIN
      REAL N1,N2
C
C
      IF (ITOT.NE.INEXT) GO TO 40
C     SUPERPOSE MERIDIONAL DISTRIBUTIONS AT NS CIRCUMFERENTIAL STATIONS
      IF (NS.EQ.0) GO TO 40
      DO 30 J=1,NS
      THET = THETA(J)
      FNTHET = ABS(FN*THET)
      SI = SIN(FNTHET)
      CO = COS(FNTHET)
      IF (FN.GT.0.) GO TO 10
      SI = CO
      CO = SIN(FNTHET)
10    CONTINUE
C     WRITE(6,*)' IREST,IANALY,ITOT,J=',IREST,IANALY,ITOT,J
C     WRITE(6,*)' AMPLTD,FACT,THET=',AMPLTD,FACT,THET
      DO 20 K=1,9
      FACT = SI
      ISHR = 0
      IF (K.EQ.2.OR.K.EQ.6.OR.K.EQ.9) ISHR = 1
      IF (ISHR.EQ.1.AND.FN.NE.0.) FACT = CO
      IF (IREST.NE.2)
     1 SMODE(IS,J,K) = SMODE(IS,J,K) + BMODE(ITOT,K)*FACT
      IF (IREST.EQ.2.AND.IANALY.NE.1.AND.K.GT.3)
     1 SMODE(IS,J,K) =SMODE(IS,J,K) +(AMPLTD*BMODE(ITOT,K)*FACT)**2
      IF (IREST.EQ.2.AND.(IANALY.EQ.1.OR.K.LE.3))
     1 SMODE(IS,J,K) =SMODE(IS,J,K) + AMPLTD*BMODE(ITOT,K)*FACT
C     WRITE(6,*)' IS,J,K,SMODE(IS,J,K)=',IS,J,K,SMODE(IS,J,K)
   20 CONTINUE
30    CONTINUE
   40 CONTINUE
C     GET MERIDIONAL PRESTRESS RESULTANT N10 (PSTS(I,1)), CIRCUMFER-
C     ENTIAL PRESTRESS RESULTANT N20 (PSTS(I,2)), AND SUM OF
C     CIRCUMFERENTIAL HARMONICS (PSTS(I,3)) AT CIRC. STATION THETAS.
      FNTHET = ABS(FN*THETAS)
      SI = SIN(FNTHET)
      CO = COS(FNTHET)
      IF (FN.GT.0.) GO TO 50
      SI = CO
      CO = SIN(FNTHET)
50    FACT = SI
      IVEC1 = IVEC - 1
      IF (IVEC.GT.1) GO TO 52
      PSTS(I,1) = 0.
      PSTS(I,2) = 0.
      PSTS(I,3) = 0.
   52 CONTINUE
      IF (IREST.EQ.2) GO TO 55
      PSTS(I,1) = PSTS(I,1) + N1*FACT
      PSTS(I,2) = PSTS(I,2) + N2*FACT
      IF (IPOS.NE.0) PSTS(I,3) = PSTS(I,3) + PALL(IPOS+IVEC1)*FACT
      GO TO 60
   55 CONTINUE
      PSTS(I,1) = PSTS(I,1)  -ABS(AMPLTD*N1)
      PSTS(I,2) = PSTS(I,2)  -ABS(AMPLTD*N2)
      PSTS(I,3) = PSTS(I,3)  +AMPLTD*0.*FACT
60    CONTINUE
      IF (ICALL.GT.NCIRC) RETURN
      IF ((ISEG*1000 + I).NE.ITHETA(ICALL)) RETURN
      DTHETA = 0.0
      IF (NTHETA.EQ.1) GO TO 1091
      CFACT = 1.0
      CDIF  = (ABS(THETAM) - 3.1415)/3.1415
      IF (ABS(CDIF).LT.0.1) THEN
         IF (NSTART.NE.0.AND.NFIN.NE.0) THEN
            IF ((NSTART*NFIN).LT.0) THEN
               CFACT = 2.0
            ENDIF
         ENDIF
      ENDIF
      DTHETA = CFACT*THETAM/FLOAT(NTHETA-1)
1091  CONTINUE
      ANGLE = - DTHETA
C     SUPERPOSE CIRCUMFERENTIAL DISTRIBUTIONS AT ICALL TH  MERIDIONAL
C     MESH POINT TAG.
      DO 90 J=1,NTHETA
      ANGLE = ANGLE + DTHETA
      FNANGL = ABS(FN*ANGLE)
      SI = SIN(FNANGL)
      CO = COS(FNANGL)
      IF (FN.GT.0.0) GO TO 70
      SI = CO
      CO = SIN(FNANGL)
70    DO 80 K=1,9
      FACT = SI
      ISHR = 0
      IF (K.EQ.2.OR.K.EQ.6.OR.K.EQ.9) ISHR = 1
      IF (ISHR.EQ.1.AND.FN.NE.0.) FACT = CO
      IF (IREST.NE.2)
     1 TMODE(J,ICALL,K) = TMODE(J,ICALL,K) +BMODE(ITOT,K)*FACT
      IF (IREST.EQ.2.AND.IANALY.NE.1.AND.K.GT.3)
     1 TMODE(J,ICALL,K)=TMODE(J,ICALL,K)+(AMPLTD*BMODE(ITOT,K)*FACT)**2
      IF (IREST.EQ.2.AND.(IANALY.EQ.1.OR.K.LE.3))
     1 TMODE(J,ICALL,K)=TMODE(J,ICALL,K)+ AMPLTD*BMODE(ITOT,K)*FACT
   80 CONTINUE
90    CONTINUE
      ICALL = ICALL + 1
      RETURN
      END
C=DECK      RESFAC
      SUBROUTINE RESFAC(FREQ,FACT,FNGVAL,DAMPNG,SPECTL)
C+---------------------------------------------------------------------+
C+---------------------------------------------------------------------+
C
C     CALLED FROM MODE IF IREST = 2
C     PURPOSE IS TO FIND DYNAMIC RESPONSE MULTIPLIER FOR THE VARIOUS
C     ANALYSIS TYPES: SINUSOIDAL EXCITATION, RANDOM EXCITATION, OR
C     SHOCK.
C
C     INPUT DATA...
C
C     FREQ = FREQUENCY IN HERTZ
C
C     OUTPUT DATA...
C
C     FACT = MULTIPLIER
C
      COMMON/RESPON/GRAVTY,FNGEES(20),FREQN(20),BFACT(20),FREQB(20)
      COMMON/RESPO2/ANALY,WSPEC(20),FREQW(20)
C
      PI = 3.1415927
      IANALY = ANALY
C
      IF (IANALY.NE.2) CALL INTERP(20,FREQN,FREQ,FNGEES,FNGVAL,0)
      IF (IANALY.LT.3) CALL INTERP(20,FREQB,FREQ,BFACT,DAMPNG,0)
      IF (IANALY.EQ.2) CALL INTERP(20,FREQW,FREQ,WSPEC,SPECTL,1)
C
      OMEGA = 2.*PI*FREQ
      OMEGA2 = OMEGA**2
C
      GO TO (10,20,30),IANALY
C
   10 CONTINUE
C
C     BRANCH FOR SINUSOIDAL EXCITATION...
C
      FACT = FNGVAL*GRAVTY/(OMEGA2*DAMPNG)
      RETURN
C
   20 CONTINUE
C
C     BRANCH FOR RANDOM VIBRATIONS...
C
      FACT = SQRT(OMEGA*SPECTL/2.)*GRAVTY/(OMEGA2*SQRT(DAMPNG) )
      RETURN
C
   30 CONTINUE
C
C     BRANCH FOR SHOCK...
C
      FACT = 2.*FNGVAL*GRAVTY/OMEGA2
C
      RETURN
      END
