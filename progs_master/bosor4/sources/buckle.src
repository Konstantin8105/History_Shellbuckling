C=DECK      BUCKLELIB
C
C  THIS IS THE BUCKLE LIBRARY (SOURCE FILE)
C
C
C=DECK      BUCKLE
      SUBROUTINE BUCKLE(B,C,DI,DIAG)
C+---------------------------------------------------------------------+
C+---------------------------------------------------------------------+
C     CALLED FROM MAIN. SOLVES THE EQUATIONS SET UP IN OVERLAY ARRAYS
C     FOR STRESS ,  BUCKLING ,  AND VIBRATION PROBLEMS.
C
      DOUBLE PRECISION B,C,DI
      COMMON/IFRHX/IFB,RHFIX(98),K,MNUMB,ISWTCH,KNT,IFTOT,INDSIG,LFIX
      COMMON/EIGNO/NVEC,EGV(50),AXB
      COMMON/TOTPTS/M3
      COMMON/BKSIZE/ IMAXP,IMAXB,KMAXP(20),KMAXB(20)
      COMMON/LOCATN/ILOCP,ILOCB,IROWCP(98),IROWCB(98),IIWP,IIWB
      COMMON/DETER/DET,NEX
      COMMON/BLK/IBLK,NGBK(20),NFK(20)
      COMMON/BCK/IDRW(20,5)
      COMMON/OUTP/NPRT
      COMMON/WAVES/N0,N,NMIN,NMAX,INCR
C BEG DEC 1990
      DIMENSION B(*),C(*),ILOC(3000),DIAG(3000),DI(3000)
C END DEC 1990
C
C     SWITCHING LOOP FOR VARIOUS TYPES OF ANALYSES (K = INDIC + 3)
C
      GO TO (10,20,30,40,50,70,40),K
10    CONTINUE
C     DETERMINANT DETERMINATION
      CALL GASP(ILOC,M3,3,ILOCB)
      LGTH = 2*ILOC(M3)
      IF (IBLK.EQ.1) CALL GASP(C,LGTH,3,IDRW(1,1))
      WRITE(6,15) N,N,N,N
   15 FORMAT(/' NUMBER OF CIRCUMFERENTIAL WAVES =',4I7)
      CALL FACTR(B,C,IDRW(1,1),DET,NEX,IBLK,NGBK,NFK,ILOC,DIAG,DI,KMAXB)
      GO TO 80
20    CONTINUE
C     BUCKLING WITH NONLINEAR PREBUCKLING
      CALL EBAND2(B,C,DI,DIAG,ILOC)
      WRITE(6,25) N,N,N,N,EGV(1)
   25 FORMAT(/' NUMBER OF CIRCUMFERENTIAL WAVES =',4I7,
     1' EIGENVALUE=',1PE12.4)
      GO TO 80
30    CALL ERREX
40    CONTINUE
C     LINEAR BUCKLING
      NPRINT = 1
      CALL EBAND2(B,C,DI,DIAG,ILOC)
      GO TO 80
50    CONTINUE
C     VIBRATION
      NPRINT = 1
      CALL EBAND2(B,C,DI,DIAG,ILOC)
      DO 60 I=1,NVEC
      IF (EGV(I).LT.0.) EGV(I) = 0.
60    EGV(I) = SQRT(ABS(EGV(I)))/(2.*3.1415927)
      GO TO 80
70    CONTINUE
80    CONTINUE
      RETURN
      END
C=DECK      VEC
C./      ADD   NAME=VEC
      SUBROUTINE VEC(IZERO,A,X,Y,NBLK,IBLK,KEQ,LOC)
C+---------------------------------------------------------------------+
C+---------------------------------------------------------------------+
C     CALLED FROM EBAND,EBAND2, AND EIGEN IN THE BUCKLE OVERLAY
C     PERFORMS MULTIPLICATION OF A MATRIX TIMES A VECTOR FOR
C     MATRICES WHICH ARE STORED IN BLOCKS ON DISK
C     CALCULATIONS GIVE . .    Y = Y*IZERO  + A*X
      DOUBLE PRECISION A,X,Y
      DIMENSION X(*),Y(*),A(*),KEQ(*),LOC(*),IBLK(*)
      IF (IZERO.NE.0) GO TO 20
      N=KEQ(NBLK)
      DO 10 I=1,N
10    Y(I)=0.
20    I1 = 1
      DO 50 I=1,NBLK
      I2=KEQ(I)
      NW = LOC(I2)*2
      IF (NBLK.GT.1) CALL GASP(A,NW,3,IBLK(I))
      K1=1
      DO 40 J=I1,I2
      K2=LOC(J)
      KL=J-LOC(J)
      DO 30 K=K1,K2
      Y(K+KL) = Y(K+KL) + X(J)*A(K)
30    Y(J)=Y(J)+X(K+KL)*A(K)
      Y(J) = Y(J) - X(J)*A(K2)
40    K1=K2+1
50    I1=I2+1
      RETURN
      END
C=DECK      EBAND2
      SUBROUTINE EBAND2(B,C,DI,DIAG,ILOC)
C+---------------------------------------------------------------------+
C+---------------------------------------------------------------------+
C     CALLED FROM BUCKLE WHICH IS CALLED FROM MAIN.
C     THIS SUBROUTINE IS USED TO CALCULATE NVEC VIBRATION FREQUENCIES
C     OR BUCKLING LOADS
C     FOR A GIVEN CIRCUMFERENTIAL WAVENUMBER N.  THE EIGENVALUE
C     PROBLEM HAS THE FORM . .
C                               A*X  - OMEGA**2*M*X  = 0
C
C     SEE ADDITIONAL COMMENTS SPRINKLED THROUGHOUT EBAND
C
      DOUBLE PRECISION B,C,DI,Z,X,Y
      DOUBLE PRECISION SUM,SUM1,SUM2,SM,BIG
      COMMON/ALLRNG/NALL,IPRE
      COMMON/FORCES/V(98),HF(98),FM(98)
      COMMON/STEPS/STEP,STEP1(98),STEP2(98),STEP3(98)
      COMMON/TEMTUR/ TEMP,DTEMP
      COMMON/IHIGH/ITOOHI
      COMMON/TOTPTS/NT
      COMMON/EIGNO/NVEC,ROOT(50),AXB
      COMMON/LOCATN/ILOCP,ILOCB,IROWCP(98),IROWCB(98),IIWP,IIWB
C BEG DEC 1990
      DIMENSION C(*),B(*),DI(3000),DIAG(3000),ILOC(3000)
C END DEC 1990
#if cray
      DIMENSION Z(12000),X(6000),Y(6000)
#else
      DIMENSION Z(6000),X(3000),Y(3000)
#endif
      DIMENSION SM(50),ISAVE1(50),ISAVE2(50)
      COMMON/OUTP/NPRINT
      COMMON/GMAXX/GMI(50)
      COMMON/ROTATN/OMEGA,DOMEGA
      COMMON/AMPFC2/IMPHI(200)
      COMMON /EIG1/IDI,IMI,AX,ACX(3),DM(3,3),IMXP(3),IMDV(3)
      COMMON /EIG2/ ITP1(1),ITP2,ITP3,ITP4,ITP5
C     COMMON/EIG3/RHO,SD
      COMMON /EIG4/NEG(100)
      COMMON/BLK/IBLK,NGBK(20),NFK(20)
      COMMON/BCK/IDRW(20,5)
      COMMON/BKSIZE/IMAXP,IMAXB,KMAXP(20),KMAXB(20)
      COMMON/WAVES/ N0,N,NMIN,NMAX,INCR
      COMMON/IDVEC/IBVC(50),IPV2(50)
      COMMON /IDEIG/ IVEC(500),NVECTL,EIGENW(500)
      COMMON/ORTA/IFLGG,KTM,KROOTS
      COMMON/INSTAB/INDIC
      COMMON/EIGENV/P,OMG2,RHO
10    FORMAT(25X,11HROOT NUMBER I4,11H  ITERATION I4, 5H  AX=E14.8,     
     16H  DET=E14.8, 1H+I6,28H, NUMBER OF NEGATIVE ROOTS=  I3)
20    FORMAT (12H0  THERE ARE I5,25H EIGENVALUES IN THE RANGE E15.7,    
     14H TO  E15.7)
30    FORMAT (12H  THERE ARE  I5,20H EIGENVALUES BETWEEN  E15.7, 4H AND 
     1E15.7)
40    FORMAT (12H  THERE ARE  I5,20H FREQUENCIES BETWEEN  E15.7,4H AND  
     1E15.7)
50    FORMAT (15X,14H SUB ITERATION  I4,7H,  ARQ= E14.8,9H,   DARQ=E14.8
     1,9H,   FREQ= E14.8)
60    FORMAT (12H0ROOT NUMBER  I3,1H.,I7, 17H SPECTRAL SHIFTS. ,I7,     
     116H SUB ITERATIONS.,5X,11HEIGENVALUE= E14.8,15H,    FREQUENCY=    
     1E14.8)
      DATA IDB1,IMAX,MAX,EPS,EPS1,EPS2/1,3,18,.000005,.0002,.005/
      DATA C1,C2,C3,C4/.99,.95,.85,.7/
      DATA KA, KB,CC,SD/0,0,1.,.1591549/
      DATA ARQ,AXG,AX2,DARQ,DZ,ER/0.,0.,0.,0.,0.,0./
70    FORMAT (63H0  NO FURTHER EIGENVALUES CAN BE FOUND IN THE SPECIFIED
     1RANGE.   )
80    FORMAT (8H0 VECTOR     /(6E15.6))
90    FORMAT (18H GENERALIZED MASS=  E15.8//)
      IF (NPRINT.GT.1) WRITE (6,100)NVEC,N
100   FORMAT(///34H ENTER EBAND2 TO CALCULATE LOWEST  I2,40H  EIGENVALUE
     1S.            WAVENUMBER,N=  I6, 6H WAVES  /)
      IF (NPRINT.GT.1) CALL SR100T(2)
      IID = 2
      IF (INDIC.EQ.2) IID = 3
      ITHIS = 0
      NSHIFT = 0
      DECR = 0.95
      M3 = NT
      AXB = 0.0
      AX2 = 0.0
      ITOTL = 0
      NEXT = 1
      IEND = 0
      CALL GASP(ILOC,NT,3,ILOCB)
      IFLAG = 0
      NPRT = 0
      SUM2 = 0.
      NROW = NT
      N8=0
      ND=NROW
      ND2 = ND*2
      LGTH = 2*ILOC(NT)
      AX1=AXB
      N9=5
      IMAX=10
      ITP1(1) = 0
      ITP2=0
C
      IF (INDIC.NE.-1) IFLGG = 0
      MAX=18
      AROOT=0.
      ASTEP=.5*(AX2-AX1)
      IF (AX1.GT.0.) GO TO 110
      ASTEP=2.*ASTEP
110   CONTINUE
      IF (AX2.GT.0.) GO TO 120
      ASTEP=1.E+20
      KB=100000
      AX2=1.E+20
      GO TO 150
C     FIND NR OF EIGENVALUES AT UPPER END OF RANGE
120   AXT=-AX2
      CALL ADD2(AXT,B,C,IDRW,ILOC,IID)
      IF (NPRINT.GT.1) WRITE (6,130)
130   FORMAT(52H       FINISH FORMING B - AXT*C AND START FACTORING.   )
      IF (NPRINT.GT.1) CALL SR100T(2)
      NEX=0
      CALL FACTR(C,B,IDRW(1,5),DET,NEX,IBLK,NGBK,NFK,ILOC,DIAG,DI,KMAXB)
      IF (NPRINT.GT.1) WRITE (6,140)KTM,AXT
140   FORMAT(//I5,34H  NEGATIVE ROOTS  FOR SHIFT. AXT =  1PE13.5//)
      IF (NPRINT.GT.1) CALL SR100T(2)
      KB=KTM
150   CONTINUE
      IF (IBLK.EQ.1) CALL GASP(C,LGTH,3,IDRW(1,IID))
      IF(AX2.EQ.0) AX2=1.E+15
      N3=0
      N4=0
      N5=0
      N6=0
      N7=0
      IDF=0
      TOP=0.0
      NIT=0
      NITT=0
      IPOW=0
      NEIG=0
      IDIF=50
      NTOT=ND2
      IDF1=IDIF-1
      TOP1=TOP
      AXR2=.99*AX1
      GO TO 230
C
C     USE THE LAST EIGENVALUE'
C
160   AXR2=AXR+CC*ARQ
      IF (AXR2.GT.AX2) GO TO 210
      IF (AXR2.LT.AX1) GO TO 200
      IF (AXG.LT.AX1) GO TO 200
      IF (AXR2) 170,520,170
170   IF (ABS(ARQ/AXR2).LT.0.01) GO TO 180
      GO TO 190
180   CONTINUE
      N3 = N3 + 1
      IF (N3.GT.IMAX) GO TO 790
      IF (NIT.EQ.MAX) GO TO 765
      NIT = 1
      GO TO 520
190   CONTINUE
      AXM=AMAX1(ASTEP,C4*AROOT)
      CX=AXM/ABS(ARQ)
      CC=AMIN1(CC,CX)
      AXR2=AXR+CC*ARQ
      GO TO 240
200   CONTINUE
      IF (INDIC.NE.-1) GO TO 203
      IF (KTM.LE.KROOTS) GO TO 203
      IF (KTM.EQ.(KROOTS+1)) GO TO 240
203   AXR2 = AXR - 1.5*ARQ
      IF (KB.EQ.100000) GO TO 230
      IF (AXR2.GT.AX2) GO TO 220
      GO TO 230
210   IF (KB.EQ.100000) GO TO 810
      AXR2=AXR-C2*CC*ARQ
      IF (AXR2.GE.AX1) GO TO 230
220   AXR2=.5*(AX1+AX2)
230   CALL URVEC(ND,Y)
      CALL VEC(0,C,Y,X,IBLK,IDRW(1,IID),NGBK,ILOC)
240   N3 =N3+1
      NSHIFT = NSHIFT + 1
      AXR=AXR2
      IF (N3-IMAX) 250,250,790
250   CONTINUE
260   CONTINUE
      AXT=-AXR-AXB
      CALL ADD2(AXT,B,C,IDRW,ILOC,IID)
      NEX=0
      IF (NPRINT.GT.1) WRITE (6,130)
      IF (NPRINT.GT.1) CALL SR100T(2)
      CALL FACTR(C,B,IDRW(1,5),DET,NEX,IBLK,NGBK,NFK,ILOC,DIAG,DI,KMAXB)
      IF (IBLK.EQ.1) CALL GASP(C,LGTH,3,IDRW(1,IID))
      IF (NPRINT.GT.1) WRITE (6,140)KTM,AXT
      IF (NPRINT.GT.1) CALL SR100T(2)
      IF (INDIC.NE.-1) GO TO 171
      IF (KTM.LE.(KROOTS+1)) GO TO 171
51    IF (NSHIFT.NE.1) GO TO 161
61    ISIG = IFLGG + 1
      GO TO (71,81,91,101,111),ISIG
71    FACT = 0.7
      GO TO 121
81    FACT = 0.9
      GO TO 121
91    FACT = 0.95
      GO TO 121
101   FACT = 0.99
      GO TO 121
111   FACT = 0.999
121   CONTINUE
      ITOOHI = ITOOHI + 1
      IF (NPRINT.GT.1) WRITE (6,131)ITOOHI,FACT
131   FORMAT(///57H LOAD MUST BE DECREASED BECAUSE ROOTS HAVE BEEN SKIPP
     1ED.  I3,29HST SUCH DECREASE BY FACTOR OF   1PE12.4//)
      IF (STEP.NE.0.) P = FACT*(P-STEP)
      IF (DTEMP.NE.0.) TEMP = FACT*(TEMP-DTEMP)
      IF (DOMEGA.NE.0.) OMEGA = FACT*(OMEGA-DOMEGA)
      IF (NALL.EQ.0) GO TO 151
      DO 141 J=1,NALL
      IF (STEP1(J).NE.0.) V(J) = FACT*(V(J) - STEP1(J))
      IF (STEP2(J).NE.0.) HF(J)= FACT*(HF(J) - STEP2(J))
141   IF (STEP3(J).NE.0.) FM(J)= FACT*(FM(J) - STEP3(J))
151   CALL CHANGE(FACT,NALL)
      GO TO 830
161   AXR = DECR*AXR
      ITHIS = ITHIS + 1
      IF (ITHIS.GT.10) DECR = 0.5
      IF (ITHIS.GT.20) CALL ERREX
      GO TO 260
171   CONTINUE
      ITOOHI = 0
      IF (NPRT.NE.0) WRITE (6,10)N4,N3,AXR,DET,NEX,KTM
      IF (N5.EQ.0) GO TO 290
      KT=KTM-KA
      IF (INDIC.EQ.2) GO TO 270
      IF (INDIC.NE.1.AND.INDIC.NE.4) GO TO 280
      IF (NPRINT.GT.1) WRITE (6,30)KT,AX1,AXR2
      GO TO 280
270   F1=SQRT(AX1)*SD
      IF (AXR.LT.0.) GO TO 280
      F2=SQRT(AXR)*SD
      IF (NPRINT.GT.1) WRITE (6,40)KT,F1,F2
280   CONTINUE
      IF (N7.GE.NVEC) GO TO 820
      GO TO 300
290   N5=1
      KA=KTM
      IF (KB.EQ.100000) GO TO 350
      KT=KB-KA
      IF (NPRINT.GT.1) WRITE (6,20)KT,AX1,AX2
      IF (KT.LE.0) GO TO 820
      GO TO 350
300   KN=KTM-KA
      IF (KN.LE.N7) GO TO 350
      NSKIPT = KN - N7
      IF (NSKIPT.LT.2) IFLAG = IFLAG + 1
      IF (NSKIPT.GT.0.OR.IFLAG.GT.3) THEN
         N3 = N3 - 1
         IF (NPRINT.GT.1) WRITE(6,315) N7, NSKIPT
315      FORMAT(/' ********** WARNING  WARNING  WARNING **********'//
     1' IT IS POSSIBLE FOR THIS WAVENUMBER THAT EIGENVALUES'/
     1' MAY BE CALCULATED OUT OF ORDER OR THAT EIGENVALUES MAY BE'/
     1' SKIPPED.'/
     1'  Number of eigenvalues accepted so far                =',I5/
     1'  Number of eigenvalues skipped                        =',I5//
     1'  Shifting downward to try to capture lower eigenvalues.'//
     1'  If, after this warning message, the following lines appear'/
     1'  everything is okay:'//
     1'   FINISH FORMING B - AXT*C AND START FACTORING.'/
     1' M  NEGATIVE ROOTS FOR SHIFT, AXT =   -YYYYYYY'/
     1' THERE ARE    0  EIGENVALUES BETWEEN 0.0000 AND YYYYYYY'//
     1'  The thing to look for is that "0  EIGENVALUES BETWEEN..."'/
     1' ********** END WARNING    END WARNING    END WARNING *******'/)
      ENDIF
C
C     IF (N7.GT.0.OR.IFLAG.GT.3) GO TO 350
C
      GO TO (320,330,340),IFLAG
320   AXR2 = 0.7*AXR2 + 0.3*AX1
      GO TO 230
330   AXR2 =0.83*AXR2 + 0.3*AX1
      GO TO 230
340   AXR2 =0.93*AXR2 + 0.3*AX1
      GO TO 230
C     ***********************
C     INVERSE POWER SECTION'
C     ***********************
350   MW = 1
      NITT=NITT+NIT
      NIT= 0
      N41 = N4 + 1
      IF (NPRINT.GT.1) WRITE (6,360)N41,N
360   FORMAT(///53H     BEGIN INVERSE POWER ITERATIONS FOR EIGENVALUE NO
     1I3,2H, I6,24H  CIRCUMFERENTIAL WAVES.  /)
370   CALL SOLVE(B,X,IBLK,IDRW(1,5),NGBK,ILOC,DIAG,M3,1)
C
      BIG = 0.0
      SUM = 0.0
      SUM1= SUM2
      SUM2= 0.0
      IF (IDB1.GT.IDF.OR.IPOW.EQ.2) GO TO 430
      BR=2.*ABS(ARQ)
      IHIGH = N4*2*NT
      ILOW = IHIGH - IEND + 1
      ISUB = NEXT
      IF (NEXT.GT.1) CALL GASP(Z,J22,3,IPV2(N4))
      I = IDF + 1
380   I = I - 1
      IF (I.LT.IDB1) GO TO 420
      IF (NIT*N8.EQ.0) GO TO 390
      BRA=ABS(ROOT(I)-AXR)
      IF (BRA.GT.BR) GO TO 420
390   CONTINUE
      ISTART = (I-1)*2*NT + 1
400   IF (ISTART.GE.ILOW.AND.ISTART.LE.IHIGH) GO TO 410
      ISUB = ISUB - 1
      LEGTH = 2*ISAVE1(ISUB)
      CALL GASP(Z,LEGTH,3,IBVC(ISUB))
      IHIGH = ISAVE2(ISUB)*2*NT
      ILOW = IHIGH - ISAVE1(ISUB) + 1
      GO TO 400
410   CONTINUE
      ILESS = 0
      ISUB1 = ISUB - 1
      IF (ISUB1) 417,417,414
414   DO 416 K=1,ISUB1
416   ILESS = ILESS + ISAVE1(K)
417   IARG = ISTART - ILESS
      CALL ORTHO2(X,Z(IARG),Z(IARG+NT),I,ND,SM)
      GO TO 380
420   CONTINUE
430   DO 440 I=1,ND
      BIG = DMAX1(BIG,DABS(X(I)))
      SUM=SUM+X(I)*Y(I)
      SUM2= SUM2+X(I)**2
440   CONTINUE
      DO 450 I=1,ND
      Y(I)=X(I)/BIG
450   CONTINUE
      CALL VEC(0,C,Y,X,IBLK,IDRW(1,IID),NGBK,ILOC)
      SUM2=SUM2/BIG**2
      ARQ2=ARQ
      IF (SUM.NE.0.0) ARQ = SUM1/SUM
      ARQ=-ARQ
      AXG=AXR+ARQ
      DZ1= DZ
      DZ = ARQ-ARQ2
      DARQ2=DARQ
      DZZ = DZ - DZ1
      DARQ = ARQ
      IF (DZZ.NE.0.0) DARQ = ARQ - DZ**2/DZZ
      G = ABS(AXR + AXB + ARQ)
      FREQ = SQRT(G)*SD
      IF (NPRT.GT.0) WRITE (6,50)NIT,ARQ,DARQ,FREQ
      ER2=ER
460   CONTINUE
      ER = 0.0
      ERR = 0.0
      ARX = ARQ + AXR
      FREQ = SQRT(ABS(ARX))/(2.*3.1415927)
      IF (NPRINT.GT.1.AND.INDIC.EQ.2) WRITE (6,530)N,NIT,FREQ
      IF (NPRINT.GT.1.AND.INDIC.NE.2) WRITE (6,531)N,NIT,ARX
531   FORMAT(18H    CIRC. WAVES,N=  I6,17H,  ITERATION NO.= I3,48H,  EIG
     1ENVALUE (FACTOR TO BE MULT. BY LOAD STEP)=  1PE13.5)
      IF (NPRINT.GT.1) CALL SR100T(2)
      IF (ARX.NE.0.0) ER = ABS((ARQ-ARQ2)/ARX)
      IF (ARX.NE.0.0) ERR= ABS((DARQ-DARQ2)/ARX)
      ER =AMAX1(ER,ERR)
      IF (NIT.LE.1) GO TO 520
      IF (NIT.GE.N9.AND.INDIC.EQ.-1.AND.ARX.GT.0..AND.KTM.GE.(KROOTS+1))
     1GO TO 51
      IF (ER.GT.EPS2) GO TO 520
      IF (NIT.GT.N9) GO TO 470
      IF (ER.LT.EPS) GO TO 570
470   IF (ER.LT.EPS1) GO TO 480
      IF (NIT.LT.13) GO TO 520
      IF (ER.LT.0.001) GO TO 540
      IF (ER2.GT.2.*EPS2) GO TO 520
      CC=C3
      GO TO 160
480   IF (NIT.LT.N9) GO TO 520
      IF (IPOW.GT.0) GO TO 500
      IF (NIT.LT.10) GO TO 490
      GO TO 540
490   CC=C1
      N8 = N8+1
      IPOW= 1
      GO TO 160
500   CONTINUE
510   IF (ER.LT.EPS) GO TO 570
520   NIT=NIT+1
530   FORMAT(18H    CIRC. WAVES,N=  I6,17H,  ITERATION NO.=  I3,47H,  EI
     1GENVALUE (FREQUENCY IN CYCLES PER SECOND)=  1PE13.5)
      IF (NIT.LT.MAX) GO TO 370
      IF (ER.GT.EPS1) GO TO 550
540   CC=C2
      N8=N8+1
      GO TO 160
550   IF (ER.GT.EPS2) GO TO 560
      CC=C3
      N8=N8+1
      GO TO 160
560   CC=C4
      GO TO 160
570   CONTINUE
      IF (INDIC.EQ.-1.AND.ARX.GT.0..AND.KTM.GE.(KROOTS+1)) GO TO 51
C
C     **************************
C     THE ROOT HAS BEEN ACCEPTED
C     **************************
      AROOT=AXR+ARQ
      IF (N4.LE.0) GO TO 575
      RDIFF = ABS(ROOT(1)) - ABS(AXR)
      IF (N4.EQ.1) GO TO 574
      DO 572 I=2,N4
      R1DIFF = ABS(ROOT(I)) - ABS(AXR)
      RDIFF = AMIN1(RDIFF,R1DIFF)
572   CONTINUE
574   RRATIO = ABS(ARQ/RDIFF)
      IF (RRATIO.LT.1000.) GO TO 575
      IF (NPRINT.GT.1) WRITE (6,593)
      IF (NPRINT.GT.1) WRITE (6,593)
      IF (NPRINT.GT.1) WRITE (6,593)
      IF (NPRINT.GT.1) WRITE (6,573)RRATIO
573   FORMAT(94H NEED TO CHECK ROOT BY ADDITIONAL SHIFTS SINCE (AROOT-SH
     1IFT)/MIN(ROOT(I)-SHIFT).GT.1000. IT=               1PE14.1)
      IF (NPRINT.GT.1) WRITE (6,593)
      IF (NPRINT.GT.1) WRITE (6,593)
      IF (NPRINT.GT.1) WRITE (6,593)
      CC = 0.95
      GO TO 160
575   TOP = AMAX1(TOP,AROOT)
      ADL=AROOT-TOP
      IF (N4.LE.0) GO TO 580
      IF (ABS(TOP-TOP1)-EPS1) 590,590,580
580   TOP1=TOP
590   N4  = N4+1
      GMI(N4) = 0.0
      FREQ = SQRT(ABS(AROOT))/(2.*3.1415927)
593   FORMAT(32H ******************************       )
598   CONTINUE
      IF (INDIC.EQ.2.AND.NPRINT.GT.1) WRITE (6,600)N4,FREQ,N
      IF (INDIC.NE.2.AND.NPRINT.GT.1) WRITE (6,601)N4,AROOT,N
  600 FORMAT(//' ITERATIONS HAVE CONVERGED FOR EIGENVALUE NO.',I3/
     1' FREQUENCY (CPS) =',1PE13.5,',  ',
     1  I6,' CIRCUMFERENTIAL WAVES')
  601 FORMAT(//' ITERATIONS HAVE CONVERGED FOR EIGENVALUE NO.',I3/
     1'      EIGENVALUE =',1PE13.5,',  ',
     1  I6,' CIRCUMFERENTIAL WAVES')
      IF (NPRINT.GT.1) CALL SR100T(2)
      ITP3=N4
      NITT=NITT+NIT
      IF (NPRT.EQ.0) GO TO 610
      IF (NPRINT.GT.1) WRITE (6,60)N4,N3,NITT,AROOT,FREQ
610   CONTINUE
      NIT=0
      NITT=0
      ROOT(N4)=AROOT
      IPOW=0
      NEIG=0
      N6  =0
      IDF=MIN0( N4, IDIF)
      IF (N4.LE.IDIF) GO TO 630
      DO 620 I=1,IDF1
      SM(I)=SM(I+1)
620   CONTINUE
630   CONTINUE
      SUMM= 0.0
      DO 640 J=1,ND
      SUMM=SUMM+X(J)*Y(J)
640   CONTINUE
      N8=0
      SM(IDF)=SUMM
      IF (ADL) 650,670,670
650   IF (INDIC.EQ.-1) GO TO 670
      N6 = 1
      NI=N4-IDIF
      IF (NI.LT.1) GO TO 670
      ARR=ABS(ROOT(N4))
      DO 660 I=1,NI
      ER2 = 0.0
      ARX2 = ARR + ABS(ROOT(I))
      IF (ARX2.NE.0.0) ER2 = ABS(ROOT(I)-ROOT(N4))/ARX2
      IF (ER2.LT.0.005) GO TO 730
660   CONTINUE
670   N3=0
      J22 = 2*J2
      IF (NEXT.GT.1) CALL GASP(Z,J22,3,IPV2(N4-1))
680   IPOS = ITOTL + 1
      IENDS = IEND
      IEND = IPOS + 2*NT - 1
      IF (IEND.LT.6000) GO TO 690
      IENDS2 = 2*IENDS
      CALL GASP(Z,IENDS2,1,IBVC(NEXT))
      ITOTL = 0
      ISAVE1(NEXT) = IENDS
      ISAVE2(NEXT) = N4-1
      NEXT = NEXT + 1
      GO TO 680
690   CONTINUE
      DO 700 I=1,NT
      J1 = IPOS + I - 1
      J2 = IPOS + NT + I - 1
      Z(J1) = Y(I)
700   Z(J2) = X(I)
      J2 = IPOS + 2*NT - 1
708   CONTINUE
      CALL GASP(Y,NTOT,1,IVEC(NVECTL+N4))
      ITOTL = ITOTL + 2*NT
      J22 = 2*J2
      IF (NEXT.GT.1) CALL GASP(Z,J22,1,IPV2(N4))
      IF (INDIC.NE.2) GO TO 711
      DO 710 I=1,ND
710   GMI(N4) = GMI(N4) + X(I)*Y(I)
C
      CALL GASP(X,NTOT,1,IMPHI(NVECTL+N4))
C
711   CONTINUE
      N3=0
      IF (AROOT.GT.AX2) GO TO 210
      IF (AROOT.GE.AX1.OR.INDIC.EQ.-1) GO TO 720
      AXR2=AX1-1.5*AROOT
      GO TO 230
720   CONTINUE
      IF (INDIC.EQ.-1) GO TO 740
      IF (AROOT) 750,740,740
C     THIS IS A PREVIOUSLY COMPUTED ROOT.  REJECT IT.
730   N4  =N4-1
      NEIG=0
      GO TO 780
740   N7=N7+1
      N3=0
      MW=2
      ART=AROOT+AXB
      GO TO (460,760),MW
750   N6=1
760   IF (N7.LT.NVEC) GO TO 770
      IF (ARQ.LT.0.) GO TO 820
      IF (KB.NE.100000) GO TO 820
765   CONTINUE
      AXR2=1.0003*AROOT
      AXR=AXR2
      GO TO 260
770   CONTINUE
      NEIG=0
      CALL URVEC(ND,Y)
      CALL VEC(0,C,Y,X,IBLK,IDRW(1,IID),NGBK,ILOC)
      GO TO 350
780   AXR= TOP-ADL*0.85
      GO TO 240
790   N5=N7+1
      WRITE (6,800)N5,ER,AXR
800   FORMAT(//23H THE ITERATION FOR ROOT    I4,12H HAS FAILED.,        
     1///21H FINAL VALUE OF ER = , E15.8                                
     2/ 21H FINAL VALUE OF AXR=  , E15.8 ///)
      GO TO 830
810   IF (AX2.EQ.0.0) GO TO 820
      IF (NPRINT.GT.1) WRITE (6,70)
820   CONTINUE
      NVEC = N4
830   IF (NPRINT.GT.1) WRITE (6,840)
840   FORMAT(//27H LEAVING SUBROUTINE EBAND2.  )
      RETURN
      END
C=DECK      ADD2
      SUBROUTINE ADD2(AXT,B,C,IDRW,ILOC,IID)
C+---------------------------------------------------------------------+
C+---------------------------------------------------------------------+
C     CALLED FROM EBAND2 (VIBRATION PROBLEMS). TRACE IS BUCKLE,MAIN
C
      DOUBLE PRECISION AXD,B,C
      COMMON/BLK/ IBLK,NGBK(20),NKF(20)
C BEG DEC 1990
      DIMENSION B(*),C(*),IDRW(20,5),ILOC(3000)
C END DEC 1990
C     THE MATRIX B - AXT*C IS FORMED AND STORED IN IDRW(I,5),I=1,IBLK
C
      AXD = AXT
      DO 20 I=1,IBLK
      NLAST = NGBK(I)
      LENGTH = 2*ILOC(NLAST)
      CALL GASP(B,LENGTH,3,IDRW(I,1))
      CALL GASP(C,LENGTH,3,IDRW(I,IID))
      L2 = LENGTH/2
      DO 10 J=1,L2
10    B(J) = B(J) - AXD*C(J)
      IF (IBLK.GT.1) CALL GASP(B,LENGTH,1,IDRW(I,5))
20    CONTINUE
      RETURN
      END
C=DECK      ORTHO2
      SUBROUTINE ORTHO2(X,Y,Z,I,ND,SM)
C+---------------------------------------------------------------------+
C+---------------------------------------------------------------------+
C
C     CALLED FROM EBAND2, WHOSE TRACE IS BUCKLE, MAIN
C     PERFORMS ORTHOGONALIZATION CORRESPONDING TO THE EIGENVALUE
C     PROBLEM    A*X  - OMEGA**2*B*X  = 0
C
      DOUBLE PRECISION X,Y,Z,SM,SUM,SUM2,SF
      DIMENSION Z(3000),SM(50)
      COMMON/ORTA/IFLGG,KTM,KROOTS
      COMMON/OUTP/NPRINT
      DIMENSION Y(3000),X(3000)
10    FORMAT (5H0  I=  I3,6H, Y*Z= E16.7,6H,X*Z= E16.7,6H, X*X=  E16.7)
      SUM2=0.
      SUM=0.
      DO 20 J=1,ND
      IF(IFLGG.GT.0) SUM2=SUM2+X(J)*X(J)
20    SUM = SUM +X(J)*Z(J)
      SF=SUM/SM(I)
      DO 30 J=1,ND
30    X(J)=X(J)-SF*Y(J)
      IF(IFLGG.EQ.0) RETURN
      S0=SM(I)
      S1=SUM
      S2=SUM2
      IF (NPRINT.GT.1) WRITE (6,10)I,S0,S1,S2
      RETURN
      END
