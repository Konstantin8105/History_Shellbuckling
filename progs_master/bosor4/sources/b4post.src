C=DECK      B4POSTLIB
C
C  THIS IS THE B4POST LIBRARY  (SOURCE FILE)
C
C
C=DECK      B4POST
C
C     THIS IS THE MAIN PROGRAM OF THE BOSOR4 POST PROCESSOR 
C
      PROGRAM B4POST
C+---------------------------------------------------------------------+
C+---------------------------------------------------------------------+
#if hp700
$hp9000_800 intrinsics
#endif
      COMMON/BWORK/BBB(10000),BMODE(9000),TMODE(9000),SMODE(9000)
      COMMON/GLOBAL/IDZ,IZRING(98),ISAVE(20),INOTE    
      COMMON/STRHD/NSHEAD     
      COMMON/COUNTR/NKOUNT    
      COMMON/NLINS/NSTART,NFIN
      COMMON/DSPACE/IDS 
      COMMON/ENDOF/NLAST,NFIRST,NEDPLT    
      COMMON/IIFIFE/IIIF
      COMMON/RGFCE/RHF(98)    
      COMMON/PSTSS/IPSTS(95)  
      COMMON/SMOAD/IMOAD(100),IPMODE(95),IPSMD(95)     
      COMMON/LRANGE/FSTART,FMAX,DF  
      COMMON/DETER/DET,NEX    
      COMMON/TESTIT/NTEST     
      COMMON/ITERAT/IMODE     
      COMMON/TOTPTS/M3  
      COMMON/WAVES/N0,N,NMIN,NMAX,INCR    
      COMMON/FORCES/V(98),HF(98),FM(98)   
      COMMON/EIGENV/P,OMG2,RHO
      COMMON/SEGS/NSEG,M2,I5(95),I2,I2G   
      COMMON/IDENT/IPRW(20)   
      COMMON/HYDRO/PRAD,RV    
      COMMON/BLKP/IBLKP,NGBKP(20),NKFP(20)
      COMMON/RGTEMP/TNR(98),TMR(98),TMRX(98)    
      COMMON/STEPS/STEP,STEP1(98),STEP2(98),STEP3(98) 
      COMMON/INSTAB/INDIC     
      COMMON/MAXSTP/STEPM,STEPMI,RHOM     
      COMMON/ERROR/ERR  
      COMMON/NFAC/NFACT,NDIC  
      COMMON/ITERS/ITER 
      COMMON/ALFAT/ALPHAT     
      COMMON/POSDEF/ IDIAG    
      COMMON/EIGNO/NVEC,EGV(50),AXB 
      COMMON/IDVEC/IPV1(50),IPV2(50)
      COMMON/IDEIG/ IDMODE(500),NVECTL,EIGENW(500)
      COMMON/SIG/NFLAGI 
      COMMON/OUTP/ NPRT 
      COMMON/BLK/IBLK,NGBK(20),NFK(20)    
      COMMON/BCK/IDRW(20,5)   
      COMMON/SFLAG/ MONOQ     
      COMMON/STRSEG/ISTRSS(95)
      COMMON/SHEL/ISHL(95),IWAL(95),ITHK(95),IARC(95),ILOAD(95)   
      COMMON/INTRG/NSTATN(95),IRING(95,20)
      COMMON/IDZREF/IZREF(95) 
      COMMON/ALLRNG/NTOT,IPRE 
      COMMON/TEMTUR/TEMP,DTEMP
      COMMON/SIGNALL/ISIG
      COMMON/ORTA/IFLGG,KTM,KROOTS  
      COMMON/INTRVL/ INTVAL(95),IOUT,NDIST,NCIRC,NTHETA     
      COMMON/XID/IDX    
      COMMON/BUCKN/ N0B,NMINB,NMAXB,INCRB 
      COMMON/LOCATN/ILOCP,ILOCB,IROWCP(98),IROWCB(98),IIWP,IIWB   
      COMMON/NCONDS/NCOND     
      COMMON/IHIGH/ITOOHI     
      COMMON/LSTEPS/ISTEP
C BEG JULY 1989
      COMMON/PRERT/PREROT,SIGNLL,IPREBK   
C END JULY 1989
      COMMON/NOHARM/NHARM     
      COMMON/IFRHX/IFB,RHFIX(98),K,MNUMB,ISWTCH,KNT,IFTOT,INDSIG,LFIX   
      COMMON/PLTSIG/IPLOT,JPLOT,KPLOT(20),LPLOT(20),MPLOT,RN(20),ZN(20) 
      COMMON/VCTRSB/NVECRL(50)
      COMMON/IDHIGH/IDMAX
      COMMON/RESTRT/IREST
      COMMON/RESPO2/ANALY,WSPEC(40)
      COMMON/TWORHS/ITWO,IDMOD2(200)
      COMMON/NVVIB/NVIB
      common/caseblock/case
      character*28 case
      character*33 fname
      logical exists
#if hp700
      call getarg(2, case)
#else
      call getarg(1, case)
#endif
      fname = case(1:index(case, ' ')-1)//'.PLT2'
      inquire(FILE=fname, EXIST=exists)
      if (exists) then
	OPEN(UNIT=54, FILE=fname, STATUS='OLD')
#if rs6k
        rewind(54)
#endif
      else
	OPEN(UNIT=54, FILE=fname, STATUS='NEW')
      endif
C     
C     IBM SUBROUTINE ERRSET IS CALLED TO SUPPRESS THE UNDERFLOW ERROR   
C     MESSAGE NO.208.   
C     
C      CALL ERRSET(208,0,-1,0,0,0)  
C     
C
C OPEN FILE 53 FOR FORMATTED WRITES.. (APPARENTLY NEEDED FOR UNIX)
C
c     fname = case(1:index(case, ' ')-1)//'.PLT'
c     OPEN(UNIT=53, FILE=fname, FORM='FORMATTED')
C     
      fname = case(1:index(case, ' ')-1)//'.LAB'
      inquire(FILE=fname, EXIST=exists)
      if (exists) then
	OPEN(UNIT=40, FILE=fname, STATUS='OLD')
#if rs6k
        rewind(40)
#endif
      else
	OPEN(UNIT=40, FILE=fname, STATUS='NEW')
      endif
      CALL MAIN1  
      WRITE(6,*)' ENTERING BOSOR4 POSTPROCESSOR...'
C
      IFILE = 9
C     REWIND IFILE
c open/close statments added 6/91
      fname = case(1:index(case, ' ')-1)//'.BLK'
      inquire(FILE=fname, EXIST=exists)
      if (exists) then
	OPEN(UNIT=IFILE, FILE=fname, FORM='UNFORMATTED',
     1       STATUS='OLD')
#if rs6k
        rewind(IFILE)
#endif
      else
	OPEN(UNIT=IFILE, FILE=fname, FORM='UNFORMATTED',
     1       STATUS='NEW')
      endif
      CALL GETCM1(IFILE)
      CALL GETCM2(IFILE)
      CLOSE(IFILE)
c end 6/91 changes
C
C BEG JAN 2012

c     CALL GASP(DUM1,DUM2,-1,DUM3)

c     open the EXISTING database

      CALL GASP(DUM1,DUM2,0,DUM3)
C
C END JAN 2012
C     
C     INITIALIZE CLOCK. 
C     CALL SR100T(1)    
C     
      IIIF=21     
      NEDPLT=-1   
      NVECTL = 0
C     
10    CONTINUE    
C
      NVECS = NVEC
70    CONTINUE    
      K = INDIC + 3     
C     
C     SWITCHING TO VARIOUS BRANCHES DEPENDING ON TYPE OF ANALYSIS TO    
C     BE PERFORMED.     
      GO TO (80,120,280,290,290,340,380),K
80    CONTINUE    
      GO TO 400
120   CONTINUE
      CALL MODE1(1,BBB,BMODE,TMODE,SMODE)
      CALL B4OUT(1,BBB,BMODE,TMODE,SMODE)
      IF (NLAST.GE.0) CALL PLOT11(1,BBB,BMODE,TMODE,SMODE)
      GO TO 400
C
280   CONTINUE
      CALL B4OUT(1,BBB,BMODE,TMODE,SMODE)
      IF (NLAST.GE.0) CALL PLOT11(1,BBB,BMODE,TMODE,SMODE)
      GO TO 400
C
290   CONTINUE
300   IINCR = IABS(INCRB)
      IWAVEB = 0
      DO 320 N = NMINB,NMAXB,IINCR
      IWAVEB = IWAVEB + 1
      NVEC = NVECRL(IWAVEB)
      CALL MODE1(1,BBB,BMODE,TMODE,SMODE)
      CALL B4OUT(1,BBB,BMODE,TMODE,SMODE)
      NVECTL = NVECTL + NVECRL(IWAVEB)
      IF (NLAST.GE.0) CALL PLOT11(1,BBB,BMODE,TMODE,SMODE)
320   CONTINUE
      GO TO 400
C
340   CONTINUE
350   CONTINUE
C
      IF (IREST.NE.2) MNUMB = NHARM
      IF (IREST.EQ.2) MNUMB = NVIB
      IANALY = ANALY
      IF (IREST.EQ.2.AND.IANALY.EQ.1) GO TO 360
      IF (IREST.EQ.2) CALL MODE1(1,BBB,BMODE,TMODE,SMODE)
      CALL B4OUT(1,BBB,BMODE,TMODE,SMODE)
      NVECTL = NHARM + NVIB
      IF (NLAST.GE.0) CALL PLOT11(1,BBB,BMODE,TMODE,SMODE)
      IF (ITWO.NE.2) GO TO 370
      NVECTL = 0
      CALL B4OUT(2,BBB,BMODE,TMODE,SMODE)
      NVECTL = NHARM + NVIB
      IF (NLAST.GE.0) CALL PLOT11(2,BBB,BMODE,TMODE,SMODE)
      GO TO 370
  360 CONTINUE
      MNUMB = 1
      DO 365 I = 1,NVIB
      NVECTL = I - 1
      CALL MODE1(1,BBB,BMODE,TMODE,SMODE)
      CALL B4OUT(1,BBB,BMODE,TMODE,SMODE)
      IF (NLAST.GE.0) CALL PLOT11(1,BBB,BMODE,TMODE,SMODE)
  365 CONTINUE
      NVECTL = NHARM + NVIB
  370 CONTINUE
      IF (INDSIG.EQ.1) GO TO 390
      GO TO 400
C
380   CONTINUE
      IF (IPRE.EQ.0) GO TO 390
      K = 6
      INDIC = 3
      INDSIG = 1
      GO TO 350
C
390   CONTINUE
      K = 7
      INDIC = 4
      INDSIG = 0
      GO TO 300
C
400   CONTINUE
C
      IFILE = 9
C     REWIND IFILE
c open/close statments added 6/91
      fname = case(1:index(case, ' ')-1)//'.BLK'
      inquire(FILE=fname, EXIST=exists)
      if (exists) then
	OPEN(UNIT=IFILE, FILE=fname, FORM='UNFORMATTED',
     1       STATUS='OLD')
#if rs6k
        rewind(IFILE)
#endif
      else
	OPEN(UNIT=IFILE, FILE=fname, FORM='UNFORMATTED',
     1       STATUS='NEW')
      endif
      CALL STOCM1(IFILE)
      CALL STOCM2(IFILE)
      CLOSE(IFILE)
c end 6/91 changes
C
      CALL GASP(DUM1,DUM2,-2,DUM3)
c Added 6/91
      CLOSE(40)
      CLOSE(54)
c End 6/91
c Added 11/90 to clear IEEE FPE warnings
      call ieeexx
c End 11/90
C
      END
C=DECK      B4OUT
      SUBROUTINE B4OUT(ILOOP,BBB,BMODE,TMODE,SMODE)
C+---------------------------------------------------------------------+
C+---------------------------------------------------------------------+
C
C     BOSOR4 PRINTED OUTPUT PROVIDED BY B4OUTM...
C
      COMMON/OUTP/NPRT
      COMMON/ENDOF/NLAST,NFIRST,NEDPLT
      DIMENSION BMODE(1000,9),TMODE(9000),SMODE(9000),BBB(10000)
C
180   IF (NPRT.GT.1) WRITE (6,190)  
190   FORMAT(//23H ENTER SUBROUTINE OUT2   )                        
C     IF (NPRT.GT.1) CALL SR100T(2) 
C     DISPLACEMENT AND STRESS DISTRIBUTIONS FOR PREBUCKLING AND   
C  BUCKLING OR VIBRATION OR NONSYMMETRIC STRESS PROBLEMS AND MODE 
C     SHAPES ARE PRINTED OUT IN OUT2.     
C     CALL OVERLAY(5HBOSOR,1,6)     
      CALL OUTFIN(ILOOP,BBB,BMODE,TMODE,SMODE) 
200   FORMAT(//27H JUST LEFT SUBROUTINE OUT2   )                      
      IF (NPRT.GT.1) WRITE (6,200)  
C     IF (NPRT.GT.0) CALL SR100T(2) 
210   CONTINUE    
      RETURN
220   CONTINUE    
C     IF(NEDPLT.EQ.1) CALL ENDPLT   
      RETURN
      END
C=DECK      OUTFIN
      SUBROUTINE OUTFIN(ILOOP,BBB,BMODE,TMODE,SMODE)
C+---------------------------------------------------------------------+
C+---------------------------------------------------------------------+
      COMMON/EIGNO/NVEC,EGV(50),AXB
      COMMON/ALLRNG/NTOT,IPRE
      DIMENSION BMODE(1000,9),SMODE(9000),TMODE(9000),BBB(10000)
      CALL OUT2(NVEC,NTOT,BMODE,SMODE,TMODE,EGV,ILOOP)
      RETURN
      END
C=DECK      OUT2
      SUBROUTINE OUT2(NVEC ,NTOT,BMODE,SMODE,TMODE,EGV,ILOOP)
C+---------------------------------------------------------------------+
C+---------------------------------------------------------------------+
C     CALLED FROM READIT, WHICH IS CALLED FROM MAIN
C     ESSENTIAL OUTPUT FROM CURRENT CASE IS PRINTED.
      COMMON/INTRVL/ INTVAL(95),IOUT,NDIST,NCIRC,NTHETA
      COMMON/ITERS/ITER
      COMMON/SMOAD/IMOAD(100),IPMODE(95),IPSMD(95)
      COMMON/SHEL/ISHL(95),IWAL(95),ITHK(95),IARC(95),ILOAD(95)
      COMMON/FORCES/V(98),HF(98),FM(98)
      COMMON/INSTAB/INDIC
      COMMON/SEGS/NSEG,M2,I5(95),I2,I2G
      COMMON/WAVES/N0,N,NMIN,NMAX,INCR
      COMMON/LSTEPS/ISTEP
      COMMON/SFLAG/MONOQ
      COMMON/EIGENV/P,OMG2,RHO
      COMMON/TEMTUR/TEMP,DTEMP
      COMMON/STEPS/STEP,STEP1(98),STEP2(98),STEP3(98)
      COMMON/DETER/DET,NEX
      COMMON/GMASS/GM(500)
      COMMON/IDEIG/IDMODE(500),NVECTL,EIGENW(500)
      COMMON/ROTATN/OMEGA,DOMEGA
      COMMON/AMPFAC/OMEGDR,YLATRL,YAXIAL,BDAMP,AMPLTD,GAMP(200)
      COMMON/NVVIB/NVIB
      COMMON/IOCHOZ/IOYES(50),IOSEG(95)
      DIMENSION BMODE(1000,9),SMODE(9000),TMODE(9000),EGV(50),X(1000)
      DIMENSION VERT(98),HORIZ(98),FMOM(98)
      K = INDIC + 3
      GO TO (10,20,50,90,200,210,220),K
10    CONTINUE
C     INDIC = -2 - - LOAD INCREASED IN STEPS UNTIL DETERMINANT CHANGES
C     SIGN. THEN INDIC CHANGED TO - 1.
C
      CALL OUTLOD(INDIC,ITER,DET,NEX,P,TEMP,V,HF,FM,NTOT,OMEGA)
      GO TO 230
20    CONTINUE
C     INDIC = - 1 - - STABILITY ANALYSIS WITH NONLINEAR PREBUCKING
C     AND SEARCH FOR MINIMUM BUCKLING LOAD WITH CIRCUMFERENTIAL
C     WAVENUMBER,N.
C
      CALL OUTLOD(INDIC,ITER,DET,NEX,P,TEMP,V,HF,FM,NTOT,OMEGA)
      WRITE (6,30)
30    FORMAT(////15X,82H PREBUCKLING DISPLACEMENTS AND STRESS RESULTANTS
     1CORRESPONDING TO CRITICAL LOAD       )                 
      CALL OUTPEE(IPMODE(1),IARC,I2,I5,NSEG,BMODE,0)
      IF (IOYES(4).EQ.1) GO TO 230
      WRITE (6,40)N
40    FORMAT(////19H BUCKLING MODE FOR  I7,23H CIRCUMFERENTIAL WAVES   )
      CALL OUTBUC(IMOAD(1),IARC,I2,I5,NSEG,BMODE,INDIC)
      GO TO 230
50    CONTINUE
C     AXISYMMETRIC NONLINEAR STRESS ANALYSIS
      GO TO 230
90    CONTINUE
C     INDIC = 1,2, OR 4--BUCKLING AND VIBRATION ANALYSES IN WHICH
C     MANY EIGENVALUES AND EIGENVECTORS FOR EACH N MAY BE OBTAINED.
C
      IF (INDIC.EQ.1.OR.INDIC.EQ.4) WRITE (6,100)
100   FORMAT(//33H BUCKLING LOADS AND MODES FOLLOW   )     
      IF (INDIC.EQ.2) WRITE (6,110)
110   FORMAT(//24H VIBRATION MODES FOLLOW     )            
      WRITE (6,120)N
120   FORMAT(/35H CIRCUMFERENTIAL WAVE NUMBER, N =     I7/)
      WRITE (6,140)(EIGENW(NVECTL+I),I=1,NVEC)
140   FORMAT(' EIGENVALUES ='/(1P10E12.3))
      IF (INDIC.EQ.2) WRITE(6,145)(GM(NVECTL+I),I=1,NVEC)
145   FORMAT(/' GENERALIZED MASS ='/(1P10E12.3))
      IF (INDIC.EQ.2) WRITE(6,147) (GAMP(NVECTL+I),I=1,NVEC)
147   FORMAT(/' PARTICIPATION FACTORS='/(1P10E12.3))
      DO 190 I=1,NVEC
      NVECTP = NVECTL + I
      EGV(I) = EIGENW(NVECTP)
      IF (INDIC.NE.1) GO TO 170
      PRESS = P + (EGV(I) - 1.)*STEP
      TEMPT=TEMP+ (EGV(I) - 1.)*DTEMP
      OMEGAX = OMEGA + (EGV(I) - 1.)*DOMEGA
      IF (NTOT.EQ.0) GO TO 170
      DO 150 J=1,NTOT
      VERT(J) = V(J) + (EGV(I) - 1.)*STEP1(J)
      HORIZ(J)= HF(J)+ (EGV(I) - 1.)*STEP2(J)
150   FMOM(J) = FM(J)+ (EGV(I) - 1.)*STEP3(J)
      WRITE (6,160)I
160   FORMAT(//45H CRITICAL LOAD COMBINATION FOR EIGENVALUE NO.    I3,  
     19H FOLLOWS     //)                                     
      CALL OUTLOD(INDIC,ITER,DET,NEX,PRESS,TEMPT,VERT,HORIZ,FMOM,NTOT,
     1 OMEGAX)
170   CONTINUE
      IF (IOYES(4).EQ.1) GO TO 190
      WRITE (6,180)I
180   FORMAT(//30H MODE SHAPE FOR EIGENVALUE NO.   I3,9H FOLLOWS   ) 
      CALL OUTBUC(IMOAD(I+NVIB),IARC,I2,I5,NSEG,BMODE,INDIC)
190   CONTINUE
      GO TO 230
200   CONTINUE
C     INDIC = 2  - -  VIBRATION MODES
      GO TO 90
210   CONTINUE
C     INDIC = 3  - - LINEAR NONSYMMETRIC STRESS ANALYSIS
      NNDIST = NDIST
      IF (NDIST.EQ.0) NNDIST = 1
      NNCIRC = NCIRC
      IF (NCIRC.EQ.0) NNCIRC = 1
      CALL OUTNON(IOUT,NDIST,NCIRC,NTHETA,IMOAD,INTVAL,MONOQ,SMODE,
     1TMODE,X,ILOOP,NNDIST,NNCIRC)
      GO TO 230
220   CONTINUE
C     INDIC = 4 - - BUCKLING WITH NONSYMMETRIC PRESTRESS OR WITH
C     PRESTRESS ANALYSIS BYPASSED
      GO TO 90
230   CONTINUE
      RETURN
      END
C=DECK      OUTLOD
      SUBROUTINE OUTLOD(INDIC,ITER,DET,NEX,P,TEMP,V,HF,FM,NTOT,OMEGA)
C+---------------------------------------------------------------------+
C+---------------------------------------------------------------------+
C     CALLED FROM OUT2, WHOSE TRACE IS READIT, MAIN
C     PRINTS OUT  CRITICAL LOADS, STABILITY DETERMINANT
C
      DIMENSION V(98),HF(98),FM(98)
      COMMON/FORFIX/IOMGAB,VFIX(98),SHFIX(98),HFIX(98),FMFIX(98)
      WRITE (6,10)INDIC,ITER
10    FORMAT(////25H ANALYSIS TYPE (INDIC) =  I2,66H  NEWTON-RAPHSON ITE
     1RATIONS REQUIRED FOR LAST PRESTRESS SOLUTION =       I2)          
      IF (INDIC.EQ.0.OR.INDIC.EQ.-2) WRITE (6,20)DET,NEX
20    FORMAT(//34H VALUE OF STABILITY DETERMINANT =  1PE12.4,           
     118H TIMES TEN TO THE I4,6H POWER  )                               
      WRITE (6,30)
30    FORMAT(//' PRESSURE, TEMPERATURE RISE, ANGULAR VELOCITY, AND LINE
     1LOADS FOLLOW...')
      WRITE(6,40)P,TEMP,OMEGA
   40 FORMAT(/' PRESSURE MULTIPLIER    (LOAD SYSTEM "A") =',1PE15.6/
     1        ' TEMPERATURE MULTIPLIER (LOAD SYSTEM "A") =',1PE15.6/
     1        ' ANGULAR VELOCITY, OMEGA                  =',1PE15.6)
C
      IF (NTOT.EQ.0) RETURN
      WRITE (6,50)
50    FORMAT(/' LINE LOADS FOLLOW...(LOAD SYSTEM "A")'  /)            
      DO 70 I=1,NTOT
      WRITE (6,60)I,V(I),HF(I),FM(I)
60    FORMAT(4H I = I3,24H AXIAL LOAD/LENGTH V(I)= 1PE12.4,        
     125H RADIAL LOAD/LENGTH H(I)=  1PE12.4,             
     221H MOMENT/LENGTH M(I)=  1PE12.4)               
70    CONTINUE
C
      WRITE (6,80)
80    FORMAT(/' LINE LOADS FOLLOW...(LOAD SYSTEM "B")'  /)            
      DO 90 I=1,NTOT
      WRITE (6,85)I,VFIX(I),HFIX(I),FMFIX(I)
85    FORMAT(4H I = I3,24H AXIAL LOAD/LENGTH V(I)= 1PE12.4,        
     125H RADIAL LOAD/LENGTH H(I)=  1PE12.4,             
     221H MOMENT/LENGTH M(I)=  1PE12.4)               
90    CONTINUE
      RETURN
      END
C=DECK      OUTBUC
      SUBROUTINE OUTBUC(IMOAD,IARC,I2,I5,NSEG,BMODE,INDIC)
C+---------------------------------------------------------------------+
C+---------------------------------------------------------------------+
C     CALLED FROM OUT2, WHOSE TRACE IS READIT, MAIN.
C     PRINTS OUT BUCKLING OR VIBRATION MODES.
      DIMENSION IARC(95),I5(95),BMODE(I2,9),S(1000)
      COMMON/IOCHOZ/IOYES(50),IOSEG(95)
      NM = 3*I2
      CALL GASP(BMODE,NM,3,IMOAD)
      IALL = 0
      CALL GASP(S,I2 ,3,IARC(1))
      DO 60 I=1,NSEG
      I5I = I5(I)
      IF (IOSEG(I).NE.0) GO TO 5
      IALL = IALL + I5I
      GO TO 60
    5 CONTINUE
      IF (INDIC.EQ.2) WRITE (6,10)I
      IF (INDIC.NE.2) WRITE (6,20)I
10    FORMAT(/28H VIBRATION MODE FOR SEGMENT  I2)                      
20    FORMAT(/27H BUCKLING MODE FOR SEGMENT   I2)                      
      WRITE (6,30)
30    FORMAT(/' POINT    STATION       U            V            W'/
     1        '        (ARC LENGTH)  MERID.      CIRCUMF.      NORMAL'/
     1        '                    DISPLACEMENT   DISP.    DISPLACEMENT'
     1/)
      DO 50 J=1,I5I
      IALL = IALL + 1
      WRITE (6,40)J,S(IALL),(BMODE(IALL,JJ),JJ=1,3)
40    FORMAT(I5,1P4E12.3)                                               
50    CONTINUE
60    CONTINUE
      RETURN
      END
C=DECK      OUTNON
      SUBROUTINE OUTNON(IOUT,NDIST,NCIRC,NTHETA,IMOAD,INTVAL,ISTRES,
     1SMODE,TMODE,X,ILOOP,NNDIST,NNCIRC)
C+---------------------------------------------------------------------+
C+---------------------------------------------------------------------+
C     CALLED FROM OUT2, WHICH IS CALLED FROM READIT.
C     OUTPUT OF RESULTS OF LINEAR NONSYMMETRIC STRESS ANALYSIS
      DIMENSION SMODE(IOUT,NNDIST,9),TMODE(NTHETA,NNCIRC,9),X(1000)
      DIMENSION S(1000)
      DIMENSION IMOAD(100),INTVAL(95)
      COMMON/SHEL/ISHL(95),IWAL(95),ITHK(95),IARC(95),ILOAD(95)
      COMMON/XID/IDX
      COMMON/SEGS/NSEG,M2,I5(95),I2,I2G
      COMMON/WAVNUM/ITHETA(50),THETA(50),THETAS,THETAM
      COMMON/NOHARM/NHARM
      COMMON/RGFCE/RHF(98)
      COMMON/IFRHX/IFB,RHFIX(98),KKKK,MMNUMB,ISWTCH,KKNT,IFTOT,INDSG,
     1  LFXX
      COMMON/WAVES/N0,N,NMIN,NMAX,INCR
      COMMON/ALLRNG/ NTOT,IPRE
      COMMON/NLINS/NSTART,NFIN
      COMMON/EIGNO/MVEC,EGV(50),AXB
      COMMON/RESTRT/IREST
      COMMON/RESPO2/ANALY,WSPEC(40)
      COMMON/STRSEG/ISTRSS(95)
      COMMON/KCHNG/NWALL(95),CCH(95)
      COMMON/COMNOD/NODES(100),NODALL(100),NODTOT
      DIMENSION FF(10000),F(6250)
C BEG APR 1992
C  NEW VARIABLES FOR STRESS CONSTRAINTS FOR COMPOSITE MATERIAL...
      DIMENSION WORDB(99),IPOINC(1500),CONSTR(99)
      DIMENSION EMAX(5,20),EMARG(5,20)
      CHARACTER*80 WORDB
C END APR 1992
C     RETRIEVE MERIDIONAL STRESS OR STRESS RESULTANT DISTRIBUTIONS.
      NN = IOUT*NDIST*9
      IF (NN.EQ.0) GO TO 4
      IF (ILOOP.EQ.1) CALL GASP(SMODE,NN,3,IMOAD(100))
      IF (ILOOP.EQ.2) CALL GASP(SMODE,NN,3,IMOAD( 98))
    4 CONTINUE
      NN = NTHETA*NCIRC*9
      IF (NN.EQ.0) GO TO 5
C     RETRIEVE CIRCUMFERENTIAL DISTRIBUTIONS
      IF (ILOOP.EQ.1) CALL GASP(TMODE,NN,3,IMOAD(99))
      IF (ILOOP.EQ.2) CALL GASP(TMODE,NN,3,IMOAD(97))
    5 CONTINUE
      NN = NTOT*NHARM*4
      IF (NN.EQ.0) GO TO 6
      IF (ILOOP.EQ.1) CALL GASP(F,NN,3,IMOAD(96))
      IF (ILOOP.EQ.2) CALL GASP(F,NN,3,IMOAD(95))
C
    6 CONTINUE
C     RECOVER MERIDIONAL STATIONS CORRESPONDING TO MERIDIONAL
C     DISTRIBUTIONS
      CALL GASP(X,IOUT,3,IDX)
C     PRINT OUT AXIAL DISTRIBUTIONS FOR NDIST CIRCUMFERENTIAL STATIONS.
C
      IF (NDIST.EQ.0) GO TO 105
      DO 100 IDIST=1,NDIST
      THET = THETA(IDIST)*180./3.141593
      WRITE (6,10)THET
10    FORMAT(////' MERIDIONAL DISTRIBUTION OF SUPERPOSED QUANTITIES COR
     1RESPONDING TO CIRCUMFERENTIAL STATION, THETA= ',1PE12.4,'DEG.')
      ITOT = 0
      IS = 1
      ISTTHK = 0
      DO 90 ISEG=1,NSEG
      WRITE (6,20)ISEG,ISEG,ISEG,ISEG,ISEG
   20 FORMAT(/' STRESS RESULTANTS OR STRESSES OR STRAINS AND'/
     1        ' CHANGES IN CURVATURE IN SEGMENT NUMBER',5I6)
      IF (ILOOP.EQ.1) WRITE(6,22)
      IF (ILOOP.EQ.2) WRITE(6,23)
   22 FORMAT(' ******** RESULTS FROM APPLICATION OF LOAD SYSTEM "A" ****
     1*****')
   23 FORMAT(' ******** RESULTS FROM APPLICATION OF LOAD SYSTEM "B" ****
     1*****')
      IF (ISTRSS(ISEG).EQ.0.AND.ISTRES.EQ.0) WRITE (6,30)
30    FORMAT(/' POINT    STATION       U           V           W        
     1   N1         N2         N12          M1          M2          MT'/
     2        '       (ARC LENGTH)   MERID.     CIRCUMF.     NORMAL     
     3 MERID.    CIRCUMF.    IN-PLANE     MERID.     CIRCUMF.     TWISTI
     3NG'/
     4        '                      DISP.    DISPLACEMENT   DISP.      
     5 RESULTANT RESULTANT    SHEAR       MOMENT      MOMENT      MOMENT
     6'/)
      IF (ISTRSS(ISEG).EQ.1.AND.NWALL(ISEG).NE.4.AND.NWALL(ISEG).NE.9)
     1     WRITE (6,40)
      IF (ISTRSS(ISEG).EQ.1.AND.(NWALL(ISEG).EQ.4.OR.NWALL(ISEG).EQ.9))
     1     WRITE (6,45)
      IF (ISTRSS(ISEG).EQ.2) WRITE (6,45)
      IF (ISTRSS(ISEG).EQ.0.AND.ISTRES.EQ.1) WRITE(6,45)
40    FORMAT(/' POINT  STATION     U         V         W      S1(IN)    
     1 S1(OUT)   TAU(IN)   S2(IN)   S2(OUT)   TAU(OUT)  SVON(IN)  SVON(O 
     2UT)'/
     3        '     (ARC LENGTH) MERID.   CIRCUMF.  NORMAL    MERID.    
     4 MERID.   IN-PLANE  CIRCUMF.  CIRCUMF.  IN-PLANE     VON MISES'/
     5        '                  DISP.  DISPLACEMENT DISP.    STRESS    
     6 STRESS    SHEAR    STRESS    STRESS     SHEAR    EFFECTIVE STRESS
     7'/)
45    FORMAT(/   ' POINT    STATION       U            V            W  
     1      E1         E2          E12         K1           K2         K
     112'/
     2           '       (ARC LENGTH)   MERID.      CIRCUMF.     NORMAL 
     3    MERID.    CIRCUMF.     IN-PLANE    MERID.      CIRCUMF.     TW
     4IST'/
     5           '                      DISP.    DISPLACEMENT     DISP. 
     6    STRAIN     STRAIN       SHEAR     CHANGES IN CURVATURE'/)
      INEXT = ITOT + 1
      IEND = ITOT + I5(ISEG)
      I5I = I5(ISEG)
      DO 80 I=1,I5I
      ITOT = ITOT + 1
      IF (ITOT.NE.INEXT) GO TO 80
      IF (ISTRSS(ISEG).EQ.0.OR.ISTRSS(ISEG).EQ.2)
     1WRITE (6,50)I,X(IS),(SMODE(IS,IDIST,J),J=1,9)
50    FORMAT(I5,1P10E12.3)
      IF (ISTRSS(ISEG).NE.1.OR.NWALL(ISEG).EQ.4.OR.NWALL(ISEG).EQ.9)
     1          GO TO 70
C     MERIDIONAL DISTRIBUTIONS OF EFFECTIVE STRESS COMPONENTS
      SIGEIN = SQRT(SMODE(IS,IDIST,4)**2 + SMODE(IS,IDIST,7)**2
     1- SMODE(IS,IDIST,4)*SMODE(IS,IDIST,7) + 3.*SMODE(IS,IDIST,6)**2)
      SIGEO  = SQRT(SMODE(IS,IDIST,5)**2 + SMODE(IS,IDIST,8)**2
     1- SMODE(IS,IDIST,5)*SMODE(IS,IDIST,8) + 3.*SMODE(IS,IDIST,9)**2)
      WRITE (6,60)I,X(IS),(SMODE(IS,IDIST,J),J=1,9),SIGEIN,SIGEO
60    FORMAT(I5,1P12E10.2)                                              
70    IS = IS + 1
      INEXT = ITOT + INTVAL(ISEG)
      IF (INEXT.GT.IEND) INEXT = IEND
80    CONTINUE
      IF ((NWALL(ISEG).EQ.4.OR.NWALL(ISEG).EQ.9)
     1         .AND.ISTRSS(ISEG).EQ.1.AND.ISTRES.EQ.1) ISTTHK=1
90    CONTINUE
C
C  PRINT OUT STRESSES IN COMPOSITE LAMINATED WALL... (25 AUG., 1985)
C
      IF (ISTTHK.EQ.1) THEN
         ICOL1 = 4
         ICOL2 = 5
         ICOL3 = 6
         ICOL4 = 7
         ICOL5 = 8
         ICOL6 = 9
C BEG APR 1992
C        CALL STRTHK(SMODE,IOUT,NNDIST,IDIST,1.0,NSEG,I5,ILOOP,
C    1               INTVAL,NWALL,THET,ICOL1,ICOL2,ICOL3,ICOL4,
C    1               ICOL5,ICOL6)
C 
C INCLUDE STRESS CONSTRAINTS FOR LAMINATED COMPOSITE MATERIAL...
         CALL STRTHX(SMODE,IOUT,NNDIST,IDIST,FSSTR,NSEG,I5,
     1                  ILOOP,INTVAL,NWALL,THET,ICOL1,ICOL2,ICOL3,
     1                  ICOL4,ICOL5,ICOL6,WORDB,EMAX,EMARG,
     1                  IMOD,ITYPE,FMAX,INUMTT,IPOINC,ICONST,CONSTR,
     1                  3)
C
C END APR 1992
      ENDIF
C
C  END OF 25 AUG., 1985 MODIFICATION.
C
  100 CONTINUE
  105 CONTINUE
C
C
C     PRINT OUT CIRCUMFERENTIAL DISTRIBUTIONS FOR NCIRC AXIAL STATIONS.
C
      CALL GASP(S,I2   ,3,IARC(1))
      IF (NCIRC.EQ.0) GO TO 175
      DO 170 ICIRC=1,NCIRC
      ISEG = ITHETA(ICIRC)/1000
      IPOINT = ITHETA(ICIRC) - ISEG*1000
      ITOT = 0
      ISEG1 = ISEG - 1
      IF (ISEG1.EQ.0) GO TO 120
      DO 110 I=1,ISEG1
110   ITOT = ITOT + I5(I)
120   IGLOB = ITOT + IPOINT
      WRITE (6,130)IPOINT,ISEG,S(IGLOB)
130   FORMAT(///64H CIRCUMFERENTIAL VARIATION OF SUPERPOSED QUANTITIES A
     1T POINT NO.   I3,13H, SEGMENT NO.  I3,21H, MERIDIONAL STATION=    
     21PE11.3)                    
      IF (ILOOP.EQ.1) WRITE(6,22)
      IF (ILOOP.EQ.2) WRITE(6,23)
      IF (ISTRSS(ISEG).EQ.0.AND.ISTRES.EQ.0) WRITE (6,30)
      IF (ISTRSS(ISEG).EQ.1.AND.NWALL(ISEG).NE.4.AND.NWALL(ISEG).NE.9)
     1     WRITE (6,40)
      IF (ISTRSS(ISEG).EQ.1.AND.(NWALL(ISEG).EQ.4.OR.NWALL(ISEG).EQ.9))
     1     WRITE (6,45)
      IF (ISTRSS(ISEG).EQ.2) WRITE (6,45)
      IF (ISTRSS(ISEG).EQ.0.AND.ISTRES.EQ.1) WRITE(6,45)
      CFACT = 1.0
      CDIF  = (ABS(THETAM) - 3.1415)/3.1415
      IF (ABS(CDIF).LT.0.1) THEN
         IF (NSTART.NE.0.AND.NFIN.NE.0) THEN
            IF ((NSTART*NFIN).LT.0) THEN
               CFACT = 2.0
            ENDIF
         ENDIF
      ENDIF
      DTHETA = CFACT*THETAM/FLOAT(NTHETA-1)
      THET = -DTHETA
      DO 160 I=1,NTHETA
      THET = THET + DTHETA
      TDEG = THET*180./3.141593
      IF (ISTRSS(ISEG).EQ.0.OR.ISTRSS(ISEG).EQ.2)
     1 WRITE (6,140)I,TDEG,(TMODE(I,ICIRC,J),J=1,9)
140   FORMAT(I5,1P10E12.3)
      IF (ISTRSS(ISEG).NE.1.OR.NWALL(ISEG).EQ.4.OR.NWALL(ISEG).EQ.9)
     1          GO TO 160
C     CIRCUMFERENTIAL DISTRIBUTIONS OF EFFECTIVE STRESS COMPONENTS
      SIGEIN = SQRT(TMODE(I,ICIRC,4)**2 + TMODE(I,ICIRC,7)**2
     1- TMODE(I,ICIRC,4)*TMODE(I,ICIRC,7) + 3.*TMODE(I,ICIRC,6)**2)
      SIGEO  = SQRT(TMODE(I,ICIRC,5)**2 + TMODE(I,ICIRC,8)**2
     1- TMODE(I,ICIRC,5)*TMODE(I,ICIRC,8) + 3.*TMODE(I,ICIRC,9)**2)
      WRITE (6,150)I,TDEG,(TMODE(I,ICIRC,J),J=1,9),SIGEIN,SIGEO
150   FORMAT(I5,1P12E10.2)                                              
160   CONTINUE
170   CONTINUE
  175 CONTINUE
      IF (NTOT.EQ.0) RETURN
      IF (IREST.NE.2) NVEC = IABS(NSTART-NFIN)/IABS(INCR) + 1
      IANALY = ANALY
      IF (IREST.EQ.2.AND.IANALY.NE.1) NVEC = MVEC
      IF (IREST.EQ.2.AND.IANALY.EQ.1) NVEC = 1
      MTHETA = NTHETA
180   MXDIM = MTHETA*NTOT*4
      IF (MXDIM.LT.10000) GO TO 190
      MTHETA = 2*MTHETA/3
      GO TO 180
190   CONTINUE
      DO 200 I=1,MXDIM
200   FF(I) = 0.0
C     SUPERPOSITION OF DISCRETE RING FORCES FOR ALL HARMONICS.
      IF (ILOOP.EQ.1)CALL SUPER(MTHETA,NTOT,NVEC,FF,F,IANALY,RHF,ILOOP)
      IF (ILOOP.EQ.2)CALL SUPER(MTHETA,NTOT,NVEC,FF,F,IANALY,RHFIX,
     1                                                           ILOOP)
      RETURN
      END
C=DECK      SUPER
      SUBROUTINE SUPER(MTHETA,NTOT,NVEC,FF,F,IANALY,RHF,ILOOP)
C+---------------------------------------------------------------------+
C+---------------------------------------------------------------------+
C     CALLED FROM OUTNON, WHOSE TRACE IS OUT2, READIT,MAIN
C     SUPERPOSE DISCRETE RING FORCES AND MOMENTS
      COMMON/WAVES/N0,N,NMIN,NMAX,INCR
      COMMON/NLINS/NSTART,NFIN
      COMMON/WAVNUM/ITHETA(50),THETA(50),THETAS,THETAM
      COMMON/IOCHOZ/IOYES(50),IOSEG(95)
      COMMON/AMPFAC/OMEGDR,YLATRL,YAXIAL,BDAMP,AMPLTD,GAMP(200)
      COMMON/RESTRT/IREST
      DIMENSION F(NTOT,NVEC,4),FF(MTHETA,NTOT,4)
      DIMENSION RHF(*)
      DO 5 K = 1,98
5     RHF(K) = 0.0
      CFACT = 1.0
      CDIF  = (ABS(THETAM) - 3.1415)/3.1415
      IF (ABS(CDIF).LT.0.1) THEN
         IF (NSTART.NE.0.AND.NFIN.NE.0) THEN
            IF ((NSTART*NFIN).LT.0) THEN
               CFACT = 2.0
            ENDIF
         ENDIF
      ENDIF
      DTHETA = CFACT*THETAM/FLOAT(MTHETA-1)
C
      DO 40 IVEC=1,NVEC
      FN = FLOAT(NSTART + (IVEC-1)*INCR)
      DO 30 K=1,NTOT
      ANGLE = - DTHETA
      DO 20 J=1,MTHETA
      ANGLE = ANGLE + DTHETA
      FNANGL = ABS(FN*ANGLE)
      SI = SIN(FNANGL)
      CO = COS(FNANGL)
      IF (FN.GT.0.0) GO TO 10
      SI = CO
      CO = SIN(FNANGL)
10    CONTINUE
      IF (IREST.EQ.2) GO TO 15
      FF(J,K,1) = FF(J,K,1) + F(K,IVEC,1)*SI
C     SUPERPOSED FORCES AND MOMENTS ARE IN FF
C        FF(J,K,1) = HOOP FORCE AT JTH CIRC. POINT IN KTH RING
C        FF(J,K,2) = OUT-OF-PLANE MOMENT
C        FF(J,K,3) = IN-PLANE MOMENT
C        FF(J,K,4) = TORQUE
      FF(J,K,2) = FF(J,K,2) + F(K,IVEC,2)*SI
      IF ((NTOT*NVEC*3).GT.6250) GO TO 20
      FF(J,K,3) = FF(J,K,3) + F(K,IVEC,3)*SI
      IF ((NTOT*NVEC*4).GT.6250) GO TO 20
      FF(J,K,4) = FF(J,K,4) + F(K,IVEC,4)*CO
      GO TO 20
   15 CONTINUE
C
      NPOWER = 2
      IF (IANALY.EQ.1) NPOWER = 1
      FF(J,K,1) = FF(J,K,1) + (AMPLTD*F(K,IVEC,1)*SI)**NPOWER
C     SUPERPOSED FORCES AND MOMENTS ARE IN FF
C        FF(J,K,1) = HOOP FORCE AT JTH CIRC. POINT IN KTH RING
C        FF(J,K,2) = OUT-OF-PLANE MOMENT
C        FF(J,K,3) = IN-PLANE MOMENT
C        FF(J,K,4) = TORQUE
      FF(J,K,2) = FF(J,K,2) + (AMPLTD*F(K,IVEC,2)*SI)**NPOWER
      IF ((NTOT*NVEC*3).GT.6250) GO TO 20
      FF(J,K,3) = FF(J,K,3) + (AMPLTD*F(K,IVEC,3)*SI)**NPOWER
      IF ((NTOT*NVEC*4).GT.6250) GO TO 20
      FF(J,K,4) = FF(J,K,4) + (AMPLTD*F(K,IVEC,4)*CO)**NPOWER
20    CONTINUE
      FNANGL = ABS(FN*THETAS)
      SI = SIN(FNANGL)
      CO = COS(FNANGL)
      IF (FN.GT.0.0) GO TO 22
      SI = CO
      CO = SIN(FNANGL)
22    CONTINUE
      IF (IREST.NE.2) RHF(K) = RHF(K) + F(K,IVEC,1)*SI
      IF (IREST.EQ.2) RHF(K) = RHF(K) + AMPLTD*F(K,IVEC,1)*SI
30    CONTINUE
40    CONTINUE
      IF (IREST.NE.2) GO TO 48
      IF (IANALY.EQ.1) GO TO 48
      DO 47 I = 1,4
      DO 46 K = 1,NTOT
      DO 45 J = 1,MTHETA
      FF(J,K,I) = SQRT(FF(J,K,I))
   45 CONTINUE
   46 CONTINUE
   47 CONTINUE
   48 CONTINUE
      IF ((NTOT*NVEC*3).LT.6250) GO TO 60
      WRITE (6,50)
50    FORMAT(//46H DISCRETE RING IN-PLANE MOMENT NOT CALCULATED ,
     157HBECAUSE (NO. RINGS)*(NO. HARMONICS)*3 EXCEEDS 6250       //)
60    IF ((NTOT*NVEC*4).LT.6250) GO TO 80
      WRITE (6,70)
70    FORMAT(//45H DISCRETE RING TORQUE NOT CALCULATED BECAUSE ,
     155H(NO. RINGS)*(NO. HARMONICS)*4 EXCEEDS 6250             //)
80    CONTINUE
      IF (IOYES(3).EQ.0) GO TO 135
      DO 130 K=1,NTOT
      IF (ILOOP.EQ.1) WRITE (6,90)K
      IF (ILOOP.EQ.2) WRITE (6,95)K
   90 FORMAT(///20X,' FORCE, MOMENT, AND TORQUE RESULTANTS FOR RING NO.'
     1 I3,'  (LOAD SYSTEM "A")')
   95 FORMAT(///20X,' FORCE, MOMENT, AND TORQUE RESULTANTS FOR RING NO.'
     1 I3,'  (LOAD SYSTEM "B")')
      WRITE (6,100)
100   FORMAT(/128H STATION NO.    CIRC. ANGLE          HOOP FORCE    OUT
     1-OF-PLANE MOMENT    IN-PLANE-MOMENT         TORQUE                
     2        /)
      ANGLE = -DTHETA
      DO 120 I=1,MTHETA
      ANGLE = ANGLE + DTHETA
      TDEG = ANGLE*180./3.1415927
      WRITE (6,110)I,TDEG,(FF(I,K,J),J=1,4)
110   FORMAT(I7,1P5E20.6)                     
120   CONTINUE
130   CONTINUE
135   CONTINUE
      RETURN
      END
C=DECK      OUTPEE
      SUBROUTINE OUTPEE(IPMODE,IARC,I2,I5,NSEG,BMODE,ISTRES)
C+---------------------------------------------------------------------+
C+---------------------------------------------------------------------+
C     CALLED FROM OUT2, WHOSE TRACE IS READIT,MAIN
C     AXISYMMETRIC PRESTRESS STATE IS PRINTED OUT
C
      COMMON/RGFCE/ RHF(98)
      COMMON/ALLRNG/ NTOT,IPRE
      COMMON/INSTAB/INDIC
      COMMON/IOCHOZ/IOYES(50),IOSEG(95)
      COMMON/STRSEG/ISTRSS(95)
      COMMON/SFLAG/MONOQ
      COMMON/KCHNG/NWALL(95),CCH(95)
      DIMENSION IARC(95),I5(95),BMODE(I2,9),S(1000)
      NN = 9*I2
      CALL GASP(BMODE,NN,3,IPMODE)
      IALL = 0
      CALL GASP(S,I2 ,3,IARC(1))
      DO 60 I=1,NSEG
      I5I = I5(I)
      IF (IOSEG(I).NE.0) GO TO 5
      IALL = IALL + I5I
      GO TO 60
    5 CONTINUE
      WRITE (6,10)I
   10 FORMAT(//25X,'AXISYMMETRIC PRESTRESS DISTRIBUTION FOR SEGMENT',
     1  I2)
      IF (ISTRSS(I).EQ.0.AND.MONOQ.EQ.0) WRITE (6,20)
      IF (ISTRSS(I).EQ.1.AND.MONOQ.EQ.1
     1      .AND.NWALL(I).NE.4.AND.NWALL(I).NE.9) WRITE (6,30)
      IF (ISTRSS(I).EQ.1.AND.MONOQ.EQ.1
     1      .AND.(NWALL(I).EQ.4.OR.NWALL(I).EQ.9)) WRITE (6,35)
      IF (ISTRSS(I).EQ.2) WRITE (6,35)
      IF (ISTRSS(I).EQ.0.AND.MONOQ.EQ.1) WRITE(6,35)
20    FORMAT(//' POINT   STATION        W0         U0          BETA     
     1   UV          N10         N20         M10         M20'/       
     2         '       (ARC LENGTH)   NORMAL   MERIDIONAL     MERID.    
     3  AXIAL       MERID.     CIRCUMF.     MERID.     CIRCUMF.'/
     4         '                      DISP.   DISPLACEMENT     ROT.     
     5  DISP.     RESULTANT   RESULTANT    MOMENT      MOMENT'/)
30    FORMAT(//' POINT    STATION       W0         U0        SIGMA1(IN) 
     1SIGMA1(OUT) SIGMA2(IN) SIGMA2(OUT) SIGMAE(IN) SIGMAE(OUT)'/
     2         '       (ARC LENGTH)   NORMAL   MERIDIONAL     MERID.    
     3MERIDIONAL   CIRCUMF.   CIRCUMF.    VON MISES EQUIVALENT'/
     4         '                       DISP.  DISPLACEMENT    STRESS    
     5  STRESS      STRESS     STRESS  INNER FIBER  OUTER FIBER'/)
35    FORMAT(//   ' POINT    STATION       W0         U0       EPSILON 1
     1   EPSILON 2   KAPPA 1      KAPPA 2 '/
     2            '       (ARC LENGTH)   NORMAL   MERIDIONAL    MERID.  
     3   CIRCUMF.    MERID.      CIRCUMF.'/
     4            '                       DISP.  DISPLACEMENT    STRAIN 
     5    STRAIN     CHANGES IN CURVATURE'/)
C
      DO 50 J=1,I5I
      IALL = IALL + 1
      WRITE (6,40)J,S(IALL),(BMODE(IALL,JJ),JJ=1,8)
40    FORMAT(I5,1P9E12.3)                      
50    CONTINUE
60    CONTINUE
      IF (NTOT.EQ.0) RETURN
      IF (INDIC.EQ.0) RETURN
      IF (IOYES(3).EQ.0) RETURN
      WRITE (6,70)
70    FORMAT(///30H HOOP FORCES IN DISCRETE RINGS   )      
      WRITE (6,80)
80    FORMAT(/33H RING NO.              HOOP FORCE          /)    
      DO 90 I=1,NTOT
90    WRITE (6,100)I,RHF(I)
100   FORMAT(I7, 1PE20.8)                      
      RETURN
      END
