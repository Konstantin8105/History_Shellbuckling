C=DECK      KOIT2
      SUBROUTINE KOIT2(NPRT,CS,CX,CY,NX,NY,NXY,ISTIF,NSEG,B,B2,H,W,W2,
     1        EPSLOD,ICOCUR,RESFIX,EIGLOC,N,M,AL,FSQ,CTAN,
     1        NWAVE,IMOD,JJJ,IFILE,THERMX,EPSFIX,RESEIG,EPSEIG,
     1        ZPARTY,EX,EY,EXY,WPB1,AL0,M0,F0,IEND,MAXSEG,
     1        NXVAR,NYVAR,NXYVAR,RESULT,NX0,NY0,NXY0,EPSFXL,
     1        RESFXL,EPSTOT,THERMY,KOITER,EPSLDF,NXFIX,NYFIX,NXYFIX,
     1        NYTOT,NY0TOT,IDISCR,W0,C11TAN,C12TAN,C22TAN,C33TAN,CMIN,
     1        FKNOCK,NOCONV,ILOADS,P,ILONG,ICWEB,KOUNTM,NSERCH,ETHERM,
     1        TEMP,IMTEMP,AMPLIT,IABT,ICASE,CSN,AMPLT2,
     1        INUMTT,CONMAX,CONSTR,IPOINC,ICONST,WORDB,FSLOC,ITIP,
     1        WIMPL,WRATIO,FMULTB,WDELKP,RWBTOT,RWBEIG,IBACK,IBPRE,
C BEG NOV 2003
     1        ITIPL1,ITYPE,IBACK2,KOUBCK,IESCAP,IBEAM,DELCR2,IICURV,
     1        DNX,IIKOIT,FNYADJ,FNYAD0)
C END NOV 2003
C
C  Purpose is to obtain postbuckling behavior of panel. Programmed
C  1985-1995 by D. Bushnell. Most of the post-local buckling theory
C  is given in
C           "Optimization of composite, stiffened, imperfect panels
C            under combined loads for service in the postbuckling
C            regime", Computer Methods in Applied Mechanics and
C            Engineering, Vol. 103 (1993) 43-114 (volume in honor of
C            Besseling's 65th birthday).
C
C  The unknowns in the nonlinear post-local buckling problem are
C  f, a, m, and N, which are defined as follows:
C
C         f = amplitude factor in the expression for w(x,y):
C             w(x,y) = f*(phi+a*phi**j), where phi(x,y) is the
C             local bifurcation buckling mode and j = 3 if the
C             stringer is not a hat and j = 2 if it is a hat.
C
C         a = "flattening" parameter in the expression for w(x,y),
C             that is, the coeficient of the phi**j term.
C
C         m = slope of the nodal lines in the locally buckled panel.
C             (The bifurcation buckling mode and post-local buckling
C              normal displacement w(x,y) is assumed to have the
C              form: w(x,y) = W(y)*sin[pi*n*(x-my)/L]
C
C         N = axial wavelength parameter N = pi**2*n**2/(4L**2),
C             where n is the number of halfwaves between rings and
C             L is the ring spacing.
C
C  There are two formulations of the nonlinear problem handled by
C  SUBROUTINE KOIT2:
C
C    1. a formulation in which only the three variables f,a,m
C       are unknowns and the nonlinear equations are solved in
C       SUBROUTINE NEWTON.
C
C    2. a formulation in which the four variables f,a,m,N are
C       unknowns and the nonlinear equations are solved in
C       SUBROUTINE ENERGY.
C  
C  The nonlinear equilibrium equations are derived from the first
C  variation of the total potential energy, which is given by Eq.(48) in
C           "Optimization of composite, stiffened, imperfect panels
C            under combined loads for service in the postbuckling
C            regime", Computer Methods in Applied Mechanics and
C            Engineering, Vol. 103 (1993) 43-114 (volume in honor of
C            Besseling's 65th birthday).
C  This expression is explicitly a function of f, a, and
C  m, and implicitly a function of N. The coefficients Ci and the
C  quantity C are functions of N, as given by Eqs. (49) and (17,18),
C  respectively, in the PANDA2 paper just cited. Also, the quantity
C  SBPB, which is the bending-twisting strain energy of the panel skin
C  as given by Eq. (45), is a function of N. In SUBROUTINE ENERGY
C  the four simultaneous nonlinear equations for f, a, m, and N are
C  generated by interpreting the primes in Eq. (48) as variations with
C  respect to f, a, m, and N, respectively.
C
C BEG AUG 2006
      COMMON/XSANDW/ISANDW(16)
C END AUG 2006
C BEG DEC 2003
      COMMON/MEMLOD/FNXBAR,FNYBAR,FNX0BR,FNY0BR
      COMMON/KOUNTZ/KOUNTK
C END DEC 2003
      DIMENSION CX(6,6,5),CY(6,6,5),RESFIX(3,5,2),ICOCUR(2),EPSLOD(6)
      DIMENSION RESEIG(3,5,2),EPSEIG(3,5,2),ZPARTY(*),RESULT(3,5,2)
      DIMENSION CS(6,6),THERMX(6,5),EPSFIX(3,5,2),EPSFXL(3,5,2)
      DIMENSION RESFXL(3,5,2),EPSTOT(3,5,2),THERMY(6,5)
      DIMENSION NXVAR(23,8),NYVAR(23,8),NXYVAR(23,8)
      DIMENSION E1VAR(23,8),E2VAR(23,8),E12VAR(23,8),CSN(6,6)
      DIMENSION NXYNEW(23,8),E12NEW(23,8),NXNEW3(23,8),NYNEW3(23,8)
      DIMENSION E1NEW3(23,8),E2NEW3(23,8),C13TAN(23,8),C23TAN(23,8)
      DIMENSION NXFIX(23,8),NYFIX(23,8),NXYFIX(23,8),EPSLDF(6)
      DIMENSION EYADD(23,8),EX(23,8),EY(23,8),EXY(23,8),CMIN(5)
      DIMENSION ISTIF(*),NSEG(*),B(*),B2(*),H(*),W(*),W2(*)
      DIMENSION EMAT(3,3),NMAT(3,3),CTAN(3,3),C33TAN(23,8),CA(140,2)
      DIMENSION C11TAN(23,8),C12TAN(23,8),C21TAN(23,8),C22TAN(23,8)
      DIMENSION NXNEW1(23,8),NYNEW1(23,8),E1NEW1(23,8),E2NEW1(23,8)
      DIMENSION NXNEW2(23,8),NYNEW2(23,8),E1NEW2(23,8),E2NEW2(23,8)
      DIMENSION RWBTOT(*),RWBEIG(*)
C BEG NOV 1995
C     DIMENSION EXPAND(9,9),RHS(9),CSKIN(9),CINV(3,3)
      DIMENSION DWORD(3),CNORM(3,3),CSECNT(3,3)
      CHARACTER*5 DWORD
      COMMON/JJLAST/JLAST,IHIAXL,IFIXMW
C END NOV 1995
C BEG FEB 1996
      COMMON/IRESTX/IRESTY
C END FEB 1996
      COMMON/GENPRE/FBPRE,PRELEN,FMISC(28)
      COMMON/AXWAVE/FNPB,MWAVE
      COMMON/GEOM6/IFAY(2),IMISCL(28)
      COMMON/THICK/TX(5),TY(5)
      COMMON/ESHORT/EXAVE,EXAVEA,TXALOW
      COMMON/UW11/F1,F10,F2,F20,NUBAR,A11BAR,A12BAR,A22BAR
      COMMON/GEOM1/AXIAL,CIRC,R
C BEG NOV 1995
      COMMON/KCOEF/A(140,6)
C END NOV 1995
      COMMON/KSTARR/EIGOLD,KSTAR
C BEG NOV 1997
      COMMON/KSTARQ/KSTARZ
C END NOV 1997
      COMMON/KSTARC/FKSTAR
      COMMON/LOCDEF/SLOPE(5,2),FLATA(5,2),FAMPLT(5,2),USEIT(5,2)
      COMMON/WIDCOL/CSWIDE(6,6)
      COMMON/REDGEN/CSREDU(6,6)
      DIMENSION EPSLD2(6),IPOINC(*),CONSTR(*),WORDB(*)
      CHARACTER*80 WORDB
      COMMON/PSTSTF/EKOISV,FMOD0,ALMOD0,FMMOD0,FNMOD0,FWAVE0
      COMMON/WRATXX/WRATTP,WRATWB,WRATCN
      COMMON/PSTST2/MEIGSV,ICONVS,IIIA
      COMMON/PSTST3/ADDSTF,ADSTF1
      COMMON/PSTST4/FNORIG
      COMMON/KOICOF/FAMPSV(5,2),ALSAV(5,2),FMSAV(5,2),FNSAV(5,2)
      COMMON/ALFIXD/ALFIX
      COMMON/INTSTP/ISTEP,NSTEPU
      COMMON/NWAVK1/NWAVEK
      COMMON/NWAVK2/FACTN1
      COMMON/MODAL1/WDISP(23,8),WD(23,8),WDD(23,8),U(23,8),V(23,8),
     1             VD(23,8)
      COMMON/POSTB1/PBSLOP,PBMWAV,PBA,PBF,PBEPS(3),PBCTAN(4),PBNSKN(3)
C BEG JAN 1996
      COMMON/POSTB4/PBCTN2(6)
C END JAN 1996
      COMMON/PSTB1A/PBEIGK,PBEIGB
      DIMENSION ETHERM(*),TEMP(*)
      COMMON/INDMOM/FMOM,FNCIRC
      COMMON/AVETHM/NTYBAR,NTXBAR,ETYBAR,ETXBAR,B11T,B12T
C BEG JAN 1995
C BEG OCT 1995
C BEG MAR 1996
      COMMON/ISWWI/ISWWID,ISWLOC,ISWWIX,ISSKIP
      COMMON/DELIM2/DELFCX(3,4),DELWBX(2),DELCUX(3)
C END MAR 1996
C BEG APR 1996
      COMMON/TRMODE/FLOSKN,FWEBSX,FUPSKN,CSTRS1,CSTRS2,CSTRS3
      COMMON/SEGS/NSEGB5,M2,I5(95),I2,I2G
      COMMON/SEGSLP/MSLOPE(8)
      REAL MSLOPE
C END APR 1996
C BEG MAY 1997
      COMMON/IZSTIX/IZSTIF(2)
C END MAY 1997
C END OCT 1995
C END JAN 1995
C BEG NOV 1994
      COMMON/WIDLMX/WIDLM0
C END NOV 1994
      REAL NTXBAR,NTYBAR
      REAL N,M,N1,N2,N12,N1SAVE,N2SAVE,N12SAV,NMAT,NX,NY,NXY,MSAVE,MEIG
      REAL NXBAR,NYBAR,NXBARS,NYBARS,NXVAR,NYVAR,NXYVAR,M0,NMAT33
      REAL NX0,NY0,NXY0,NXFIX,NYFIX,NXYFIX,NYTOT,NY0TOT,MSAVEX
      REAL NUBAR,NXNEW1,NXNEW2,NYNEW1,NYNEW2,KSTAR,MNEW,NNEW
C BEG NOV 1997
      REAL KSTARZ
C END NOV 1997
      REAL NXYNEW,NXNEW3,NYNEW3
      REAL M00,N0,M0S,N0S
C BEG AUG 1994
      REAL M00S,N00S,MSTART,M00SS,N00SS
C END AUG 1994
C BEG JULY 1995
      REAL N00
C END JULY 1995
C BEG MAR 1997
      REAL M00SSS,N00SSS
C END MAR 1997
      LOGICAL IPRT
C BEG MAR 1996
      LOGICAL ILOGIC
C END MAR 1996
C BEG NOV 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG DEC 2003
      IF (NPRT.GE.0)
     1 WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' ******** ENTERING KOITER BRANCH, SUBROUTINE KOIT2 *********',
     1' This subroutine is an implementation of the theory described',
     1' in the PANDA2 paper by David Bushnell:',
     1'     "Optimization of composite, stiffened, imperfect panels',
     1'      under combined loads for service in the postbuckling',
     1'      regime", Computer Methods in Applied Mechanics and',
     1'      Engineering, Vol. 103 (1993) 43-114 (volume in honor of',
     1'      Besselings 65th birthday).'

      IF (NPRT.GE.2)
     1WRITE(IFILE,'(/,A,/,A,/,A,1P,E12.4,A,/,A,1P,E12.4,A,/,A,/,A)')
     1' NOTE: Computations herein do not include the effect of',
     1'       "hungry-horse" adjustments to the hoop resultant in the',
     1'       panel skin: FNYADJ=',FNYADJ,' for Load Set A and',
     1'                   FNYAD0=',FNYAD0,' for Load Set B.',
     1'       unless a negative eigenvalue is computed in SUBROUTINE',
     1'       EIGKOI.'
C END DEC 2003
C END NOV 2003
C BEG OCT 1996
C     WRITE(8,*)' W0=',W0
C END OCT 1996
C BEG JUN 1996
      IDIDIT = 0
C END JUN 1996
      IIBACK = 0
      IF (IBACK.EQ.1) IIBACK = 1
      IIBCK2 = 0
      IF (IBACK2.EQ.1) IIBCK2 = 1
      IBACK2= 0
      IBACK = 0
      DELK2  = 0.
      ADDSTF = 0.
      ADSTF1 = 0.
      CALL MOVER(EPSLOD,1,EPSLD2,1,6)
      IPRT  = IMOD.EQ.0.AND.NPRT.GT.1
      ANORM =  SQRT(NX**2 +  NY**2 +  NXY**2)
      ANORM0 = SQRT(NX0**2 + NY0**2 + NXY0**2)
      THMNRM = SQRT(RESFIX(1,1,1)**2 + RESFIX(2,1,1)**2)
      PERT  = .02*(ANORM + ANORM0 + THMNRM)
      NOLOAD = 0
C BEG MAR 1996
C     IF (PERT.EQ.0.) THEN
      IF (PERT.LT.(CS(1,1)*.000001)) THEN
         NOLOAD = 1
         PERT = CS(1,1)*.000001
C END MAR 1996
      ENDIF
      PERT1 = PERT
      PERT2 = PERT
      PERT3 = PERT
      IF (NOLOAD.EQ.0) THEN
         RATIO1= ABS(NX + NX0)/(ANORM + ANORM0)
         RATIO2= ABS(NY + NY0)/(ANORM + ANORM0)
         RATIO3= ABS(NXY+NXY0)/(ANORM + ANORM0)
         RATMAX = MAX(RATIO1,RATIO2)
         RATMAX = MAX(RATIO3,RATMAX)
         CMAX   = CS(1,1)
         DIFFR  = ABS(RATMAX - RATIO2)/RATMAX
         IF (DIFFR.LT.0.001) CMAX = CS(2,2)
         DIFFR  = ABS(RATMAX - RATIO3)/RATMAX
         IF (DIFFR.LT.0.001) CMAX = CS(3,3)
         IF (RATIO1.LT.0.1) PERT1 = MIN(PERT, PERT*CS(1,1)/CMAX)
         IF (RATIO2.LT.0.1) PERT2 = MIN(PERT, PERT*CS(2,2)/CMAX)
         IF (RATIO3.LT.0.1) PERT3 = MIN(PERT, PERT*CS(3,3)/CMAX)
      ENDIF
C
C BEG MAR 1996
      IF (ABS(W0)/TX(1).LT.0.0001) W0 = .0001*TX(1)
C END MAR 1996
      W0MULT = 10.
      IF (ABS(W0)/TX(1).GE.0.002) W0MULT = 5.
      IF (ABS(W0)/TX(1).GE.0.01)  W0MULT = 2.
      KOUNTW = 0
      IF (IMOD.EQ.0)  KOUNTM = 0
      IF (ICWEB.EQ.1) KOUNTM = 0
      IW0 = 0
      W0SAVE = W0
      MSAVEX = M0
      ASAVEX = AL0
      FSAVEX = FSQ
      FARC = 1.
      KOUNT = 0
C BEG APR 1996 (FOLLOWING "NEW" STUFF COMMENTED OUT BECAUSE IT DOES NOT
C               CHANGE THE RESULTS)
C     IF (ISTIF(1).EQ.5.AND.IMOD.EQ.0)
C    1   CALL CHGSLP(IFILE,NPRT,WDISP,I5,MSLOPE)
C END APR 1996
C
    5 CONTINUE
      IF (IW0.EQ.1) W0 = W0MULT*W0
      AL0 = ASAVEX
      M0  = MSAVEX
      FSQ = FSAVEX
      IF (IMOD.EQ.0) NOCONV = 0
      IF (NOCONV.NE.2.AND.NOCONV.NE.4) NOCONV = 0
      IW0 = 0
      KOUNTW = KOUNTW + 1
      IF (KOUNTW.GT.4) WRITE(IFILE,6) KOUNTW,W0
    6 FORMAT(/' KOUNTW=',I2,'   INITIAL IMPERFECTION AMPLITUDE, W0=',
     1 1PE12.4/
     1 ' PREVIOUS TRIES FOR CONVERGENCE HAVE BEEN UNSUCCESSFUL.'/
     1 ' THIS IS THE LAST ATTEMPT WITH USE OF THE STRATEGY OF'/
     1 ' INCREASING THE AMPLITUDE OF THE LOCAL IMPERFECTION W0.'/
     1 ' USE RESULTS WITH CAUTION.'/)
C
   10 CONTINUE
      AL = AL0
      M  = M0
      F  = FSQ
      E1SAVE = EPSLOD(1)
      E2SAVE = EPSLOD(2)
      E12SAV = EPSLOD(3)
C
C********************************************************************
C BEGIN CALCULATIONS OF LOCAL BUCKLING LOAD FACTOR (EIGENVALUE) FROM
C KOITER THEORY
C*******************************************************************
C
      IF (IMOD.EQ.0) EKOITR = 0.
C BEG JUN 1996
      IF (EKOITR.GT.1.E+16) GO TO 599
C END JUN 1996
C
         IF (IMOD.EQ.0) THEN
            MWAVE = NWAVE
            MEIGSV = NWAVE
            FWAVE0 = MEIGSV
            FNORIG = (3.1415927*FWAVE0/(2.*FMULTB*B(2)))**2
C BEG DEC 2003
            KOUNTK = 0
            FNYADD = 0.
            FNY0AD = 0.
C END DEC 2003
         ELSE
            MWAVE = MEIGSV
C BEG DEC 2003
            IF (KOUNTK.EQ.1) THEN
               FNYADD = FNYADJ
               FNY0AD = FNYAD0
            ENDIF
C END DEC 2003
         ENDIF
         FMW   = MWAVE
         N = (3.1415927*FMW/(2.*FMULTB*B(2)))**2
 7950    CONTINUE
C BEG DEC 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
         CALL EPSAVE(N,CS,CX,CY,NX,NY+FNYADD,NXY,ISTIF,NSEG,B,B2,H,W,W2,
     1               EPSLOD,ICOCUR,RESFIX,NX0,NY0+FNY0AD,NXY0,FARC,RNEW,
     1       EPSLDF,0.,ETHERM,RESFXL,RESEIG,0.,0.,0.,AMPLIT,IABT,CSN,
     1       0,FYRAT,0.,0.,7950)
C END DEC 2003
C
          EKOITR = 1.E+17
C BEG MAR 1996
          IF (IDISCR.EQ.1) THEN
C END MAR 1996
              CALL EIGKOI(IMOD,NPRT,IFILE,N,M,CX,EKOITR,MWAVE,ITER)
          ENDIF
C
          IF (EKOITR.LT.0.0) THEN
            EKOITR = 1.E+17
            WRITE(IFILE,777)
  777       FORMAT(/' ********* TROUBLE ********* TROUBLE *********'/
     1    ' KOITER THEORY PREDICTS NEGATIVE EIGENVALUE. THIS MAY BE'/
     1    ' CAUSED BY ONE OR MORE OF THE FOLLOWING:'/
     1    ' 1. POSITIVE MEMBRANE RESULTANTS IN LOAD SET A'/
     1    ' 2. NEGATIVE MEMBRANE RESULTANTS IN LOAD SET B'/
     1    ' 3. AN UNBALANCED LAMINATE IN A MODULE SEGMENT'/
     1    ' DO A RUN WITH PRINT OPTION NPRINT = 2 AND INSPECT THE'/
     1    ' PART OF THE *.OPM FILE WHERE THE STRESS RESULTANTS IN'/
     1    ' THE SEGMENTS OF THE SKIN-STRINGER MODULE ARE LISTED. IF'/
     1    ' CONDITIONS 1. OR 2. EXIST, TRY CHANGING THE LOAD SET IN'/
     1    ' WHICH YOU HAVE PUT THE PRESSURE AND/OR THE THERMAL'/
     1    ' LOADING (TEMPERATURE).'/
     1    ' ****TROUBLE **** TROUBLE **** TROUBLE **** TROUBLE ****')
C BEG DEC 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
            WRITE(IFILE,778) FNXBAR,FNYBAR,FNX0BR,FNY0BR
  778       FORMAT(/,
     1   ' Prebuckling axial resultant, Load SET A, FNXBAR=',1P,E12.4,/,
     1   ' Prebuckling circ. resultant, Load SET A, FNYBAR=',1P,E12.4,/,
     1   ' Prebuckling axial resultant, Load SET B, FNX0BR=',1P,E12.4,/,
     1   ' Prebuckling circ. resultant, Load SET B, FNY0BR=',1P,E12.4)
C
            IF (MOD.EQ.0.AND.KOUNTK.EQ.0.AND.FNYADJ.LT.0.0) THEN
              KOUNTK = 1
              FNYADD = FNYADJ
              FNY0AD = FNYAD0
              WRITE(IFILE,779)
 779          FORMAT(/
     1       ' "hungry-horse" hoop resultant adjustments for Load Sets',
     1       ' A and B are being added to Ny and Nyo, respectively.',/)
              GO TO 7950
            ENDIF
C
            IF (FNX0BR.LT.0.0.OR.FNY0BR.LT.0.0) THEN
               CALL LOADBA(13)
               IF (IRESTY.EQ.1) GO TO 2222
            ELSE
               WRITE(IFILE,'(/,A,/,A,/,A,/,A)')
     1       ' Resultants in Load Set B are zero or positive. Hence,',
     1       ' they cannot cause buckling by themselves and are not',
     1       ' shifted into Load Set A. The eigenvalue, EKOITR, is set',
     1       ' equal to a large number (EKOITR=1.E+17) and we continue.'
            ENDIF
C END DEC 2003
          ENDIF
C BEG JUN 1996
          IF (EKOITR.GT.1.E+16) GO TO 599
C END JUN 1996
C  SEARCH FOR MINIMUM EIGENVALUE WITH CHANGE IN AXIAL WAVENUMBER...
          FNPB = N
          EIGTST = 10000000.
          IF (ISTIF(1).EQ.5) EIGTST = 10000000.
          NSRCH = NSERCH
C BEG MAR 1996
C         IF (WRATTP.GT.5.0.OR.WRATWB.GT.5.0.OR.WRATCN.GT.5.0)
          IF ((WRATTP.GT.5.0.OR.WRATWB.GT.5.0.OR.WRATCN.GT.5.0).AND.
     1       IBEAM.EQ.0) NSRCH = 0
C         WRITE(IFILE,'(A,/,1P3E12.4,I5)')
C    1     ' WRATTP,WRATWB,WRATCN,NSRCH=',WRATTP,WRATWB,WRATCN,NSRCH
C END MAR 1996
          IF (IIBCK2.EQ.1) NSRCH = 0
          IF (NSRCH.NE.0.AND.ABS(EKOITR).LT.EIGTST) THEN
             KOUNTE = 0
             INCR   = 0.1*FLOAT(MWAVE)
             IF (INCR.EQ.0) INCR = 1
   11        MWAVE = MWAVE + INCR
             KOUNTE = KOUNTE + 1
             FMW   = MWAVE
             FNPB = (3.1415927*FMW/(2.*FMULTB*B(2)))**2
 7960        CONTINUE
C BEG DEC 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
             CALL EPSAVE(FNPB,CS,CX,CY,NX,NY+FNYADD,NXY,ISTIF,NSEG,B,B2,
     1             H,W,W2,EPSLOD,ICOCUR,RESFIX,NX0,NY0+FNY0AD,NXY0,FARC,
     1             RNEW,EPSLDF,0.,ETHERM,RESFXL,RESEIG,0.,0.,0.,
     1             AMPLIT,IABT,CSN,0,FYRAT,0.,0.,7960)
C END DEC 2003
             CALL EIGKOI(IMOD,NPRT,IFILE,FNPB,M,CX,EKOIT2,MWAVE,ITER)
             IF (EKOIT2.LT.0.0) THEN
                EKOITR = 1.E+17
                WRITE(IFILE,777)
C BEG DEC 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
                WRITE(IFILE,778) FNXBAR,FNYBAR,FNX0BR,FNY0BR
                IF (MOD.EQ.0.AND.KOUNTK.EQ.0.AND.FNYADJ.LT.0.0) THEN
                  KOUNTK = 1
                  FNYADD = FNYADJ
                  FNY0AD = FNYAD0
                  WRITE(IFILE,779)
                  GO TO 7960
                ENDIF
                IF (FNX0BR.LT.0.0.OR.FNY0BR.LT.0.0) THEN
                   CALL LOADBA(14)
                   IF (IRESTY.EQ.1) GO TO 2222
                ELSE
                   WRITE(IFILE,'(/,A,/,A,/,A,/,A)')
     1       ' Resultants in Load Set B are zero or positive. Hence,',
     1       ' they cannot cause buckling by themselves and are not',
     1       ' shifted into Load Set A. The eigenvalue, EKOITR, is set',
     1       ' equal to a large number (EKOITR=1.E+17) and we continue.'
                ENDIF
C END DEC 2003
             ENDIF
C
             IF (EKOITR.GT.1.E+16) GO TO 599
             IF (ITER.EQ.20) GO TO 12
             IF (EKOIT2.LT.EKOITR) THEN
                EKOITR = EKOIT2
                IF (MWAVE.EQ.1) GO TO 13
                GO TO 11
             ELSE
                IF (KOUNTE.GE.2) GO TO 12
                IF (MWAVE.EQ.2.AND.INCR.GT.0) GO TO 12
                MWAVE = NWAVE
                INCR = -INCR
                GO TO 11
             ENDIF
   12        MWAVE = MWAVE - INCR
             FMW   = MWAVE
             FNPB = (3.1415927*FMW/(2.*FMULTB*B(2)))**2
 7970        CONTINUE
C BEG DEC 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
             CALL EPSAVE(FNPB,CS,CX,CY,NX,NY+FNYADD,NXY,ISTIF,NSEG,B,B2,
     1             H,W,W2,EPSLOD,ICOCUR,RESFIX,NX0,NY0+FNY0AD,NXY0,FARC,
     1             RNEW,EPSLDF,0.,ETHERM,RESFXL,RESEIG,0.,0.,0.,
     1             AMPLIT,IABT,CSN,0,FYRAT,0.,0.,7970)
C END DEC 2003
             CALL EIGKOI(IMOD,NPRT,IFILE,FNPB,M,CX,EKOITR,MWAVE,ITER)
             IF (EKOITR.LT.0.0) THEN
                EKOITR = 1.E+17
                WRITE(IFILE,777)
C BEG DEC 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
                WRITE(IFILE,778) FNXBAR,FNYBAR,FNX0BR,FNY0BR
                IF (MOD.EQ.0.AND.KOUNTK.EQ.0.AND.FNYADJ.LT.0.0) THEN
                  KOUNTK = 1
                  FNYADD = FNYADJ
                  FNY0AD = FNYAD0
                  WRITE(IFILE,779)
                  GO TO 7970
                ENDIF
                IF (FNX0BR.LT.0.0.OR.FNY0BR.LT.0.0) THEN
                   CALL LOADBA(15)
                   IF (IRESTY.EQ.1) GO TO 2222
                ELSE
                   WRITE(IFILE,'(/,A,/,A,/,A,/,A)')
     1       ' Resultants in Load Set B are zero or positive. Hence,',
     1       ' they cannot cause buckling by themselves and are not',
     1       ' shifted into Load Set A. The eigenvalue, EKOITR, is set',
     1       ' equal to a large number (EKOITR=1.E+17) and we continue.'
                ENDIF
C END DEC 2003
             ENDIF
C
             IF (EKOITR.GT.1.E+16) GO TO 599
             IF (ABS(INCR).GT.1.AND.ITER.LT.20) THEN
                KOUNTE = 0
                INCR = 1
                GO TO 11
             ENDIF
   13        CONTINUE
C
             IF (FMULTB.LT.1.0) THEN
                FNPB =(3.1415927*FMW/(2.*B(2)))**2
 7980           CONTINUE
C BEG DEC 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
                CALL EPSAVE(FNPB,CS,CX,CY,NX,NY+FNYADD,NXY,ISTIF,NSEG,B,
     1          B2,H,W,W2,EPSLOD,ICOCUR,RESFIX,NX0,NY0+FNY0AD,NXY0,FARC,
     1          RNEW,EPSLDF,0.,ETHERM,RESFXL,RESEIG,0.,0.,0.,
     1          AMPLIT,IABT,CSN,0,FYRAT,0.,0.,7980)
             ENDIF
C END DEC 2003
C
             N = FNPB
             IF (IMOD.EQ.0) THEN
                FMRAT = FLOAT(MWAVE)/FLOAT(NWAVE)
C               IF ((FMRAT.LT.0.65.OR.FMRAT.GT.1.599).AND.IIBACK.EQ.0)
                IF ((FMRAT.LT.0.01.OR.FMRAT.GT.1000.).AND.IIBACK.EQ.0)
     1             IBACK = 1
                IF (IBACK.EQ.1) NWAVE = MWAVE
                IF (IBACK.EQ.1) RETURN
             ENDIF
             MEIGSV = MWAVE
             FWAVE0 = MEIGSV
             IF (EKOITR.LT.0.) THEN
                M = -M
                WRITE(IFILE,777)
C BEG DEC 2003
                WRITE(IFILE,778) FNXBAR,FNYBAR,FNX0BR,FNY0BR
C END DEC 2003
                CALL LOADBA(16)
                IF (IRESTY.EQ.1) GO TO 2222
             ENDIF
          ENDIF
C         end of NSRCH.NE.0.AND.ABS(EKOITR).LT.EIGTST branch
C  END OF SEARCH FOR MINIMUM EIGENVALUE WITH AXIAL WAVENUMBER.
C
          IF (IMOD.EQ.0) THEN
             IF (KSTAR.LE.0.) KSTAR = 1.
             IF (KSTAR.GE.1.) KSTAR = 1.
             IF (FKSTAR.GE.1.) FKSTAR=1.
             IF (FKSTAR.LE.0.) FKSTAR=1.
C BEG NOV 1997
             IF (KSTARZ.LE.0.) KSTARZ = 1.
             IF (KSTARZ.GE.1.) KSTARZ = 1.
C            EIGBOS = EIGLOC/(FKSTAR*FKNOCK)
             EIGBOS = EIGLOC/(KSTARZ*FKNOCK)
C END NOV 1997
             EIGDIF = ABS(EKOITR - EIGBOS)/ABS(EKOITR)
             IWARN  = 0
             IF (EIGDIF.LT.0.15.AND.(FKSTAR*FKNOCK).LT.0.5) IWARN = 1
             IF (IWARN.EQ.1) KOUNTM = 0
             IF (ABS(EKOITR).GT.1.5*EIGLOC) KOUNTM = 0
          ENDIF
C BEG AUG 1997
          PBSLOP = M
          PBMWAV = MWAVE
C END AUG 1997
          IF (JJJ.EQ.0.AND.NPRT.GE.0.AND.IMOD.EQ.0) THEN
             WRITE(IFILE,15) MWAVE,M,FKSTAR,EKOITR,EIGLOC,EIGBOS,WIMPL
C BEG DEC 2001
C BEG NOV 2003
             IF (NPRT.GE.1) THEN
                WRITE(IFILE,151)
                WRITE(IFILE,1511) FNYADJ,FNYAD0
                IF (IICURV.EQ.1) WRITE(IFILE,149)
C               IF (IICURV.EQ.0) WRITE(IFILE,151)
             ENDIF
C END NOV 2003
C END DEC 2001
          ENDIF
   15     FORMAT(/' LOCAL BIFURCATION BUCKLING LOAD FACTOR ESTIMATES'/
     1' AND AMPLITUDE Wo OF LOCAL IMPERFECTION, Wo*(buckling mode)'/
     1' Critical number of axial half-waves                =',I3/
     1' Slope of buckling nodal lines from Koiter Theory, m=',1PE10.2/
     1' Knockdown factor for C44, C45, C55 for transv.shear=',1PE10.2/
     1' Local buckling load Factor from Koiter-type Theory =',1PE10.2/
     1' Load Factor from BOSOR4-type panel module model    =',1PE10.2/
     1' BOSOR4-type load factor without knockdowns for'/
     1'   effects of anisotropy [e.g. C(4,6)] of the skin,'/
     1'   transverse shear def., or in-plane shear loading =',1PE10.2/
     1' Amplitude Wo of local imperfection                 =',1PE12.4//
     1' Even if the load factor from Koiter-type theory is greater'/
     1' than unity, the panel is in a "post-locally-buckled" state'/
     1' because there is always a finite local imperfection in the'/
     1' panel skin and stringer that grows under the applied loads.'/)
C BEG DEC 2001
C23456789012345678901234567890123456789012345678901234567890123456789012
  149     FORMAT(' **** NOTE ****** NOTE ****** NOTE ***** NOTE ******'/
     1' PLEASE READ THE PREVIOUS PARAGRAPH.'/
     1' IF THE LOAD FACTOR FROM THE KOITER THEORY DOES NOT AGREE WELL'/
     1' WITH THAT COMPUTED FROM THE BOSOR4-TYPE MODULE MODEL, IT MAY'/
     1' ALSO BE BECAUSE THE PANEL SKIN IS CURVED IN THE BOSOR4-'/
     1' TYPE DISCRETIZED MODULE MODEL, BUT IS ASSUMED TO BE FLAT IN'/
     1' THE MODEL USED IN THE KOITER THEORY IMPLEMENTED IN THIS'/
     1' SECTION OF PANDA2. THE RESULTS FOR POST-LOCAL-BUCKLING STRESS'/
     1' OBTAINED HERE ARE PROBABLY QUITE CONSERVATIVE IF THE LOCAL'/
     1' BUCKLING LOAD FACTOR FROM THE BOSOR4-TYPE DISCRETIZED MODULE'/
     1' MODEL IS GREATER THAN UNITY WHEREAS THE BUCKLING LOAD FACTOR'/
     1' FROM THE KOITER THEORY IS LESS THAN UNITY. IF YOU WANT TO'/
     1' INCLUDE THE CURVATURE IN THE BOSOR4-TYPE DISCRETIZED MODULE'/
     1' MODEL, BUT BYPASS THE POST-LOCAL BUCKLING ANALYSIS IN THIS'/
     1' "KOITER" SECTION OF PANDA2, INDICATE SO IN YOUR *.OPT FILE.'/
     1' **** END NOTE **** END NOTE **** END NOTE **** END NOTE ****'/)
C23456789012345678901234567890123456789012345678901234567890123456789012
C END DEC 2001
  151 FORMAT(
     1' The load factor computed from Koiter theory may not agree well'/
     1' with that computed from the BOSOR4-type module model. Some'/
     1' reasons for the discrepancy are:'/
     1'        1. there are significant non-zero coupling terms'/
     1'              C13, C16, C23, C26, C34, C35, C46, C56 '/
     1'           in the constitutive matrix Cij,'/
     1'        2. significant in-plane shear loads exist,'/
     1'        3. there is a significant effect of transverse'/
     1'           shear deformation,'/
     1'        4. the stringer web deforms significantly in the'/
     1'           local buckling mode,'/
     1'        5. there is significant hoop compression.'/
     1'        6. the temperature varies significantly in a seg-'/
     1'           ment where the material props. are temp.-dependent,'/
     1'        7. the critical number of axial half-waves is one,'/
     1'        8. the configuration is TRUSS-CORE SANDWICH.'/
     1'        9. any segment laminate is unbalanced.')
C BEG NOV 2003
 1511 FORMAT(
     1'       10. the user selected "N" for the MAINSETUP prompt:'/
     1' Do you want "flat skin" discretized module for local buckling?'/
     1'       11. there is significant prebuckling axial bending,'/
     1'           especially in panels with rectangular stringers.',/
     1'       12. "hungry-horse" skin hoop resultant adjustments are',/
     1'           ignored: for Load Set A: FNYADJ=',1P,E12.4,/
     1'                    for Load Set B: FNYAD0=',1P,E12.4)
C END NOV 2003
C
C BEG APR 1997
C         IF (JJJ.GT.0.AND.NPRT.GE.1.AND.IMOD.EQ.0)
          IF (JJJ.GT.0.AND.NPRT.GE.1)
C END APR 1997
     1      WRITE(IFILE,16) MWAVE, EKOITR, EIGLOC, EIGBOS, WIMPL
   16    FORMAT(/' KOITER-TYPE EIGENVALUE v. BOSOR4-TYPE EIGENVALUE:'/
     1' AND AMPLITUDE Wo OF LOCAL IMPERFECTION, Wo*(buckling mode)'/
     1' Critical number of axial half-waves                =',I3/
     1' Local buckling load Factor from Koiter-type Theory =',1PE10.2/
     1' Load Factor from BOSOR4-type panel module model    =',1PE10.2/
     1' BOSOR4-type load factor without knockdowns for effects of'/
     1'  transverse shear def. or in-plane shear loading   =',1PE10.2/
     1' Amplitude Wo of local imperfection                 =',1PE12.4//
     1' Even if the load factor from Koiter-type theory is greater'/
     1' than unity, the panel is in a "post-locally-buckled" state'/
     1' because there is always a finite local imperfection in the'/
     1' panel skin and stringer that grows under the applied loads.')
C
         IF (IWARN.EQ.1.AND.NPRT.GE.1.AND.IMOD.EQ.0)
     1           WRITE(IFILE,17)  EIGLOC,FKNOCK,FKSTAR,EKOITR,EIGBOS
   17  FORMAT(/' The local buckling load factor from the BOSOR4-type'/
     1' of analysis, EIGLOC=',1PE10.2,', includes knockdown factors'/
     1' FKNOCK(2)=',1PE10.2,' and KSTAR =',1PE10.2,' that represent,'/
     1' respectively, the effect of inplane shear loading in the'/
     1' panel skin and transverse shear deformation. However,in this'/
     1' case there is reasonably good agreement between the load'/
     1' factor obtained from Koiter-type theory, EIGKOI=',1PE10.2,','/
     1' which is derived from a theory that includes in-plane shear'/
     1' loading but does not include transverse shear deformation,'/
     1' and the BOSOR4-type load factor without knockdowns either'/
     1' for in-plane shear loading or transverse shear deformation,'/
     1' EIGLOC/[KSTAR*FKNOCK(2)] = ',1PE10.2,'.  Therefore, it'/
     1' may be that in-plane shear is relatively unimportant in'/
     1' this case because much of the energy in the local buckling'/
     1' mode arises from stringer deformation. Please inspect the'/
     1' local buckling mode by plotting or by running with the'/
     1' NPRINT = 2 option (more output, including buckling mode.)')
      IF (IMOD.EQ.0.AND.EIGLOC.LT.1.0.AND.FKNOCK.LT.0.3
     1             .AND.EKOITR.GT.(1.3*EIGLOC)) THEN
         WRITE(IFILE,18) EKOITR, EIGLOC, FKNOCK
   18    FORMAT(/
     1' ******** WARNING ******** WARNING ******** WARNING ********'/
     1' THE LOCAL BUCKLING LOAD FACTOR FROM KOITER THEORY IS MORE'/
     1' THAN 30 PER CENT HIGHER THAN THAT FROM THE BOSOR4-TYPE'/
     1' DISCRETIZED MODEL, AND THE KNOCKDOWN FACTOR TO ACCOUNT FOR'/
     1' THE EFFECT OF IN-PLANE SHEAR LOADING IS LESS THAN 0.3, WHICH'/
     1' MEANS THAT IN-PLANE SHEAR LOADING MAY BE VERY IMPORTANT.'//
     1' Local buckling load factor  - Koiter theory, EKOITR=',1PE12.4/
     1' Knocked down local buckling load factor from BOSOR4 theory,'/
     1'                                              EIGLOC=',1PE12.4/
     1' Knockdown factor to account for in-plane shear loading and'/
     1' anisotropy,                               FKNOCK(2)=',1PE12.4/
     1' IF THE LOCAL BUCKLING MODE INVOLVES MOSTLY STRINGER SIDESWAY'/
     1' THIS DESIGN IS PROBABLY OK. AVOID PANEL SKIN WITH JUST ANGLE'/
     1' PLIES. USE THE STAGS FINITE ELEMENT COMPUTER CODE TO CHECK'/
     1' THE OPTIMUM DESIGN.'/
     1' ********** END WARNING ************ END WARNING ***********'/)
      ENDIF
C
C********************************************************************
C END CALCULATIONS OF LOCAL BUCKLING LOAD FACTOR (EIGENVALUE) FROM
C KOITER THEORY
C*******************************************************************
C
C  RECORD LOCAL BUCKLING CONSTRAINT FROM KOITER THEORY...
C BEG DEC 2001
      IF (IICURV.EQ.0)
C END DEC 2001
     1 CALL KOICON(EKOITR,MWAVE,M,FSLOC,IMOD,INUMTT,CONMAX,IPOINC,
     1            CONSTR,ICONST,WORDB,ITIPL1)
C
      IF (IMOD.EQ.0.AND.EKOITR.LT.0.2.AND.ABS(NXY).GT.ABS(NX)
     1             .AND.ISTIF(2).EQ.0) THEN
         WRITE(IFILE,176) EKOITR,NX,NY,NXY
  176    FORMAT(/'**********  WARNING   WARNING   WARNING  **********'/
     1   ' THE PANEL IS LOADED FAR INTO THE LOCALLY POSTBUCKLED STATE'/
     1   ' AND THERE ARE NO TRANSVERSE STIFFENERS AND IN-PLANE SHEAR'/
     1   ' LOADING IS SIGNIFICANT:'/
     1   '  Local buck. load factor (Koiter theory), EKOITR =',1PE12.4/
     1   '  Applied axial resultant,                     Nx =',1PE12.4/
     1   '  Applied hoop  resultant,                     Ny =',1PE12.4/
     1   '  Applied in-plane shear resultant,           Nxy =',1PE12.4/
     1   ' IN ORDER TO PREVENT LARGE POSTBUCKLING DISPLACEMENTS, IT'/
     1   ' MAY BE NECESSARY TO INTRODUCE TRANSVERSE STIFFENERS (RINGS)'/
     1   ' INTO THE MODEL. (YOU CAN MAKE THE RING SPACING EQUAL TO'/
     1   ' THE LENGTH OF THE PANEL IF YOU WANT.)'/
     1   ' ******** END WARNING   END WARNING   END WARNING ********'/)
      ENDIF
      IF (KOUBCK.EQ.0) THEN
         PBEIGK = EKOITR
         PBEIGB = EIGLOC
      ENDIF
C BEG OCT 1996
      PREDFK = 10.
      PREDFB = 10.
      FMULT = 1.0
      IF (EKOITR.GT.1.1) PREDFK = EKOITR/(EKOITR-1.) - 1.
      IF (EIGLOC.GT.1.1) PREDFB = EIGLOC/(EIGLOC-1.) - 1.
      IF (PREDFK.GT.0.0.AND.PREDFB.GT.0.0) FMULT = PREDFB/PREDFK
C BEG AUG 2006
C     IF (FMULT.LT.1.0) FMULT = 1.0
      IF (FMULT.LT.1.0.OR.ISANDW(1).EQ.0) FMULT = 1.0
C END AUG 2006
C BEG NOV 1997
      IF ((KSTAR/KSTARZ).GT.1.1) FMULT = 1.0
C END NOV 1997
C BEG AUG 2006
C     IF (EKOITR.GT.1.1.AND.NPRT.GE.2)
      IF (EKOITR.GT.1.1.AND.NPRT.GE.0)
C END AUG 2006
     1 WRITE(IFILE,178) PREDFK*W0,W0,FMULT
C23456789012345678901234567890123456789012345678901234567890123456789012
  178 FORMAT(/' Prediction of amplitude "f" (Eq.(24),p54,CMAME 1993)'/
     1' of local deformation of discretized skin-stringer module from'/
     1' pre-calculation assumption that f = [EKOITR/(EKOITR-1) -1]*W0:'/
     1'                        f = [EKOITR/(EKOITR-1) -1]*W0 =',1PE12.4/
     1' in which EKOITR is the bifurcation buckling load factor from'/
     1' KOITER-type theory and W0 is the amplitude of the initial'/
     1' buckling modal imperfection:                      W0 =',1PE12.4/
     1' Factor by which "f" is to be multiplied to compensate for the'/
     1' prediction that the bifurcation buckling load factor from'/
     1' BOSOR4-type theory is smaller than that from KOITER theory:'/
     1' FMULT = [EBOSOR/(EBOSOR-1.)-1]/[EKOITR/(EKOITR-1.)-1]=',1PE12.4/
     1' FMULT, which is not permitted to be smaller than unity, is'/
     1' used primarily to compensate for the fact that transverse'/
     1' shear deformation effects are not properly  accounted for in'/
     1' the KOITER branch of PANDA2.'/)
C END OCT 1996
C
C********************************************************************
C BEGIN CALCULATION OF POST-LOCAL-BUCKLING EQUILIBRIUM STATE FROM
C KOITER THEORY
C*******************************************************************
C
C BEG AUG 1994
          MSTART = M
C END AUG 1994
          WDLKP1 = 0.
          WDLKP2 = 0.
          WDLKP3 = 0.
          DELKP1 = 0.
          DELKP2 = 0.
          DELKP3 = 0.
          KOUNTP = 0
          IFAIL  = 0
          IF (IMOD.EQ.0) THEN
             EKOISV = EKOITR
             IIIA = 0
             IIIAS= 0
C BEG AUG 1994
             IIIASS = 0
C END AUG 1994
C BEG JAN 1996
C            EKSMAL = 0.99
C            IF (ITYPE.EQ.1) EKSMAL = 0.9
C BEG APR 1997
C            EKSMAL = 1.5
             EKSMAL = 1.0
C END APR 1997
C END JAN 1996
             IF (ABS(EKOISV).GT.EKSMAL) THEN
                IIIA = 1
                IIIAS= 1
C BEG AUG 1994
                IIIASS=1
C END AUG 1994
             ENDIF
C BEG MAY 1997
C            IF (IZSTIF(1).EQ.1) THEN
C               IIIA = 1
C               IIIAS = 1
C               IIIASS= 1
C            ENDIF
C END MAY 1997
C BEG MAR 1996
             IF (WRATTP.GE.5.0.OR.WRATWB.GE.5.0.OR.WRATCN.GE.5.0)
     1       THEN
                IIIA = 1
                IIIAS= 1
                IIIASS=1
             ENDIF
C END MAR 1996
             ALFIX = 0.
             ALMAX = 1.0
             IF (ISTIF(1).EQ.4) ALMAX = 1.0
             ALBIG = 10.
          ENDIF
C
  172     CONTINUE
C
C BEG NOV 1994
C         IF (ISWWID.EQ.1) THEN
          IF (ISWWID.EQ.1.AND.WIDLM0.LT.1.0001) THEN
C END NOV 1994
             AL = 0.
             M  = 0.
             F  = 0.
C BEG JULY 1995
C BEG JUN 1996
             CALL AVESKN(F,AL,M,CX,E1SAVE,E2SAVE,E12SAV,N1SAVE,N2SAVE,
     1                   N12SAV,EPS2S,NXY,0.,CSN)
C END JUN 1996
C END JULY 1995
             GO TO 600
          ENDIF
C BEG JAN 1995
          IF (ISWLOC.EQ.1) THEN
             AL = 0.
             M  = 0.
             F  = 0.
C BEG JULY 1995
C BEG JUN 1996
             CALL AVESKN(F,AL,M,CX,E1SAVE,E2SAVE,E12SAV,N1SAVE,N2SAVE,
     1                   N12SAV,EPS2S,NXY,0.,CSN)
C END JUN 1996
C END JULY 1995
             GO TO 600
          ENDIF
C END JAN 1995
C BEG MAR 1996
C BEG JUN 1996
  599     CONTINUE
          IF (ISSKIP.EQ.1.OR.EKOITR.GT.1.E+16) THEN
             AL = 0.
             M  = 0.
             F  = 0.
C BEG JULY 1995
C BEG JUN 1996
             CALL AVESKN(F,AL,M,CX,E1SAVE,E2SAVE,E12SAV,N1SAVE,N2SAVE,
     1                   N12SAV,EPS2S,NXY,0.,CSN)
C END JUN 1996
C END JULY 1995
             GO TO 600
          ENDIF
C END MAR 1996
C
C BEG JUN 1996
          IDIDIT = 1
C END JUN 1996
          IF (ABS(EKOISV).LT.1.0) THEN
             F = 0.
             AL= ALFIX
             NOCONV = 0
             DELKAP = 0.
             IF (ISTIF(1).NE.0.AND.WRATWB.LT.1.0.AND.WRATTP.LT.1.0
     1        .AND.ICASE.EQ.1.AND.WRATCN.LT.1.0.AND.IBPRE.EQ.0) THEN
C
C  Calculate additional change in axial curvature, DELKP1, caused by
C  the shift in the location of the neutral axis for axial bending
C  when the panel skin buckles locally. The shift in neutral axis is
C  approximate because we don't know the tangent stiffness of the
C  locally postbuckled panel yet. DELREF = shift in neutral axis.
C  C44N = approx. bending stiffness of locally postbuckled panel about
C         the neutral axis for axial bending.
C
               DELREF = CX(1,4,5)/CX(1,1,5) - CSWIDE(1,4)/CSWIDE(1,1)
               C44N   = ABS(CSWIDE(4,4) -CSWIDE(1,4)**2/CSWIDE(1,1))
               AMPMLT = MIN(AMPLT2,AMPLIT)
               DELKP1 = (NX+NX0)*AMPMLT*DELREF*(1.-ABS(EKOITR))/C44N
               IF (DELKP1.GT.0.0.AND.ISTIF(1).NE.5) THEN
                  PI = 3.1415927
                  WDLKP1 = -DELKP1*B(2)**2/PI**2
                  IF (IBPRE.EQ.1.OR.IBPRE.EQ.2.OR.B(2).LT.AXIAL)
     1            WDLKP1 = -DELKP1*0.5*(B(2)**2/PI**2)
                  WDELKP = WDLKP1
                  EPSLD2(4) = EPSLOD(4) + DELKP1
C BEG FEB 1997
                  IF (NPRT.GE.1)
C END FEB 1997
     1               WRITE(IFILE,23) EPSLOD(4),NX+NX0,DELREF,C44N,
     1                               AMPMLT,DELKP1,WDLKP1,EPSLD2(4)
   23             FORMAT(/
     1' Modification of axial curvature change to account for'/
     1' post-local-buckling shift in the location of the'/
     1' neutral axis of the stiffened panel (simply-supported panel):'/
     1'  Change in axial curvature before local buckling     =',1PE12.4/
     1'  Axial resultant that causes bending, Nx + Nxo       =',1PE12.4/
     1'  Shift in the neutral axis due to local buckling     =',1PE12.4/
     1'  Axial bending rigidity (C44N) of postbuckled panel  =',1PE12.4/
     1'  Amplitude factor used here for bending amplification=',1PE12.4/
     1'  Increment in axial curvature from neutral axis shift=',1PE12.4/
     1'  Axial bowing between rings caused be neut.axis shift=',1PE12.4/
     1'  Change in axial curvature after neutral axis shift  =',1PE12.4)
C BEG DEC 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
                  CALL EPSAVE(FNPB,CS,CX,CY,NX,NY+FNYADD,NXY,ISTIF,NSEG,
     1             B,B2,H,W,W2,EPSLD2,ICOCUR,RESFIX,NX0,NY0+FNY0AD,NXY0,
     1             FARC,RNEW,EPSLDF,0.,ETHERM,RESFXL,RESEIG,0.,0.,0.,
     1             AMPLIT,IABT,CSN,0,FYRAT,0.,0.,8002)
C END DEC 2003
               ENDIF
             ENDIF
C BEG APR 1996
C            IF (ICWEB.EQ.0.AND.ITIP.EQ.0
             IF (ICWEB.EQ.0.AND.ITIP.EQ.0.AND.ISTIF(1).NE.5
C END APR 1996
     1                     .AND.ABS(NXY).GT.SQRT(NX**2+NY**2)
     1                     .AND.EKOITR.LT.0.5) M = SIGN(1.0,NXY)
 8002        CONTINUE
C
C  Obtain nonlinear solution for the three unknowns f,a,m in the
C  nonlinear post-local buckling problem described in the 1987 ASME
C  PVP paper published in PVP Vol. 121. (f = amplitude of local
C  buckles, "a" = "flattening" parameter, m = slope of post-local
C  buckling nodal lines. See Eqs. (12) and (24) in the 1987 PVP paper.)
C  In SUBROUTINE NEWTON the axial wavelength parameter N is held
C  constant. In this call to NEWTON, the amplitude W0 of the initial
C  local imperfection, which is assumed to be in the form of the
C  critical local buckling mode, is set equal to zero.
C
C BEG FEB 1997
             IF (NPRT.GE.1) WRITE(IFILE,'(A,I2)')
     1     ' ENTERING "NEWTON", LABEL=8002; IMOD=',IMOD
C END FEB 1997
             CALL NEWTON(0,NPRT,IFILE,CX,N,M,AL,F,NXY,E1SAVE,E2SAVE,
     1                E12SAV,N1SAVE,N2SAVE,N12SAV,EPS2S,EIGLOC,
     1                KOITER,EKOITR,F0,0,0.,NOCONV,IMOD,RESULT,
     1                ILOADS,JJJ,IW0,KOUNTW,KOUNTM,
     1                0.,KOUNTP,IFAIL,ICASE,CSN,WIMPL,WRATIO,IIIA,
     1                ITYPE,8002)
C BEG FEB 1997
             IF (NPRT.GE.1) WRITE(IFILE,'(A,2I2,/,A,1P,4E12.4)')
     1     ' LEAVING "NEWTON", LABEL=8002; IMOD,NOCONV=',IMOD,NOCONV,
     1     ' SOLN FROM "NEWTON": F,AL,M;  N=',F,AL,M,N
C END FEB 1997
             IF (IW0.EQ.1.AND.KOUNTW.LE.KOUNTM) GO TO 5
          ENDIF
      IKLOOP = 0
   20 CONTINUE
C
C BEG MAR 1996
C23456789012345678901234567890123456789012345678901234567890123456789012
      ILOGIC = IBEAM.EQ.0.AND.WRATWB.LT.1.0.AND.WRATTP.LT.1.0
     1                   .AND.WRATCN.LT.1.0.AND.DELCUX(1).GE.0.0
      IF (ILOGIC.AND.ISTIF(1).NE.0.AND.ISTIF(1).NE.5.AND.ICASE.EQ.1
C END MAR 1996
     1                 .AND.ABS(EKOISV).LT.1.0.AND.IKLOOP.GT.0)  THEN
C
C   CALCULATE AXIAL CHANGE IN CURVATURE INDUCED BY POST-LOCALLY-BUCKLED
C   SKIN PULLING ON THE STRINGERS AND CAUSING THEM TO BEND...
C
         DELREF = CSWIDE(1,4)/CSWIDE(1,1)
         C44N   = ABS(CSWIDE(4,4) -CSWIDE(1,4)**2/CSWIDE(1,1))
C BEG MAR 1996
C        RESAVE = ((B(1)-B2(1))*RESULT(1,1,1) +B2(1)*RESULT(1,2,1))/B(1)
         RESAVE = ((B(1)-B2(1))*(RESULT(1,1,1)+DELFCX(1,1))
     1                   +B2(1)*(RESULT(1,2,1)+DELFCX(1,2)))/B(1)
C END MAR 1996
         TRATIO = MIN(1.0,ABS(NTXBAR/RESAVE))
         DELFCE = -(RESAVE-(N1SAVE+NTXBAR))*(1.0 - TRATIO)
C BEG MAR 1996
C        WRITE(8,'(A,1P3E12.4)')
C    1   ' DELREF,C44N,RESAVE=',DELREF,C44N,RESAVE
C        WRITE(8,'(A,1P3E12.4)')' RESULT(1,1,1),RESULT(1,2,1),B(1)=',
C    1                            RESULT(1,1,1),RESULT(1,2,1),B(1)
C        WRITE(8,'(A,1P3E12.4)')' DELFCX(1,1),DELFCX(1,2)=',
C    1                            DELFCX(1,1),DELFCX(1,2)
C        WRITE(8,'(A,1P3E12.4)')' TRATIO,N1SAVE,DELFCE=',
C    1                            TRATIO,N1SAVE,DELFCE
C END MAR 1996
         IF (DELFCE.GT.0.0) THEN
            DELKP2 = (-RESAVE/ABS(RESAVE))*DELFCE*DELREF/C44N
            PI = 3.1415927
            WDLKP2 = -DELKP2*B(2)**2/PI**2
            IF (IBPRE.EQ.1.OR.IBPRE.EQ.2.OR.B(2).LT.AXIAL)
     1         WDLKP2 = -DELKP2*0.5*(B(2)**2/PI**2)
            WDELKP = WDLKP1 + WDLKP2
            EPSLD2(4) = EPSLOD(4) + DELKP1 + DELKP2
C BEG FEB 1997
            IF (NPRT.GE.1)
C END FEB 1997
     1        WRITE(IFILE,231) EPSLOD(4),RESAVE,N1SAVE+NTXBAR,1.-TRATIO,
     1                         DELFCE,DELREF,C44N,DELKP2,DELKP1,
     1                         WDLKP2,WDLKP1,WDELKP,EPSLD2(4)
         ENDIF
  231       FORMAT(/
     1' Modification of axial curvature change to account for'/
     1' post-local-buckling change in distribution of axial load, Nx:'/
     1'  Change in axial curvature before local buckling     =',1PE12.4/
     1'  Average axial resultant in skin and base, unbuckled =',1PE12.4/
     1'  Average axial resultant in skin and base,   buckled =',1PE12.4/
     1'  Fraction of axial resultant from non-thermal loads  =',1PE12.4/
     1'  Change in average resultant in skin and base from'/
     1'   non-thermal loads,   DELFCE*(non-thermal fraction) =',1PE12.4/
     1'  Distance from axial neutral axis to skin ref. surf. =',1PE12.4/
     1'  Axial bending rigidity (C44N) of unbuckled panel    =',1PE12.4/
     1'  Increment in axial curvature from Nx redistribution =',1PE12.4/
     1'  Increment in axial curvature from ref. surf. shift  =',1PE12.4/
     1'  Bowing amplitude from Nx redistribution             =',1PE12.4/
     1'  Bowing amplitude from reference surface shift       =',1PE12.4/
     1'  Bowing amplitude from both of previous two lines    =',1PE12.4/
     1'  Change in axial curvature after post-local-buckling =',1PE12.4)
C
      IF (N2SAVE.GT.0.0.AND.R.LT.0.0.AND.ISTIF(2).NE.0
     1                 .AND.ABS(NXY).GT.(0.1*SQRT(NX**2+NY**2))) THEN
C
C   CODING FOR AXIAL BENDING INDUCED BY POSTBUCKLED CURVED PANEL WITH
C   SIGNIFICANT IN-PLANE SHEAR. THE BENDING IS CAUSED BY THE HOOP LOAD
C   N2SAVE ACTING ALONG THE CHORD BETWEEN STRINGERS RATHER THAN TANGENT
C   TO THE CYLINDRICAL SHELL. THIS GIVES N2SAVE A COMPONENT NORMAL TO
C   THE UNDEFORMED CYLINDRICAL SHELL AT THE STRINGER LINE OF ATTACHMENT.
C   THIS NORMAL LOAD, GIVEN BY N2SAVE*B(1)/R, BENDS THE STRINGER. THE
C   STRATEGY IS PURSUED ONLY IF THE STRINGERS ARE INTERNAL (R IS NEGATIVE).
C   WITH STRINGER INTERNAL THIS INDUCED BENDING CAUSES THE SKIN TO BE
C   COMPRESSED EVEN MORE IN THE AXIAL DIRECTION, THUS DEEPENING THE BUCKLES.
C
C
         C44N   = ABS(CSWIDE(4,4) - CSWIDE(1,4)**2/CSWIDE(1,1))
         PI = 3.1415927
         FMOM = (N2SAVE*B(1)/ABS(R))*B(2)**2/(24.*B(1))
         FNCIRC = -N2SAVE*B(2)/ABS(R)
         DELKP3 = FMOM*(1.-ABS(EKOITR))/C44N
         WDLKP3 = -DELKP3*0.5*(B(2)**2/PI**2)
         EPSLD2(4) = EPSLOD(4) + DELKP1 + DELKP2 + DELKP3
         WDELKP = WDLKP1 + WDLKP2 + WDLKP3
C BEG FEB 1997
         IF (NPRT.GE.1) WRITE(IFILE,21) N2SAVE,N2SAVE*B(1)/ABS(R),FMOM,
C END FEB 1997
     1                                C44N,DELKP3,DELKP2,DELKP1,WDLKP3,
     1                                WDLKP2,WDLKP1,WDELKP,FNCIRC*ABS(R)
   21        FORMAT(/
     1' Modification of axial curvature change between rings'/
     1' to account for the post-local-buckling normal force N2*b/R'/
     1' applied by the buckled skin to the stringers (cylindrical'/
     1' panel with rings, internal stringers and significant Nxy):'/
     1'  Hoop resultant in locally postbuckled skin,      N2 =',1PE12.4/
     1'  Induced normal force that bends the stringer, N2*b/R=',1PE12.4/
     1'  Induced moment, panel midlength: M=N2(1/r)B(2)**2/24=',1PE12.4/
     1'  Axial bending rigidity (C44N) of postbuckled panel  =',1PE12.4/
     1'  Increment in axial curvature due to N2*b/R          =',1PE12.4/
     1'  Increment in axial curvature from Nx redistribution =',1PE12.4/
     1'  Increment in axial curvature from neutral axis shift=',1PE12.4/
     1'  Bowing amplitude midway between rings from N2*b/R   =',1PE12.4/
     1'  Bowing amplitude from Nx redistribution             =',1PE12.4/
     1'  Bowing amplitude from reference surface shift       =',1PE12.4/
     1'  Bowing amplitude from all postbuckling effects      =',1PE12.4/
     1'  Additional hoop compression carried by each ring'/
     1'   because diagonal tension field is along chord,-N2b2=',1PE12.4)
      ENDIF
      ENDIF
C
C BEG MAR 1996
      IF (IBEAM.EQ.0.AND.ISTIF(2).NE.0.AND.ABS(EKOISV).LT.1.0
     1                                .AND.IKLOOP.GT.0) THEN
C END MAR 1996
C
C  CALCULATE HOOP CHANGE IN CURVATURE INDUCED BY POST-LOCALLY-BUCKLED
C  SKIN PULLING ON THE RINGS AND CAUSING THEM TO BEND...
         DELREF = CSREDU(2,5)/CSREDU(2,2)
         C55N   = ABS(CSREDU(5,5) - DELREF*CSREDU(2,5))
C BEG MAR 1996
C        R2SAVE = ((B(2)-B2(2))*RESULT(2,1,1) +B2(2)*RESULT(1,2,2))/B(2)
         R2SAVE = ((B(2)-B2(2))*(RESULT(2,1,1)+DELFCX(2,1))
     1                   +B2(2)*(RESULT(1,2,2)+DELFCX(2,1)))/B(2)
         TRATIO = MIN(1.0,ABS(NTYBAR/R2SAVE))
C        DELFCE = -0.5*(RESULT(2,1,1)-(N2SAVE+NTYBAR))*(1.0 - TRATIO)
         DELFCE = -0.5*(RESULT(2,1,1)+DELFCX(2,1)
     1                               -(N2SAVE+NTYBAR))*(1.0 - TRATIO)
C END MAR 1996
         DELK2 = 0.0
C BEG MAR 1997
         IF (DELFCE.GT.0.0.AND.ICASE.EQ.1) THEN
C END MAR 1997
            DELCUR= 0.125*B(1)**2/R
            DELK2 = DELFCE*(DELREF+DELCUR)/C55N
            EPSLD2(5) = EPSLOD(5) + DELK2
C BEG FEB 1997
            IF (NPRT.GE.1)
C END FEB 1997
C BEG MAR 1996
C    1      WRITE(IFILE,22) EPSLOD(5),RESULT(2,1,1),N2SAVE+NTYBAR,
     1      WRITE(IFILE,22) EPSLOD(5),(RESULT(2,1,1)+DELFCX(2,1)),
     1                                              N2SAVE+NTYBAR,
C END MAR 1996
     1                   1.-TRATIO,DELFCE,DELREF,DELCUR,C55N,DELK2
   22           FORMAT(/
     1' Modification of hoop curvature change to account for the'/
     1' post-local-buckling moment applied by the skin to the rings:'/
     1'  Change in hoop curvature before local buckling      =',1PE12.4/
     1'  Average hoop resultant in skin before buckling      =',1PE12.4/
     1'  Average hoop resultant in skin after  buckling      =',1PE12.4/
     1'  Fraction of hoop resultant from non-thermal loads   =',1PE12.4/
     1'  Change in average resultant in skin and base from'/
     1'   non-thermal loads,   DELFCE*(non-thermal fraction) =',1PE12.4/
     1'  Distance from skin reference surface to neutral axis=',1PE12.4/
     1'  Load eccentricity from curvature:      0.125*b**2/R =',1PE12.4/
     1'  Hoop bending rigidity (C55N) of postbuckled panel   =',1PE12.4/
     1'  Increment in hoop curvature due to local buckling   =',1PE12.4)
         ENDIF
      ENDIF
C
      N = FNPB
C
C BEG DEC 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
         CALL EPSAVE(N,CS,CX,CY,NX,NY+FNYADD,NXY,ISTIF,NSEG,B,B2,H,W,W2,
     1              EPSLD2,ICOCUR,RESFIX,NX0,NY0+FNY0AD,NXY0,FARC,RNEW,
     1              EPSLDF,W0,ETHERM,RESFXL,RESEIG,0.,0.,0.,AMPLIT,IABT,
     1              CSN,0,FYRAT,0.,DELK2,8004)
C END DEC 2003
C
 8004    CONTINUE
C BEG MAY 1997
             IF (NPRT.GE.1) WRITE(IFILE,'(A,I2)')
     1     ' ENTERING "NEWTON", LABEL=8004; IMOD=',IMOD
C END MAY 1997
C  Refine the solution f,a,m, this time including the user-provided
C  amplitude W0 of the local imperfection:
         CALL NEWTON(0,NPRT,IFILE,CX,N,M,AL,F,NXY,E1SAVE,E2SAVE,
     1               E12SAV,N1SAVE,N2SAVE,N12SAV,EPS2S,EIGLOC,
     1               KOITER,EKOITR,F0,1,W0,NOCONV,IMOD,RESULT,
     1               ILOADS,JJJ,IW0,KOUNTW,KOUNTM,
     1               0.,KOUNTP,IFAIL,ICASE,CSN,WIMPL,WRATIO,IIIA,
     1               ITYPE,8004)
C BEG FEB 1997
         IF (NPRT.GE.1) WRITE(IFILE,'(A,2I2,/,A,1P,4E12.4)')
     1 ' LEAVING "NEWTON", LABEL=8004; IMOD,NOCONV=',IMOD,NOCONV,
     1 ' SOLN FROM "NEWTON": F,AL,M;  N=',F,AL,M,N
C END FEB 1997
         IIIAS = IIIA
C BEG AUG 1994
         IIIASS= IIIA
         F00SS = F
         A00SS = AL
         M00SS = M
         N00SS = N
C END AUG 1994
         IF (IMOD.EQ.0.AND.ABS(AL).GT.1.0) THEN
            IF (AL.LT.0.0.OR.AL.GT.10.) THEN
               ALFIX = -0.6
C BEG AUG 1994
               IIIASS= 1
C END AUG 1994
               IIIAS = 1
               IIIA = 1
               GO TO 172
            ENDIF
         ENDIF
         IF (IMOD.EQ.0.AND.AL.LT.-0.601) THEN
            ALFIX = -0.6
C BEG AUG 1994
            IIIASS= 1
C END AUG 1994
            IIIAS = 1
            IIIA = 1
            GO TO 172
         ENDIF
         IF (IW0.EQ.1.AND.KOUNTW.LE.KOUNTM) GO TO 5
C
         IF (ISTIF(1).NE.5.AND.ABS(EKOISV).LT.1.0.AND.IKLOOP.EQ.0) THEN
            IKLOOP = IKLOOP + 1
            GO TO 20
         ENDIF
C
C  ALLOW THE AXIAL WAVELENGTH TO VARY IN THE POST-LOCAL-BUCKLING REGIME:
C
         IF (IMOD.EQ.0) THEN
            IF (AL.EQ.0.0.AND.ABS(EKOISV).LT.0.9.AND.
     1        (WRATTP.GT.2.0.OR.WRATCN.GT.2.0.OR.WRATWB.GT.2.0)) THEN
               AL = -0.0001
            ENDIF
            ICONVS = 1
            FFBEF = F
            FALBEF= AL
            FMBEF = M
            FNBEF = N
            IIABEF=IIIA
            NWAVEK = 0
            FACTN1 = (3.1415927/(2.*B(2)))**2
         ENDIF
C        IF (ABS(EKOISV).LT.1.0.AND.ISTIF(1).NE.5.AND.F.NE.0.0
C    1  .AND.ICONVS.EQ.1.AND.MWAVE.GT.1.AND.AL.NE.0.) THEN
         IF (ABS(EKOISV).LT.1.0.AND.ISTIF(1).NE.5.AND.F.NE.0.0
C    1  .AND.ICONVS.EQ.1.AND.MWAVE.GT.1) THEN
C BEG NOV 1994
C BEG NOV 1995
C    1  .AND.ICONVS.EQ.1.AND.ISWWID.EQ.0
     1  .AND.ICONVS.EQ.1.AND.ISWWID.EQ.0.AND.IFIXMW.EQ.0
C END NOV 1995
     1                  .AND.(MWAVE.GT.1.OR.0.25*WIDLM0.GT.1.1)) THEN
C END NOV 1994
            IA = 0
            IF (IMOD.EQ.1) THEN
               F00 = FMOD0
               A00 = ALMOD0
               M00 = FMMOD0
               N0  = FNMOD0
               IF(NPRT.GT.1) WRITE(IFILE,'(A,1P,4E11.2)')
     1  ' VALUES FROM UNPERTURBED DESIGN: F0,A0,M0,N0=',F00,A00,M00,N0
C BEG DEC 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
               CALL EPSAVE(N0,CS,CX,CY,NX,NY+FNYADD,NXY,ISTIF,NSEG,B,B2,
     1         H,W,W2,EPSLD2,ICOCUR,RESFIX,NX0,NY0+FNY0AD,NXY0,FARC,
     1         RNEW,EPSLDF,W0,ETHERM,RESFXL,RESEIG,0.,0.,0.,AMPLIT,IABT,
     1         CSN,0,FYRAT,0.,DELK2,8010)
C END DEC 2003
               IF (IIIA.EQ.1) THEN
                  A00 = ALFIX
                  IA  = 1
               ENDIF
            ELSE
               F00= F
               A00= AL
               M00= M
               N0 = N
               IF (IIIA.EQ.1) THEN
                  IA = 1
                  A00 = ALFIX
               ENDIF
               ISAVE = 0
               ALSMAL = 0.02
C BEG DEC 1995
C              IF (ITYPE.EQ.1) ALSMAL = 0.1
               IF (ITYPE.EQ.1) ALSMAL = 0.02
C END DEC 1995
               IF (WRATWB.GT.5.0.OR.WRATTP.GT.5.0.OR.WRATCN.GT.5.0
     1                          .OR.ABS(AL).LT.ALSMAL) THEN
                  IIIAS = 1
                  A00 = -0.0001
                  IA =1
                  IIIA = 1
               ENDIF
            ENDIF
  174       CONTINUE
            IF (NWAVEK.EQ.1) THEN
               F = F00
               AL= A00
               M = M00
               N = N0
 8008          CONTINUE
C BEG MAY 1997
               IF (NPRT.GE.1) WRITE(IFILE,'(A,I2)')
     1       ' ENTERING "NEWTON", LABEL=8008; IMOD=',IMOD
C END MAY 1997
               CALL NEWTON(0,NPRT,IFILE,CX,N,M,AL,F,NXY,E1SAVE,E2SAVE,
     1               E12SAV,N1SAVE,N2SAVE,N12SAV,EPS2S,EIGLOC,
     1               KOITER,EKOITR,F0,1,W0,NOCONV,IMOD,RESULT,
     1               ILOADS,JJJ,IW0,KOUNTW,KOUNTM,
     1               0.,KOUNTP,IFAIL,ICASE,CSN,WIMPL,WRATIO,IIIA,
     1               ITYPE,8008)
C BEG APR 1997
C23456789012345678901234567890123456789012345678901234567890123456789012
               IF (NPRT.GE.1) WRITE(IFILE,'(A,2I2,/,A,1P,4E12.4)')
     1       ' LEAVING "NEWTON", LABEL=8008; IMOD,NOCONV=',IMOD,NOCONV,
     1       ' SOLN FROM "NEWTON": F,AL,M;  N=',F,AL,M,N
C END APR 1997
               IF (IMOD.EQ.0.AND.NPRT.GE.2)
     1         WRITE(IFILE,*)' AMPLITUDES: F00, F =', F00,F
C BEG AUG 1994
               IF (IMOD.EQ.0.AND.ABS(F00).GT.1.2*ABS(F)) THEN
C END AUG 1994
                  F = F00
                  AL= A00
                  M = M00
                  N = N0
               ENDIF
               GO TO 132
            ENDIF
  175       CONTINUE
            ICONV = 0
C BEG MAR 1997
            ITRY = 0
C END MAR 1997
 8010       CONTINUE
C
C  Try for solution with all four variables f,a,m,N free to change.
C  As initial values for f,a,m use the results from SUBROUTINE NEWTON.
C
            CALL ENERGY(NPRT,IFILE,B(2),CX,W0,F00,A00,M00,N0,F,AL,M,N,
     1                  ICONV,IA,0,0,8010)
C BEG APR 1997
C23456789012345678901234567890123456789012345678901234567890123456789012
            IF (NPRT.GE.1.AND.ICONV.EQ.1)
     1         WRITE(IFILE,'(A,I2,/,1P,4E12.4)')
     1       ' YES CONVERGENCE IN "ENERGY", LABEL=8010: IMOD,F,AL,M,N=',
     1                                                  IMOD,F,AL,M,N
C END APR 1997
            IF (ICONV.EQ.0) THEN
C  Solution failed to converge.
C BEG FEB 1997
C BEG APR 1997
C BEG NOV 2003
C              WRITE(IFILE,'(A,I2,/,1P,4E12.4)')
               IF (NPRT.GE.1) WRITE(IFILE,'(A,I2,/,1P,4E12.4)')
C END NOV 2003
     1' NO CONVERGENCE IN "ENERGY", LABEL=8010: IMOD,F00,A00,M00,N0=',
     1                                          IMOD,F00,A00,M00,N0
C END APR 1997
C END FEB 1997
C BEG MAR 1997
               IF (IMOD.EQ.1) THEN
                  IF (ITRY.NE.0) THEN
                     F00 = F00SSS
                     A00 = A00SSS
                     M00 = M00SSS
                     N0  = N00SSS
                     GO TO 8015
                  ENDIF
                  F00SSS = F00
                  A00SSS = A00
                  M00SSS = M00
                  N00SSS = N0
                  F00 = F00SS
                  A00 = A00SS
                  M00 = M00SS
                  N0  = N00SS
                  ITRY = 1
                  IF(NPRT.GT.1) WRITE(IFILE,'(A,1P,4E11.2)')
     1          ' VALUES FROM PERTURBED DESIGN (NEWTON): F0,A0,M0,N0=',
     1            F00,A00,M00,N0
C BEG DEC 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
                  CALL EPSAVE(N0,CS,CX,CY,NX,NY+FNYADD,NXY,ISTIF,NSEG,B,
     1            B2,H,W,W2,EPSLD2,ICOCUR,RESFIX,NX0,NY0+FNY0AD,NXY0,
     1            FARC,RNEW,EPSLDF,W0,ETHERM,RESFXL,RESEIG,0.,0.,0.,
     1            AMPLIT,IABT,CSN,0,FYRAT,0.,DELK2,8010)
C END DEC 2003
                  GO TO 8010
               ENDIF
 8015          CONTINUE
C END MAR 1997
               FDIFF = ABS(ABS(F00)-ABS(FAMPSV(ILOADS,ICASE)))/ABS(F00)
               FDIFF2= ABS(FAMPSV(ILOADS,ICASE))/B(1)
               IF ((ITYPE.EQ.3.OR.ITYPE.EQ.4
     1                        .OR.(ITYPE.EQ.5.AND.ISTEP.LT.(NSTEPU-1)))
     1            .AND.IMOD.EQ.0.AND.ABS(ALSAV(ILOADS,ICASE)).GE.0.2
     1            .AND.ABS(A00).GE.0.2.AND.FDIFF2.LT.0.5) THEN
                  WRITE(IFILE,*)' FROM PREVIOUS STEP: F,AL,M,N=',
     1               FAMPSV(ILOADS,ICASE),ALSAV(ILOADS,ICASE),
     1                FMSAV(ILOADS,ICASE),FNSAV(ILOADS,ICASE)
C BEG DEC 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
                  CALL EPSAVE(FNSAV(ILOADS,ICASE),CS,CX,CY,NX,NY+FNYADD,
     1                   NXY,ISTIF,NSEG,B,B2,H,W,W2,EPSLD2,ICOCUR,
     1                   RESFIX,NX0,NY0+FNY0AD,NXY0,FARC,RNEW,EPSLDF,W0,
     1                   ETHERM,RESFXL,RESEIG,0.,0.,0.,AMPLIT,IABT,CSN,
     1                   0,FYRAT,0.,DELK2,8020)
C END DEC 2003
                  ICONVA = 0
 8020             CONTINUE
C  Try using the converged solution at a previous step as starting vector...
                  CALL ENERGY(NPRT,IFILE,B(2),CX,W0,
     1                FAMPSV(ILOADS,ICASE),ALSAV(ILOADS,ICASE),
     1                 FMSAV(ILOADS,ICASE),FNSAV(ILOADS,ICASE),
     1                 F,AL,M,N,ICONVA,IA,0,0,8020)
C BEG APR 1997
C23456789012345678901234567890123456789012345678901234567890123456789012
                  IF (NPRT.GE.1.AND.ICONVA.EQ.1)
     1               WRITE(IFILE,'(A,I2,/,1P,4E12.4)')
     1       ' YES CONVERGENCE IN "ENERGY", LABEL=8020: IMOD,F,AL,M,N=',
     1                                                  IMOD,F,AL,M,N
C END APR 1997
                  IF (ICONVA.EQ.0) THEN
C BEG APR 1997
C23456789012345678901234567890123456789012345678901234567890123456789012
                     IF (NPRT.GE.1) WRITE(IFILE,'(A,I2,/,1P,4E12.4)')
     1  ' NO CONVERGENCE IN "ENERGY", LABEL=8020: IMOD,F00,A00,M00,N0=',
     1               IMOD,FAMPSV(ILOADS,ICASE),ALSAV(ILOADS,ICASE),
     1                    FMSAV(ILOADS,ICASE),FNSAV(ILOADS,ICASE)
C END APR 1997
                     FAMPSV(ILOADS,ICASE) = 0.
                     ALSAV(ILOADS,ICASE)  = 0.
                     FMSAV(ILOADS,ICASE)  = 0.
                     FNSAV(ILOADS,ICASE)  = 0.
 8025                CONTINUE
C BEG DEC 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
                     CALL EPSAVE(N0,CS,CX,CY,NX,NY+FNYADD,NXY,
     1                   ISTIF,NSEG,B,B2,H,W,W2,EPSLD2,ICOCUR,RESFIX,
     1                   NX0,NY0+FNY0AD,NXY0,FARC,RNEW,EPSLDF,W0,ETHERM,
     1                   RESFXL,RESEIG,0.,0.,0.,AMPLIT,IABT,CSN,0,
     1                   FYRAT,0.,DELK2,8025)
C END DEC 2003
                  ELSE
                     IF (IMOD.EQ.0.AND.IA.EQ.0
     1                            .AND.ABS(AL).GT.ALMAX
     1                            .AND.(AL.LT.0.0.OR.AL.GT.ALBIG)) THEN
                        ALFIX = -0.6
                        A00 = ALFIX
                        IIIA = 1
                        IA = 1
                        IF (ABS(AL).LE.ALMAX) THEN
                           N0 = N
                          M00 = M
                          F00 = F
 8027                     CONTINUE
C BEG DEC 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
                          CALL EPSAVE(N0,CS,CX,CY,NX,NY+FNYADD,NXY,
     1                      ISTIF,NSEG,B,B2,H,W,W2,EPSLD2,ICOCUR,RESFIX,
     1                      NX0,NY0+FNY0AD,NXY0,FARC,RNEW,EPSLDF,W0,
     1                      ETHERM,RESFXL,RESEIG,0.,0.,0.,AMPLIT,IABT,
     1                      CSN,0,FYRAT,0.,DELK2,8027)
C END DEC 2003
                        ENDIF
                        GO TO 174
                     ENDIF
                     ICONV = 1
                     ISAVE = 1
                     IF (N.LT.FACTN1) THEN
                        F = FAMPSV(ILOADS,ICASE)
                        AL= ALSAV(ILOADS,ICASE)
                        M = FMSAV(ILOADS,ICASE)
                        N = 0.99999*FACTN1
                     ENDIF
                     GO TO 130
                  ENDIF
               ENDIF
               ICONV1 = 0
               ALSMAL = 0.02
C              IF (ITYPE.EQ.1) ALSMAL = 0.2
C BEG DEC 1995
C              IF (ITYPE.EQ.1) ALSMAL = 0.1
               IF (ITYPE.EQ.1) ALSMAL = 0.02
C END DEC 1995
               IF (ABS(A00).LT.ALSMAL) THEN
                  IIIAS = 1
C                 A00 = 0.
                  A00 = -0.0001
                  ALFIX = A00
                  IA =1
                  IIIA = 1
               ENDIF
 8030          CONTINUE
C  Convergence with f,a,m,N free failed. Keep f,a,N free and fix m:
               CALL ENERGY(NPRT,IFILE,B(2),CX,W0,F00,A00,M00,N0,F,AL,
     1                     M,N,ICONV1,IA,1,0,8030)
C BEG FEB 1997
C BEG APR 1997
            IF (NPRT.GE.1.AND.ICONV1.EQ.1)
     1         WRITE(IFILE,'(A,I2,/,1P,4E12.4)')
     1       ' YES CONVERGENCE IN "ENERGY", LABEL=8030: IMOD,F,AL,M,N=',
     1                                                  IMOD,F,AL,M,N
               IF (ICONV1.EQ.0) WRITE(IFILE,'(A,I2,/,1P,4E12.4)')
     1' NO CONVERGENCE IN "ENERGY", LABEL=8030: IMOD,F00,A00,M00,N0=',
     1                                          IMOD,F00,A00,M00,N0
C END APR 1997
C END FEB 1997
            ELSE
C  Convergence with f,a,m,N free succeeded.
               IF (IMOD.EQ.0.AND.IA.EQ.0
     1                      .AND.ABS(AL).GT.ALMAX
     1                      .AND.(AL.LT.0.0.OR.AL.GT.ALBIG)) THEN
                  ALFIX = -0.6
                  A00 = ALFIX
                  IIIA = 1
                  IA = 1
                  IF (ABS(AL).LE.ALMAX) THEN
                     N0 = N
                    M00 = M
                    F00 = F
 8035               CONTINUE
C BEG DEC 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
                    CALL EPSAVE(N0,CS,CX,CY,NX,NY+FNYADD,NXY,ISTIF,
     1                NSEG,B,B2,H,W,W2,EPSLD2,ICOCUR,RESFIX,
     1                NX0,NY0+FNY0AD,NXY0,FARC,RNEW,EPSLDF,W0,ETHERM,
     1                RESFXL,RESEIG,0.,0.,0.,AMPLIT,IABT,CSN,
     1                0,FYRAT,0.,DELK2,8035)
C END DEC 2003
                  ENDIF
                  GO TO 174
               ENDIF
               ISAVE = 1
               GO TO 130
            ENDIF
            IF (ICONV1.EQ.1) THEN
C  Convergence with f,a,N free and m fixed succeeded. Now free m:
C BEG JULY 1995
               N00 = N0
               KOUN2B = 1
C END JULY 1995
               F00= F
               A00= AL
               M00= M
               N0 = N
 8037          CONTINUE
C BEG DEC 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
               CALL EPSAVE(N0,CS,CX,CY,NX,NY+FNYADD,NXY,ISTIF,NSEG,B,B2,
     1         H,W,W2,EPSLD2,ICOCUR,RESFIX,NX0,NY0+FNY0AD,NXY0,FARC,
     1         RNEW,EPSLDF,W0,ETHERM,RESFXL,RESEIG,0.,0.,0.,AMPLIT,IABT,
     1         CSN,0,FYRAT,0.,DELK2,8037)
C END DEC 2003
               IF (IA.EQ.0) THEN
                  AL = 0.
                  F  = 0.
                  NOCONV = 0
 8040             CONTINUE
C BEG MAY 1997
                  IF (NPRT.GE.1) WRITE(IFILE,'(A,I2)')
     1          ' ENTERING "NEWTON", LABEL=8040; IMOD=',IMOD
C END MAY 1997
C  Now f,a,m are free.  Fix N at new value found in ENERGY and refine
C  the three-variable solution f,a,m via NEWTON.  Use current value of
C  slope, m, as initial value and start with f=0 and a=0 and local
C  imperfection amplitude W0 = 0:
                  CALL NEWTON(0,NPRT,IFILE,CX,N,M,AL,F,NXY,E1SAVE,
     1               E2SAVE,E12SAV,N1SAVE,N2SAVE,N12SAV,EPS2S,EIGLOC,
     1               KOITER,EKOITR,F0,0,0.,NOCONV,IMOD,RESULT,
     1               ILOADS,JJJ,IW0,KOUNTW,KOUNTM,0.,KOUNTP,
     1               IFAIL,ICASE,CSN,WIMPL,WRATIO,IIIA,ITYPE,8040)
C BEG APR 1997
C23456789012345678901234567890123456789012345678901234567890123456789012
                  IF (NPRT.GE.1) WRITE(IFILE,'(A,2I2,/,A,1P,4E12.4)')
     1        ' LEAVING "NEWTON", LABEL=8040; IMOD,NOCONV=',IMOD,NOCONV,
     1          ' SOLN FROM "NEWTON": F,AL,M;  N=',F,AL,M,N
C END APR 1997
                  IF (IMOD.EQ.0.AND.IIIA.EQ.1) THEN
                     F = F00
                     AL= A00
                     M = M00
                     N = N0
                     IIIA = 0
                     NOCONV = 0
                  ENDIF
 8050             CONTINUE
C BEG MAY 1997
                  IF (NPRT.GE.1) WRITE(IFILE,'(A,I2)')
     1          ' ENTERING "NEWTON", LABEL=8050; IMOD=',IMOD
C END MAY 1997
C  Continue with the three-variable (f,a,m) problem with W0 = given value:
                  CALL NEWTON(0,NPRT,IFILE,CX,N,M,AL,F,NXY,E1SAVE,
     1               E2SAVE,E12SAV,N1SAVE,N2SAVE,N12SAV,EPS2S,EIGLOC,
     1               KOITER,EKOITR,F0,1,W0,NOCONV,IMOD,RESULT,
     1               ILOADS,JJJ,IW0,KOUNTW,KOUNTM,0.,KOUNTP,
     1               IFAIL,ICASE,CSN,WIMPL,WRATIO,IIIA,ITYPE,8050)
C BEG APR 1997
C23456789012345678901234567890123456789012345678901234567890123456789012
                  IF (NPRT.GE.1) WRITE(IFILE,'(A,2I2,/,A,1P,4E12.4)')
     1        ' LEAVING "NEWTON", LABEL=8050; IMOD,NOCONV=',IMOD,NOCONV,
     1          ' SOLN FROM "NEWTON": F,AL,M;  N=',F,AL,M,N
C END APR 1997
                  IF (F.EQ.0.) THEN
C BEG JUL 1999
                    IF (EKOITR.GT.0.95.AND.EKOITR.LT.1.05) THEN
                      ICONV = 0
                      IF (NPRT.GE.1)
     1                 WRITE(IFILE,'(A,A,/,A,1P,4E12.4)')
     1               ' BAD SOLUTION REJECTED;',
     1               ' SOLUTION AT LABEL 8004 ACCEPTED INSTEAD:',
     1               ' F,AL,M,N=',F00SS,A00SS,M00SS,N00SS
                      GO TO 130
                    ELSE
                      WRITE(IFILE,8051)
 8051                 FORMAT(/ ' ************ RUN ABORT *************'/
     1             ' THERE APPEARS TO BE NO SOLUTION TO THE NONLINEAR'/
     1             ' POST-LOCAL-BUCKLING PROBLEM FOR THIS GEOMETRY'/
     1             ' AND LOADING. USE "CHANGE" TO CHANGE DIMENSIONS'/
     1             ' AND TRY AGAIN.'/
     1             ' **************** RUN ABORT ********************'/)
                      CALL ERREX
                    ENDIF
C END JUL 1999
                  ENDIF
                  IF (ABS(F/F00).LT.0.5.OR.ABS(F/F00).GT.2.0) THEN
                     F = F00
                     AL= A00
                     M = M00
                     N = N0
                     IF (NPRT.GT.1) THEN
                      WRITE(IFILE,*)' SOLUTION NOT ACCEPTABLE.'
                      WRITE(IFILE,*)' A PREVIOUS ONE IS BEING USED.'
                      WRITE(IFILE,'(A,1P,4E11.2)')
     1              ' NEW VALUES FOR UNPERTURBED DESIGN: F,A,M,N=',
     1                F,AL,M,N
                     ENDIF
                  ENDIF
                  F00= F
                  A00= AL
                  M00= M
                  N0 = N
               ENDIF
               ICONV2 = 0
 8060          CONTINUE
C  Next, attempt the four-variable (f,a,m,N) problem with f,a,m,N free:
               CALL ENERGY(NPRT,IFILE,B(2),CX,W0,F00,A00,M00,N0,F,AL,
     1                     M,N,ICONV2,IA,0,0,8060)
C BEG APR 1997
C23456789012345678901234567890123456789012345678901234567890123456789012
               IF (NPRT.GE.1.AND.ICONV2.EQ.1)
     1            WRITE(IFILE,'(A,I2,/,1P,4E12.4)')
     1       ' YES CONVERGENCE IN "ENERGY", LABEL=8060: IMOD,F,AL,M,N=',
     1                                                  IMOD,F,AL,M,N
C END APR 1997
               IF (ICONV2.EQ.0) THEN
C BEG APR 1997
C23456789012345678901234567890123456789012345678901234567890123456789012
                  IF (NPRT.GE.1) WRITE(IFILE,'(A,I2,/,1P,4E12.4)')
     1  ' NO CONVERGENCE IN "ENERGY", LABEL=8060: IMOD,F00,A00,M00,N0=',
     1                                            IMOD,F00,A00,M00,N0
C END APR 1997
C  Convergence with f,a,m,N free failed again. First, see if the
C  axial wavenumber parameter N changed a lot. If it did, then
C  try again to find a solution with ENERGY with the m fixed. If
C  this try fails, accept the solution
C  provided by NEWTON or the last converged solution from ENERGY:
                  F = F00
                  AL= A00
                  M = M00
                  N = N0
C BEG JULY 1995
                  DIFN = ABS(N00 - N0)/ABS(N0)
                  IF (NPRT.GE.2.AND.(KOUN2B.GT.3.OR.DIFN.LE.0.1))
     1            WRITE(IFILE,*)' Not attempting f,a,N free, fixed m'
                  IF (NPRT.GE.2.AND.DIFN.LE.0.1) WRITE(IFILE,*)
     1            ' because change in axial wavelength insufficient.'
                  IF (KOUN2B.LE.3.AND.DIFN.GT.0.1) THEN
                     ICNV2B = 0
 8063                CONTINUE
C  Convergence with f,a,m,N free failed. Keep f,a,N free and fix m:
                     CALL ENERGY(NPRT,IFILE,B(2),CX,W0,F00,A00,M00,
     1                           N0,F,AL,M,N,ICNV2B,IA,1,0,8063)
C BEG APR 1997
C23456789012345678901234567890123456789012345678901234567890123456789012
                     IF (NPRT.GE.1.AND.ICNV2B.EQ.1)
     1                 WRITE(IFILE,'(A,I2,/,1P,4E12.4)')
     1       ' YES CONVERGENCE IN "ENERGY", LABEL=8063: IMOD,F,AL,M,N=',
     1                                                  IMOD,F,AL,M,N
C END APR 1997
                     IF (ICNV2B.EQ.1) THEN
                        N00 = N0
                        F00 = F
                        A00 = AL
                        M00 = M
                         N0 = N
                        IF (NPRT.GE.2) WRITE(IFILE,*)
     1                ' LOOPING BACK TO 8037, LOOP NO.',KOUN2B
                        KOUN2B = KOUN2B + 1
                        GO TO 8037
                     ELSE
C BEG APR 1997
C23456789012345678901234567890123456789012345678901234567890123456789012
                        IF (NPRT.GE.1) WRITE(IFILE,'(A,I2,/,1P,4E12.4)')
     1  ' NO CONVERGENCE IN "ENERGY", LABEL=8063: IMOD,F00,A00,M00,N0=',
     1                                            IMOD,F00,A00,M00,N0
C END APR 1997
C  The second try with m fixed fails.  Accept the solution
C  provided by NEWTON or the last converged solution from ENERGY:
                        F = F00
                        AL= A00
                        M = M00
                        N = N0
                     ENDIF
                  ENDIF
C END JULY 1995
               ENDIF
               IF (IMOD.EQ.0.AND.IA.EQ.0
     1                      .AND.ABS(AL).GT.ALMAX
     1                      .AND.(AL.LT.0.0.OR.AL.GT.ALBIG)) THEN
                  ALFIX = -0.6
                  A00 = ALFIX
                  IIIA = 1
                  IA = 1
                  IF (ABS(AL).LE.ALMAX) THEN
                     N0 = N
                    M00 = M
                    F00 = F
 8065               CONTINUE
C BEG DEC 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
                    CALL EPSAVE(N0,CS,CX,CY,NX,NY+FNYADD,NXY,ISTIF,
     1                NSEG,B,B2,H,W,W2,EPSLD2,ICOCUR,RESFIX,
     1                NX0,NY0+FNY0AD,NXY0,FARC,RNEW,EPSLDF,W0,ETHERM,
     1                RESFXL,RESEIG,0.,0.,0.,AMPLIT,IABT,CSN,
     1                0,FYRAT,0.,DELK2,8065)
C END DEC 2003
                  ENDIF
                  GO TO 174
               ENDIF
C BEG JULY 1995
               IF (ABS(F).GT.(0.5*B(1))) THEN
                  WRITE(IFILE,8156) F, B(1)
C                 CALL ERREX
                  IF (IMOD.EQ.0) IESCAP = 1
               ENDIF
C END JULY 1995
               ICONV = 1
               ISAVE = 1
               GO TO 130
            ELSE
               ICONV2 = 0
 8070          CONTINUE
C  Convergence with f,a,N free and m fixed failed. Try fixing "a" and m:
               CALL ENERGY(NPRT,IFILE,B(2),CX,W0,F00,A00,M00,N0,F,AL,
     1                     M,N,ICONV2,1,1,0,8070)
C BEG FEB 1997
C BEG APR 1997
               IF (NPRT.GE.1.AND.ICONV2.EQ.1)
     1            WRITE(IFILE,'(A,I2,/,1P,4E12.4)')
     1       ' YES CONVERGENCE IN "ENERGY", LABEL=8070: IMOD,F,AL,M,N=',
     1                                                  IMOD,F,AL,M,N
               IF (ICONV2.EQ.0) WRITE(IFILE,'(A,I2,/,1P,4E12.4)')
     1' NO CONVERGENCE IN "ENERGY", LABEL=8070: IMOD,F00,A00,M00,N0=',
     1                                          IMOD,F00,A00,M00,N0
C END APR 1997
C END FEB 1997
               IF (ICONV2.EQ.1) THEN
C  Convergence with f,N free and a,m fixed succeeded now free "a":
C BEG JULY 1995
                  N00 = N0
                  KOUN2B = 1
C END JULY 1995
                  F00= F
                  A00= AL
                  M00= M
                  N0 = N
 8075             CONTINUE
C BEG DEC 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
                  CALL EPSAVE(N0,CS,CX,CY,NX,NY+FNYADD,NXY,ISTIF,NSEG,B,
     1            B2,H,W,W2,EPSLD2,ICOCUR,RESFIX,NX0,NY0+FNY0AD,NXY0,
     1            FARC,RNEW,EPSLDF,W0,ETHERM,RESFXL,RESEIG,0.,0.,0.,
     1            AMPLIT,IABT,CSN,0,FYRAT,0.,DELK2,8075)
C END DEC 2003
                  IF (IA.EQ.0) THEN
                     AL = 0.
                     F  = 0.
                     NOCONV = 0
 8080                CONTINUE
C BEG MAY 1997
                     IF (NPRT.GE.1) WRITE(IFILE,'(A,I2)')
     1             ' ENTERING "NEWTON", LABEL=8080; IMOD=',IMOD
C END MAY 1997
C  Now f,a,m are free.  Fix N at new value found in ENERGY and refine
C  the three-variable solution f,a,m via NEWTON.  Use current value of
C  slope, m, as initial value and start with f=0 and a=0 and local
C  imperfection amplitude W0 = 0:
                     CALL NEWTON(0,NPRT,IFILE,CX,N,M,AL,F,NXY,E1SAVE,
     1                  E2SAVE,E12SAV,N1SAVE,N2SAVE,N12SAV,EPS2S,
     1                  EIGLOC,KOITER,EKOITR,F0,0,0.,NOCONV,IMOD,
     1                  RESULT,ILOADS,JJJ,IW0,KOUNTW,KOUNTM,0.,
     1                  KOUNTP,IFAIL,ICASE,CSN,WIMPL,WRATIO,IIIA,ITYPE,
     1                  8080)
C BEG APR 1997
C23456789012345678901234567890123456789012345678901234567890123456789012
                     IF (NPRT.GE.1) WRITE(IFILE,'(A,2I2,/,A,1P,4E12.4)')
     1        ' LEAVING "NEWTON", LABEL=8080; IMOD,NOCONV=',IMOD,NOCONV,
     1             ' SOLN FROM "NEWTON": F,AL,M;  N=',F,AL,M,N
C END APR 1997
                     IF (IMOD.EQ.0.AND.IIIA.EQ.1) THEN
                        F = F00
                        AL= A00
                        M = M00
                        N = N0
                        IIIA = 0
                        NOCONV = 0
                     ENDIF
 8090                CONTINUE
C BEG MAY 1997
                     IF (NPRT.GE.1) WRITE(IFILE,'(A,I2)')
     1             ' ENTERING "NEWTON", LABEL=8090; IMOD=',IMOD
C END MAY 1997
C  Continue with the three-variable (f,a,m) problem with W0 = given value:
                     CALL NEWTON(0,NPRT,IFILE,CX,N,M,AL,F,NXY,E1SAVE,
     1                  E2SAVE,E12SAV,N1SAVE,N2SAVE,N12SAV,EPS2S,
     1                  EIGLOC,KOITER,EKOITR,F0,1,W0,NOCONV,IMOD,
     1                  RESULT,ILOADS,JJJ,IW0,KOUNTW,KOUNTM,0.,
     1                  KOUNTP,IFAIL,ICASE,CSN,WIMPL,WRATIO,IIIA,ITYPE,
     1                  8090)
C BEG APR 1997
C23456789012345678901234567890123456789012345678901234567890123456789012
                     IF (NPRT.GE.1) WRITE(IFILE,'(A,2I2,/,A,1P,4E12.4)')
     1        ' LEAVING "NEWTON", LABEL=8090; IMOD,NOCONV=',IMOD,NOCONV,
     1             ' SOLN FROM "NEWTON": F,AL,M;  N=',F,AL,M,N
C END APR 1997
                     IF (F.EQ.0.) THEN
C BEG JUL 1999
                       IF (EKOITR.GT.0.95.AND.EKOITR.LT.1.05) THEN
                         ICONV = 0
                         IF (NPRT.GE.1)
     1                    WRITE(IFILE,'(A,A,/,A,1P,4E12.4)')
     1                  ' BAD SOLUTION REJECTED;',
     1                  ' SOLUTION AT LABEL 8004 ACCEPTED INSTEAD:',
     1                  ' F,AL,M,N=',F00SS,A00SS,M00SS,N00SS
                         GO TO 130
                       ELSE
                         WRITE(IFILE,8051)
                         CALL ERREX
                       ENDIF
C END JUL 1999
                     ENDIF
                     IF (ABS(F/F00).LT.0.5.OR.ABS(F/F00).GT.2.0) THEN
                        F = F00
                        AL= A00
                        M = M00
                        N = N0
                        IF (NPRT.GT.1) THEN
                         WRITE(IFILE,*)' SOLUTION NOT ACCEPTABLE.'
                         WRITE(IFILE,*)' A PREVIOUS ONE IS BEING USED.'
                         WRITE(IFILE,'(A,1P,4E11.2)')
     1                 ' NEW VALUES FOR UNPERTURBED DESIGN: F,A,M,N=',
     1                   F,AL,M,N
                        ENDIF
                     ENDIF
                     F00= F
                     A00= AL
                     M00= M
                     N0 = N
                  ENDIF
                  ICONV3 = 0
 8100             CONTINUE
C  We have a new solution for f,a,m from NEWTON. Now go to the
C  four-variable theory, but do it first with slope m fixed because
C  convergence failed with m free in the initial call to ENERGY:
                  CALL ENERGY(NPRT,IFILE,B(2),CX,W0,F00,A00,M00,N0,F,
     1                     AL,M,N,ICONV3,IA,1,0,8100)
C BEG APR 1997
C23456789012345678901234567890123456789012345678901234567890123456789012
                  IF (NPRT.GE.1.AND.ICONV3.EQ.1)
     1               WRITE(IFILE,'(A,I2,/,1P,4E12.4)')
     1       ' YES CONVERGENCE IN "ENERGY", LABEL=8100: IMOD,F,AL,M,N=',
     1                                                  IMOD,F,AL,M,N
C END APR 1997
                  IF (ICONV3.EQ.0) THEN
C BEG APR 1997
C23456789012345678901234567890123456789012345678901234567890123456789012
                     IF (NPRT.GE.1) WRITE(IFILE,'(A,I2,/,1P,4E12.4)')
     1  ' NO CONVERGENCE IN "ENERGY", LABEL=8100: IMOD,F00,A00,M00,N0=',
     1                                            IMOD,F00,A00,M00,N0
C END APR 1997
C  Convergence with f,a,N free and m fixed failed. First, see if the
C  axial wavenumber parameter N changed a lot. If it did, then
C  try again to find a solution with ENERGY with use of the "8140" 
C  strategy.  If this try fails, accept the solution
C  provided by NEWTON or the last converged solution from ENERGY:
                     F = F00
                     AL= A00
                     M = M00
                     N = N0
C BEG JULY 1995
                     DIFN = ABS(N00 - N0)/ABS(N0)
C23456789012345678901234567890123456789012345678901234567890123456789012
                     IF (NPRT.GE.2.AND.(KOUN2B.GT.3.OR.DIFN.LE.0.1))
     1               WRITE(IFILE,*)
     1               ' Not attempting to follow "8140" strategy'
                     IF (NPRT.GE.2.AND.DIFN.LE.0.1) WRITE(IFILE,*)
     1               ' because change in axial wavelength insufficient.'
                     IF (KOUN2B.LE.3.AND.DIFN.GT.0.1) THEN
                        ICNV2B = 0
 8103                   CONTINUE
C  Convergence with f,a,N free failed. Follow "8140" strategy:
                        CALL ENERGY(NPRT,IFILE,B(2),CX,0.,F00,A00,
     1                        M00,N0,F,AL,M,N,ICNV2B,IA,1,1,8103)
C BEG APR 1997
C23456789012345678901234567890123456789012345678901234567890123456789012
                        IF (NPRT.GE.1.AND.ICNV2B.EQ.1)
     1                     WRITE(IFILE,'(A,I2,/,1P,4E12.4)')
     1       ' YES CONVERGENCE IN "ENERGY", LABEL=8103: IMOD,F,AL,M,N=',
     1                                                  IMOD,F,AL,M,N
C END APR 1997
                        IF (ICNV2B.EQ.1) THEN
                           N00 = N0
                           F00 = F
                           A00 = AL
                           M00 = M
                            N0 = N
                           IF (NPRT.GE.2) WRITE(IFILE,*)
     1                   ' LOOPING BACK TO 8075, LOOP NO.',KOUN2B
                           KOUN2B = KOUN2B + 1
                           GO TO 8075
                        ELSE
C BEG APR 1997
C23456789012345678901234567890123456789012345678901234567890123456789012
                           IF (NPRT.GE.1)
     1                        WRITE(IFILE,'(A,I2,/,1P,4E12.4)')
     1  ' NO CONVERGENCE IN "ENERGY", LABEL=8103: IMOD,F00,A00,M00,N0=',
     1                                            IMOD,F00,A00,M00,N0
C END APR 1997
C  The "8140" strategy fails.  Accept the solution
C  provided by NEWTON or the last converged solution from ENERGY:
                           F = F00
                           AL= A00
                           M = M00
                           N = N0
                        ENDIF
                     ENDIF
C  Convergence with f,a,N free and m fixed failed. Accept the solution
C  provided by NEWTON or the last converged solution from ENERGY:
                     IF (ABS(F).GT.(0.5*B(1))) THEN
                        WRITE(IFILE,8156) F, B(1)
C                       CALL ERREX
                        IF (IMOD.EQ.0) IESCAP = 1
                     ENDIF
C END JULY 1995
                     ICONV = 1
                     GO TO 130
                  ELSE
C  Convergence with f,a,N free and m fixed succeeded. Next, free m.
C BEG JULY 1995
                     N00 = N0
                     KOUN2B = 1
 8104                CONTINUE
C END JULY 1995
                     IF (IMOD.EQ.0.AND.IA.EQ.0
     1                            .AND.ABS(AL).GT.ALMAX
     1                            .AND.(AL.LT.0.0.OR.AL.GT.ALBIG)) THEN
                        ALFIX = -0.6
                        A00 = ALFIX
                        IIIA = 1
                        IA = 1
                        IF (ABS(AL).LE.ALMAX) THEN
                           N0 = N
                          M00 = M
                          F00 = F
 8105                     CONTINUE
C BEG DEC 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
                          CALL EPSAVE(N0,CS,CX,CY,NX,NY+FNYADD,NXY,
     1                      ISTIF,NSEG,B,B2,H,W,W2,EPSLD2,ICOCUR,RESFIX,
     1                      NX0,NY0+FNY0AD,NXY0,FARC,RNEW,EPSLDF,W0,
     1                      ETHERM,RESFXL,RESEIG,0.,0.,0.,AMPLIT,IABT,
     1                      CSN,0,FYRAT,0.,DELK2,8105)
C END DEC 2003
                        ENDIF 
                        GO TO 174
                     ENDIF
                     F00= F
                     A00= AL
                     M00= M
                     N0 = N
 8107                CONTINUE
C BEG DEC 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
                     CALL EPSAVE(N0,CS,CX,CY,NX,NY+FNYADD,NXY,ISTIF,
     1               NSEG,B,B2,H,W,W2,EPSLD2,ICOCUR,RESFIX,NX0,
     1               NY0+FNY0AD,NXY0,FARC,RNEW,EPSLDF,W0,ETHERM,RESFXL,
     1               RESEIG,0.,0.,0.,AMPLIT,IABT,CSN,0,FYRAT,0.,DELK2,
     1               8107)
C END DEC 2003
                     IF (IA.EQ.0) THEN
                        AL = 0.
                        F  = 0.
                        NOCONV = 0
 8110                   CONTINUE
C BEG MAY 1997
                        IF (NPRT.GE.1) WRITE(IFILE,'(A,I2)')
     1                ' ENTERING "NEWTON", LABEL=8110; IMOD=',IMOD
C END MAY 1997
C  Now f,a,m are free.  Fix N at new value found in ENERGY and refine
C  the three-variable solution f,a,m via NEWTON.  Use current value of
C  slope, m, as initial value and start with f=0 and a=0 and local
C  imperfection amplitude W0 = 0:
                        CALL NEWTON(0,NPRT,IFILE,CX,N,M,AL,F,NXY,E1SAVE,
     1                     E2SAVE,E12SAV,N1SAVE,N2SAVE,N12SAV,EPS2S,
     1                     EIGLOC,KOITER,EKOITR,F0,0,0.,NOCONV,IMOD,
     1                     RESULT,ILOADS,JJJ,IW0,KOUNTW,KOUNTM,0.,
     1                     KOUNTP,IFAIL,ICASE,CSN,WIMPL,WRATIO,IIIA,
     1                     ITYPE,8110)
C BEG APR 1997
C23456789012345678901234567890123456789012345678901234567890123456789012
                     IF (NPRT.GE.1) WRITE(IFILE,'(A,2I2,/,A,1P,4E12.4)')
     1        ' LEAVING "NEWTON", LABEL=8110; IMOD,NOCONV=',IMOD,NOCONV,
     1             ' SOLN FROM "NEWTON": F,AL,M;  N=',F,AL,M,N
C END APR 1997
                        IF (IMOD.EQ.0.AND.IIIA.EQ.1) THEN
                           F = F00
                           AL= A00
                           M = M00
                           N = N0
                           IIIA = 0
                           NOCONV = 0
                        ENDIF
 8120                   CONTINUE
C BEG MAY 1997
                        IF (NPRT.GE.1) WRITE(IFILE,'(A,I2)')
     1                ' ENTERING "NEWTON", LABEL=8120; IMOD=',IMOD
C END MAY 1997
C  Continue with the three-variable (f,a,m) problem with W0 = given value:
                        CALL NEWTON(0,NPRT,IFILE,CX,N,M,AL,F,NXY,E1SAVE,
     1                     E2SAVE,E12SAV,N1SAVE,N2SAVE,N12SAV,EPS2S,
     1                     EIGLOC,KOITER,EKOITR,F0,1,W0,NOCONV,IMOD,
     1                     RESULT,ILOADS,JJJ,IW0,KOUNTW,KOUNTM,0.,
     1                     KOUNTP,IFAIL,ICASE,CSN,WIMPL,WRATIO,IIIA,
     1                     ITYPE,8120)
C BEG APR 1997
C23456789012345678901234567890123456789012345678901234567890123456789012
                     IF (NPRT.GE.1) WRITE(IFILE,'(A,2I2,/,A,1P,4E12.4)')
     1        ' LEAVING "NEWTON", LABEL=8120; IMOD,NOCONV=',IMOD,NOCONV,
     1             ' SOLN FROM "NEWTON": F,AL,M;  N=',F,AL,M,N
C END APR 1997
                        IF (F.EQ.0.) THEN
C BEG JUL 1999
                          IF (EKOITR.GT.0.95.AND.EKOITR.LT.1.05) THEN
                            ICONV = 0
                            IF (NPRT.GE.1)
     1                       WRITE(IFILE,'(A,A,/,A,1P,4E12.4)')
     1                     ' BAD SOLUTION REJECTED;',
     1                     ' SOLUTION AT LABEL 8004 ACCEPTED INSTEAD:',
     1                     ' F,AL,M,N=',F00SS,A00SS,M00SS,N00SS
                            GO TO 130
                          ELSE
                            WRITE(IFILE,8051)
                            CALL ERREX
                          ENDIF
C END JUL 1999
                        ENDIF
                        IF (ABS(F/F00).LT.0.5.OR.ABS(F/F00).GT.2.0) THEN
                           F = F00
                           AL= A00
                           M = M00
                           N = N0
                           IF (NPRT.GT.1) THEN
                            WRITE(IFILE,*)' SOLUTION NOT ACCEPTABLE.'
                          WRITE(IFILE,*)' A PREVIOUS ONE IS BEING USED.'
                            WRITE(IFILE,'(A,1P,4E11.2)')
     1                   ' NEW VALUES FOR UNPERTURBED DESIGN: F,A,M,N=',
     1                      F,AL,M,N
                           ENDIF
                        ENDIF
                        F00= F
                        A00= AL
                        M00= M
                        N0 = N
                     ENDIF
                     ICONV4 = 0
 8130                CONTINUE
C  We have a new solution for f,a,m from NEWTON. Now go to the
C  four-variable theory, this time with all four variables f,a,m,N free:
                     CALL ENERGY(NPRT,IFILE,B(2),CX,W0,F00,A00,M00,N0,F,
     1                           AL,M,N,ICONV4,IA,0,0,8130)
C BEG APR 1997
C23456789012345678901234567890123456789012345678901234567890123456789012
                     IF (NPRT.GE.1.AND.ICONV4.EQ.1)
     1                  WRITE(IFILE,'(A,I2,/,1P,4E12.4)')
     1       ' YES CONVERGENCE IN "ENERGY", LABEL=8130: IMOD,F,AL,M,N=',
     1                                                  IMOD,F,AL,M,N
C END APR 1997
                     IF (ICONV4.EQ.0) THEN
C BEG APR 1997
C23456789012345678901234567890123456789012345678901234567890123456789012
                        IF (NPRT.GE.1) WRITE(IFILE,'(A,I2,/,1P,4E12.4)')
     1  ' NO CONVERGENCE IN "ENERGY", LABEL=8130: IMOD,F00,A00,M00,N0=',
     1                                            IMOD,F00,A00,M00,N0
C END APR 1997
C  Convergence with f,a,m,N free failed again. First, see if the
C  axial wavenumber parameter N changed a lot. If it did, then
C  try again to find a solution with ENERGY with the m fixed. If
C  this try fails, accept the solution
C  provided by NEWTON or the last converged solution from ENERGY:
                        F = F00
                        AL= A00
                        M = M00
                        N = N0
C BEG JULY 1995
                        DIFN = ABS(N00 - N0)/ABS(N0)
C23456789012345678901234567890123456789012345678901234567890123456789012
                        IF (NPRT.GE.2.AND.(KOUN2B.GT.3.OR.DIFN.LE.0.1))
     1                  WRITE(IFILE,*)
     1                  ' Not attempting f,a,N fee and m fixed'
                        IF (NPRT.GE.2.AND.DIFN.LE.0.1) WRITE(IFILE,*)
     1               ' because change in axial wavelength insufficient.'
                        IF (KOUN2B.LE.3.AND.DIFN.GT.0.1) THEN
                           ICNV2B = 0
 8133                      CONTINUE
C  Convergence with f,a,m,N free failed. Keep f,a,N free and fix m:
                           CALL ENERGY(NPRT,IFILE,B(2),CX,W0,F00,A00,
     1                           M00,N0,F,AL,M,N,ICNV2B,IA,1,0,8133)
C BEG APR 1997
C23456789012345678901234567890123456789012345678901234567890123456789012
                           IF (NPRT.GE.1.AND.ICNV2B.EQ.1)
     1                        WRITE(IFILE,'(A,I2,/,1P,4E12.4)')
     1       ' YES CONVERGENCE IN "ENERGY", LABEL=8133: IMOD,F,AL,M,N=',
     1                                                  IMOD,F,AL,M,N
C END APR 1997
                           IF (ICNV2B.EQ.1) THEN
                              N00 = N0
                              F00 = F
                              A00 = AL
                              M00 = M
                               N0 = N
                              IF (NPRT.GE.2) WRITE(IFILE,*)
     1                      ' LOOPING BACK TO 8104, LOOP NO.',KOUN2B
                              KOUN2B = KOUN2B + 1
                              IF (IA.EQ.0) GO TO 8104
                              GO TO 8107
                           ELSE
C BEG APR 1997
C23456789012345678901234567890123456789012345678901234567890123456789012
                              IF (NPRT.GE.1)
     1                           WRITE(IFILE,'(A,I2,/,1P,4E12.4)')
     1  ' NO CONVERGENCE IN "ENERGY", LABEL=8133: IMOD,F00,A00,M00,N0=',
     1                                            IMOD,F00,A00,M00,N0
C END APR 1997
C  The second try with m fixed fails.  Accept the solution
C  provided by NEWTON or the last converged solution from ENERGY:
                              F = F00
                              AL= A00
                              M = M00
                              N = N0
                           ENDIF
                        ENDIF
C END JULY 1995
                     ENDIF
                     IF (IMOD.EQ.0.AND.IA.EQ.0
     1                            .AND.ABS(AL).GT.ALMAX
     1                            .AND.(AL.LT.0.0.OR.AL.GT.ALBIG)) THEN
                        ALFIX = -0.6
                        A00 = ALFIX
                        IIIA = 1
                        IA = 1
                        IF (ABS(AL).LE.ALMAX) THEN
                           N0 = N
                          M00 = M
                          F00 = F
 8135                     CONTINUE
C BEG DEC 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
                          CALL EPSAVE(N0,CS,CX,CY,NX,NY+FNYADD,NXY,
     1                      ISTIF,NSEG,B,B2,H,W,W2,EPSLD2,ICOCUR,RESFIX,
     1                      NX0,NY0+FNY0AD,NXY0,FARC,RNEW,EPSLDF,W0,
     1                      ETHERM,RESFXL,RESEIG,0.,0.,0.,AMPLIT,IABT,
     1                      CSN,0,FYRAT,0.,DELK2,8135)
C END DEC 2003
                        ENDIF 
                        GO TO 174
                     ENDIF
C BEG JULY 1995
                     IF (ABS(F).GT.(0.5*B(1))) THEN
                        WRITE(IFILE,8156) F, B(1)
C                       CALL ERREX
                        IF (IMOD.EQ.0) IESCAP = 1
                     ENDIF
C END JULY 1995
                     ICONV = 1
                     ISAVE = 1
                     GO TO 130
                  ENDIF
               ELSE
C  Convergence with f,N free and a,m fixed failed. Follow prescripton
C  described after label 8140.
                  IF (IMOD.EQ.0.AND.IA.EQ.0
     1                         .AND.ABS(AL).GT.ALMAX
     1                         .AND.(AL.LT.0.0.OR.AL.GT.ALBIG)) THEN
                     ALFIX = -0.6
                     A00 = ALFIX
                     IIIA = 1
                     IA = 1
                     IF (ABS(AL).LE.ALMAX) THEN
                        N0 = N
                       M00 = M
                       F00 = F
 8137                  CONTINUE
C BEG DEC 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
                       CALL EPSAVE(N0,CS,CX,CY,NX,NY+FNYADD,NXY,ISTIF,
     1                   NSEG,B,B2,H,W,W2,EPSLD2,ICOCUR,RESFIX,
     1                   NX0,NY0+FNY0AD,NXY0,FARC,RNEW,EPSLDF,W0,ETHERM,
     1                   RESFXL,RESEIG,0.,0.,0.,AMPLIT,IABT,CSN,
     1                   0,FYRAT,0.,DELK2,8137)
C END DEC 2003
                     ENDIF
                     GO TO 174
                  ENDIF
                  ITRIP = 0
                  FF00 = F00
                  AA00 = A00
                  FM00 = M00
                  FN00 = N0
  125             CONTINUE
C BEG DEC 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
                  CALL EPSAVE(N0,CS,CX,CY,NX,NY+FNYADD,NXY,ISTIF,NSEG,B,
     1            B2,H,W,W2,EPSLD2,ICOCUR,RESFIX,NX0,NY0+FNY0AD,NXY0,
     1            FARC,RNEW,EPSLDF,0.,ETHERM,RESFXL,RESEIG,0.,0.,0.,
     1            AMPLIT,IABT,CSN,0,FYRAT,0.,DELK2,8140)
C END DEC 2003
                  ICONV5 = 0
 8140             CONTINUE
C  Convergence with f,N free and a,m fixed failed. Now set the amplitude
C  of the local imperfection W0 to zero and attempt a solution in which
C  f**2 is expressed in terms of "a" and N, and "a" and N are free.
C  Slope m is still fixed:
                  CALL ENERGY(NPRT,IFILE,B(2),CX,0.,F00,A00,M00,N0,F,
     1                        AL,M,N,ICONV5,IA,1,1,8140)
C BEG APR 1997
                  IF (NPRT.GE.1.AND.ICONV5.EQ.1)
     1               WRITE(IFILE,'(A,I2,/,1P,4E12.4)')
     1       ' YES CONVERGENCE IN "ENERGY", LABEL=8140: IMOD,F,AL,M,N=',
     1                                                  IMOD,F,AL,M,N
C END APR 1997
                  IF (ICONV5.EQ.0) THEN
C  No convergence with f**2 expressed in terms of "a" and N and
C  "a" and N are free. If TRIP = 0 try an even simpler nonlinear problem.
C BEG FEB 1997
C BEG APR 1997
                     WRITE(IFILE,'(A,I2,/,1P,4E12.4)')
     1' NO CONVERGENCE IN "ENERGY", LABEL=8140: IMOD,F00,A00,M00,N0=',
     1                                          IMOD,F00,A00,M00,N0
C END APR 1997
C END FEB 1997
                     F = F00
                     AL= A00
                     M = M00
                     N = N0
                     IF (ITRIP.EQ.0) THEN
                        FN0SV = N0
                        FNNEW = N0
                        ICONV6 = 0
  127                   CONTINUE
 8150                   CONTINUE
C  Keep the amplitude of the local imperfection W0 at zero and attempt
C  a solution in which f**2 is expressed in terms of N. "a" and m are
C  fixed:
                        CALL ENERGY(NPRT,IFILE,B(2),CX,0.,F00,A00,M00,
     1                              N0,F,AL,M,N,ICONV6,1,1,1,8150)
C BEG APR 1997
C23456789012345678901234567890123456789012345678901234567890123456789012
                        IF (NPRT.GE.1.AND.ICONV6.EQ.1)
     1                     WRITE(IFILE,'(A,I2,/,1P,4E12.4)')
     1       ' YES CONVERGENCE IN "ENERGY", LABEL=8150: IMOD,F,AL,M,N=',
     1                                                  IMOD,F,AL,M,N
C END APR 1997
                        IF (ICONV6.EQ.0) THEN
C BEG APR 1997
C23456789012345678901234567890123456789012345678901234567890123456789012
                           IF (NPRT.GE.1)
     1                        WRITE(IFILE,'(A,I2,/,1P,4E12.4)')
     1  ' NO CONVERGENCE IN "ENERGY", LABEL=8150: IMOD,F00,A00,M00,N0=',
     1                                            IMOD,F00,A00,M00,N0
C END APR 1997
C  No convergence with use of SUBROUTINE ENERGY. Accept previously
C  converged solution in which N was fixed, that is, accept the
C  previously converged solution from SUBROUTINE NEWTON.
                           F = F00
                           AL= A00
                           M = M00
                           FNNEW = 1.2*FNNEW
                           N0 = FNNEW
                           N  = N0
C BEG DEC 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
                           CALL EPSAVE(N0,CS,CX,CY,NX,NY+FNYADD,NXY,
     1                     ISTIF,NSEG,B,B2,H,W,W2,EPSLD2,ICOCUR,RESFIX,
     1                     NX0,NY0+FNY0AD,NXY0,FARC,RNEW,EPSLDF,0.,
     1                     ETHERM,RESFXL,RESEIG,0.,0.,0.,AMPLIT,IABT,
     1                     CSN,0,FYRAT,0.,DELK2,8150)
C END DEC 2003
                           IF (FNNEW.LT.5.*FN0SV) GO TO 127
                           N0 = FN0SV
                           N  = N0
                           ICONV = 0
C BEG FEB 1997
                           WRITE(IFILE,'(A,I2,1P,4E12.4)')
     1                   ' IMOD,F,AL,M,N=',IMOD,F,AL,M,N
C END FEB 1997
                           GO TO 130
                        ELSE
C  Convergence of the simplest possible nonlinear problem was achieved.
C  Now free "a" and go back to statement label 125.
                           F00= F
                           A00= AL
                           M00= M
                           IF (N.LT.FACTN1) N = 0.999999*FACTN1
                           N0 = N
                           ITRIP = 1
                           GO TO 125
                        ENDIF
                     ENDIF
                     F00 = FF00
                     A00 = AA00
                     M00 = FM00
                     N0  = FN00
                     ICONV = 0
                     GO TO 130
                  ELSE
C  Convergence was achieved with f**2 expressed in terms of "a" and N and
C  "a" and N free.
C BEG JULY 1995
                     N00 = N0
                     KOUN2B = 1
 8154                CONTINUE
C END JULY 1995
                     IF (N.LT.FACTN1) N = 0.999999*FACTN1
                     IF (IMOD.EQ.0.AND.IA.EQ.0
     1                            .AND.ABS(AL).GT.ALMAX
     1                            .AND.(AL.LT.0.0.OR.AL.GT.ALBIG)) THEN
                        ALFIX = -0.6
                        A00 = ALFIX
                        IIIA = 1
                        IA = 1
                        IF (ABS(AL).LE.ALMAX) THEN
                           N0 = N
                          M00 = M
                          F00 = F
 8155                     CONTINUE
C BEG DEC 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
                          CALL EPSAVE(N0,CS,CX,CY,NX,NY+FNYADD,NXY,
     1                    ISTIF,NSEG,B,B2,H,W,W2,EPSLD2,ICOCUR,RESFIX,
     1                    NX0,NY0+FNY0AD,NXY0,FARC,RNEW,EPSLDF,W0,
     1                    ETHERM,RESFXL,RESEIG,0.,0.,0.,AMPLIT,IABT,CSN,
     1                    0,FYRAT,0.,DELK2,8155)
C END DEC 2003
                        ENDIF
                        GO TO 174
                     ENDIF
                     IF (ABS(F).GT.(0.5*B(1))) THEN
                        WRITE(IFILE,8156) F, B(1)
C BEG JULY 1995
 8156                   FORMAT(/' ************ WARNING ************'/
     1                ' AMPLITUDE F IS BIGGER THAN HALF THE STRINGER'/
     1                ' SPACING, WHICH INDICATES THAT THE PANEL FAILS'/
     1                ' CATASTROPHICALLY. (THERE EXISTS NO SOLUTION OF'/
     1                ' THE POST-LOCAL-BUCKLING PROBLEM):'/
     1                '  Post-local-buckling amplitude, f =',1PE12.4/
     1                '  Stringer spacing,            b(1)=',1PE12.4/
     1                ' THIS RESULT MIGHT WELL BE CAUSED BY HOOP'/
     1                ' COMPRESSION ON A PANEL WITH VERY THIN SKIN AND'/
     1                ' NO RINGS PRESENT.  USE "CHANGE" TO THICKEN'/
     1                ' THE SKIN, OR START OVER AND INCLUDE RINGS IN'/
     1                ' THE MODEL.'/
     1                ' *************** END WARNING *****************'/)
C                       CALL ERREX
                        IF (IMOD.EQ.0) IESCAP = 1
C END JULY 1995
                     ENDIF
                     F00= F
                     A00= AL
                     M00= M
                     N0 = N
 8157                CONTINUE
C BEG DEC 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
                     CALL EPSAVE(N0,CS,CX,CY,NX,NY+FNYADD,NXY,ISTIF,
     1               NSEG,B,B2,H,W,W2,EPSLD2,ICOCUR,RESFIX,NX0,
     1               NY0+FNY0AD,NXY0,FARC,RNEW,
     1               EPSLDF,W0,ETHERM,RESFXL,RESEIG,0.,0.,0.,AMPLIT,
     1               IABT,CSN,0,FYRAT,0.,DELK2,8157)
C END DEC 2003
                     IF (IA.EQ.0) THEN
                        AL = 0.
                        F  = 0.
                        NOCONV = 0
 8160                   CONTINUE
C BEG MAY 1997
                        IF (NPRT.GE.1) WRITE(IFILE,'(A,I2)')
     1                ' ENTERING "NEWTON", LABEL=8160; IMOD=',IMOD
C END MAY 1997
C  Now f,a,m are free.  Fix N at new value found in ENERGY and refine
C  the three-variable solution f,a,m via NEWTON.  Use current value of
C  slope, m, as initial value and start with f=0 and a=0 and local
C  imperfection amplitude W0 = 0:
                        CALL NEWTON(0,NPRT,IFILE,CX,N,M,AL,F,NXY,E1SAVE,
     1                     E2SAVE,E12SAV,N1SAVE,N2SAVE,N12SAV,EPS2S,
     1                     EIGLOC,KOITER,EKOITR,F0,0,0.,NOCONV,IMOD,
     1                     RESULT,ILOADS,JJJ,IW0,KOUNTW,KOUNTM,0.,
     1                     KOUNTP,IFAIL,ICASE,CSN,WIMPL,WRATIO,IIIA,
     1                     ITYPE,8160)
C BEG APR 1997
C23456789012345678901234567890123456789012345678901234567890123456789012
                     IF (NPRT.GE.1) WRITE(IFILE,'(A,2I2,/,A,1P,4E12.4)')
     1        ' LEAVING "NEWTON", LABEL=8160; IMOD,NOCONV=',IMOD,NOCONV,
     1             ' SOLN FROM "NEWTON": F,AL,M;  N=',F,AL,M,N
C END APR 1997
                        IF (IMOD.EQ.0.AND.IIIA.EQ.1) THEN
                           F = F00
                           AL= A00
                           M = M00
                           N = N0
                           IIIA = 0
                           NOCONV = 0
                        ENDIF
 8170                   CONTINUE
C BEG MAY 1997
                        IF (NPRT.GE.1) WRITE(IFILE,'(A,I2)')
     1                ' ENTERING "NEWTON", LABEL=8170; IMOD=',IMOD
C END MAY 1997
C  Continue with the three-variable (f,a,m) problem with W0 = given value:
                        CALL NEWTON(0,NPRT,IFILE,CX,N,M,AL,F,NXY,E1SAVE,
     1                     E2SAVE,E12SAV,N1SAVE,N2SAVE,N12SAV,EPS2S,
     1                     EIGLOC,KOITER,EKOITR,F0,1,W0,NOCONV,IMOD,
     1                     RESULT,ILOADS,JJJ,IW0,KOUNTW,KOUNTM,0.,
     1                     KOUNTP,IFAIL,ICASE,CSN,WIMPL,WRATIO,IIIA,
     1                     ITYPE,8170)
C BEG APR 1997
C23456789012345678901234567890123456789012345678901234567890123456789012
                     IF (NPRT.GE.1) WRITE(IFILE,'(A,2I2,/,A,1P,4E12.4)')
     1        ' LEAVING "NEWTON", LABEL=8170; IMOD,NOCONV=',IMOD,NOCONV,
     1             ' SOLN FROM "NEWTON": F,AL,M;  N=',F,AL,M,N
C END APR 1997
                        IF (F.EQ.0.) THEN
C BEG JUL 1999
                          IF (EKOITR.GT.0.95.AND.EKOITR.LT.1.05) THEN
                            ICONV = 0
                            IF (NPRT.GE.1)
     1                       WRITE(IFILE,'(A,A,/,A,1P,4E12.4)')
     1                     ' BAD SOLUTION REJECTED;',
     1                     ' SOLUTION AT LABEL 8004 ACCEPTED INSTEAD:',
     1                     ' F,AL,M,N=',F00SS,A00SS,M00SS,N00SS
                            GO TO 130
                          ELSE
                            WRITE(IFILE,8051)
                            CALL ERREX
                          ENDIF
C END JUL 1999
                        ENDIF
                        IF (ABS(F/F00).LT.0.5.OR.ABS(F/F00).GT.2.0) THEN
                           F = F00
                           AL= A00
                           M = M00
                           N = N0
                           IF (NPRT.GT.1) THEN
                            WRITE(IFILE,*)' SOLUTION NOT ACCEPTABLE.'
                         WRITE(IFILE,*)' A PREVIOUS ONE IS BEING USED.'
                            WRITE(IFILE,'(A,1P,4E11.2)')
     1                  ' NEW VALUES FOR UNPERTURBED DESIGN: F,A,M,N=',
     1                      F,AL,M,N
                           ENDIF
                        ENDIF
                        F00= F
                        A00= AL
                        M00= M
                        N0 = N
                     ENDIF
                     ICONV6 = 0
 8180                CONTINUE
C  Convergence succeeded in NEWTON. Next, try the four-variable
C  formulation with slope m fixed and f,a,N free:
                     CALL ENERGY(NPRT,IFILE,B(2),CX,W0,F00,A00,M00,N0,F,
     1                           AL,M,N,ICONV6,IA,1,0,8180)
C BEG APR 1997
C23456789012345678901234567890123456789012345678901234567890123456789012
                     IF (NPRT.GE.1.AND.ICONV6.EQ.1)
     1                  WRITE(IFILE,'(A,I2,/,1P,4E12.4)')
     1       ' YES CONVERGENCE IN "ENERGY", LABEL=8180: IMOD,F,AL,M,N=',
     1                                                  IMOD,F,AL,M,N
C END APR 1997
                     IF (ICONV6.EQ.0) THEN
C BEG APR 1997
C23456789012345678901234567890123456789012345678901234567890123456789012
                        IF (NPRT.GE.1) WRITE(IFILE,'(A,I2,/,1P,4E12.4)')
     1  ' NO CONVERGENCE IN "ENERGY", LABEL=8180: IMOD,F00,A00,M00,N0=',
     1                                            IMOD,F00,A00,M00,N0
C END APR 1997
C  Convergence with f,a,N free and m fixed failed. First, see if the
C  axial wavenumber parameter N changed a lot. If it did, then
C  try again to find a solution with ENERGY with use of the "8140" 
C  strategy.  If this try fails, accept the solution
C  provided by NEWTON or the last converged solution from ENERGY:
                        F = F00
                        AL= A00
                        M = M00
                        N = N0
C BEG JULY 1995
                        DIFN = ABS(N00 - N0)/ABS(N0)
C23456789012345678901234567890123456789012345678901234567890123456789012
                        IF (NPRT.GE.2.AND.(KOUN2B.GT.3.OR.DIFN.LE.0.1))
     1                  WRITE(IFILE,*)
     1                  ' Not attempting to follow "8140" strategy'
                        IF (NPRT.GE.2.AND.DIFN.LE.0.1) WRITE(IFILE,*)
     1               ' because change in axial wavelength insufficient.'
                        IF (KOUN2B.LE.3.AND.DIFN.GT.0.1) THEN
                           ICNV2B = 0
 8182                      CONTINUE
C  Convergence with f,a,N free failed. Follow "8140" strategy:
                           CALL ENERGY(NPRT,IFILE,B(2),CX,0.,F00,A00,
     1                           M00,N0,F,AL,M,N,ICNV2B,IA,1,1,8182)
C BEG APR 1997
C23456789012345678901234567890123456789012345678901234567890123456789012
                           IF (NPRT.GE.1.AND.ICNV2B.EQ.1)
     1                        WRITE(IFILE,'(A,I2,/,1P,4E12.4)')
     1       ' YES CONVERGENCE IN "ENERGY", LABEL=8182: IMOD,F,AL,M,N=',
     1                                                  IMOD,F,AL,M,N
C END APR 1997
                           IF (ICNV2B.EQ.1) THEN
                              N00 = N0
                              F00 = F
                              A00 = AL
                              M00 = M
                               N0 = N
                              IF (NPRT.GE.2) WRITE(IFILE,*)
     1                      ' LOOPING BACK TO 8154, LOOP NO.',KOUN2B
                              KOUN2B = KOUN2B + 1
                              IF (IA.EQ.0) GO TO 8154
                              GO TO 8157
                           ELSE
C BEG APR 1997
C23456789012345678901234567890123456789012345678901234567890123456789012
                              IF (NPRT.GE.1)
     1                           WRITE(IFILE,'(A,I2,/,1P,4E12.4)')
     1  ' NO CONVERGENCE IN "ENERGY", LABEL=8182: IMOD,F00,A00,M00,N0=',
     1                                            IMOD,F00,A00,M00,N0
C END APR 1997
C  The "8140" strategy fails.  Accept the solution
C  provided by NEWTON or the last converged solution from ENERGY:
                              F = F00
                              AL= A00
                              M = M00
                              N = N0
                           ENDIF
                        ENDIF
C  Convergence with f,a,N free and m fixed failed. Accept the solution
C  provided by NEWTON or the last converged solution from ENERGY:
                        IF (ABS(F).GT.(0.5*B(1))) THEN
                           WRITE(IFILE,8156) F, B(1)
C                          CALL ERREX
                           IF (IMOD.EQ.0) IESCAP = 1
                        ENDIF
C END JULY 1995
                        ICONV = 1
                        GO TO 130
                     ELSE
C  Convergence with f,a,N free and m fixed succeeded.
                        IF (N.LT.FACTN1) N = 0.999999*FACTN1
C BEG JULY 1995
                        N00 = N0
                        KOUN2B = 1
C END JULY 1995
                        F00= F
                        A00= AL
                        M00= M
                        N0 = N
C BEG JULY 1995
 8185                   CONTINUE
C END JULY 1995
C BEG DEC 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
                        CALL EPSAVE(N0,CS,CX,CY,NX,NY+FNYADD,NXY,ISTIF,
     1                  NSEG,B,B2,H,W,W2,EPSLD2,ICOCUR,RESFIX,NX0,
     1                  NY0+FNY0AD,NXY0,
     1                  FARC,RNEW,EPSLDF,W0,ETHERM,RESFXL,RESEIG,0.,0.,
     1                  0.,AMPLIT,IABT,CSN,0,FYRAT,0.,DELK2,8185)
C END DEC 2003
                        IF (IA.EQ.0) THEN
                           AL = 0.
                           F  = 0.
                           NOCONV = 0
 8190                      CONTINUE
C BEG MAY 1997
                           IF (NPRT.GE.1) WRITE(IFILE,'(A,I2)')
     1                   ' ENTERING "NEWTON", LABEL=8190; IMOD=',IMOD
C END MAY 1997
C  Now f,a,m are free.  Fix N at new value found in ENERGY and refine
C  the three-variable solution f,a,m via NEWTON.  Use current value of
C  slope, m, as initial value and start with f=0 and a=0 and local
C  imperfection amplitude W0 = 0:
                           CALL NEWTON(0,NPRT,IFILE,CX,N,M,AL,F,NXY,
     1                        E1SAVE,E2SAVE,E12SAV,N1SAVE,N2SAVE,N12SAV,
     1                        EPS2S,EIGLOC,KOITER,EKOITR,F0,0,0.,NOCONV,
     1                        IMOD,RESULT,ILOADS,JJJ,IW0,KOUNTW,KOUNTM,
     1                        0.,KOUNTP,IFAIL,ICASE,CSN,WIMPL,WRATIO,
     1                        IIIA,ITYPE,8190)
C BEG APR 1997
C23456789012345678901234567890123456789012345678901234567890123456789012
                     IF (NPRT.GE.1) WRITE(IFILE,'(A,2I2,/,A,1P,4E12.4)')
     1        ' LEAVING "NEWTON", LABEL=8190; IMOD,NOCONV=',IMOD,NOCONV,
     1             ' SOLN FROM "NEWTON": F,AL,M;  N=',F,AL,M,N
C END APR 1997
                           IF (IMOD.EQ.0.AND.IIIA.EQ.1) THEN
                              F = F00
                              AL= A00
                              M = M00
                              N = N0
                              IIIA = 0
                              NOCONV = 0
                           ENDIF
 8200                      CONTINUE
C BEG MAY 1997
                           IF (NPRT.GE.1) WRITE(IFILE,'(A,I2)')
     1                   ' ENTERING "NEWTON", LABEL=8200; IMOD=',IMOD
C END MAY 1997
C  Continue with the three-variable (f,a,m) problem with W0 = given value:
                           CALL NEWTON(0,NPRT,IFILE,CX,N,M,AL,F,NXY,
     1                        E1SAVE,E2SAVE,E12SAV,N1SAVE,N2SAVE,N12SAV,
     1                        EPS2S,EIGLOC,KOITER,EKOITR,F0,1,W0,NOCONV,
     1                        IMOD,RESULT,ILOADS,JJJ,IW0,KOUNTW,KOUNTM,
     1                        0.,KOUNTP,IFAIL,ICASE,CSN,WIMPL,WRATIO,
     1                        IIIA,ITYPE,8200)
C BEG APR 1997
C23456789012345678901234567890123456789012345678901234567890123456789012
                     IF (NPRT.GE.1) WRITE(IFILE,'(A,2I2,/,A,1P,4E12.4)')
     1        ' LEAVING "NEWTON", LABEL=8200; IMOD,NOCONV=',IMOD,NOCONV,
     1             ' SOLN FROM "NEWTON": F,AL,M;  N=',F,AL,M,N
C END APR 1997
                           IF (F.EQ.0.) THEN
C BEG JUL 1999
                            IF (EKOITR.GT.0.95.AND.EKOITR.LT.1.05) THEN
                              ICONV = 0
                              IF (NPRT.GE.1)
     1                         WRITE(IFILE,'(A,A,/,A,1P,4E12.4)')
     1                       ' BAD SOLUTION REJECTED;',
     1                       ' SOLN AT LABEL 8004 ACCEPTED INSTEAD:',
     1                       ' F,AL,M,N=',F00SS,A00SS,M00SS,N00SS
                              GO TO 130
                            ELSE
                              WRITE(IFILE,8051)
                              CALL ERREX
                            ENDIF
C END JUL 1999
                           ENDIF
                           IF (ABS(F/F00).LT.0.5.OR.ABS(F/F00).GT.2.0)
     1                     THEN
                              F = F00
                              AL= A00
                              M = M00
                              N = N0
                              IF (NPRT.GT.1) THEN
                               WRITE(IFILE,*)' SOLUTION NOT ACCEPTABLE.'
                               WRITE(IFILE,*)
     1                            ' A PREVIOUS ONE IS BEING USED.'
                               WRITE(IFILE,'(A,1P,4E11.2)')
     1                   ' NEW VALUES FOR UNPERTURBED DESIGN: F,A,M,N=',
     1                         F,AL,M,N
                              ENDIF
                           ENDIF
                           F00= F
                           A00= AL
                           M00= M
                           N0 = N
                        ENDIF
                        ICONV7 = 0
 8210                   CONTINUE
C  Convergence with f,a,N free and m fixed succesful. Now free m and
C  try again:
                        CALL ENERGY(NPRT,IFILE,B(2),CX,W0,F00,A00,M00,
     1                               N0,F,AL,M,N,ICONV7,IA,0,0,8210)
C BEG APR 1997
C23456789012345678901234567890123456789012345678901234567890123456789012
                        IF (NPRT.GE.1.AND.ICONV7.EQ.1)
     1                     WRITE(IFILE,'(A,I2,/,1P,4E12.4)')
     1       ' YES CONVERGENCE IN "ENERGY", LABEL=8210: IMOD,F,AL,M,N=',
     1                                                  IMOD,F,AL,M,N
C END APR 1997
                        IF (ICONV7.EQ.0) THEN
C BEG APR 1997
C23456789012345678901234567890123456789012345678901234567890123456789012
                           IF (NPRT.GE.1)
     1                        WRITE(IFILE,'(A,I2,/,1P,4E12.4)')
     1  ' NO CONVERGENCE IN "ENERGY", LABEL=8210: IMOD,F00,A00,M00,N0=',
     1                                            IMOD,F00,A00,M00,N0
C END APR 1997
C  Convergence with f,a,m,N free failed again. First, see if the
C  axial wavenumber parameter N changed a lot. If it did, then
C  try again to find a solution with ENERGY with the m fixed. If
C  this try fails, accept the solution
C  provided by NEWTON or the last converged solution from ENERGY:
                           F = F00
                           AL= A00
                           M = M00
                           N = N0
C BEG JULY 1995
                           DIFN = ABS(N00 - N0)/ABS(N0)
C23456789012345678901234567890123456789012345678901234567890123456789012
                         IF (NPRT.GE.2.AND.(KOUN2B.GT.3.OR.DIFN.LE.0.1))
     1                     WRITE(IFILE,*)
     1                     ' Not attempting f,a,N free and fixed m'
                           IF (NPRT.GE.2.AND.DIFN.LE.0.1) WRITE(IFILE,*)
     1               ' because change in axial wavelength insufficient.'
                           IF (KOUN2B.LE.3.AND.DIFN.GT.0.1) THEN
                              ICNV2B = 0
 8214                         CONTINUE
C  Convergence with f,a,m,N free failed. Keep f,a,N free and fix m:
                              CALL ENERGY(NPRT,IFILE,B(2),CX,W0,F00,
     1                         A00,M00,N0,F,AL,M,N,ICNV2B,IA,1,0,8214)
C BEG APR 1997
C23456789012345678901234567890123456789012345678901234567890123456789012
                              IF (NPRT.GE.1.AND.ICNV2B.EQ.1)
     1                           WRITE(IFILE,'(A,I2,/,1P,4E12.4)')
     1       ' YES CONVERGENCE IN "ENERGY", LABEL=8214: IMOD,F,AL,M,N=',
     1                                                  IMOD,F,AL,M,N
C END APR 1997
                              IF (ICNV2B.EQ.1) THEN
                                 N00 = N0
                                 F00 = F
                                 A00 = AL
                                 M00 = M
                                  N0 = N
                                 IF (NPRT.GE.2) WRITE(IFILE,*)
     1                         ' LOOPING BACK TO 8185, LOOP NO.',KOUN2B
                                 KOUN2B = KOUN2B + 1
                                 GO TO 8185
                              ELSE
C BEG APR 1997
C23456789012345678901234567890123456789012345678901234567890123456789012
                                 IF (NPRT.GE.1)
     1                              WRITE(IFILE,'(A,I2,/,1P,4E12.4)')
     1  ' NO CONVERGENCE IN "ENERGY", LABEL=8214: IMOD,F00,A00,M00,N0=',
     1                                            IMOD,F00,A00,M00,N0
C END APR 1997
C  The second try with m fixed fails.  Accept the solution
C  provided by NEWTON or the last converged solution from ENERGY:
                                 F = F00
                                 AL= A00
                                 M = M00
                                 N = N0
                              ENDIF
                           ENDIF
C END JULY 1995
                        ENDIF
                        IF (N.LT.FACTN1) N = 0.999999*FACTN1
                        IF (IMOD.EQ.0.AND.IA.EQ.0
     1                            .AND.ABS(AL).GT.ALMAX
     1                            .AND.(AL.LT.0.0.OR.AL.GT.ALBIG)) THEN
                           ALFIX = -0.6
                           A00 = ALFIX
                           IIIA = 1
                           IA = 1
                           IF (ABS(AL).LE.ALMAX) THEN
                              N0 = N
                             M00 = M
                             F00 = F
 8215                        CONTINUE
C BEG DEC 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
                             CALL EPSAVE(N0,CS,CX,CY,NX,NY+FNYADD,NXY,
     1                       ISTIF,NSEG,B,B2,H,W,W2,EPSLD2,ICOCUR,
     1                       RESFIX,NX0,NY0+FNY0AD,NXY0,FARC,RNEW,
     1                       EPSLDF,W0,ETHERM,RESFXL,RESEIG,0.,0.,0.,
     1                       AMPLIT,IABT,CSN,0,FYRAT,0.,DELK2,8215)
C END DEC 2003
                           ENDIF
                           GO TO 174
                        ENDIF
C BEG JULY 1995
                        IF (ABS(F).GT.(0.5*B(1))) THEN
                           WRITE(IFILE,8156) F, B(1)
C                          CALL ERREX
                           IF (IMOD.EQ.0) IESCAP = 1
                        ENDIF
C END JULY 1995
                        ICONV = 1
                        ISAVE = 1
                        GO TO 130
                     ENDIF
                  ENDIF
               ENDIF
            ENDIF
  130       CONTINUE
            IF (IMOD.EQ.0) ICONVS = ICONV
            IF (ICONV.EQ.1.AND.IMOD.EQ.0) THEN
               IF (N.LT.FACTN1) THEN
                  N = FACTN1
                  NWAVEK = 1
C BEG DEC 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
                  CALL EPSAVE(N,CS,CX,CY,NX,NY+FNYADD,NXY,ISTIF,NSEG,B,
     1              B2,H,W,W2,EPSLD2,ICOCUR,RESFIX,NX0,NY0+FNY0AD,NXY0,
     1              FARC,RNEW,EPSLDF,W0,ETHERM,RESFXL,RESEIG,0.,0.,0.,
     1              AMPLIT,IABT,CSN,0,FYRAT,0.,DELK2,8220)
C END DEC 2003
                  F00 = F
                  A00 = AL
                  M00 = M
                  N0  = N
                  AL = 0.
                  F  = 0.
                  NOCONV = 0
 8220             CONTINUE
C BEG MAY 1997
                  IF (NPRT.GE.1) WRITE(IFILE,'(A,I2)')
     1          ' ENTERING "NEWTON", LABEL=8220; IMOD=',IMOD
C END MAY 1997
C  Now f,a,m are free.  Fix N at new value found in ENERGY and refine
C  the three-variable solution f,a,m via NEWTON.  Use current value of
C  slope, m, as initial value and start with f=0 and a=0 and local
C  imperfection amplitude W0 = 0:
                  CALL NEWTON(0,NPRT,IFILE,CX,N,M,AL,F,NXY,E1SAVE,
     1               E2SAVE,E12SAV,N1SAVE,N2SAVE,N12SAV,EPS2S,EIGLOC,
     1               KOITER,EKOITR,F0,0,0.,NOCONV,IMOD,RESULT,
     1               ILOADS,JJJ,IW0,KOUNTW,KOUNTM,0.,KOUNTP,
     1               IFAIL,ICASE,CSN,WIMPL,WRATIO,IIIA,ITYPE,8220)
C BEG APR 1997
C23456789012345678901234567890123456789012345678901234567890123456789012
                  IF (NPRT.GE.1) WRITE(IFILE,'(A,2I2,/,A,1P,4E12.4)')
     1        ' LEAVING "NEWTON", LABEL=8220; IMOD,NOCONV=',IMOD,NOCONV,
     1          ' SOLN FROM "NEWTON": F,AL,M;  N=',F,AL,M,N
C END APR 1997
                  IF (IMOD.EQ.0.AND.IA.EQ.0.AND.IIIA.EQ.1) THEN
                     F = F00
                     AL= A00
                     M = M00
                     N = N0
                     IIIA = 0
                     NOCONV = 0
                  ENDIF
 8230             CONTINUE
C BEG MAY 1997
                  IF (NPRT.GE.1) WRITE(IFILE,'(A,I2)')
     1          ' ENTERING "NEWTON", LABEL=8230; IMOD=',IMOD
C END MAY 1997
C  Continue with the three-variable (f,a,m) problem with W0 = given value:
                  CALL NEWTON(0,NPRT,IFILE,CX,N,M,AL,F,NXY,E1SAVE,
     1               E2SAVE,E12SAV,N1SAVE,N2SAVE,N12SAV,EPS2S,EIGLOC,
     1               KOITER,EKOITR,F0,1,W0,NOCONV,IMOD,RESULT,
     1               ILOADS,JJJ,IW0,KOUNTW,KOUNTM,0.,KOUNTP,
     1               IFAIL,ICASE,CSN,WIMPL,WRATIO,IIIA,ITYPE,8230)
C BEG APR 1997
C23456789012345678901234567890123456789012345678901234567890123456789012
                  IF (NPRT.GE.1) WRITE(IFILE,'(A,2I2,/,A,1P,4E12.4)')
     1        ' LEAVING "NEWTON", LABEL=8230; IMOD,NOCONV=',IMOD,NOCONV,
     1          ' SOLN FROM "NEWTON": F,AL,M;  N=',F,AL,M,N
C END APR 1997
                  IF (ABS(F/F00).LT.0.5.OR.ABS(F/F00).GT.2.0) THEN
                     F = F00
                     AL= A00
                     M = M00
                     N = N0
                     IF (IA.EQ.0) IIIA = 0
                  ENDIF
               ENDIF
               IF (IIIA.EQ.1.AND.IIIAS.EQ.0) THEN
                  ALDIFF = ABS(ALFIX + 0.6)
                  IF (ALDIFF.LT.0.00001) THEN
                     F00 = F
                     A00 = AL
                     M00 = M
                     N0 = N
                     IIIA = 0
                     IA = 0
                     IIIAS = 1
                     GO TO 175
                  ENDIF
               ENDIF
               FMOD0  = F
               ALMOD0 = AL
               FMMOD0 = M
               FNMOD0 = N
               FWAVE0 = 2.*B(2)*SQRT(FNMOD0)/3.1415927
               IF(NPRT.GT.1) WRITE(IFILE,'(A,1P,4E11.2)')
     1       ' VALUES FOR UNPERTURBED DESIGN: F,A,M,N=',F,AL,M,N
            ENDIF
            IF (ICONV.EQ.0) THEN
C BEG AUG 1994
               IF (IMOD.EQ.1) THEN
                  F = F00SS
                 AL = A00SS
                  M = M00SS
                  N = N00SS
               ELSE
                  F = F00
                 AL = A00
                  M = M00
                  N = N0
C END AUG 1994
                  FMOD0 = F00
                 ALMOD0 = A00
                 FMMOD0 = M00
                 FNMOD0 = N0
                 FWAVE0 = 2.*B(2)*SQRT(FNMOD0)/3.1415927
                 IF(NPRT.GT.1) WRITE(IFILE,'(A,1P,4E11.2)')
     1  ' VALUES FOR UNPERTURBED DESIGN: F0,A0,M0,N0=',F00,A00,M00,N0
               ENDIF
            ENDIF
C
            IF (ICONV.EQ.1) THEN
              IF (IMOD.EQ.0) THEN
                 IF (ALMOD0.EQ.0.0.OR.
     1    (ABS(AL).GT.1.01*ALMAX.AND.(AL.LT.0.0.OR.AL.GT.ALBIG))) THEN
C    1                            .OR.N.GT.3.0*FNBEF) THEN
                    ICONVS = 0
                    F = FFBEF
                    AL= FALBEF
                    M = FMBEF
                    N = FNBEF
                    IIIA = IIABEF
                    FWAVE0 = 2.*B(2)*SQRT(FNBEF)/3.1415927
                    FAMPSV(ILOADS,ICASE) = 0.
                    ALSAV(ILOADS,ICASE)  = 0.
                    FMSAV(ILOADS,ICASE)  = 0.
                    FNSAV(ILOADS,ICASE)  = 0.
                    ISAVE = 0
                 ENDIF
              ENDIF
C BEG DEC 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
              CALL EPSAVE(N,CS,CX,CY,NX,NY+FNYADD,NXY,ISTIF,NSEG,B,B2,H,
     1        W,W2,EPSLD2,ICOCUR,RESFIX,NX0,NY0+FNY0AD,NXY0,FARC,RNEW,
     1        EPSLDF,W0,ETHERM,RESFXL,RESEIG,0.,0.,0.,AMPLIT,IABT,CSN,
     1        0,FYRAT,0.,DELK2,8240)
C END DEC 2003
              F00 = F
              A00 = AL
              M00 = M
              N0  = N
C
C 132         CONTINUE
 8240         CONTINUE
C BEG MAY 1997
              IF (NPRT.GE.1) WRITE(IFILE,'(A,I2)')
     1      ' ENTERING "NEWTON", LABEL=8240; IMOD=',IMOD
C END MAY 1997
C  Now f,a,m are free.  Fix N at new value found in ENERGY and refine
C  the three-variable solution f,a,m via NEWTON.  Use current values
C  of f,a,m as initial values, and use given value W0 for amplitude
C  of the initial local imperfection amplitude.
              CALL NEWTON(0,NPRT,IFILE,CX,N,M,AL,F,NXY,E1SAVE,E2SAVE,
     1               E12SAV,N1SAVE,N2SAVE,N12SAV,EPS2S,EIGLOC,
     1               KOITER,EKOITR,F0,1,W0,NOCONV,IMOD,RESULT,
     1               ILOADS,JJJ,IW0,KOUNTW,KOUNTM,
     1               0.,KOUNTP,IFAIL,ICASE,CSN,WIMPL,WRATIO,IIIA,
     1               ITYPE,8240)
C BEG APR 1997
C23456789012345678901234567890123456789012345678901234567890123456789012
              IF (NPRT.GE.1) WRITE(IFILE,'(A,2I2,/,A,1P,4E12.4)')
     1      ' LEAVING "NEWTON", LABEL=8240; IMOD,NOCONV=',IMOD,NOCONV,
     1      ' SOLN FROM "NEWTON": F,AL,M;  N=',F,AL,M,N
C END APR 1997
C BEG AUG 1994
              IF (IIIASS.EQ.0.AND.IIIA.EQ.1.AND.ABS(F00).GT.0.1*TX(1)
     1                       .AND.(F.LT.0.0.OR.ABS(F).LT.0.2*ABS(F00)
     1                       .OR.ABS(F).GT.5.0*ABS(F00))) THEN
C  We got a bad solution from NEWTON. Start over, except now use new value
C  of axial wave parameter N obtained from ENERGY...
                 NOCONV = 0
                 IIIA = 0
                 IA   = 0
                 F    = 0.
                 M    = MSTART
                 AL   = 0.
 8242            CONTINUE
C BEG DEC 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
                 CALL EPSAVE(N,CS,CX,CY,NX,NY+FNYADD,NXY,ISTIF,NSEG,B,
     1             B2,H,W,W2,EPSLD2,ICOCUR,RESFIX,NX0,NY0+FNY0AD,NXY0,
     1             FARC,RNEW,EPSLDF,0.,ETHERM,RESFXL,RESEIG,0.,0.,0.,
     1             AMPLIT,IABT,CSN,0,FYRAT,0.,DELK2,8242)
C END DEC 2003
C BEG MAY 1997
                 IF (NPRT.GE.1) WRITE(IFILE,'(A,I2)')
     1         ' ENTERING "NEWTON", LABEL=8242; IMOD=',IMOD
C END MAY 1997
                 CALL NEWTON(0,NPRT,IFILE,CX,N,M,AL,F,NXY,E1SAVE,
     1               E2SAVE,E12SAV,N1SAVE,N2SAVE,N12SAV,EPS2S,EIGLOC,
     1               KOITER,EKOITR,F0,0,0.,NOCONV,IMOD,RESULT,
     1               ILOADS,JJJ,IW0,KOUNTW,KOUNTM,
     1               0.,KOUNTP,IFAIL,ICASE,CSN,WIMPL,WRATIO,IIIA,
     1               ITYPE,8242)
C BEG APR 1997
C23456789012345678901234567890123456789012345678901234567890123456789012
                 IF (NPRT.GE.1) WRITE(IFILE,'(A,2I2,/,A,1P,4E12.4)')
     1        ' LEAVING "NEWTON", LABEL=8242; IMOD,NOCONV=',IMOD,NOCONV,
     1         ' SOLN FROM "NEWTON": F,AL,M;  N=',F,AL,M,N
C END APR 1997
 8244            CONTINUE
C BEG DEC 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
                 CALL EPSAVE(N,CS,CX,CY,NX,NY+FNYADD,NXY,ISTIF,NSEG,B,
     1             B2,H,W,W2,EPSLD2,ICOCUR,RESFIX,NX0,NY0+FNY0AD,NXY0,
     1             FARC,RNEW,EPSLDF,W0,ETHERM,RESFXL,RESEIG,0.,0.,0.,
     1             AMPLIT,IABT,CSN,0,FYRAT,0.,DELK2,8244)
C END DEC 2003
C BEG MAY 1997
                 IF (NPRT.GE.1) WRITE(IFILE,'(A,I2)')
     1         ' ENTERING "NEWTON", LABEL=8244; IMOD=',IMOD
C END MAY 1997
                 CALL NEWTON(0,NPRT,IFILE,CX,N,M,AL,F,NXY,E1SAVE,
     1               E2SAVE,E12SAV,N1SAVE,N2SAVE,N12SAV,EPS2S,EIGLOC,
     1               KOITER,EKOITR,F0,1,W0,NOCONV,IMOD,RESULT,
     1               ILOADS,JJJ,IW0,KOUNTW,KOUNTM,
     1               0.,KOUNTP,IFAIL,ICASE,CSN,WIMPL,WRATIO,IIIA,
     1               ITYPE,8244)
C BEG APR 1997
C23456789012345678901234567890123456789012345678901234567890123456789012
                 IF (NPRT.GE.1) WRITE(IFILE,'(A,2I2,/,A,1P,4E12.4)')
     1        ' LEAVING "NEWTON", LABEL=8244; IMOD,NOCONV=',IMOD,NOCONV,
     1         ' SOLN FROM "NEWTON": F,AL,M;  N=',F,AL,M,N
C END APR 1997
                 IA = IIIA
              ENDIF
              FDIF = 0.
              IF (ABS(F00).GT.0.1*TX(1)) FDIF = ABS(F - F00)/ABS(F00)
              IF (FDIF.GT.0.1) THEN
C  The "NEWTON" solution is quite different from the previously
C  converged solution. Try "ENERGY" once more in case it might converge.
C  Try again for solution with all four variables f,a,m,N free to change.
C  As initial values for f,a,m use the results from SUBROUTINE NEWTON.
C
                 F = ABS(F)
                 ICONVF = 0
 8245            CONTINUE
                 F00S = F
                 A00S = AL
                 M00S = M
                 N00S = N
                 CALL ENERGY(NPRT,IFILE,B(2),CX,W0,F00S,A00S,M00S,N00S,
     1                       F,AL,M,N,ICONVF,IA,0,0,8245)
C BEG APR 1997
C23456789012345678901234567890123456789012345678901234567890123456789012
                IF (NPRT.GE.1.AND.ICONVF.EQ.1)
     1             WRITE(IFILE,'(A,I2,/,1P,4E12.4)')
     1       ' YES CONVERGENCE IN "ENERGY", LABEL=8245: IMOD,F,AL,M,N=',
     1                                                  IMOD,F,AL,M,N
C END APR 1997
                 IF (ICONVF.EQ.0) THEN
C BEG APR 1997
C23456789012345678901234567890123456789012345678901234567890123456789012
                    IF (NPRT.GE.1) WRITE(IFILE,'(A,I2,/,1P,4E12.4)')
     1  ' NO CONVERGENCE IN "ENERGY", LABEL=8245: IMOD,F00,A00,M00,N0=',
     1                                          IMOD,F00S,A00S,M00S,N00S
C END APR 1997
C  Solution failed to converge. Restore previously converged soln:
                    F = F00S
                   AL = A00S
                    M = M00S
                    N = N00S
                    IIIA = IIIAS
                    IA   = IIIAS
                 ELSE
C  Solution converged. Use Newton again to reconfirm...
                    F00 = F
                    A00 = AL
                    M00 = M
                    N0  = N
C BEG DEC 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
                    CALL EPSAVE(N0,CS,CX,CY,NX,NY+FNYADD,NXY,ISTIF,NSEG,
     1               B,B2,H,W,W2,EPSLD2,ICOCUR,RESFIX,NX0,NY0+FNY0AD,
     1               NXY0,FARC,RNEW,EPSLDF,W0,ETHERM,RESFXL,RESEIG,0.,
     1               0.,0.,AMPLIT,IABT,CSN,0,FYRAT,0.,DELK2,8240)
C END DEC 2003
 8248               CONTINUE
C BEG MAY 1997
                    IF (NPRT.GE.1) WRITE(IFILE,'(A,I2)')
     1            ' ENTERING "NEWTON", LABEL=8248; IMOD=',IMOD
C END MAY 1997
C  Now f,a,m are free.  Fix N at new value found in ENERGY and refine
C  the three-variable solution f,a,m via NEWTON.  Use current values
C  of f,a,m as initial values, and use given value W0 for amplitude
C  of the initial local imperfection amplitude.
                    CALL NEWTON(0,NPRT,IFILE,CX,N,M,AL,F,NXY,E1SAVE,
     1                E2SAVE,E12SAV,N1SAVE,N2SAVE,N12SAV,EPS2S,EIGLOC,
     1                KOITER,EKOITR,F0,1,W0,NOCONV,IMOD,RESULT,
     1                ILOADS,JJJ,IW0,KOUNTW,KOUNTM,
     1                0.,KOUNTP,IFAIL,ICASE,CSN,WIMPL,WRATIO,IIIA,
     1                ITYPE,8248)
C BEG APR 1997
C23456789012345678901234567890123456789012345678901234567890123456789012
                    IF (NPRT.GE.1) WRITE(IFILE,'(A,2I2,/,A,1P,4E12.4)')
     1        ' LEAVING "NEWTON", LABEL=8248; IMOD,NOCONV=',IMOD,NOCONV,
     1            ' SOLN FROM "NEWTON": F,AL,M;  N=',F,AL,M,N
C END APR 1997
                    IF (IMOD.EQ.0) THEN
                       FMOD0  = F
                       ALMOD0 = AL
                       FMMOD0 = M
                       FNMOD0 = N
                       FWAVE0 = 2.*B(2)*SQRT(FNMOD0)/3.1415927
                       IF(NPRT.GT.1) WRITE(IFILE,'(A,1P,4E11.2)')
     1               ' VALUES FOR UNPERTURBED DESIGN: F,A,M,N=',
     1                                               F,AL,M,N
                    ENDIF
                 ENDIF
              ENDIF
C END AUG 1994
              IF (IMOD.EQ.0.AND.NPRT.GE.2)
     1          WRITE(IFILE,*)' AMPLITUDES: F00, F =', F00,F
              IF (ABS(F00).GT.1.2*ABS(F)) THEN
                 F = F00
                 AL= A00
                 M = M00
                 N = N0
              ENDIF
              IF (IMOD.EQ.0.AND.
     1          ABS(AL).GT.1.0.AND.(AL.LT.0.0.OR.AL.GT.ALBIG)) THEN
                 IIIA = 1
                 GO TO 172
              ENDIF
              IF (IMOD.EQ.0) THEN
                  FMOD0  = F
                  ALMOD0 = AL
                  FMMOD0 = M
                  FNMOD0 = N
                  IF(NPRT.GT.1) WRITE(IFILE,'(A,1P,4E11.2)')
     1     ' VALUES FOR UNPERTURBED DESIGN: F,A,M,N=',F,AL,M,N
                  IF (ISAVE.EQ.1.AND.ABS(AL).GE.0.2) THEN
                     FAMPSV(ILOADS,ICASE) = F
                     ALSAV(ILOADS,ICASE)  = AL
                     FMSAV(ILOADS,ICASE)  = M
                     FNSAV(ILOADS,ICASE)  = N
                  ENDIF
              ENDIF
            ENDIF
  132       CONTINUE
         ENDIF
C
         IF (IMOD.EQ.0) THEN
            WPOWR = WDISP(1,1)**3
            IF (ISTIF(1).EQ.4) WPOWR = WDISP(1,1)**2
            WAMP = F*(WDISP(1,1)+ AL*WPOWR)
C BEG AUG 2006
C           IF (NPRT.GE.1)
            IF (NPRT.GE.0)
C END AUG 2006
     1        WRITE(IFILE,200) E1SAVE,WIMPL,M,AL,F,WAMP,
     1                         MEIGSV,FWAVE0,NOCONV
  200       FORMAT(/' LOCAL DEFORMATION CHARACTERISTICS:'/
C BEG JAN 1995
C    1' Average axial strain,                       EXAVE =',1PE12.4/
     1' Average axial strain(not including thermal),EXAVE =',1PE12.4/
C END JAN 1995
     1' Initial local imperfection amplitude,           Wo=',1PE12.4/
     1' Slope of local buckling nodal lines in skin     M =',1PE12.4/
     1' Parameter "a" in the expression f*(phi +a*phi**3) =',1PE12.4/
     1' Amplitude  f  in the expression f*(phi +a*phi**3) =',1PE12.4/
     1' Normal displacement amplitude between stringers W =',1PE12.4/
     1' Number of axial halfwaves at local bifurcation    =',I6/
     1' Number of axial halfwaves in postbuckled regime   =',1PE12.4/
     1' Convergence characteristic,               NOCONV  =',I3/)
            FMEIGS = MEIGSV
            NWAVE0 = FWAVE0
            GWAVE0 = NWAVE0
            IF ((FWAVE0-GWAVE0).GT.0.5) NWAVE0 = NWAVE0 + 1
            GWAVE0 = NWAVE0
            IF (NWAVE0.GT.1.AND.FKNOCK.LT.1.0.AND.FKNOCK.GT.0.01
     1             .AND.ISTIF(1).NE.0.AND.GWAVE0.LT.0.01*FMEIGS) THEN
C    1             .AND.ISTIF(1).NE.0.AND.GWAVE0.LT.0.81*FMEIGS) THEN
               IF (KOUBCK.LT.2) IIBCK2 = 0
               IF (IIBCK2.EQ.0) IBACK2 = 1
               IF (IBACK2.EQ.1) THEN
                  NWAVE = NWAVE0
                  KOUBCK = KOUBCK + 1
                  RETURN
               ENDIF
            ENDIF
         ENDIF
C
         EXAVE = E1SAVE
         CALL VARSTF(N,M,AL,F,CX,EPSFIX,EPSLD2,E1SAVE,E2SAVE,EPS2S,
     1   NXVAR,NYVAR,E1VAR,E2VAR,THERMX,NPRT,IFILE,N2SAVE,W0,MAXSEG,
     1   ETHERM,TEMP,IMTEMP,RESULT,NXYVAR,E12VAR,E12SAV,0.,0.,0.,
     1   AMPLIT,RESEIG,CS,IABT)
      MSAVE = M
      ALSAVE= AL
      FSAV= F
      IF (IMOD.EQ.0) THEN
         AL0 = AL
         M0  = M
         F0  = F
         FSQ = F
      ENDIF
C
C BEG NOV 1995 (THESE STATEMENTS WERE MOVED UP FROM BELOW)
C BEG APR 1997
C     IF ((IMOD.EQ.0.AND.JJJ.EQ.0.AND.NPRT.GE.1).OR.NPRT.GT.1)
C BEG AUG 2006
C     IF ((IMOD.EQ.0.AND.JJJ.EQ.0.AND.NPRT.GE.1).OR.NPRT.GE.1) THEN
      IF ((IMOD.EQ.0.AND.JJJ.EQ.0.AND.NPRT.GE.0).OR.NPRT.GE.1) THEN
C END AUG 2006
         IF (IMOD.EQ.0) FWAVE1 = FWAVE0
         IF (IMOD.EQ.1) FWAVE1 = 2.*B(2)*SQRT(N)/3.1415927
         WRITE(IFILE,540) FWAVE1,M,AL,F,NX,NY,NXY,NX0,NY0,NXY0,
     1         E1SAVE+ETXBAR,E2SAVE+ETYBAR,E12SAV,
     1         N1SAVE+NTXBAR,N2SAVE+NTYBAR,N12SAV
      ENDIF
C END APR 1997
C
C23456789012345678901234567890123456789012345678901234567890123456789012
  540 FORMAT(/' RESULTS FOR',1PE12.4,' AXIAL WAVES...'/
     1' LOCAL DEFORMATION PARAMETERS:'/,
     1'    SLOPE, a, f       =',1P,3E12.4/
     1' APPLIED STRESS RESULTANTS (Load set A):'/
     1'    Nx, Ny, Nxy       =',1P,3E12.4/
     1' APPLIED STRESS RESULTANTS (Load set B):'/
     1'   Nxo, Nyo, Nxyo     =',1P,3E12.4/
     1' STRAIN AND STRESS FROM APPLIED LOADS:'/
     1' AVERAGE STRAIN COMPONENTS:'/
     1'   EPS1, EPS2, EPS12  =',1P,3E12.4/
     1' AVERAGE RESULTANTS IN SKIN:'/
     1' N1SKIN,N2SKIN,N12SKIN=',1P,3E12.4/
     1' NOTE: N1SKIN includes average of Nx in skin and stringer base.'
     1/)
C END NOV 1995
C********************************************************************
C END CALCULATION OF POST-LOCAL-BUCKLING EQUILIBRIUM STATE FROM
C KOITER THEORY
C*******************************************************************
C
C*******************************************************************
C BEGIN CALCULATION OF TANGENT STIFFNESS OF LOCALLY POSTBUCKLED
C PANEL SKIN AND STRINGER SEGMENTS.
C******************************************************************
C
C  Now get tangent stiffness matrix for the skin...
C
      KOUNTP = 0
   30 CONTINUE
      IFAIL = 0
      PERTA = ABS(PERT1/(NX-PERT1))
      IF (ISTIF(1).NE.5) PERTA = 0.
C BEG NOV 1995
      IF (NPRT.GE.2) THEN
         WRITE(IFILE,*)' -------------------------------------------'
         WRITE(IFILE,*)' PERTURB THE APPLIED AXIAL LOAD, Nx...'
      ENDIF
C END NOV 1995
C BEG DEC 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
      CALL EPSAVE(N,CS,CX,CY,NX-PERT1,NY+FNYADD,NXY,ISTIF,NSEG,B,B2,H,W,
     1       W2,EPSLD2,ICOCUR,RESFIX,NX0,NY0+FNY0AD,NXY0,FARC,RNEW,
     1       EPSLDF,W0,ETHERM,RESFXL,RESEIG,PERTA,0.,0.,AMPLIT,IABT,
     1       CSN,1,FYRAT,0.,DELK2,8250)
C END DEC 2003
 8250 CONTINUE
C BEG MAY 1997
      IF (NPRT.GE.1) WRITE(IFILE,'(A,I2)')
     1' ENTERING "NEWTON", LABEL=8250; IMOD=',IMOD
C END MAY 1997
      CALL NEWTON(1,NPRT,IFILE,CX,N,M,AL,F,NXY,E1,E2,E12,N1,N2,N12,
     1            DUM,EIGLOC,KOITER,EKOITR,F0,1,W0,NOCONV,IMOD,
     1            RESULT,ILOADS,JJJ,IW0,KOUNTW,KOUNTM,
     1            PERT1,KOUNTP,IFAIL,ICASE,CSN,WIMPL,WRATIO,IIIA,
     1            ITYPE,8250)
C BEG APR 1997
C23456789012345678901234567890123456789012345678901234567890123456789012
      IF (NPRT.GE.1) WRITE(IFILE,'(A,2I2,/,A,1P,4E12.4)')
     1' LEAVING "NEWTON", LABEL=8250; IMOD,NOCONV=',IMOD,NOCONV,
     1' SOLN FROM "NEWTON": F,AL,M;  N=',F,AL,M,N
C END APR 1997
C BEG NOV 1995
      IF (ISTIF(1).EQ.5.AND.EKOISV.LT.1.1.AND.ABS(FSAV).GT.0.01*TX(1)
     1    .AND.F*FSAV.LT.0.0.AND.IFAIL.EQ.0.AND.KOUNTP.LE.2) THEN
         M  = MSAVE
         AL = ALSAVE
         F  = FSAV
         PERT1 = PERT1/10.
         KOUNTP = KOUNTP + 1
         GO TO 30
      ENDIF
C END NOV 1995
      IF (IFAIL.EQ.1.AND.KOUNTP.LE.2) THEN
         M  = MSAVE
         AL = ALSAVE
         F  = FSAV
         GO TO 30
      ENDIF
C
      IF (IW0.EQ.1.AND.KOUNTW.LE.KOUNTM) GO TO 5
      CALL VARSTF(N,M,AL,F,CX,EPSFIX,EPSLD2,E1,E2,DUM,
     1    NXNEW1,NYNEW1,E1NEW1,E2NEW1,THERMX,NPRT,IFILE,N2,W0,MAXSEG,
     1    ETHERM,TEMP,IMTEMP,RESULT,NXYNEW,E12NEW,E12,
     1    PERTA,0.,0.,AMPLIT,RESEIG,CS,IABT)
C
      EMAT(1,1) = E1 - E1SAVE
      EMAT(1,2) = E2 - E2SAVE
      EMAT(1,3) = E12- E12SAV
      NMAT(1,1) = N1 - N1SAVE
      NMAT(1,2) = N2 - N2SAVE
      NMAT(1,3) = N12- N12SAV
C
      IF (NPRT.GE.3) THEN
         WRITE(8,5551) N1SAVE,N2SAVE,N12SAV,E1SAVE,E2SAVE,E12SAV,
     1                 -PERT1, -PERT2, PERT3
 5551    FORMAT(/' INGREDIENTS OF MEMBRANE STIFFNESS CALCULATION'/
     1 ' BASELINE  AXIAL,HOOP,SHEAR LOADS:       ='1P,3E12.4/
     1 ' BASELINE  AXIAL,HOOP,SHEAR STRAINS:     ='1P,3E12.4/
     1 ' LOAD PERTURBATIONS, -PERT1,-PERT2,PERT3 ='1P,3E12.4)
C
         WRITE(8,5552) N1,N2,N12,E1,E2,E12,NMAT(1,1),EMAT(1,1)
 5552    FORMAT(/' RESULTS AFTER PERTURBING AXIAL LOAD'/
     1 ' PERTURBED AXIAL,HOOP,SHEAR LOADS:       ='1P,3E12.4/
     1 ' PERTURBED AXIAL,HOOP,SHEAR STRAINS:     ='1P,3E12.4/
     1 ' AXIAL FORCE  INCREMENT:      N1 - N1SAVE=',1PE12.4/
     1 ' AXIAL STRAIN INCREMENT:      E1 - E1SAVE=',1PE12.4)
         WRITE(8,5546)  (NXVAR(I,1),I=1,9)
         WRITE(8,5547) (NXNEW1(I,1),I=1,9)
         WRITE(8,5548)  (E1VAR(I,1),I=1,9)
         WRITE(8,5549) (E1NEW1(I,1),I=1,9)
 5546    FORMAT(' BASELINE  AXIAL RESULTANT IN SEG. 1, NXVAR='/
     1           (1P,10E12.4))
 5547    FORMAT(' PERTURBED AXIAL RESULTANT IN SEG. 1, NXNEW1='/
     1           (1P,10E12.4))
 5548    FORMAT(' BASELINE  AXIAL STRAIN IN SEG. 1,    E1VAR='/
     1           (1P,10E12.4))
 5549    FORMAT(' PERTURBED AXIAL STRAIN IN SEG. 1,    E1NEW1='/
     1           (1P,10E12.4))
      ENDIF
      M   = MSAVE
      AL  = ALSAVE
      F = FSAV
      KOUNTP = 0
   35 CONTINUE
      IFAIL = 0
      PERTA = ABS(PERT2)
      IF (ISTIF(1).NE.5) PERTA = 0.
C BEG NOV 1995
      IF (NPRT.GE.2) THEN
         WRITE(IFILE,*)' -------------------------------------------'
         WRITE(IFILE,*)' PERTURB THE APPLIED HOOP LOAD, Ny...'
      ENDIF
C END NOV 1995
C BEG DEC 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
      CALL EPSAVE(N,CS,CX,CY,NX,NY+FNYADD-PERT2,NXY,ISTIF,NSEG,B,B2,H,W,
     1       W2,EPSLD2,ICOCUR,RESFIX,NX0,NY0+FNY0AD,NXY0,FARC,RNEW,
     1       EPSLDF,W0,ETHERM,RESFXL,RESEIG,0.,PERTA,0.,AMPLIT,IABT,
     1       CSN,1,FYRAT,PERT2,DELK2,8260)
C END DEC 2003
 8260 CONTINUE
C BEG MAY 1997
      IF (NPRT.GE.1) WRITE(IFILE,'(A,I2)')
     1' ENTERING "NEWTON", LABEL=8260; IMOD=',IMOD
C END MAY 1997
      CALL NEWTON(1,NPRT,IFILE,CX,N,M,AL,F,NXY,E1,E2,E12,N1,N2,N12,
     1            DUM,EIGLOC,KOITER,EKOITR,F0,1,W0,NOCONV,IMOD,
     1            RESULT,ILOADS,JJJ,IW0,KOUNTW,KOUNTM,
     1            PERT2,KOUNTP,IFAIL,ICASE,CSN,WIMPL,WRATIO,IIIA,
     1            ITYPE,8260)
C BEG APR 1997
C23456789012345678901234567890123456789012345678901234567890123456789012
      IF (NPRT.GE.1) WRITE(IFILE,'(A,2I2,/,A,1P,4E12.4)')
     1' LEAVING "NEWTON", LABEL=8260; IMOD,NOCONV=',IMOD,NOCONV,
     1' SOLN FROM "NEWTON": F,AL,M;  N=',F,AL,M,N
C END APR 1997
C BEG NOV 1995
      IF (ISTIF(1).EQ.5.AND.EKOISV.LT.1.1.AND.ABS(FSAV).GT.0.01*TX(1)
     1    .AND.F*FSAV.LT.0.0.AND.IFAIL.EQ.0.AND.KOUNTP.LE.2) THEN
         M  = MSAVE
         AL = ALSAVE
         F  = FSAV
         PERT2 = PERT2/10.
         KOUNTP = KOUNTP + 1
         GO TO 35
      ENDIF
C END NOV 1995
      IF (IFAIL.EQ.1.AND.KOUNTP.LE.2) THEN
         M  = MSAVE
         AL = ALSAVE
         F  = FSAV
         GO TO 35
      ENDIF
C
      IF (IW0.EQ.1.AND.KOUNTW.LE.KOUNTM) GO TO 5
      CALL VARSTF(N,M,AL,F,CX,EPSFIX,EPSLD2,E1,E2,DUM,
     1    NXNEW2,NYNEW2,E1NEW2,E2NEW2,THERMX,NPRT,IFILE,N2,W0,MAXSEG,
     1    ETHERM,TEMP,IMTEMP,RESULT,NXYNEW,E12NEW,E12,
     1    0.,PERTA,0.,AMPLIT,RESEIG,CS,IABT)
C
      EMAT(2,1) = E1 - E1SAVE
      EMAT(2,2) = E2 - E2SAVE
      EMAT(2,3) = E12- E12SAV
      NMAT(2,1) = N1 - N1SAVE
      NMAT(2,2) = N2 - N2SAVE
      NMAT(2,3) = N12- N12SAV
C
      IF (NPRT.GE.3) THEN
         WRITE(8,5553) N1,N2,N12,E1,E2,E12
 5553    FORMAT(/' RESULTS AFTER PERTURBING HOOP LOAD'/
     1 ' PERTURBED AXIAL,HOOP,SHEAR LOADS:       ='1P,3E12.4/
     1 ' PERTURBED AXIAL,HOOP,SHEAR STRAINS:     ='1P,3E12.4)
      ENDIF
      M   = MSAVE
      AL  = ALSAVE
      F = FSAV
      KOUNTP = 0
   40 CONTINUE
      IFAIL = 0
      PERTA = ABS(PERT3)
      IF (ISTIF(1).NE.5) PERTA = 0.
C BEG NOV 1995
      IF (NPRT.GE.2) THEN
         WRITE(IFILE,*)' -------------------------------------------'
         WRITE(IFILE,*)
     1    ' PERTURB THE APPLIED IN-PLANE SHEAR LOAD, Nxy...'
      ENDIF
C END NOV 1995
C BEG DEC 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
      CALL EPSAVE(N,CS,CX,CY,NX,NY+FNYADD,NXY+PERT3,ISTIF,NSEG,B,B2,H,W,
     1       W2,EPSLD2,ICOCUR,RESFIX,NX0,NY0+FNY0AD,NXY0,FARC,RNEW,
     1       EPSLDF,W0,ETHERM,RESFXL,RESEIG,0.,0.,PERTA,AMPLIT,IABT,
     1       CSN,1,FYRAT,0.,DELK2,8270)
C END DEC 2003
 8270 CONTINUE
C BEG MAY 1997
      IF (NPRT.GE.1) WRITE(IFILE,'(A,I2)')
     1' ENTERING "NEWTON", LABEL=8270; IMOD=',IMOD
C END MAY 1997
      CALL NEWTON(1,NPRT,IFILE,CX,N,M,AL,F,NXY+PERT3,E1,E2,E12,
     1      N1,N2,N12,DUM,EIGLOC,KOITER,EKOITR,F0,1,W0,NOCONV,IMOD,
     1      RESULT,ILOADS,JJJ,IW0,KOUNTW,KOUNTM,
     1      PERT3,KOUNTP,IFAIL,ICASE,CSN,WIMPL,WRATIO,IIIA,
     1      ITYPE,8270)
C BEG APR 1997
C23456789012345678901234567890123456789012345678901234567890123456789012
      IF (NPRT.GE.1) WRITE(IFILE,'(A,2I2,/,A,1P,4E12.4)')
     1' LEAVING "NEWTON", LABEL=8270; IMOD,NOCONV=',IMOD,NOCONV,
     1' SOLN FROM "NEWTON": F,AL,M;  N=',F,AL,M,N
C END APR 1997
C BEG NOV 1995
      IF (ISTIF(1).EQ.5.AND.EKOISV.LT.1.1.AND.ABS(FSAV).GT.0.01*TX(1)
     1    .AND.F*FSAV.LT.0.0.AND.IFAIL.EQ.0.AND.KOUNTP.LE.2) THEN
         M  = MSAVE
         AL = ALSAVE
         F  = FSAV
         PERT3 = PERT3/10.
         KOUNTP = KOUNTP + 1
         GO TO 40
      ENDIF
C END NOV 1995
      IF (IFAIL.EQ.1.AND.KOUNTP.LE.2) THEN
         M  = MSAVE
         AL = ALSAVE
         F  = FSAV
         GO TO 40
      ENDIF
C
      IF (IW0.EQ.1.AND.KOUNTW.LE.KOUNTM) GO TO 5
      CALL VARSTF(N,M,AL,F,CX,EPSFIX,EPSLD2,E1,E2,DUM,
     1    NXNEW3,NYNEW3,E1NEW3,E2NEW3,THERMX,NPRT,IFILE,N2,W0,MAXSEG,
     1    ETHERM,TEMP,IMTEMP,RESULT,NXYNEW,E12NEW,E12,0.,0.,PERTA,
     1    AMPLIT,RESEIG,CS,IABT)
      EMAT(3,1) = E1 - E1SAVE
      EMAT(3,2) = E2 - E2SAVE
      EMAT(3,3) = E12- E12SAV
      NMAT(3,1) = N1 - N1SAVE
      NMAT(3,2) = N2 - N2SAVE
      NMAT(3,3) = N12- N12SAV
C
      EMAT33 = EMAT(3,3)
      NMAT33 = NMAT(3,3)
C
      IF (NPRT.GE.3) THEN
         WRITE(8,5554) N1,N2,N12,E1,E2,E12
 5554    FORMAT(/' RESULTS AFTER PERTURBING SHEAR LOAD'/
     1 ' PERTURBED AXIAL,HOOP,SHEAR LOADS:       ='1P,3E12.4/
     1 ' PERTURBED AXIAL,HOOP,SHEAR STRAINS:     ='1P,3E12.4)
      ENDIF
C
C  NEXT, GET TANGENT STIFFNESS MATRIX, CTAN (SEE PANDA2.NEWS ITEM 215),
C
C BEG NOV 1995
      IF (NPRT.GE.2) THEN
         WRITE(IFILE,*)' -------------------------------------------'
         WRITE(IFILE,*)'  '
         WRITE(IFILE,*)' 3X3 MATRICES FOR STRAIN AND FORCE CHANGE...'
         WRITE(IFILE,401)
C23456789012345678901234567890123456789012345678901234567890123456789012
  401    FORMAT( '       EMAT, THE STRAIN-CHANGE MATRIX       NMAT, THE 
     1FORCE-CHANGE MATRIX'/
     1'       d(EPS1)    d(EPS2)    d(EPS12)     d(N1skin)  d(N2skin)   
     1d(N12skn)')
         DWORD(1) = '  dNx'
         DWORD(2) = '  dNy'
         DWORD(3) = ' dNxy'
         DO 403 I = 1,3
            WRITE(IFILE,402) 
     1        DWORD(I), (EMAT(I,J),J=1,3), (NMAT(I,J),J=1,3)
  402       FORMAT(A,1P,3E11.3,2X,1P,3E11.3)
C END NOV 1995
  403    CONTINUE
      ENDIF
C
C BEG NOV 1995
C  NEXT, SET UP SIX EQUATIONS FOR THE SIX UNKNOWNS:
C          CTAN11,CTAN12,CTAN13,CTAN22,CTAN23,CTAN33
C  THERE ARE ACTUALLY 9 EQUATIONS AND 9 UNKNOWNS, BUT WE KNOW IN
C  ADVANCE THAT THE 3X3 CTAN MATRIX MUST BE SYMMETRIC. WE USE THE
C  FOLLOWING EQUATIONS TO FIND Ctan11,Ctan12,Ctan13,Ctan22,Ctan23,Ctan33:
C
C   1. N1skin(1) = Ctan11*Emat(1,1) +Ctan12*Emat(1,2) +Ctan13*Emat(1,3)
C   2. N2skin(1)+N1skin(2) =Ctan11*Emat(2,1) +Ctan12*(Emat(1,1)+Emat(2,2))
C                    +Ctan13*Emat(2,3) +Ctan22*Emat(1,2) +Ctan23*Emat(1,3)
C   3. N1skin(3) = Ctan11*Emat(3,1) +Ctan12*Emat(3,2) +Ctan13*Emat(3,3)
C   4. N2skin(2) = Ctan12*Emat(2,1) +Ctan22*Emat(2,2) +Ctan23*Emat(2,3)
C   5. N2skin(3) = Ctan12*Emat(3,1) +Ctan22*Emat(3,2) +Ctan23*Emat(3,3)
C   6. N12skn(3) = Ctan13*Emat(3,1) +Ctan23*Emat(3,2) +Ctan33*Emat(3,3)
C
C  The above six equations are solved for
C                  Ctan11,Ctan12,Ctan13,Ctan22,Ctan23,Ctan33
C  The 3x3 average strain increment matrix Emat and
C  the 3x3 force increment matrix Nmat have just be computed and are known.
C  The quantities N1skin(i), N2skin(i), N12skn(i) are identified with the
C  3x3 force increment matrix Nmat matrix as follows:
C         N1skin(1) = Nmat(1,1)
C         N1skin(2) = Nmat(2,1)
C         N2skin(1) = Nmat(1,2)
C         N1skin(3) = Nmat(3,1)
C         N2skin(2) = Nmat(2,2)
C         N2skin(3) = Nmat(3,2)
C         N12skn(3) = Nmat(3,3)
C
C        CALL MOVER(0.,0,EXPAND,1,81)
C        EXPAND(1,1) = EMAT(1,1)
C        EXPAND(1,2) = EMAT(1,2)
C        EXPAND(1,3) = EMAT(1,3)
C        EXPAND(2,4) = EMAT(1,1)
C        EXPAND(2,5) = EMAT(1,2)
C        EXPAND(2,6) = EMAT(1,3)
C        EXPAND(3,7) = EMAT(1,1)
C        EXPAND(3,8) = EMAT(1,2)
C        EXPAND(3,9) = EMAT(1,3)
C
C        EXPAND(4,1) = EMAT(2,1)
C        EXPAND(4,2) = EMAT(2,2)
C        EXPAND(4,3) = EMAT(2,3)
C        EXPAND(5,4) = EMAT(2,1)
C        EXPAND(5,5) = EMAT(2,2)
C        EXPAND(5,6) = EMAT(2,3)
C        EXPAND(6,7) = EMAT(2,1)
C        EXPAND(6,8) = EMAT(2,2)
C        EXPAND(6,9) = EMAT(2,3)
C
C        EXPAND(7,1) = EMAT(3,1)
C        EXPAND(7,2) = EMAT(3,2)
C        EXPAND(7,3) = EMAT(3,3)
C        EXPAND(8,4) = EMAT(3,1)
C        EXPAND(8,5) = EMAT(3,2)
C        EXPAND(8,6) = EMAT(3,3)
C        EXPAND(9,7) = EMAT(3,1)
C        EXPAND(9,8) = EMAT(3,2)
C        EXPAND(9,9) = EMAT(3,3)
C
C        RHS(1) = NMAT(1,1)
C        RHS(2) = NMAT(1,2)
C        RHS(3) = NMAT(1,3)
C
C        RHS(4) = NMAT(2,1)
C        RHS(5) = NMAT(2,2)
C        RHS(6) = NMAT(2,3)
C
C        RHS(7) = NMAT(3,1)
C        RHS(8) = NMAT(3,2)
C        RHS(9) = NMAT(3,3)
C
C        CALL INVERT(EXPAND,9,ISING)
C        CALL MOVER(0.,0,CSKIN,1,9)
         CALL MOVER(0.,0,CTAN,1,9)
C        IF (ISING.EQ.0) THEN
C           DO 417 I = 1,9
C           DO 416 J = 1,9
C              CSKIN(I) = CSKIN(I) + EXPAND(I,J)*RHS(J)
C 416       CONTINUE
C 417       CONTINUE
C           IF (CSKIN(1).LT.0.0) CSKIN(1) = 0.001*ABS(CSKIN(1))
C           IF (CSKIN(4).LT.0.0) CSKIN(4) = 0.001*ABS(CSKIN(4))
C           IF (CSKIN(6).LT.0.0) CSKIN(6) = 0.001*ABS(CSKIN(6))
C           IF (NPRT.GE.2) WRITE(IFILE,418) (CSKIN(I),I=1,9)
C 418       FORMAT(/' CTAN11,12,13,21,22,23,31,32,33=',/(1P,9E12.4))
C           CTAN(1,1) = CSKIN(1)
C           CTAN(1,2) = (CSKIN(2) + CSKIN(4))/2.
C           CTAN(1,3) = (CSKIN(3) + CSKIN(7))/2.
C           CTAN(2,2) = CSKIN(5)
C           CTAN(2,3) = (CSKIN(6) + CSKIN(8))/2.
C           CTAN(3,3) = CSKIN(9)
C           CTAN(2,1) = CTAN(1,2)
C           CTAN(3,1) = CTAN(1,3)
C           CTAN(3,2) = CTAN(2,3)
C           IF ((IMOD.EQ.0.AND.JJJ.EQ.0.AND.NPRT.GE.1).OR.NPRT.GT.1)
C    1      THEN
C              WRITE(IFILE,'(/,A)')
C    1       ' TANGENT STIFFNESS FROM NOV 1995 THEORY (SEE ITEM 215)'
C              WRITE(IFILE,550) ((CTAN(I,J),J=1,3),I=1,3)
C              CALL MOVER(CTAN,1,CINV,1,9)
C              CALL INVERT(CINV,3,ISING2)
C              IF (ISING2.EQ.0) THEN
C                WRITE(IFILE,'(/,A)')
C    1         ' INVERSE OF TANGENT STIFFNESS FROM NOV 1995 THEORY'
C                WRITE(IFILE,550) ((CINV(I,J),J=1,3),I=1,3)
C              ENDIF
C           ENDIF
C
C  Doctor up CTAN to account for the fact that BOSOR-type analysis
C  cannot handle CTAN(1,3), CTAN(2,3) TERMS...
C
C           CTAN(3,3) = NMAT33/EMAT33
C           CTAN(1,3) = 0.
C           CTAN(2,3) = 0.
C           CTAN(3,1) = 0.
C           CTAN(3,2) = 0.
C           DO 419 I = 1,3
C              IF (CTAN(I,I).GT.CS(I,I)) CTAN(I,I) = CS(I,I)
C 419       CONTINUE
C           PBCTAN(1)= CTAN(1,1)
C           PBCTAN(2)= CTAN(1,2)
C           PBCTAN(3)= CTAN(2,2)
C           PBCTAN(4)= CTAN(3,3)
C           GO TO 442
C        ENDIF
C END NOV 1995
C BEG NOV 1995
         DETMAT = EMAT(1,1)*(EMAT(2,2)*EMAT(3,3)-EMAT(3,2)*EMAT(2,3))
     1           -EMAT(2,1)*(EMAT(1,2)*EMAT(3,3)-EMAT(3,2)*EMAT(1,3))
     1           +EMAT(3,1)*(EMAT(1,2)*EMAT(2,3)-EMAT(2,2)*EMAT(1,3))
         ISING = 0
         IF (DETMAT.NE.0.0) THEN
C23456789012345678901234567890123456789012345678901234567890123456789012
          DO 430 KK = 1,3
          CTAN(KK,1)=
     1    (+(EMAT(2,2)*EMAT(3,3)-EMAT(3,2)*EMAT(2,3))*NMAT(1,KK)
     1     -(EMAT(1,2)*EMAT(3,3)-EMAT(3,2)*EMAT(1,3))*NMAT(2,KK)
     1     +(EMAT(1,2)*EMAT(2,3)-EMAT(2,2)*EMAT(1,3))*NMAT(3,KK))/DETMAT
          CTAN(KK,2)=
     1    (-(EMAT(2,1)*EMAT(3,3)-EMAT(3,1)*EMAT(2,3))*NMAT(1,KK)
     1     +(EMAT(1,1)*EMAT(3,3)-EMAT(3,1)*EMAT(1,3))*NMAT(2,KK)
     1     -(EMAT(1,1)*EMAT(2,3)-EMAT(2,1)*EMAT(1,3))*NMAT(3,KK))/DETMAT
          CTAN(KK,3)=
     1    (+(EMAT(2,1)*EMAT(3,2)-EMAT(3,1)*EMAT(2,2))*NMAT(1,KK)
     1     -(EMAT(1,1)*EMAT(3,2)-EMAT(3,1)*EMAT(1,2))*NMAT(2,KK)
     1     +(EMAT(1,1)*EMAT(2,2)-EMAT(2,1)*EMAT(1,2))*NMAT(3,KK))/DETMAT
  430     CONTINUE
         ELSE
          ISING = 1
         ENDIF
C
C        CALL INVERT(EMAT,3,ISING)
         IF (ISING.EQ.1.AND.(ISTIF(1).EQ.0.OR.ISTIF(1).EQ.5)) THEN
            WRITE(8,*)' 3 X 3  EMAT MATRIX IS SINGULAR. NOW IN KOITER.'
            CALL ERREX
         ENDIF
C
C           CTAN(transpose) = inverse[EMAT] * [NMAT]
C
         IF (ISING.EQ.0) THEN
C           DO 430 KK = 1,3
C           DO 430 JJ = 1,3
C           DO 420 LL = 1,3
C              CTAN(KK,JJ) = CTAN(KK,JJ) + EMAT(JJ,LL)*NMAT(LL,KK)
C 420       CONTINUE
C 430       CONTINUE
C END NOV 1995
            IF ((IMOD.EQ.0.AND.JJJ.EQ.0.AND.NPRT.GE.1).OR.NPRT.GT.1)
     1      THEN
               WRITE(IFILE,'(/,A)')
     1           ' TANGENT STIFFNESS BEFORE SYMMETRIZATION'
               WRITE(IFILE,550) ((CTAN(I,J),J=1,3),I=1,3)
            ENDIF
C
C  Symmetrize CTAN...
C
            CTAN(1,2) = 0.5*(CTAN(1,2) + CTAN(2,1))
            CTAN(2,1) = CTAN(1,2)
            CTAN(1,3) = 0.5*(CTAN(1,3) + CTAN(3,1))
            CTAN(3,1) = CTAN(1,3)
            CTAN(2,3) = 0.5*(CTAN(2,3) + CTAN(3,2))
            CTAN(3,2) = CTAN(2,3)
C BEG NOV 1995
            CALL MOVER(0.,0,CNORM,1,9)
            CALL MOVER(0.,0,CSECNT,1,9)
            DO 421 I = 1,3
               IF (ISTIF(1).NE.5) THEN
                  CNORM(I,I) = CTAN(I,I)/CX(I,I,1)
               ELSE
                  CNORM(I,I) = CTAN(I,I)/CSN(I,I)
               ENDIF
  421       CONTINUE
            CNORM(1,2) = CTAN(1,2)/CTAN(1,1)
            IF (ISTIF(1).NE.5) THEN
               CNORM(1,3) = CTAN(1,3)/CX(1,1,1)
               CNORM(2,3) = CTAN(2,3)/CX(2,2,1)
            ELSE
               CNORM(1,3) = CTAN(1,3)/CSN(1,1)
               CNORM(2,3) = CTAN(2,3)/CSN(2,2)
            ENDIF
C END NOV 1995
C BEG JAN 1996
            PBCTN2(1)=CNORM(1,1)
            PBCTN2(2)=CNORM(1,2)
            PBCTN2(3)=CNORM(1,3)
            PBCTN2(4)=CNORM(2,2)
            PBCTN2(5)=CNORM(2,3)
            PBCTN2(6)=CNORM(3,3)
C END JAN 1996
C
            IF ((IMOD.EQ.0.AND.JJJ.EQ.0.AND.NPRT.GE.1).OR.NPRT.GE.0)
     1      THEN
               WRITE(IFILE,'(/,A)')
     1           ' TANGENT STIFFNESS AFTER SYMMETRIZATION'
               WRITE(IFILE,550) ((CTAN(I,J),J=1,3),I=1,3)
C BEG NOV 1995
               WRITE(IFILE,'(/,A,1P,E12.4)') 
     1        ' (APPLIED LOAD)/(BUCKLING LOAD)=',1./EKOISV
               IF (ISTIF(1).NE.5) THEN
                  WRITE(IFILE,551) (CNORM(I,I),I=1,3),
     1             CNORM(1,2),CNORM(1,3),CNORM(2,3)
  551             FORMAT(/
     1          ' NORMALIZED AVERAGE SKIN TANGENT STIFFNESS MATRIX'/
     1          ' (CTAN(i,i)/CX(i,i,1), i=1,2,3) = ',1P,3E12.4/
     1          ' TANGENT POISSON RATIO'/
     1          ' CTAN(1,2)/CTAN(1,1) = ',1P,E12.4/
     1          ' NORMALIZED AVERAGE (N1skin,N12skn) COUPLING'/
     1          ' CTAN(1,3)/CX(1,1,1) = ',1P,E12.4/
     1          ' NORMALIZED AVERAGE (N2skin,N12skn) COUPLING'/
     1          ' CTAN(2,3)/CX(2,2,1) = ',1P,E12.4)
               ELSE
                  WRITE(IFILE,553) (CNORM(I,I),I=1,3),
     1             CNORM(1,2),CNORM(1,3),CNORM(2,3)
  553             FORMAT(/
     1          ' NORMALIZED AVERAGE SKIN TANGENT STIFFNESS MATRIX'/
     1          ' (CTAN(i,i)/CSN(i,i), i=1,2,3) = ',1P,3E12.4/
     1          ' TANGENT POISSON RATIO'/
     1          ' CTAN(1,2)/CTAN(1,1) = ',1P,E12.4/
     1          ' NORMALIZED AVERAGE (N1skin,N12skn) COUPLING'/
     1          ' CTAN(1,3)/CSN(1,1)  = ',1P,E12.4/
     1          ' NORMALIZED AVERAGE (N2skin,N12skn) COUPLING'/
     1          ' CTAN(2,3)/CSN(2,2)  = ',1P,E12.4)
               ENDIF
C END NOV 1995
            ENDIF
C
C  Doctor up CTAN to account for the fact that BOSOR-type analysis
C  cannot handle CTAN(1,3), CTAN(2,3) TERMS...
C
            CTAN(3,3) = NMAT33/EMAT33
            CTAN(1,3) = 0.
            CTAN(2,3) = 0.
            CTAN(3,1) = 0.
            CTAN(3,2) = 0.
            DO 440 I = 1,3
               IF (CTAN(I,I).GT.CS(I,I)) CTAN(I,I) = CS(I,I)
  440       CONTINUE
            PBCTAN(1)= CTAN(1,1)
            PBCTAN(2)= CTAN(1,2)
            PBCTAN(3)= CTAN(2,2)
            PBCTAN(4)= CTAN(3,3)
         ENDIF
C BEG NOV 1995
C 442 CONTINUE
C END NOV 1995
      CTAN(3,3) = NMAT33/EMAT33
C
      M = MSAVE
      AL= ALSAVE
      F = FSAV
C
      PBSLOP = M
      PBMWAV = FWAVE0
      PBA    = AL
      PBF    = F
      ETXBAR = EPSFIX(1,1,1)*B11T + EPSFIX(1,2,1)*B12T
      ETYBAR = EPSFIX(2,1,1)*B11T + EPSFIX(2,2,1)*B12T
      PBEPS(1) = E1SAVE+ETXBAR
      PBEPS(2) = E2SAVE+ETYBAR
      PBEPS(3) = E12SAV
      PBNSKN(1)= N1SAVE+NTXBAR
      PBNSKN(2)= N2SAVE+NTYBAR
      PBNSKN(3)= N12SAV
      IF ((IMOD.EQ.0.AND.JJJ.EQ.0.AND.NPRT.GE.1).OR.NPRT.GT.1) THEN
         IF (ISTIF(1).EQ.0.OR.ISTIF(1).EQ.5) THEN
            WRITE(IFILE,'(/,A)')
     1 ' TANGENT STIFFNESS AFTER DOCTORING FOR USE WITH BOSOR4 MODELS'
            WRITE(IFILE,550) ((CTAN(I,J),J=1,3),I=1,3)
         ENDIF
  550 FORMAT( ' AVERAGE SKIN TANGENT STIFFNESS MATRIX'/
     1        ' (Segments 1 and 2 averaged),    CTAN...'/(1P,3E12.4))    
C     
      IF (ISTIF(1).EQ.5) WRITE(IFILE,552) ((CTAN(I,J),J=1,3),I=1,3)    
  552 FORMAT(/' ENTIRE TRUSS-CORE SANDWICH TANGENT STIFFNESS MATRIX'/
     1        ' (Segments 1 thru 4 averaged),    CTAN...'/(1P,3E12.4))    
C     
      ENDIF
C
      CALL AXLSTF(MAXSEG,CX,1,NPRT,NXNEW1,NXNEW2,NXVAR,E1NEW1,
     1   E2NEW1,E1NEW2,E2NEW2,E1VAR,E2VAR,C11TAN,C12TAN,
     1   C22TAN,C21TAN,CTAN(3,3),C33TAN,CMIN,IFILE,TEMP,IMTEMP,
     1   NXYNEW,E12NEW,NXYVAR,E12VAR,C13TAN,C23TAN,
     1   NXNEW3,NYNEW3,E1NEW3,E2NEW3,CTAN,CS,F,IFILE,PBCTAN)
C
      CALL AXLSTF(MAXSEG,CX,2,NPRT,NYNEW1,NYNEW2,NYVAR,E1NEW1,
     1   E2NEW1,E1NEW2,E2NEW2,E1VAR,E2VAR,C11TAN,C12TAN,
     1   C22TAN,C21TAN,CTAN(3,3),C33TAN,CMIN,IFILE,TEMP,IMTEMP,
     1   NXYNEW,E12NEW,NXYVAR,E12VAR,C13TAN,C23TAN,
     1   NXNEW3,NYNEW3,E1NEW3,E2NEW3,CTAN,CS,F,IFILE,PBCTAN)
C
C*******************************************************************
C END CALCULATION OF TANGENT STIFFNESS OF LOCALLY POSTBUCKLED
C PANEL SKIN AND STRINGER SEGMENTS.
C******************************************************************
C
  600 CONTINUE
C
C  Now, calculate the reference surface strains and the resultants...
C
      CALL STRMID(N,M,AL,FMULT*F,CX,EPSFIX,EPSLD2,ETHERM,E1SAVE,E2SAVE,
     1            EPS2S,E12SAV,EX,EY,EYADD,EXY,NXVAR,NYVAR,NXYVAR,
     1            THERMX,IMOD,NPRT,IFILE,RESEIG,EPSEIG,CY,ZPARTY,
     1            NXY,N2SAVE,WPB1,IEND,MAXSEG,RESFIX,RESULT,EPSFXL,
     1            RESFXL,EPSTOT,THERMY,EPSLDF,NXFIX,NYFIX,NXYFIX,
     1            NYTOT,NY0TOT,W0,C11TAN,C12TAN,C22TAN,C33TAN,EKOISV,
     1            TEMP,IMTEMP,IABT,RWBTOT,RWBEIG,IDIDIT,DELK2,DELCR2,
C BEG NOV 2003
     1            ICASE,DNX)
C END NOV 2003
C
      W0 = W0SAVE
C     IF (CTAN(1,1).LT.0.0.OR.CTAN(2,2).LT.0.0.OR.CTAN(3,3).LT.0.0) THEN
C        WRITE(IFILE,620) CTAN(1,1),CTAN(2,2),CTAN(3,3)
C 620    FORMAT(/' ****** NEGATIVE TERM(S) ON DIAGONAL OF CTAN *******'/
C    1   ' TANGENT STIFFNESS TERMS:'/
C    1   '   CTAN(1,1), CTAN(2,2), CTAN(3,3) =', 1P,3E12.4/
C    1   ' CALCULATIONS TERMINATING. CHANGE YOUR CONFIGURATION OR'/
C    1   ' INCREASE THE AMPLITUDE OF THE LOCAL INITIAL IMPERFECTION'/
C    1   ' AND START AGAIN.'/
C    1   ' **********************************************************'/)
C        CALL ERREX
C     ENDIF
C
      IF (ILONG.EQ.1) THEN
C
C  DO THE BIGGER POSTBUCKLING PROBLEM (WITH a0,a1,m,N)
C
         CALL CASUM(CX,A,CA,W0,R)
         FSIGN = 1.
         IF (R.LT.0.) FSIGN=-1.
         ARG=  B(1)/(2.*ABS(R))
         A0 =  F*FSIGN
         A1 =  A0*AL
C        A3 =  R*(1.-COS(ARG))
C        IF (ABS(A3).GT.ABS(A0)) A3 = A0
C        A2 =  A3/5.
         MNEW = M
         NNEW = N
         CALL NEWTN2(NPRT,IFILE,CX,CA,A,W0,A0,A1,A2,A3,A4,A5,A6,
     1               MNEW,NNEW,R,NXY,P)
C        CALL EXIT
      ENDIF
C
      CALL MOVER(EPSLD2,1,EPSLOD,1,6)
C
C BEG FEB 1996
 2222 CONTINUE
C END FEB 1996
      RETURN
      END
C
C
C
C BEG APR 1996
C=DECK      CHGSLP
      SUBROUTINE CHGSLP(IFILE,NPRT,W,I5,MSLOPE)
C
C  THIS SUBROUTINE IS CALLED FROM SUBROUTINE KOIT2. THE
C  PURPOSE IS TO MODIFY THE RATIOS OF LOCAL BUCKLING NODAL LINE SLOPES
C  IN A TRUSS-CORE PANEL IF THE BUCKLING MODE SHAPE FROM THE DISCRETIZED
C  SINGLE MODULE MODEL INDICATES THAT THIS IN NECESSARY (IF THE
C  BUCKLING MODE FROM THE DISCRETIZED MODEL SHOWS THAT A DIFFERENT
C  MODULE SEGMENT BUCKLES FROM THE SEGMENT THAT BUCKLES FIRST ACCORDING
C  TO THE PANDA-TYPE OF ANALYSIS PERFORMED IN SUBROUTINE BUCPAN.)
C
C  INPUT: 
C    W(23,8) are the local buckling modal normal displacements.
C    I5(*)   are the number of nodal points in each segment of the module.
C    MSLOPE(*) are the ratios of slopes of local buckling nodal lines.
C
C  OUTPUT:
C    MSLOPE(*) possibly modified version of MSLOPE.
C
      DIMENSION W(23,8),I5(*),MSLOPE(*)
      DIMENSION WMAX(4)
      REAL MSLOPE
C
      WMAXX = 0.
      DO 20 ISEG = 1,4
         I5I = I5(ISEG)
         WMAX(ISEG) = 0.
         DO 10 I = 1,I5I
            WMAX(ISEG) = MAX(WMAX(ISEG),ABS(W(I,ISEG)))
   10    CONTINUE
         WMAXX = MAX(WMAXX,WMAX(ISEG))
   20 CONTINUE
      COMPAR = 0.3
      JSEG = 0
      DO 30 ISEG = 1,4
         DIF = ABS(WMAXX - WMAX(ISEG))/WMAXX
         IF (DIF.LT.COMPAR.AND.MSLOPE(ISEG).EQ.1.0) RETURN
         IF (DIF.LT.0.00001) JSEG = ISEG
   30 CONTINUE
      IF (JSEG.EQ.0) RETURN
      IF (JSEG.EQ.4) JSEG = 2
      GO TO (40,50,60), JSEG
   40 CONTINUE
      IF (ABS(MSLOPE(1)).LE.0.1) RETURN
      MSLOPE(2) = MSLOPE(2)/MSLOPE(1)
      MSLOPE(3) = MSLOPE(3)/MSLOPE(1)
      MSLOPE(4) = MSLOPE(4)/MSLOPE(1)
      MSLOPE(1) = 1.
      GO TO 70
   50 CONTINUE
      IF (ABS(MSLOPE(2)).LE.0.1) RETURN
      MSLOPE(1) = MSLOPE(1)/MSLOPE(2)
      MSLOPE(3) = MSLOPE(3)/MSLOPE(2)
      MSLOPE(4) = MSLOPE(4)/MSLOPE(2)
      MSLOPE(2) = 1.
      GO TO 70
   60 CONTINUE 
      IF (ABS(MSLOPE(1)).LE.0.1) RETURN
      MSLOPE(1) = MSLOPE(1)/MSLOPE(3)
      MSLOPE(2) = MSLOPE(2)/MSLOPE(3)
      MSLOPE(4) = MSLOPE(4)/MSLOPE(3)
      MSLOPE(3) = 1.
   70 CONTINUE
      IF (NPRT.GE.2) WRITE(IFILE,80)(MSLOPE(I),I=1,4)
   80 FORMAT(/' NEW LOCAL BUCKLING SLOPE RATIOS, MSLOPE(I),I=1,4='/
     1          1P4E12.3)
      RETURN
      END
C
C
C
C END APR 1996
C=DECK      EPSAVE
      SUBROUTINE EPSAVE(N,CS,CX,CY,NX,NY,NXY,ISTIF,NSEG,B,B2,H,W,W2,
     1         EPSLOD,ICOCUR,RESFIX,NX0,NY0,NXY0,FARC,R,EPSLDF,W0,
     1         ETHERM,RESFXL,RESEIG,PERT1,PERT2,PERT3,AMPLIT,IABT,CSN,
     1         ITAN,FYRAT,DHOOP,DELK2,LABLE)
C
C  The average in-plane strains in the post-buckling range are
C  given by:
C
C EPS1  = F10 + f**2*[G11 +a*G12 +a**2*G13] +f*[GW11 +a*GW12] +S2*C
C
C EPS2S = F20 + f**2*[G21 +a*G22 +a**2*G23] +f*[GW21 +a*GW22] +S4*C
C
C EPS12 = NXY/CX(3,3,5) +f**2*(G31 + a*G32 + a**2*G33) +f*[GW31 +a*GW32]
C
C  in which Gij are derived below; m is the slope of the buckling nodal
C  lines; and "a" is a coefficient determined by energy minimization.
C  The coefficient "a" appears in the assumed expression for the post-
C  buckling deformation:
C
C             W(y) = f*(phi + a*phi**3)
C
C  in which y is the coordinate across the panel, measured from midway
C  between stringers, and phi is the normalized buckling mode shape
C  determined by the BOSOR4-type of analysis for the discretized panel
C  module cross section.
C
C
C   EPS1 is the average axial strain in the locally post-
C  buckled panel, EPS2S = EPS2 + Cy, where EPS2 is the average
C  circumferential strain in the locally post-buckled panel;  EPS12
C  is the average in-plane shear strain in the post-b. panel; f is the
C  amplitude of the local buckling pattern. 
C
C  The starting point for this derivation is the relation between
C  given applied loads, Nx, Ny, Nxy, and average loads in the panel
C  skin, N1, N2, N12:
C
C      Nx  = N1 + N(stringer)
C      Ny  = N2 + N(ring)
C      Nxy = N12
C
C  in which N1, N2, N12 are given by
C
C      N1 = Int-on-2L{ Int-on-b[ A11*epsx +A12*epsy +Nxo ]dy}dx/(2bL)
C      N2 = Int-on-2L{ Int-on-b[ A12*epsx +A22*epsy +Nyo ]dy}dx/(2bL)
C      N12= Int-on-2L{ Int-on-b[ A33*epsxy ]dy}dx/(2bL)
C
C  in which A11 = CX(1,1,i); A12 = CX(1,2,i); A22 = CX(2,2,i);
C           A33 = CX(3,3,i), where i is the region number;
C           epsx, epsy, epsxy are the local membrane strains;
C           and Nxo, Nyo are the known thermal resultants from curing
C           and other temperature input.
C           L is the half-wavelength of the local buckle pattern, and
C           b is the stringer spacing.
C
C  The axial load in each stringer is
C
C    N(stringer)=Int-L{Sum-segs[Int-s(A11*epsx+A12*epsy+Nxo)ds]}dx/(2bL)
C
C  The expression for N(rings) is analogous. "segs" above refers to
C  the segments of the stringer cross section (e.g. web, flange).
C
C  The local membrane strains, epsx, epsy, epsxy, can be expressed in terms of
C  of average  strains,  EPS1, EPS2, EPS12
C  plus nonlinear terms arising from to local buckling deformations:
C
C    epsx = EPS1 + NW**2
C    epsy = EPS2  + CY - NU12*N*W**2 +0.125*(W*W" -W'**2)cos(2*pi*(x-my)/L)
C    epsxy= EPS12 + (local buckling terms)
C  in which CY is a nonlinear function of W.
C
C BEG DEC 2003
      COMMON/MEMLOD/NXBAR,NYBAR,NXBAR0,N2TOT0
C END DEC 2003
      DIMENSION CX(6,6,5),CY(6,6,5),RESFIX(3,5,2),ICOCUR(2),EPSLOD(6)
      DIMENSION ETHERM(*),RESFXL(3,5,2),RESEIG(3,5,2)
      DIMENSION EFACT1(4),EFACT2(4),EFAC10(4),EFAC20(4)
      DIMENSION POISS(4),CSTAR(4),NTXSTR(4),CSN(6,6)
      COMMON/GSSSS/GSS1(4),GSS2(4),GSS3(4),GSS4(4),GSS5(4),GSS6(4)
      COMMON/NEUTRL/DNEUTX,DNEUTY,DSURF
      DIMENSION GSS7(4),GSS8(4),GSS9(4),GSS10(4),GSS11(4),GSS12(4)
      DIMENSION GSS13(4),GSS14(4),GSS15(4),GSS16(4),GSS17(4),GSS18(4)
      COMMON/SEGSLP/MSLOPE(8)
      REAL MSLOPE
      DIMENSION CS(6,6),EPSLDF(6)
      DIMENSION ISTIF(*),NSEG(*),B(*),B2(*),H(*),W(*),W2(*)
C BEG APR 1996
      COMMON/GEOM6/IFAY(2),ITRTOT,IRESET,NLOADS,NSTEPS,WMAXXX,NCROSS,
     1       NOPLOT,KMAX,ILAYPL,XMAX,XMIN,YMAX,YMIN,N3DPLT,NOBJ,NSTRNS,
     1       NPLTST,NABSCI,IDIAG,ITRALL,IFAYT(2),IBEAM,IMISCL(5)
C END APR 1996
C BEG JUN 1996
      COMMON/PSANDW/FACSKN,FACBAS,FACWEB,FACFLG
      COMMON/XFOUND/EFOUND,HXSIDE,WFOUND(4,2),HEXSID(4,2)
C END JUN 1996
C BEG OCT 1996
      COMMON/NUBARX/NUBARS
      COMMON/KSTARX/FSTAR1,FSTAR2
C END OCT 1996
C BEG MAY 1997
      COMMON/IZSTIX/IZSTIF(2)
C END MAY 1997
C BEG NOV 1995
      COMMON/KCOEF/A(140,6)
C END NOV 1995
      COMMON/UW1/C1,C2,C3,C4,C5,C6,C7,C8,C9,C10,C11,C12,C13,C14,C15
      COMMON/UW2/C16,C17,C18,C19,C20,C21,C22,C23,C24,C25,C26,C27
      COMMON/UW3/C28,C29,C30,C31,C32,C33,C34,C35,C36,C37,C38,C39
      COMMON/UW4/C40,C41,C42,C43,C44,C45,C46
      COMMON/UW9/GS1,GS2,GS3,GWS1,GWS2,GS4,GS5,GS6,GWS4,GWS5
      COMMON/UW10/G31,G32,G33,GW31,GW32
      COMMON/UW11/F1,F10,F2,F20,NUBAR,A11BAR,A12BAR,A22BAR
      COMMON/UW12/STIFL2,S2,S3,S4,C47,C48,C49,C50,C51,CS22
      COMMON/UW1N/C1N,C2N,C3N,C4N,C5N,C6N,C7N,C8N,C9N,C10N,C11N,
     1            C12N,C13N,C14N,C15N
      COMMON/UW2N/C16N,C17N,C18N,C19N,C20N,C21N,C22N,C23N,C24N,
     1            C25N,C26N,C27N
      COMMON/UW3N/C28N,C29N,C30N,C31N,C32N,C33N,C34N,C35N,C36N,
     1            C37N,C38N,C39N
      COMMON/UW4N/C40N,C41N,C42N,C43N,C44N,C45N,C46N
      COMMON/UW12N/C47N,C48N,C49N,C50N,C51N
      COMMON/UW1NN/C6NN,C31NN,C32NN,C33NN,C34NN,C35NN,C36NN,
     1             C37NN,C38NN,C39NN
      COMMON/UW9N/GS1F,GS2F,GS3F,GWS1F,GWS2F
      COMMON/UW16N/UST1,UST3,ACOMB2,GS011F,GS012F,GWWF14,GWWF15
      COMMON/UW17N/GWF010,GWF011,GS10F,GS11F,GS12F,GWS10F,GWS11F
      COMMON/UW18N/GS13,GS14,GS15,GS16,GS17,GWS13,GWS14,GWS15,GWS16
      COMMON/UW19N/GS13F,GS14F,GS15F,GS16F,GS17F
      COMMON/UW20N/GWS13F,GWS14F,GWS15F,GWS16F,ACOMB1
      COMMON/UW21N/GS010F,GWWF13,ACOMB6
      COMMON/GEOM1/AXIAL,CIRC,RXR
      COMMON/PSTST3/ADDSTF,ADSTF1
      COMMON/UWW13/ASUM4,ASUM6,ASUM6P,ASUM7,TSUM6,A6SUM2,A6SM10,
     1             AX11,FF1,KX,N2S,NTXS1,NTXS2,S2BAR,S3BAR,S4BAR,
     1             FNHOOP,STF222,CS222,C12BAR,SSTAR,NUSTAR,C22INV,
     1             C33INV
      COMMON/ISTL2/ISTFL2
      COMMON/WEBTH4/ET3X,TT3X,ET3Y,TT3Y
      COMMON/AVETHM/NTYBAR,NTXBAR,ETYBAR,ETXBAR,B11T,B12T
      COMMON/PSTST4/FNORIG
      COMMON/IHOOOP/IHOOPS
C BEG JULY 1995
      COMMON/DELIM2/DELFCX(3,4),DELWBX(2),DELCUR(3)
C END JULY 1995
C
      REAL NX,NY,NXY,NTXBAR,NTXTOT,NTYBAR,NTYTOT,NU121,NU122,N
      REAL NTXBBR,NTYBBR,NTXS1,NTXS2,NXBAR,NYBAR,NX0,NY0,NXY0
      REAL N2TOT,NUBAR,NXBAR0,NYBAR0,N2TOT0,KX,N2S,NUSTAR
      REAL NTXSTR
C BEG OCT 1996
      REAL NUBARS
C END OCT 1996
      FIABT = 1 - IABT
      FFIABT= FLOAT(IABT)
C     CBASE = CX(1,1,2)
C     CFLANG= CX(1,1,4)
C     ADSTF1= 3.2*B(1)*(CBASE*B2(1)**3 +CFLANG*W(1)**3)/AXIAL**4
      CS22 = CS(2,2) + ADDSTF + ADSTF1
      ISKIN2 = 2
      IF (ISTIF(1).EQ.5) ISKIN2 = 3
      CX22 = CX(2,2,ISKIN2)
      IF (CX22.LE.0.0) CX22 = 1.0
      CX33 = CX(3,3,ISKIN2)
      IF (CX33.LE.0.0) CX33 = 1.0
      B11 = (B(1) - B2(1))/B(1)
      B12 = B2(1)/B(1)
C BEG MAY 1997
      ETFAY = 0.
      TTFAY = 0.
      FZSTIF= 0.
      GZSTIF= 1.
      IF (IZSTIF(1).EQ.1) THEN
         B11 = 1.0
         B12 = 0.0
         FZSTIF = 1.0
         GZSTIF = 0.0
      ENDIF
C END MAY 1997
C BEG NOV 1995
C     IF (ISTIF(1).EQ.5) B12 = B11
      IF (ISTIF(1).EQ.5) THEN
         B11 = 1.0
         B12 = B11
      ENDIF
C END NOV 1995
      ID  = ISKIN2
C
C  NOTE:  IFAY(i) = 1 MEANS THAT:
C          1. THE STIFFENER IS A HAT.
C          2. THE BASE WIDTH B2(i) IS GREATER THAN THE HAT WIDTH W2(i)
C          3. THE WALL UNDER THE HAT IS THE SAME AS THAT IN SEGMENT 1.
C
      IF (IFAY(1).EQ.1) THEN
         B11 = (B(1) - (B2(1)-W2(1)))/B(1)
         B12 = (B2(1) - W2(1))/B(1)
         ID  = 1
      ENDIF
C
      B11T = B11
      B12T = B12
C
C     IF (ICOCUR(1).EQ.0) THEN
C        B11T = 1.
C        B12T = 0.
C     ENDIF
C
      CALL ET3TT3(CX,RESFIX(1,1,1),ISTIF(1),NSEG(1),B(1),B2(1),H(1),
C BEG MAY 1997
     1          W(1),W2(1),DUM,ET4,DUM2,TT4,SI,IZSTIF(1),ETFAY,TTFAY)
C END MAY 1997
C
      WIDTH = W(1)
      IF (ISTIF(1).EQ.5) THEN
         WIDTH = SI
         ET4 = ET3X
         TT4 = TT3X
      ENDIF
C BEG MAY 1997
      STIFL1 = (SI*ET3X + B2(1)*ETFAY + WIDTH*ET4)/B(1)
      STIFT1 = (SI*TT3X + B2(1)*TTFAY + WIDTH*TT4)/B(1)
C END MAY 1997
      IWEB = 3
      IFLNG= 4
      IF (ISTIF(1).EQ.5) THEN
         IWEB = 2
         IFLNG= 2
      ENDIF
C BEG MAY 1997
      IWEBM = IWEB - 1
      ASUM4  = ET3X*A(25,IWEB) + ETFAY*A(25,IWEBM) + ET4*A(25,4)
      ASUM6  = ET3X*A(21,IWEB) + ETFAY*A(21,IWEBM) + ET4*A(21,4)
      ASUM6P = ET3X*A(24,IWEB) + ETFAY*A(24,IWEBM) + ET4*A(24,4)
C     IF (ISTIF(1).EQ.5) ASUM6P = ASUM6P
C    1            + CX(1,1,1)*A(24,1) + CX(1,1,3)*A(24,3)
      ASUM7  = ET3X*A(23,IWEB) + ETFAY*A(23,IWEBM) + ET4*A(23,4)
      TSUM6  = RESFIX(1,IWEB,1)*A(21,IWEB) + RESFIX(1,IFLNG,1)*A(21,4)
     1       +RESFIX(1,IWEBM,1)*A(21,IWEBM)*FZSTIF
      A6SUM2 = CX(3,3,IWEB)*A(22,IWEB) + CX(3,3,IFLNG)*A(22,4)
     1       +CX(3,3,IWEBM)*A(22,IWEBM)*FZSTIF
      A6SM10 = CX(3,3,IWEB)*A(5,IWEB)+ CX(3,3,IFLNG)*A(5,4)
     1       +CX(3,3,IWEBM)*A(5,IWEBM)*FZSTIF
C END MAY 1997
C
C BEG APR 1996
      IF (ISTIF(1).NE.5)
     1   A11BAR = CX(1,1,1)*B11 + CX(1,1,ISKIN2)*B12
      IF (ISTIF(1).EQ.5)
     1   A11BAR = CX(1,1,1)*B11 + CX(1,1,ISKIN2)*B12
     1             +2.*FLOAT(IFAYT(1))*CX(1,1,2)*B2(1)/B(1)
C END APR 1996
      A12BAR = CX(1,2,1)*B11 + CX(1,2,ISKIN2)*B12
      A22BAR = CX(2,2,1)*B11 + CX(2,2,ISKIN2)*B12
      NTXBAR = RESFIX(1,1,1)*B11T + RESFIX(1,ISKIN2,1)*B12T
      NTYBAR = RESFIX(2,1,1)*B11T + RESFIX(2,ISKIN2,1)*B12T
C     NUBAR  = A12BAR/A22BAR
      NUBAR  = A12BAR/CS22
C BEG OCT 1996
      IF (IMOD.EQ.0) NUBARS = NUBAR
      IF (NUBARS.GT.0.90) NUBAR = A12BAR/A22BAR
C END OCT 1996
      A11    = A11BAR + STIFL1 - NUBAR*A12BAR
      IF (ISTIF(1).NE.5) THEN
C        NXBAR = NX - CX(1,4,5)*(EPSLOD(4)-EPSLDF(4))
C    1              - CX(1,5,5)*(EPSLOD(5)-EPSLDF(5))
C        NYBAR = NY - CX(2,4,5)*(EPSLOD(4)-EPSLDF(4))
C    1              - CX(2,5,5)*(EPSLOD(5)-EPSLDF(5))
C        NXBAR0= NX0 - CX(1,4,5)*EPSLDF(4)
C    1               - CX(1,5,5)*EPSLDF(5)
C        NYBAR0= NY0 - CX(2,4,5)*EPSLDF(4)
C    1               - CX(2,5,5)*EPSLDF(5)
C BEG JAN 1995
C        NXBAR = NX - CS(1,4)*(EPSLOD(4)-EPSLDF(4))
C    1              - CS(1,5)*(EPSLOD(5)-EPSLDF(5))
C        NYBAR = NY - CS(2,4)*(EPSLOD(4)-EPSLDF(4))
C    1              - CS(2,5)*(EPSLOD(5)-EPSLDF(5))
         NXBAR = NX - CS(1,4)*(EPSLOD(4)-FFIABT*ETHERM(4)-EPSLDF(4))
     1              - CS(1,5)*(EPSLOD(5)-FFIABT*ETHERM(5)-EPSLDF(5))
         NYBAR = NY - CS(2,4)*(EPSLOD(4)-FFIABT*ETHERM(4)-EPSLDF(4))
     1              - CS(2,5)*(EPSLOD(5)-FFIABT*ETHERM(5)-EPSLDF(5))
C END JAN 1995
         NXBAR0= NX0 - CS(1,4)*EPSLDF(4)
     1               - CS(1,5)*EPSLDF(5)
         NYBAR0= NY0 - CS(2,4)*EPSLDF(4)
     1               - CS(2,5)*EPSLDF(5)
      ELSE
C BEG JAN 1995
C        NXBAR = NX - CSN(1,4)*(EPSLOD(4)-EPSLDF(4))
C    1              - CSN(1,5)*(EPSLOD(5)-EPSLDF(5))
C        NYBAR = NY - CSN(2,4)*(EPSLOD(4)-EPSLDF(4))
C    1              - CSN(2,5)*(EPSLOD(5)-EPSLDF(5))
         NXBAR = NX - CSN(1,4)*(EPSLOD(4)-FFIABT*ETHERM(4)-EPSLDF(4))
     1              - CSN(1,5)*(EPSLOD(5)-FFIABT*ETHERM(5)-EPSLDF(5))
         NYBAR = NY - CSN(2,4)*(EPSLOD(4)-FFIABT*ETHERM(4)-EPSLDF(4))
     1              - CSN(2,5)*(EPSLOD(5)-FFIABT*ETHERM(5)-EPSLDF(5))
C END JAN 1995
         NXBAR0= NX0 - CSN(1,4)*EPSLDF(4)
     1               - CSN(1,5)*EPSLDF(5)
         NYBAR0= NY0 - CSN(2,4)*EPSLDF(4)
     1               - CSN(2,5)*EPSLDF(5)
      ENDIF
C
      N2TOT0  = NYBAR0 + FIABT*NTYBAR
      N2TOT   = N2TOT0 + NYBAR
C
C     F10    = (NXBAR0 - NUBAR*NYBAR0)/A11
C     F20    =  NYBAR0/A22BAR - NUBAR*F10
C     F1    = (NXBAR - NUBAR*NYBAR)/A11
C     F2    =  NYBAR/A22BAR - NUBAR*F1
C 
      F10    = (NXBAR0 - NUBAR*NYBAR0)/A11
      F20    =  NYBAR0/CS22 - NUBAR*F10
      F1    = (NXBAR -   NUBAR*NYBAR)/A11
      F2    =  NYBAR/CS22 - NUBAR*F1
C
      FISTL2 = ISTFL2
      EFFSTF = 0.3
      IF (IHOOPS.EQ.0) EFFSTF = 0.1
      STIFL2 = FISTL2*EFFSTF*(CS22 - CX(2,2,5))
      STIFL2 = STIFL2 + ADSTF1
C     IF (STIFL2.LT.(0.0001*A22BAR)) STIFL2 = 0.
      S2 = -NUBAR*STIFL2/A11
      S3 =  NUBAR*STIFL2
      S4 =  STIFL2*(A12BAR*S2 + A22BAR)/CS22
      KX = EPSLOD(4)
      IF (ISTIF(1).EQ.5) KX = 0.
      C22INV =B11/CX(2,2,1) + B12/CX22
      C33INV =B11/CX(3,3,1) + B12/CX33
      SSTAR = 1.0 + STIFL2*C22INV
      NUSTAR= B11*CX(1,2,1)/CX(2,2,1) +B12*CX(1,2,ISKIN2)/CX22
      C11STR = B11*(CX(1,1,1)-CX(1,2,1)**2/CX(2,2,1))
     1        +B12*(CX(1,1,ISKIN2)-CX(1,2,ISKIN2)**2/CX22)
      AX11  =  C11STR +STIFL1 +NUSTAR**2*STIFL2/SSTAR
      S2BAR = -NUSTAR*STIFL2/(SSTAR*AX11)
      S3BAR =  NUSTAR*STIFL2/SSTAR
      S4BAR =  STIFL2*(NUSTAR*S2BAR +1.0)/SSTAR
      FNAXL =  NXBAR + NXBAR0
      FNHOOP = NYBAR +NYBAR0
      FF1   =  (FNAXL +NUSTAR*FNHOOP/SSTAR)/AX11
      N2S   =  FNHOOP/SSTAR +S3BAR*FF1
      CS222  = CS22
      C12BAR = A12BAR
      STF222 = STIFL2
      IF (ISTIF(1).NE.5) THEN
C BEG SEP 1995
C        NYBAR  = RESEIG(2,1,1) - DHOOP*CX(2,2,5)/CS22 -CS(2,5)*DELK2
         NYBAR  = RESEIG(2,1,1) - DHOOP*CX(2,2,5)/CS22 -CS(2,5)*DELK2
     1                          + DELFCX(2,1)
C END SEP 1995
         NYBAR0 = RESFXL(2,1,1)
         N2TOT0 = NYBAR0 +FIABT*NTYBAR
      ENDIF
      NU121  = CX(1,2,1)/CX(2,2,1)
      A11S1  = CX(1,1,1) - NU121*CX(1,2,1)
      A11S2  = 0.
      NU122  = 0.
      IF (NSEG(1).GT.1) THEN
         NU122 = CX(1,2,ID)/CX(2,2,ID)
         A11S2 = CX(1,1,ID) - NU122*CX(1,2,ID)
      ENDIF
C
      IF (ISTIF(1).NE.5) THEN
         IF (ISTIF(1).NE.4) THEN
            CF1 = 1.5
            CF2 = 2.25
            IAX1= 2
            IAX2= 3
         ELSE
            CF1 = 1.0
            CF2 = 1.0
            IAX1= 3
            IAX2= 27
         ENDIF
C
C BEG MAY 1997
         GS1 =   N*NU121*A(1,1) + GZSTIF*N*NU122*A(1,ISKIN2)
         GS1F=         FARC*(0.25*A(4,1)  + GZSTIF*0.25*A(4,ISKIN2))
         GS2= 2.*N*NU121*A(2,1) + GZSTIF*2.*N*NU122*A(2,ISKIN2)
         GS2F=         FARC*(CF1*A(5,1) + GZSTIF*CF1*A(5,ISKIN2))
         GS3 =   N*NU121*A(3,1) + GZSTIF*N*NU122*A(3,ISKIN2)
         GS3F=         FARC*(CF2*A(6,1) + GZSTIF*CF2*A(6,ISKIN2))
C END MAY 1997
C
         GWS1 = GS1*2.*W0
         GWS2 = GS2*W0
         GWS1F = GS1F*2.*W0
         GWS2F = GS2F*W0
C
C BEG MAY 1997
         GS4 =     N*(A(1,1) + GZSTIF*A(1,ISKIN2))
         GS5 =  2.*N*(A(2,1) + GZSTIF*A(2,ISKIN2))
         GS6 =     N*(A(3,1) + GZSTIF*A(3,ISKIN2))
C END MAY 1997
C
         GWS4 = GS4*2.*W0
         GWS5 = GS5*W0
C
C BEG MAY 1997
         GS7 =     N*(A11S1*A(1,1) + GZSTIF*A11S2*A(1,ISKIN2))
         GS8 =  2.*N*(A11S1*A(2,1) + GZSTIF*A11S2*A(2,ISKIN2))
         GS9 =     N*(A11S1*A(3,1) + GZSTIF*A11S2*A(3,ISKIN2))
C END MAY 1997
C
         GWS7 = GS7*2.*W0
         GWS8 = GS8*W0
C
         G11 = -(GS7 + N*ASUM6)/A11
         G12 = -GS8/A11
         G13 = -GS9/A11
         GW11= G11*2.*W0
         GW12= G12*W0
C
         G21 = -NUBAR*G11
         G22 = -NUBAR*G12
         G23 = -NUBAR*G13
         GW21= -NUBAR*GW11
         GW22= -NUBAR*GW12
C
         G31 = - 2.*GS4
         G32 = - 2.*GS5
         G33 = - 2.*GS6
C
         GW31= G31*2.*W0
         GW32= G32*W0
C
C  Coefficients needed in derivatives of total potential, (U - W)'...
C
         NTXS1= RESFIX(1,1,1) - RESFIX(2,1,1)*NU121
         NTXS2= RESFIX(1,ID,1) - RESFIX(2,ID,1)*NU122
C
C BEG MAY 1997
         GS010 = GS1*N2TOT0 + N*FIABT*(NTXS1*A(1,1) 
     1                        + GZSTIF*NTXS2*A(1,ISKIN2))
C    1           +.25*(CX(2,2,1)*A(1,1) 
C    1                         +GZSTIF*CX(2,2,ID)*A(1,ISKIN2))/R**2
         GS011 = GS2*N2TOT0+2.*N*FIABT*(NTXS1*A(2,1) 
     1                          +GZSTIF*NTXS2*A(2,ISKIN2))
C    1           +.5*(CX(2,2,1)*A(2,1) 
C    1                         +GZSTIF*CX(2,2,ID)*A(2,ISKIN2))/R**2
         GS012 = GS3*N2TOT0 + N*FIABT*(NTXS1*A(3,1) 
     1                         + GZSTIF*NTXS2*A(3,ISKIN2))
C    1           +.25*(CX(2,2,1)*A(3,1) 
C    1                         +GZSTIF*CX(2,2,ID)*A(3,ISKIN2))/R**2
C END MAY 1997
C
         GWS010 = 2.*W0*GS010
         GWS011 =    W0*GS011
         GS010F = GS1F*N2TOT0
         GS011F = GS2F*N2TOT0
         GS012F = GS3F*N2TOT0
         GWF010 = 2.*W0*GS010F
         GWF011 =    W0*GS011F
C
C COMMNT FXSUM = NYBAR + FFIABT*NTYBAR
         FXSUM = NYBAR
C BEG MAY 1997
         GS10  = GS1*FXSUM + N*FFIABT*(NTXS1*A(1,1) 
     1                        + GZSTIF*NTXS2*A(1,ISKIN2))
         GS11  = GS2*FXSUM +2.*N*FFIABT*(NTXS1*A(2,1) 
     1                          + GZSTIF*NTXS2*A(2,ISKIN2))
         GS12  = GS3*FXSUM + N*FFIABT*(NTXS1*A(3,1) 
     1                        + GZSTIF*NTXS2*A(3,ISKIN2))
C END MAY 1997
         GWS10 = 2.*W0*GS10
         GWS11 =    W0*GS11
         GS10F = GS1F*FXSUM
         GS11F = GS2F*FXSUM
         GS12F = GS3F*FXSUM
         GWS10F= 2.*W0*GS10F
         GWS11F=    W0*GS11F
C
C BEG MAY 1997
         GS13 = .5*N*N*(A11S1*A(IAX1,1) 
     1                         + GZSTIF*A11S2*A(IAX1,ISKIN2))
         GS13F=  (CX(2,2,1)*A(11,1) 
     1                         + GZSTIF*CX(2,2,ID)*A(11,ISKIN2))/256.
         GS14 = .5*N*N*(A11S1*4.*A(IAX2,1) 
     1                         + GZSTIF*A11S2*4.*A(IAX2,ISKIN2))
         GS14F=  (CX(2,2,1)*A(12,1) 
     1                         + GZSTIF*CX(2,2,ID)*A(12,ISKIN2))/256.
         GS15 = .5*N*N*(A11S1*6.*A( 8,1) 
     1                         + GZSTIF*A11S2*6.*A( 8,ISKIN2))
         GS15F=  (CX(2,2,1)*A(13,1) 
     1                         + GZSTIF*CX(2,2,ID)*A(13,ISKIN2))/256.
         GS16 = .5*N*N*(A11S1*4.*A( 9,1) 
     1                         + GZSTIF*A11S2*4.*A( 9,ISKIN2))
         GS16F=  (CX(2,2,1)*A(14,1) 
     1                         + GZSTIF*CX(2,2,ID)*A(14,ISKIN2))/256.
         GS17 = .5*N*N*(A11S1*   A(10,1) 
     1                         + GZSTIF*A11S2*   A(10,ISKIN2))
         GS17F=  (CX(2,2,1)*A(15,1) 
     1                         + GZSTIF*CX(2,2,ID)*A(15,ISKIN2))/256.
C END MAY 1997
C
         GWS13 = 4.*W0*GS13
         GWS14 = 3.*W0*GS14
         GWS15 = 2.*W0*GS15
         GWS16 =    W0*GS16
         GWS13F= 4.*W0*GS13F
         GWS14F= 3.*W0*GS14F
         GWS15F= 2.*W0*GS15F
         GWS16F=    W0*GS16F
C
         GWWS13 = 4.*W0*W0*GS13
         GWWS14 = 2.*W0*W0*GS14
         GWWF13 = 4.*W0*W0*GS13F
         GWWF14 = 2.*W0*W0*GS14F
C BEG MAY 1997
         GWWS15 =2.*N*N*W0*W0*(A11S1*A( 8,1) 
     1                         + GZSTIF*A11S2*A( 8,ISKIN2))
         GWWF15=W0*W0*(CX(2,2,1)*A(26,1) 
     1                         + GZSTIF*CX(2,2,ID)*A(26,ISKIN2))/256.
C END MAY 1997
C
C BEG OCT 1996
         UST1  =  4.*N*N*(FSTAR2*CX(4,4,IWEB)*A(1,IWEB)
C BEG MAY 1997
     1                         + CX(4,4,IWEBM)*A(1,IWEBM)*FZSTIF
C END MAY 1997
     1                         + CX(4,4,IFLNG)*A(1,4))
C END OCT 1996
C BEG JUN 1996 (ELASTIC FOUNDATION EFFECT)
     1       +0.25*(FACWEB*WFOUND(IWEB, 1)*A(1,IWEB)
     1             +FACFLG*WFOUND(IFLNG,1)*A(1,4))
C END JUN 1996
C BEG OCT 1996
         UST2  = -2.*N*(FSTAR2*CX(4,5,IWEB)*A(7,IWEB)
C BEG MAY 1997
     1                       + CX(4,5,IWEBM)*A(7,IWEBM)*FZSTIF
C END MAY 1997
     1                       + CX(4,5,IFLNG)*A(7,4))
     1           +4.*N*(FSTAR2*CX(6,6,IWEB)*A(4,IWEB)
C BEG MAY 1997
     1                       + CX(6,6,IWEBM)*A(4,IWEBM)*FZSTIF
C END MAY 1997
     1                       + CX(6,6,IFLNG)*A(4,4))
         UST3  =  0.25*(FSTAR2*CX(5,5,IWEB)*A(18,IWEB)
C BEG MAY 1997
     1                       + CX(5,5,IWEBM)*A(18,IWEBM)*FZSTIF
C END MAY 1997
     1                       + CX(5,5,IFLNG)*A(18,4))
C END OCT 1996
C
         USTBPB = UST1 + UST2 + UST3
         USTPBN = 2.*UST1/N + UST2/N
         ACMB11 = USTBPB + N*FIABT*TSUM6 + N*N*ASUM7/FNORIG
     1                                   + .25*A6SUM2*N/FNORIG
         ACM11N = USTPBN +   FIABT*TSUM6 + 2.*N*ASUM7/FNORIG
     1                                   + .25*A6SUM2/FNORIG
         ACMB10 = N*ASUM6*F10 - N*ASUM6P*EPSLDF(4)
         ACMB1  = N*ASUM6*F1
C BEG JAN 1995
C    1        - N*ASUM6P*(EPSLOD(4)-EPSLDF(4)) +FFIABT*N*TSUM6
     1        - N*ASUM6P*(EPSLOD(4)-FFIABT*ETHERM(4)-EPSLDF(4))
     1                             +FFIABT*N*TSUM6
C END JAN 1995
         ACOMB1 = N*N*0.75*ASUM4
         ACOMB2 = N*0.25*A6SM10
         ACOMB3 = N*ASUM6*2.*W0
         ACOMB4 = - N*ASUM6P*EPSLDF(4)*2.*W0
         ACOMB5 = FFIABT*N*TSUM6*2.*W0
C BEG JAN 1995
C    1        -N*ASUM6P*(EPSLOD(4)-EPSLDF(4))*2.*W0
     1        -N*ASUM6P*(EPSLOD(4)-FFIABT*ETHERM(4)-EPSLDF(4))*2.*W0
C END JAN 1995
         ACOMB6 = N*N*ASUM7/FNORIG
C
C  SET UP COEFFICIENTS USED IN ENERGY EXPRESSION.
C
         C1 = GS7 +N*ASUM6
         C2 = GS8
         C3 = GS9
         C4 = GWS7 +ACOMB3
         C5 = GWS8
         C1N = C1/N
         C2N = C2/N
         C3N = C3/N
         C4N = C4/N
         C5N = C5/N
         C6 = GS010 +GWWS13 +F10*GS7 +ACMB10 +ACMB11
     1       +4.*W0**2*(ACOMB1 + ACOMB2)
     1       +GS010F+GWWF13
C        WRITE(8,*) ' C6,GWWF13,NYBAR=',C6,GWWF13,NYBAR
C        WRITE(8,*)' GS7,GS010,GWWS13,F10=',GS7,GS010,GWWS13,F10
C        WRITE(8,*)' ACMB11,ACMB10,W0,GS010F=',ACMB11,ACMB10,W0,GS010F
         C7 = GS011 +GWWS14 +F10*GS8 +GS011F +GWWF14
         C8 = GS012 +GWWS15 +F10*GS9 +GS012F +GWWF15
         C6N =(GS010+GWWS13 +F10*GS7 +ACMB10 +4.*W0**2*ACOMB2)/N
     1         + ACM11N +8.*W0**2*ACOMB1/N
         C6NN = 2.*(UST1+4.*W0**2*ACOMB1)/(N*N) + 2.*ASUM7/FNORIG
         C7N =(GS011+GWWS14 +F10*GS8)/N
         C8N =(GS012+GWWS15 +F10*GS9)/N
         C9 = GS4*N2TOT0
         C10= GS5*N2TOT0
         C11= GS6*N2TOT0
         C9N = C9/N
         C10N= C10/N
         C11N= C11/N
         C12= GWS010 +F10*(GWS7 +ACOMB3) +N*FIABT*TSUM6*2.*W0 +ACOMB4
     1       +GWF010
         C13= GWS011 +F10*GWS8 +GWF011
         C12N = C12/N - GWF010/N
         C13N = C13/N - GWF011/N
         C14= GWS4*N2TOT0
         C15= GWS5*N2TOT0
         C14N = C14/N
         C15N = C15/N
C
C EIGENVALUE TERMS ARE C16 THRU C30
C
         C16= GS10 +F1*GS7 +ACMB1 + GS10F
C        WRITE(8,*)' GS10,F1,ACMB1,GS10F=',GS10,F1,ACMB1,GS10F
C        WRITE(8,*)' C16=',C16
         C17= GS11 +F1*GS8 + GS11F
         C18= GS12 +F1*GS9 + GS12F
         C16N= C16/N - GS10F/N
         C17N= (GS11 +F1*GS8)/N 
         C18N= (GS12 +F1*GS9)/N
         C19= G31*NXY
         C20= G32*NXY
         C21= G33*NXY
         C22= GS4*FXSUM
         C23= GS5*FXSUM
         C24= GS6*FXSUM
         C19N = C19/N
         C20N = C20/N
         C21N = C21/N
         C22N = C22/N
         C23N = C23/N
         C24N = C24/N
         C25= GWS10 +F1*(GWS7 +ACOMB3) +ACOMB5 + GWS10F
         C26= GWS11 +F1*GWS8 + GWS11F
         C25N = C25/N - GWS10F/N
         C26N = C26/N - GWS11F/N
         C27= GW31*NXY
         C28= GW32*NXY
         C29= GWS4*FXSUM
         C30= GWS5*FXSUM
         C27N = C27/N
         C28N = C28/N
         C29N = C29/N
         C30N = C30/N
C  END OF EIGENVALUE TERMS.
C
      ENDIF
C
      IF (ISTIF(1).EQ.5) THEN
C BEG NOV 1995
         FAMPL = AMPLIT
         IF (AMPLIT.GT.10.) FAMPL = 10.
C END NOV 1995
         CALL MOVER(1.,0,EFACT1,1,4)
         CALL MOVER(1.,0,EFACT2,1,4)
         IF (F1.NE.0.) THEN
            EFACT1(1) = 
C BEG JAN 1995
C BEG NOV 1995
C    1      (F1 + DNEUTX*(EPSLOD(4) - EPSLDF(4))*(1.+PERT1*FAMPL))/F1
     1      (F1 + DNEUTX*(EPSLOD(4)-FFIABT*ETHERM(4)
     1                              - EPSLDF(4))*(1.+PERT1*FAMPL))/F1
C           EFACT1(3) = (F1 +(H(1)+DNEUTX)*(EPSLOD(4)
            EFACT1(3) = (F1 +(H(1)+DNEUTX)*(EPSLOD(4)-FFIABT*ETHERM(4)
C END JAN 1995
     1                              - EPSLDF(4))*(1.+PERT1*FAMPL))/F1
C END NOV 1995
         ENDIF
         IF (F2.NE.0) THEN
            EFACT2(1) = 
C BEG JAN 1995
C    1      (F2 +DNEUTY*(EPSLOD(5) - EPSLDF(5)))/F2
     1      (F2 +DNEUTY*(EPSLOD(5)-FFIABT*ETHERM(5) - EPSLDF(5)))/F2
            EFACT2(3) = 
C    1      (F2 +(H(1)+DNEUTY)*(EPSLOD(5) - EPSLDF(5)))/F2
     1      (F2 +(H(1)+DNEUTY)*(EPSLOD(5)-FFIABT*ETHERM(5)
     1                                              - EPSLDF(5)))/F2
C END JAN 1995
         ENDIF
C
         CALL MOVER(1.,0,EFAC10,1,4)
         CALL MOVER(1.,0,EFAC20,1,4)
         IF (F10.NE.0.) THEN
C BEG NOV 1995
            EFAC10(1) = (F10 + DNEUTX*EPSLDF(4)*(1.+PERT1*FAMPL))/F10
            EFAC10(3) = (F10 +(H(1)+DNEUTX)
     1                               *EPSLDF(4)*(1.+PERT1*FAMPL))/F10
C END NOV 1995
         ENDIF
         IF (F20.NE.0.) THEN
            EFAC20(1) = (F20 + DNEUTY*EPSLDF(5))/F20
            EFAC20(3) = (F20 +(H(1)+DNEUTY)*EPSLDF(5))/F20
         ENDIF
C
C BEG NOV 1995
         CALPHA = 0.5*B(1)/SQRT(H(1)**2 + .25*(B(1)-2.*B2(1))**2)
C END NOV 1995
         GS1  = 0.
         GS2  = 0.
         GS3  = 0.
         GS4  = 0.
         GS5  = 0.
         GS6  = 0.
         GS7  = 0.
         GS8  = 0.
         GS9  = 0.
         GS10 = 0.
         GS11 = 0.
         GS12 = 0.
         GS13 = 0.
         GS14 = 0.
         GS15 = 0.
         GS16 = 0.
         GS17 = 0.
         GS010= 0.
         GS011= 0.
         GS012= 0.
         GWWS15= 0.
         C6  = 0.
         C7  = 0.
         C8  = 0.
         C9  = 0.
         C10 = 0.
         C11 = 0.
         C12 = 0.
         C13 = 0.
         C14 = 0.
         C15 = 0.
         C16 = 0.
         C17 = 0.
         C18 = 0.
         C19 = 0.
         C20 = 0.
         C21 = 0.
         C22 = 0.
         C23 = 0.
         C24 = 0.
         C25 = 0.
         C26 = 0.
C
         DO 10 I = 1,4
            J = I
            IF (I.EQ.4) J = 2
            POISS(I) = CX(1,2,J)/CX(2,2,J)
            CSTAR(I) = CX(1,1,J) - POISS(I)*CX(1,2,J)
            NTXSTR(I)= RESFIX(1,J,1) - RESFIX(2,J,1)*POISS(I)
            GSS1(I)  = N*POISS(I)*A(1,I)    + FARC*0.25*A(4,I)
            GSS2(I)  = 2.*N*POISS(I)*A(2,I) + FARC*1.5* A(5,I)
            GSS3(I)  = N*POISS(I)*A(3,I)    + FARC*2.25*A(6,I)
            GSS4(I)  =    N*A(1,I)
            GSS5(I)  = 2.*N*A(2,I)
            GSS6(I)  =    N*A(3,I)
            GSS7(I)  =    N*CSTAR(I)*A(1,I)
            GSS8(I)  = 2.*N*CSTAR(I)*A(2,I)
            GSS9(I)  =    N*CSTAR(I)*A(3,I)
            GSS10(I) =    N*FIABT*NTXSTR(I)*A(1,I) 
C    1               + .25*CX(2,2,J)*A(1,I)/R**2
            GSS11(I) = 2.*N*FIABT*NTXSTR(I)*A(2,I)
C    1               + 0.5*CX(2,2,J)*A(2,I)/R**2
            GSS12(I) =    N*FIABT*NTXSTR(I)*A(3,I)
C    1               + .25*CX(2,2,J)*A(3,I)/R**2
            GSS13(I) = 0.5*N*N*CSTAR(I)*A(2,I) + CX(2,2,J)*A(11,I)/256.
            GSS14(I) = 2.0*N*N*CSTAR(I)*A(3,I) + CX(2,2,J)*A(12,I)/256.
            GSS15(I) = 3.0*N*N*CSTAR(I)*A(8,I) + CX(2,2,J)*A(13,I)/256.
            GSS16(I) = 2.0*N*N*CSTAR(I)*A(9,I) + CX(2,2,J)*A(14,I)/256.
            GSS17(I) = 0.5*N*N*CSTAR(I)*A(10,I)+ CX(2,2,J)*A(15,I)/256.
            GSS18(I) = W0**2*(2.0*N*N*CSTAR(I)*A(8,I)
     1                        +CX(2,2,J)*A(26,I)/256.)
            FN2FIX   = RESFXL(2,J,1) + FIABT*RESFIX(2,J,1)
            FACTR  = 1.0
            IF (J.EQ.2) FACTR = 0.
C BEG JULY 1995
            FN2EIG = FACTR*(RESEIG(2,J,1) + DELFCX(2,J)
C END JULY 1995
     1              -PERT2*CX(2,2,J)/(CX(2,2,1)+CX(2,2,3)))
            FACTR  = 1.0
C           IF (J.EQ.2) FACTR = -0.5
            IF (J.EQ.2) FACTR = -1.0
C BEG JULY 1995
            FN12EG = FACTR*(RESEIG(3,J,1) + DELFCX(3,J)
     1              +PERT3*CX(3,3,J)/CS(3,3))
C END JULY 1995
C
            GS1 = GS1 + GSS1(I)
            GS2 = GS2 + GSS2(I)
            GS3 = GS3 + GSS3(I)
            GS4 = GS4 + GSS4(I)
            GS5 = GS5 + GSS5(I)
            GS6 = GS6 + GSS6(I)
            GS7 = GS7 + GSS7(I)
            GS8 = GS8 + GSS8(I)
            GS9 = GS9 + GSS9(I)
            GS010=GS010+GSS1(I)*FN2FIX +GSS10(I)
            GS011=GS011+GSS2(I)*FN2FIX +GSS11(I)
            GS012=GS012+GSS3(I)*FN2FIX +GSS12(I)
C COMMENT   FXSUM = FN2EIG + FFIABT*RESFIX(2,J,1)
            FXSUM = FN2EIG
            GS10  = GS10  +GSS1(I)*FXSUM +N*FFIABT*NTXSTR(I)*A(1,I) 
            GS11  = GS11  +GSS2(I)*FXSUM +2.*N*FFIABT*NTXSTR(I)*A(2,I)
            GS12  = GS12  +GSS3(I)*FXSUM +N*FFIABT*NTXSTR(I)*A(3,I)
            GS13  = GS13  +GSS13(I)
            GS14  = GS14  +GSS14(I)
            GS15  = GS15  +GSS15(I)
            GS16  = GS16  +GSS16(I)
            GS17  = GS17  +GSS17(I)
            GWWS15= GWWS15+GSS18(I)
C
            C6    = C6  + F10*EFAC10(I)*GSS7(I)
            C7    = C7  + F10*EFAC10(I)*GSS8(I)
            C8    = C8  + F10*EFAC10(I)*GSS9(I)
            C9    = C9  + (MSLOPE(I)**2)*GSS4(I)*FN2FIX
            C10   = C10 + (MSLOPE(I)**2)*GSS5(I)*FN2FIX
            C11   = C11 + (MSLOPE(I)**2)*GSS6(I)*FN2FIX
            C12   = C12 + F10*EFAC10(I)*2.*W0*GSS7(I)
            C13   = C13 + F10*EFAC10(I)*   W0*GSS8(I)
            C14   = C14 + 2.*W0*(MSLOPE(I)**2)*GSS4(I)*FN2FIX
            C15   = C15 +    W0*(MSLOPE(I)**2)*GSS5(I)*FN2FIX
            C16   = C16 + F1*EFACT1(I)*GSS7(I)
            C17   = C17 + F1*EFACT1(I)*GSS8(I)
            C18   = C18 + F1*EFACT1(I)*GSS9(I)
            C19   = C19 - 2.*MSLOPE(I)*GSS4(I)*FN12EG
            C20   = C20 - 2.*MSLOPE(I)*GSS5(I)*FN12EG
            C21   = C21 - 2.*MSLOPE(I)*GSS6(I)*FN12EG
            C22   = C22 + (MSLOPE(I)**2)*GSS4(I)*FXSUM
            C23   = C23 + (MSLOPE(I)**2)*GSS5(I)*FXSUM
            C24   = C24 + (MSLOPE(I)**2)*GSS6(I)*FXSUM
            C25   = C25 + F1*2.*W0*EFACT1(I)*GSS7(I)
            C26   = C26 + F1*   W0*EFACT1(I)*GSS8(I)
   10    CONTINUE
C
         GWS1  = GS1*2.*W0
         GWS2  = GS2*W0
         GWS4  = GS4*2.*W0
         GWS5  = GS5*W0
         GWS7  = GS7*2.*W0
         GWS8  = GS8*W0
         G11   = -GS7/A11
         G12   = -GS8/A11
         G13   = -GS9/A11
         GW11  = G11*2.*W0
         GW12  = G12*W0
         G21   = -NUBAR*G11
         G22   = -NUBAR*G12
         G23   = -NUBAR*G13
         GW21  = -NUBAR*GW11
         GW22  = -NUBAR*GW12
         G31   = -2.*GS4
         G32   = -2.*GS5
         G33   = -2.*GS6
         GW31  = G31*2.*W0
         GW32  = G32*W0
         GWS010= 2.*W0*GS010
         GWS011=    W0*GS011
         GWS10 = 2.*W0*GS10
         GWS11 =    W0*GS11
         GWS13 = 4.*W0*GS13
         GWS14 = 3.*W0*GS14
         GWS15 = 2.*W0*GS15
         GWS16 =    W0*GS16
         GWWS13 = 4.*W0*W0*GS13
         GWWS14 = 2.*W0*W0*GS14
C
C        USTBPB = 4.*N*N*(CX(4,4,IWEB)*A(1,IWEB) + CX(4,4,IFLNG)*A(1,4))
C    1           -2.*N*(  CX(4,5,IWEB)*A(7,IWEB) + CX(4,5,IFLNG)*A(7,4))
C    1         +0.25*(  CX(5,5,IWEB)*A(18,IWEB) + CX(5,5,IFLNG)*A(18,4))
C    1            +4.*N*(  CX(6,6,IWEB)*A(4,IWEB)+ CX(6,6,IFLNG)*A(4,4))
C
         USTBPB = 0.
C
         ASUM4 = 0.
         ASUM6 = 0.
         ASUM7 = 0.
         TSUM6 = 0.
         A6SUM2= 0.
         A6SM10= 0.
C
         ACMB11 = 0.
         ACMB10 = - N*ASUM6P*EPSLDF(4)
C BEG JAN 1995
C        ACMB1  = - N*ASUM6P*(EPSLOD(4)-EPSLDF(4))
         ACMB1  = - N*ASUM6P*(EPSLOD(4)-FFIABT*ETHERM(4)-EPSLDF(4))
C END JAN 1995
         ACOMB4 = - N*ASUM6P*EPSLDF(4)*2.*W0
C BEG JAN 1995
C        ACOMB5 = - N*ASUM6P*(EPSLOD(4)-EPSLDF(4))*2.*W0
         ACOMB5 = - N*ASUM6P*(EPSLOD(4)-FFIABT*ETHERM(4)
     1                                            -EPSLDF(4))*2.*W0
C END JAN 1995
         ACOMB2 = 0.
         ACOMB3 = 0.
C
         C1  = GS7
         C2  = GS8
         C3  = GS9
         C4  = GWS7
         C5  = GWS8
         C6  = C6  + GS010 + GWWS13 + ACMB10
         C7  = C7  + GS011 + GWWS14
         C8  = C8  + GS012 + GWWS15
         C12 = C12 + GWS010 + ACOMB4
         C13 = C13 + GWS011
         C16 = C16 + GS10 + ACMB1
         C17 = C17 + GS11
         C18 = C18 + GS12
         C25 = C25 + GWS10 + ACOMB5
         C26 = C26 + GWS11
         C27 = C19*2.*W0
         C28 = C20*   W0
         C29 = C22*2.*W0
         C30 = C23*   W0
      ENDIF
      C31 = GS13 +ACOMB1 +ACOMB2 + GS13F
      C32 = GS14 + GS14F
      C33 = GS15 + GS15F
      C34 = GS16 + GS16F
      C35 = GS17 + GS17F
      C36 = GWS13 +4.*W0*(ACOMB1+ACOMB2) + GWS13F
      C37 = GWS14 + GWS14F
      C38 = GWS15 + GWS15F
      C39 = GWS16 + GWS16F
      C40 = 0.0
      C41 = 0.0
      C31N = (2.*(GS13+ACOMB1)+ACOMB2)/N
      C32N = 2.*GS14/N
      C33N = 2.*GS15/N
      C34N = 2.*GS16/N
      C35N = 2.*GS17/N
      C36N =(2.*GWS13 +4.*W0*(2.*ACOMB1+ACOMB2))/N
      C37N = 2.*GWS14/N
      C38N = 2.*GWS15/N
      C39N = 2.*GWS16/N
      C40N = 0.
      C41N = 0.
      C31NN = 2.*(GS13+ACOMB1)/(N*N)
      C32NN = 2.*GS14/(N*N)
      C33NN = 2.*GS15/(N*N)
      C34NN = 2.*GS16/(N*N)
      C35NN = 2.*GS17/(N*N)
      C36NN = 2.*(GWS13+4.*W0*ACOMB1)/(N*N)
      C37NN = 2.*GWS14/(N*N)
      C38NN = 2.*GWS15/(N*N)
      C39NN = 2.*GWS16/(N*N)
C
C AXIAL STRAIN TERMS...
C
      C42 = G11
      C43 = G12
      C44 = G13
      C45 = GW11
      C46 = GW12
      C42N= C42/N
      C43N= C43/N
      C44N= C44/N
      C45N= C45/N
      C46N= C46/N
C
      C47 = S3*C42 + S4*GS1 + S4*GS1F
      C48 = S3*C43 + S4*GS2 + S4*GS2F
      C49 = S3*C44 + S4*GS3 + S4*GS3F
      C50 = S3*C45 + S4*GWS1+ S4*GWS1F
      C51 = S3*C46 + S4*GWS2+ S4*GWS2F
      C47N = C47/N - S4*GS1F/N
      C48N = C48/N - S4*GS2F/N
      C49N = C49/N - S4*GS3F/N
      C50N = C50/N - S4*GWS1F/N
      C51N = C51/N - S4*GWS2F/N
C
C     IF (W0.EQ.0.0) THEN
C        WRITE(8,*)' NX,NY,NXY           =',NX,NY,NXY
C        WRITE(8,*)' NX0,NY0,W0          =',NX0,NY0,W0
C        WRITE(8,*)' NXBAR,NYBAR         =',NXBAR,NYBAR
C        WRITE(8,*)' NXBAR0,NYBAR0       =',NXBAR0,NYBAR0
C        WRITE(8,*)' F10,F20,FARC        =',F10,F20,FARC
C        WRITE(8,*)' F1,F2,NU121         =',F1,F2,NU121
C        WRITE(8,*)' EPSLDF(4), EPSLOD(4)=',EPSLDF(4),EPSLOD(4)
C        WRITE(8,*)' EPSLDF(5), EPSLOD(5)=',EPSLDF(5),EPSLOD(5)
C        WRITE(8,*)' CS(1,4),CS(1,5)     =',CS(1,4),CS(1,5)
C        WRITE(8,*)' CS(2,4),CS(2,5)     =',CS(2,4),CS(2,5)
C        WRITE(8,*)' A11BAR,A12BAR,A22BAR=',A11BAR,A12BAR,A22BAR
C        WRITE(8,*)' N,ASUM6,ASUM6P      =',N,ASUM6,ASUM6P
C        WRITE(8,*)' ASUM4,TSUM6,ASUM7   =',ASUM4,TSUM6,ASUM7
C        WRITE(8,*)' A6SUM2,A6SM10,STIFL1=',A6SUM2,A6SM10,STIFL1
C        WRITE(8,*)' NUBAR,A11,NTYBAR    =',NUBAR,A11,NTYBAR
C        WRITE(8,*)' CS22,N2TOT,STIFL2   =',CS22,N2TOT,STIFL2
C        WRITE(8,*)' S2,S3,S4            =',S2,S3,S4
C        WRITE(8,*)' ET3X,TT3X,SI        =',ET3X,TT3X,SI
C        WRITE(8,*)' ET4,TT4,WIDTH       =',ET4,TT4,WIDTH
C        WRITE(8,*)' IFAY(1),ID,B11,B12  =',IFAY(1),ID,B11,B12
C        WRITE(8,*)' IWEB,B11T,B12T      =',IWEB,B11T,B12T
C        WRITE(8,*)' ISKIN2,IAX1,IAX2    =',ISKIN2,IAX1,IAX2
C        WRITE(8,*)' CF1,CF2,A11S1,A11S2 =',CF1,CF2,A11S1,A11S2
C        WRITE(8,*)' A( 1,1),A( 1,2)     =',A( 1,1),A( 1,2)
C        WRITE(8,*)' A( 2,1),A( 2,2)     =',A( 2,1),A( 2,2)
C        WRITE(8,*)' A( 3,1),A( 3,2)     =',A( 3,1),A( 3,2)
C        WRITE(8,*)' A( 4,1),A( 4,2)     =',A( 4,1),A( 4,2)
C        WRITE(8,*)' A( 5,1),A( 5,2)     =',A( 5,1),A( 5,2)
C        WRITE(8,*)' A( 6,1),A( 6,2)     =',A( 6,1),A( 6,2)
C        WRITE(8,*)' A( 7,1),A( 7,2)     =',A( 7,1),A( 7,2)
C        WRITE(8,*)' A( 8,1),A( 8,2)     =',A( 8,1),A( 8,2)
C        WRITE(8,*)' A( 9,1),A( 9,2)     =',A( 9,1),A( 9,2)
C        WRITE(8,*)' A(10,1),A(10,2)     =',A(10,1),A(10,2)
C        WRITE(8,*)' A(11,1),A(11,2)     =',A(11,1),A(11,2)
C        WRITE(8,*)' A(12,1),A(12,2)     =',A(12,1),A(12,2)
C        WRITE(8,*)' A(13,1),A(13,2)     =',A(13,1),A(13,2)
C        WRITE(8,*)' A(14,1),A(14,2)     =',A(14,1),A(14,2)
C        WRITE(8,*)' A(15,1),A(15,2)     =',A(15,1),A(15,2)
C        WRITE(8,*)' A(16,1),A(16,2)     =',A(16,1),A(16,2)
C        WRITE(8,*)' A(17,1),A(17,2)     =',A(17,1),A(17,2)
C        WRITE(8,*)' A(18,1),A(18,2)     =',A(18,1),A(18,2)
C        WRITE(8,*)' A(19,1),A(19,2)     =',A(19,1),A(19,2)
C        WRITE(8,*)' A(20,1),A(20,2)     =',A(20,1),A(20,2)
C        WRITE(8,*)' A(27,1),A(27,2)     =',A(27,1),A(27,2)
C        WRITE(8,*)' A( 5,IWEB),A( 5,4)  =',A( 5,IWEB),A( 5,4)
C        WRITE(8,*)' A(21,IWEB),A(21,4)  =',A(21,IWEB),A(21,4)
C        WRITE(8,*)' A(22,IWEB),A(22,4)  =',A(22,IWEB),A(22,4)
C        WRITE(8,*)' A(23,IWEB),A(23,4)  =',A(23,IWEB),A(23,4)
C        WRITE(8,*)' A(24,IWEB),A(24,4)  =',A(24,IWEB),A(24,4)
C        WRITE(8,*)' A(25,IWEB),A(25,4)  =',A(25,IWEB),A(25,4)
C        WRITE(8,*)' A( 1,IWEB),A( 1,4)  =',A( 1,IWEB),A( 1,4)
C        WRITE(8,*)' A( 4,IWEB),A( 4,4)  =',A( 4,IWEB),A( 4,4)
C        WRITE(8,*)' A( 7,IWEB),A( 7,4)  =',A( 7,IWEB),A( 7,4)
C        WRITE(8,*)' A(18,IWEB),A(18,4)  =',A(18,IWEB),A(18,4)
C        WRITE(8,*)' UST1,UST2,UST3      =',UST1,UST2,UST3
C        WRITE(8,*)' GS1,GS2,GS3         =',GS1,GS2,GS3
C        WRITE(8,*)' GS1F,GS2F,GS3F      =',GS1F,GS2F,GS3F
C        WRITE(8,*)' GS4,GS5,GS6         =',GS4,GS5,GS6
C        WRITE(8,*)' GS7,GS8,GS9         =',GS7,GS8,GS9
C        WRITE(8,*)' GWS1,GWS2,GWS4      =',GWS1,GWS2,GWS4
C        WRITE(8,*)' GWS5,GWS7,GWS8      =',GWS5,GWS7,GWS8
C        WRITE(8,*)' G11,G12,G13         =',G11,G12,G13
C        WRITE(8,*)' G21,G22,G23         =',G21,G22,G23
C        WRITE(8,*)' G31,G32,G33         =',G31,G32,G33
C        WRITE(8,*)' GW31,GW32,FFIABT    =',GW31,GW32,FFIABT
C        WRITE(8,*)' GWS1F,GWS2F,FXSUM   =',GWS1F,GWS2F,FXSUM
C        WRITE(8,*)' ACOMB1,ACOMB2,FIABT =',ACOMB1,ACOMB2,FIABT
C        WRITE(8,*)' GS010,GS011,GS012   =',GS010,GS011,GS012
C        WRITE(8,*)' GS010F,GS011F,GS012F=',GS010F,GS011F,GS012F
C        WRITE(8,*)' GWWF14,GWWF15       =',GWWF14,GWWF15
C        WRITE(8,*)' GWF010,GWF011       =',GWF010,GWF011
C        WRITE(8,*)' GS10,GS11,GS12      =',GS10,GS11,GS12
C        WRITE(8,*)' GS10F,GS11F,GS12F   =',GS10F,GS11F,GS12F
C        WRITE(8,*)' GWS10F,GWS11F       =',GWS10F,GWS11F
C        WRITE(8,*)' GS13,GS14,GS15      =',GS13,GS14,GS15
C        WRITE(8,*)' GS16,GS17,GWS13     =',GS16,GS17,GWS13
C        WRITE(8,*)' GWS14,GWS15,GWS16   =',GWS14,GWS15,GWS16
C        WRITE(8,*)' GS13F,GS14F,GS15F   =',GS13F,GS14F,GS15F
C        WRITE(8,*)' GS16F,GS17F,GWS13F  =',GS16F,GS17F,GWS13F
C        WRITE(8,*)' GWS14F,GWS15F,GWS16F=',GWS14F,GWS15F,GWS16F
C        WRITE(8,*)' C1,C2,C3      =',C1,C2,C3
C        WRITE(8,*)' C4,C5,C6      =',C4,C5,C6
C        WRITE(8,*)' C7,C8,C9      =',C7,C8,C9
C        WRITE(8,*)' C10,C11,C12   =',C10,C11,C12
C        WRITE(8,*)' C13,C14,C15   =',C13,C14,C15
C        WRITE(8,*)' C16,C17,C18   =',C16,C17,C18
C        WRITE(8,*)' C19,C20,C21   =',C19,C20,C21
C        WRITE(8,*)' C22,C23,C24   =',C22,C23,C24
C        WRITE(8,*)' C25,C26,C27   =',C25,C26,C27
C        WRITE(8,*)' C28,C29,C30   =',C28,C29,C30
C        WRITE(8,*)' C31,C32,C33   =',C31,C32,C33
C        WRITE(8,*)' C34,C35,C36   =',C34,C35,C36
C        WRITE(8,*)' C37,C38,C39   =',C37,C38,C39
C        WRITE(8,*)' C40,C41,C42   =',C40,C41,C42
C        WRITE(8,*)' C43,C44,C45   =',C43,C44,C45
C        WRITE(8,*)' C46,C47,C48   =',C46,C47,C48
C        WRITE(8,*)' C49,C50,C51   =',C49,C50,C51
C        WRITE(8,*)' C1N,C2N,C3N   =',C1N,C2N,C3N
C        WRITE(8,*)' C4N,C5N,C6N   =',C4N,C5N,C6N
C        WRITE(8,*)' C7N,C8N,C9N   =',C7N,C8N,C9N
C        WRITE(8,*)' C10N,C11N,C12N=',C10N,C11N,C12N
C        WRITE(8,*)' C13N,C14N,C15N=',C13N,C14N,C15N
C        WRITE(8,*)' C16N,C17N,C18N=',C16N,C17N,C18N
C        WRITE(8,*)' C19N,C20N,C21N=',C19N,C20N,C21N
C        WRITE(8,*)' C22N,C23N,C24N=',C22N,C23N,C24N
C        WRITE(8,*)' C25N,C26N,C27N=',C25N,C26N,C27N
C        WRITE(8,*)' C28N,C29N,C30N=',C28N,C29N,C30N
C        WRITE(8,*)' C31N,C32N,C33N=',C31N,C32N,C33N
C        WRITE(8,*)' C34N,C35N,C36N=',C34N,C35N,C36N
C        WRITE(8,*)' C37N,C38N,C39N=',C37N,C38N,C39N
C        WRITE(8,*)' C40N,C41N,C42N=',C40N,C41N,C42N
C        WRITE(8,*)' C43N,C44N,C45N=',C43N,C44N,C45N
C        WRITE(8,*)' C46N,C47N,C48N=',C46N,C47N,C48N
C        WRITE(8,*)' C49N,C50N,C51N=',C49N,C50N,C51N
C        WRITE(8,*)' C6NN,C31NN,C32NN =',C6NN,C31NN,C32NN
C        WRITE(8,*)' C33NN,C34NN,C35NN=',C33NN,C34NN,C35NN
C        WRITE(8,*)' C36NN,C37NN,C38NN=',C36NN,C37NN,C38NN
C        WRITE(8,*)' C39NN            =',C39NN
C     ENDIF
C
      RETURN
      END
C
C
C
C=DECK      EIGKOI
      SUBROUTINE EIGKOI(IMOD,NPRT,IFILE,N,M,CX,EKOITR,NWAVE,ITER)
C
C  Purpose is to calculate bifurcation buckling eigenvalue, EKOITR,
C  according to the Koiter theory...
C
      COMMON/GEOM3/ISTIF(2),NLAYER(4,2),NNSEG(2),INTEXT(2)  
      COMMON/SEGSLP/MSLOPE(8)
      REAL MSLOPE
      COMMON/GEOM6/IFAY(2),IMISCL(28)
C BEG NOV 1995
      COMMON/KCOEF/A(140,6)
C END NOV 1995
C BEG JUN 1996
      COMMON/PSANDW/FACSKN,FACBAS,FACWEB,FACFLG
      COMMON/XFOUND/EFOUND,HXSIDE,WFOUND(4,2),HEXSID(4,2)
C END JUN 1996
C BEG MAY 1997
      COMMON/IZSTIX/IZSTIF(2)
C END MAY 1997
      COMMON/UW1/C1,C2,C3,C4,C5,C6,C7,C8,C9,C10,C11,C12,C13,C14,C15
      COMMON/UW2/C16,C17,C18,C19,C20,C21,C22,C23,C24,C25,C26,C27
C
      DIMENSION D11(4),D12(4),D22(4),D11M(4),D12M(4),D22M(4)
      DIMENSION D11MM(4),D12MM(4),D22MM(4),CX(6,6,5)
      REAL N,M,M2,NUM,NUMM,NUMMM
C
C BEG MAY 1997
      GZSTIF = 1.
      IF (IZSTIF(1).EQ.1) GZSTIF = 0.
C END MAY 1997
      ISKIN2 = 2
      IF (ISTIF(1).EQ.5) ISKIN2 = 3
      ID = ISKIN2
      IF (IFAY(1).EQ.1) ID = 1
      IF (M.EQ.0.) M = 0.001
      M2 = M*M
      ITER = 0
      IF (NPRT.GE.2) THEN
         WRITE(IFILE,5)
    5    FORMAT(/' BIFURCATION BUCKLING EIGENVALUE FROM KOITER-TYPE THEO
     1RY'/
     1'  AXIAL    ITER.    SLOPE      DSLOPE      EIGKOI'/
     1'  WAVES     NO.       m          dm')
      ENDIF
C
   10 CONTINUE
      ITER = ITER + 1
C
C  Need skin bending stiffness terms...
C
      CALL SKNBND(CX(1,1,1),M,D11(1),  D12(1),  D22(1),
     1                        D11M(1), D12M(1), D22M(1),
     1                        D11MM(1),D12MM(1),D22MM(1),MSLOPE(1))
C
      CALL SKNBND(CX(1,1,ID),M,D11(2),  D12(2),  D22(2),
     1                        D11M(2), D12M(2), D22M(2),
     1                        D11MM(2),D12MM(2),D22MM(2),MSLOPE(ID))
C
      IF (ISTIF(1).EQ.5) THEN
         CALL SKNBND(CX(1,1,2),M,D11(3),  D12(3),  D22(3),
     1                         D11M(3), D12M(3), D22M(3),
     1                         D11MM(3),D12MM(3),D22MM(3),MSLOPE(2))
C
         CALL SKNBND(CX(1,1,2),M,D11(4),  D12(4),  D22(4),
     1                         D11M(4), D12M(4), D22M(4),
     1                         D11MM(4),D12MM(4),D22MM(4),MSLOPE(4))
      ENDIF
C
C BEG MAY 1997
      SBPB   =   4.*N*N*(  D11(1)*A(1,1) + GZSTIF*D11(2)*A(1,ISKIN2))
     1         +      N*(  D12(1)*A(7,1) + GZSTIF*D12(2)*A(7,ISKIN2))
     1         +      N*(  D22(1)*A(4,1) + GZSTIF*D22(2)*A(4,ISKIN2))
     1         + 0.25*(CX(5,5,1) *A(18,1)
     1                              + GZSTIF*CX(5,5,ID)*A(18,ISKIN2))
C BEG JUN 1996 (ELASTIC FOUNDATION EFFECT IN THE PANEL SKIN)
     1         + 0.25*(FACSKN*WFOUND(1,1)*A(1,1)
     1                +GZSTIF*FACBAS*WFOUND(ISKIN2,1)*A(1,ISKIN2))
C END JUN 1996
C END MAY 1997
C
      IF (ISTIF(1).EQ.5) THEN
         SBPB=SBPB+ 4.*N*N*(  D11(3)*A(1,2) +   D11(4)*A(1,4) )
     1            +      N*(  D12(3)*A(7,2) +   D12(4)*A(7,4))
     1            +      N*(  D22(3)*A(4,2) +   D22(4)*A(4,4))
     1            + 0.25*(CX(5,5,2) *A(18,2)+CX(5,5,2)*A(18,4))
C BEG JUN 1996 (ELASTIC FOUNDATION EFFECT IN THE TRUSSC0RE WEBS)
     1         + 0.25*(FACWEB*WFOUND(2,1)*A(1,2)
     1                +FACWEB*WFOUND(2,1)*A(1,4))
C END JUN 1996
      ENDIF
C
      DEN = C16 +M*C19 +M2*C22
      NUM =  C6 +M2*C9 +SBPB
C
C BEG MAY 1997
C23456789012345678901234567890123456789012345678901234567890123456789012
      SBPBM  =   4.*N*N*( D11M(1)*A(1,1) + GZSTIF*D11M(2)*A(1,ISKIN2))
     1         +      N*( D12M(1)*A(7,1) + GZSTIF*D12M(2)*A(7,ISKIN2))
     1         +      N*( D22M(1)*A(4,1) + GZSTIF*D22M(2)*A(4,ISKIN2))
C
      SBPBMM =   4.*N*N*(D11MM(1)*A(1,1) + GZSTIF*D11MM(2)*A(1,ISKIN2))
     1         +      N*(D12MM(1)*A(7,1) + GZSTIF*D12MM(2)*A(7,ISKIN2))
     1         +      N*(D22MM(1)*A(4,1) + GZSTIF*D22MM(2)*A(4,ISKIN2))
C END MAY 1997
C
      IF (ISTIF(1).EQ.5) THEN
         SBPBM  = SBPBM 
     1            +  4.*N*N*( D11M(3)*A(1,2) +  D11M(4)*A(1,4) )
     1            +      N*( D12M(3)*A(7,2) +  D12M(4)*A(7,4))
     1            +      N*( D22M(3)*A(4,2) +  D22M(4)*A(4,4))
C
         SBPBMM = SBPBMM 
     1            +  4.*N*N*(D11MM(3)*A(1,2) + D11MM(4)*A(1,4) )
     1            +      N*(D12MM(3)*A(7,2) + D12MM(4)*A(7,4))
     1            +      N*(D22MM(3)*A(4,2) + D22MM(4)*A(4,4))
      ENDIF
C
      NUMM = 2.*M*C9 +SBPBM
      NUMMM= 2.*  C9 +SBPBMM
      DENM = C19 +2.*M*C22
      DENMM= 2.*C22
C
C     WRITE(8,*)' N,M=',N,M
C     WRITE(8,*)' SBPB,SBPBM,SBPBMM=',SBPB,SBPBM,SBPBMM
C     WRITE(8,*)' NUM,DEN,C16,C19=',NUM,DEN,C16,C19
C     WRITE(8,*)' NUMM,NUMMM=',NUMM,NUMMM
C     WRITE(8,*)' DENM,DENMM=',DENM,DENMM
C     WRITE(8,*)' D11MM(1),D12MM(1),D22MM(1)=',D11MM(1),D12MM(1),
C    1            D22MM(1)
C     WRITE(8,*)' A(1,1),A(7,1),A(4,1)=',A(1,1),A(7,1),A(4,1)
C
      DENOMR = DEN*NUMMM - NUM*DENMM
      IF (DENOMR.EQ.0.0) RETURN
      DM = (NUM*DENM - DEN*NUMM)/DENOMR
      M      = M + DM
      M2  = M*M
      DEN = C16 +M*C19 +M2*C22
      IF (DEN.EQ.0.0) RETURN
      NUM =  C6 +M2*C9 +SBPB
C     WRITE(8,*)' C6,C9,NUM=',C6,C9,NUM
      EKOITR = -NUM/DEN
      IF (NPRT.GE.2) WRITE(IFILE,20) NWAVE,ITER,M,DM,EKOITR
   20 FORMAT(I5,I10,1P,3E12.4)
      IF (ITER.LE.2) GO TO 10
      IF (ABS(DM).GT.0.001*ABS(M).AND.ITER.LT.20) GO TO 10
      IF (ITER.EQ.20) THEN

         WRITE(IFILE,30)
   30    FORMAT(' EIGENVALUE DOES NOT CONVERGE.'/
     1 ' ACCEPTING THE PREVIOUS CONVERGED VALUE AND PROCEEDING'/)
      ENDIF
C
      RETURN
      END
C
C
C
C=DECK      KOICON
      SUBROUTINE KOICON(EIGKOI,N,SLOPE,FSAFE,IMOD,INUMTT,CONMAX,
     1           IPOINC,CONSTR,ICONST,WORDB,ITIPL1)
C
C  PURPOSE IS TO GENERATE CONSTRAINT CONDITION RELATED TO LOCAL
C  BUCKLING OF THE PANEL VIA THE KOITER-TYPE EIGENVALUE THEORY.
C  SEE THE PAPER "USE OF PANDA2 TO OPTIMIZE...", IN "DESIGN AND
C  ANALYSIS OF COMPOSITE MATERIAL VESSELS", ASME PVP VOL. 121,
C  PP 21 - 42, 1987.  IN PARTICULAR, SEE SECTION 2.13 ON PP 33.
C
C BEG APR 2007
      COMMON/OUTP/NPRT
C END APR 2007
      COMMON/WORDS5/PCWORD(99)
      COMMON/PLOTCD/ICAR,IADDCC(99),CPLOT(99)
      COMMON/FSAFEB/FSAFEP(99)
      DIMENSION IPOINC(*),CONSTR(*),WORDB(*)
      CHARACTER*80 PCWORD,WORDB
      CHARACTER*7 CN2,CN3
      CHARACTER*3 CN,CM,CQ
C
      INUMTT = INUMTT + 1
      EIGCON = EIGKOI/FSAFE
      IF (EIGCON.LT.0.) GO TO 40
      IF (IMOD.EQ.0) THEN
         ICAR = ICAR + 1
         CALL CONVRT(N,CN)
         CALL CONVRF(FSAFE,CN2)
         CALL CONVRF(SLOPE,CN3)
         PCWORD(ICAR) = 'Local buckling: Koiter theory.'
         IF (ITIPL1.EQ.1)
     1   PCWORD(ICAR) = 'Bending-torsion buckling: Koiter theory.'
         CPLOT(ICAR) = EIGCON - 1.
         IADDCC(ICAR) = 0
         FSAFEP(ICAR) = FSAFE
      ENDIF
C
      IF (IMOD.EQ.0.AND.EIGCON.GT.CONMAX) GO TO 40
      IF (IMOD.EQ.1.AND.IPOINC(INUMTT).EQ.0) GO TO 40
      ICONST = ICONST + 1
      IF (IMOD.EQ.0) IPOINC(INUMTT) = 1
      CONSTR(ICONST) = EIGCON
      CALL CONVRT(N,CN)
      CALL CONVRF(FSAFE,CN2)
      CALL CONVRF(SLOPE,CN3)
      WORDB(ICONST) =
     1   'Local buckling from Koiter theory,M='//CN//' axial ha'//
     1'lfwaves;FS='//CN2
      IF (ITIPL1.EQ.1) WORDB(ICONST) =
     1   'Bending-torsion buckling: Koiter theory,M='//CN//' axi'//
     1'al halfwav;FS='//CN2
C BEG APR 2007
  495 CONTINUE
      IF (NPRT.GE.0) WRITE(8,'(A,1P,E12.4,2X,A)')
     1 ' Margin=',CONSTR(ICONST)-1.,WORDB(ICONST)
C END APR 2007
   40 CONTINUE
      RETURN
      END
C
C
C
C=DECK      ET3TT3
      SUBROUTINE ET3TT3(C,THERM,ISTIF,NSEG,B,B2,H,W,W2,ET3,ET4,TT3,TT4,
C BEG MAY 1997
     1                  S,IZSTIF,ETFAY,TTFAY)
C END MAY 1997
C
C  PURPOSE IS TO CALCULATE ET3,ET4,TT3,TT4 FOR STIFFENER WEBS AND FLANGE
C
      DIMENSION C(6,6,5),THERM(3,5)
C
      ET3 = 0.
      ET4 = 0.
      TT3 = 0.
      TT4 = 0.
      S   = H
      IF (ISTIF.EQ.4) S = 2.*SQRT(H**2 + .25*(W2-W)**2)
      IWEB = 3
      IF (ISTIF.EQ.5) THEN
C BEG NOV 1995
         S = SQRT(H**2 + .25*(B-2.*B2)**2)
C END NOV 1995
         IWEB = 2
      ENDIF
C
      IF (NSEG.GT.2) THEN
         ET3 = C(1,1,IWEB) - C(1,2,IWEB)**2/C(2,2,IWEB)
         TT3 = THERM(1,IWEB) -C(1,2,IWEB)*THERM(2,IWEB)/C(2,2,IWEB)
C BEG MAY 1997
         IF (IZSTIF.EQ.1) THEN
            IWEBM = IWEB - 1
            ETFAY = C(1,1,IWEBM) - C(1,2,IWEBM)**2/C(2,2,IWEBM)
            TTFAY = THERM(1,IWEBM) 
     1               - C(1,2,IWEBM)*THERM(2,IWEBM)/C(2,2,IWEBM)
         ENDIF
C END MAY 1997
         IF (ISTIF.EQ.5) THEN
            ET4 = ET3
            TT4 = TT3
         ENDIF
         IF (NSEG.GT.3) THEN
            ET4 = C(1,1,4) - C(1,2,4)**2/C(2,2,4)
            TT4 = THERM(1,4) -C(1,2,4)*THERM(2,4)/C(2,2,4)
         ENDIF
      ENDIF
C
      RETURN
      END
C
C
C
C=DECK      SKNBND
      SUBROUTINE SKNBND(C,M,D11,D12,D22,D11M,D12M,D22M,
     1                      D11MM,D12MM,D22MM,S)
C
C  Purpose is to derive bending stiffness coefficients for skin
C  bending energy for one of the segments of the panel skin.
C  D11,  D12,  D22  = bending energy terms
C  D11M, D12M, D22M = first  derivatives of D11, D12, D22 w.r.t. M
C  D11MM,D12MM,D22MM= second derivatives of D11, D12, D22 w.r.t. M
C
C BEG OCT 1996
      COMMON/KSTARX/FSTAR1,FSTAR2
C END OCT 1996
      COMMON/KSTARC/FKSTAR
      DIMENSION C(6,6)
      REAL M,M2,M3,M4
C
      M2 = M*M
      M3 = M*M*M
      M4 = M2*M2
      S2 = S*S
      S3 = S2*S
      S4 = S3*S
C
      D11   = C(4,4) - 4.*M*S* C(4,6) + 2.*M2*S2*(C(4,5) + 2.*C(6,6))
     1              - 4.*M3*S3*C(5,6) +    M4*S4* C(5,5)
C
      D11M  =        - 4.  *S* C(4,6) + 4.*M *S2*(C(4,5) + 2.*C(6,6))
     1              -12.*M2*S3*C(5,6) + 4.*M3*S4* C(5,5)
C
      D11MM =                           4.   *S2*(C(4,5) + 2.*C(6,6))
     1              -24.*M *S3*C(5,6) +12.*M2*S4* C(5,5)
C
      D12   = -2.*C(4,5) - 2.*M2*S2*C(5,5) + 4.*M*S*C(5,6)
      D12M  =            - 4.*M *S2*C(5,5) + 4.  *S*C(5,6)
      D12MM =            - 4.   *S2*C(5,5)
C
      D22   =  4.*C(6,6) + 4.*M2*S2*C(5,5) - 8.*M*S*C(5,6)
      D22M  =              8.*M *S2*C(5,5) - 8.  *S*C(5,6)
      D22MM =              8.   *S2*C(5,5)
C
C  REDUCTION FOR EFFECT OF TRANSVERSE SHEAR DEFORMATION SOFTENING..
C
C BEG OCT 1996
      D11   = D11*FSTAR1
      D11M  = D11M*FSTAR1
      D11MM = D11MM*FSTAR1
      D12   = D12*FSTAR1
      D12M  = D12M*FSTAR1
      D12MM = D12MM*FSTAR1
      D22   = D22*FSTAR1
      D22M  = D22M*FSTAR1
      D22MM = D22MM*FSTAR1
C END OCT 1996
C
      RETURN
      END
C
C
C
C=DECK      NEWTON
      SUBROUTINE NEWTON(ITAN,NPRT,IFILE,CX,N,M,AL,F,NXY,EPS1,EPS2,
     1         EPS12,N1SKIN,N2SKIN,N12SKN,EPS2S,EIGLOC,KOITER,
     1         EKOITR,F0,ISTRAT,W0,NOCONV,IMOD,RESULT,ILOADS,JJJ,
     1         IW0,KOUNTW,KOUNTM,PERT,KOUNTP,IFAIL,ICASE,CSN,WIMPL,
     1         WRATIO,IIIA,ITYPE,LABLE)
C
C  Purpose is to set up and solve the nonlinear equations for m and
C  AL, then substitute for f**2 = -NUM/DEN.  KOITER postbuckling theory.
C
      DOUBLE PRECISION C,RHS
C BEG JULY 1995
      COMMON/PSTSTF/EKOISV,FMOD0,ALMOD0,FMMOD0,FNMOD0,FWAVE0
      COMMON/BRATX/BRAT,FMSLOX
C END JULY 1995
C BEG MAR 1996
      COMMON/DELIM2/DELFCX(3,4),DELWBX(2),DELCUX(3)
C END MAR 1996
      COMMON/GEOM3/ISTIF(2),NLAYER(4,2),NNSEG(2),INTEXT(2)  
      COMMON/LOCDEF/SLOPE(5,2),FLATA(5,2),FAMPLT(5,2),USEIT(5,2)
      DIMENSION CSN(6,6)
      REAL MOLD
      COMMON/THICK/TX(5),TY(5)
      DIMENSION CX(6,6,5),C(3,3),RHS(3),DF(3),RESULT(3,5,2)
      REAL N1SKIN,N2SKIN,N12SKN,M0,N,M,MSTART,MDIFF
C BEG MAY 1997
      LOGICAL ILOGIC,IFTEST,IFTST2,IFTST3,IFTST4
C END MAY 1997
C
      MSTART = M
      MDIFF = ABS(1.0 - ABS(MSTART))
    1 CONTINUE
      FBEFOR = 0.
      IF (ISTRAT.EQ.1) FBEFOR = F
C
      WTEST = ABS(W0/TX(1))
      M0 = M
      IF (NOCONV.NE.2.AND.NOCONV.NE.4) NOCONV=0
C BEG JULY 1995
C     IF (ITAN.EQ.0.AND.IMOD.EQ.0.AND.EKOITR.GT.1.0.AND.
C    1    ISTRAT.EQ.1) NOCONV = 1
      IF (ITAN.EQ.0.AND.EKOITR.GT.1.0) NOCONV = 2
      IF (IMOD.EQ.0.AND.ITAN.EQ.0) FMSLOX = M
      IFREE = 0
      IF (BRAT.GT.1.5.AND.EKOISV.LT.0.1.AND.ABS(FMSLOX).GT.BRAT) THEN
         NOCONV = 1
         IFREE  = 1
      ENDIF
C END JULY 1995
      ITER = 0
      IF (ISTRAT.EQ.1.AND.KOITER.EQ.0.AND.WTEST.LT.0.005) THEN
         F = 0.
         AL= 0.
         GO TO 100
      ENDIF
      IF (NPRT.GE.2) THEN
         IF (ISTRAT.EQ.0.AND.ITAN.EQ.0) WRITE(IFILE,3)
         IF (ISTRAT.EQ.1.AND.ITAN.EQ.0) THEN
C           WRITE(IFILE,1001) EKOITR,W0,WTEST,IMOD,NOCONV,IIIA,
C    1                        KOITER,JJJ,ISTRAT,ITAN,ICASE,ILOADS
C1001       FORMAT(/' ENTERING SUBROUTINE NEWTON WITH FOLLOWING:'/
C    1' EKOITR, W0, W0/TX(1)            =',1P,3E12.4/
C    1' IMOD, NOCONV, IIIA, KOITER, JJJ =',5I4/
C    1' ISTRAT, ITAN, ICASE, ILOADS     =',4I4)   
            WRITE(IFILE,4) WIMPL
         ENDIF
    3    FORMAT(/' NONLINEAR POST-LOCAL BUCKLING BEHAVIOR WITH'/
     1' INITIAL LOCAL IMPERFECTION IGNORED  (Wo = 0):')
    4    FORMAT(/' NONLINEAR POST-LOCAL BUCKLING BEHAVIOR WITH'/
     1' INITIAL LOCAL IMPERFECTION INCLUDED (Wo =',1PE12.4,'):')
         IF (ITAN.EQ.0.AND.IMOD.EQ.0.AND.EKOITR.GT.1.0.AND.
     1       ISTRAT.EQ.1) WRITE(IFILE,2) M
    2    FORMAT(' Starting iterations with fixed slope, m =',1PE12.4)
         WRITE(IFILE,5) LABLE,M,AL,F,W0,PERT
    5    FORMAT(/' SUBROUTINE NEWTON CALLED FROM KOIT2 AT LABEL=',I5/
     1  ' NEWTON ITERATIONS BEGIN; SLOPE=',1PE12.4,'; a=',
     1    1PE12.4,'; f=',1PE12.4/
     1  ' Imperfection, Wo=',1PE12.4,'; Load Perturbation=',1PE12.4/
     1'  ITER   SLOPE       DSLOPE        a           da         f      
     1     df')
      ENDIF
      PI = 3.1415927
C
      IF (NOCONV.EQ.2) THEN
         M = M0
        AL = 0.
      ENDIF
      IF (NOCONV.EQ.4) AL = 0.
      MOLD = M0
      ALOLD= 0.0
      INEGF = 0
      IALPH = 0
C
      CALL GETA
C
   10 CONTINUE
C
      ITER = ITER + 1
C
      IF (ISTIF(1).NE.5) THEN
         IF (ABS(AL).GT.1.0.AND.(AL.LT.0.0.OR.AL.GT.10.)
     1                     .AND.ITER.LT.5) AL = 0.3*WRATIO*AL/ABS(AL)
C BEG FEB 1997
         IF (WRATIO.GT.0.5.AND.ITER.LT.40.AND.ABS(AL).GT.10.0)
     1                                     AL = 0.3*WRATIO*AL/ABS(AL)
C END FEB 1997
      ELSE
         IF (ITAN.EQ.0.AND.ITER.LT.5
     1     .AND.ABS(AL).GT.1.0.AND.(AL.LT.0.0.OR.AL.GT.10.))
     1                       AL = 0.3*AL/ABS(AL)
      ENDIF
C BEG JULY 1995
C     IF (ABS(M ).GT.(2.*PI))  THEN
C        NPI = M/(2.*PI)
C        M = M - NPI*2.*PI
C     ENDIF
C END JULY 1995
C
      IRETRN = 0
C     WRITE(8,*)' ITER,ISTRAT,NOCONV=', ITER,ISTRAT,NOCONV
      CALL GETBK(N,F,AL,M,C,RHS,F0,DF,CX,ISTRAT,NOCONV,IRETRN,FSSAVE,
     1           IIIA)
      IF (IRETRN.EQ.1) THEN
C BEG NOV 2003
        IF (NPRT.GE.1) THEN
C END NOV 2003
         WRITE(IFILE,*)' '
         WRITE(IFILE,*)' ***************************************'
         WRITE(IFILE,*)' IMAGINARY DEFLECTION AMPLITUDE.'
C BEG JULY 1995
         WRITE(IFILE,*)' PANDA2 STILL TRYING TO GET A SOLUTION.'
         WRITE(IFILE,*)' ***************************************'
         WRITE(IFILE,*)' '
C END NOV 2003
        ENDIF
C END NOV 2003
C        IF (EKOITR.LT.1.0) THEN
C           WRITE(IFILE,*)' TRY SETTING THE INITIAL AXIAL BOWING'
C           WRITE(IFILE,*)' AMPLITUDE EQUAL TO A SMALL NUMBER AND'
C           WRITE(IFILE,*)' RESTART.'
C           WRITE(IFILE,*)' ***************************************'
C           WRITE(IFILE,*)' ***************************************'
C           CALL ERREX
C        ENDIF
C END JULY 1995
         IF (MDIFF.LT.0.00001.AND.ABS(MSTART).GT.0.9
     1                       .AND.ABS(M0).LT.10.) THEN
            M = M0 + 1.0*MSTART/ABS(MSTART)
            F = 0.
            AL= 0.
            GO TO 1
         ENDIF
         F  = FSSAVE
         IF (F.GT.0.) NOCONV = 2
         AL = 0.
         M  = M0
         IF (IMOD.EQ.0) IIIA = 1
         IF (IMOD.EQ.0.AND.USEIT(ILOADS,ICASE).GT.0.0) THEN
            F = FAMPLT(ILOADS,ICASE)
            AL= FLATA(ILOADS,ICASE)
            M = SLOPE(ILOADS,ICASE)
            USEIT(ILOADS,ICASE) = 0.0
         ENDIF
         RETURN
      ENDIF
C
      IF (ISTRAT.EQ.1.AND.IIIA.EQ.0.AND.NOCONV.NE.1
     1               .AND.NOCONV.NE.2.AND.NOCONV.NE.4)
     1  CALL SOLVIT(IFILE,C,RHS,DF)
C BEG MAY 1997
      IF (IMOD.EQ.1) THEN
         FSAVEX = ABS(F)
         ALSAVX = ABS(AL)
         FMSAVX = ABS(M)
      ENDIF
C END MAY 1997
      F = F + DF(1)
      AL= AL+ DF(2)
      M = M + DF(3)
      F0= F
C
C BEG MAY 1997
C     IF (NPRT.GE.2) THEN
      IF (NPRT.GE.2.OR.ABS(DF(2)).GT.10.0.OR.ABS(DF(3)).GT.100.) THEN
        IF (ABS(DF(2)).GT.10.0.OR.ABS(DF(3)).GT.100.) WRITE(IFILE,'(A)')
     1' LARGE VALUE OF DALPHA OR DM: ITER, M, DM, ALPHA, DALPHA, F, DF='
        WRITE(IFILE,60) ITER,M,DF(3),AL,DF(2),F,DF(1)
   60   FORMAT(I5,1P,6E12.4)
C23456789012345678901234567890123456789012345678901234567890123456789012
        IF (ITER.GT.3.AND.IMOD.EQ.1.AND.ABS(DF(1)).GT.1.0
     1               .AND.ABS(DF(2)).GT.10.0.AND.ABS(DF(3)).GT.1.0.AND.
     1   (ABS(DF(1)).GT.100.*FSAVEX.OR.ABS(DF(2)).GT.100.*ALSAVX
     1                             .OR.ABS(DF(3)).GT.100.*FMSAVX)) THEN
           WRITE(IFILE,'(A)')
     1   ' IMOD=1: SOLUTION BLOWS UP IN NEWTON. ITER SET TO 45'
           ITER = 45
        ENDIF
        IF (ABS(DF(3)).GT.100.) THEN
           WRITE(IFILE,'(A,I2,A)')
     1   ' IMOD=',IMOD,': SOLUTION BLOWS UP IN NEWTON. ITER SET TO 45'
           ITER = 45
        ENDIF
C END MAY 1997
      ENDIF
C
C     IF (ITAN.NE.0.AND.WTEST.GT.0.02) GO TO 100
      IF (ITER.LE.2) GO TO 10
      IF (ABS(DF(1)).GT.0.0001*ABS(F).AND.ITER.LT.45) GO TO 10
      IF (ABS(DF(3)).GT.0.0001*ABS(M).AND.ITER.LT.45) GO TO 10
      IF (ABS(AL).GT.0.001) THEN
         IF (ABS(DF(2)).GT.0.0001*ABS(AL).AND.ITER.LT.45) GO TO 10
      ELSE
         IF (ABS(DF(2)).GT.0.01*ABS(AL).AND.ITER.LT.45) GO TO 10
      ENDIF
C 
      FM0 = M0
      FM  = M
      IF (ABS(M0).LT.0.01) FM0 = 0.
      IF (ABS(M ).LT.0.05) FM  = 0.
      FMM0 = FM0*FM
      IF (ISTIF(1).EQ.5) FMM0 = ABS(FMM0)
C     FMOM0= FM/FM0
      FSAVE = F
C BEG OCT 1995
C     IFTEST = FSAVE.LT.0.0.OR.FMM0.LT.0.0
C     IF (ISTRAT.EQ.1) IFTEST = FMM0.LT.0.0
      IFTEST = FSAVE.LT.0.0.OR.(FMM0.LT.0.0.AND.ITER.GT.20)
      IF (ISTRAT.EQ.1) IFTEST = FMM0.LT.0.0.AND.ITER.GT.20
C END OCT 1995
      IFTST2 = FSAVE.GT.0.0
      IF (ISTRAT.EQ.1) IFTST2 = .TRUE.
      IF (ISTIF(1).NE.5) THEN
C BEG MAR 1996
C        IF (RESULT(1,1,1).GT.0.0.AND.RESULT(2,1,1).GT.0.0)
         IF ((RESULT(1,1,1)+DELFCX(1,1)).GT.0.0.AND.
     1       (RESULT(2,1,1)+DELFCX(2,1)).GT.0.0) THEN
            IFTEST = .FALSE.
            IFTST2 = .TRUE.
         ENDIF
      ELSE
C        IF (RESULT(1,1,1).GT.0.0.AND.RESULT(2,1,1).GT.0.0.AND.
C    1       RESULT(1,3,1).GT.0.0.AND.RESULT(2,3,1).GT.0.0)
         IF ((RESULT(1,1,1)+DELFCX(1,1)).GT.0.0.AND.
     1       (RESULT(2,1,1)+DELFCX(2,1)).GT.0.0.AND.
     1       (RESULT(1,3,1)+DELFCX(1,3)).GT.0.0.AND.
     1       (RESULT(2,3,1)+DELFCX(2,3)).GT.0.0) THEN
            IFTEST = .FALSE.
            IFTST2 = .TRUE.
         ENDIF
C END MAR 1996
      ENDIF
C     IFTST3 = ABS(AL).GT.10.*ABS(F)
      IFTST3 = ABS(AL).GT.1.0.AND.(AL.LT.0.0.OR.AL.GT.10.)
C BEG MAY 1997
      IFTST4 = ABS(M).GT.100.
C END MAY 1997
C
      IF (ISTRAT.EQ.0.AND.ITER.GE.45) THEN
         F  = FSSAVE
         IF (F.GT.0.) NOCONV = 2
         AL = 0.
         M  = M0
         RETURN
      ENDIF
      IF (ISTRAT.EQ.0.AND.IMOD.EQ.0.AND.
     1 ((ABS(AL).GT.1.0.AND.(AL.LT.0.0.OR.AL.GT.10.)).OR.IFTST3)) THEN
         IIIA = 1
         IF (NPRT.GE.1) THEN
            WRITE(IFILE,*)' FLATTENING PARAMETER a TOO LARGE.'
            WRITE(IFILE,*)' SETTING a = 0 FROM NOW ON.'
         ENDIF
         F  = 0.
         AL = -0.0001
         M  = M0
         ITER = 0
         GO TO 10
      ENDIF
C
      IF (IALPH.EQ.0.AND.INEGF.EQ.0) THEN
       IF (ITER.GE.45.OR.(NOCONV.NE.0.AND.IFTEST)) THEN
        IF (NOCONV.NE.0.AND.IMOD.EQ.0.AND.NPRT.GE.1.AND.ITAN.EQ.0) THEN
        WRITE(IFILE,*)' LOCAL DEFORMATION PATTERN FAILS TO CONVERGE'
        WRITE(IFILE,*)' SETTING f = 0, a = 0, m = m0 AND PROCEEDING'
        ENDIF
         F = 0.
        AL = 0.
         M = M0
       ENDIF
      ENDIF
C
C BEG MAY 1997
      IF (NOCONV.EQ.0
     1   .AND.(ITER.GE.45.OR.IFTEST.OR.IFTST3.OR.IFTST4)) THEN
C END MAY 1997
         IF (IALPH.EQ.1) THEN
            F = FOLD
            M = MOLD
           AL = ALOLD
            NOCONV = 3
            IF (IMOD.EQ.0.AND.NPRT.GE.1) WRITE(IFILE,*)
     1    ' Set f, m, a to previous converged values and move on.'
            GO TO 80
         ENDIF
         IF (ITAN.EQ.0.AND.USEIT(ILOADS,ICASE).GT.0.0) THEN
            IF (IMOD.EQ.0.AND.NPRT.GE.1) THEN
              WRITE(IFILE,*)' LOCAL DEFORMATION PATTERN FAILS TO'
              WRITE(IFILE,*)' CONVERGE. TRYING AN OLD SOLUTION AS A'
              WRITE(IFILE,*)' STARTING SOLUTION.'
            ENDIF
            F = FAMPLT(ILOADS,ICASE)
            AL= FLATA(ILOADS,ICASE)
            M = SLOPE(ILOADS,ICASE)
            USEIT(ILOADS,ICASE) = 0.0
            ITER = 0
            GO TO 10
         ENDIF
        IF (IMOD.EQ.0.AND.NPRT.GE.1) THEN
        WRITE(IFILE,*)' LOCAL DEFORMATION PATTERN FAILS TO CONVERGE'
        WRITE(IFILE,*)' TRYING AGAIN WITH DSLOPE=0.'
        ENDIF
         NOCONV = 1
C        ISTRAT = 1
          F = 0.
         IF (IFTST3) F = FBEFOR
         AL = 0.
         M  = M0
         ITER = 0
         GO TO 10
      ENDIF
C
      IF ((NOCONV.EQ.1.OR.NOCONV.EQ.3)
C BEG MAY 1997
     1   .AND.(ITER.GE.45.OR.IFTEST.OR.IFTST3.OR.IFTST4))THEN
C END MAY 1997
        IF (IALPH.EQ.1) THEN
           F = FOLD
           M = MOLD
           AL = 0.
           NOCONV = 4
           IF (IMOD.EQ.0.AND.NPRT.GE.1) THEN
              WRITE(IFILE,*)' '
              WRITE(IFILE,*)' No convergence.'
              WRITE(IFILE,*)
     1   ' Set f and m to previous converged values and move on.'
           ENDIF
           GO TO 80
        ENDIF
        IF (ITAN.EQ.1) THEN
           IFAIL = 1
           IF (KOUNTP.EQ.0) THEN
                IF (IMOD.EQ.0.AND.NPRT.GE.1) WRITE(IFILE,*)
     1        ' REDUCING PERTURBATION BY FACTOR OF 10 AND TRYING AGAIN.'
                PERT = PERT/10.
           ENDIF
           IF (KOUNTP.EQ.1) THEN
                IF (IMOD.EQ.0.AND.NPRT.GE.1) WRITE(IFILE,*)
     1        ' CHANGING THE SIGN OF THE PERTURBATION AND TRYING AGAIN.'
                PERT = -PERT
           ENDIF
           IF (KOUNTP.GT.1) THEN
                IF (IMOD.EQ.0.AND.NPRT.GE.1) WRITE(IFILE,*)
     1        ' CONTINUES TO FAIL. INCREASE INITIAL LOCAL IMPERFECTION.'
           ENDIF
           KOUNTP = KOUNTP + 1
           IF (KOUNTP.LE.2) NOCONV = 0
           RETURN
        ENDIF
        IF (IMOD.EQ.0.AND.KOUNTW.GT.KOUNTM.AND.NPRT.GE.1) THEN
        WRITE(IFILE,*)' TRYING AGAIN WITH SLOPE FIXED AT ',M0,
     1                ' AND FLATTENING PARAMETER, a = 0.'
        ENDIF
        IF (IMOD.EQ.0.AND.KOUNTW.LE.KOUNTM.AND.NPRT.GE.1) THEN
        WRITE(IFILE,*)' TRYING AGAIN WITH LARGER IMPERFECTION, W0.'
        ENDIF
        IF (KOUNTW.LE.KOUNTM) THEN
           IW0 = 1
           ITER = 0
           RETURN
        ENDIF
         NOCONV = 2
          F = 0.
         IF (IFTST3) F = FBEFOR
         AL = 0.
         M  = M0
         ITER = 0
         GO TO 10
      ENDIF
C
      IF (NOCONV.EQ.1.AND.IFTST2.AND.ITER.LT.45) THEN
        IF ((IALPH.EQ.1.AND.ABS(F).LT.0.7*ABS(FOLD)).OR.
     1      (IALPH.EQ.1.AND.INEGF.EQ.1.AND.F.LT.0.)) THEN
           F  = FOLD
           M  = MOLD
           AL = 0.
           NOCONV = 4
           IF (IMOD.EQ.0.AND.NPRT.GE.1) THEN
              WRITE(IFILE,*)' '
              WRITE(IFILE,*)' Convergence to the wrong solution.'
              WRITE(IFILE,*)' Set f and m to previous converged values'
              WRITE(IFILE,*)' and the parameter a = 0, and move on.'
           ENDIF
           GO TO 80
        ENDIF
        IF (IFREE.EQ.0.AND.IMOD.EQ.0.AND.NPRT.GE.1) THEN
         WRITE(IFILE,*)' CONVERGENCE OBTAINED WITH DSLOPE=0.'
         WRITE(IFILE,*)' FREE DSLOPE NOW, AND TRY AGAIN.'
        ENDIF
C BEG JULY 1995
        IIIAB = IIIA
C END JULY 1995
        IF (IMOD.EQ.0.AND.
     1   ((ABS(AL).GT.1.0.AND.(AL.LT.0.0.OR.AL.GT.10.)).OR.IFTST3)) THEN
           IF (IFTST3) F = FBEFOR
           IIIA = 1
           AL = -0.0001
           IF (NPRT.GE.1) THEN
              WRITE(IFILE,*)' FLATTENING PARAMETER a TOO LARGE.'
              WRITE(IFILE,*)' SETTING a = 0 FROM NOW ON.'
           ENDIF
        ENDIF           
C BEG JULY 1995
        IF (IFREE.EQ.1) THEN
           IF (IIIAB.EQ.IIIA) GO TO 100
           NOCONV = 1
           ITER = 0
           GO TO 10
        ENDIF
C END JULY 1995
        NOCONV = 3
        ITER   = 0
        GO TO 10
      ENDIF
      IF (NOCONV.EQ.2.AND.IFTST2.AND.ITER.LT.45) THEN
        IF (F.LT.0.0.AND.INEGF.EQ.1) THEN
           F = FOLD
           M = MOLD
           AL= 0.
           NOCONV = 4
           IF (IMOD.EQ.0.AND.NPRT.GE.1) THEN
              WRITE(IFILE,*)' '
              WRITE(IFILE,*)' Amplitude parameter f is negative.'
              WRITE(IFILE,*)
     1   ' Set f and m to previous converged values and move on.'
           ENDIF
           IF (IALPH.EQ.0) GO TO 70
           IF (IALPH.EQ.1) GO TO 80
        ENDIF
        IF (IMOD.EQ.0.AND.NPRT.GE.1) THEN
         WRITE(IFILE,*)' CONVERGENCE OBTAINED WITH m = m0 AND'
         WRITE(IFILE,*)' FLATTENING PARAMETER a = 0.'
         WRITE(IFILE,*)' FREE DSLOPE NOW, AND TRY AGAIN.'
        ENDIF
C BEG JULY 1995
        IF (IFREE.EQ.1) GO TO 100
C END JULY 1995
        NOCONV = 4
        FOLD = F
        ITER   = 0
        GO TO 10
      ENDIF
C
      IF (NOCONV.EQ.4.AND.ITAN.EQ.0.AND.INEGF.EQ.0.AND.IFTST2.AND.
     1                                  ITER.LT.45.AND.F.LT.0.0) THEN
         IF (IMOD.EQ.0.AND.NPRT.GE.1) THEN
            WRITE(IFILE,*)' Amplitude factor f is negative. Setting'
            WRITE(IFILE,*)' f = -f and trying again with slope fixed.'
         ENDIF
         INEGF = 1
         FOLD = F
         MOLD = M
         F = -F
         NOCONV = 2
         ITER = 0
         GO TO 10
      ENDIF
C
C
      IF (NOCONV.EQ.3.AND.ITAN.EQ.0.AND.INEGF.EQ.0.AND.IFTST2.AND.
     1                                  ITER.LT.45.AND.F.LT.0.0) THEN
         IF (IMOD.EQ.0.AND.NPRT.GE.1) THEN
            WRITE(IFILE,*)' Amplitude factor f is negative. Setting'
            WRITE(IFILE,*)' f = -f and trying again.'
         ENDIF
         INEGF = 1
         FOLD = F
         MOLD = M
         ALOLD= AL
         F = -F
         NOCONV = 0
         ITER = 0
         GO TO 10
      ENDIF
C
   70 CONTINUE
C
      IF (IIIA.EQ.0.AND.NOCONV.EQ.4.AND.ITAN.EQ.0
     1             .AND.IALPH.EQ.0.AND.IFTST2.AND.ITER.LT.45) THEN
         IF (IMOD.EQ.0.AND.NPRT.GE.1) THEN
            WRITE(IFILE,*)' Convergence achieved with flattening para-'
            WRITE(IFILE,*)' meter a = 0.  Freeing a and trying again,'
            WRITE(IFILE,*)' with slope fixed at first.'
         ENDIF
         IALPH = 1
         FOLD = F
         MOLD = M
         NOCONV = 1
         ITER = 0
         GO TO 10
      ENDIF
C
C BEG MAY 1997
      IF (NOCONV.EQ.4
     1   .AND.(ITER.GE.45.OR.IFTEST.OR.IFTST3.OR.IFTST4)) THEN
C END MAY 1997
        IF (IMOD.EQ.0.AND.NPRT.GE.1) THEN
         WRITE(IFILE,*)' NO CONVERGENCE WITH SLOPE m FREE. SETTING'
         WRITE(IFILE,*)' AMPLITUDE f = last converged value; m =m0'
        ENDIF
        F = FOLD
        IF (IFTST3) F = FBEFOR
        M = M0
        NOCONV = 2
      ENDIF
C
   80 CONTINUE
C
      ILOGIC=IMOD.EQ.0.AND.IFTST2.AND.ITER.LT.45
      IJJJ = 5
      IF (ISTIF(1).EQ.5) IJJJ = 5
      IF (ILOGIC.AND.ISTRAT.NE.0) THEN
         IF (NPRT.GE.1)
C BEG FEB 1997
     1      WRITE(IFILE,'(A,I5,A,I2,/,A,1P,3E12.4)') ' LABEL=',LABLE,
     1    ' CONVERGENCE OF LOCAL STATE SUCCESSFUL! IMOD=',IMOD,
     1    ' SOLUTION FROM "NEWTON", F,AL,M=',F,AL,M
C END FEB 1997
         IF (ITAN.EQ.0) USEIT(ILOADS,ICASE) = 0.0
         IF (ITYPE.LT.3.AND.ITAN.EQ.0.AND.JJJ.GE.IJJJ.AND.
     1                     NOCONV.NE.2.AND.NOCONV.NE.4) THEN
            FAMPLT(ILOADS,ICASE) = F
            FLATA(ILOADS,ICASE)  = AL
            SLOPE(ILOADS,ICASE)  = M
            USEIT(ILOADS,ICASE)  = 1.0
            IF (NPRT.GE.2) WRITE(IFILE,95) ILOADS,ICASE,F,AL,M
   95       FORMAT(' STORING "OLD" SOLUTION FOR LOAD (CASE,SUBCASE)=(',
     1      I1,',',I1,'):'/
     1  '  (amplitude, flattening parameter, slope)=(f,a,m)=',1P,3E12.4)
         ENDIF
      ENDIF
C
  100 CONTINUE
C
C  Now, get average strains in skin, EPS1,EPS2,EPS12, and average
C  resultants in skin, N1SKIN, N2SKIN, N12SKN
C
      CALL AVESKN(F,AL,M,CX,EPS1,EPS2,EPS12,N1SKIN,N2SKIN,
     1                  N12SKN,EPS2S,NXY,W0,CSN)
C
      RETURN
      END
C
C
C
C=DECK      GETA
      SUBROUTINE GETA
C
C  PURPOSE IS TO CALCULATE CERTAIN COMBINATIONS OF Ck FOR USE IN
C  THE KOITER POST-LOCAL BUCKLING THEORY.
C
C   SEE P 18 THRU 21 OF YELLOW NOTES.
C
      COMMON/UW1/C1,C2,C3,C4,C5,C6,C7,C8,C9,C10,C11,C12,C13,C14,C15
      COMMON/UW2/C16,C17,C18,C19,C20,C21,C22,C23,C24,C25,C26,C27
      COMMON/UW3/C28,C29,C30,C31,C32,C33,C34,C35,C36,C37,C38,C39
      COMMON/UW4/C40,C41,C42,C43,C44,C45,C46
      COMMON/UW5/A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15
      COMMON/UW6/A16,A17,A18,A19,A20,A21,A22,A23,A24,A25,A26,A27
      COMMON/UW7/A28,A29,A30,A31,A32,A33,A34,A35,A36,A37,A38,A39
      COMMON/UW8/A40,A41,A42,A43,A44,A45,A46,A47,A48,A49,A50
      COMMON/UW9/GS1,GS2,GS3,GWS1,GWS2,GS4,GS5,GS6,GWS4,GWS5
      COMMON/UW9N/GS1F,GS2F,GS3F,GWS1F,GWS2F
      COMMON/UW12/STIFL2,S2,S3,S4,C47,C48,C49,C50,C51,CS22
      COMMON/UW13/A51,A52,A53,A54,A55,A56,A57,A58,A59,A60,A61,A62
      COMMON/UW14/A63,A64,A65,A66,A67,A68,A69,A70,A71,A72,A73,A74
      COMMON/UW15/A75,A76,A77,A78,A79,A80,A81,A82,A83,A84,A85,A86
      COMMON/UW16/A87,A88,A89,A90,A91,A92,A93,A94,A95,A96,A97,A98
      COMMON/UW17/A99,A100,A101,A102,A103,A104,A105,A106,A107,A108
      COMMON/UW18/A109,A110,A111,A112,A113,A114,A115,A116,A117,A118
      COMMON/UW19/A120,A121,A122,A123,A124,A125,A126,A127,A128,A129
      COMMON/UW20/A130,A131,A132,A133,A134,A135,A136,A137,A119,A139
C
C f-equation...
C   f**3 terms:
      A1  = 2.*C1*C42 +4.*C31 +2.*C40*C42 +2.*C41
      A2  = 2.*C1*C43 +2.*C2*C42 +4.*C32 + 2.*C40*C43
      A3  = 2.*C1*C44 +2.*C2*C43 +2.*C3*C42 +4.*C33 +2.*C40*C44
      A4  = 2.*C2*C44 +2.*C3*C43 +4.*C34
      A5  = 2.*C3*C44 +4.*C35
C
C   f**2 terms:
      A6  = 2.*C1*C45 +C4*C42 +3.*C36 +2.*C40*C45
      A7  = 2.*C2*C45 +2.*C1*C46 +C5*C42 +C4*C43 +3.*C37 +2.*C40*C46
      A8  = 2.*C3*C45 +2.*C2*C46 +C4*C44 +C5*C43 +3.*C38
      A9  = 2.*C3*C46 +C5*C44 +3.*C39
C
C   f**1 terms:
      A10 = C4*C45 +2.*C6 +2.*C16
      A11 = C5*C45 +C4*C46 +2.*C7 +2.*C17
      A12 = C5*C46 +2.*C8 +2.*C18
      A13 = 2.*C19
      A14 = 2.*C20
      A15 = 2.*C21
      A16 = 2.*C9 +2.*C22
      A17 = 2.*C10 + 2.*C23
      A18 = 2.*C11 + 2.*C24
C
C   f**0 terms:
      A19 = C12 +C25
      A20 = C13 +C26
      A21 = C27
      A22 = C28
      A23 = C14 +C29
      A24 = C15 +C30
C
      IF (STIFL2.GT.0.) THEN
      GS1SUM = GS1 + GS1F
      GS2SUM = GS2 + GS2F
      GS3SUM = GS3 + GS3F
      GWS1SM = GWS1 + GWS1F
      GWS2SM = GWS2 + GWS2F
C
C  FOLLOWING ARE TRANSVERSE STIFFENER TERMS IN THE f-EQUATION...
C    f**3 terms...
         B1 = 2.*(C1*S2 +C47)
         B2 = 2.*(C2*S2 +C48)
         B3 = 2.*(C3*S2 +C49)
        B1P = B1 +2.*GS1SUM*S4
        B2P = B2 +2.*GS2SUM*S4
        B3P = B3 +2.*GS3SUM*S4
        A51 = B1*GS1SUM
        A52 = B1*GS2SUM +B2*GS1SUM
        A53 = B1*GS3SUM +B2*GS2SUM +B3*GS1SUM
        A54 = B2*GS3SUM +B3*GS2SUM
        A55 = B3*GS3SUM
        A56 = B1P*GS4
        A57 = B1P*GS5 + B2P*GS4
        A58 = B1P*GS6 + B2P*GS5 + B3P*GS4
        A59 = B2P*GS6 + B3P*GS5
        A60 = B3P*GS6
        A61 = 2.*S4*GS4*GS4
        A62 = 2.*S4*2.*GS4*GS5
        A63 = 2.*S4*(2.*GS4*GS6 +GS5*GS5)
        A64 = 2.*S4*2.*GS5*GS6
        A65 = 2.*S4*GS6*GS6
C
C     f**2 terms...
         B1 = 2.*C1*S2 +C47
         B2 = 2.*C2*S2 +C48
         B3 = 2.*C3*S2 +C49
         B4 = C4*S2 +2.*C50
         B5 = C5*S2 +2.*C51
        B1P = B1 +2.*GS1SUM*S4
        B2P = B2 +2.*GS2SUM*S4
        B3P = B3 +2.*GS3SUM*S4
        B4P = B4 +GWS1SM*S4
        B5P = B5 +GWS2SM*S4
        A66 = B1*GWS1SM +B4*GS1SUM
        A67 = B2*GWS1SM +B5*GS1SUM +B1*GWS2SM +B4*GS2SUM
        A68 = B2*GWS2SM +B5*GS2SUM +B3*GWS1SM +B4*GS3SUM
        A69 = B3*GWS2SM +B5*GS3SUM
        A70 = B1P*GWS4 + B4P*GS4
        A71 = B2P*GWS4 + B5P*GS4 + B1P*GWS5 + B4P*GS5
        A72 = B2P*GWS5 + B5P*GS5 + B3P*GWS4 + B4P*GS6
        A73 = B3P*GWS5 + B5P*GS6
        A74 = 3.*S4*GS4*GWS4
        A75 = 3.*S4*(GS5*GWS4 +GS4*GWS5)
        A76 = 3.*S4*(GS5*GWS5 +GS6*GWS4)
        A77 = 3.*S4*GS6*GWS5
C
C    f-terms...
         B4 = C4*S2 +C50
         B5 = C5*S2 +C51
        B4P = B4 +S4*GWS1SM
        B5P = B5 +S4*GWS2SM
        A78 = B4*GWS1SM
        A79 = B4*GWS2SM +B5*GWS1SM
        A80 = B5*GWS2SM
        A81 = B4P*GWS4
        A82 = B4P*GWS5 +B5P*GWS4
        A83 = B5P*GWS5
        A84 = S4*GWS4*GWS4
        A85 = 2.*S4*GWS4*GWS5
        A86 = S4*GWS5*GWS5
C
      ENDIF
C
C  a-equation..
C
C   f**3 terms:
      A25 = C2*C42 +C32
      A26 = 2.*C3*C42 +C2*C43 +2.*C33
      A27 = C2*C44 +2.*C3*C43 +3.*C34
      A28 = 2.*C3*C44 +4.*C35
C
C   f**2 terms:
      A29 = C2*C45 +C5*C42 +C37
      A30 = 2.*C3*C45 +C2*C46 +C5*C43 +2.*C38
      A31 = 2.*C3*C46 +C5*C44 +3.*C39
C
C   f**1 terms:
      A32 = C7 +C17 +C5*C45
      A33 = 2.*C8 +2.*C18 +C5*C46
      A34 = C20
      A35 = 2.*C21
      A36 = C10 +C23
      A37 = 2.*C11 +2.*C24
C
C   f**0 terms:
      A38 = C13 +C26
      A39 = C28
      A40 = C15 + C30
C
      IF (STIFL2.GT.0.) THEN
C
C  FOLLOWING ARE TRANSVERSE STIFFENER TERMS IN THE a-EQUATION...
C    f**3 terms...
        B2 = S2*C2
        B3 = 2.*S2*C3
       A87 = B2*GS1SUM + C47*GS2SUM
       A88 = B2*GS2SUM +2.*C47*GS3SUM + B3*GS1SUM + C48*GS2SUM
       A89 = B2*GS3SUM +B3*GS2SUM +2.*C48*GS3SUM + C49*GS2SUM
       A90 = B3*GS3SUM +2.*C49*GS3SUM
       A91 = B2*GS4 +C47*GS5 +S4*GS4*GS2SUM
       A92 = B2*GS5 +2.*C47*GS6 +B3*GS4 +C48*GS5 +2.*S4*GS4*GS3SUM
     1      +S4*GS5*GS2SUM
       A93 = B2*GS6 +B3*GS5 +2.*C48*GS6 +C49*GS5 +2.*S4*GS5*GS3SUM
     1      +S4*GS6*GS2SUM
       A94 = B3*GS6 +2.*C49*GS6 +2.*S4*GS6*GS3SUM
       A95 = S4*GS4*GS5
       A96 = S4*(GS5*GS5 + 2.*GS4*GS6)
       A97 = S4*3.*GS5*GS6
       A98 = S4*2.*GS6*GS6
C
C    f**2 terms...
        B5 = S2*C5
       A99 = B2*GWS1SM +B5*GS1SUM +C47*GWS2SM + C50*GS2SUM
       A100= B3*GWS1SM +B2*GWS2SM +B5*GS2SUM +C48*GWS2SM
     1      +2.*C50*GS3SUM +C51*GS2SUM
       A101= B3*GWS2SM +B5*GS3SUM +C49*GWS2SM +2.*C51*GS3SUM
       A102= B2*GWS4 +B5*GS4 +C47*GWS5 +C50*GS5
     1      +S4*(GS4*GWS2SM+GWS4*GS2SUM)
       A103= B3*GWS4 +B2*GWS5 +B5*GS5 +C48*GWS5 +2.*C50*GS6 +C51*GS5
     1      +S4*(GS5*GWS2SM +2.*GWS4*GS3SUM + GWS5*GS2SUM)
       A104= B3*GWS5 +B5*GS6 +C49*GWS5 +2.*C51*GS6
     1      +S4*(GS6*GWS2SM +2.*GWS5*GS3SUM)
       A105= S4*(GS4*GWS5 +GWS4*GS5)
       A106= 2.*S4*(GS5*GWS5 + GWS4*GS6)
       A107= 2.*S4*GS6*GWS5
C
C    f-terms...
       A108= B5*GWS1SM +C50*GWS2SM
       A109= B5*GWS2SM +C51*GWS2SM
       A110= B5*GWS4 +C50*GWS5 +S4*GWS4*GWS2SM
       A111= B5*GWS5 +C51*GWS5 +S4*GWS5*GWS2SM
       A112= S4*GWS4*GWS5
       A113= S4*GWS5*GWS5
C
      ENDIF
C  m-equation..
C
C   f**1 terms:
      A41 = C19
      A42 = C20
      A43 = C21
      A44 = 2.*C9 +2.*C22
      A45 = 2.*C10 +2.*C23
      A46 = 2.*C11 +2.*C24
C
C   f**0 terms:
      A47 = C27
      A48 = C28
      A49 = 2.*C14 +2.*C29
      A50 = 2.*C15 +2.*C30
C
      IF (STIFL2.GT.0.) THEN
C
C  FOLLOWING ARE TRANSVERSE STIFFENER TERMS IN THE m-EQUATION...
C    f**3 terms...
C
       A114 = 2.*C47*GS4
       A115 = 2.*(C48*GS4 +C47*GS5)
       A116 = 2.*(C49*GS4 +C48*GS5 +C47*GS6)
       A117 = 2.*(C48*GS6 +C49*GS5)
       A118 = 2.*C49*GS6
       A119 = 2.*S4*GS4*GS4
       A120 = 4.*S4*GS4*GS5
       A121 = 2.*S4*(GS5*GS5 +2.*GS4*GS6)
       A122 = 4.*S4*GS5*GS6
       A123 = 2.*S4*GS6*GS6
       A124 = 2.*(C50*GS4 +C47*GWS4)
       A125 = 2.*(C50*GS5 +C51*GS4 +C47*GWS5 +C48*GWS4)
       A126 = 2.*(C51*GS5 +C50*GS6 +C48*GWS5 +C49*GWS4)
       A127 = 2.*(C51*GS6 +C49*GWS5)
       A128 = 4.*S4*GS4*GWS4
       A129 = 4.*S4*(GS5*GWS4 +GS4*GWS5)
       A130 = 4.*S4*(GS6*GWS4 +GS5*GWS5)
       A131 = 4.*S4*GS6*GWS5
       A132 = 2.*C50*GWS4
       A133 = 2.*(C51*GWS4 +C50*GWS5)
       A134 = 2.*C51*GWS5
       A135 = 2.*S4*GWS4*GWS4
       A136 = 4.*S4*GWS4*GWS5
       A137 = 2.*S4*GWS5*GWS5
      ENDIF
C
C     WRITE(8,*)' A1,A2,A3   =',A1,A2,A3
C     WRITE(8,*)' A4,A5,A6   =',A4,A5,A6
C     WRITE(8,*)' A7,A8,A9   =',A7,A8,A9
C     WRITE(8,*)' A10,A11,A12=',A10,A11,A12
C     WRITE(8,*)' A13,A14,A15=',A13,A14,A15
C     WRITE(8,*)' A16,A17,A18=',A16,A17,A18
C     WRITE(8,*)' A19,A20,A21=',A19,A20,A21
C     WRITE(8,*)' A22,A23,A24=',A22,A23,A24
C     WRITE(8,*)' A25,A26,A27=',A25,A26,A27
C     WRITE(8,*)' A28,A29,A30=',A28,A29,A30
C     WRITE(8,*)' A31,A32,A33=',A31,A32,A33
C     WRITE(8,*)' A34,A35,A36=',A34,A35,A36
C     WRITE(8,*)' A37,A38,A39=',A37,A38,A39
C     WRITE(8,*)' A40,A41,A42=',A40,A41,A42
C     WRITE(8,*)' A43,A44,A45=',A43,A44,A45
C     WRITE(8,*)' A46,A47,A48=',A46,A47,A48
C     WRITE(8,*)' A49,A50    =',A49,A50
C
      RETURN
      END
C
C
C
C=DECK      GETBK
      SUBROUTINE GETBK(N,F,A,M,C,RHS,F0,DF,CX,ISTRAT,NOCONV,IRETRN,
     1                 FSAVE,IIIA)
C
C  PURPOSE IS TO GET B'S AND DERIVATIVES OF B'S IN TERMS OF A'S AND THE
C  UNKNOWN PARAMETER A (POST-LOCAL BUCKLING MODAL "FLATTENING" PARAMETER)
C  ALSO, GET  3 X 3 STIFFNESS MATRIX C AND THE RIGHT-HAND-SIDE RHS FOR
C  EACH NEWTON ITERATE.
C
      DOUBLE PRECISION C,RHS
C
      COMMON/UW5/A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15
      COMMON/UW6/A16,A17,A18,A19,A20,A21,A22,A23,A24,A25,A26,A27
      COMMON/UW7/A28,A29,A30,A31,A32,A33,A34,A35,A36,A37,A38,A39
      COMMON/UW8/A40,A41,A42,A43,A44,A45,A46,A47,A48,A49,A50
      COMMON/UW12/STIFL2,S2,S3,S4,C47,C48,C49,C50,C51,CS22
      COMMON/UW13/A51,A52,A53,A54,A55,A56,A57,A58,A59,A60,A61,A62
      COMMON/UW14/A63,A64,A65,A66,A67,A68,A69,A70,A71,A72,A73,A74
      COMMON/UW15/A75,A76,A77,A78,A79,A80,A81,A82,A83,A84,A85,A86
      COMMON/UW16/A87,A88,A89,A90,A91,A92,A93,A94,A95,A96,A97,A98
      COMMON/UW17/A99,A100,A101,A102,A103,A104,A105,A106,A107,A108
      COMMON/UW18/A109,A110,A111,A112,A113,A114,A115,A116,A117,A118
      COMMON/UW19/A120,A121,A122,A123,A124,A125,A126,A127,A128,A129
      COMMON/UW20/A130,A131,A132,A133,A134,A135,A136,A137,A119,A139
C BEG NOV 1995
      COMMON/KCOEF/G(140,6)
C END NOV 1995
C BEG JUN 1996
      COMMON/PSANDW/FACSKN,FACBAS,FACWEB,FACFLG
      COMMON/XFOUND/EFOUND,HXSIDE,WFOUND(4,2),HEXSID(4,2)
C END JUN 1996
C BEG MAY 1997
      COMMON/IZSTIX/IZSTIF(2)
C END MAY 1997
      COMMON/GEOM3/ISTIF(2),NLAYER(4,2),NNSEG(2),INTEXT(2)  
      COMMON/GEOM6/IFAY(2),IMISCL(28)
      COMMON/SEGSLP/MSLOPE(8)
      REAL MSLOPE
C
      DIMENSION D11(4),D12(4),D22(4),D11M(4),D12M(4),D22M(4)
      DIMENSION D11MM(4),D12MM(4),D22MM(4),CTAN(3,3)
      DIMENSION CX(6,6,5)
      DIMENSION C(3,3),RHS(3),DF(3)
      REAL M,MM,MMM,MMMM,N,N2,N3,N4,NUM,NUMM,NUMA
C
C BEG MAY 1997
      GZSTIF = 1.
      IF (IZSTIF(1).EQ.1) GZSTIF = 0.
C END MAY 1997
      ISKIN2 = 2
      IF (ISTIF(1).EQ.5) ISKIN2 = 3
      ID = ISKIN2
      IF (IFAY(1).EQ.1) ID = 1
      N2 = N*N
      N3 = 3.*N
      N4 = 4.*N
      AA = A**2
      AAA= A**3
      AAAA=A**4
C
C f-equation..
C
C   f**3 term:
      B1  = A1 + A*A2 +  AA*A3 +  AAA*A4 +  A**4*A5
      B1A =        A2 +2.*A*A3 +3.*AA*A4 +4.*AAA*A5
C   f**2 term:
      B2  = A6 + A*A7 +  AA*A8 +  AAA*A9
      B2A =        A7 +2.*A*A8 +3.*AA*A9
C   f**1 terms:
      B3  = A10 +A*A11 + AA*A12
      B3A =        A11+2.*A*A12
      B4  = A13 +A*A14 + AA*A15
      B4A =        A14+2.*A*A15
      B5  = A16 +A*A17 + AA*A18
      B5A =        A17+2.*A*A18
C   f**0 terms:
      B6  = A19 +A*A20
      B6A =        A20
      B7  = A21 +A*A22
      B7A =        A22
      B8  = A23 +A*A24
      B8A =        A24
C
      IF (STIFL2.GT.0.) THEN
         B18 = A51 +A*A52 +AA*A53 +AAA*A54 +AAAA*A55
         B19 = A56 +A*A57 +AA*A58 +AAA*A59 +AAAA*A60
         B20 = A61 +A*A62 +AA*A63 +AAA*A64 +AAAA*A65
         B21 = A66 +A*A67 +AA*A68 +AAA*A69
         B22 = A70 +A*A71 +AA*A72 +AAA*A73
         B23 = A74 +A*A75 +AA*A76 +AAA*A77
         B24 = A78 +A*A79 +AA*A80
         B25 = A81 +A*A82 +AA*A83
         B26 = A84 +A*A85 +AA*A86
         B18A = A52 +2.*A*A53 +3.*AA*A54 +4.*AAA*A55
         B19A = A57 +2.*A*A58 +3.*AA*A59 +4.*AAA*A60
         B20A = A62 +2.*A*A63 +3.*AA*A64 +4.*AAA*A65
         B21A = A67 +2.*A*A68 +3.*AA*A69
         B22A = A71 +2.*A*A72 +3.*AA*A73
         B23A = A75 +2.*A*A76 +3.*AA*A77
         B24A = A79 +2.*A*A80
         B25A = A82 +2.*A*A83
         B26A = A85 +2.*A*A86
      ENDIF
C
C  a-equation..
C
C   f**3 term:
        B9  = A25 +A*A26 + AA*A27 +  AAA*A28
        B9A =        A26+2.*A*A27 +3.*AA*A28
C   f**2 term:
        B10 = A29 +A*A30 + AA*A31
        B10A=        A30+2.*A*A31
C   f**1 terms:
        B11 = A32 +A*A33
        B11A=        A33
        B12 = A34 +A*A35
        B12A=        A35
        B13 = A36 +A*A37
        B13A=        A37
C
        IF (STIFL2.GT.0.) THEN
           B27 = A87 +A*A88 +AA*A89 +AAA*A90
           B28 = A91 +A*A92 +AA*A93 +AAA*A94
           B29 = A95 +A*A96 +AA*A97 +AAA*A98
           B30 = A99 +A*A100+AA*A101
           B31 = A102+A*A103+AA*A104
           B32 = A105+A*A106+AA*A107
           B33 = A108+A*A109
           B34 = A110+A*A111
           B35 = A112+A*A113
           B27A = A88 +2.*A*A89 +3.*AA*A90
           B28A = A92 +2.*A*A93 +3.*AA*A94
           B29A = A96 +2.*A*A97 +3.*AA*A98
           B30A = A100+2.*A*A101
           B31A = A103+2.*A*A104
           B32A = A106+2.*A*A107
           B33A = A109
           B34A = A111
           B35A = A113
         ENDIF
C
C  m-equation..
C
C   f**1 terms:
        B14 = A41 +A*A42 + AA*A43
        B14A=        A42+2.*A*A43
        B15 = A44 +A*A45 + AA*A46
        B15A=        A45+2.*A*A46
C   f**0 terms:
        B16 = A47 +A*A48
        B16A=        A48
        B17 = A49 +A*A50
        B17A=        A50
C
        IF (STIFL2.GT.0.) THEN
           B36 = A114 + A*A115 +AA*A116 +AAA*A117 +AAAA*A118
           B37 = A119 + A*A120 +AA*A121 +AAA*A122 +AAAA*A123
           B38 = A124 + A*A125 +AA*A126 +AAA*A127
           B39 = A128 + A*A129 +AA*A130 +AAA*A131
           B40 = A132 + A*A133 +AA*A134
           B41 = A135 + A*A136 +AA*A137
           B36A = A115 +2.*A*A116 +3.*AA*A117 +4.*AAA*A118
           B37A = A120 +2.*A*A121 +3.*AA*A122 +4.*AAA*A123
           B38A = A125 +2.*A*A126 +3.*AA*A127
           B39A = A129 +2.*A*A130 +3.*AA*A131
           B40A = A133 +2.*A*A134
           B41A = A136 +2.*A*A137
         ENDIF
C
C     WRITE(8,*)' B1,B2,B3   =',B1,B2,B3
C     WRITE(8,*)' B4,B5,B6   =',B4,B5,B6
C     WRITE(8,*)' B7,B8,B9   =',B7,B8,B9
C     WRITE(8,*)' B10,B11,B12=',B10,B11,B12
C     WRITE(8,*)' B13,B14,B15=',B13,B14,B15
C     WRITE(8,*)' B16,B17,B18=',B16,B17,B18
C     WRITE(8,*)' B19,B20,B21=',B19,B20,B21
C     WRITE(8,*)' B22,B23,B24=',B22,B23,B24
C     WRITE(8,*)' B25,B26,B27=',B25,B26,B27
C     WRITE(8,*)' B28,B29,B30=',B28,B29,B30
C     WRITE(8,*)' B31,B32,B33=',B31,B32,B33
C     WRITE(8,*)' B34,B35,B36=',B34,B35,B36
C     WRITE(8,*)' B37,B38,B39=',B37,B38,B39
C     WRITE(8,*)' B40,B41    =',B40,B41
C
C  Bending energy in skin....
C
      CALL SKNBND(CX(1,1,1),M,D11(1),  D12(1),  D22(1),
     1                        D11M(1), D12M(1), D22M(1),
     1                        D11MM(1),D12MM(1),D22MM(1),MSLOPE(1))
C
      CALL SKNBND(CX(1,1,ID),M,D11(2),  D12(2),  D22(2),
     1                        D11M(2), D12M(2), D22M(2),
     1                        D11MM(2),D12MM(2),D22MM(2),MSLOPE(ID))
C
      IF (ISTIF(1).EQ.5) THEN
         CALL SKNBND(CX(1,1,2),M,D11(3),  D12(3),  D22(3),
     1                         D11M(3), D12M(3), D22M(3),
     1                         D11MM(3),D12MM(3),D22MM(3),MSLOPE(2))
C
         CALL SKNBND(CX(1,1,2),M,D11(4),  D12(4),  D22(4),
     1                         D11M(4), D12M(4), D22M(4),
     1                         D11MM(4),D12MM(4),D22MM(4),MSLOPE(4))
      ENDIF
C
C BEG MAY 1997
      G181 = 4.*(  D11(1)*G(1,1) + GZSTIF*D11(2)*G(1,ISKIN2))
      G182 =    (  D12(1)*G(7,1) + GZSTIF*D12(2)*G(7,ISKIN2))
     1         +(  D22(1)*G(4,1) + GZSTIF*D22(2)*G(4,ISKIN2))
      G183 = 0.25*(CX(5,5,1)*G(18,1) +GZSTIF*CX(5,5,ID)*G(18,ISKIN2))
      G18 = N2*G181 + N*G182 + G183
C BEG JUN 1996 (ADD ELASTIC FOUNDATION EFFECT)
     1      +0.25*(FACSKN*WFOUND(1,1)*G(1,1)
     1            +GZSTIF*FACBAS*WFOUND(ISKIN2,1)*G(1,ISKIN2))
C END JUN 1996
C
      G181M  = 4.*( D11M(1)*G(1,1) + GZSTIF*D11M(2)*G(1,ISKIN2))
      G182M  =    ( D12M(1)*G(7,1) + GZSTIF*D12M(2)*G(7,ISKIN2))
     1           +( D22M(1)*G(4,1) + GZSTIF*D22M(2)*G(4,ISKIN2))
      G18M   = N2*G181M + N*G182M
C
      G181MM= 4.*(D11MM(1)*G(1,1) + GZSTIF*D11MM(2)*G(1,ISKIN2))
      G182MM=    (D12MM(1)*G(7,1) + GZSTIF*D12MM(2)*G(7,ISKIN2))
     1          +(D22MM(1)*G(4,1) + GZSTIF*D22MM(2)*G(4,ISKIN2))
C END MAY 1997
      G18MM = N2*G181MM + N*G182MM
      IF (ISTIF(1).NE.4) THEN
         C1 = 4.
         C2 = 6.
         C3 = 3.
         C4 = 6.
         C5 = 6.
         C6 = 9.
      ELSE
         C1 = 3.
         C2 = 2.
         C3 = 2.
         C4 = 2.
         C5 = 4.
         C6 = 4.
      ENDIF
C BEG MAY 1997
      G191 = 8.*(  D11(1)*G(2,1) +  GZSTIF*D11(2)*G(2,ISKIN2))
      G192 = (  D12(1)*(C1*G(16,1)+C2*G(5,1))
     1         +GZSTIF*D12(2)*(C1*G(16,ISKIN2)+C2*G(5,ISKIN2)))
     1   +C5*(  D22(1)*G(5,1) +  GZSTIF*D22(2)*G(5,ISKIN2))
      G193 = 0.25*(CX(5,5,1)*G(19,1) +GZSTIF*CX(5,5,ID)*G(19,ISKIN2))
      G19 = N2*G191 + N*G192 + G193
C BEG JUN 1996 (ADD ELASTIC FOUNDATION EFFECT)
     1      +0.50*(FACSKN*WFOUND(1,1)*G(2,1)
     1            +GZSTIF*FACBAS*WFOUND(ISKIN2,1)*G(2,ISKIN2))
C END JUN 1996
C
      G191M  = 8.*( D11M(1)*G(2,1) + GZSTIF*D11M(2)*G(2,ISKIN2))
      G192M  =    ( D12M(1)*(C1*G(16,1)+C2*G(5,1))
     1             +GZSTIF*D12M(2)*(C1*G(16,ISKIN2)+C2*G(5,ISKIN2)))
     1        +C5*( D22M(1)*G(5,1) + GZSTIF*D22M(2)*G(5,ISKIN2))
      G19M = N2*G191M + N*G192M
C
      G191MM  = 8.*( D11MM(1)*G(2,1) + GZSTIF*D11MM(2)*G(2,ISKIN2))
      G192MM  =    ( D12MM(1)*(C1*G(16,1)+C2*G(5,1))
     1             +GZSTIF*D12MM(2)*(C1*G(16,ISKIN2)+C2*G(5,ISKIN2)))
     1        +C5*( D22MM(1)*G(5,1) + GZSTIF*D22MM(2)*G(5,ISKIN2))
      G19MM = N2*G191MM + N*G192MM
C
      G201 = 4.*(  D11(1)*G(3,1) +  GZSTIF*D11(2)*G(3,ISKIN2))
      G202 = (  D12(1)*(C3*G(17,1)+C4*G(6,1))
     1         +GZSTIF*D12(2)*(C3*G(17,ISKIN2)+C4*G(6,ISKIN2)))
     1   +C6*(  D22(1)*G(6,1) +  GZSTIF*D22(2)*G(6,ISKIN2))
      G203 = 0.25*(CX(5,5,1)*G(20,1) +GZSTIF*CX(5,5,ID)*G(20,ISKIN2))
      G20 = N2*G201 + N*G202 + G203
C BEG JUN 1996 (ADD ELASTIC FOUNDATION EFFECT)
     1      +0.25*(FACSKN*WFOUND(1,1)*G(3,1)
     1            +GZSTIF*FACBAS*WFOUND(ISKIN2,1)*G(3,ISKIN2))
C END JUN 1996
C
      G201M  = 4.*( D11M(1)*G(3,1) + GZSTIF*D11M(2)*G(3,ISKIN2))
      G202M  =    ( D12M(1)*(C3*G(17,1)+C4*G(6,1))
     1             +GZSTIF*D12M(2)*(C3*G(17,ISKIN2)+C4*G(6,ISKIN2)))
     1        +C6*( D22M(1)*G(6,1) + GZSTIF*D22M(2)*G(6,ISKIN2))
      G20M = N2*G201M + N*G202M
C
      G201MM  = 4.*( D11MM(1)*G(3,1) + GZSTIF*D11MM(2)*G(3,ISKIN2))
      G202MM  =    ( D12MM(1)*(C3*G(17,1)+C4*G(6,1))
     1             +GZSTIF*D12MM(2)*(C3*G(17,ISKIN2)+C4*G(6,ISKIN2)))
     1        +C6*( D22MM(1)*G(6,1) + GZSTIF*D22MM(2)*G(6,ISKIN2))
C END MAY 1997
      G20MM = N2*G201MM + N*G202MM
C
      IF (ISTIF(1).EQ.5) THEN
         G18=G18  + 4.*N2*(  D11(3)*G(1,2) +   D11(4)*G(1,4))
     1            +N *(  D12(3)*G(7,2) +   D12(4)*G(7,4))
     1            +N *(  D22(3)*G(4,2) +   D22(4)*G(4,4))
     1          +0.25*(CX(5,5,2)*G(18,2) + CX(5,5,2)*G(18,4))
C BEG JUN 1996 (ADD ELASTIC FOUNDATION EFFECT)
     1          +0.25*(FACWEB*WFOUND(2,1)*G(1,2)
     1                +FACWEB*WFOUND(2,1)*G(1,4))
C END JUN 1996
C
         G18M=G18M+ 4.*N2*( D11M(3)*G(1,2) +  D11M(4)*G(1,4))
     1            +N *( D12M(3)*G(7,2) +  D12M(4)*G(7,4))
     1            +N *( D22M(3)*G(4,2) +  D22M(4)*G(4,4))
C
         G18MM=G18MM+4.*N2*(D11MM(3)*G(1,2) + D11MM(4)*G(1,4))
     1            +N *(D12MM(3)*G(7,2) + D12MM(4)*G(7,4))
     1            +N *(D22MM(3)*G(4,2) + D22MM(4)*G(4,4))
C
         G19=G19 +8.*N2*(  D11(3)*G(2,2) +  D11(4)*G(2,4))
     1    +N4*(  D12(3)*(G(16,2)+1.5*G(5,2))
     1                       +  D12(4)*(G(16,4)+1.5*G(5,4)))
     1          +6.*N *(  D22(3)*G(5,2) +  D22(4)*G(5,4))
     1          +0.25*(CX(5,5,2)*G(19,2) + CX(5,5,2)*G(19,4))
C BEG JUN 1996 (ADD ELASTIC FOUNDATION EFFECT)
     1          +0.50*(FACWEB*WFOUND(2,1)*G(2,2)
     1                +FACWEB*WFOUND(2,1)*G(2,4))
C END JUN 1996
C
         G19M=G19M+8.*N2*( D11M(3)*G(2,2) + D11M(4)*G(2,4))
     1    +N4*( D12M(3)*(G(16,2)+1.5*G(5,2))
     1                       + D12M(4)*(G(16,4)+1.5*G(5,4)))
     1          +6.*N *( D22M(3)*G(5,2) + D22M(4)*G(5,4))
C
         G19MM=G19MM+8.*N2*(D11MM(3)*G(2,2) +D11MM(4)*G(2,4))
     1    +N4*(D12MM(3)*(G(16,2)+1.5*G(5,2))
     1                       +D12MM(4)*(G(16,4)+1.5*G(5,4)))
     1          +6.*N *(D22MM(3)*G(5,2) +D22MM(4)*G(5,4))
C
         G20 = G20 +4.*N2*(  D11(3)*G(3,2) +  D11(4)*G(3,4))
     1    +N3*(  D12(3)*(G(17,2)+2.0*G(6,2))
     1                       + D12(4)*(G(17,4)+2.0*G(6,4)))
     1          +9.*N *(  D22(3)*G(6,2) +  D22(4)*G(6,4))
     1          +0.25*(CX(5,5,2)*G(20,2) + CX(5,5,2)*G(20,4))
C BEG JUN 1996 (ADD ELASTIC FOUNDATION EFFECT)
     1          +0.25*(FACWEB*WFOUND(2,1)*G(3,2)
     1                +FACWEB*WFOUND(2,1)*G(3,4))
C END JUN 1996
C
         G20M=G20M+4.*N2*( D11M(3)*G(3,2) + D11M(4)*G(3,4))
     1    +N3*( D12M(3)*(G(17,2)+2.0*G(6,2))
     1                       + D12M(4)*(G(17,4)+2.0*G(6,4)))
     1          +9.*N *( D22M(3)*G(6,2) + D22M(4)*G(6,4))
C
         G20MM=G20MM+4.*N2*(D11MM(3)*G(3,2) +D11MM(4)*G(3,4))
     1    +N3*(D12MM(3)*(G(17,2)+2.0*G(6,2))
     1                       + D12MM(4)*(G(17,4)+2.0*G(6,4)))
     1          +9.*N *(D22MM(3)*G(6,2) +D22MM(4)*G(6,4))
      ENDIF
C
      SBPB   =   G18 + A*  G19 +   AA*  G20
      SBPBM  =  G18M + A* G19M +   AA* G20M
      SBPBMM = G18MM + A*G19MM +   AA*G20MM
C
      SBPBA  =           G19   +2.*A* G20
      SBPBAA =                  2.*   G20
      SBPBMA =           G19M  +2.*A* G20M
C
      IF (ISTRAT.EQ.0) GO TO 100
C
C  Stiffness matrix terms and right-hand-side for f-equation...
C
      FF = F**2
      FFF= F**3
      MM = M**2
      MMM= M**3
      MMMM=M**4
      DK11 = 0.
      DK12 = 0.
      DK13 = 0.
      DK21 = 0.
      DK22 = 0.
      DK23 = 0.
      DK31 = 0.
      DK32 = 0.
      DK33 = 0.
      DRHS1= 0.
      DRHS2= 0.
      DRHS3= 0.
      IF (STIFL2.GT.0.) THEN
         BM1 = B18 +MM*B19 +MMMM*B20
         BM2 = B21 +MM*B22 +MMMM*B23
         BM3 = B24 +MM*B25 +MMMM*B26
         DK11 = 3.*FF*BM1 +2.*F*BM2 + BM3
         DK12 = FFF*(B18A +MM*B19A +MMMM*B20A)
     1          +FF*(B21A +MM*B22A +MMMM*B23A)
     1          + F*(B24A +MM*B25A +MMMM*B26A)
         DK13 = FFF*(2.*M*B19 + 4.*MMM*B20)
     1          +FF*(2.*M*B22 + 4.*MMM*B23)
     1          + F*(2.*M*B25 + 4.*MMM*B26)
         DRHS1= -(FFF*BM1 + FF*BM2 + F*BM3)
      ENDIF
C
      C(1,1) = 3.*FF*B1 +2.*F*B2 + B3 + M*B4 + MM*B5 + 2.*SBPB
     1        +DK11
      C(1,2) = FFF*B1A +FF*B2A +F*(B3A +M*B4A +MM*B5A +2.*SBPBA)
     1        + A20 + M*A22 + MM*A24
     1        +DK12
      C(1,3) = F*(B4 +2.*M*B5 +2.*SBPBM) + B7 + 2.*M*B8
     1        +DK13
      RHS(1) = -(FFF*B1 +FF*B2 +F*(B3 +M*B4 +MM*B5 + 2.*SBPB)
     1           +B6 + M*B7 + MM*B8)
     1        +DRHS1
C
      IF (NOCONV.EQ.2.OR.(IIIA.EQ.1.AND.NOCONV.EQ.1)) THEN
C
C  This branch is for the case with both M and A fixed (m=m0, a = 0)
C  only the f-equation is active.
C
         DF(1) = RHS(1)/C(1,1)
         DF(2) = 0.
         DF(3) = 0.
         RETURN
      ENDIF
C
      IF (IIIA.EQ.0.AND.NOCONV.NE.2.AND.NOCONV.NE.4) THEN
C
C  Stiffness matrix terms and right-hand-side for a-equation...
C
         IF (STIFL2.GT.0.) THEN
            BM1 = B27 +MM*B28 +MMMM*B29
            BM2 = B30 +MM*B31 +MMMM*B32
            BM3 = B33 +MM*B34 +MMMM*B35
            DK21 = 3.*FF*BM1 +2.*F*BM2 + BM3
            DK22 = FFF*(B27A +MM*B28A +MMMM*B29A)
     1             +FF*(B30A +MM*B31A +MMMM*B32A)
     1             + F*(B33A +MM*B34A +MMMM*B35A)
            DK23 = FFF*(2.*M*B28 + 4.*MMM*B29)
     1             +FF*(2.*M*B31 + 4.*MMM*B32)
     1             + F*(2.*M*B34 + 4.*MMM*B35)
            DRHS2= -(FFF*BM1 + FF*BM2 + F*BM3)
         ENDIF
         C(2,1) = 3.*FF*B9 +2.*F*B10 + B11 + M*B12 + MM*B13  +SBPBA
     1           +DK21
         C(2,2)=FFF*B9A +FF*B10A +F*(B11A +M*B12A +MM*B13A +SBPBAA)
     1           +DK22
         C(2,3) = F*(B12 +2.*M*B13 +SBPBMA) +A39 + 2.*M*A40
     1           +DK23
         RHS(2) = -(FFF*B9 +FF*B10 +F*(B11 +M*B12 +MM*B13 +SBPBA)
     1                +A38 + M*A39 + MM*A40)
     1           +DRHS2
      ENDIF
C
C  Stiffness matrix terms and right-hand-side for m-equation..
C
      IF (NOCONV.NE.1.AND.NOCONV.NE.2) THEN
         IF (STIFL2.GT.0.) THEN
            BM1 = M*B36 +MMM*B37
            BM2 = M*B38 +MMM*B39
            BM3 = M*B40 +MMM*B41
            DK31 = 3.*FF*BM1 +2.*F*BM2 + BM3
            DK32 = FFF*(M*B36A +MMM*B37A)
     1             +FF*(M*B38A +MMM*B39A)
     1             + F*(M*B40A +MMM*B41A)
            DK33 = FFF*(B36 +3.*MM*B37)
     1             +FF*(B38 +3.*MM*B39)
     1             + F*(B40 +3.*MM*B41)
            DRHS3= -(FFF*BM1 + FF*BM2 + F*BM3)
         ENDIF
        C(3,1) = B14 + M*B15 + SBPBM
     1          +DK31
        C(3,2) = F*(B14A +M*B15A +SBPBMA) +A48 + M*A50
     1          +DK32
        C(3,3) = F*(B15 +SBPBMM) + B17
     1          +DK33
        RHS(3) = -(F*(B14 +M*B15 +SBPBM) + B16 + M*B17)
     1          +DRHS3
      ENDIF
C
      IF (IIIA.EQ.0.AND.NOCONV.EQ.1) THEN
C
C  THIS BRANCH IS FOR M=M0 OPTION, WHICH IS PERSUED IF THE PREVIOUS
C  ITERATIONS CONVERGED TO A NEGATIVE BUCKLING AMPLITUDE OR IF THERE
C  WAS NO CONVERGENCE OF THE PREVIOUS SET OF ITERATIONS.
C
         DET = C(1,1)*C(2,2) - C(1,2)*C(2,1)
         IF (DET.NE.0.) THEN
           DF(1) = (RHS(1)*C(2,2) - RHS(2)*C(1,2))/DET
           DF(2) = (RHS(2)*C(1,1) - RHS(1)*C(2,1))/DET
         ELSE
           DF(1) = RHS(1)/C(1,1)
           DF(2) = 0.
         ENDIF
         DF(3) = 0.
         RETURN
      ENDIF
      IF (IIIA.EQ.1.OR.NOCONV.EQ.4) THEN
C
C  THIS BRANCH IS FOR A=0 OPTION, WHICH IS PERSUED IF THE PREVIOUS
C  ITERATIONS CONVERGED TO A NEGATIVE BUCKLING AMPLITUDE OR IF THERE
C  WAS NO CONVERGENCE OF THE PREVIOUS SET OF ITERATIONS OR IF THE
C  INITIAL TRY AT A SOLUTION LED TO AN IMAGINARY SOLUTION.
C
         DET = C(1,1)*C(3,3) - C(1,3)*C(3,1)
         IF (DET.NE.0.) THEN
            DF(1) = (RHS(1)*C(3,3) - RHS(3)*C(1,3))/DET
            DF(3) = (RHS(3)*C(1,1) - RHS(1)*C(3,1))/DET
         ELSE
            DF(1) = RHS(1)/C(1,1)
            DF(3) = 0.
         ENDIF
         DF(2) = 0.
         RETURN
      ENDIF
C
      RETURN
C
  100 CONTINUE
C
C  FOLLOW THIS STRATEGY FOR CASES IN WHICH THE LOAD IS GREATER
C  THAN THE BIFURCATION BUCKLING LOAD...
C
      NUM = F0*B2 +B3 +M*B4 +M*M*B5 +2.*SBPB
     1     +(B6 +M*B7 +M*M*B8)/F0
      DEN = B1
      NUMA = F0*B2A +B3A +M*B4A +M*M*B5A +2.*SBPBA
     1     +(B6A +M*B7A +M*M*B8A)/F0
      NUMM = B4 + 2.*M*B5 + 2.*SBPBM +(B7 +2.*M*B8)/F0
      DENA = B1A
      AEQ  = F0*B10 + B11 + M*B12 + M*M*B13 + SBPBA
     1     +(A38 +M*A39 +M*M*A40)/F0
      AEQA = F0*B10A+ B11A+ M*B12A+ M*M*B13A+ SBPBAA
      AEQM = B12 +2.*M*B13 + SBPBMA +(A39 +2.*M*A40)/F0
C
      IF (STIFL2.LE.0.) THEN
         C(1,1) = -NUM*B9A -NUMA*B9 +DEN*AEQA +DENA*AEQ
         C(1,2) = -NUMM*B9 + DEN*AEQM
         C(2,1) = B14A + M*B15A + SBPBMA + (B16A +M*B17A)/F0
         C(2,2) = B15 + SBPBMM + B17/F0
         RHS(1) = NUM*B9 - DEN*AEQ
         RHS(2) = -(B14 +M*B15 +SBPBM +(B16+M*B17)/F0)
      ELSE
         DEN = B1 + B18 + M*M*B19 + M**4*B20
         DENA= B1A+ B18A+ M*M*B19A+ M**4*B20A
         DENM= 2.*M*B19 + 4.*M**3*B20
         BM1 = B9 + B27 + M*M*B28 + M**4*B29
         BM1A= B9A+ B27A+ M*M*B28A+ M**4*B29A
         BM1M= 2.*M*B28 + 4.*M**3*B29
         C(1,1) = -NUM*BM1A -NUMA*BM1 +DEN*AEQA +DENA*AEQ
         C(1,2) = -NUM*BM1M -NUMM*BM1 +DEN*AEQM +DENM*AEQ
         RHS(1) =  NUM*BM1 - DEN*AEQ
         BM2 = M*B36 + M**3*B37
         BM2A= M*B36A+ M**3*B37A
         BM2M=   B36 +3.*M*M*B37
         BM3 = B14  + M*B15  + SBPBM  + (B16  +M*B17 )/F0
         BM3A= B14A + M*B15A + SBPBMA + (B16A +M*B17A)/F0
         BM3M=          B15  + SBPBMM
         C(2,1) = -NUM*BM2A -NUMA*BM2 +DEN*BM3A +DENA*BM3
         C(2,2) = -NUM*BM2M -NUMM*BM2 +DEN*BM3M +DENM*BM3
         RHS(2) =  NUM*BM2 - DEN*BM3
      ENDIF
      DET    = C(1,1)*C(2,2) - C(1,2)*C(2,1)
      DF(2)  = (RHS(1)*C(2,2) - RHS(2)*C(1,2))/DET
      DF(3)  = (RHS(2)*C(1,1) - RHS(1)*C(2,1))/DET
      IF (IIIA.EQ.1) THEN
         DF(2) = 0.
         DF(3) = RHS(2)/C(2,2)
      ENDIF
      FSQ    = -NUM/DEN
      IF (A.EQ.0.) FSAVE = 0.
      IF (FSQ.LT.0.) THEN
         IRETRN = 1      
         F = FSAVE
         RETURN
      ENDIF
      F      = SQRT(FSQ)
      IF (A.EQ.0.) FSAVE = F
      DF(1)  = SQRT(FSQ)*0.5*(DF(2)*(NUMA/NUM -DENA/DEN)
     1                            +DF(3)*NUMM/NUM)
C
C     WRITE(8,*)' M,N,A=',M,N,A
C     WRITE(8,*)' DF(1),DF(2),DF(3)=',DF(1),DF(2),DF(3)
C     WRITE(8,*)' SBPB,SBPBM,SBPBMM  =',SBPB,SBPBM,SBPBMM
C     WRITE(8,*)' SBPBA,SBPBAA,SBPBMA=',SBPBA,SBPBAA,SBPBMA
C     WRITE(8,*)' F0,F=',F0,F
C     WRITE(8,*)' C(1,1),C(1,2)=',C(1,1),C(1,2)
C     WRITE(8,*)' C(2,1),C(2,2)=',C(2,1),C(2,2)
C     WRITE(8,*)' RHS(1),RHS(2)=',RHS(1),RHS(2)
C
C     WRITE(8,*)' B1,B2,B3   =',B1,B2,B3
C     WRITE(8,*)' B4,B5,B6   =',B4,B5,B6
C     WRITE(8,*)' B7,B8,B9   =',B7,B8,B9
C     WRITE(8,*)' B10,B11,B12=',B10,B11,B12
C     WRITE(8,*)' B13,B14,B15=',B13,B14,B15
C     WRITE(8,*)' B16,B17,A38=',B16,B17,A38
C     WRITE(8,*)' A39,A40,A48=',A39,A40,A48
C     WRITE(8,*)' A50        =',A50
C
C     WRITE(8,*)' B1A,B2A,B3A   =',B1A,B2A,B3A
C     WRITE(8,*)' B4A,B5A,B6A   =',B4A,B5A,B6A
C     WRITE(8,*)' B7A,B8A,B9A   =',B7A,B8A,B9A
C     WRITE(8,*)' B10A,B11A,B12A=',B10A,B11A,B12A
C     WRITE(8,*)' B13A,B14A,B15A=',B13A,B14A,B15A
C     WRITE(8,*)' B16A,B17A,A38=',B16A,B17A,A38
C
      RETURN
      END
C
C
C
C=DECK      DETERM
      SUBROUTINE DETERM(C,DETC)
C
C PURPOSE IS TO CALCULATE THE DETERMINANT OF 3 X 3 C MATRIX.
C
      DOUBLE PRECISION C
      DIMENSION C(3,3)
C
      DETC = C(1,1)*(C(2,2)*C(3,3)-C(3,2)*C(2,3))
     1      -C(1,2)*(C(2,1)*C(3,3)-C(3,1)*C(2,3))
     1      +C(1,3)*(C(2,1)*C(3,2)-C(3,1)*C(2,2))
C
      RETURN
      END
C
C
C
C=DECK      SOLVIT
      SUBROUTINE SOLVIT(IFILE,C,F,SOLN)
C
C  PURPOSE IS TO FIND 
C
C                  {SOLN} = inverse[C]*{F}
C
      DOUBLE PRECISION C,F,TEMP
C
      DIMENSION C(3,3),F(3),SOLN(3),TEMP(3,3)
C
      CALL DETERM(C,DETC)
      IF (DETC.EQ.0.) THEN
         WRITE(IFILE,*)' SINGULAR MATRIX.  DETERMINANT(C) = 0.'
         WRITE(IFILE,5) ((C(I,J),F(J),J=1,3),I=1,3)
    5    FORMAT(/' COEFFICIENT MATRIX FOR KOITER THEORY     R.H.S.'/
     1           '               C(I,J)                      F(J)'/
     1     (1P,3E12.4,1PE15.4))
         CALL ERREX
      ENDIF
      DO 10 I = 1,3
         CALL MOVER(C,1,TEMP,1,18)
         TEMP(1,I) = F(1)
         TEMP(2,I) = F(2)
         TEMP(3,I) = F(3)
         CALL DETERM(TEMP,DETT)
         SOLN(I) = DETT/DETC
C
C        DO 5 J = 1,3
C        WRITE(8,*) 'J,C(J,1),C(J,2),C(J,3),F(J)=',
C    1               J,C(J,1),C(J,2),C(J,3),F(J)
C   5    CONTINUE
C        DO 6 J = 1,3
C        WRITE(8,*) 'J,TEMP(J,1),TEMP(J,2),TEMP(J,3),F(J)=',
C    1               J,TEMP(J,1),TEMP(J,2),TEMP(J,3),F(J)
C   6    CONTINUE
   10 CONTINUE
C
      RETURN
      END
C
C
C
C=DECK      ENERGY
      SUBROUTINE ENERGY(NPRT,IFILE,LENGTH,CX,W0,F0,A0,M0,N0,F,A,M,N,
     1                  ICONV,IA,IM,IFX,LABLE)
C
C  PURPOSE IS TO SET UP AND SOLVE A 4 X 4 SYSTEM OF NEWTON-RAPHSON
C  EQUATIONS FOR THE POST-LOCALLY-BUCKLED PANEL. THE UNKOWNS ARE
C  f = amplitude of normal displacement; a = "flattening" parameter;
C  m = slope of buckling nodal lines; n = pi**2*M**2/4L**2, where
C  M is the number of axial halfwaves between rings and L is the
C  distance between rings.
C
C   SEE P 16a and following p. 3 OF YELLOW NOTES (Dated Dec. 1986)
C
      COMMON/UW1/C1,C2,C3,C4,C5,C6,C7,C8,C9,C10,C11,C12,C13,C14,C15
      COMMON/UW2/C16,C17,C18,C19,C20,C21,C22,C23,C24,C25,C26,C27
      COMMON/UW3/C28,C29,C30,C31,C32,C33,C34,C35,C36,C37,C38,C39
      COMMON/UW4/C40,C41,C42,C43,C44,C45,C46
      COMMON/UW9/GS1,GS2,GS3,GWS1,GWS2,GS4,GS5,GS6,GWS4,GWS5
      COMMON/UW12/STIFL2,S2,S3,S4,C47,C48,C49,C50,C51,CS22
      COMMON/UW1N/C1N,C2N,C3N,C4N,C5N,C6N,C7N,C8N,C9N,C10N,C11N,
     1            C12N,C13N,C14N,C15N
      COMMON/UW2N/C16N,C17N,C18N,C19N,C20N,C21N,C22N,C23N,C24N,
     1            C25N,C26N,C27N
      COMMON/UW3N/C28N,C29N,C30N,C31N,C32N,C33N,C34N,C35N,C36N,
     1            C37N,C38N,C39N
      COMMON/UW4N/C40N,C41N,C42N,C43N,C44N,C45N,C46N
      COMMON/UW12N/C47N,C48N,C49N,C50N,C51N
      COMMON/UW1NN/C6NN,C31NN,C32NN,C33NN,C34NN,C35NN,C36NN,
     1             C37NN,C38NN,C39NN
      COMMON/UW9N/GS1F,GS2F,GS3F,GWS1F,GWS2F
      COMMON/UW16N/UST1,UST3,ACOMB2,GS011F,GS012F,GWWF14,GWWF15
      COMMON/UW17N/GWF010,GWF011,GS10F,GS11F,GS12F,GWS10F,GWS11F
      COMMON/UW18N/GS13,GS14,GS15,GS16,GS17,GWS13,GWS14,GWS15,GWS16
      COMMON/UW19N/GS13F,GS14F,GS15F,GS16F,GS17F
      COMMON/UW20N/GWS13F,GWS14F,GWS15F,GWS16F,ACOMB1
      COMMON/PSTST4/FNORIG
      COMMON/UW21N/GS010F,GWWF13,ACOMB6
      COMMON/UWW13/ASUM4,ASUM6,ASUM6P,ASUM7,TSUM6,A6SUM2,A6SM10,
     1             AX11,FF1,KX,N2S,NTXS1,NTXS2,S2BAR,S3BAR,S4BAR,
     1             FNHOOP,STF222,CS222,C12BAR,SSTAR,NUSTAR,C22INV,
     1             C33INV
      COMMON/GEOM3/ISTIF(2),NLAYER(4,2),NSEG(2),INTEXT(2)
C BEG NOV 1995
      COMMON/KCOEF/G(140,6)
C END NOV 1995
C BEG JUN 1996
      COMMON/PSANDW/FACSKN,FACBAS,FACWEB,FACFLG
      COMMON/XFOUND/EFOUND,HXSIDE,WFOUND(4,2),HEXSID(4,2)
C END JUN 1996
C BEG MAY 1997
      COMMON/IZSTIX/IZSTIF(2)
C END MAY 1997
      COMMON/GEOM6/IFAY(2),IMISCL(28)
      COMMON/SEGSLP/MSLOPE(8)
      COMMON/NWAVK2/FACTN1
      DIMENSION RHS(4),C(4,4),SOLN(4),CX(6,6,5)
      DIMENSION DD11(4),DD12(4),DD22(4),DD11M(4),DD12M(4),DD22M(4)
      DIMENSION DD11MM(4),DD12MM(4),DD22MM(4)
      REAL N,M,M2,N2,N0,NN,M0,NN2,MSLOPE,LENGTH,NUSTAR,KX,N2S
      REAL NTXS1,NTXS2
C
C BEG MAY 1997
      GZSTIF = 1.
      IF (IZSTIF(1).EQ.1) GZSTIF = 0.
C END MAY 1997
      F = F0
      IF (IFX.EQ.1) F = 1.0
      A = A0
      M = M0
      N = N0
      DFMAX = MAX(0.01,ABS(0.3*F0))
      DAMAX = MAX(0.01,ABS(0.3*A0))
      DMMAX = 0.2
      DNMAX = ABS(0.3*N0)
      FACT = 2.*LENGTH/3.14159
      ITER = 0
      IF (NPRT.GE.2) THEN
         WRITE(IFILE,5) LABLE
    5    FORMAT(/' NEWTON ITERATIONS BEGIN IN SUBROUTINE ENERGY'/
     1 ' CALLED FROM SUBROUTINE KOIT2 AT LABEL =',I5,'.'/
     1 ' PURPOSE IS TO OBTAIN NEW SOLUTION ALLOWING THE AXIAL'/
     1 ' HALFWAVELENGTH OF THE LOCAL POSTBUCKLED PATTERN TO CHANGE.'//
     1 ' ITER.       UNKNOWNS IN THE LOCAL POSTBUCKLING PROBLEM'/
     1 '  NO.    AMPLITUDE   FLATTENING   NODAL LINE  PI**2*n**2/4L**2    
     1 AXIAL HALFWAVELENGTH'/
     1 '             f            a        SLOPE,  m         N          
     1OF BUCKLES,(L/n)')
         FLP = LENGTH/(FACT*SQRT(N))
         WRITE(IFILE,100) ITER, F, A, M, N, FLP
      ENDIF
      NTEST = 0
C
   10 CONTINUE
      F2 = F*F
      F3 = F2*F
      F4 = F3*F
      M2 = M*M
      A2 = A*A
      A3 = A2*A
      A4 = A3*A
      N2 = N*N
      NN = N/N0
      NN2= NN*NN
C
C  Skin bending strain energy and first and second variations of it:
C
      ID = 2
      IF (IFAY(1).EQ.1) ID = 1
      CALL SKNBND(CX(1,1,1),M,DD11(1),  DD12(1),  DD22(1),
     1                        DD11M(1), DD12M(1), DD22M(1),
     1                        DD11MM(1),DD12MM(1),DD22MM(1),MSLOPE(1))
C
      CALL SKNBND(CX(1,1,ID),M,DD11(2),  DD12(2),  DD22(2),
     1                        DD11M(2), DD12M(2), DD22M(2),
     1                        DD11MM(2),DD12MM(2),DD22MM(2),MSLOPE(ID))
C
C BEG MAY 1997
      G181 = 4.*(  DD11(1)*G(1,1) + GZSTIF*DD11(2)*G(1,2))
      G182 =    (  DD12(1)*G(7,1) + GZSTIF*DD12(2)*G(7,2))
     1         +(  DD22(1)*G(4,1) + GZSTIF*DD22(2)*G(4,2))
      G183 = 0.25*(CX(5,5,1)*G(18,1) + GZSTIF*CX(5,5,ID)*G(18,2))
C
      G181M  = 4.*( DD11M(1)*G(1,1) + GZSTIF*DD11M(2)*G(1,2))
      G182M  =    ( DD12M(1)*G(7,1) + GZSTIF*DD12M(2)*G(7,2))
     1           +( DD22M(1)*G(4,1) + GZSTIF*DD22M(2)*G(4,2))
C
      G181MM= 4.*(DD11MM(1)*G(1,1) + GZSTIF*DD11MM(2)*G(1,2))
      G182MM=    (DD12MM(1)*G(7,1) + GZSTIF*DD12MM(2)*G(7,2))
     1          +(DD22MM(1)*G(4,1) + GZSTIF*DD22MM(2)*G(4,2))
C END MAY 1997
C
      IF (ISTIF(1).NE.4) THEN
         CC1 = 4.
         CC2 = 6.
         CC3 = 3.
         CC4 = 6.
         CC5 = 6.
         CC6 = 9.
      ELSE
         CC1 = 3.
         CC2 = 2.
         CC3 = 2.
         CC4 = 2.
         CC5 = 4.
         CC6 = 4.
      ENDIF
C
C BEG MAY 1997
      G191 = 8.*(  DD11(1)*G(2,1) + GZSTIF*DD11(2)*G(2,2))
      G192 = (  DD12(1)*(CC1*G(16,1)+CC2*G(5,1))
     1         +GZSTIF*DD12(2)*(CC1*G(16,2)+CC2*G(5,2)))
     1   +CC5*(  DD22(1)*G(5,1) + GZSTIF*DD22(2)*G(5,2))
      G193 = 0.25*(CX(5,5,1)*G(19,1) + GZSTIF*CX(5,5,ID)*G(19,2))
C
      G191M  = 8.*( DD11M(1)*G(2,1) + GZSTIF*DD11M(2)*G(2,2))
      G192M  =    ( DD12M(1)*(CC1*G(16,1)+CC2*G(5,1))
     1             +GZSTIF*DD12M(2)*(CC1*G(16,2)+CC2*G(5,2)))
     1        +CC5*( DD22M(1)*G(5,1) + GZSTIF*DD22M(2)*G(5,2))
C
      G191MM  = 8.*( DD11MM(1)*G(2,1) + GZSTIF*DD11MM(2)*G(2,2))
      G192MM  =    ( DD12MM(1)*(CC1*G(16,1)+CC2*G(5,1))
     1             +GZSTIF*DD12MM(2)*(CC1*G(16,2)+CC2*G(5,2)))
     1        +CC5*( DD22MM(1)*G(5,1) + GZSTIF*DD22MM(2)*G(5,2))
C
      G201 = 4.*(  DD11(1)*G(3,1) + GZSTIF*DD11(2)*G(3,2))
      G202 = (  DD12(1)*(CC3*G(17,1)+CC4*G(6,1))
     1         +GZSTIF*DD12(2)*(CC3*G(17,2)+CC4*G(6,2)))
     1   +CC6*(  DD22(1)*G(6,1) + GZSTIF*DD22(2)*G(6,2))
      G203 = 0.25*(CX(5,5,1)*G(20,1) + GZSTIF*CX(5,5,ID)*G(20,2))
C
      G201M  = 4.*( DD11M(1)*G(3,1) + GZSTIF*DD11M(2)*G(3,2))
      G202M  =    ( DD12M(1)*(CC3*G(17,1)+CC4*G(6,1))
     1             +GZSTIF*DD12M(2)*(CC3*G(17,2)+CC4*G(6,2)))
     1       +CC6*( DD22M(1)*G(6,1) + GZSTIF*DD22M(2)*G(6,2))
C
      G201MM  = 4.*( DD11MM(1)*G(3,1) + GZSTIF*DD11MM(2)*G(3,2))
      G202MM  =    ( DD12MM(1)*(CC3*G(17,1)+CC4*G(6,1))
     1             +GZSTIF*DD12MM(2)*(CC3*G(17,2)+CC4*G(6,2)))
     1       +CC6*( DD22MM(1)*G(6,1) + GZSTIF*DD22MM(2)*G(6,2))
C
      G18   = N2*G181   + N*G182   + G183
C BEG JUN 1996 (ADD ELASTIC FOUNDATION EFFECT)
     1      +0.25*(FACSKN*WFOUND(1,1)*G(1,1)
     1            +GZSTIF*FACBAS*WFOUND(2,1)*G(1,2))
C END JUN 1996
      G19   = N2*G191   + N*G192   + G193
C BEG JUN 1996 (ADD ELASTIC FOUNDATION EFFECT)
     1      +0.50*(FACSKN*WFOUND(1,1)*G(2,1)
     1            +GZSTIF*FACBAS*WFOUND(2,1)*G(2,2))
C END JUN 1996
      G20   = N2*G201   + N*G202   + G203
C BEG JUN 1996 (ADD ELASTIC FOUNDATION EFFECT)
     1      +0.25*(FACSKN*WFOUND(1,1)*G(3,1)
     1            +GZSTIF*FACBAS*WFOUND(2,1)*G(3,2))
C END JUN 1996
C END MAY 1997
      G18N  = 2.*N*G181   + G182 
      G19N  = 2.*N*G191   + G192
      G20N  = 2.*N*G201   + G202
      G18NN = 2.*G181
      G19NN = 2.*G191
      G20NN = 2.*G201
      G18M  = N2*G181M  + N*G182M
      G19M  = N2*G191M  + N*G192M
      G20M  = N2*G201M  + N*G202M
      G18MN = 2.*N*G181M  + G182M
      G19MN = 2.*N*G191M  + G192M
      G20MN = 2.*N*G201M  + G202M
      G18MM = N2*G181MM + N*G182MM
      G19MM = N2*G191MM + N*G192MM
      G20MM = N2*G201MM + N*G202MM
C
      SBPB   = G18 + A*G19 +A2*G20
      SBPBA  = G19  +2.*A*G20
      SBPBM  = G18M + A*G19M + A2*G20M
      SBPBN  = G18N + A*G19N + A2*G20N
      SBPBAA = 2.*G20
      SBPBMA = G19M +2.*A*G20M
      SBPBNA = G19N +2.*A*G20N
      SBPBMM = G18MM + A*G19MM + A2*G20MM
      SBPBNM = G18MN + A*G19MN + A2*G20MN
      SBPBNN = G18NN + A*G19NN + A2*G20NN
C
C  Modify Ci to account for change in N...
C
      D1 = NN*C1
      D2 = NN*C2
      D3 = NN*C3
      D4 = NN*C4
      D5 = NN*C5
      W04 = 4.*W0**2
      D6 = NN*(C6-UST3 -UST1-W04*ACOMB1 -GS010F -GWWF13 -ACOMB6)
     1           +UST3 +NN2*(UST1+W04*ACOMB1+ACOMB6)+GS010F +GWWF13
      C6N= (C6-UST3-UST1-W04*ACOMB1-GS010F-GWWF13-ACOMB6)/N0
     1     +2.*NN2*(UST1+W04*ACOMB1+ACOMB6)/N
      D7 = NN*(C7 -GS011F -GWWF14) +GS011F +GWWF14
      D8 = NN*(C8 -GS012F -GWWF15) +GS012F +GWWF15
      D9 = NN*C9
      D10= NN*C10
      D11= NN*C11
      D12= NN*(C12 - GWF010) +GWF010
      D13= NN*(C13 - GWF011) +GWF011
      D14= NN*C14
      D15= NN*C15
      D16= NN*(C16 - GS10F) + GS10F
      D17= NN*(C17 - GS11F) + GS11F
      D18= NN*(C18 - GS12F) + GS12F
      D19 = NN*C19
      D20 = NN*C20
      D21 = NN*C21
      D22 = NN*C22
      D23 = NN*C23
      D24 = NN*C24
      D25 = NN*(C25 -GWS10F) + GWS10F
      D26 = NN*(C26 -GWS11F) + GWS11F
      D27 = NN*C27
      D28 = NN*C28
      D29 = NN*C29
      D30 = NN*C30
      D31 = NN2*(GS13+ACOMB1) +NN*ACOMB2 +GS13F
      D32 = NN2*GS14 +GS14F
      D33 = NN2*GS15 +GS15F
      D34 = NN2*GS16 +GS16F
      D35 = NN2*GS17 +GS17F
      D36 = NN2*(GWS13+4.*W0*ACOMB1) +NN*4.*W0*ACOMB2 + GWS13F
      D37 = NN2*GWS14 +GWS14F
      D38 = NN2*GWS15 +GWS15F
      D39 = NN2*GWS16 +GWS16F
      C31N= 2.*NN2*(GS13+ACOMB1)/N +ACOMB2/N0
      C32N= 2.*NN2*GS14/N
      C33N= 2.*NN2*GS15/N
      C34N= 2.*NN2*GS16/N
      C35N= 2.*NN2*GS17/N
      C36N= 2.*NN2*(GWS13+4.*W0*ACOMB1)/N +4.*W0*ACOMB2/N0
      C37N= 2.*NN2*GWS14/N
      C38N= 2.*NN2*GWS15/N
      C39N= 2.*NN2*GWS16/N
      D40 = 0.
      D41 = 0.
      D42 = NN*C42
      D43 = NN*C43
      D44 = NN*C44
      D45 = NN*C45
      D46 = NN*C46
      D47 = NN*(C47 -S4*GS1F) + S4*GS1F
      D48 = NN*(C48 -S4*GS2F) + S4*GS2F
      D49 = NN*(C49 -S4*GS3F) + S4*GS3F
      D50 = NN*(C50 -S4*GWS1F) + S4*GWS1F
      D51 = NN*(C51 -S4*GWS2F) + S4*GWS2F
C
C  Part of energy independent of the transverse stiffeners...(p 16a notes)
C  Energy...
      B1 = F2*(D1 +A*D2 +A2*D3) + F*(D4 +A*D5)
      B2 = F2*(D42 +A*D43 +A2*D44) +F*(D45 +A*D46)
      B3 = F2*(D6 +A*D7 +A2*D8 +M2*(D9 +A*D10 +A2*D11) +SBPB)
      B4 = F*(D12 +A*D13 +M2*(D14 +A*D15))
      B5 = F2*(D16 +A*D17 +A2*D18 +M*(D19 +A*D20 +A2*D21)
     1                           +M2*(D22 +A*D23 +A2*D24))
      B6 = F*(D25 +A*D26 +M*(D27 +A*D28) +M2*(D29 +A*D30))
      B7 = F4*(D31 +A*D32 +A2*D33 +A3*D34 +A4*D35)
      B8 = F3*(D36 +A*D37 +A2*D38 +A3*D39)
C
C FIRST VARIATION OF THE ENERGY WITH RESPECT TO F, A, M, N:
C
C  first variation w.r.t. f:
      B1F = 2.*F*(D1 +A*D2 +A2*D3) + (D4 +A*D5)
      B2F = 2.*F*(D42 +A*D43 +A2*D44) +(D45 +A*D46)
      B3F = 2.*F*(D6 +A*D7 +A2*D8 +M2*(D9 +A*D10 +A2*D11) +SBPB)
      B4F = (D12 +A*D13 +M2*(D14 +A*D15))
      B5F = 2.*F*(D16 +A*D17 +A2*D18 +M*(D19 +A*D20 +A2*D21)
     1                           +M2*(D22 +A*D23 +A2*D24))
      B6F = (D25 +A*D26 +M*(D27 +A*D28) +M2*(D29 +A*D30))
      B7F = 4.*F3*(D31 +A*D32 +A2*D33 +A3*D34 +A4*D35)
      B8F = 3.*F2*(D36 +A*D37 +A2*D38 +A3*D39)
C
C  first variation w.r.t. a:
      B1A= F2*(D2 +2.*A*D3) + F*D5
      B2A= F2*(D43 +2.*A*D44) +F*D46
      B3A= F2*(D7 +2.*A*D8 +M2*(D10 +2.*A*D11) +SBPBA)
      B4A= F*(D13 +M2*D15)
      B5A= F2*(D17 +2.*A*D18 +M*(D20 +2.*A*D21)
     1                           +M2*(D23 +2.*A*D24))
      B6A= F*(D26 +M*D28 +M2*D30)
      B7A= F4*(D32 +2.*A*D33 +3.*A2*D34 +4.*A3*D35)
      B8A= F3*(D37 +2.*A*D38 +3.*A2*D39)
C
C  first variation w.r.t. m:
      B1M= 0.
      B2M= 0.
      B3M= F2*(2.*M*(D9 +A*D10 +A2*D11) +SBPBM)
      B4M= F*(2.*M*(D14 +A*D15))
      B5M= F2*(D19 +A*D20 +A2*D21 +2.*M*(D22 +A*D23 +A2*D24))
      B6M= F*(D27 +A*D28 +2.*M*(D29 +A*D30))
      B7M= 0.
      B8M= 0.
C
C  first variation w.r.t. n:
      B1N = F2*(C1N +A*C2N +A2*C3N) + F*(C4N +A*C5N)
      B2N = F2*(C42N +A*C43N +A2*C44N) +F*(C45N +A*C46N)
      B3N = F2*(C6N +A*C7N +A2*C8N +M2*(C9N +A*C10N +A2*C11N) +SBPBN)
      B4N = F*(C12N +A*C13N +M2*(C14N +A*C15N))
      B5N = F2*(C16N +A*C17N +A2*C18N +M*(C19N +A*C20N +A2*C21N)
     1                           +M2*(C22N +A*C23N +A2*C24N))
      B6N = F*(C25N +A*C26N +M*(C27N +A*C28N) +M2*(C29N +A*C30N))
      B7N = F4*(C31N +A*C32N +A2*C33N +A3*C34N +A4*C35N)
      B8N = F3*(C36N +A*C37N +A2*C38N +A3*C39N)
C
C  Part of energy dependent on the transverse stiffeners...) (p 3 notes)
      GS1SUM = NN*GS1 + GS1F
      GS2SUM = NN*GS2 + GS2F
      GS3SUM = NN*GS3 + GS3F
      GWS1SM = NN*GWS1 + GWS1F
      GWS2SM = NN*GWS2 + GWS2F
      CY =    NN*(F2*(GS1 +A*GS2 +A2*GS3) +F*(GWS1 +A*GWS2))
     1       +NN*M2*(F2*(GS4 +A*GS5 +A2*GS6) +F*(GWS4 +A*GWS5))
      CY0 =  F2*(GS1F +A*GS2F +A2*GS3F) +F*(GWS1F +A*GWS2F)
      CYF = 2.*F*(GS1SUM +A*GS2SUM +A2*GS3SUM) +GWS1SM +A*GWS2SM
     1       +NN*M2*(2.*F*(GS4 +A*GS5 +A2*GS6) +GWS4 +A*GWS5)
      CYA =    F2*(GS2SUM +2.*A*GS3SUM)+F*GWS2SM
     1       +NN*M2*(F2*(GS5 +2.*A*GS6) +F*GWS5)
      CYM = NN*2.*M*(F2*(GS4 +A*GS5 +A2*GS6) +F*(GWS4 +A*GWS5))
      CYN = CY/N
C
      CYFF= 2.*(GS1SUM +A*GS2SUM +A2*GS3SUM)
     1       +NN*M2*2.*(GS4 +A*GS5 +A2*GS6)
      CYFA= 2.*F*(GS2SUM +2.*A*GS3SUM) +GWS2SM
     1       +NN*M2*(2.*F*(GS5 +2.*A*GS6) +GWS5)
      CYFM=   NN*2.*M*(2.*F*(GS4 +A*GS5 +A2*GS6) +GWS4 +A*GWS5)
      CYFN=   (2.*F*(GS1 +A*GS2 +A2*GS3) +GWS1 +A*GWS2
     1       +M2*(2.*F*(GS4 +A*GS5 +A2*GS6) +GWS4 +A*GWS5))/N0
C
      CYAA=    F2*2.*GS3SUM +NN*M2*F2*2.*GS6
      CYAM=    NN*2.*M*(F2*(GS5 +2.*A*GS6) +F*GWS5)
      CYAN=    (F2*(GS2 +2.*A*GS3)+F*GWS2
     1       +  M2*(F2*(GS5 +2.*A*GS6) +F*GWS5))/N0
C
      CYMM= NN*2.*(F2*(GS4 +A*GS5 +A2*GS6) +F*(GWS4 +A*GWS5))
      CYMN=  2.*M*(F2*(GS4 +A*GS5 +A2*GS6) +F*(GWS4 +A*GWS5))/N0
C
      CYNN= 0.
C
      CSUM = CY + CY0
C First variation terms on right-hand-side of Newton equations:
      RHS(1) = -(B1F*B2 + B3F +B4F +B5F +B6F +B7F +B8F
     1        + S2*CSUM*B1F + CYF*(S3*B2 + S4*CSUM))
      RHS(2) = -(B1A*B2 + B3A +B4A +B5A +B6A +B7A +B8A
     1        + S2*CSUM*B1A + CYA*(S3*B2 + S4*CSUM))
      RHS(3) = -(B1M*B2 + B3M +B4M +B5M +B6M +B7M +B8M
     1        + S2*CSUM*B1M + CYM*(S3*B2 + S4*CSUM))
      RHS(4) = -(B1N*B2 + B3N +B4N +B5N +B6N +B7N +B8N
     1        + S2*CSUM*B1N + CYN*(S3*B2 + S4*CSUM))
C
C  SECOND VARIATION OF THE TERMS IN THE ENERGY EXPRESSION
C  second variation, f-equation
      B1FF = 2.*(D1 +A*D2 +A2*D3)
      B2FF = 2.*(D42 +A*D43 +A2*D44)
      B3FF = 2.*(D6 +A*D7 +A2*D8 +M2*(D9 +A*D10 +A2*D11) +SBPB)
      B4FF = 0.
      B5FF = 2.*(D16 +A*D17 +A2*D18 +M*(D19 +A*D20 +A2*D21)
     1                           +M2*(D22 +A*D23 +A2*D24))
      B6FF = 0.
      B7FF =12.*F2*(D31 +A*D32 +A2*D33 +A3*D34 +A4*D35)
      B8FF = 6.*F*(D36 +A*D37 +A2*D38 +A3*D39)
C
C  second variation, f-equation
      B1FA = 2.*F*(D2 +2.*A*D3) +D5
      B2FA = 2.*F*(D43 +2.*A*D44) +D46
      B3FA = 2.*F*(D7 +2.*A*D8 +M2*(D10 +2.*A*D11) +SBPBA)
      B4FA = D13 +M2*D15
      B5FA = 2.*F*(D17 +2.*A*D18 +M*(D20 +2.*A*D21)
     1                           +M2*(D23 +2.*A*D24))
      B6FA = D26 +M*D28 +M2*D30
      B7FA = 4.*F3*(D32 +2.*A*D33 +3.*A2*D34 +4.*A3*D35)
      B8FA = 3.*F2*(D37 +2.*A*D38 +3.*A2*D39)
C
C  second variation, f-equation
      B1FM = 0.
      B2FM = 0.
      B3FM = 2.*F*(2.*M*(D9 +A*D10 +A2*D11) +SBPBM)
      B4FM = 2.*M*(D14 +A*D15)
      B5FM = 2.*F*(D19 +A*D20 +A2*D21
     1                           +2.*M*(D22 +A*D23 +A2*D24))
      B6FM = D27 +A*D28 +2.*M*(D29 +A*D30)
      B7FM = 0.
      B8FM = 0.
C
C  second variation, f-equation
      B1FN = 2.*F*(C1N +A*C2N +A2*C3N) + C4N +A*C5N
      B2FN = 2.*F*(C42N +A*C43N +A2*C44N) +C45N +A*C46N
      B3FN = 2.*F*(C6N+A*C7N+A2*C8N+M2*(C9N+A*C10N+A2*C11N)+SBPBN)
      B4FN = (C12N +A*C13N +M2*(C14N +A*C15N))
      B5FN = 2.*F*(C16N +A*C17N +A2*C18N +M*(C19N +A*C20N +A2*C21N)
     1                           +M2*(C22N +A*C23N +A2*C24N))
      B6FN = (C25N +A*C26N +M*(C27N +A*C28N) +M2*(C29N +A*C30N))
      B7FN = 4.*F3*(C31N +A*C32N +A2*C33N +A3*C34N +A4*C35N)
      B8FN = 3.*F2*(C36N +A*C37N +A2*C38N +A3*C39N)
C
C  second variation, a-equation
      B1AA = F2*2.*D3
      B2AA = F2*2.*D44
      B3AA = F2*(2.*D8 +M2*2.*D11 +SBPBAA)
      B4AA = 0.
      B5AA = F2*(2.*D18 +M*2.*D21 +M2*2.*D24)
      B6AA = 0.
      B7AA = F4*(2.*D33 +6.*A*D34 +12.*A2*D35)
      B8AA = F3*(2.*D38 +6.*A*D39)
C
C  second variation, a-equation
      B1AM = 0.
      B2AM = 0.
      B3AM = F2*(2.*M*(D10 +2.*A*D11) +SBPBMA)
      B4AM = F*2.*M*D15
      B5AM = F2*(D20 +2.*A*D21 +2.*M*(D23 +2.*A*D24))
      B6AM = F*(D28 +2.*M*D30)
      B7AM = 0.
      B8AM = 0.
C
C  second variation, a-equation
      B1AN = F2*(C2N +2.*A*C3N) + F*C5N
      B2AN = F2*(C43N +2.*A*C44N) +F*C46N
      B3AN = F2*(C7N +2.*A*C8N +M2*(C10N +2.*A*C11N) +SBPBNA)
      B4AN = F*(C13N +M2*C15N)
      B5AN = F2*(C17N +2.*A*C18N +M*(C20N +2.*A*C21N)
     1                           +M2*(C23N +2.*A*C24N))
      B6AN = F*(C26N +M*C28N +M2*C30N)
      B7AN = F4*(C32N +2.*A*C33N +3.*A2*C34N +4.*A3*C35N)
      B8AN = F3*(C37N +2.*A*C38N +3.*A2*C39N)
C
C  second variation, m-equation
      B1MM = 0.
      B2MM = 0.
      B3MM = F2*(2.*(D9 +A*D10 +A2*D11) +SBPBMM)
      B4MM = F*2.*(D14 +A*D15)
      B5MM = F2*2.*(D22 +A*D23 +A2*D24)
      B6MM = F*2.*(D29 +A*D30)
      B7MM = 0.
      B8MM = 0.
C
C  second variation, m-equation
      B1MN = 0.
      B2MN = 0.
      B3MN = F2*(2.*M*(C9N +A*C10N +A2*C11N) +SBPBNM)
      B4MN = F*(2.*M*(C14N +A*C15N))
      B5MN = F2*(C19N +A*C20N +A2*C21N +2.*M*(C22N +A*C23N +A2*C24N))
      B6MN = F*(C27N +A*C28N +2.*M*(C29N +A*C30N))
      B7MN = 0.
      B8MN = 0.
C
C  second variation, n-equation
      B1NN = 0.
      B2NN = 0.
      B3NN = F2*(C6NN +SBPBNN)
      B4NN = 0.
      B5NN = 0.
      B6NN = 0.
      B7NN = F4*(C31NN +A*C32NN +A2*C33NN +A3*C34NN +A4*C35NN)
      B8NN = F3*(C36NN +A*C37NN +A2*C38NN +A3*C39NN)
C
      C(1,1) = B1F*B2F +B1FF*B2 +B3FF +B4FF +B5FF +B6FF +B7FF +B8FF
     1        + S2*(CSUM*B1FF+CYF*B1F) +CYF*(S3*B2F +S4*CYF)
     1        + CYFF*(S3*B2 + S4*CSUM)
      C(1,2) = B1F*B2A +B1FA*B2 +B3FA +B4FA +B5FA +B6FA +B7FA +B8FA
     1        + S2*(CSUM*B1FA+CYA*B1F) +CYF*(S3*B2A +S4*CYA)
     1        + CYFA*(S3*B2 + S4*CSUM)
      C(2,1) = B1A*B2F +B1FA*B2 +B3FA +B4FA +B5FA +B6FA +B7FA +B8FA
     1        + S2*(CSUM*B1FA+CYF*B1A) +CYA*(S3*B2F +S4*CYF)
     1        + CYFA*(S3*B2 + S4*CSUM)
      C(1,3) = B1F*B2M +B1FM*B2 +B3FM +B4FM +B5FM +B6FM +B7FM +B8FM
     1        + S2*(CSUM*B1FM+CYM*B1F) +CYF*(S3*B2M +S4*CYM)
     1        + CYFM*(S3*B2 + S4*CSUM)
      C(3,1) = B1M*B2F +B1FM*B2 +B3FM +B4FM +B5FM +B6FM +B7FM +B8FM
     1        + S2*(CSUM*B1FM+CYF*B1M) +CYM*(S3*B2F +S4*CYF)
     1        + CYFM*(S3*B2 + S4*CSUM)
      C(1,4) = B1F*B2N +B1FN*B2 +B3FN +B4FN +B5FN +B6FN +B7FN +B8FN
     1        + S2*(CSUM*B1FN+CYN*B1F) +CYF*(S3*B2N +S4*CYN)
     1        + CYFN*(S3*B2 + S4*CSUM)
      C(4,1) = B1N*B2F +B1FN*B2 +B3FN +B4FN +B5FN +B6FN +B7FN +B8FN
     1        + S2*(CSUM*B1FN+CYF*B1N) +CYN*(S3*B2F +S4*CYF)
     1        + CYFN*(S3*B2 + S4*CSUM)
C
      C(2,2) = B1A*B2A +B1AA*B2 +B3AA +B4AA +B5AA +B6AA +B7AA +B8AA
     1        + S2*(CSUM*B1AA +CYA*B1A) +CYA*(S3*B2A + S4*CYA)
     1        + CYAA*(S3*B2 + S4*CSUM)
      C(2,3) = B1A*B2M +B1AM*B2 +B3AM +B4AM +B5AM +B6AM +B7AM +B8AM
     1        + S2*(CSUM*B1AM +CYM*B1A) +CYA*(S3*B2M + S4*CYM)
     1        + CYAM*(S3*B2 + S4*CSUM)
      C(3,2) = B1M*B2A +B1AM*B2 +B3AM +B4AM +B5AM +B6AM +B7AM +B8AM
     1        + S2*(CSUM*B1AM +CYA*B1M) +CYM*(S3*B2A + S4*CYA)
     1        + CYAM*(S3*B2 + S4*CSUM)
      C(2,4) = B1A*B2N +B1AN*B2 +B3AN +B4AN +B5AN +B6AN +B7AN +B8AN
     1        + S2*(CSUM*B1AN +CYN*B1A) +CYA*(S3*B2N + S4*CYN)
     1        + CYAN*(S3*B2 + S4*CSUM)
      C(4,2) = B1N*B2A +B1AN*B2 +B3AN +B4AN +B5AN +B6AN +B7AN +B8AN
     1        + S2*(CSUM*B1AN +CYA*B1N) +CYN*(S3*B2A + S4*CYA)
     1        + CYAN*(S3*B2 + S4*CSUM)
C
      C(3,3) = B1M*B2M +B1MM*B2 +B3MM +B4MM +B5MM +B6MM +B7MM +B8MM
     1        + S2*(CSUM*B1MM +CYM*B1M) +CYM*(S3*B2M + S4*CYM)
     1        + CYMM*(S3*B2 + S4*CSUM)
      C(3,4) = B1M*B2N +B1MN*B2 +B3MN +B4MN +B5MN +B6MN +B7MN +B8MN
     1        + S2*(CSUM*B1MN +CYN*B1M) +CYM*(S3*B2N + S4*CYN)
     1        + CYMN*(S3*B2 + S4*CSUM)
      C(4,3) = B1N*B2M +B1MN*B2 +B3MN +B4MN +B5MN +B6MN +B7MN +B8MN
     1        + S2*(CSUM*B1MN +CYM*B1N) +CYN*(S3*B2M + S4*CYM)
     1        + CYMN*(S3*B2 + S4*CSUM)
C
      C(4,4) = B1N*B2N +B1NN*B2 +B3NN +B4NN +B5NN +B6NN +B7NN +B8NN
     1        + S2*(CSUM*B1NN +CYN*B1N) +CYN*(S3*B2N +S4*CYN)
     1        + CYNN*(S3*B2 +S4*CSUM)
C
      IF (IA.EQ.1) THEN
         RHS(2) = 0.
         C(2,2) = 1.
         C(1,2) = 0.
         C(2,1) = 0.
         C(2,3) = 0.
         C(3,2) = 0.
         C(2,4) = 0.
         C(4,2) = 0.
      ENDIF
      IF (IM.EQ.1) THEN
         RHS(3) = 0.
         C(3,3) = 1.
         C(1,3) = 0.
         C(3,1) = 0.
         C(2,3) = 0.
         C(3,2) = 0.
         C(3,4) = 0.
         C(4,3) = 0.
      ENDIF
      IF (IFX.EQ.1) THEN
         B2S2 = B2 + S2*CSUM
         B2S2A= B2A+ S2*CYA
         B2S2N= B2N+ S2*CYN
         S3B2 = S3*B2 + S4*CSUM
         S3B2A= S3*B2A+ S4*CYA
         S3B2N= S3*B2N+ S4*CYN
         BRAC1 = B1*B2S2 + 2.*B7 +CSUM*S3B2
         BRAC1A= B1*B2S2A + B1A*B2S2 +2.*B7A +CSUM*S3B2A + CYA*S3B2
         BRAC1N= B1*B2S2N + B1N*B2S2 +2.*B7N +CSUM*S3B2N + CYN*S3B2
         BRACA = B1A*B2S2 + B7A + CYA*S3B2
         BRACN = B1N*B2S2 + B7N + CYN*S3B2
         RHS(2) = -(B3+B5)*BRACA + (B3A+B5A)*BRAC1
         RHS(4) = -(B3+B5)*BRACN + (B3N+B5N)*BRAC1
         C(2,2) = 
     1     (B3+B5)*(B1A*B2S2A +B1AA*B2S2 +B7AA +CYA*S3B2A+CYAA*S3B2)
     1    +(B3A+B5A)*BRACA -(B3A+B5A)*BRAC1A - (B3AA+B5AA)*BRAC1
         C(2,4) =
     1     (B3+B5)*(B1A*B2S2N +B1AN*B2S2 +B7AN +CYA*S3B2N+CYAN*S3B2)
     1    +(B3N+B5N)*BRACA -(B3A+B5A)*BRAC1N - (B3AN+B5AN)*BRAC1
         C(4,2) =
     1     (B3+B5)*(B1N*B2S2A +B1AN*B2S2 +B7AN +CYN*S3B2A+CYAN*S3B2)
     1    +(B3A+B5A)*BRACN -(B3N+B5N)*BRAC1A - (B3AN+B5AN)*BRAC1
         C(4,4) = 
     1     (B3+B5)*(B1N*B2S2N +B1NN*B2S2 +B7NN +CYN*S3B2N+CYNN*S3B2)
     1    +(B3N+B5N)*BRACN -(B3N+B5N)*BRAC1N - (B3NN+B5NN)*BRAC1
         IF (IA.EQ.0) THEN
            DET = C(2,2)*C(4,4) - C(2,4)*C(4,2)
            SOLN(1) = 0.
            SOLN(2) = (C(4,4)*RHS(2) - C(2,4)*RHS(4))/DET
            SOLN(3) = 0.
            SOLN(4) = (C(2,2)*RHS(4) - C(4,2)*RHS(2))/DET
         ELSE
            SOLN(1) = 0.
            SOLN(2) = 0.
            SOLN(3) = 0.
            SOLN(4) = RHS(4)/C(4,4)
         ENDIF
         IF (NTEST.EQ.1) THEN
            SOLN(2) = 0.
            SOLN(4) = 0.
         ENDIF
      ENDIF
C
C  SOLVE THE EQUATION SYSTEM, C*SOLN = RHS, FOR THE CURRENT NEWTON
C  ITERATION:
C
      IF (IFX.NE.1) CALL EQSOLV(4,C,RHS,SOLN)
C
      IF (ITER.LT.2) THEN
         IF (ABS(SOLN(1)).GT.DFMAX) SOLN(1) = SIGN(1.0,SOLN(1))*DFMAX
         IF (ABS(SOLN(2)).GT.DAMAX) SOLN(2) = SIGN(1.0,SOLN(2))*DAMAX
         IF (ABS(SOLN(3)).GT.DMMAX) SOLN(3) = SIGN(1.0,SOLN(3))*DMMAX
         IF (ABS(SOLN(4)).GT.DNMAX) SOLN(4) = SIGN(1.0,SOLN(4))*DNMAX
      ENDIF
C     IF (ITER.EQ.0) THEN
C        WRITE(8,8003) N,N0,NN,NN2,N2
C8003    FORMAT(' N,N0,NN,NN2,N2='/1P,5E12.2)
C        WRITE(8,8004) D6,D16,D7,D17,D8,D18,SBPB
C8004    FORMAT(' C6,C16,C7,C17,C8,C18,SBPB='/1P,7E12.4)
C        WRITE(8,8005) C6N,C16N,C7N,C17N,C8N,C18N,SBPBN
C8005    FORMAT(' C6N,C16N,C7N,C17N,C8N,C18N,SBPBN='/1P,7E12.4)
C        WRITE(8,8008) B1,B2,B3,B4,B5,B6,B7,B8
C8008    FORMAT(' B1,B2,B3,B4,B5,B6,B7,B8='/1P,8E12.4)
C        WRITE(8,8006) B1N,B2N,B3N,B4N,B5N,B6N,B7N,B8N
C8006    FORMAT(' B1N,B2N,B3N,B4N,B5N,B6N,B7N,B8N ='/1P,8E12.4)
C        WRITE(8,8007) S2,S3,S4
C8007    FORMAT(' S2,S3,S4=',1P,3E12.4)
C        WRITE(8,8010) LABLE,F,A,M,N, RHS(1),RHS(2),RHS(3),RHS(4)
C8010    FORMAT(' IN SUB. ENERGY: LABEL=',I5,':'/
C    1          ' F,A,M,N =',1P,4E12.4/
C    1          ' RHS(1-4)=',1P,4E12.4/
C    1          ' C(I,J) MATRIX FOLLOWS:')
C        WRITE(8,8020) ((C(I,J),J=1,4),I=1,4)
C8020    FORMAT((1P,4E12.4)/)
C     ENDIF
      F = F + SOLN(1)
      A = A + SOLN(2)
      M = M + SOLN(3)
      N = N + SOLN(4)
C
      ITER = ITER + 1
C BEG OCT 1995
C     IF (N.LE.0.0.OR.(IFX.EQ.0.AND.(F/F0).LT.0.5)) THEN
C BEG APR 1997
C     IF (N.LE.0.1*FACTN1.OR.(IFX.EQ.0.AND.(F/F0).LT.0.5)) THEN
      IF (N.LE.0.1*FACTN1.OR.(IFX.EQ.0.AND.(F/F0).LT.0.5)
     1                   .OR.N.GT.9.*N0.OR.ABS(SOLN(2)).GT.10.) THEN
C END APR 1997
C END OCT 1995
         ICONV = 0
         IF (NPRT.GE.2) THEN
C BEG FEB 1997
            WRITE(IFILE,'(A,I5,A)') ' LABEL=',LABLE,
     1      ' ITERATIONS IN "ENERGY" FAIL TO CONVERGE'
C END FEB 1997
C BEG APR 1997
C23456789012345678901234567890123456789012345678901234567890123456789012
            IF (N.LE.0.1*FACTN1) WRITE(IFILE,'(A,1P,2E12.4)')
     1    ' N is less than 0.1*FACTN1:   N,FACTN1=',N,FACTN1
            IF (IFX.EQ.0.AND.(F/F0).LT.0.5) WRITE(IFILE,'(A,1P,2E12.4)')
     1    ' IFX=0 AND F/F0 is less than 0.5: F,F0=', F,F0
            IF (N.GT.9.*N0) WRITE(IFILE,'(A,1P,2E12.4)')
     1    ' N is greater than 9.*N0:         N,N0=',N,N0
            IF (ABS(SOLN(2)).GT.10.) WRITE(IFILE,'(A,1P,2E12.4)')
     1    ' ABS(da) is greater than 10.:    da,A0=',SOLN(2),A0
C END APR 1997
            IF (N.LE.0.) WRITE(IFILE,*)' NEGATIVE AXIAL WAVELENGTH'
            WRITE(IFILE,*)' F,A,M,N =', F,A,M,N
         ENDIF
         RETURN
      ENDIF
      IF (NTEST.EQ.0.AND.IFX.EQ.1.AND.ABS(N).LT.FACTN1) THEN
         N = 0.999999*FACTN1
         NTEST = 1
         GO TO 10
      ENDIF
      IF (NPRT.GE.2) THEN
         FLP = LENGTH/(FACT*SQRT(N))
         WRITE(IFILE,100) ITER, F, A, M, N, FLP
  100    FORMAT(I3,1X,1P,5E14.5)
      ENDIF
      IF (ITER.GT.45) THEN
C BEG FEB 1997
         WRITE(IFILE,'(A,I5,A)') ' LABEL=',LABLE,
     1   ' ITERATIONS IN "ENERGY" FAIL TO CONVERGE'
C END FEB 1997
         ICONV = 0
         RETURN
      ENDIF
C
      RAT1 = F
      SRAT1= SOLN(1)
      IF (ABS(F0).GT.0.01) THEN
         RAT1 = F/F0
        SRAT1 = SOLN(1)/F0
      ENDIF
      RAT2 = A
      SRAT2= SOLN(2)
      IF (ABS(A0).GT.0.01) THEN
         RAT2 = A/A0
        SRAT2 = SOLN(2)/A0
      ENDIF
      RAT3 = M
      SRAT3= SOLN(3)
      IF (ABS(M0).GT.0.01) THEN
         RAT3 = M/M0
        SRAT3 = SOLN(3)/M0
      ENDIF
      RAT4 = N/N0
      SRAT4 = SOLN(4)/N0
C
      FNORM  = SQRT(RAT1**2 + RAT2**2 + RAT3**2 +RAT4**2)
      DFNORM = SQRT(SRAT1**2 +SRAT2**2 +SRAT3**2 +SRAT4**2)
      IF ((DFNORM/FNORM).LT.0.001.AND.ITER.GE.3) THEN
         IF (IFX.EQ.1) THEN
            FSQ = -(B3+B5)/BRAC1
            IF (FSQ.LT.0.) THEN
C BEG FEB 1997
               IF (NPRT.GE.2) WRITE(IFILE,'(A,I5,A,/,A,1P,E10.2)')
     1       ' LABEL=',LABLE,
C END FEB 1997
     1       ' ITERATIONS IN "ENERGY" FAIL TO CONVERGE.',
     1       ' f**2 IS NEGATIVE.  f**2 = ', FSQ
               ICONV = 0
               RETURN
            ELSE
               F = SQRT(FSQ)
            ENDIF
         ENDIF
         IF (NPRT.GE.2) WRITE(IFILE,*)' CONVERGENCE SUCCESSFUL!'
         ICONV = 1
         GO TO 200
      ELSE
         GO TO 10
      ENDIF
  200 CONTINUE
      RETURN
      END
C
C
C
C=DECK      AVESKN
      SUBROUTINE AVESKN(F,AL,M,CX,EPS1,EPS2,EPS12,N1SKIN,N2SKIN,
     1                  N12SKN,EPS2S,NXY,W0,CSN)
C
C  PURPOSE IS TO CALCULATE AVERAGE STRAINS IN SKIN AND AVERAGE
C  FORCE RESULTANTS IN ORDER TO OBTAIN THE TANGENT STIFFNESS
C  OF THE LOCALLY POSTBUCKLED SKIN.
C
      COMMON/UW1/C1,C2,C3,C4,C5,C6,C7,C8,C9,C10,C11,C12,C13,C14,C15
      COMMON/UW2/C16,C17,C18,C19,C20,C21,C22,C23,C24,C25,C26,C27
      COMMON/UW3/C28,C29,C30,C31,C32,C33,C34,C35,C36,C37,C38,C39
      COMMON/UW4/C40,C41,C42,C43,C44,C45,C46
      COMMON/UW9/GS1,GS2,GS3,GWS1,GWS2,GS4,GS5,GS6,GWS4,GWS5
      COMMON/UW9N/GS1F,GS2F,GS3F,GWS1F,GWS2F
      COMMON/UW10/G31,G32,G33,GW31,GW32
      COMMON/UW11/F1,F10,F2,F20,NUBAR,A11BAR,A12BAR,A22BAR
      COMMON/UW12/STIFL2,S2,S3,S4,C47,C48,C49,C50,C51,CS22
      DIMENSION CSN(6,6)
      COMMON/GEOM3/ISTIF(2),NLAYER(4,2),NSEG(2),INTEXT(2)
      COMMON/GSSSS/GSS1(4),GSS2(4),GSS3(4),GSS4(4),GSS5(4),GSS6(4)
      COMMON/SEGSLP/MSLOPE(8)
      COMMON/C33EXT/C33AD1,C33AD2
      REAL MSLOPE
      DIMENSION CX(6,6,5)
C
      REAL NUBAR,NXY,N1SKIN,N2SKIN,N12SKN,M
C
      IF (ISTIF(1).NE.5) THEN
         CY =     F*F*(GS1 +AL*GS2 +AL*AL*GS3) +F*(GWS1 +AL*GWS2)
     1       +M*M*(F*F*(GS4 +AL*GS5 +AL*AL*GS6) +F*(GWS4 +AL*GWS5))
     1       + F*F*(GS1F +AL*GS2F +AL*AL*GS3F) +F*(GWS1F +AL*GWS2F)
      ELSE
         AVEGS1 = 0.5*(GSS1(1) + GSS1(3))
         AVEGS2 = 0.5*(GSS2(1) + GSS2(3))
         AVEGS3 = 0.5*(GSS3(1) + GSS3(3))
         AVEGS4 = 0.5*(GSS4(1)*MSLOPE(1)**2 + GSS4(3)*MSLOPE(3)**2)
         AVEGS5 = 0.5*(GSS5(1)*MSLOPE(1)**2 + GSS5(3)*MSLOPE(3)**2)
         AVEGS6 = 0.5*(GSS6(1)*MSLOPE(1)**2 + GSS6(3)*MSLOPE(3)**2)
         AVGWS1 = 2.*W0*AVEGS1
         AVGWS2 =    W0*AVEGS2
         AVGWS4 = 2.*W0*AVEGS4
         AVGWS5 =    W0*AVEGS5
         AVEG31 = -(GSS4(1)*MSLOPE(1) + GSS4(3)*MSLOPE(3))
         AVEG32 = -(GSS5(1)*MSLOPE(1) + GSS5(3)*MSLOPE(3))
         AVEG33 = -(GSS6(1)*MSLOPE(1) + GSS6(3)*MSLOPE(3))
         AVGW31 = 2.*W0*AVEG31
         AVGW32 =    W0*AVEG32
C
         CY =     F*F*(AVEGS1 +AL*AVEGS2 +AL*AL*AVEGS3)
     1             +F*(AVGWS1 +AL*AVGWS2)
     1       +M*M*(F*F*(AVEGS4 +AL*AVEGS5 +AL*AL*AVEGS6)
     1             +F*(AVGWS4 +AL*AVGWS5))
      ENDIF
C
      EPS1  = F1+F10 +F*F*(C42 +AL*C43 +AL*AL*C44) +F*(C45 +AL*C46)
     1       +S2*CY
      EPS2S = F2+F20 -NUBAR*(EPS1 - F1 - F10) +(STIFL2/CS22)*CY
      EPS2  = EPS2S - CY
      FACT = 0.
      IF (ISTIF(1).EQ.4) FACT = 1.0
      F30   = NXY/(CX(3,3,5)-FACT*C33AD1)
      IF (ISTIF(1).NE.5) THEN
         EPS12 = F30 -M*(F*F*(G31+AL*G32+AL*AL*G33) +F*(GW31+AL*GW32))
      ELSE
         EPS12 = F30 -M*(F*F*(AVEG31+AL*AVEG32+AL*AL*AVEG33)
     1                    +F*(AVGW31+AL*AVGW32))
      ENDIF
C
      IF (ISTIF(1).NE.5) THEN
         N1SKIN = A11BAR*EPS1 + A12BAR*EPS2S
     1           +F*F*(C1 +AL*C2 +AL*AL*C3) +F*(C4 +AL*C5)
         N2SKIN = A12BAR*EPS1 + A22BAR*EPS2S
C BEG NOV 1995
         N12SKN = CX(3,3,1)*(EPS12 +M*(F*F*(G31+AL*G32+AL*AL*G33)
     1                                  +F*(GW31+AL*GW32)))
C END NOV 1995
C        WRITE(8,*)' N2SKIN,A12BAR,A22BAR=',N2SKIN,A12BAR,A22BAR
C        WRITE(8,*)' EPS1,EPS2,EPS2S=',EPS1,EPS2,EPS2S
C        WRITE(8,*)' N1SKIN,A11BAR,CY=',N1SKIN,A11BAR,CY
C        WRITE(8,*)' F,AL,M=',F,AL,M
C        WRITE(8,*)' NUBAR,CS22,STIFL2=',NUBAR,CS22,STIFL2
C        WRITE(8,*)' S2,F1,F2=',S2,F1,F2
      ELSE
         N1SKIN = CSN(1,1)*EPS1 + CSN(1,2)*EPS2S
     1           +F*F*(C1 +AL*C2 +AL*AL*C3) +F*(C4 +AL*C5)
         N2SKIN = CSN(1,2)*EPS1 + CSN(2,2)*EPS2S
C        N1SKIN = CX(1,1,5)*EPS1 + CX(1,2,5)*EPS2S
C    1           +F*F*(C1 +AL*C2 +AL*AL*C3) +F*(C4 +AL*C5)
C        N2SKIN = CX(1,2,5)*EPS1 + CX(2,2,5)*EPS2S
C BEG NOV 1995
         N12SKN = NXY
      ENDIF
C END NOV 1995
C
      RETURN
      END
C
C
C
C=DECK      VARSTF
      SUBROUTINE VARSTF(N,M,AL,F,CX,EPSFIX,EPSLOD,EPS1,EPS2,EPS2S,
     1 NXVAR,NYVAR,E1VAR,E2VAR,THERMX,NPRT,IFILE8,N2SKIN,W0,MAXSEG,
     1 ETHERM,TEMP,IMTEMP,RESULT,NXYVAR,E12VAR,EPS12,PERT1,PERT2,
     1 PERT3,AMPLIT,RESEIG,CS,IABT)
C
C  Purpose is to find reference surface strains and axial resultant in
C  the locally postbuckled panel module. We use these quantities to
C  later calculate the axial component of the tangent stiffness matrix
C  of the locally deformed panel.
C
C BEG APR 1996
      COMMON/GEOM6/IFAY(2),ITRTOT,IRESET,NLOADS,NSTEPS,WMAXXX,NCROSS,
     1     NOPLOT,KMAX,ILAYPL,XMAXX,XMIN,YMAXX,YMIN,N3DPLT,NOBJ,NSTRNS,
     1     NPLTST,NABSCI,IDIAG,ITRALL,IFAYT(2),IBEAM,IMISCL(5)
C END APR 1996
      COMMON/MODAL1/W(23,8),WD(23,8),WDD(23,8),U(23,8),V(23,8),
     1             VD(23,8)
      COMMON/GEOM1/AXIAL,CIRC,R
      COMMON/ECCEN/Z(23,8)
      COMMON/GEOM2/B(2),B2(2),HHH(2),WWW(2),W2(2)     
      COMMON/GEOM3/ISTIF(2),NLAYER(4,2),NSEG(2),INTEXT(2)  
C BEG JULY 1996
      COMMON/GEOM0/B0(2),B20(2),H0(2),WW0(2),W20(2)
C END JULY 1996
C BEG MAY 1997
      COMMON/IZSTIX/IZSTIF(2)
C END MAY 1997
      COMMON/SEGS/NSEGB5,M2,I5(95),I2,I2G
      DIMENSION CX(6,6,5),EPSLOD(*),NXVAR(23,8),E1VAR(23,8)
      DIMENSION EX(23,8),EY(23,8),EPSFIX(3,5,2),THERMX(6,5)
      DIMENSION E2VAR(23,8),NYVAR(23,8)
      COMMON/WEBTH1/CX3(6,6,11),CY3(6,6,11),THRMX3(6,11),THRMY3(6,11)
      COMMON/WEBTH2/TSMRX3(6,11),TSMRY3(6,11),ESMRX3(6,11),ESMRY3(6,11)
      COMMON/WEBTH3/ETRMX3(6,11),ETRMY3(6,11),GTX3(2,11),GTY3(2,11)
      COMMON/NEUTRL/DNEUTX,DNEUTY,DSURF
      COMMON/PSTST4/FNORIG
C BEG JULY 1995
      COMMON/DELIM2/DELFCX(3,4),DELWBX(2),DELCUR(3)
C END JULY 1995
      DIMENSION ETHERM(*),TEMP(*),RESULT(3,5,2),RESEIG(3,5,2)
      DIMENSION NXYVAR(23,8),E12VAR(23,8),CS(6,6)
      REAL NXCUR,NYCUR,N22,NXYVAR
      REAL N,M,NXVAR,NYVAR,NU12,N2SKIN
C
      B11 = (B(1) - B2(1))/B(1)
      B12 = B2(1)/B(1)
C BEG MAY 1997
      IF (IZSTIF(1).EQ.1) THEN
         B11 = 1.0
         B12 = 0.0
      ENDIF
C END MAY 1997
      ID  = 2
C BEG NOV 1995
      IF (ISTIF(1).EQ.5) THEN
         B11 = 1.0
         B12 = 0.0
      ENDIF
C END NOV 1995
C
C  NOTE:  IFAY(i) = 1 MEANS THAT:
C          1. THE STIFFENER IS A HAT.
C          2. THE BASE WIDTH B2(i) IS GREATER THAN THE HAT WIDTH W2(i)
C          3. THE WALL UNDER THE HAT IS THE SAME AS THAT IN SEGMENT 1.
C
      IF (IFAY(1).EQ.1) THEN
         B11 = (B(1) - (B2(1)-W2(1)))/B(1)
         B12 = (B2(1) - W2(1))/B(1)
         ID  = 1
      ENDIF
C
      E21 = EPS2
      E22 = EPS2
      IF (B12.GT.0.) THEN
         E21 = (EPS2*CX(2,2,2) + EPS1*(CX(1,2,2)-CX(1,2,1))*B12)/
     1         (B11*CX(2,2,2) + B12*CX(2,2,1))
         E22 = (EPS2 - B11*E21)/B12
      ENDIF
C
      MAXSEG = 2
      SN= SQRT(N)
      SNRAT = SN/SQRT(FNORIG)
C BEG JULY 1996
      IF (ISTIF(1).EQ.4.AND.B20(1).GT.W20(1)) THEN
C END JULY 1996
         MAXSEG = 3
      ENDIF
      IF (ISTIF(1).EQ.0) MAXSEG = 1
C BEG MAY 1997
      IF (IZSTIF(1).EQ.1) MAXSEG = 5
C END MAY 1997
      FIABT = 1 - IABT
C BEG JAN 1995
      FFIABT= FLOAT(IABT)
C END JAN 1995
      N22 = N2SKIN
      FACTR1 = 0.
      FACTR2 = 0.
      ISTEP = 1
C BEG MAY 1997
      IF (IZSTIF(1).EQ.1) ISTEP = 4
C END MAY 1997
      IF (ISTIF(1).EQ.5) THEN
         MAXSEG = 4
C BEG NOV 1995
         IF (B2(1).GT.0.) MAXSEG = 6
C END NOV 1995
C BEG JULY 1995
         N22 = RESULT(2,1,1) + DELFCX(2,1)
     1                       - PERT2*CX(2,2,1)/(CX(2,2,1)+CX(2,2,3))
C END JULY 1995
         FACTR1 = DNEUTX
         FACTR2 = DNEUTY
         ISTEP = 2
C BEG NOV 1995
         IF (B2(1).GT.0.) ISTEP = 1
C END NOV 1995
      ENDIF
C
      CUR4M = EPSLOD(4)
      CUR5M = EPSLOD(5)
      CUR6M = EPSLOD(6)
C BEG NOV 1995
      FAMPL = AMPLIT
      IF (AMPLIT.GT.10.) FAMPL = 10.
      CURCG4= (EPSLOD(4) + FIABT*ETHERM(4))*(1.+PERT1*FAMPL)
C END NOV 1995
      CURCG5=  EPSLOD(5) + FIABT*ETHERM(5)
      CURCG6= EPSLOD(6) + FIABT*ETHERM(6)
      EYCURM= -(CX(2,4,1)*CUR4M +CX(2,5,1)*CUR5M)/CX(2,2,1)
      NXCUR =   CX(1,4,1)*CURCG4     + CX(1,5,1)*CURCG5
      NYCUR =   CX(2,4,1)*CURCG4     + CX(2,5,1)*CURCG5
C
      DO 100 ISEG =1,MAXSEG,ISTEP
C
C BEG NOV 1995
      IF (ISTIF(1).EQ.5.AND.(ISEG.EQ.2.OR.ISEG.EQ.4)) GO TO 100
C     IF (ISTIF(1).EQ.5.AND.ISEG.EQ.3) THEN
      IF (ISTIF(1).EQ.5) THEN
         N22 = RESULT(2,1,1) + DELFCX(2,1)
     1                       - PERT2*CX(2,2,1)/(CX(2,2,1)+CX(2,2,3))
         FACTR1 = DNEUTX
         FACTR2 = DNEUTY
      ENDIF
      IF (ISTIF(1).EQ.5.AND.(ISEG.EQ.3.OR.ISEG.EQ.6)) THEN
C END NOV 1995
         FACTR1 = HHH(1) + DNEUTX
         FACTR2 = HHH(1) + DNEUTY
C BEG JULY 1995
         N22 = RESULT(2,3,1) + DELFCX(2,3)
     1                       - PERT2*CX(2,2,3)/(CX(2,2,1)+CX(2,2,3))
C END JULY 1995
      ENDIF
C
C BEG JULY 1996
C BEG JUN 2004
      CALL IDSEG(ISTIF(1),ISEG,NSEGB5,B20(1),W20(1),J,IFAY)
C END JUN 2004
C END JULY 1996
      NU12 = CX(1,2,J)/CX(2,2,J)
      I5I = I5(ISEG)    
C     START LOOP OVER CURRENT SEGMENT MESH POINTS.    
C    
      DO 50 I=1,I5I    
C
      IF (ISTIF(1).NE.4) WPB = W(I,ISEG) + AL*W(I,ISEG)**3
      IF (ISTIF(1).EQ.4) WPB = W(I,ISEG) + AL*W(I,ISEG)**2
      W0PB= W0*W(I,ISEG)
      E1VAR(I,ISEG) = EPS1 + EPSFIX(1,J,1) + FACTR1*CURCG4
      E12VAR(I,ISEG)= EPS12+ EPSFIX(3,J,1) - FACTR1*CURCG6
      IF (ISEG.EQ.1) THEN
         E2VAR(I,ISEG) = E21 + EPSFIX(2,J,1) + FACTR2*CURCG5
      ELSE
         E2VAR(I,ISEG) = E22 + EPSFIX(2,J,1) + FACTR2*CURCG5
      ENDIF
      EXMECH = EPS1 + N*(F*F*WPB**2 +2.*W0PB*F*WPB) +FACTR1*CURCG4
C     EYMIX  = (N22 - CX(1,2,J)*EXMECH)/CX(2,2,J)
      EYMIX  = EPS2S + (EPS1-EXMECH)*CX(1,2,J)/CX(2,2,J)
     1        + EYCURM
      EX(I,ISEG) = EXMECH + EPSFIX(1,J,1)
      EY(I,ISEG) = EYMIX  + EPSFIX(2,J,1)
      NXVAR(I,ISEG) = CX(1,1,J)*EX(I,ISEG) + CX(1,2,J)*EY(I,ISEG)
     1               + NXCUR
     1               - THERMX(1,J)
C BEG APR 1996
      IF (ISTIF(1).EQ.5.AND.IFAYT(1).EQ.1
     1                 .AND.(ISEG.EQ.5.OR.ISEG.EQ.6))
     1 NXVAR(I,ISEG)= NXVAR(I,ISEG) + CX(1,1,2)*EX(I,ISEG) 
     1               - THERMX(1,2)
C END APR 1996
      NYVAR(I,ISEG) = CX(1,2,J)*EX(I,ISEG) + CX(2,2,J)*EY(I,ISEG)
     1               + NYCUR
     1               - THERMX(2,J) 
      IF (ISTIF(1).EQ.5)
C BEG JULY 1995
     1         NXYVAR(I,ISEG) = RESEIG(3,J,1) +DELFCX(3,J)
     1                                        + PERT3*CX(3,3,J)/CS(3,3)
C END JULY 1995
C
C BEG JUN 1996
C     WRITE(8,*)' EPS1,EPS2,EPS2S=',EPS1,EPS2,EPS2S
C     WRITE(8,*)' I,ISEG,EXMECH,EYMIX=',I,ISEG,EXMECH,EYMIX
C     WRITE(8,*)' J,EPSFIX(1,J,1),EPSFIX(2,J,1)=',
C    1            J,EPSFIX(1,J,1),EPSFIX(2,J,1)
C     WRITE(8,*)' NXVAR(I,ISEG),NYVAR(I,ISEG),NXYVAR(I,ISEG)=',
C    1            NXVAR(I,ISEG),NYVAR(I,ISEG),NXYVAR(I,ISEG)
C END JUN 1996
   50 CONTINUE
  100 CONTINUE
C
      ISTART = MAXSEG + 1
      IEND   = NSEGB5 - (MAXSEG-1)
      IF (MAXSEG.EQ.1) IEND = 1
C BEG MAY 1997
      IF (IZSTIF(1).EQ.1) THEN
         ISTART = 2
         IEND = 4
      ENDIF
C END MAY 1997
      FACTR1 = 0.
      FACTR2 = 0.
      IWEB  = 3
      ISTEP = 1
      FACTSH= 0.
      IF (ISTIF(1).EQ.5) THEN
         ISTART = 2
         IEND = 4
         IWEB = 2
         FACTR1 = DNEUTX
         FACTR2 = DNEUTY
         ISTEP = 2
C BEG NOV 1995
         FACTSH= 0.5*B(1)/SQRT(HHH(1)**2 + .25*(B(1)-2.*B2(1))**2)
C END NOV 1995
      ENDIF
      IWEBM = IWEB - 1
      IWEBP = IWEB + 1
      IF (ISTART.GT.NSEG(1)) GO TO 300
C
      DO 200 ISEG =ISTART,IEND,ISTEP
C
C BEG JULY 1996
C BEG JUN 2004
      CALL IDSEG(ISTIF(1),ISEG,NSEGB5,B20(1),W20(1),J,IFAY)
C END JUN 2004
C END JULY 1996
      I5I = I5(ISEG)    
      I52 = I5I/2 + 1
      THX1 = THERMX(1,J)
      THX2 = THERMX(2,J)
      CX11 = CX(1,1,J)
      CX12 = CX(1,2,J)
      CX22 = CX(2,2,J)
      CX33 = CX(3,3,J)
      NU12 = CX12/CX22
      EPSF1= EPSFIX(1,J,1)
      EPSF2= EPSFIX(2,J,1)
      FACTHM = 1.
C
C     START LOOP OVER CURRENT SEGMENT MESH POINTS.    
C     
      DO 150 I=1,I5I
C     
      W0VAR = W0*W(I,ISEG)
      WPB = W(I,ISEG)
      IF (ISTIF(1).EQ.5) WPB = W(I,ISEG) +AL*W(I,ISEG)**3
C
      IKOUNT = I
      IF (J.EQ.IWEB.AND.ISEG.GT.IWEBP) IKOUNT = I5I - I + 1
      IF (J.EQ.IWEB.AND.IMTEMP.EQ.1.AND.TEMP(IWEBM).NE.TEMP(IWEBP)) THEN
         THX1 = THRMX3(1,IKOUNT)
         THX2 = THRMX3(2,IKOUNT)
         CX11 = CX3(1,1,IKOUNT)
         CX12 = CX3(1,2,IKOUNT)
         CX22 = CX3(2,2,IKOUNT)
         CX33 = CX3(3,3,IKOUNT)
         NU12 = CX12/CX22
         EPSF1= ETHERM(1) - Z(I,ISEG)*ETHERM(4)
     1          + ETRMX3(1,IKOUNT) - ESMRX3(1,IKOUNT)
         EPSF2= THRMX3(2,IKOUNT)/CX22 - NU12*EPSF1
         EPSF3= ETHERM(3) + Z(I,ISEG)*ETHERM(6)
     1          + ETRMX3(3,IKOUNT) - ESMRX3(3,IKOUNT)
         FACTHM = 0.
      ENDIF
C BEG JAN 1995
C BEG NOV 1995
C     CURCHG = (EPSLOD(4) + FACTHM*FIABT*ETHERM(4))*(1.+PERT1*FAMPL)
      CURCHG = (EPSLOD(4)-(1.-FACTHM)*FFIABT*ETHERM(4)
     1                    + FACTHM*FIABT*ETHERM(4))*(1.+PERT1*FAMPL)
C END NOV 1995
C END JAN 1995
      CURCH3 = EPSLOD(6) + FACTHM*FIABT*ETHERM(6)
      E1VAR(I,ISEG) = EPS1 + EPSF1 - Z(I,ISEG)*CURCHG +FACTR1*CURCHG
      E12VAR(I,ISEG)= FACTSH*(EPS12 + EPSF3 - Z(I,ISEG)*CURCH3
     1               -FACTR1*CURCH3)
     1            +FACTHM*Z(I52,ISEG)*ETHERM(4)
C    1          +FACTHM*Z(I52,ISEG)*ETHERM(4)-2.*SN*SNRAT*F*V(I,ISEG)
      E2VAR(I,ISEG) = - NU12*E1VAR(I,ISEG) + EPSF2
     1                + NU12*EPSF1
C     EX(I,ISEG) = EPS1 -2.*SN*SNRAT*F*V(I,ISEG)+EPSF1+FACTR1*CURCHG
      EX(I,ISEG) = EPS1                     + EPSF1 + FACTR1*CURCHG
     1  - Z(I,ISEG)*CURCHG + N*F*F*(WPB**2 + U(I,ISEG)**2)
     1  + FACTHM*Z(I52,ISEG)*ETHERM(4) + N*2.*W0VAR*F*W(I,ISEG)
      EY(I,ISEG) =  - NU12*EX(I,ISEG) + EPSF2 + NU12*EPSF1
      NXVAR(I,ISEG) = CX11*EX(I,ISEG) + CX12*EY(I,ISEG) - THX1
      NYVAR(I,ISEG) = CX12*EX(I,ISEG) + CX22*EY(I,ISEG) - THX2
      IF (ISTIF(1).EQ.5) 
C BEG JULY 1995
     1     NXYVAR(I,ISEG)= RESEIG(3,J,1) +DELFCX(3,J)
     1                                   +PERT3*FACTSH*CX33/CS(3,3)
C END JULY 1995
C     WRITE(8,*)' I,ISEG,CURCHG,FACTHM,FFIABT=',
C    1            I,ISEG,CURCHG,FACTHM,FFIABT
C     WRITE(8,*)' I,ISEG,F,W(I,ISEG),U(I,ISEG)=',
C    1            I,ISEG,F,W(I,ISEG),U(I,ISEG)
C     WRITE(8,*)' E1VAR(I,ISEG),NXVAR(I,ISEG),EX(I,ISEG),EY(I,ISEG)=',
C    1            E1VAR(I,ISEG),NXVAR(I,ISEG),EX(I,ISEG),EY(I,ISEG)
  150 CONTINUE
  200 CONTINUE
  300 CONTINUE
C
      IF (MAXSEG.EQ.3) THEN
         ISEG = NSEGB5 - 1
         I5I  = I5(2)
         DO 350 I = 1,I5I
            J = I5I + 1 - I
            NXVAR(I,ISEG) = NXVAR(J,2)
            NYVAR(I,ISEG) = NYVAR(J,2)
            E1VAR(I,ISEG) = E1VAR(J,2)
            E2VAR(I,ISEG) = E2VAR(J,2)
  350    CONTINUE
      ENDIF
  355 CONTINUE
C BEG MAY 1997
      IF (ISTIF(1).NE.5.AND.IZSTIF(1).EQ.0) THEN
C END MAY 1997
         I5I = I5(1)
         DO 360 I=1,I5I
            J = I5I + 1 - I
            NXVAR(I,NSEGB5) = NXVAR(J,1)
            E1VAR(I,NSEGB5) = E1VAR(J,1)
            NYVAR(I,NSEGB5) = NYVAR(J,1)
            E2VAR(I,NSEGB5) = E2VAR(J,1)
  360    CONTINUE
      ENDIF
C
C BEG MAY 1997
      IF (NPRT.LT.3) GO TO 810
      WRITE(IFILE8,550)   
  550 FORMAT(//
     1' IN VARSTF: PARAMETERS NEEDED FOR AXIAL TANGENT STIFFNESS'/
     1' OF PANEL BETWEEN RINGS...')
C END MAY 1997
C     
      DO 800 ISEG = 1,NSEGB5    
      I5I = I5(ISEG)    
      WRITE(IFILE8,*)' (END SHORTENING)/L IN SEGMENT NO.',ISEG
      WRITE(IFILE8,660) (E1VAR(I,ISEG),I=1,I5I)     
  660 FORMAT(' E1VAR(I)= '/(1P,13E10.2)) 
      WRITE(IFILE8,*)' AXIAL STRESS RESULTANT IN SEGMENT NO.',ISEG
      WRITE(IFILE8,760) (NXVAR(I,ISEG),I=1,I5I)     
  760 FORMAT(' NXVAR(I)= '/(1P,13E10.2)) 
      WRITE(IFILE8,*)' AVERAGE TRANSVERSE STRAIN IN SEGMENT NO.',ISEG
      WRITE(IFILE8,670) (E2VAR(I,ISEG),I=1,I5I)     
  670 FORMAT(' E2VAR(I)= '/(1P,13E10.2)) 
      WRITE(IFILE8,*)' HOOP STRESS RESULTANT IN SEGMENT NO.',ISEG
      WRITE(IFILE8,770) (NYVAR(I,ISEG),I=1,I5I)     
  770 FORMAT(' NYVAR(I)= '/(1P,13E10.2)) 
  800 CONTINUE    
  810 CONTINUE    
C
      RETURN
      END
C
C
C
C
C=DECK      AXLSTF
      SUBROUTINE AXLSTF(MAXSEG,CX,INDX,NPRT,NXNEW1,NXNEW2,NXVAR,
     1    E1NEW1,E2NEW1,E1NEW2,E2NEW2,E1VAR,E2VAR,C11TAN,C12TAN,
     1    C22TAN,C21TAN,CTAN3,C33TAN,CMIN,IFILE,TEMP,IMTEMP,
     1    NXYNEW,E12NEW,NXYVAR,E12VAR,C13TAN,C23TAN,
     1    NXNEW3,NYNEW3,E1NEW3,E2NEW3,CTAN,CS,F,IFILE8,PBCTAN)
C
C  Purpose is to
C  calculate the components of the tangent stiffness matrix
C  of the locally deformed panel.
C
      COMMON/DEFSTF/STIFL,STIFM,STIFMM
      COMMON/THICK/TX(5),TY(5)
C BEG APR 2007
      COMMON/CSKINX/CSKIN(6,6),TSKINX(5),TSKINY(5)
C END APR 2007
      COMMON/GEOM2/B(2),B2(2),H(2),W(2),W2(2)     
      COMMON/GEOM3/ISTIF(2),NLAYER(4,2),NSEG(2),INTEXT(2)  
C BEG MAY 1997
      COMMON/IZSTIX/IZSTIF(2)
C END MAY 1997
C BEG JULY 1996
      COMMON/GEOM0/B0(2),B20(2),H0(2),WW0(2),W20(2)
C END JULY 1996
C BEG APR 1996
      COMMON/GEOM6/IFAY(2),ITRTOT,IRESET,NLOADS,NSTEPS,WMAXXX,NCROSS,
     1       NOPLOT,KMAX,ILAYPL,XMAX,XMIN,YMAX,YMIN,N3DPLT,NOBJ,NSTRNS,
     1       NPLTST,NABSCI,IDIAG,ITRALL,IFAYT(2),IBEAM,IMISCL(5)
C END APR 1996
      COMMON/SEGS/NSEGB5,M2,I5(95),I2,I2G
      DIMENSION NXNEW1(23,8),E1NEW1(23,8),E2NEW1(23,8)
      DIMENSION NXNEW2(23,8),E1NEW2(23,8),E2NEW2(23,8)
      DIMENSION NXVAR(23,8),E1VAR(23,8),E2VAR(23,8)
      DIMENSION C11TAN(23,8),C12TAN(23,8),CX(6,6,5),CMIN(5)
      DIMENSION C22TAN(23,8),C21TAN(23,8),C33TAN(23,8)
      DIMENSION F1(23),F2(23),F3(23)
      DIMENSION NXYNEW(23,8),E12NEW(23,8),NXYVAR(23,8),E12VAR(23,8)
      DIMENSION C13TAN(23,8),C23TAN(23,8)
      DIMENSION NXNEW3(23,8),NYNEW3(23,8),E1NEW3(23,8),E2NEW3(23,8)
      DIMENSION CTAN(3,3),CS(6,6),C11T(3),C12T(3),C22T(3),WIDTH(3)
      DIMENSION PBCTAN(*),C33T(3)
      REAL NXYNEW,NXYVAR,NXNEW3,NYNEW3
      COMMON/WEBTH1/CX3(6,6,11),CY3(6,6,11),THRMX3(6,11),THRMY3(6,11)
      DIMENSION TEMP(*)
      REAL NXNEW1,NXNEW2,NXVAR,NU12
      DOUBLE PRECISION DN1,DN2,DE11,DE12,DE21,DE22,DEL,C11,C12
      DOUBLE PRECISION DN3,DE13,DE23,DE33
      LOGICAL ISKIN,ILOG1
C
      IMAX = NSEGB5 - 1
C BEG JULY 1996
      IF (ISTIF(1).EQ.4.AND.B20(1).GT.W20(1)) IMAX = NSEGB5 - 2
C END JULY 1996
C
      IF (INDX.EQ.2) THEN
         STIFL = 0.
         STIFM = 0.
         STIFMM= 0.
      ENDIF
C
      IWEB = 3
      IFLNG = 4
      IF (ISTIF(1).EQ.5) THEN
         IWEB = 2
         IFLNG= 2
         IMAX = NSEGB5
      ENDIF
      IWEBM = IWEB - 1
      IWEBP = IWEB + 1
C
      DO 100 ISEG =1,NSEGB5
      IF (ISTIF(1).NE.5) ISKIN = ISEG.LE.MAXSEG.OR.ISEG.GT.IMAX
C BEG MAY 1997
      IF (IZSTIF(1).EQ.1) ISKIN = ISEG.EQ.1.OR.ISEG.EQ.5
C END MAY 1997
C BEG NOV 1995
C     IF (ISTIF(1).EQ.5) ISKIN = ISEG.EQ.1.OR.ISEG.EQ.3
      IF (ISTIF(1).EQ.5) ISKIN =
     1   ISEG.EQ.1.OR.ISEG.EQ.3.OR.ISEG.EQ.5.OR.ISEG.EQ.6
C END NOV 1995
C BEG JULY 1996
C BEG JUN 2004
      CALL IDSEG(ISTIF(1),ISEG,NSEGB5,B20(1),W20(1),J,IFAY)
C END JUN 2004
C END JULY 1996
      I5I = I5(ISEG)
      CX11 = CX(1,1,J)
      CX12 = CX(1,2,J)
      CX22 = CX(2,2,J)
      CX33 = CX(3,3,J)
C BEG APR 1996
      IF (ISTIF(1).EQ.5.AND.IFAYT(1).EQ.1
     1                 .AND.(ISEG.EQ.5.OR.ISEG.EQ.6))
     1   CX11 = CX11 + CX(1,1,2)
C END APR 1996
      NU12 = CX12/CX22
C
      DO 50 I=1,I5I    
C
      IKOUNT = I
      IF (J.EQ.IWEB.AND.ISEG.GT.IWEBP) IKOUNT = I5I - I + 1
      IF (J.EQ.IWEB.AND.IMTEMP.EQ.1.AND.TEMP(IWEBM).NE.TEMP(IWEBP)) THEN
         CX11 = CX3(1,1,IKOUNT)
         CX12 = CX3(1,2,IKOUNT)
         CX22 = CX3(2,2,IKOUNT)
         CX33 = CX3(3,3,IKOUNT)
         NU12 = CX12/CX22
      ENDIF
C
      IF (INDX.EQ.1) THEN
         C11 = CX11
         C12 = CX12
      ELSE
         C11 = CX12
         C12 = CX22
      ENDIF
C
      IF (ISKIN) THEN
         DN1 = NXNEW1(I,ISEG) - NXVAR(I,ISEG)
         DN2 = NXNEW2(I,ISEG) - NXVAR(I,ISEG)
         DE11= E1NEW1(I,ISEG) - E1VAR(I,ISEG)
         DE12= E1NEW2(I,ISEG) - E1VAR(I,ISEG)
         DE21= E2NEW1(I,ISEG) - E2VAR(I,ISEG)
         DE22= E2NEW2(I,ISEG) - E2VAR(I,ISEG)
         DEL = DE11*DE22 - DE12*DE21
         IF (DEL.NE.0.0) THEN
            C11 = (DN1*DE22 -DN2*DE21)/DEL
            C12 = (DN2*DE11 -DN1*DE12)/DEL
         ENDIF
C        IF (ISEG.EQ.1) WRITE(8,*)' INDX,C11,C12=',INDX,C11,C12
C        IF (INDX.EQ.1) C11 = DN1/DE11
C        IF (INDX.EQ.2) C12 = DN2/DE22
         IF (ISTIF(1).EQ.5) THEN
C           DN3 = NXYNEW(I,ISEG) - NXYVAR(I,ISEG)
C           DE33= E12NEW(I,ISEG) - E12VAR(I,ISEG)
C           C33TAN(I,ISEG) = DN3/DE33
            C33TAN(I,ISEG) = CX(3,3,J)*CTAN(3,3)/CS(3,3)
         ENDIF
C        WRITE(8,*)' WE ARE IN THE "ISKIN" SECTION (ISEG = 1 OR 3)'
C        WRITE(8,*)' INDX,ISEG,I,DEL,C11,C12=',INDX,ISEG,I,DEL,C11,C12
C        WRITE(8,*)' E1VAR(I,ISEG),E2VAR(I,ISEG),E12VAR(I,ISEG)  =',
C    1               E1VAR(I,ISEG),E2VAR(I,ISEG),E12VAR(I,ISEG)
C        WRITE(8,*)' E1NEW1(I,ISEG),E1NEW2(I,ISEG),E12NEW(I,ISEG)=',
C    1               E1NEW1(I,ISEG),E1NEW2(I,ISEG),E12NEW(I,ISEG)
C        WRITE(8,*)' E2NEW1(I,ISEG),E2NEW2(I,ISEG)               =',
C    1               E2NEW1(I,ISEG),E2NEW2(I,ISEG)
C        WRITE(8,*)' NXVAR(I,ISEG),NXYVAR(I,ISEG)                =',
C    1               NXVAR(I,ISEG),NXYVAR(I,ISEG)
C        WRITE(8,*)' NXNEW1(I,ISEG),NXNEW2(I,ISEG),NXYNEW(I,ISEG)=',
C    1               NXNEW1(I,ISEG),NXNEW2(I,ISEG),NXYNEW(I,ISEG)
      ELSE
C        WRITE(8,*)' WE ARE IN THE STRINGER BRANCH (ISEG = 2 OR 4)
C        WRITE(8,*)' INDX,ISEG,I=',INDX,ISEG,I
C        WRITE(8,*)' E1VAR(I,ISEG),E2VAR(I,ISEG),E12VAR(I,ISEG)  =',
C    1               E1VAR(I,ISEG),E2VAR(I,ISEG),E12VAR(I,ISEG)
C        WRITE(8,*)' E1NEW1(I,ISEG),E1NEW2(I,ISEG),E12NEW(I,ISEG)=',
C    1               E1NEW1(I,ISEG),E1NEW2(I,ISEG),E12NEW(I,ISEG)
C        WRITE(8,*)' E2NEW1(I,ISEG),E2NEW2(I,ISEG)               =',
C    1               E2NEW1(I,ISEG),E2NEW2(I,ISEG)
C        WRITE(8,*)' NXVAR(I,ISEG),NXYVAR(I,ISEG)                =',
C    1               NXVAR(I,ISEG),NXYVAR(I,ISEG)
C        WRITE(8,*)' NXNEW1(I,ISEG),NXNEW2(I,ISEG),NXYNEW(I,ISEG)=',
C    1               NXNEW1(I,ISEG),NXNEW2(I,ISEG),NXYNEW(I,ISEG)
         IF (INDX.EQ.1) THEN
            IF (I.EQ.1.AND.ISEG.LE.IFLNG) CMIN(J) = CX(1,1,J)
            DN1 = NXNEW1(I,ISEG) - NXVAR(I,ISEG)
            DN2 =  0.0
            DE11= E1NEW1(I,ISEG) - E1VAR(I,ISEG)
            IF (ISTIF(1).EQ.5) THEN
C              DN3 = NXYNEW(I,ISEG) - NXYVAR(I,ISEG)
C              DE33= E12NEW(I,ISEG) - E12VAR(I,ISEG)
C              C33TAN(I,ISEG) = DN3/DE33
               C33TAN(I,ISEG) = CX(3,3,J)*CTAN(3,3)/CS(3,3)
            ENDIF
C           WRITE(8,*)' I,ISEG,DN1,DE11=', I,ISEG,DN1,DE11
C           WRITE(8,*)' NXNEW1(I,ISEG),NXVAR(I,ISEG)=',
C    1                  NXNEW1(I,ISEG),NXVAR(I,ISEG)
C           WRITE(8,*)' E1NEW1(I,ISEG),E1VAR(I,ISEG)=',
C    1                  E1NEW1(I,ISEG),E1VAR(I,ISEG)
            DETC = CX11*CX22 - CX12**2
            DE12 = -CX12/DETC
            DE21 = E2NEW1(I,ISEG) - E2VAR(I,ISEG)
            DE22 = CX11/DETC
            DEL = DE11*DE22 - DE12*DE21
            IF (DEL.NE.0.0) THEN
               C11 = (DN1*DE22 -DN2*DE21)/DEL
               C12 = (DN2*DE11 -DN1*DE12)/DEL
            ENDIF
            SNGC11 = C11
C           IF (J.NE.IWEB) CMIN(J) = MIN(CMIN(J),SNGC11)
C           IF (J.EQ.IWEB.AND.TEMP(IWEBM).EQ.TEMP(IWEBP))
C    1         CMIN(J) = MIN(CMIN(J),SNGC11)
         ENDIF
      ENDIF
      IF (INDX.EQ.1) THEN
         C11TAN(I,ISEG) = C11
         C12TAN(I,ISEG) = C12
         IF (ISTIF(1).EQ.5) THEN
C BEG APR 1996
            C112 = CX(1,1,J)
            IF (IFAYT(1).EQ.1.AND.(ISEG.EQ.5.OR.ISEG.EQ.6))
     1         C112 = CX(1,1,J) + CX(1,1,2)
            C11TAN(I,ISEG) = C112*CTAN(1,1)/CS(1,1)
C END APR 1996
            C12TAN(I,ISEG) = 0.
            IF (CS(1,2).GT.0.)
     1        C12TAN(I,ISEG) = CX(1,2,J)*CTAN(1,2)/CS(1,2)
            IF (F.EQ.0.) THEN
               C11TAN(I,ISEG) = CX(1,1,J)
C BEG APR 1996
               IF (IFAYT(1).EQ.1.AND.(ISEG.EQ.5.OR.ISEG.EQ.6))
     1            C11TAN(I,ISEG) = CX(1,1,J) + CX(1,1,2)
C END APR 1996
               C12TAN(I,ISEG) = CX(1,2,J)
            ENDIF
         ENDIF
C        IF (IFAY(1).EQ.1.AND.ISEG.EQ.3) GO TO 20
         IF (J.NE.IWEB) THEN
C BEG APR 1996
            C112 = CX(1,1,J)
            IF (ISTIF(1).EQ.5.AND.IFAYT(1).EQ.1
     1                       .AND.(ISEG.EQ.5.OR.ISEG.EQ.6))
     1          C112 = CX(1,1,J) + CX(1,1,2)
            IF (C11TAN(I,ISEG).GT.C112)  C11TAN(I,ISEG)= C112
C END APR 1996
            IF (C12TAN(I,ISEG).GT.CX(1,2,J)) C12TAN(I,ISEG)=CX(1,2,J)
         ENDIF
         IF (J.EQ.IWEB.AND.TEMP(IWEBM).EQ.TEMP(IWEBP)) THEN
            IF (C11TAN(I,ISEG).GT.CX(1,1,J)) C11TAN(I,ISEG)=CX(1,1,J)
            IF (C12TAN(I,ISEG).GT.CX(1,2,J)) C12TAN(I,ISEG)=CX(1,2,J)
         ENDIF
   20    CONTINUE
      ELSE
         IF (ISKIN) THEN
            C22TAN(I,ISEG) = C12
            C21TAN(I,ISEG) = C11
            IF (ISTIF(1).EQ.5) THEN
               C22TAN(I,ISEG) = CX(2,2,J)*CTAN(2,2)/CS(2,2)
               C21TAN(I,ISEG) = CX(1,2,J)*CTAN(1,2)/CS(1,2)
               IF (F.EQ.0.) THEN
                  C22TAN(I,ISEG) = CX(2,2,J)
                  C21TAN(I,ISEG) = CX(1,2,J)
               ENDIF
            ENDIF
C           IF (IFAY(1).EQ.1.AND.ISEG.EQ.3) GO TO 30
            IF (C22TAN(I,ISEG).GT.CX(2,2,J)) C22TAN(I,ISEG)=CX(2,2,J)
            IF (C21TAN(I,ISEG).GT.CX(1,2,J)) C21TAN(I,ISEG)=CX(1,2,J)
   30       CONTINUE
            IF (ISTIF(1).NE.5) C33TAN(I,ISEG) = CTAN3
         ELSE
            C22TAN(I,ISEG) = CX22
            C21TAN(I,ISEG) = C12TAN(I,ISEG)
            IF (ISTIF(1).NE.5) C33TAN(I,ISEG) = CX33
         ENDIF
      ENDIF
C 
      IF (INDX.EQ.2) THEN
         IF (C11TAN(I,ISEG).LT.(0.1*CX(1,1,J)))
     1       C11TAN(I,ISEG)=0.1*CX(1,1,J)
         IF (C22TAN(I,ISEG).LT.(0.1*CX(2,2,J)))
     1       C22TAN(I,ISEG)=0.1*CX(2,2,J)
         C12TAN(I,ISEG) = 0.5*(C12TAN(I,ISEG) + C21TAN(I,ISEG))
         IF (C12TAN(I,ISEG).LT.0.0) C12TAN(I,ISEG) = 0.0
         IF (ISTIF(1).NE.5) THEN
            IF (ABS(C12TAN(I,ISEG)).GT.(NU12*C22TAN(I,ISEG)))
     1         C12TAN(I,ISEG) = NU12*C22TAN(I,ISEG)
            C21TAN(I,ISEG) = C12TAN(I,ISEG)
         ENDIF
      ENDIF
C
   50 CONTINUE
C
      IF (INDX.EQ.1) THEN
         IF (J.EQ.IWEB.AND.ISEG.LE.IWEBP) THEN
            FI5 = I5(ISEG) - 1
            DS = 1./FI5
            CMIN(IWEB) = 0.
            CALL SIMPSN(IFILE8,I5(ISEG),DS,C11TAN(1,ISEG),CMIN(IWEB))
            IF (CMIN(IWEB).LT.0.0) THEN
               DO 60 I = 1,I5I
                  II = I5I - I
                  IF (C11TAN(II,ISEG).GT.0.0) THEN
                     CMIN(IWEB)=C11TAN(II,ISEG)
                     GO TO 65
                  ENDIF
   60          CONTINUE
   65          CONTINUE
               SMALL = 0.09*CX(1,1,IWEB)
               IF (CMIN(IWEB).LT.SMALL) CMIN(IWEB) = SMALL
            ENDIF
         ENDIF
C
         IF (J.EQ.IFLNG.AND.ISEG.GT.3) THEN
            FI5 = I5(ISEG) - 1
            DS = 1./FI5
            CMIN(4) = 0.
            CALL SIMPSN(IFILE8,I5(ISEG),DS,C11TAN(1,ISEG),CMIN(4))
C           AVE = 0.
C           DO 70 I = 1,I5I
C              AVE = AVE + C11TAN(I,ISEG)
C  70       CONTINUE
C           CMIN(4) = AVE/FLOAT(I5I)
            SMALL = 0.09*CX(1,1,4)
            IF (CMIN(4).LT.SMALL) CMIN(4) = SMALL
         ENDIF
      ENDIF
C
C NEXT, CALCULATE EFFECTIVE STIFFNESS QUANTITIES STIFL,STIFM,STIFMM
C REQUIRED FOR COMPUTATION OF SMEARED CIJ INCLUDING STRINGER DEFORMATION.
C
      IF (INDX.EQ.2) THEN
         FN  = 1.
         CTH = 1.
C BEG APR 2007
C        ZSTART = TX(2)/2
         ZSTART = TSKINX(2)/2.
C END APR 2007
         IF (ISTIF(1).EQ.5) ZSTART = 0.
C BEG MAY 1997
         IF (IZSTIF(1).EQ.1) ZSTART = 0.
C END MAY 1997
         S   = H(1)
         IF (ISTIF(1).GE.4) THEN
            S = SQRT(H(1)**2 + (W2(1)-W(1))**2/4.)
C BEG NOV 1995
            IF (ISTIF(1).EQ.5) S=SQRT(H(1)**2+.25*(B(1)-2.*B2(1))**2)
C END NOV 1995
            CTH = H(1)/S
            IF (ISTIF(1).EQ.4) FN = 2.
         ENDIF
         ILOG1 = J.EQ.IWEB.AND.ISEG.LE.IWEBP
         IF (ISTIF(1).EQ.5) ILOG1 = J.EQ.IWEB
         IF (ILOG1) THEN
C
C  GET WEB QUANTITITES..
C
            DS = S/(3.*B(1)*FLOAT(I5I-1))
            DZ = H(1)/FLOAT(I5I-1)
            DO 80 I = 1,I5I
               FI1 = I - 1
               IF (ISTIF(1).EQ.5) FI1 = I5I - I
               ZI = -(ZSTART +FI1*DZ)
               ET3 = C11TAN(I,ISEG) -C12TAN(I,ISEG)**2/C22TAN(I,ISEG)
               SMALL = 0.05*CX(1,1,IWEB)
               IF (ET3.LT.SMALL) ET3 = SMALL
               DSTIF = FN*ET3
               F1(I) =  DSTIF
               F2(I) = -DSTIF*ZI
               F3(I) =  DSTIF*ZI*ZI
   80       CONTINUE
C
C           WRITE(8,'(A,/,I2,1P6E12.4,/,(1P6E12.4))')
C    1          ' WEB:ISEG,STIFL,FN,ET3,DSTIF,S,DS,(F1(I),I=1,I5I)=',
C    1                ISEG,STIFL,FN,ET3,DSTIF,S,DS,(F1(I),I=1,I5I)
            IC = I5I - 1
            DO 85 I = 1,IC,2
              STIFL = STIFL  +(F1(I) +4.*F1(I+1) +F1(I+2))*DS
              STIFM = STIFM  +(F2(I) +4.*F2(I+1) +F2(I+2))*DS
              STIFMM= STIFMM +(F3(I) +4.*F3(I+1) +F3(I+2))*DS
   85       CONTINUE
C           WRITE(8,*)' STIFL,STIFM,STIFMM=',STIFL,STIFM,STIFMM
         ENDIF
C
C BEG APR 1996
         IF (J.EQ.IWEBP.AND.ISEG.LT.6) THEN
C END APR 1996
C
C  GET FLANGE QUANTITIES...
C
            IF (ISTIF(1).NE.5) DS = W(1)/(3.*B(1)*FLOAT(I5I-1))
            IF (ISTIF(1).EQ.5) DS = B(1)/(3.*B(1)*FLOAT(I5I-1))
            ZI  = -(ZSTART + H(1))
            DO 90 I = 1,I5I
               ET4 = C11TAN(I,ISEG) -C12TAN(I,ISEG)**2/C22TAN(I,ISEG)
               IF (ISTIF(1).EQ.5) ET4 = C11TAN(I,ISEG)
               SMALL = 0.05*CX(1,1,IWEBP)
               IF (ET4.LT.SMALL) ET4 = SMALL
               DSTIF = ET4
               F1(I) =  DSTIF
               F2(I) = -DSTIF*ZI
               F3(I) =  DSTIF*ZI*ZI
   90       CONTINUE
C           WRITE(8,'(A,/,I2,1P4E12.4,/,(1P6E12.4))')
C    1       ' FLANGE:ISEG,STIFL,ET4,DSTIF,DS,(F1(I),I=1,I5I)=',
C    1                ISEG,STIFL,ET4,DSTIF,DS,(F1(I),I=1,I5I)
            IC = I5I - 1
            DO 95 I = 1,IC,2
              STIFL = STIFL  +(F1(I) +4.*F1(I+1) +F1(I+2))*DS
              STIFM = STIFM  +(F2(I) +4.*F2(I+1) +F2(I+2))*DS
              STIFMM= STIFMM +(F3(I) +4.*F3(I+1) +F3(I+2))*DS
   95       CONTINUE
C           WRITE(8,*)' STIFL,STIFM,STIFMM=',STIFL,STIFM,STIFMM
         ENDIF
C BEG MAY 1997
         IF (J.EQ.IWEBM.AND.IZSTIF(1).EQ.1) THEN
C
C  GET FAYING FLANGE QUANTITIES FOR THE CASE OF Z-STIFFENER...
C
            DS = B2(1)/(3.*B(1)*FLOAT(I5I-1))
            DO 97 I = 1,I5I
               ETFAY = C11TAN(I,ISEG) -C12TAN(I,ISEG)**2/C22TAN(I,ISEG)
               SMALL = 0.05*CX(1,1,IWEBM)
               IF (ETFAY.LT.SMALL) ETFAY = SMALL
               DSTIF = ETFAY
               F1(I) =  DSTIF
   97       CONTINUE
C           WRITE(8,'(A,/,I2,1P4E12.4,/,(1P6E12.4))')
C    1       ' FAYFLANG:ISEG,STIFL,ETFAY,DSTIF,DS,(F1(I),I=1,I5I)=',
C    1                  ISEG,STIFL,ETFAY,DSTIF,DS,(F1(I),I=1,I5I)
            IC = I5I - 1
            DO 98 I = 1,IC,2
              STIFL = STIFL  +(F1(I) +4.*F1(I+1) +F1(I+2))*DS
   98       CONTINUE
C           WRITE(8,*)' STIFL,STIFM,STIFMM=',STIFL,STIFM,STIFMM
         ENDIF
C END MAY 1997
C
         IF (STIFL.LT.0.0) THEN
            STIFL = 0.
            STIFM = 0.
            STIFMM= 0.
         ENDIF
C
      ENDIF
C
  100 CONTINUE
C
C BEG APR 1996
      IF (ISTIF(1).EQ.5.AND.IFAYT(1).EQ.1) THEN 
         C112  = CX(1,1,2)*B2(1)/B(1)
         STIFL = STIFL + 2.*C112
         STIFM = STIFM + C112*H(1)
         STIFMM= STIFMM+ C112*H(1)**2
      ENDIF
C END APR 1996
      IF (NPRT.LT.3) GO TO 810    
      WRITE(IFILE,550)   
  550 FORMAT(//' TANGENT STIFFNESS OF PANEL MODULE BETWEEN RINGS:')
C     
      DO 800 ISEG = 1,NSEGB5    
      I5I = I5(ISEG)    
      IF (INDX.EQ.1) THEN
         WRITE(IFILE,*)' C11TAN IN SEGMENT NO.',ISEG
         WRITE(IFILE,660) (C11TAN(I,ISEG),I=1,I5I)     
         WRITE(IFILE,*)' C12TAN IN SEGMENT NO.',ISEG
         WRITE(IFILE,660) (C12TAN(I,ISEG),I=1,I5I)     
      ELSE
         WRITE(IFILE,*)' C22TAN IN SEGMENT NO.',ISEG
         WRITE(IFILE,660) (C22TAN(I,ISEG),I=1,I5I)     
         WRITE(IFILE,*)' C21TAN IN SEGMENT NO.',ISEG
         WRITE(IFILE,660) (C21TAN(I,ISEG),I=1,I5I)     
         WRITE(IFILE,*)' C33TAN IN SEGMENT NO.',ISEG
         WRITE(IFILE,660) (C33TAN(I,ISEG),I=1,I5I)     
      ENDIF
  660 FORMAT((1P,13E10.2)) 
  800 CONTINUE    
  810 CONTINUE    
C
      IF (INDX.EQ.2.AND.ISTIF(1).NE.5.AND.ISTIF(1).NE.0) THEN
C
C   INTEGRATE C11TAN, C12TAN, C22TAN, C33TAN TO CALCULATE TANGENT
C   STIFFNESS OF SKIN:
C
         MAXSG = 2
         WIDTH(1) = B(1)-B2(1)
         WIDTH(2) = B2(1)
         WIDTH(3) = 0.
         C11T(3)  = 0.
         C12T(3)  = 0.
         C22T(3)  = 0.
         C33T(3)  = 0.
C BEG MAY 1997
         IF (IZSTIF(1).EQ.1) THEN
            MAXSG = 1
            WIDTH(1) = B(1)
            WIDTH(2) = 0.
            C11T(2)  = 0.
            C12T(2)  = 0.
            C22T(2)  = 0.
         ENDIF
C END MAY 1997
C BEG JULY 1996
         IF (ISTIF(1).EQ.4.AND.B20(1).GT.W20(1)) THEN
C END JULY 1996
            MAXSG = 3
            WIDTH(2) = B2(1) - W2(1)
            WIDTH(3) = W2(1)
         ENDIF
         WTOTAL   = WIDTH(1) + WIDTH(2) + WIDTH(3)
         DO 900 ISEG = 1,MAXSG
            FI5 = I5(ISEG) - 1
            DS = 1./FI5
            C11T(ISEG) = 0.
            CALL SIMPSN(IFILE8,I5(ISEG),DS,C11TAN(1,ISEG),C11T(ISEG))
            C12T(ISEG) = 0.
            CALL SIMPSN(IFILE8,I5(ISEG),DS,C12TAN(1,ISEG),C12T(ISEG))
            C22T(ISEG) = 0.
            CALL SIMPSN(IFILE8,I5(ISEG),DS,C22TAN(1,ISEG),C22T(ISEG))
            C33T(ISEG) = 0.
            CALL SIMPSN(IFILE8,I5(ISEG),DS,C33TAN(1,ISEG),C33T(ISEG))
  900    CONTINUE
C        C11TAV =(C11T(1)*WIDTH(1) +C11T(2)*WIDTH(2) 
C    1                             +C11T(3)*WIDTH(3))/WTOTAL
C        C12TAV =(C12T(1)*WIDTH(1) +C12T(2)*WIDTH(2) 
C    1                             +C12T(3)*WIDTH(3))/WTOTAL
C        C22TAV =(C22T(1)*WIDTH(1) +C22T(2)*WIDTH(2) 
C    1                             +C22T(3)*WIDTH(3))/WTOTAL
         C33TAV =(C33T(1)*WIDTH(1) +C33T(2)*WIDTH(2) 
     1                             +C33T(3)*WIDTH(3))/WTOTAL
         C11SUB = C11T(2)
         C22SUB = C22T(2)
         C12SUB = C12T(2)
C BEG JULY 1996
         IF (ISTIF(1).EQ.4.AND.B20(1).GT.W20(1)) THEN
C END JULY 1996
            RAT = W2(1)/B2(1)
            RAT2= C22T(2)/C22T(3)
            DEN = 1. + RAT2*RAT/(1.-RAT)
            C11SUB =  C11T(2)*(1.-RAT) +C11T(3)*RAT
     1               -RAT*(C12T(2) -C12T(3))**2/(DEN*C22T(3))
            C22SUB = C22T(2)*(1./(1.-RAT))/DEN
            C12SUB = (C12T(2) +C12T(3)*RAT2*RAT/(1.-RAT))/DEN
         ENDIF
C BEG MAY 1997
         IF (IZSTIF(1).EQ.0) THEN
            RAT = B2(1)/B(1)
            RAT2= C22T(1)/C22SUB
            DEN = 1. + RAT2*RAT/(1.-RAT)
            C11TAV =  C11T(1)*(1.-RAT) +C11SUB*RAT
     1               -RAT*(C12T(1) -C12SUB)**2/(DEN*C22SUB)
            C22TAV = C22T(1)*(1./(1.-RAT))/DEN
            C12TAV = (C12T(1) +C12SUB*RAT2*RAT/(1.-RAT))/DEN
         ELSE
            C11TAV = C11T(1)
            C22TAV = C22T(1)
            C12TAV = C12T(1)
         ENDIF
C END MAY 1997
         CTAN(1,1) = C11TAV
         CTAN(1,2) = C12TAV
         CTAN(2,2) = C22TAV
         CTAN(3,3) = C33TAV
         CTAN(2,1) = CTAN(1,2)
         CTAN(1,3) = 0.
         CTAN(2,3) = 0.
         CTAN(3,1) = 0.
         CTAN(3,2) = 0.
         PBCTAN(1) = C11TAV
         PBCTAN(2) = C12TAV
         PBCTAN(3) = C22TAV
         PBCTAN(4) = C33TAV
         IF (NPRT.GE.2)
     1      WRITE(IFILE8,910) C11TAV,C12TAV,C22TAV,C33TAV
  910    FORMAT(/'  Average tangent stiffnesses of the panel skin'/
     1 ' have been calculated by integration of the local tangent'/
     1 ' stiffnesses, C11TAN, C12TAN, C22TAN, and C33TAN with'/
     1 ' Simpsons rule integration:'/
     1 ' Average axial tangent stiffness,         CTAN(1,1) =',1PE12.4/
     1 ' Average (1,2) tangent stiffness,         CTAN(1,2) =',1PE12.4/
     1 ' Average hoop  tangent stiffness,         CTAN(2,2) =',1PE12.4/
     1 ' Average shear tangent stiffness,         CTAN(3,3) =',1PE12.4/
     1 ' These tangent stiffness components affect wide column, '/
     1 ' general instability, and panel instability load factors.'/)
C
      ENDIF
C
      RETURN
      END
C
C
C
C=DECK      STRMID
      SUBROUTINE STRMID(N,M,AL,F,CX,EPSFIX,EPSLOD,ETHERM,EPS1,EPS2,
     1           EPS2S,EPS12,EX,EY,EYADD,EXY,NXVAR,NYVAR,NXYVAR,
     1           THERMX,IMOD,NPRT,IFILE8,
     1           RESEIG,EPSEIG,CY,ZPARTY,NXY,N2SKIN,WPB1,
     1           IEND,MAXSEG,RESFIX,RESULT,EPSFXL,RESFXL,EPSTOT,
     1           THERMY,EPSLDF,NXFIX,NYFIX,NXYFIX,NYTOT,NY0TOT,W0,
     1           C11TAN,C12TAN,C22TAN,C33TAN,EKOITR,TEMP,IMTEMP,IABT,
C BEG NOV 2003
     1           RWBTOT,RWBEIG,IDIDIT,DELK2,DELCR2,ICASE,DNX)
C END NOV 2003
C
C  Purpose is to find reference surface strains and resultants in
C  the locally postbuckled panel module.
C
C BEG JUN 2004
      COMMON/GEOM5/RAD2,CURV2
C END JUN 2004
      COMMON/SHRWEB/SHEARX,XMAX,SHEARY,YMAX
      COMMON/MODAL1/W(23,8),WD(23,8),WDD(23,8),U(23,8),V(23,8),
     1             VD(23,8)
C BEG MAY 1997
      COMMON/IZSTIX/IZSTIF(2)
C END MAY 1997
C BEG OCT 1996
      COMMON/MODAL7/WDDD(23,8),PWDDD(23,8),WDDDVR(23,8)
      COMMON/MODEL9/QX(23,8),QY(23,8),QXMAX(4,2),QYMAX(4,2)
      COMMON/THICK/TX(5),TY(5)
C END OCT 1996
      COMMON/GEOM1/AXIAL,CIRC,R
      COMMON/ECCEN/Z(23,8)
      COMMON/GEOM2/B(2),B2(2),HHH(2),WWW(2),W2(2)     
      COMMON/GEOM3/ISTIF(2),NLAYER(4,2),NSEG(2),INTEXT(2)  
C BEG JULY 1996
      COMMON/GEOM0/B0(2),B20(2),H0(2),WW0(2),W20(2)
C END JULY 1996
C BEG APR 1996
      COMMON/GEOM6/IFAY(2),ITRTOT,IRESET,NLOADS,NSTEPS,WMAXXX,NCROSS,
     1     NOPLOT,KMAX,ILAYPL,XMAXX,XMIN,YMAXX,YMIN,N3DPLT,NOBJ,NSTRNS,
     1     NPLTST,NABSCI,IDIAG,ITRALL,IFAYT(2),IBEAM,IMISCL(5)
C END APR 1996
      COMMON/SEGS/NSEGB5,M2,I5(95),I2,I2G
      COMMON/PBMODE/WVAR(23,8),WDVAR(23,8),WDDVAR(23,8)
      COMMON/ISTL2/ISTFL2
      COMMON/WEBTH1/CX3(6,6,11),CY3(6,6,11),THRMX3(6,11),THRMY3(6,11)
      COMMON/WEBTH2/TSMRX3(6,11),TSMRY3(6,11),ESMRX3(6,11),ESMRY3(6,11)
      COMMON/WEBTH3/ETRMX3(6,11),ETRMY3(6,11),GTX3(2,11),GTY3(2,11)
      COMMON/POSTB2/PBW(23,8),PBU(23,8),PBV(23,8)
      COMMON/INDMOM/FMOM,FNCIRC
      COMMON/AVETHM/NTYBAR,NTXBAR,ETYBAR,ETXBAR,B11T,B12T
C BEG JULY 1995
      COMMON/DELIM2/DELFCX(3,4),DELWBX(2),DELCUR(3)
C END JULY 1995
C BEG DEC 1995
      COMMON/LODS11/WBEIG(2,4,2),WBTOT(2,4,2),WBSULT(2,4,2)
C END DEC 1995
      REAL NTXBAR,NTYBAR
      COMMON/PSTST4/FNORIG
      COMMON/IHOOOP/IHOOPS
      DIMENSION ETHERM(*),TEMP(*)
      COMMON/UW12/STIFL2,S2,S3,S4,C47,C48,C49,C50,C51,CS22
      COMMON/NEUTRL/DNEUTX,DNEUTY,DSURF
      REAL NXCUR,NYCUR,N22
      DIMENSION WLABLE(3)
      CHARACTER*16 WLABLE
      LOGICAL ISKIN
C BEG NOV 1995
C BEG MAY 1997
      DIMENSION RWBTOT(*),RWBEIG(*)
      COMMON/OLDRES/RESOLD(3,5,2),RESEGX(3,5,2),WBOLD(2,4,2),RWBOLD(2)
C END MAY 1997
C END NOV 1995
      DIMENSION CX(6,6,5),EPSLOD(*),NXVAR(23,8),NYVAR(23,8),NXYVAR(23,8)
      DIMENSION NXFIX(23,8),NYFIX(23,8),NXYFIX(23,8),EPSLDF(6)
      DIMENSION CY(6,6,5),RESEIG(3,5,2),EPSEIG(3,5,2),ZPARTY(*)
      DIMENSION EXRING(5),RESULT(3,5,2),RESFIX(3,5,2),EPSFXL(3,5,2)
      DIMENSION RESFXL(3,5,2),EPSTOT(3,5,2),THERMY(6,5)
      DIMENSION EYADD(23,8),EX(23,8),EY(23,8),EXY(23,8),EPSFIX(3,5,2)
      DIMENSION C11TAN(23,8),C12TAN(23,8),C22TAN(23,8),C33TAN(23,8)
      DIMENSION DUM(5),THERMX(6,5),WIDTH(8),NXTOT(8)
      REAL N,M,NXVAR,NYVAR,NXYVAR,NU12,NXTOT,NXALL,NSKNAV,NXY
      REAL N2SKIN,NXFIX,NYFIX,NXYFIX,NYTOT,NY0TOT
C
C BEG NOV 1995
      CALL MOVER(RESULT,1,RESOLD,1,30)
C END NOV 1995
C BEG MAY 1997 
      CALL MOVER(RESEIG,1,RESEGX,1,30)
      CALL MOVER(WBEIG,1,WBOLD,1,16)
      CALL MOVER(RWBEIG,1,RWBOLD,1,2)
C END MAY 1997
C BEG OCT 1996
      CALL MOVER(0.,0,QXMAX,1,8)
      CALL MOVER(0.,0,QYMAX,1,8)
      CALL MOVER(0.,0,WDDVAR,1,184)
C END OCT 1996
      MAXSEG = 2
      SN= SQRT(N)
      SNRAT = SN/SQRT(FNORIG)
      WIDTH(1) = B(1) - B2(1)
      WIDTH(2) = B2(1)
      FIABT = 1 - IABT
      FFIABT= IABT
      IF (ISTIF(1).NE.5) THEN
C BEG JULY 1996
         IF (ISTIF(1).EQ.4.AND.B20(1).GT.W20(1)) THEN
C END JULY 1996
            MAXSEG = 3
            WIDTH(2) = B2(1) - W2(1)
            WIDTH(3) = W2(1)
         ENDIF
         S = HHH(1)
         IF (ISTIF(1).EQ.4) S = SQRT(HHH(1)**2 +.25*(W2(1)-WWW(1))**2)
         WIDTH(MAXSEG+1) = S
         WIDTH(MAXSEG+2) = WWW(1)
         WIDTH(MAXSEG+3) = S
         IF (ISTIF(1).EQ.0) MAXSEG = 1
C BEG MAY 1997
         IF (IZSTIF(1).EQ.1) THEN
            MAXSEG = 5
            WIDTH(1) = B(1)/2.
            WIDTH(2) = B2(1)
            WIDTH(3) = S
            WIDTH(4) = WWW(1)
            WIDTH(5) = B(1)/2.
         ENDIF
C END MAY 1997
      ENDIF
C
      NXALL = 0.
      CUR4M = EPSLOD(4)
      CUR5M = EPSLOD(5)
      CURCG4= EPSLOD(4) + FIABT*ETHERM(4)
      CURCG5= EPSLOD(5) + FIABT*ETHERM(5)
      EYCURM = -(CX(2,4,1)*CUR4M +CX(2,5,1)*CUR5M)/CX(2,2,1)
      NXCUR  =   CX(1,4,1)*CURCG4     + CX(1,5,1)*CURCG5
      NYCUR  =   CX(2,4,1)*CURCG4     + CX(2,5,1)*CURCG5
C     WRITE(8,*)' EPSLOD(4),EPSLOD(5),ETHERM(4),ETHERM(5)=',
C    1            EPSLOD(4),EPSLOD(5),ETHERM(4),ETHERM(5)
C     WRITE(8,*)' CX(1,4,1),CX(1,5,1),CX(2,4,1),CX(2,5,1)=',
C    1            CX(1,4,1),CX(1,5,1),CX(2,4,1),CX(2,5,1)
C     WRITE(8,*)' EPS1,N2SKIN,EYCURM, NXCUR, NXYCUR=',
C    1            EPS1,N2SKIN,EYCURM,NXCUR,NYCUR
C
      N22 = N2SKIN+NTYBAR
C BEG DEC 1995
      R2SVE = RESULT(2,1,1) + DELFCX(2,1)
C END DEC 1995
      FACTR1 = 0.
      FACTR2 = 0.
      ISTEP = 1
C BEG MAY 1997
      IF (IZSTIF(1).EQ.1) ISTEP = 4
C END MAY 1997
      IF (ISTIF(1).EQ.5) THEN
         MAXSEG = 4
C BEG NOV 1995
         IF (B2(1).GT.0.) MAXSEG = 6
         N22 = RESOLD(2,1,1) + DELFCX(2,1)
         FACTR1 = DNEUTX
         FACTR2 = DNEUTY
         ISTEP = 2
         IF (B2(1).GT.0.) ISTEP = 1
         I521  = I5(1)/2 + 1
         WPB1 = F*(W(I521,1) + AL*W(I521,1)**3)
         WIDTH(1) = B(1) - B2(1)
         S = SQRT(HHH(1)**2 + .25*(B(1)-2.*B2(1))**2)
         WIDTH(2) = S
         WIDTH(3) = WIDTH(1)
         WIDTH(4) = S
         WIDTH(5) = B2(1)
         WIDTH(6) = B2(1)
C END NOV 1995
      ENDIF
C
      DO 100 ISEG =1,MAXSEG,ISTEP
C
C BEG NOV 1995
      IF (ISTIF(1).EQ.5.AND.(ISEG.EQ.2.OR.ISEG.EQ.4)) GO TO 100
C     IF (ISTIF(1).EQ.5.AND.ISEG.EQ.3) THEN
      IF (ISTIF(1).EQ.5) THEN
         FACTR1 = DNEUTX
         FACTR2 = DNEUTY
         N22 = RESOLD(2,1,1) + DELFCX(2,1)
      ENDIF
      IF (ISTIF(1).EQ.5.AND.(ISEG.EQ.3.OR.ISEG.EQ.6)) THEN
         FACTR1 = HHH(1) + DNEUTX
         FACTR2 = HHH(1) + DNEUTY
         N22   = RESOLD(2,3,1) + DELFCX(2,3)
         IF (ISEG.EQ.3) THEN
            I523  = I5(ISEG)/2 + 1
            WPB13 = F*(W(I523,ISEG) + AL*W(I523,ISEG)**3)
            WPB1  = MAX(ABS(WPB1),ABS(WPB13))
         ENDIF
C END NOV 1995
      ENDIF
C
C BEG JULY 1996
C BEG JUN 2004
      CALL IDSEG(ISTIF(1),ISEG,NSEGB5,B20(1),W20(1),J,IFAY)
C END JUN 2004
C END JULY 1996
C BEG JUN 2004
      CALL GETGEO(ISEG,DUM,RATIO,B(2),R,
     1 B,B2,B0,B20,HHH,H0,WWW,WW0,W2,W20,IZSTIF,ISTIF,INTEXT,NSEGB5,
     1 AXIAL,CIRC,IBEAM,RAD2)
C END JUN 2004
      NU12 = CX(1,2,J)/CX(2,2,J)
      NXTOT(ISEG) = 0.
C     
      I5I = I5(ISEG)    
C     START LOOP OVER CURRENT SEGMENT MESH POINTS.    
C     
C     WRITE(8,*)' MAXSEG,ISEG,J,I5I,EPS1,EPSFIX(1,J,1),THERMX(1,J)=',
C    1            MAXSEG,ISEG,J,I5I,EPS1,EPSFIX(1,J,1),THERMX(1,J)
C
      DO 50 I=1,I5I    
C     
      IF (ISTIF(1).NE.4) THEN
         WPB = W(I,ISEG) + AL*W(I,ISEG)**3
         WDPB= WD(I,ISEG)*(1. + 3.*AL*W(I,ISEG)**2)
         WDDPB = WDD(I,ISEG) + 3.*AL*(W(I,ISEG)**2*WDD(I,ISEG)
     1                             +2.*W(I,ISEG)*WD(I,ISEG)**2)
C BEG OCT 1996
         WDDDPB= WDDD(I,ISEG) +3.*AL*(W(I,ISEG)**2*WDDD(I,ISEG)
     1       + 6.*W(I,ISEG)*WD(I,ISEG)*WDD(I,ISEG) +2.*WD(I,ISEG)**3)
C END OCT 1996
      ELSE
         WPB = W(I,ISEG) + AL*W(I,ISEG)**2
         WDPB= WD(I,ISEG)*(1. + 2.*AL*W(I,ISEG))
         WDDPB = WDD(I,ISEG)  + 2.*AL*(W(I,ISEG)*WDD(I,ISEG)
     1                             + WD(I,ISEG)**2)
C BEG OCT 1996
         WDDDPB= WDDD(I,ISEG) + 2.*AL*(W(I,ISEG)*WDDD(I,ISEG)
     1                             + 3.*WD(I,ISEG)*WDD(I,ISEG))
C END OCT 1996
      ENDIF
      W0PB= W0*W(I,ISEG)
      IF (ISTIF(1).NE.5.AND.ISEG.EQ.1.AND.I.EQ.1) WPB1 = F*WPB
      W0DPB = W0*WD(I,ISEG)
      W0DDPB = W0*WDD(I,ISEG)
C BEG OCT 1996
      W0DDDP = W0*WDDD(I,ISEG)
C END OCT 1996
      WVAR(I,ISEG) = F*WPB
      WDVAR(I,ISEG)= F*WDPB
      WDDVAR(I,ISEG)=F*WDDPB
C BEG OCT 1996
      WDDDVR(I,ISEG)=F*WDDDPB
C  Next, compute the transverse shear forces Qx and Qy:
C  Qx = C44*wxxx + C45*wyyx + C66*2.*wxyy + C46*3.*wxxy + C56*wyyy
C  Qy = C45*wxxy + C55*wyyy + C66*2.*wxxy + C46*wxxx + C56*3.*wyyx
C  slope of buckling nodal lines, M is neglected.
      QX(I,ISEG) = ABS(CX(4,4,J)*4.*N*2.*SN*F*WPB)
     1            +ABS((CX(4,5,J)+2.*CX(6,6,J))*2.*SN*F*WDDPB)
     1            +ABS(3.*CX(4,6,J)*4.*N*F*WDPB)
     1            +ABS(CX(5,6,J)*(ABS(F*WDDDPB)+ABS(PWDDD(I,ISEG))))
      QXMAX(J,1) = MAX(QXMAX(J,1),ABS(QX(I,ISEG))/TX(J))
      QY(I,ISEG) = ABS(CX(5,5,J)*(ABS(F*WDDDPB)+ABS(PWDDD(I,ISEG))))
     1            +ABS((CX(4,5,J)+2.*CX(6,6,J))*4.*N*F*WDPB)
     1            +ABS(CX(4,6,J)*4.*N*2.*SN*F*WPB)
     1            +ABS(3.*CX(5,6,J)*2.*SN*F*WDDPB)
      QYMAX(J,1) = MAX(QYMAX(J,1),ABS(QY(I,ISEG))/TX(J))
C BEG MAR 1997
C     WRITE(8,'(A,3I5,/,1P,5E12.4)')
C    1' I,ISEG,J,Qx,Qy,WDDDPB,F,PWDDD(I,ISEG) =',
C    1  I,ISEG,J,QX(I,ISEG),QY(I,ISEG),WDDDPB,F,PWDDD(I,ISEG)
C     WRITE(8,'(A,/,1P,4E12.4)')
C    1' W(I,ISEG),WD(I,ISEG),WDD(I,ISEG),WDDD(I,ISEG)=',
C    1  W(I,ISEG),WD(I,ISEG),WDD(I,ISEG),WDDD(I,ISEG)
C     WRITE(8,'(A,I3,1P,3E12.4)')' J,TX(J),QXMAX,QYMAX=',
C    1                             J,TX(J),QXMAX(J,1),QYMAX(J,1)
C END MAR 1997
C END OCT 1996
C
      EXMECH = EPS1 + N*(F*F*WPB**2 +2.*W0PB*F*WPB) + FACTR1*CURCG4
C     EYMIX  = (N22 - CX(1,2,J)*EXMECH)/CX(2,2,J)
      EYMIX  = EPS2S + (EPS1-EXMECH)*CX(1,2,J)/CX(2,2,J)
     1        + EYCURM
C BEG JUN 1996
C     IF (IDIDIT.EQ.1) THEN
         EX(I,ISEG) = EXMECH + EPSFIX(1,J,1)
C     ELSE
C        EX(I,ISEG) = EXMECH + FIABT*EPSFIX(1,J,1)
C     ENDIF
C END JUN 1996
      EY(I,ISEG) = EYMIX  + EPSFIX(2,J,1)
C BEG JULY 1995
C     IF (F.EQ.0.)
C    1EY(I,ISEG) = EPSEIG(2,J,1) + FIABT*EPSFIX(2,J,1) + EPSFXL(2,J,1)
C END JULY 1995
      EYADD(I,ISEG) = .125*(F*F*(WPB*WDDPB - WDPB**2)
     1               +F*(WPB*W0DDPB +W0PB*WDDPB -2.*WDPB*W0DPB))
      EXY(I,ISEG) = EPSEIG(3,J,1) +EPSFXL(3,J,1) +FIABT*EPSFIX(3,J,1)
C
      NXVAR(I,ISEG) = CX(1,1,J)*EX(I,ISEG) + CX(1,2,J)*EY(I,ISEG)
     1               +CX(1,3,J)*EXY(I,ISEG) 
     1               + NXCUR
     1               - THERMX(1,J)
C BEG APR 1996
      IF (ISTIF(1).EQ.5.AND.IFAYT(1).EQ.1
     1                 .AND.(ISEG.EQ.5.OR.ISEG.EQ.6))
     1 NXVAR(I,ISEG)= NXVAR(I,ISEG) + CX(1,1,2)*EX(I,ISEG) 
     1               - THERMX(1,2)
C END APR 1996
C     IF (I.EQ.1) THEN
C        WRITE(8,*)' I,ISEG,J,THERMX(1,J),EX(I,ISEG),EY(I,ISEG)=',
C    1               I,ISEG,J,THERMX(1,J),EX(I,ISEG),EY(I,ISEG)
C        WRITE(8,*)' EXMECH, NXVAR(I,ISEG) =',EXMECH,NXVAR(I,ISEG)
C        WRITE(8,*)' J, EPSFIX(1,J,1),EPSFIX(2,J,1)=',
C    1               J, EPSFIX(1,J,1),EPSFIX(2,J,1)
C        WRITE(8,*)' I,ISEG,EYMIX,EY(I,ISEG)=',I,ISEG,EYMIX,EY(I,ISEG)
C     ENDIF
C
C     NYVAR(I,ISEG) = CX(1,2,J)*EX(I,ISEG) + CX(2,2,J)*EY(I,ISEG)
C    1               +CX(2,3,J)*EXY(I,ISEG)
C    1               + NYCUR
C    1               - THERMX(2,J)
C
      IF (ABS(F).LT.0.00001) THEN
C BEG NOV 1995
         NYVAR(I,ISEG) = RESOLD(2,J,1) + DELFCX(2,J)
C END NOV 1995
      ELSE
         NYVAR(I,ISEG) = N22
      ENDIF
      IF (ISTIF(2).EQ.0.OR.IHOOPS.EQ.0)
C BEG NOV 1995
     1        NYVAR(I,ISEG) = RESOLD(2,J,1) + DELFCX(2,J)
      NXYVAR(I,ISEG)= RESOLD(3,J,1) + DELFCX(3,J)
C END NOV 1995
C
C     WRITE(8,*)' ISEG,I,J,NXVAR(I,ISEG)=',ISEG,I,J,NXVAR(I,ISEG)
C     IF (F.EQ.0.) THEN
C        EX(I,ISEG) = EPSEIG(1,J,1) +EPSFXL(1,J,1) +EPSFIX(1,J,1)
C        EY(I,ISEG) = EPSEIG(2,J,1) +EPSFXL(2,J,1) +EPSFIX(2,J,1)
C        EXY(I,ISEG)= EPSEIG(3,J,1) +EPSFXL(3,J,1) +EPSFIX(3,J,1)
C        NXVAR(I,ISEG) = RESULT(1,J,1)
C        NYVAR(I,ISEG) = RESULT(2,J,1)
C        NXYVAR(I,ISEG)= RESULT(3,J,1)
C     ENDIF
C     WRITE(8,*)' ISEG,I,J,NXVAR(I,ISEG)=',ISEG,I,J,NXVAR(I,ISEG)
C     WRITE(8,*)' J,RESULT(1,J,1)=',J,RESULT(1,J,1)
C
      NXTOT(ISEG) = NXTOT(ISEG) + NXVAR(I,ISEG)
C
C     NXFIX(I,ISEG) = CX(1,1,J)*EPSLDF(1) + CX(1,2,J)*EPSLDF(2)
C     NYFIX(I,ISEG) = CX(1,2,J)*EPSLDF(1) + CX(2,2,J)*EPSLDF(2)
C     NXYFIX(I,ISEG)= CX(3,3,J)*EPSLDF(3)
C
   50 CONTINUE
C
C     NXALL = NXALL + WIDTH(ISEG)*NXTOT(ISEG)/FLOAT(I5I)
      DH = WIDTH(ISEG)/FLOAT(I5I-1)
      CALL SIMPSN(IFILE8,I5I,DH,NXVAR(1,ISEG),FNXINT)
      NXALL = NXALL + FNXINT
C
C BEG JULY 1995
C     IF (ISEG.EQ.1.AND.ISTIF(1).NE.5) THEN
      IF (ISEG.EQ.1                  ) THEN
C END JULY 1995
C        RESULT(1,1,1) = NXTOT(1)/FLOAT(I5I)
         RESULT(1,1,1) = FNXINT/WIDTH(1)
         RESULT(2,1,1) = NYVAR(1,1)
         RESULT(3,1,1) = NXYVAR(1,1)
      ENDIF
      ISKIN = ISEG.EQ.MAXSEG.AND.F.GT.0.
C BEG NOV 1995
      IF (ISTIF(1).EQ.5) ISKIN =
     1 (ISEG.EQ.1.OR.ISEG.EQ.3.OR.ISEG.EQ.5.OR.ISEG.EQ.6).AND.F.GT.0.
C END NOV 1995
C BEG JULY 1995
C     IF (ISKIN.AND.ISTIF(1).NE.5) THEN
      IF (ISKIN                  ) THEN
C END JULY 1995
         ID = J
         IF (IFAY(1).EQ.1) ID = 2
C        RESEIG(1,ID,1) = NXTOT(ISEG)/FLOAT(I5I)  - RESFXL(1,J,1)
         RESEIG(1,ID,1) = FNXINT/WIDTH(ISEG)  - RESFXL(1,J,1)
     1                   -FIABT*RESFIX(1,J,1)
         RESEIG(2,ID,1) = NYVAR(1,ISEG) -RESFXL(2,J,1) 
     1                   - FIABT*RESFIX(2,J,1)
         RESEIG(3,ID,1) = NXYVAR(1,ISEG)-RESFXL(3,J,1) 
     1                   - FIABT*RESFIX(3,J,1)
C
         RESULT(1,ID,1) = RESEIG(1,ID,1)
     1                          +FIABT*RESFIX(1,J,1) + RESFXL(1,J,1)
         RESULT(2,ID,1) = RESEIG(2,ID,1)
     1                          +FIABT*RESFIX(2,J,1) + RESFXL(2,J,1)
         RESULT(3,ID,1) = RESEIG(3,ID,1)
     1                          +FIABT*RESFIX(3,J,1) + RESFXL(3,J,1)
      ENDIF
  100 CONTINUE
      NSKNAV = NXALL/B(1)
      ISTART = MAXSEG + 1
      IEND   = NSEGB5 - (MAXSEG-1)
      IF (MAXSEG.EQ.1) IEND = 1
C BEG MAY 1997
      IF (IZSTIF(1).EQ.1) THEN
         ISTART = 2
         IEND = 4
      ENDIF
C END MAY 1997
      FACTR1 = 0.
      FACTR2 = 0.
      IWEB  = 3
      ISTEP = 1
      IF (ISTIF(1).EQ.5) THEN
         ISTART = 2
         IEND = 4
         IWEB = 2
         FACTR1 = DNEUTX
         FACTR2 = DNEUTY
         ISTEP = 2
      ENDIF
      IWEBM = IWEB - 1
      IWEBP = IWEB + 1
      IF (ISTART.GT.NSEG(1)) GO TO 300
C
      DO 200 ISEG =ISTART,IEND,ISTEP
C
C BEG JULY 1996
C BEG JUN 2004
      CALL IDSEG(ISTIF(1),ISEG,NSEGB5,B20(1),W20(1),J,IFAY)
C END JUN 2004
C END JULY 1996
C BEG JUN 2004
      CALL GETGEO(ISEG,DUM,RATIO,B(2),R,
     1 B,B2,B0,B20,HHH,H0,WWW,WW0,W2,W20,IZSTIF,ISTIF,INTEXT,NSEGB5,
     1 AXIAL,CIRC,IBEAM,RAD2)
C END JUN 2004
      NXTOT(ISEG) = 0.
C     
      I5I = I5(ISEG)    
      THX1 = THERMX(1,J)
      THX2 = THERMX(2,J)
      CX11 = CX(1,1,J)
      CX12 = CX(1,2,J)
      CX22 = CX(2,2,J)
      CX13 = CX(1,3,J)
      CX23 = CX(2,3,J)
      CX33 = CX(3,3,J)
      NU12 = CX12/CX22
C     CX14 = CX(1,4,J)
C     CX15 = CX(1,5,J)
C     CX24 = CX(2,4,J)
C     CX25 = CX(2,5,J)
      EPSF1= EPSFIX(1,J,1)
      EPSF2= EPSFIX(2,J,1)
      EPS12W = 0.
      IF (J.EQ.IWEB) THEN
          EPS12W = EPSEIG(3,IWEB,1)
          IF (ISEG.GT.IWEBP) EPS12W = EPSEIG(3,IWEB,1)
      ENDIF
      FACTHM = 1.
C
      DO 150 I=1,I5I    
C
      IKOUNT = I
      IF (J.EQ.IWEB.AND.ISEG.GT.IWEBP) IKOUNT = I5I - I + 1
      IF (J.EQ.IWEB.AND.IMTEMP.EQ.1.AND.TEMP(IWEBM).NE.TEMP(IWEBP)) THEN
         THX1 = THRMX3(1,IKOUNT)
         THX2 = THRMX3(2,IKOUNT)
         CX11 = CX3(1,1,IKOUNT)
         CX12 = CX3(1,2,IKOUNT)
         CX22 = CX3(2,2,IKOUNT)
         CX13 = CX3(1,3,IKOUNT)
         CX23 = CX3(2,3,IKOUNT)
         CX33 = CX3(3,3,IKOUNT)
         NU12 = CX12/CX22
C        CX14 = CX3(1,4,IKOUNT)
C        CX15 = CX3(1,5,IKOUNT)
C        CX24 = CX3(2,4,IKOUNT)
C        CX25 = CX3(2,5,IKOUNT)
         EPSF1= ETHERM(1) - Z(I,ISEG)*ETHERM(4) 
     1          + ETRMX3(1,IKOUNT) - ESMRX3(1,IKOUNT)
         EPSF2= THRMX3(2,IKOUNT)/CX22 - NU12*EPSF1
C    1          -(CX24*ETHERM(4) +CX25*ETHERM(5))/CX22
         FACTHM = 0.
C        WRITE(8,*)' ISEG,IKOUNT,THX1,THX2,CX11,CX12,CX22,NU12=',
C    1               ISEG,IKOUNT,THX1,THX2,CX11,CX12,CX22,NU12
C        WRITE(8,*)' Z(I,ISEG),ETRMX3(1,IKOUNT),ESMRX3(1,IKOUNT)=',
C    1               Z(I,ISEG),ETRMX3(1,IKOUNT),ESMRX3(1,IKOUNT) 
C        WRITE(8,*)' FACTHM,THRMX3(2,IKOUNT),ETHERM(1),ETHERM(4)=',
C    1               FACTHM,THRMX3(2,IKOUNT),ETHERM(1),ETHERM(4)
C        WRITE(8,*)' EPS1, EPSF1, EPSF2, F =',EPS1,EPSF1,EPSF2,F
C       WRITE(8,*)' J,EPSFIX(1,J,1),EPSFIX(2,J,1),EPSLOD(4),EPSLOD(5)=',
C    1              J,EPSFIX(1,J,1),EPSFIX(2,J,1),EPSLOD(4),EPSLOD(5)
      ENDIF
C
      WVAR(I,ISEG) = F*W(I,ISEG)
      WDVAR(I,ISEG)= F*WD(I,ISEG)
      WDDVAR(I,ISEG)=F*WDD(I,ISEG)
C BEG OCT 1996
      WDDDVR(I,ISEG)=F*WDDD(I,ISEG)
C  Next, compute the transverse shear forces Qx and Qy:
C  Qx = C44*wxxx + C45*wyyx + C66*2.*wxyy + C46*3.*wxxy + C56*wyyy
C  Qy = C45*wxxy + C55*wyyy + C66*2.*wxxy + C46*wxxx + C56*3.*wyyx
C  slope of buckling nodal lines, M is neglected.
      QX(I,ISEG) = ABS(CX(4,4,J)*4.*N*2.*SN*F*W(I,ISEG))
     1            +ABS((CX(4,5,J)+2.*CX(6,6,J))*2.*SN*F*WDD(I,ISEG))
     1            +ABS(3.*CX(4,6,J)*4.*N*F*WD(I,ISEG))
     1            +ABS(CX(5,6,J)*F*WDDD(I,ISEG))
      QXMAX(J,1) = MAX(QXMAX(J,1),ABS(QX(I,ISEG))/TX(J))
      QY(I,ISEG) = ABS(CX(5,5,J)*F*WDDD(I,ISEG))
     1            +ABS((CX(4,5,J)+2.*CX(6,6,J))*4.*N*F*WD(I,ISEG))
     1            +ABS(CX(4,6,J)*4.*N*2.*SN*F*W(I,ISEG))
     1            +ABS(3.*CX(5,6,J)*2.*SN*F*WDD(I,ISEG))
      QYMAX(J,1) = MAX(QYMAX(J,1),ABS(QY(I,ISEG))/TX(J))
C     WRITE(8,'(A,3I5,1P,3E12.4)')
C    1' I,SEG,J,Qx,Qy,WDDD =',
C    1 I,ISEG,J,QX(I,ISEG),QY(I,ISEG),WDDD(I,ISEG)
C END OCT 1996
      W0VAR = W0*W(I,ISEG)
      WPB = W(I,ISEG)
      IF (ISTIF(1).EQ.5) WPB = W(I,ISEG) +AL*W(I,ISEG)**3
C
      I52 = I5I/2 + 1
C BEG JAN 1995
      CURCG4 = EPSLOD(4)-(1.-FACTHM)*FFIABT*ETHERM(4)
     1                                       + FACTHM*FIABT*ETHERM(4)
      CURCG5 = EPSLOD(5)-(1.-FACTHM)*FFIABT*ETHERM(5)
     1                                       + FACTHM*FIABT*ETHERM(5)
C END JAN 1995
      EXKOIT = -2.*SN*F*SNRAT*V(I,ISEG) +N*F*F*(WPB**2 +U(I,ISEG)**2)
     1         +N*2.*W0VAR*WVAR(I,ISEG)
      EX(I,ISEG) = EPS1 +EPSF1 -Z(I,ISEG)*CURCG4 + FACTR1*CURCG4
     1            +FACTHM*Z(I52,ISEG)*ETHERM(4) + EXKOIT
C     IF (J.EQ.IWEB) WRITE(8,*) ' CURCG4,CURCG5,EXKOIT,EX(I,ISEG) =',
C    1                            CURCG4,CURCG5,EXKOIT,EX(I,ISEG)
      EY(I,ISEG) = - NU12*EX(I,ISEG)+ EPSF2+ NU12*EPSF1
C    1             -(CX24*CURCG4+CX25*CURCG5)/CX22
C
      EXY(I,ISEG)= F*(SNRAT*VD(I,ISEG) + 2.*SN*U(I,ISEG)) + EPS12W
      IF (ISTIF(1).EQ.5) EXY(I,ISEG) = EPS12W
C
      NXVAR(I,ISEG) = CX11*EX(I,ISEG) + CX12*EY(I,ISEG)
     1               +CX13*EXY(I,ISEG)  - THX1
C    1               +CX14*CURCG4     + CX15*CURCG5
      NYVAR(I,ISEG) = CX12*EX(I,ISEG) + CX22*EY(I,ISEG)
     1               +CX23*EXY(I,ISEG)  - THX2
C    1               +CX24*CURCG4     + CX25*CURCG5
      NXYVAR(I,ISEG)= CX13*EX(I,ISEG) + CX23*EY(I,ISEG)
     1               +CX33*EXY(I,ISEG)
      IF (ISTIF(1).EQ.5) THEN
C BEG NOV 1995
         NYVAR(I,ISEG) = RESOLD(2,J,1) + DELFCX(2,J)
         NXYVAR(I,ISEG)= RESOLD(3,J,1) + DELFCX(3,J)
C END NOV 1995
      ENDIF
C
C     WRITE(8,*)' I,ISEG,NXVAR(I,ISEG),NYVAR(I,ISEG)=',
C    1            I,ISEG,NXVAR(I,ISEG),NYVAR(I,ISEG)
C
      NXTOT(ISEG) = NXTOT(ISEG) + NXVAR(I,ISEG)
C
C BEG JUN 1996
C     ZDIFF = ABS(Z(I5I,ISEG)-Z(1,ISEG))/ABS(Z(IWEBP,ISEG))
C     IF (ZDIFF.GT.0.001) THEN
C        CURCG4 = EPSLDF(4) + FACTHM*FIABT*ETHERM(4)
C              (in a manner analogous to how the panel skin is handled,
C               do not recalculate NXFIX and NYFIX and NXYFIX in the
C               stringer segments.)
C        EXFIX = EPSLDF(1) - Z(I,ISEG)*CURCG4 + EPSF1
C    1          + FACTHM*Z(I52,ISEG)*FIABT*ETHERM(4)
C        EYFIX = - NU12*EXFIX +EPSF2 + NU12*EPSF1
C        EXYFIX= EPSLDF(3)
C        NXFIX(I,ISEG) =CX11*EXFIX + CX12*EYFIX - THX1
C        NYFIX(I,ISEG) =CX12*EXFIX + CX22*EYFIX - THX2
C        NXYFIX(I,ISEG)= CX33*EXYFIX
C        WRITE(8,*)' I,ISEG,FIABT,NXFIX(I,ISEG),NYFIX(I,ISEG)=',
C    1               I,ISEG,FIABT,NXFIX(I,ISEG),NYFIX(I,ISEG)
C
C        IF (F.EQ.0.) THEN
C BEG JAN 1995
C           CURCG4 = EPSLOD(4) + FACTHM*FIABT*ETHERM(4)
C           CURCG4 = EPSLOD(4)-(1.-FACTHM)*FFIABT*ETHERM(4)
C    1                                       + FACTHM*FIABT*ETHERM(4)
C END JAN 1995
C BEG JULY 1995
C23456789012345678901234567890123456789012345678901234567890123456789012
C           EXVAR = EPSLOD(1) - Z(I,ISEG)*CURCG4 + FACTR1*CURCG4 + EPSF1
C END JULY 1995
C    1             + FACTHM*Z(I52,ISEG)*FIABT*ETHERM(4)
C           EYVAR = - NU12*EXVAR +EPSF2 + NU12*EPSF1
C           EXYVAR= EPS12W
C           EX(I,ISEG) = EXVAR
C           EY(I,ISEG) = EYVAR
C           EXY(I,ISEG) = EXYVAR
C           NXVAR(I,ISEG) =CX11*EXVAR + CX12*EYVAR - THX1
C           NYVAR(I,ISEG) =CX12*EXVAR + CX22*EYVAR - THX2
C           NXYVAR(I,ISEG)= CX33*EXYVAR
C           IF (ISTIF(1).EQ.5) THEN
C BEG NOV 1995
C              NYVAR(I,ISEG) = RESOLD(2,J,1) + DELFCX(2,J)
C              NXYVAR(I,ISEG)= RESOLD(3,J,1) + DELFCX(3,J)
C END NOV 1995
C           ENDIF
C        ENDIF
C     ENDIF
C END JUN 1996
C
  150 CONTINUE
C
C     NXALL = NXALL + WIDTH(ISEG)*NXTOT(ISEG)/FLOAT(I5I)
      DH = WIDTH(ISEG)/FLOAT(I5I-1)
      CALL SIMPSN(IFILE8,I5I,DH,NXVAR(1,ISEG),FNXINT)
      NXALL = NXALL + FNXINT
C
C BEG JULY 1995
C     IF (F.GT.0.0.AND.ISTIF(1).NE.5) THEN
C BEG JUN 2004 (following statement commented out.)
C     IF (F.GT.0.0                  ) THEN
C END JUN 2004
C END JULY 1995
        RESEIG(1,J,1) = FNXINT/WIDTH(ISEG) - RESFXL(1,J,1)
     1                 -FIABT*RESFIX(1,J,1)
        RESEIG(2,J,1) = NYVAR(1,ISEG) -RESFXL(2,J,1)-FIABT*RESFIX(2,J,1)
        RESEIG(3,J,1) = NXYVAR(1,ISEG)-RESFXL(3,J,1)-FIABT*RESFIX(3,J,1)
C
        RESULT(1,J,1) = RESEIG(1,J,1)
     1                    +FIABT*RESFIX(1,J,1) +RESFXL(1,J,1)
        RESULT(2,J,1) = RESEIG(2,J,1)
     1                    +FIABT*RESFIX(2,J,1) +RESFXL(2,J,1)
        RESULT(3,J,1) = RESEIG(3,J,1)
     1                    +FIABT*RESFIX(3,J,1) +RESFXL(3,J,1)
C BEG NOV 2003
C       IF (ISTIF(1).NE.4.AND.J.EQ.3)
        IF (ISTIF(1).NE.4.AND.J.EQ.3.AND.DNX.EQ.0.)
C END NOV 2003
     1     RWBEIG(1) = MIN(RESEIG(1,J,1),RWBEIG(1))
C BEG JUN 2004 (following statement commented out)
C     ENDIF
C END JUN 2004
  200 CONTINUE
C BEG DEC 1995
      IF (NSEG(1).GE.3) THEN
         IWEB = 3
         IF (ISTIF(1).EQ.5) IWEB = 2
         ISEG = IWEB
         IF (ISTIF(1).EQ.4.AND.NSEGB5.EQ.8) ISEG = 4
         I5I = I5(ISEG)
C BEG FEB 1996
         WBEIG(1,1,1) = NXVAR(1,ISEG) - WBTOT(1,1,1)
         WBEIG(2,1,1) = NXVAR(I5I,ISEG) - WBTOT(2,1,1)
C END FEB 1996
      ENDIF
C     WRITE(8,*) ' WBEIG(1,1,1),WBEIG(2,1,1)=',
C    1             WBEIG(1,1,1),WBEIG(2,1,1)
C END DEC 1995
  300 CONTINUE
C
      NXALL = NXALL/B(1)
      IF (MAXSEG.EQ.3) THEN
         ISEG = NSEGB5 - 1
         I5I  = I5(2)
         DO 350 I = 1,I5I
            J = I5I + 1 - I
            NXVAR(I,ISEG) = NXVAR(J,2)
            NYVAR(I,ISEG) = NYVAR(J,2)
            NXYVAR(I,ISEG)= NXYVAR(J,2)
            NXFIX(I,ISEG) = NXFIX(J,2)
            NYFIX(I,ISEG) = NYFIX(J,2)
            NXYFIX(I,ISEG)= NXYFIX(J,2)
            EX(I,ISEG)    = EX(J,2)
            EY(I,ISEG)    = EY(J,2)
            EXY(I,ISEG)   = EXY(J,2)
            EYADD(I,ISEG) = EYADD(J,2)
            IF (ISTIF(1).NE.4) THEN
               WPB = W(I,ISEG) + AL*W(I,ISEG)**3
               WDPB= WD(I,ISEG)*(1. + 3.*AL*W(I,ISEG)**2)
               WDDPB = WDD(I,ISEG) + 3.*AL*(W(I,ISEG)**2*WDD(I,ISEG)
     1                                  +2.*W(I,ISEG)*WD(I,ISEG)**2)
C BEG OCT 1996
               WDDDPB= WDDD(I,ISEG) +3.*AL*(W(I,ISEG)**2*WDDD(I,ISEG)
     1       + 6.*W(I,ISEG)*WD(I,ISEG)*WDD(I,ISEG) +2.*WD(I,ISEG)**3)
C END OCT 1996
            ELSE
               WPB = W(I,ISEG) + AL*W(I,ISEG)**2
               WDPB= WD(I,ISEG)*(1. + 2.*AL*W(I,ISEG))
               WDDPB = WDD(I,ISEG)  + 2.*AL*(W(I,ISEG)*WDD(I,ISEG)
     1                                    + WD(I,ISEG)**2)
C BEG OCT 1996
               WDDDPB= WDDD(I,ISEG) + 2.*AL*(W(I,ISEG)*WDDD(I,ISEG)
     1                                 + 3.*WD(I,ISEG)*WDD(I,ISEG))
C END OCT 1996
            ENDIF
            WVAR(I,ISEG) = F*WPB
            WDVAR(I,ISEG)= F*WDPB
            WDDVAR(I,ISEG)=F*WDDPB
C BEG OCT 1996
            WDDDVR(I,ISEG)=F*WDDDPB
C  Next, compute the transverse shear forces Qx and Qy:
C  Qx = C44*wxxx + C45*wyyx + C66*2.*wxyy + C46*3.*wxxy + C56*wyyy
C  Qy = C45*wxxy + C55*wyyy + C66*2.*wxxy + C46*wxxx + C56*3.*wyyx
C  slope of buckling nodal lines, M is neglected.
            QX(I,ISEG) = ABS(CX(4,4,2)*4.*N*2.*SN*F*WPB)
     1            +ABS((CX(4,5,2)+2.*CX(6,6,2))*2.*SN*F*WDDPB)
     1            +ABS(3.*CX(4,6,2)*4.*N*F*WDPB)
     1            +ABS(CX(5,6,2)*(ABS(F*WDDDPB)+ABS(PWDDD(I,ISEG))))
            QXMAX(2,1) = MAX(QXMAX(2,1),ABS(QX(I,ISEG))/TX(2))
            QY(I,ISEG) =
     1             ABS(CX(5,5,2)*(ABS(F*WDDDPB)+ABS(PWDDD(I,ISEG))))
     1            +ABS((CX(4,5,2)+2.*CX(6,6,2))*4.*N*F*WDPB)
     1            +ABS(CX(4,6,2)*4.*N*2.*SN*F*WPB)
     1            +ABS(3.*CX(5,6,2)*2.*SN*F*WDDPB)
            QYMAX(2,1) = MAX(QYMAX(2,1),ABS(QY(I,ISEG))/TX(2))
C           WRITE(8,'(A,2I5,1P,3E12.4)')
C    1      ' I,ISEG,Qx,Qy,WDDDPB =',
C    1        I,ISEG,QX(I,ISEG),QY(I,ISEG),WDDDPB
C END OCT 1996
  350    CONTINUE
      ENDIF
  355 CONTINUE
C BEG MAY 1997
      IF (ISTIF(1).NE.5.AND.IZSTIF(1).EQ.0) THEN
C END MAY 1997
         I5I = I5(1)
         DO 360 I=1,I5I
            J = I5I + 1 - I
            NXVAR(I,NSEGB5) = NXVAR(J,1)
            NYVAR(I,NSEGB5) = NYVAR(J,1)
           NXYVAR(I,NSEGB5) = NXYVAR(J,1)
            NXFIX(I,NSEGB5) = NXFIX(J,1)
            NYFIX(I,NSEGB5) = NYFIX(J,1)
           NXYFIX(I,NSEGB5) = NXYFIX(J,1)
               EX(I,NSEGB5) = EX(J,1)
               EY(I,NSEGB5) = EY(J,1)
              EXY(I,NSEGB5) = EXY(J,1)
            EYADD(I,NSEGB5) = EYADD(J,1)
         IF (ISTIF(1).NE.4) THEN
            WPB = W(I,NSEGB5) + AL*W(I,NSEGB5)**3
            WDPB= WD(I,NSEGB5)*(1. + 3.*AL*W(I,NSEGB5)**2)
            WDDPB = WDD(I,NSEGB5) + 3.*AL*(W(I,NSEGB5)**2*WDD(I,NSEGB5)
     1                                +2.*W(I,NSEGB5)*WD(I,NSEGB5)**2)
C BEG OCT 1996
            WDDDPB= WDDD(I,NSEGB5)+3.*AL*(W(I,NSEGB5)**2*WDDD(I,NSEGB5)
     1       + 6.*W(I,NSEGB5)*WD(I,NSEGB5)*WDD(I,NSEGB5) 
     1       + 2.*WD(I,NSEGB5)**3)
C END OCT 1996
         ELSE
            WPB = W(I,NSEGB5) + AL*W(I,NSEGB5)**2
            WDPB= WD(I,NSEGB5)*(1. + 2.*AL*W(I,NSEGB5))
            WDDPB = WDD(I,NSEGB5)  + 2.*AL*(W(I,NSEGB5)*WDD(I,NSEGB5)
     1                                    + WD(I,NSEGB5)**2)
C BEG OCT 1996
            WDDDPB= WDDD(I,NSEGB5) +2.*AL*(W(I,NSEGB5)*WDDD(I,NSEGB5)
     1                               + 3.*WD(I,NSEGB5)*WDD(I,NSEGB5))
C END OCT 1996
         ENDIF
            WVAR(I,NSEGB5) = F*WPB
            WDVAR(I,NSEGB5)= F*WDPB
            WDDVAR(I,NSEGB5)=F*WDDPB
C BEG OCT 1996
            WDDDVR(I,NSEGB5)=F*WDDDPB
C  Next, compute the transverse shear forces Qx and Qy:
C  Qx = C44*wxxx + C45*wyyx + C66*2.*wxyy + C46*3.*wxxy + C56*wyyy
C  Qy = C45*wxxy + C55*wyyy + C66*2.*wxxy + C46*wxxx + C56*3.*wyyx
C  slope of buckling nodal lines, M is neglected.
            QX(I,NSEGB5) = ABS(CX(4,4,1)*4.*N*2.*SN*F*WPB)
     1           +ABS((CX(4,5,1)+2.*CX(6,6,1))*2.*SN*F*WDDPB)
     1           +ABS(3.*CX(4,6,1)*4.*N*F*WDPB)
     1           +ABS(CX(5,6,1)*(ABS(F*WDDDPB)+ABS(PWDDD(I,NSEGB5))))
            QXMAX(1,1) = MAX(QXMAX(1,1),ABS(QX(I,NSEGB5))/TX(1))
            QY(I,NSEGB5) =
     1            ABS(CX(5,5,1)*(ABS(F*WDDDPB)+ABS(PWDDD(I,NSEGB5))))
     1           +ABS((CX(4,5,1)+2.*CX(6,6,1))*4.*N*F*WDPB)
     1           +ABS(CX(4,6,1)*4.*N*2.*SN*F*WPB)
     1           +ABS(3.*CX(5,6,1)*2.*SN*F*WDDPB)
            QYMAX(1,1) = MAX(QYMAX(1,1),ABS(QY(I,NSEGB5))/TX(1))
C BEG MAR 1997
C           WRITE(8,'(A,/,2I2,1P,6E12.4)')
C    1    ' I,NSEGB5,Qx,Qy,WDDDPB,PWDDD,QYMAX(1,1),TX(1) =',
C    1      I,NSEGB5,QX(I,NSEGB5),QY(I,NSEGB5),WDDDPB,
C    1      PWDDD(I,NSEGB5),QYMAX(1,1),TX(1)
C           WRITE(8,'(A,/,1P,4E12.4)')
C    1    ' W(I,NSEGB5),WD(I,NSEGB5),WDD(I,NSEGB5),WDDD(I,NSEGB5)=',
C    1      W(I,NSEGB5),WD(I,NSEGB5),WDD(I,NSEGB5),WDDD(I,NSEGB5)
C END MAR 1997
C END OCT 1996
  360    CONTINUE
      ENDIF
C
C BEG OCT 1998
C     IF (NSEG(2).LT.2) GO TO 400
      IF (NSEG(2).LT.2.OR.ICASE.EQ.1) GO TO 400
C END OCT 1998
      HOOP2 = RESEIG(1,2,2)
C BEG DEC 1995
C     IF (ISTFL2.GT.0.AND.EKOITR.LT.1.0) THEN
      IF (ISTFL2.GT.0                  ) THEN
         CWEB = CY(1,1,3) - CY(1,2,3)**2/CY(2,2,3)
         CFLANG = 0.
         IF (CY(2,2,4).GT.0.) CFLANG=CY(1,1,4)-CY(1,2,4)**2/CY(2,2,4)
         FNWEBS = 1.
         WIDTHW = HHH(2)
         IF (ISTIF(2).EQ.4) THEN
            FNWEBS = 2.
            WIDTHW = SQRT(HHH(2)**2 + 0.25*(W2(2)-WWW(2))**2)
         ENDIF
         DENOM = CY(1,1,2)*B2(2) + CWEB*FNWEBS*WIDTHW + CFLANG*WWW(2)
         FNUM = -(N2SKIN+RESFIX(1,1,2) - R2SVE)*(B(2)-B2(2))
C BEG DEC 1995
C        DEBASE = FNUM/DENOM
C        WRITE(8,*)' N2SKIN,R2SVE,DEBASE=',N2SKIN,R2SVE,DEBASE
         DEBASE = 0.0
         EBASE = EPSTOT(1,2,2) + DEBASE - EPSFIX(1,2,2)
C BEG MAR 1997
         EPSMOD = EPSLOD(5) - DELK2 - DELCR2
         EXRING(2) = EBASE - ZPARTY(2)*EPSMOD
         EXRING(3) = EBASE - ZPARTY(3)*EPSMOD
         EXRING(4) = EBASE - ZPARTY(4)*EPSMOD
C END MAR 1997
C END DEC 1995
         EPSTOT(1,2,2) = EXRING(2) + EPSFIX(1,2,2)
         RESEIG(1,2,2) =  CY(1,1,2)*EXRING(2) + FFIABT*RESFIX(1,2,2)
     1                  + CY(1,2,2)*(EPSEIG(2,2,2) +EPSFXL(2,2,2))
     1                  - RESFXL(1,2,2) 
         HOOP2 = RESEIG(1,2,2)
         RESEIG(2,2,2) =  CY(1,2,2)*EXRING(2) + FFIABT*RESFIX(2,2,2)
     1                  + CY(2,2,2)*(EPSEIG(2,2,2) +EPSFXL(2,2,2))
     1                  - RESFXL(2,2,2) 
         RESULT(1,2,2) =   RESEIG(1,2,2) + FIABT*RESFIX(1,2,2) 
     1                   + RESFXL(1,2,2)
         RESULT(2,2,2) =   RESEIG(2,2,2) + FIABT*RESFIX(2,2,2)
     1                   + RESFXL(2,2,2)
         EPSTOT(2,2,2) = (RESULT(2,2,2) - CY(1,2,2)*EPSTOT(1,2,2)
     1                               + THERMY(2,2))/CY(2,2,2)
C BEG DEC 1995
C        WRITE(8,*)' IN STRMID: EPSFIX(1,2,2),RESFIX(1,1,2),R2SVE=',
C    1                          EPSFIX(1,2,2),RESFIX(1,1,2),R2SVE
C        WRITE(8,*)' FNUM,DENOM,N2SKIN=',FNUM,DENOM,N2SKIN
C        WRITE(8,*)' EPSLOD(5),DEBASE,EBASE=',EPSLOD(5),DEBASE,EBASE
C        WRITE(8,*)' ZPARTY(2),ZPARTY(3),ZPARTY(4)=',
C    1               ZPARTY(2),ZPARTY(3),ZPARTY(4)
C        WRITE(8,*)' EXRING(2),EXRING(3),EXRING(4)=',
C    1               EXRING(2),EXRING(3),EXRING(4)
C        WRITE(8,*)' EPSTOT(1,2,2),EPSTOT(2,2,2)=',
C    1               EPSTOT(1,2,2),EPSTOT(2,2,2)
C END DEC 1995
         IF (NSEG(2).GE.3) THEN
            EPSTOT(1,3,2) = EXRING(3) + EPSFIX(1,3,2)
            CYSTAR = CY(1,1,3)-CY(1,2,3)**2/CY(2,2,3)
            RESEIG(1,3,2) = CYSTAR*EXRING(3) +FFIABT*RESFIX(1,3,2)
     1                     -RESFXL(1,3,2) 
            RESULT(1,3,2) =   RESEIG(1,3,2) + FIABT*RESFIX(1,3,2)
     1                      + RESFXL(1,3,2)
            EPSTOT(2,3,2) = (THERMY(2,3)
     1                     -CY(1,2,3)*EPSTOT(1,3,2))/CY(2,2,3)
C BEG DEC 1995
            WBEIG(1,4,2) = CYSTAR*EXRING(2)
            WBEIG(2,4,2) = CYSTAR*EXRING(4)
C           WRITE(8,*)' ZPARTY(2),ZPARTY(3),ZPARTY(4)=',
C    1                 ZPARTY(2),ZPARTY(3),ZPARTY(4)
C          WRITE(8,*)' EXRING(2),EXRING(4)=',EXRING(2),EXRING(4)
C          WRITE(8,*)' WBEIG(1,4,2),WBEIG(2,4,2)=',
C    1                 WBEIG(1,4,2),WBEIG(2,4,2)
C END DEC 1995
           IF (ISTIF(2).NE.4) RWBEIG(2) =MIN(RESEIG(1,3,2),RWBEIG(2))
            IF (NSEG(2).GE.4) THEN
               EPSTOT(1,4,2) = EXRING(4) + EPSFIX(1,4,2)
               CYSTAR = CY(1,1,4)-CY(1,2,4)**2/CY(2,2,4)
               RESEIG(1,4,2) = CYSTAR*EXRING(4) + FFIABT*RESFIX(1,4,2)
     1                        -RESFXL(1,4,2) 
               RESULT(1,4,2) =   RESEIG(1,4,2)  + FIABT*RESFIX(1,4,2)
     1                         + RESFXL(1,4,2)
               EPSTOT(2,4,2) = (THERMY(2,4)
     1                        -CY(1,2,4)*EPSTOT(1,4,2))/CY(2,2,4)
            ENDIF
         ENDIF
C
      ENDIF
C
  400 CONTINUE
      FSUM = F + W0
      DO 500 J = 1,8
      DO 490 I = 1,23
         PBW(I,J) = WVAR(I,J) + W0*W(I,J)
         PBU(I,J) = FSUM*U(I,J)
         PBV(I,J) = FSUM*V(I,J)
  490 CONTINUE
  500 CONTINUE
C
C BEG OCT 1998
      IF (NPRT.LT.1.OR.(IMOD.NE.0.AND.NPRT.LT.2)) GO TO 810
C END OCT 1998
      CALL PICTS(IFILE8,ISTIF(1),INTEXT(1),B2(1),W2(1),1,IFAY(1))
      WRITE(IFILE8,550) NSEGB5
  550 FORMAT(//
     1'         LOCALLY DEFORMED STATE IN THE PANEL MODULE SHOWN ABOVE'/ 
     1'                  PANEL MODULE HAS',I2,' SEGMENTS'/
     1' Nodal Disp.        Membrane Strains                 Resultants'/
     1' Point  W        Ex        Ey        Exy        Nx        Ny        
     1   Nxy     C11TAN     C12TAN    C22TAN     C33TAN')
C     
      DO 800 ISEG = 1,NSEGB5
      I5I = I5(ISEG)    
      WRITE(IFILE8,600) ISEG
  600  FORMAT(/
     1'                  Locally Deformed State for Segment Number',I2)
      DO 620 I = 1,I5I
        WRITE(IFILE8,610) I,WVAR(I,ISEG),EX(I,ISEG),EY(I,ISEG),
     1    EXY(I,ISEG),NXVAR(I,ISEG),NYVAR(I,ISEG),NXYVAR(I,ISEG),
     1    C11TAN(I,ISEG),C12TAN(I,ISEG),C22TAN(I,ISEG),C33TAN(I,ISEG)
  610 FORMAT(I3,1P,11E10.2)
  620 CONTINUE
C     
  800 CONTINUE    
C
      WRITE(IFILE8,*)'  '
      IF (ISTIF(1).NE.5)
     1    WRITE(IFILE8,*)' AVERAGE AXIAL RESULTANT IN SKIN, Nsknave=',
     1                                                  NSKNAV
      IF (ISTIF(1).NE.5) WRITE(IFILE8,*)
     1 ' NOTE: Nskave includes Nx averaged in skin and stringer base.'
      WRITE(IFILE8,*)' AVERAGE AXIAL RESULTANT OVERALL, Nx(ave)=',NXALL
      IF (ISTIF(1).NE.5) THEN
         WRITE(IFILE8,*)' AVERAGE STRESS RESULTANTS IN STIFFENER PARTS'
         WRITE(IFILE8,*)' FROM LOAD SET A (eigenvalue loads)..'
      ENDIF
      IF (NSEG(1).GT.1.AND.ISTIF(1).NE.5) THEN
         IF (ISTIF(1).NE.5) THEN
            WLABLE(1) = ' STRINGER  BASE '
            WLABLE(2) = ' STRINGER  WEB  '
            WLABLE(3) = ' STRINGER FLANGE'
         ELSE
            WLABLE(1) = '  LOWER SKIN    '
            WLABLE(2) = ' TRUSSCORE WEB  '
            WLABLE(3) = '  UPPER SKIN    '
         ENDIF
         WRITE(IFILE8,802) WLABLE(1),(RESEIG(I,IWEBM,1),I=1,3)
  802    FORMAT(A,': AXIAL, TRANSVERSE, IN-PLANE SHEAR=',1P,3E12.4)
         WRITE(IFILE8,803) WLABLE(2),(RESEIG(I,IWEB,1),I=1,3)
  803    FORMAT(A,': AXIAL, TRANSVERSE, IN-PLANE SHEAR=',1P,3E12.4)
         WRITE(IFILE8,804) WLABLE(3),(RESEIG(I,IWEBP,1),I=1,3)
  804    FORMAT(A,': AXIAL, TRANSVERSE, IN-PLANE SHEAR=',1P,3E12.4)
      ENDIF
      IF (NSEG(2).GT.1.AND.ISTIF(2).NE.5) THEN
         IF (ISTIF(2).NE.5) THEN
            WLABLE(1) = '   RING    BASE '
            WLABLE(2) = '   RING    WEB  '
            WLABLE(3) = '   RING   FLANGE'
         ELSE
            WLABLE(1) = '  LOWER SKIN    '
            WLABLE(2) = ' TRUSSCORE WEB  '
            WLABLE(3) = '  UPPER SKIN    '
         ENDIF
         IF (ISTIF(2).EQ.5)
     1      WRITE(IFILE8,802) WLABLE(1),(RESEIG(I,IWEBM,2),I=1,3)
         IF (ISTIF(2).NE.5)
     1      WRITE(IFILE8,802) WLABLE(1), HOOP2,RESEIG(2,IWEBM,2),
     1                                   RESEIG(3,IWEBM,2)
         WRITE(IFILE8,803) WLABLE(2),(RESEIG(I,IWEB,2),I=1,3)
         WRITE(IFILE8,804) WLABLE(3),(RESEIG(I,IWEBP,2),I=1,3)
C        IF (ISTFL2.GT.0.AND.EKOITR.LT.1.0)
C    1      WRITE(IFILE8,8021) HOOP2
C8021    FORMAT(' NOTE: The ring base axial load printed above, (',
C    1   1PE12.4,'),'/
C    1'       is the difference between the total ring base axial'/
C    1'       load and the portion of it carried by the panel skin')
      ENDIF
C
      WRITE(IFILE8,*)' FROM LOAD SET B (fixed applied loads)..'
      IF (NSEG(1).GT.1.AND.ISTIF(1).NE.5) THEN
         IF (ISTIF(1).NE.5) THEN
            WLABLE(1) = ' STRINGER  BASE '
            WLABLE(2) = ' STRINGER  WEB  '
            WLABLE(3) = ' STRINGER FLANGE'
         ELSE
            WLABLE(1) = '  LOWER SKIN    '
            WLABLE(2) = ' TRUSSCORE WEB  '
            WLABLE(3) = '  UPPER SKIN    '
         ENDIF
         WRITE(IFILE8,802) WLABLE(1),(RESFXL(I,IWEBM,1),I=1,3)
         WRITE(IFILE8,803) WLABLE(2),(RESFXL(I,IWEB,1),I=1,3)
         WRITE(IFILE8,804) WLABLE(3),(RESFXL(I,IWEBP,1),I=1,3)
      ENDIF
      IF (NSEG(2).GT.1.AND.ISTIF(2).NE.5) THEN
         IF (ISTIF(2).NE.5) THEN
            WLABLE(1) = '   RING    BASE '
            WLABLE(2) = '   RING    WEB  '
            WLABLE(3) = '   RING   FLANGE'
         ELSE
            WLABLE(1) = '  LOWER SKIN    '
            WLABLE(2) = ' TRUSSCORE WEB  '
            WLABLE(3) = '  UPPER SKIN    '
         ENDIF
         WRITE(IFILE8,802) WLABLE(1),(RESFXL(I,IWEBM,2),I=1,3)
         WRITE(IFILE8,803) WLABLE(2),(RESFXL(I,IWEB,2),I=1,3)
         WRITE(IFILE8,804) WLABLE(3),(RESFXL(I,IWEBP,2),I=1,3)
      ENDIF
C
      WRITE(IFILE8,*)' RESULTANTS FROM THERMAL LOADING:'
      IF (NSEG(1).GT.1.AND.ISTIF(1).NE.5) THEN
         IF (ISTIF(1).NE.5) THEN
            WLABLE(1) = ' STRINGER  BASE '
            WLABLE(2) = ' STRINGER  WEB  '
            WLABLE(3) = ' STRINGER FLANGE'
         ELSE
            WLABLE(1) = '  LOWER SKIN    '
            WLABLE(2) = ' TRUSSCORE WEB  '
            WLABLE(3) = '  UPPER SKIN    '
         ENDIF
         WRITE(IFILE8,802) WLABLE(1),(RESFIX(I,IWEBM,1),I=1,3)
         WRITE(IFILE8,803) WLABLE(2),(RESFIX(I,IWEB,1),I=1,3)
         WRITE(IFILE8,804) WLABLE(3),(RESFIX(I,IWEBP,1),I=1,3)
      ENDIF
      IF (NSEG(2).GT.1.AND.ISTIF(2).NE.5) THEN
         IF (ISTIF(2).NE.5) THEN
            WLABLE(1) = '   RING    BASE '
            WLABLE(2) = '   RING    WEB  '
            WLABLE(3) = '   RING   FLANGE'
         ELSE
            WLABLE(1) = '  LOWER SKIN    '
            WLABLE(2) = ' TRUSSCORE WEB  '
            WLABLE(3) = '  UPPER SKIN    '
         ENDIF
         WRITE(IFILE8,802) WLABLE(1),(RESFIX(I,IWEBM,2),I=1,3)
         WRITE(IFILE8,803) WLABLE(2),(RESFIX(I,IWEB,2),I=1,3)
         WRITE(IFILE8,804) WLABLE(3),(RESFIX(I,IWEBP,2),I=1,3)
      ENDIF
C
C
  810 CONTINUE    
C
      RETURN
      END
