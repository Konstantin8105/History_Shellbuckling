C=DECK      ARRAYS
      SUBROUTINE ARRAYS(IFILE,IW,ILOC,DS,N,AS,BS,ILOCAL,RESULT,
     1                  AXIAL,INDIC,FB,THERMX,P,FRHS,KAPPA1,KAPPA2,
     1                  IFINIS,R,IMODE,LENMOD,IFREEX,TEMP,IMTEMP,
C BEG MAR 1996
C BEG OCT 1996
C BEG JULY 1997
C BEG JUN 2004
     1                  WPB1,IGLOBF,ITER,ICTAN,DELTAN,IWRITE,ITOR,
     1                  ILABEL,IMOD,
     1       B,B2,B0,B20,H,H0,W,W0,W2,W20,IZSTIF,ISTIF,NSEGB5,M2,
     1       I5,M3,NCONDB,D1B,D2B,IFIX,IFX,ITYPE,IFIXB,
     1       IFXB,ITYPEB,IMAXB,KMAXB,ILOCB,
     1       IROWCB,IIWB,IDRW,IBLK,NGBK,NKF,INTEXT,RAD2,
     1       CURV2,NXVAR,NYVAR,WG1S,WYYGNS,WYYPNS,WYYLCS,RADNEW,
     1       NXFIX,NYFIX,C11TAN,C12TAN,C22TAN,C33TAN,
     1       CX,CY,IBEAM,IONEST,IICURV,WFOUND,ISANDW,NLAYER,IFREE,
     1       KROOTS,AXXIAL,CIRC,BLL,NAFN,CX3,TX,TY,
     1       IFREEY,IGLOBP,IFAY,NPRT,MAXSEG,IFAYT,NXYVAR,NXYFIX)
C END JUN 2004
C END JULY 1997
C END OCT 1996
C END MAR 1996
C
C  PURPOSE IS TO SET UP MATRICES K1, K2, AND M FOR EIGENPROBLEMS
C
C
C BEG JUN 2004
      DIMENSION C11TAN(23,8),C12TAN(23,8),C22TAN(23,8),C33TAN(23,8)
      DIMENSION I5(95),D1B(98),D2B(98),IFIX(98,6),IFX(98,6),ITYPE(98)
      DIMENSION IFIXB(98,6),IFXB(98,6),ITYPEB(98),KMAXB(20)
      DIMENSION IROWCB(98),IDRW(20,5),NGBK(20),NKF(20)
      DIMENSION INTEXT(2),NXVAR(23,8),NYVAR(23,8),NXYVAR(23,8)
      DIMENSION NXFIX(23,8),NYFIX(23,8),NXYFIX(23,8)
      DIMENSION B(2),B0(2),B2(2),B20(2),H(2),H0(2),W(2),W0(2)
      DIMENSION W2(2),W20(2),IZSTIF(2),ISTIF(2)
      DIMENSION CX(6,6,5),WFOUND(4,2),ISANDW(4,2),NLAYER(4,2)
      DIMENSION CX3(6,6,11),CY(6,6,5),TX(5),TY(5),IFAY(2),IFAYT(2)
C     COMMON/IZSTIX/IZSTIF(2)
C     COMMON/GEOM6/IFAY(2),ITRTOT,IRESET,NLOADS,NSTEPS,WMAX,NCROSS,
C    1       NOPLOT,KMAX,ILAYPL,XMXX,XMIN,YMXX,YMIN,N3DPLT,NOBJ,NSTRNS,
C    1       NPLTST,NABSCI,IDIAG,ITRALL,IFAYT(2),IBEAM,IMISCL(5)
C END JUN 2004
C BEG FEB 2004
      DIMENSION ICX(4),CTOT(6,6),THERMT(6),THCURX(6,5),THCURT(6)
C END FEB 2004
C BEG JUN 2004
C     COMMON/THICK/TX(5),TY(5)
C     COMMON/TANSTF/C11TAN(23,8),C12TAN(23,8),C22TAN(23,8),C33TAN(23,8)
C     COMMON/SEGS/NSEGB5,M2,I5(95),I2,I2G
C     COMMON/TOTPTS/M3
C     COMMON/NCONDS/NCONDB
C     COMMON/RING3/D1B(98),D2B(98)
C     COMMON/JUNCT/IFIX(98,6),IFX(98,6),ITYPE(98)
C     COMMON/JUNCTB/IFIXB(98,6),IFXB(98,6),ITYPEB(98)
C     COMMON/BKSIZE/IMAXP,IMAXB,KMAXP(20),KMAXB(20)
C     COMMON/LOCATN/ILOCP,ILOCB,IROWCP(98),IROWCB(98),IIWP,IIWB
C     COMMON/BCK/IDRW(20,5)
C     COMMON/BLK/IBLK,NGBK(20),NKF(20)
      COMMON/MISCEL/ICOND1,ICOND2,KK,NSUB,KLAP,I5TOT,ICC,III,IV
C     COMMON/ORTA/IFLGG,KTM,KROOTS
C     COMMON/GEOM1/AXXIAL,CIRC,RRR
C     COMMON/GEOM0/B0(2),B20(2),H0(2),W0(2),W20(2)
C     COMMON/GEOM2/B(2),B2(2),H(2),W(2),W2(2)
C     COMMON/GEOM3/ISTIF(2),NLAYER(4,2),NSEG(2),INTEXT(2)
C     COMMON/GEOM5/RAD2,CURV2
C     COMMON/ALLCIJ/CX(6,6,5),CY(6,6,5),CS(6,6)
C     COMMON/OUTP/NPRT
C     COMMON/NVARXX/NXVAR(23,8),NYVAR(23,8),NXYVAR(23,8),MAXSEG,KOIT
C     COMMON/RADM13/WG1S,WYYGNS,WYYPNS,WYYLCS,RADNEW
C     COMMON/RADM14/IICURV
C     COMMON/GLOBPP/IGLOBP
      REAL NXVAR,NYVAR,NXYVAR,KAPPA1,KAPPA2
C     COMMON/NFIX/NXFIX(23,8),NYFIX(23,8),NXYFIX(23,8)
C END JUN 2004
      REAL NXFIX,NYFIX,NXYFIX,LENMOD
C
      DOUBLE PRECISION AS,BS,QSAVE,FB,FRHS,SEND
      DIMENSION DS(*),AS(*),BS(*),QSAVE(350),DUMMY(3)
      DIMENSION ILOC(*),IW(*),FB(*),THERMX(6,5),FRHS(*)
      DIMENSION GEOM(5),CNEW(6,6),RESULT(3,5,2)
C BEG 26 JAN 1989
      DIMENSION TEMP(*)
C END 26 JAN 1989
C BEG JULY 2006
      NPRTS = NPRT
C     IF (N.EQ.1.AND.(ILABEL.EQ.9341.OR.ILABEL.EQ.9460)) THEN
C        WRITE(8,'(A,3I5)') ' IICURV,IONEST,IBEAM=',
C    1                        IICURV,IONEST,IBEAM
C        NPRT = 3
C     ENDIF
C BEG JUN 2004
      IF (NPRT.GE.3)
     1 WRITE(8,'(A,I5)')' Entering ARRAYS: ILABEL=',ILABEL
C END JUN 2004
C END JULY 2006
      NNPRT = NPRT
C     IF (ILOCAL.EQ.1.AND.INDIC.NE.3) NNPRT = 3
C
      CMAX=CX(1,1,1)
      CMASS = 0.
C
      CALL MOVER(0.,0,AS,1,2*IMAXB)
      CALL MOVER(0.,0,BS,1,2*IMAXB)
      CALL MOVER(0.,0,DUMMY,1,3)
      IF (INDIC.EQ.3) CALL MOVER(0.,0,FRHS,1,2*M3)
C
      IBUCK = 1
C
C BEG APR 1992
C BEG AUG 1997
      IF (IWRITE.EQ.1.OR.(NNPRT.GE.3.AND.ITER.EQ.1)) THEN
C END AUG 1997
      WRITE(IFILE,14) NCONDB
      WRITE(IFILE,15) ((IFIXB(I,J),J=1,6),I=1,NCONDB)
      WRITE(IFILE,16) ((IFXB(I,J),J=1,6), I=1,NCONDB)
      WRITE(IFILE,17) (ITYPEB(I),I=1,NCONDB)
   14 FORMAT(//' NCONDB=',I10)
C END APR 1992
   15 FORMAT(//' IFIXB='/ (6I10))
   16 FORMAT(//' IFXB ='/ (6I10))
   17 FORMAT(//' ITYPEB=', 5I10)
      ENDIF
C
   20 CONTINUE
      ICOND1 = 1
      ICOND2 = 1
      NSUB = 7
      KLAP = 4
      I5TOT = 0
      ICC = 5
      III = 1
      IV = 0
      IF (IBUCK.EQ.1) KROOTS = 0
      ITOTL = 1
      SEND = 0.
C
      DO 100 ISEG=1,NSEGB5
C
C     CALCULATE MATRIX ELEMENTS FOR NEXT SHELL SEGMENT
C
      I5I = I5(ISEG)
C
C  GET CORRECT C(i,j) AND LOADING IN THE VARIOUS SEGMENTS...
C
C BEG JULY 1996
C BEG JUN 2004
      CALL IDSEG(ISTIF(1),ISEG,NSEGB5,B20(1),W20(1),J,IFAY)
C END JUN 2004
C END JULY 1996
      PRESS = P
      IF (J.GT.2) PRESS = 0.
C BEG MAY 1997
      IF (IZSTIF(1).EQ.1.AND.J.GT.1) PRESS = 0.
C END MAY 1997
C BEG JULY 1989
C BEG MARCH 1990
      FACT = 1.0
C BEG APR 1991
      IGLOBP = 0
C BEG NOV 1991
      IF (IGLOBF.LE.-2) THEN
         IGLOBP = IGLOBF
C END NOV 1991
         FACT = 0.0
      ENDIF
C END APR 1991
C BEG MAY 1998
      IF (ISTIF(1).EQ.4) THEN
         ISEGB = 3
         ISEGC = NSEGB5-1
         IF (NSEGB5.EQ.6) THEN
            ISEGB = 2
            ISEGC = NSEGB5
         ENDIF
         PRESS = P
         IF (P.GE.0.) THEN
            IF (ISEG.EQ.ISEGB) PRESS = 0.
         ELSE
            IF (ISEG.GT.ISEGB.AND.ISEG.LT.ISEGC) PRESS = 0.
         ENDIF
      ENDIF
C END MAY 1998
      IF (ISTIF(1).EQ.5) THEN
         IF (IGLOBF.EQ.-1) FACT = 0.0
C END MARCH 1990
         PRESS = P
         IF (P.GE.0.) THEN
C BEG NOV 1995
            IF (J.LT.3.OR.J.EQ.4) PRESS = 0.
C END NOV 1995
         ELSE
C BEG NOV 1995
            IF (J.NE.4.AND.J.GT.1) PRESS = 0.
C END NOV 1995
         ENDIF
      ENDIF
C END JULY 1989
C BEG DEC 2001
      IF ((IGLOBF.EQ.0.OR.IGLOBF.EQ.-1.OR.IGLOBF.EQ.-2)
     1     .AND.IICURV.EQ.1.AND.ILOCAL.EQ.1) THEN
C BEG JUN 2004
         CALL GETGEO(ISEG,GEOM,RATIO,AXIAL,RADNEW,
     1 B,B2,B0,B20,H,H0,W,W0,W2,W20,IZSTIF,ISTIF,INTEXT,NSEGB5,
     1 AXXIAL,CIRC,IBEAM,RAD2)
C END JUN 2004
      ELSE
C BEG JUN 2004
         CALL GETGEO(ISEG,GEOM,RATIO,AXIAL,R,
     1 B,B2,B0,B20,H,H0,W,W0,W2,W20,IZSTIF,ISTIF,INTEXT,NSEGB5,
     1 AXXIAL,CIRC,IBEAM,RAD2)
C END JUN 2004
      ENDIF
C END DEC 2001
C BEG APR 1996
      CALL MOVER(THERMX(1,J),1,THERMT,1,6)
      IF (ISTIF(1).EQ.5.AND.IFAYT(1).EQ.1
     1                 .AND.(ISEG.EQ.5.OR.ISEG.EQ.6)) THEN
         ICX(1) = J
         ICX(2) = 2
         ICX(3) = 0
         ICX(4) = 0
C BEG FEB 2004
         CALL CSTACK(IFILE,ISEG,CX,THERMX,TX,2,ICX,CTOT,THERMT,
     1               THCURX,THCURT)
C END FEB 2004
         CALL CHGCIJ(CTOT,CNEW)
      ELSE
         CALL CHGCIJ(CX(1,1,J),CNEW)
      ENDIF
C END APR 1996
      IGLOB = 0
C
C     IF (NNPRT.GE.3) WRITE(IFILE,25) ICOND1,ICOND2,KROOTS
   25 FORMAT(//' ICOND1, ICOND2, KROOTS =',3I5)
C BEG APR 1991
C BEG JUNE 1992
C BEG FEB 2009
      IF ((NNPRT.GE.3.AND.ITER.EQ.1.AND.INDIC.EQ.3)
     1    .OR.IWRITE.GT.0)
C END FEB 2009
C END JUNE 1992
     1   WRITE(IFILE,30) NSEGB5,AXIAL,CIRC,R,ISEG,
     1 B(1),B2(1),H(1),W(1),W2(1),(GEOM(K),K=1,5),CMAX,RATIO,
     1 KAPPA1,KAPPA2
   30 FORMAT(/' INPUT DATA FOR PANEL MODULE WITH',I2,' SEGMENTS AND'/
     1' OVERALL DIMENSIONS (AXIAL, CIRC, RAD. OF CURV.)=',1P,3E12.4/
     1' INPUT DATA FOR SEGMENT NO.',I2/
     1'   B, B2, H, W, W2   =',1P,5E12.4/
     1'   PI/L,RD,1/R,R*FK2,-CURV2=',1P,5E12.4/
     1'    C(1,1)           =',1P,E12.4/
     1'    RATIO            =',1P,E12.4/
     1'   KAPPA1, KAPPA2    =',1P,2E12.4)
C END APR 1991
C BEG JAN 2007
C     IF (ILABEL.EQ.9311) THEN
C       WRITE(8,'(A)') ' We are in SUBROUTINE ARRAYS...'
C       WRITE(8,'(A,1P,E12.4)')  'RADNEW=',RADNEW
C       WRITE(8,'(A,1P,5E12.4)') '(GEOM(K),K=1,5)=',(GEOM(K),K=1,5)
C     ENDIF
C END JAN 2007
C
C BEG JUNE 1992
C BEG JULY 1997
C     IF (NNPRT.GE.3.AND.IBUCK.EQ.1.AND.ITER.EQ.1.AND.INDIC.EQ.3) THEN
      IF ((NNPRT.GE.3.AND.IBUCK.EQ.1.AND.ITER.EQ.1.AND.INDIC.EQ.3)
     1   .OR.IWRITE.GT.0) THEN
         WRITE(IFILE,'(A,I3)')' IBUCK=',IBUCK
C END JULY 1997
         WRITE(IFILE,40) I5I,ITOTL,DS(ITOTL),DS(ITOTL+1),
     1   DS(ITOTL+2),DS(ITOTL+3),DS(ITOTL+4),DS(ITOTL+5),DS(ITOTL+6),
     1   J,IMAXB,NCONDB,N,(RESULT(K,J,1),K=1,2),
     1   CNEW(1,1),CNEW(1,2),CNEW(2,1),CNEW(2,2),
     1   (NXVAR(K,ISEG),K=1,I5I)
   40    FORMAT(
     1'  NO. OF NODES,ITOTL =',2I5/
     1'    ELEMENT SIZES, DS=',1P,7E12.4/
     1'    UNIQUE SEG. NO.,J=',I5/
     1'    SIZE OF AS BLOCK =',I5/
     1'   NO. OF CONSTRAINTS=',I5/
     1'   NO. OF AXIAL WAVES=',I5/
     1'    RESULTANTS, NX,NY=',1P,2E12.4/
     1'  CN11,CN12,CN21,CN22=',1P,4E12.4/
     1'    AXIAL: NXVAR     =',1P,11E9.1)
         WRITE(IFILE,41) (NYVAR(K,ISEG),K=1,I5I)
   41    FORMAT(
     1'    CIRC.: NYVAR     =',1P,11E9.1)
         WRITE(IFILE,42) (NXFIX(K,ISEG),K=1,I5I)
   42    FORMAT(
     1'   AXIAL : NXFIX     =',1P,11E9.1)
         WRITE(IFILE,43) (NYFIX(K,ISEG),K=1,I5I)
   43    FORMAT(
     1'   CIRC. : NYFIX     =',1P,11E9.1)
      ENDIF
C END JUNE 1992
C
      IF (IBUCK.EQ.1) THEN
         IF (INDIC.NE.3.OR.ISTIF(1).NE.5) THEN
            CALL STABIL(IFILE,ISEG,I5I,DS(ITOTL),NSEGB5,IBUCK,CNEW,
     1       CMASS,GEOM,AS,IW,ILOC,IFXB,IFIXB,IROWCB,ITYPEB,IMAXB,CMAX,
     1       DUMMY,DUMMY,D1B,D2B,NCONDB,QSAVE,N,RATIO,ISTIF(1),
     1       ILOCAL,NXFIX(1,ISEG),NYFIX(1,ISEG),NXYFIX(1,ISEG),
     1       NXVAR(1,ISEG),NYVAR(1,ISEG),NXYVAR(1,ISEG),IGLOB,MAXSEG,
C BEG APR 1996
     1       IBLK,IDRW,NGBK,NKF,NNPRT,INDIC,FB,THERMT,PRESS,
C END APR 1996
     1       FRHS,SEND,KAPPA1,KAPPA2,IFINIS,R,C11TAN(1,ISEG),
     1       C12TAN(1,ISEG),C22TAN(1,ISEG),J,RESULT(1,J,1),IMODE,LENMOD,
C BEG MAR 1996
C BEG OCT 1996
C BEG MAY 1997
C BEG JULY 1997
     1       IFREEX,TEMP,IMTEMP,WPB1,FACT,ITER,ICTAN,DELTAN,IZSTIF(1),
C BEG JUN 2004
     1       IWRITE,ITOR,ILABEL,IMOD,
     1       CX,IBEAM,IONEST,IICURV,WFOUND,ISANDW,NLAYER,B20,IFREE,
     1       KROOTS,AXIAL,CIRC,BLL,B,B2,W,W2,CURV2,NAFN,CX3,TX,
     1       IFREEY,IGLOBP,W20)
C END JUN 2004
C END JULY 1997
C END MAY 1997
C END OCT 1996
C END MAR 1996
         ENDIF
C
         IF (INDIC.EQ.3.AND.ISTIF(1).EQ.5) THEN
            CALL STABIL(IFILE,ISEG,I5I,DS(ITOTL),NSEGB5,IBUCK,CNEW,
     1       CMASS,GEOM,AS,IW,ILOC,IFX,IFIX,IROWCB,ITYPEB,IMAXB,CMAX,
     1       DUMMY,DUMMY,D1B,D2B,NCONDB,QSAVE,N,RATIO,ISTIF(1),
     1       ILOCAL,NXFIX(1,ISEG),NYFIX(1,ISEG),NXYFIX(1,ISEG),
     1       NXVAR(1,ISEG),NYVAR(1,ISEG),NXYVAR(1,ISEG),IGLOB,MAXSEG,
C BEG APR 1996
     1       IBLK,IDRW,NGBK,NKF,NNPRT,INDIC,FB,THERMT,PRESS,
C END APR 1996
     1       FRHS,SEND,KAPPA1,KAPPA2,IFINIS,R,C11TAN(1,ISEG),
     1       C12TAN(1,ISEG),C22TAN(1,ISEG),J,RESULT(1,J,1),IMODE,LENMOD,
C BEG MAR 1996
C BEG OCT 1996
C BEG MAY 1997
C BEG JULY 1997
     1       IFREEX,TEMP,IMTEMP,WPB1,1.0,ITER,0,DELTAN,IZSTIF(1),
C BEG JUN 2004
     1       IWRITE,ITOR,ILABEL,IMOD,
     1       CX,IBEAM,IONEST,IICURV,WFOUND,ISANDW,NLAYER,B20,IFREE,
     1       KROOTS,AXIAL,CIRC,BLL,B,B2,W,W2,CURV2,NAFN,CX3,TX,
     1       IFREEY,IGLOBP,W20)
C END JUN 2004
C END JULY 1997
C END MAY 1997
C END OCT 1996
C END MAR 1996
         ENDIF
C
      ELSE
C
      CALL STABIL(IFILE,ISEG,I5I,DS(ITOTL),NSEGB5,IBUCK,CNEW,CMASS,
     1 GEOM,BS,IW,ILOC,IFXB,IFIXB,IROWCB,ITYPEB,IMAXB,CMAX,
     1 DUMMY,DUMMY,D1B,D2B,NCONDB,QSAVE,N,RATIO,ISTIF(1),
     1 ILOCAL,NXFIX(1,ISEG),NYFIX(1,ISEG),NXYFIX(1,ISEG),
     1 NXVAR(1,ISEG),NYVAR(1,ISEG),NXYVAR(1,ISEG),IGLOB,MAXSEG,
C BEG APR 1996
     1 IBLK,IDRW,NGBK,NKF,NNPRT,INDIC,FB,THERMT,PRESS,FRHS,SEND,
C END APR 1996
     1 KAPPA1,KAPPA2,IFINIS,R,C11TAN(1,ISEG),C12TAN(1,ISEG),
     1 C22TAN(1,ISEG),J,RESULT(1,J,1),IMODE,LENMOD,IFREEX,TEMP,IMTEMP,
C BEG MAR 1996
C BEG OCT 1996
C BEG MAY 1997
C BEG JULY 1997
C BEG JUN 2004
     1 WPB1,FACT,ITER,ICTAN,DELTAN,IZSTIF(1),
     1 IWRITE,ITOR,ILABEL,IMOD,
     1 CX,IBEAM,IONEST,IICURV,WFOUND,ISANDW,NLAYER,B20,IFREE,
     1 KROOTS,AXIAL,CIRC,BLL,B,B2,W,W2,CURV2,NAFN,CX3,TX,
     1 IFREEY,IGLOBP,W20)
C END JUN 2004
C END JULY 1997
C END MAY 1997
C END OCT 1996
C END MAR 1996
C
      ENDIF
C
      ITOTL = ITOTL + I5I
  100 CONTINUE
C
      IF (NPRT.GT.2) WRITE(IFILE,120) IBUCK,N
  120 FORMAT(/' ***** COEFFICIENT MATRIX CALCULATED. IBUCK =',I2,
     1 '; N =',I6,' WAVES *****'/)
C BEG JULY 2006
      NPRT = NPRTS
C END JULY 2006
      IF (IBUCK.EQ.2.OR.INDIC.EQ.3) RETURN
      IBUCK = 2
      GO TO 20
      END
C
C
C
C=DECK      GLOBAX
      SUBROUTINE GLOBAX(IFILE,IW,ILOC,DS,N,AS,BS,INDIC,FB,THERMS,P,FRHS,
     1        KAPPA1,KAPPA2,IFINIS,RESULT,
     1        CS,FNX,FNY,FNXY,FXBEG,FXEND,FYBEG,FYEND,FXYBEG,FXYEND,
     1        FNX0,FNY0,FNXY0,R,IMODE,IABP,LENMOD,IFREEX,TEMP,IMTEMP,
C BEG JUNE 1992
C BEG OCT 1996
C BEG JULY 1997
C BEG JUN 2004
     1        WPB1,ITER,DELTAN,IWRITE,ITOR,IMOD,
     1        CX,IBEAM,IONEST,IICURV,WFOUND,ISANDW,NLAYER,B20,IFREE,
     1        KROOTS,AXIAL,CIRC,BLL,B,B2,W,W2,CURV2,NAFN,CX3,TX,
     1        IFREEY,IGLOBP,RAD2,W20)
C END JUN 2004
C END JULY 1997
C END OCT 1996
C END JUNE 1992
C
C  PURPOSE IS TO SET UP MATRICES K1, K2, AND M FOR EIGENPROBLEMS
C
C
C BEG JUN 2004
      DIMENSION CX(6,6,5),WFOUND(4,2),ISANDW(4,2),NLAYER(4,2)
      DIMENSION B20(2),B(2),B2(2),W(2),W2(2),W20(2)
      DIMENSION CX3(6,6,11),TX(5)
C END JUN 2004
C BEG MAY 1997
      COMMON/IZSTIX/IZSTIF(2)
C END MAY 1997
      COMMON/FNP0/FNXP0,FNYP0,FNXYP0,FNXPL0,FNYPL0,FNXYPL
      COMMON/TANSTF/C11TAN(23,8),C12TAN(23,8),C22TAN(23,8),C33TAN(23,8)
      COMMON/SEGSG/NSEGB5,M2,I5(95),I2,I2G
      COMMON/TOTPTG/M3
      COMMON/NCONDG/NCONDB
      COMMON/RING3G/D1B(98),D2B(98)
      COMMON/JUNCTG/IFIXB(98,6),IFXB(98,6),ITYPEB(98)
      COMMON/BKSIZG/IMAXP,IMAXB,KMAXP(20),KMAXB(20)
      COMMON/LOCATG/ILOCP,ILOCB,IROWCP(98),IROWCB(98),IIWP,IIWB
      COMMON/BCKG/IDRW(20,5)
      COMMON/BLKG/IBLK,NGBK(20),NKF(20)
      COMMON/LOADS2/FNX00,FNY00,FNXY00,RESFIX(3,5,2)
      COMMON/MISCEL/ICOND1,ICOND2,KK,NSUB,KLAP,I5TOT,ICC,III,IV
C BEG JUN 2004
C     COMMON/ORTA/IFLGG,KTM,KROOTS
      COMMON/OUTP/NPRT
C     COMMON/GEOM1/AXIAL,CIRC,RRR
C     COMMON/GEOM5/RAD2,CURV2
C BEG APR 1991
C     COMMON/GLOBPP/IGLOBP
C END APR 1991
C END JUN 2004
      DIMENSION NXFIX(100),NYFIX(100),NXYFIX(100)
      DIMENSION NXVAR(100),NYVAR(100),NXYVAR(100)
      DIMENSION CS(6,6),RESULT(3,5,2)
      REAL NXFIX,NYFIX,NXYFIX,NXVAR,NYVAR,NXYVAR,KAPPA1,KAPPA2,LENMOD
C
      DOUBLE PRECISION AS,BS,QSAVE,FB,FRHS,SEND
      DIMENSION DS(*),AS(*),BS(*),QSAVE(350)
      DIMENSION ILOC(*),IW(*),FB(*),THERMS(*),FRHS(*)
      DIMENSION CNEW(6,6),DUMMY(3),GEOM(5)
C BEG 26 JAN 1989
      DIMENSION TEMP(*)
C END 26 JAN 1989
C
C BEG APR 1991
      IGLOBP = 0
C END APR 1991
      CMAX=CS(1,1)
      CMASS = 0.
C
      CALL MOVER(0.,0,AS,1,2*IMAXB)
      CALL MOVER(0.,0,BS,1,2*IMAXB)
      CALL MOVER(0.,0,DUMMY,1,3)
      IF (INDIC.EQ.3) CALL MOVER(0.,0,FRHS,1,2*M3)
C
      IBUCK = 1
C
   20 CONTINUE
      ICOND1 = 1
      ICOND2 = 1
      NSUB = 7
      KLAP = 4
      I5TOT = 0
      ICC = 5
      III = 1
      IV = 0
      IF (IBUCK.EQ.1) KROOTS = 0
      ITOTL = 1
      SEND = 0.
      GEOM(1) = 3.1415927/(AXIAL/SQRT(3.85))
      GEOM(1) = 3.1415927/AXIAL
      GEOM(3) = -1./R
      GEOM(5) = -1./RAD2
C BEG MAR 2005
C     IF (INDIC.EQ.3.AND.IFINIS.EQ.0)
C    1WRITE(IFILE,'(A,/,(1P,5E12.4))') ' DS array from GLOBAX...',
C    1 (DS(I),I=1,100)
C    1WRITE(IFILE,1100) R,AXIAL,CS(1,1),CS(2,2),CS(3,3),CS(4,4),
C    1 CS(5,5),CS(6,6),CS(1,4),CS(2,5),FXBEG,FNX0,FYBEG,FNY0,FXYBEG,
C    1 FNXY0
C1100  FORMAT(/' IN SUBROUTINE GLOBAL...'/
C    1'  CYLINDER RADIUS, R;   EFFECTIVE LENGTH, AXIAL     =',1P,2E12.4/
C    1'  SMEARED C(i,j): CS11,CS22,CS33,CS44,CS55,CS66     =',1P,6E12.4/
C    1'                  CS14,CS25                         =',1P,2E12.4/
C    1'  AXIAL RESULTANTS, FXBEG(Load Set A), FNX0(L.S.B)  =',1P,2E12.4/
C    1'  HOOP  RESULTANTS, FYBEG(Load Set A), FNY0(L.S.B)  =',1P,2E12.4/
C    1'  IN-PLANE SHEAR  , FXYBEG,            FNXY0        =',
C    1   1P,2E12.4/)
C     IF (INDIC.EQ.3.AND.IFINIS.EQ.0) WRITE(IFILE,'(A,2I3,1P,2E12.4)')
C    1' NSEGB5,I5(1),CIRC,P=',NSEGB5,I5(1),CIRC,P
C END MAR 2005
C
      DO 100 ISEG=1,NSEGB5
C
C     CALCULATE MATRIX ELEMENTS FOR NEXT SHELL SEGMENT
C
      I5I = I5(ISEG)
      PRESS = P
C
C  GET CORRECT C(i,j) AND LOADING IN THE VARIOUS SEGMENTS...
C
      CALL CHGCIJ(CS,CNEW)
C
C  GET VARIATION OF LOADS ACROSS WIDTH OF THE PANEL...
C
      IF (INDIC.NE.3) THEN
         FNXTOT = FNX0 +FNXP0 +FNXPL0
         FNYTOT = FNY0 +FNYP0 +FNYPL0
         IF (IABP.EQ.0) THEN
            FNXFIX = FNXTOT
            FNYFIX = FNYTOT
         ELSE
            FNXFIX = FNX0
            FNYFIX = FNY0
         ENDIF
         CALL VARLOD(I5I,NXFIX,FNXFIX,FNXFIX)
         CALL VARLOD(I5I,NYFIX,FNYFIX,FNYFIX)
         CALL VARLOD(I5I,NXYFIX,FNXY0,FNXY0)
         CALL VARLOD(I5I,NXVAR,FXBEG+FNXTOT,FXEND+FNXTOT)
         CALL VARLOD(I5I,NYVAR,FYBEG+FNYTOT,FYEND+FNYTOT)
         CALL VARLOD(I5I,NXYVAR,FXYBEG+FNXY0,FXYEND+FNXY0)
      ELSE
         CALL VARLOD(I5I,NXFIX,FXBEG+FNX0,FXEND+FNX0)
         CALL VARLOD(I5I,NYFIX,FYBEG+FNY0,FYEND+FNY0)
         CALL VARLOD(I5I,NXYFIX,FXYBEG+FNXY0,FXYEND+FNXY0)
      ENDIF
C
      IF (IBUCK.EQ.1) THEN
      CALL STABIL(IFILE,ISEG,I5I,DS(ITOTL),NSEGB5,IBUCK,CNEW,CMASS,
     1 GEOM,AS,IW,ILOC,IFXB,IFIXB,IROWCB,ITYPEB,IMAXB,CMAX,
     1 DUMMY,DUMMY,D1B,D2B,NCONDB,QSAVE,N,1.0,0,0,
     1 NXFIX,NYFIX,NXYFIX,NXVAR,NYVAR,NXYVAR,1,0,IBLK,IDRW,NGBK,NKF,
     1 NPRT,INDIC,FB,THERMS,PRESS,FRHS,SEND,KAPPA1,KAPPA2,IFINIS,R,
     1 C11TAN(1,1),C12TAN(1,1),C22TAN(1,1),1,RESULT(1,1,1),IMODE,
C BEG MAR 1996
C BEG OCT 1996
C BEG MAY 1997
C BEG JULY 1997
     1 LENMOD,IFREEX,TEMP,IMTEMP,WPB1,1.0,ITER,0,0.,IZSTIF(1),
C BEG JUN 2004
     1 IWRITE,ITOR,ILABEL,IMOD,
     1 CX,IBEAM,IONEST,IICURV,WFOUND,ISANDW,NLAYER,B20,IFREE,
     1 KROOTS,AXIAL,CIRC,BLL,B,B2,W,W2,CURV2,NAFN,CX3,TX,
     1 IFREEY,IGLOBP,W20)
C END JUN 2004
C END JULY 1997
C END MAY 1997
C END OCT 1996
C END MAR 1996
C
      ELSE
C
      CALL STABIL(IFILE,ISEG,I5I,DS(ITOTL),NSEGB5,IBUCK,CNEW,CMASS,
     1 GEOM,BS,IW,ILOC,IFXB,IFIXB,IROWCB,ITYPEB,IMAXB,CMAX,
     1 DUMMY,DUMMY,D1B,D2B,NCONDB,QSAVE,N,1.0,0,0,
     1 NXFIX,NYFIX,NXYFIX,NXVAR,NYVAR,NXYVAR,1,0,IBLK,IDRW,NGBK,NKF,
     1 NPRT,INDIC,FB,THERMS,PRESS,FRHS,SEND,KAPPA1,KAPPA2,IFINIS,R,
     1 C11TAN(1,1),C12TAN(1,1),C22TAN(1,1),1,RESULT(1,1,1),IMODE,
C BEG MAR 1996
C BEG OCT 1996
C BEG MAY 1997
C BEG JULY 1997
     1 LENMOD,IFREEX,TEMP,IMTEMP,WPB1,1.0,ITER,0,0.,IZSTIF(1),
C BEG JUN 2004
     1 IWRITE,ITOR,ILABEL,IMOD,
     1 CX,IBEAM,IONEST,IICURV,WFOUND,ISANDW,NLAYER,B20,IFREE,
     1 KROOTS,AXIAL,CIRC,BLL,B,B2,W,W2,CURV2,NAFN,CX3,TX,
     1 IFREEY,IGLOBP,W20)
C END JUN 2004
C END JULY 1997
C END MAY 1997
C END OCT 1996
C END MAR 1996
C
      ENDIF
C
      ITOTL = ITOTL + I5I
  100 CONTINUE
C
      IF (NPRT.GT.2) WRITE(IFILE,120) IBUCK,N
  120 FORMAT(/' ***** COEFFICIENT MATRIX CALCULATED. IBUCK =',I2,
     1 '; N =',I6,' WAVES *****'/)
      IF (IBUCK.EQ.2.OR.INDIC.EQ.3) RETURN
      IBUCK = 2
      GO TO 20
      END
C
C
C
C=DECK      GETGEO
C BEG JUN 2004
      SUBROUTINE GETGEO(ISEG,GEOM,RATIO,AXIAL,R,
     1 B,B2,B0,B20,H,H0,W,W0,W2,W20,IZSTIF,ISTIF,INTEXT,NSEGB5,
     1 AXXIAL,CIRC,IBEAM,RAD2)
C END JUN 2004
C
C  PURPOSE IS TO CALCULATE GEOMETRY PARAMETERS NEEDED IN STABIL FROM
C  CROSS-SECTION DIMENSIONS OF THE PANEL MODULE
C
      DIMENSION GEOM(*)
C BEG JUN 2004
      DIMENSION B(2),B0(2),B2(2),B20(2),H(2),H0(2),W(2),W0(2)
      DIMENSION W2(2),W20(2),IZSTIF(2),ISTIF(2),INTEXT(2)
C     COMMON/SEGS/NSEGB5,M2,I5(95),I2,I2G
C     COMMON/GEOM1/AXXIAL,CIRC,RRR
C     COMMON/GEOM0/B0(2),B20(2),H0(2),W0(2),W20(2)
C     COMMON/GEOM2/B(2),B2(2),H(2),W(2),W2(2)
C     COMMON/GEOM3/ISTIF(2),NLAYER(4,2),NSEG(2),INTEXT(2)
C     COMMON/GEOM5/RAD2,CURV2
C BEG MAY 1997
C     COMMON/IZSTIX/IZSTIF(2)
C END MAY 1997
C BEG FEB 1996
C     COMMON/GEOM6/IFAY(2),ITRTOT,IRESET,NLOADS,NSTEPS,WMAX,NCROSS,
C    1       NOPLOT,KMAX,ILAYPL,XMXX,XMIN,YMXX,YMIN,N3DPLT,NOBJ,NSTRNS,
C    1       NPLTST,NABSCI,IDIAG,ITRALL,IFAYT(2),IBEAM,IMISCL(5)
C END JUN 2004
C END FEB 1996
C
      GEOM(1) = 3.1415927/AXIAL
      GEOM(2) = 1.
      GEOM(4) = 0.
      RATIO = (B(1) - B2(1))/(B0(1) - B20(1))
C BEG MAY 1997
      IF (IZSTIF(1).EQ.1) RATIO = B(1)/B0(1)
C END MAY 1997
C BEG JULY 1989
      IF (ISTIF(1).NE.5) THEN
         IF (ISTIF(1).NE.4) THEN
            IF (ISEG.EQ.2.AND.ISTIF(1).GT.0) RATIO = B2(1)/B20(1)
            IF (ISEG.EQ.4.AND.ISTIF(1).NE.3) RATIO = W(1)/W0(1)
            IF (ISEG.EQ.3) THEN
               GEOM(2) = 0.
               GEOM(4) = 1.
               GEOM(5) = 0.
               IF (INTEXT(1).EQ.1) GEOM(4) = -1.
               RATIO = H(1)/H0(1)
            ENDIF
         ELSE
C BEG JULY 1996
            IF (B20(1).GT.W20(1)) THEN
C END JULY 1996
               IC2 = 2
               IC3 = 3
               IC4 = 4
               IC5 = 5
               IC6 = 6
               IC7 = 7
               IF (ISEG.EQ.2.OR.ISEG.EQ.7) THEN
                  RATIO = (B2(1)-W2(1))/(B20(1)-W20(1))
                  IF (RATIO.LT.0) CALL ERREX
               ENDIF
            ELSE
               IC2 = 2
               IC3 = 2
               IC4 = 3
               IC5 = 4
               IC6 = 5
               IC7 = 2
            ENDIF
            IF (ISEG.EQ.IC3) RATIO = W2(1)/W20(1)
            IF (ISEG.EQ.IC4.OR.ISEG.EQ.IC6) THEN
               S = SQRT(H(1)*H(1) + (W2(1) - W(1))**2/4.)
               S0= SQRT(H0(1)**2+(W20(1)-W0(1))**2/4.)
               RATIO = S/S0
               GEOM(2) = 0.5*(W2(1)-W(1))/S
               FACT = 1.
               IF (INTEXT(1).EQ.1) FACT = -1.
               IF (ISEG.EQ.IC4) GEOM(4) =  FACT*H(1)/S
               IF (ISEG.EQ.IC6) GEOM(4) = -FACT*H(1)/S
               GEOM(5) = 0.
             ENDIF
             IF (ISEG.EQ.IC5) RATIO = W(1)/W0(1)
         ENDIF
      ELSE
C BEG NOV 1995
         IF (B2(1).LE.0.0.AND.(ISEG.EQ.2.OR.ISEG.EQ.4)) THEN
C END NOV 1995
            S = SQRT(H(1)*H(1) + .25*B(1)*B(1))
            S0= SQRT(H0(1)**2  + .25*B0(1)**2)
            RATIO = S/S0
            GEOM(2) = -.5*B(1)/S
            FACT = 1.
            IF (INTEXT(1).EQ.1) FACT = -1.
            IF (ISEG.EQ.2) GEOM(4) =  FACT*H(1)/S
            IF (ISEG.EQ.4) GEOM(4) = -FACT*H(1)/S
            GEOM(5) = 0.
         ENDIF
C BEG NOV 1995
         IF (B2(1).GT.0.0) THEN
          IF (ISEG.EQ.2.OR.ISEG.EQ.4) THEN
            S = SQRT(H(1)*H(1) + .25*(B(1)-2.*B2(1))**2)
            S0= SQRT(H0(1)**2  + .25*(B0(1)-2.*B20(1))**2)
            RATIO = S/S0
            GEOM(2) = -.5*(B(1)-2.*B2(1))/S
            FACT = 1.
            IF (INTEXT(1).EQ.1) FACT = -1.
            IF (ISEG.EQ.2) GEOM(4) =  FACT*H(1)/S
            IF (ISEG.EQ.4) GEOM(4) = -FACT*H(1)/S
            GEOM(5) = 0.
          ENDIF
          IF (ISEG.EQ.5) GEOM(2) = -1.
          IF (ISEG.EQ.5.OR.ISEG.EQ.6) RATIO = B2(1)/B20(1)
         ENDIF
C END NOV 1995
      ENDIF
C
      GEOM(3) = 0.
      GEOM(5) = 0.
      ICURV   = 0
      IF (ISTIF(1).NE.5) THEN
         IF (ISEG.EQ.1.OR.ISEG.EQ.2.OR.ISEG.EQ.NSEGB5) ICURV = 1
C BEG JULY 1996
         IF (ISTIF(1).EQ.4.AND.B20(1).GT.W20(1)) THEN
C END JULY 1996
            IF (ISEG.EQ.3.OR.ISEG.EQ.(NSEGB5-1)) ICURV = 1
         ENDIF
      ELSE
         IF (ISEG.EQ.1.OR.ISEG.EQ.3) ICURV = 0
      ENDIF
C END JULY 1989
      IF (ICURV.EQ.1) THEN
         SAC = 10000.*SQRT(AXXIAL**2 +CIRC**2)
         DIFF = ABS(ABS(R)-SAC)/ABS(R)
C BEG MAR 1996
         IF (IBEAM.EQ.1) DIFF = 0.
C END MAR 1996
         IF (DIFF.GT.0.5) GEOM(3) = - 1./R
         DIFF = ABS(ABS(RAD2)-SAC)/ABS(RAD2)
C BEG MAR 1996
         IF (IBEAM.EQ.1) DIFF = 0.
C END MAR 1996
         IF (DIFF.GT.0.5) GEOM(5) = - 1./RAD2
      ENDIF
C
      RETURN
      END
C
C
C
C=DECK      VARLOD
      SUBROUTINE VARLOD(I5I,FN,FNBEG,FNEND)
C
C  PURPOSE IS TO INTERPOLATE BETWEEN FNBEG AND FNEND TO GENERATE THE
C  LINEAR VARIATION OF LOAD ACROSS THE PANEL WIDTH...
C
      DIMENSION FN(*)
C
      F2 = FLOAT(I5I - 1)
C
      DO 10 I = 1,I5I
C
      F1 = FLOAT(I-1)
      FN(I) = FNBEG + (FNEND - FNBEG)*F1/F2
   10 CONTINUE
      RETURN
      END
C
C
C
C=DECK      STABIL
      SUBROUTINE STABIL(IFILE,ISEG,L5,HS,NSEG,IBUCK,COEF,CMASS,
     1 GEOM,AS,IW,ILOC,IFX,IFIX,IROWC,ITYPE,IMAX,CMAX,PSVAR,PSFIX,
     2 D1,D2,NCOND,QSAVE,N,RATIO,ISTIF,ILOCAL,NXFIX,NYFIX,
     2 NXYFIX,NXVAR,NYVAR,NXYVAR,IGLOB,MAXSEG,IBLK,IDRW,NGBK,NKF,
     2 NPRT,INDIC,FB,THERM,PRESS,FRHS,SEND,KAPPA1,KAPPA2,IFINIS,R,
     2 C11TAN,C12TAN,C22TAN,JSEG,NXAVE,IMODE,LENMOD,IFREEX,TEMP,IMTEMP,
C BEG MAR 1996
C BEG OCT 1996
C BEG MAY 1997
C BEG JULY 1997
C BEG JUN 2004
     2 WPB1,FACT,ITER,ICTAN,DELTAN,IZSTIF,IWRITE,ITOR,ILABEL,IMOD,
     2 CX,IBEAM,IONEST,IICURV,WFOUND,ISANDW,NLAYER,BB20,IFREE,
     2 KROOTS,AXIAL,CIRC,BLL,BB,BB2,WW,WW2,CURV2,NAFN,CX3,TX,IFREEY,
     2 IGLOBP,WW20)
C END JUN 2004
C END JULY 1997
C END MAY 1997
C END OCT 1996
C END MAR 1996
C
C     SETS UP STABILITY OR VIBRATION GLOBAL MATRICES
C     FOR CURRENT CIRC. WAVENUMBER N
C     BASED ON MINIMIZATION OF ENERGY WITH RESPECT TO MESH
C     POINT DISPLACEMENTS.
C
C BEG APR 2007
      COMMON/ISBSTF/KLAYER(4,2),NSURF(2,4,2),NB2(2,4,2),
     1              ISOSUB(2,4,2),ISOTYP(2,4,2),MATSUB(2,4,2)
C END APR 2007
      DOUBLE PRECISION  FNBAR,RD,FK1,RFK2,CURD,RDS,FN,H
      DOUBLE PRECISION FK2,FB,RHS,CHI,PSI,GAM,EPSL,SPSL,FRHS,E2W, E3U
      DOUBLE PRECISION C,B1,D,U,ROT,PRE,QD,AS,DS,SMS,CHIFIX
      DOUBLE PRECISION     VN1,VN2,WB,VB,UB,QSAVE,DSAVE
      DOUBLE PRECISION USTAR,VSTAR,WSTAR,HPAST,HI,WBD
      DOUBLE PRECISION RNT,SEND,THETA0,S,ARG
      DIMENSION RNT(6,7),FB(*),THERM(*),RHS(7),EPSL(6),SPSL(6),FRHS(*)
      DIMENSION UB(7),VB(7),WB(7),HS(*),WBD(7)
C BEG JUN 2004
      DIMENSION CX(6,6,5),WFOUND(4,2),ISANDW(4,2),NLAYER(4,2)
      DIMENSION BB20(2),WW20(2),BB(2),BB2(2),WW(2),WW2(2)
      DIMENSION CX3(6,6,11),TX(5)
C END JUN 2004
C BEG FEB 1996
C BEG JUN 2004 (comment out common blocks; argument list instead)
C     COMMON/RADM14/IICURV
C     COMMON/ALLCIJ/CX(6,6,5),CY(6,6,5),CS(6,6)
C     COMMON/GEOM6/IFAY(2),ITRTOT,IRESET,NLOADS,NSTEPS,WMAX,NCROSS,
C    1       NOPLOT,KMAX,ILAYPL,XMXX,XMIN,YMXX,YMIN,N3DPLT,NOBJ,NSTRNS,
C    1       NPLTST,NABSCI,IDIAG,ITRALL,IFAYT(2),IBEAM,IONEST,IMISCL(4)
C     COMMON/XFOUND/EFOUND,HXSIDE,WFOUND(4,2),HEXSID(4,2)
C     COMMON/XSANDW/ISANDW(4,2),ICORE(4,2)
C     COMMON/GEOM3/IISTIF(2),NLAYER(4,2),NNSEG(2),INTEXT(2)
C     COMMON/GEOM0/BB0(2),BB20(2),HH0(2),WW0(2),WW20(2)
C     COMMON/MAXSHR/SHEAR(2),XMAX,YMAX
C     COMMON/FREEDG/IFREE
C     COMMON/ORTA/IFLGG,KTM,KROOTS
C END JUN 2004
      COMMON/GGG/ FNBAR,RD,FK1,RFK2,CURD,RDS,FN,H
      COMMON/GGG1/FK2
      DIMENSION QD(5,7), PSVAR(3),PSFIX(3),COEF(6,6)
      DIMENSION IFX(98,6),IFIX(98,6),ILOC(*),ITYPE(98),IROWC(98)
      DIMENSION QSAVE(9,5,7),IRSAVE(9),ISAVE(9,7),IW(*),AS(*)
      DIMENSION C(6,6),B1(6,7),D(5,7),U(7,7),ROT(3,7),PRE(6,6)
      DIMENSION D1(98),D2(98),GEOM(*)
      DIMENSION C11TAN(23),C12TAN(23),C22TAN(23)
      COMMON/MISCEL/ICOND1,ICOND2,KK,NSUB,KLAP,I5TOT,IC,III,IV
      DIMENSION NGBK(*),NKF(*),IDRW(20,5)
      COMMON/INDICS/I3M,I2M,I1M,I0,I1P,I2P,I3P
      DIMENSION NXFIX(*),NYFIX(*),NXYFIX(*)
      DIMENSION NXVAR(*),NYVAR(*),NXYVAR(*)
C BEG JUN 2004 (comment out common blocks. use argument list instead)
C     COMMON/NEUTRL/DNEUTX,DNEUTY,DSURF
C     COMMON/GEOM1/AXIAL,CIRC,RRRR
C     COMMON/GNNSTB/EIGGEN,EIGLOC,EIGTST,FBOUND,EIGTHM
C     COMMON/BNDLAY/BLL
C     COMMON/GEOM2/BB(2),BB2(2),HH(2),WW(2),WW2(2)
C     COMMON/GEOM5/RAD2,CURV2
C     COMMON/PRWAVE/NAFN
C END JUN 2004
      COMMON/NPRESS/NXPRES(23,8),NYPRES(23,8),EP1MID(23,8),EP2MID(23,8)
      COMMON/MPRESS/MXPRES(23,8),MYPRES(23,8),EP4MID(23,8),EP5MID(23,8)
      COMMON/PMD/PW(23,8),PWD(23,8),PWDD(23,8),PU(23,8),PV(23,8),
     1 PVP(23,8)
      COMMON/JHYDRO/IHYDRO
C BEG JUN 2004
C     COMMON/WEBTH1/CX3(6,6,11),CY3(6,6,11),THRMX3(6,11),THRMY3(6,11)
C     COMMON/THICK/TX(5),TY(5)
C     COMMON/BYLOCP/IFREEY
C     COMMON/GLOBPP/IGLOBP
C END JUN 2004
      DIMENSION TEMP(*),CX3C(6,6)
      REAL KAPPA1,KAPPA2,NXPRES,NYPRES,MXPRES,MYPRES,NXAVE,NXITOT
C
      REAL NXVAR,NYVAR,NXYVAR,NXFIX,NYFIX,NXYFIX,LENMOD
C BEG JUN 2004
C     IF (NPRT.GE.2) WRITE(8,'(A,I5)')
C    1' Entering STABIL: ILABEL=',ILABEL
C END JUN 2004
C     SOME INITIALIZATIONS FOLLOW.
C BEG 26 JAN 1989
      CALL MOVER(COEF,1,CX3C,1,36)
C END 26 JAN 1989
      IF (IBUCK.EQ.3) GO TO 40
      DO 30 I=1,6
      DO 20 J=1,6
      PRE(I,J) = 0.0
   20 C(I,J) = 0.0
      DO 30 J=1,7
      RNT(I,J) = 0.0
   30 B1(I,J) = 0.0
   40 CONTINUE
      DO 60 I=1,5
      DO 50 J=1,7
      QD(I,J) = 0.0
   50 D(I,J) = 0.0
   60 CONTINUE
      DO 80 I=1,3
      DO 70 J=1,7
   70 ROT(I,J) = 0.0
   80 CONTINUE
      DO 90 I=1,7
      RHS(I) = 0.
      UB(I) = 0.0
      VB(I) = 0.0
      WBD(I) = 0.0
   90 WB(I) = 0.0
      UB(2) = 0.5
      UB(5) = 0.5
      VB(3) = 0.5
      VB(6) = 0.5
      FMULT3 = 0.
C BEG JUNE 1992
      FACSTF = 1.0
C END JUNE 1992
      IF (IFINIS.EQ.1) FMULT3 = 0.
C BEG OCT 1996
      FN = FLOAT(N) + DELTAN
C END OCT 1996
      AFN = ABS(FN)
      NAFN= AFN
      COF = 2./3.1415927
      RH2ADD = 0.
      RH1ADD = 0.
      BLLRAT = 1.0
C BEG AUG 1990
C     IF (INDIC.EQ.3.AND.PRESS.NE.0.) THEN
      IF (INDIC.EQ.3) THEN
C END AUG 1990
         IF (IGLOB.EQ.0) GO TO 93
         AR = ABS(R)
         RTEST = 10000.*SQRT(AXIAL**2 + CIRC**2)
         DIFF  = ABS(AR - RTEST)/AR
         IFLAT = 0
         IF (DIFF.LT.0.5) IFLAT = 1
C BEG MAR 1996
         IF (IBEAM.EQ.1) IFLAT = 1
C END MAR 1996
         AXLONG = BB(2)
         CLONG  = BB(1)
         IF (IGLOB.NE.0) THEN
            AXLONG = AXIAL
            CLONG  = CIRC
            THEDGE = 0.5*CLONG/R
            STHEDG = SIN(THEDGE)
            IF (IFLAT.EQ.0) THEN
C BEG MAY 1990
               RH2MLT = CIRC*STHEDG**2/(2.*THEDGE)
               RH2ADD = PRESS*RH2MLT
               IF (IFREEX.EQ.1) THEN
                  RH2ADD = PRESS*R
                  IF (IHYDRO.EQ.1) RH1ADD = PRESS*R/2.
               ENDIF
C END MAY 1990
               BLLRAT = SQRT(SQRT(ABS(R/RH2MLT)))
            ENDIF
         ENDIF
C BEG MAR 2005
C        WRITE(8,'(A,/,4I2,1P,4E12.4)')
C    1 ' in STABIL: IGLOB,ILOCAL,INDIC,IFLAT,AXLONG,CLONG,CMAX,AFN=',
C    1              IGLOB,ILOCAL,INDIC,IFLAT,AXLONG,CLONG,CMAX,AFN
C END MAR 2005
         IF (IFLAT.EQ.1) THEN
C BEG JUN 1999
C           IF (CLONG.LT.(.50*AXLONG)) THEN
            IF (CLONG.LT.(.10*AXLONG)) THEN
C END JUN 1999
               GO TO 93
            ELSE
               GO TO 95
            ENDIF
         ELSE
            TEFF = SQRT(COEF(5,5)*12./COEF(1,1))
C BEG MAY 1990 (FOLLOWING STATEMENT COMMENTED OUT: BLL IN COMMON)
C           BLL  = 2.73*SQRT(AR*TEFF)
C END MAY 1990
            IF (AXLONG.GT.BLL) THEN
               GO TO 93
            ELSE
               IF (CLONG.LT.(.50*AXLONG)) THEN
                  GO TO 93
               ELSE
                  GO TO 95
               ENDIF
            ENDIF
         ENDIF
   93    CONTINUE
C BEG JUNE 1992
         IF (IGLOB.EQ.0.AND.ISTIF.NE.5) FACSTF = 1.0
C END JUNE 1992
         COF = 1.
         FN  = 0.
         AFN = 0.
C        IF (IGLOB.EQ.1) IFREEX = 0
         IF (IGLOB.NE.0) NAFN = AFN
         FMULT3 = 1.
   95    CONTINUE
      ENDIF
C  End of IF (INDIC.EQ.3) section.
C
      DS = 0.
      HI = HS(1)*RATIO
      CURV1 = - GEOM(3) + KAPPA2
      CURV2 = - GEOM(5) + KAPPA1
      SAC = 10000.*SQRT(AXIAL**2 + CIRC**2)
      IF (ABS(CURV1).LT.(1./SAC)) CURV1 = 1./SAC
      IF (ABS(CURV2).LT.(1./SAC)) CURV2 = 1./SAC
      THETA0 = 0.5*BB(1)*CURV1
      IF (IGLOB.EQ.1) THETA0 = 0.5*CIRC*CURV1
      S = SEND - HI
C BEG JULY 1989
      JWEB = 3
      IF (ISTIF.EQ.5) JWEB = 2
      JWEBP = JWEB + 1
      JWEBM = JWEB - 1
C END JULY 1989
C
C
      DO 630 I=1,L5
C
C BEG 26 JAN 1989
      IKOUNT = I
C BEG JULY 1989
      IF (JSEG.EQ.JWEB.AND.ISEG.GT.JWEBP) IKOUNT = L5 - I + 1
C END JULY 1989
C END 26 JAN 1989
C
      H = HS(I)*RATIO
      HPAST = HI
      HI = 2.*H - HPAST
      IT = I5TOT + I + 1
C     GLOBAL EQUATION NO.S FOR FINITE-DIFFERENCE 'ELEMENT' MODULE ARE
C     I3M,I2M,I1M,I0,I1P,I2P,I3P.  THESE LOCATE THE LOCAL ELEMENT
C     MATRICES FOR ASSEMBLY INTO THE GLOBAL MATRICES
      I3M = IW(IT - 1)
      I0 = IW(IT)
      I3P = IW(IT + 1)
      I2M = I0 - 2
      I1M = I0 - 1
      I1P = I0 + 1
      I2P = I0 + 2
C BEG MARCH 1990
C     WRITE(8,*)' ISEG,I,IT,I3M,I0,I3P=',ISEG,I,IT,I3M,I0,I3P
C END MARCH 1990
C     CERTAIN LOCAL MATRICES ARE 'EXPLODED' BECAUSE OF MINUS SIDES OF
C     CONSTRAINT CONDITIONS.
      I3PI0 = I3P - I0
      ICNSUB = IC + NSUB - KLAP
      IF(I3PI0.EQ.ICNSUB) I1P = I0 + IC + 1
      IF(I3PI0.EQ.ICNSUB) I2P = I0 + IC + 2
      DSAVE = DS
      DS = H
      IF (I.EQ.1.OR.I.EQ.L5) DS = H/2.
C     SHELL GEOMETRY PARAMETERS . .
C    FNBAR = N*PI/L, WHERE N IS NO. OF WAVES ALONG L AND L IS PANEL
C                    LENGTH.  N/R FOR SHELLS OF REVOLUTION IS EVERY-
C                    WHERE REPLACED BY FNBAR.
C
C        RD= DERIVATIVE OF PARALLEL CIRCLE RADIUS WITH RESPECT TO S
C       FK1= MERIDIONAL CURVATURE
C      RFK2= SINE OF ANGLE OF MERIDIONAL SLOPE
C
      DIF = DABS(DSAVE-DS)/DS
      DO 100 II=1,7
      DO 100 JJ=1,7
  100 U(II,JJ) = 0.0
C
      IF (IGLOB.EQ.0) THEN
        FNBAR = FN*GEOM(1)
        RD = GEOM(2)
        FK1 = GEOM(3)
        RFK2 = GEOM(4)
        FK2  = GEOM(5)
        RDS = DS
C
           MAXSEG = 2
           NDSEG = NSEG
C BEG JULY 1996
           IF (ISTIF.EQ.4.AND.BB20(1).GT.WW20(1)) THEN
C END JULY 1996
              MAXSEG = 3
              NDSEG = NSEG - 1
           ENDIF
C BEG MAY 1997
           IF (IZSTIF.EQ.1) MAXSEG = 1
C END MAY 1997
C BEG JULY 1989
C BEG NOV 1995
C          IF (ISTIF.EQ.0.OR.ISTIF.EQ.5) MAXSEG = 1
           IF (ISTIF.EQ.0.OR.(ISTIF.EQ.5.AND.NSEG.EQ.4)) MAXSEG = 1
C END NOV 1995
           IF ((ISEG.LE.MAXSEG.OR.ISEG.GE.NDSEG).AND.ISTIF.NE.5) THEN
C END JULY 1989
C BEG JUNE 1992
              FACSTF = 1.0
C END JUNE 1992
              S = S + H
              FK1 = -CURV1
              FK2 = -CURV2
              ARG =  THETA0 +S*FK1
              RD = DCOS(ARG)
              RFK2=DSIN(ARG)
              IF (I.EQ.L5) SEND = S
C             IF (IFINIS.EQ.1) THEN
C             WRITE(8,*)' THETA0,ISEG,I,S,H,FK1,FK2,ARG,RD,RFK2,SEND=',
C    1                     THETA0,ISEG,I,S,H,FK1,FK2,ARG,RD,RFK2,SEND
C             ENDIF
           ENDIF
C
C          IF ((ILOCAL.NE.1.AND.INDIC.NE.3).OR.ICTAN.EQ.1) THEN
C             WRITE(8,*)' JSEG,ISEG,I,RATIO,FNBAR,DS,RD,FK1,RFK2,FK2=',
C    1                    JSEG,ISEG,I,RATIO,FNBAR,DS,RD,FK1,RFK2,FK2
C             WRITE(8,*)' COEF(1,1), COEF(2,2)=',COEF(1,1),COEF(2,2)
C             WRITE(8,*)' C11TAN(I),C22TAN(I)=',
C    1                    C11TAN(I),C22TAN(I)
C             WRITE(8,*)' NXAVE,NXFIX(I),NYFIX(I),NXVAR(I),NYVAR(I)=',
C    1                    NXAVE,NXFIX(I),NYFIX(I),NXVAR(I),NYVAR(I)
C          ENDIF
C
      ELSE
C
C  IGLOB.NE.0 section starts...
        FNBAR = FN*3.1415927/(LENMOD*AXIAL)
        IF (INDIC.EQ.3) FNBAR = FN*GEOM(1)
        S = S + H
        FK1 = -CURV1
        FK2 = -CURV2
        ARG = - (0.5*CIRC - S)*FK1
        RD  = COS(ARG)
        RFK2 = SIN(ARG)
        RDS = DS
        IF (I.EQ.L5) SEND = S
C
C      C      WRITE(8,*)' THETA0,ISEG,I,S,H,FK1,FK2,ARG,RD,RFK2,SEND=',
C    1                     THETA0,ISEG,I,S,H,FK1,FK2,ARG,RD,RFK2,SEND
      ENDIF
C  End of IGLOB condition
C
C     DIFFERENCE EXPRESSIONS FOR W,W' FOR VARIABLE SPACING
C
      CALL GETWWD(H,HI,HPAST,WB,WBD)
      IF (INDIC.NE.3) CALL GETROT(ROT,I,L5,WB,WBD,1.0)
      IF (INDIC.EQ.3) CALL GETROT(ROT,I,L5,WB,WBD,0.0)
      IF (INDIC.NE.3) CALL GETB1(B1,ROT,L5,WB,WBD,HPAST,HI,-1.,1.0)
      IF (INDIC.EQ.3.AND.IFREEX.EQ.0)
     1       CALL GETB1(B1,ROT,L5,WB,WBD,HPAST,HI, 2., 0.)
      IF (INDIC.EQ.3.AND.IFREEX.EQ.1)
     1       CALL GETB1(B1,ROT,L5,WB,WBD,HPAST,HI,-1., 0.)
      IF (IBUCK.NE.1) GO TO 130
C     CONSTITUTIVE EQUATION COEFFICIENTS
C BEG 26 JAN 1989
C BEG JULY 1989
      IF (JSEG.EQ.JWEB.AND.IMTEMP.EQ.1.AND.
     1          TEMP(JWEBM).NE.TEMP(JWEBP)) THEN
C END JULY 1989
         CALL CHGCIJ(CX3(1,1,IKOUNT),CX3C)
      ENDIF
      DO 10 II = 1,6
      DO 10 JJ = 1,6
   10 C(II,JJ) = CX3C(II,JJ)*DS
C
C     IF (ILOCAL.EQ.1.AND.INDIC.NE.3.AND.JSEG.EQ.JWEB) THEN
C           WRITE(8,*)' I,ISEG,DS=',I,ISEG,DS
C           WRITE(8,*)' CX3(1,1,IKOUNT),CX3(2,2,IKOUNT),CX3(4,4,IKOUNT),
C    1                  CX3(5,5,IKOUNT)=',
C    1                  CX3(1,1,IKOUNT),CX3(2,2,IKOUNT),CX3(4,4,IKOUNT),
C    1                  CX3(5,5,IKOUNT)
C           WRITE(8,*)' C(1,1),C(2,2),C(4,4),C(5,5)=',
C    1                  C(1,1),C(2,2),C(4,4),C(5,5)
C     ENDIF
C
      IF (IGLOB.EQ.0.AND.ILOCAL.NE.1.AND.INDIC.NE.3) THEN
C BEG JULY 1989
         IF ((JSEG.EQ.JWEB.OR.JSEG.EQ.JWEBP).AND.ABS(WPB1).GT.0.) THEN
C END JULY 1989
            C(1,1)   = C22TAN(I)*DS
            C(2,2)   = C11TAN(I)*DS
            C(1,2)   = C12TAN(I)*DS
            C(2,1)   = C(1,2)
         ENDIF
C
C        IF (JSEG.EQ.JWEBP) THEN
C           NXITOT   = NXAVE
C        ENDIF
C
      ENDIF
C END 26 JAN 1989
C BEG MAR 1996
C     IF (ICTAN.EQ.1.AND.ABS(WPB1).GT.0.0) THEN
      IF (ICTAN.EQ.1) THEN
C BEG JULY 1997
         IF (IWRITE.EQ.1)
     1    WRITE(8,'(A,2I3,1P3E12.4)')' JSEG,I,C11TAN,C12TAN,C22TAN=',
     1                           JSEG,I,C11TAN(I),C12TAN(I),C22TAN(I)
C END JULY 1997
C
         C(1,1)   = C22TAN(I)*DS
         C(2,2)   = C11TAN(I)*DS
         C(1,2)   = C12TAN(I)*DS
         C(2,1)   = C(1,2)
      ENDIF
C END MAR 1996
C
      IF (INDIC.EQ.3) THEN
C BEG AUG 1990
C BEG JUNE 1992
         FNXDS = NXFIX(I)*DS*FACSTF
         FNYDS = NYFIX(I)*DS*FACSTF
C END JUNE 1992
         CALL FTOSTR(FB,ROT,B1,C,I3M,I2M,I1M,I0,I1P,I2P,I3P,FMULT3,
     1                  FN,CHI,PSI,GAM,EPSL,SPSL,IFINIS,E2W,E3U,
C BEG JUN 2004
     1                  FNYDS, FNXDS, PRESS, AFN,I,ILABEL,IMOD)
C END JUN 2004
C END AUG 1990
         IF (IFINIS.EQ.1) THEN
C           EP1MID(I,ISEG) = E2W*COF +AFN*.25*PSI**2
C           EP2MID(I,ISEG) = EPSL(1)*COF + AFN*.25*CHI**2
            EP1MID(I,ISEG) = E2W*1.0 +AFN*.25*PSI**2
            EP2MID(I,ISEG) = EPSL(1)*1.0 + AFN*.25*CHI**2
            EP4MID(I,ISEG) = EPSL(5)
            EP5MID(I,ISEG) = EPSL(4)
C BEG 26 JAN 1989
            RHS1 =CX3C(2,5)*EP4MID(I,ISEG) +CX3C(2,4)*EP5MID(I,ISEG)
            RHS2 =CX3C(1,5)*EP4MID(I,ISEG) +CX3C(1,4)*EP5MID(I,ISEG)
C
            IF (IGLOB.EQ.1.AND.IFREEX.EQ.1) THEN
               RHS22 = RHS2 +RH2ADD
               RHS11 = RHS1 +RH1ADD
               DET = CX3C(2,2)*CX3C(1,1) - CX3C(1,2)**2
               EP1MID(I,ISEG) = (-RHS11*CX3C(1,1)+RHS22*CX3C(1,2))/DET
               EP2MID(I,ISEG) = (-RHS22*CX3C(2,2)+RHS11*CX3C(1,2))/DET
            ENDIF
C
            NXPRES(I,ISEG) = CX3C(2,2)*EP1MID(I,ISEG)
     1       +CX3C(1,2)*EP2MID(I,ISEG) +RHS1
            NYPRES(I,ISEG) = CX3C(1,2)*EP1MID(I,ISEG)
     1       +CX3C(1,1)*EP2MID(I,ISEG) +RHS2
            MXPRES(I,ISEG) = CX3C(2,5)*EP1MID(I,ISEG)
     1       +CX3C(1,5)*EP2MID(I,ISEG) +CX3C(5,5)*EP4MID(I,ISEG)
     1       +CX3C(4,5)*EP5MID(I,ISEG)
            MYPRES(I,ISEG) = CX3C(2,4)*EP1MID(I,ISEG)
     1       +CX3C(1,4)*EP2MID(I,ISEG) +CX3C(4,5)*EP4MID(I,ISEG)
     1       +CX3C(4,4)*EP5MID(I,ISEG)
C BEG MAY 1998
            IF (IGLOB.EQ.0.AND.ISTIF.EQ.4
     1                    .AND.CX(2,2,2).LT.0.01*CX(2,2,1)) THEN
               NXPRES(I,ISEG) = 0.
               NYPRES(I,ISEG) = 0.
            ENDIF
C END MAY 1998
C
            IF (IFLAT.EQ.0.AND.THEDGE.GT.0.3.AND.IGLOB.EQ.1) THEN
              IF (AXIAL.GT.BLL) THEN
                 NYPRES(I,ISEG) = -PRESS*R
C                IF (IFREEX.EQ.0) THEN
C                   NXPRES(I,ISEG) = 
C    1                 CX3C(1,2)*NYPRES(I,ISEG)/CX3C(1,1)
C                ELSE
                    IF (IHYDRO.EQ.1) NXPRES(I,ISEG) = 0.5*NYPRES(I,ISEG)
                    IF (IHYDRO.EQ.0) NXPRES(I,ISEG) = 0.0
C                ENDIF
                 DET = CX3C(2,2)*CX3C(1,1) - CX3C(1,2)**2
                 EP1MID(I,ISEG) = (NXPRES(I,ISEG)*CX3C(1,1)
     1                         - NYPRES(I,ISEG)*CX3C(1,2))/DET
                 EP2MID(I,ISEG) = (NYPRES(I,ISEG)*CX3C(2,2)
     1                         - NXPRES(I,ISEG)*CX3C(1,2))/DET
                 EP4MID(I,ISEG) = 0.
                 EP5MID(I,ISEG) = 0.
              ENDIF
            ENDIF
C END 26 JAN 1989
            IF (IGLOB.EQ.1) PW(I,ISEG) = FB(I0)
C BEG SEPT 1991
C           IF (IGLOB.EQ.1.AND.WW(1).GT.0.0.AND.I.EQ.(L5/2+1)) THEN
            IF (IGLOB.EQ.1.AND.I.EQ.(L5/2+1)) THEN
C END SEPT 1991
C  GET SHEAR RESULTANT IN STRINGER WEB DUE TO PRESSURE..
               VDISP = 0.5*(FB(I1M) + FB(I2P))
               WDISP = FB(I0)
               CALL WEBSHR(IFILE,FNBAR,VDISP,WDISP,0.,FK2,1)
            ENDIF
C BEG SEPT 1991
C           IF (IGLOB.EQ.1.AND.WW(2).GT.0.0.AND.I.EQ.2) THEN
            IF (IGLOB.EQ.1.AND.I.EQ.2) THEN
C END SEPT 1991
               CHIDD = (FB(I3P+3) -3.*FB(I3P) +3.*FB(I0) -FB(I3M))/H**3
C    1                -(FB(I1P+3) -2.*FB(I1P) +FB(I2M))*FK1/H**2
               CALL WEBSHR(IFILE,FNBAR,0.,0.,CHIDD,FK2,2)
            ENDIF
            GO TO 630
         ENDIF
C  End of IF (IFINIS.EQ.1) section
C
         IF (AFN.LT.0.5) THEN
            CALL GETBNL(B1,ROT,CHI,PSI,GAM)
            DO 112 II = 1,7
               RHS(II) = 0.
               DO 109 JJ = 1,6
  109          RHS(II) = RHS(II) - SPSL(JJ)*B1(JJ,II)
               DO 110 JJ = 1,7
                  U(II,JJ) = U(II,JJ) + SPSL(1)*ROT(1,II)*ROT(1,JJ)
  110          CONTINUE
  112       CONTINUE
         ELSE
C
C           CALL NONLIN(CHI,PSI,GAM,C,FN,ROT,B1,SPSL,RHS,U,COF)
C BEG MAR 2005
C23456789012345678901234567890123456789012345678901234567890123456789012
C           IF (I.EQ.1) THEN
C              DO 3996 LXX = 1,6
C                 WRITE(8,'(A,/,1P,6E11.3)') ' C array at pt.1=',
C    1                     (C(LXX,MXX),MXX=1,6)
C3996          CONTINUE
C              DO 3997 LXX = 1,6
C                 WRITE(8,'(A,/,1P,7E11.3)') ' B1 array at pt.1=',
C    1                     (B1(LXX,MXX),MXX=1,7)
C3997          CONTINUE
C              DO 3998 LXX = 1,3
C                 WRITE(8,'(A,/,1P,7E11.3)') ' ROT array at pt.1=',
C    1                     (ROT(LXX,MXX),MXX=1,7)
C3998          CONTINUE
C           ENDIF
C END MAR 2005
C BEG AUG 1990
            CALL NEWTPN(C,B1,CHI,PSI,GAM,ROT,EPSL,E2W,E3U,U,RHS,I,
     1                  FNYDS,FNXDS,PRESS,AFN,0)
C END AUG 1990
C BEG MAR 2005
C           IF (I.EQ.1) THEN
C              DO 4002 LXX = 1,7
C                 WRITE(8,'(A,/,1P,7E11.3)') ' U array at pt.1=',
C    1                     (U(LXX,MXX),MXX=1,7)
C4002          CONTINUE
C           ENDIF
C END MAR 2005
         ENDIF
C
C  ADD PRESSURE TERM TO WORK DONE BY EXTERNAL FORCES...
C
         PPROD  = DS*PRESS*COF
         RHS(1) = RHS(1) + PPROD*WB(1)
         RHS(4) = RHS(4) + PPROD*WB(4)
         RHS(7) = RHS(7) + PPROD*WB(7)
C
      ENDIF
C  End of IF (INDIC.EQ.3) section
C
C  Fixed prestress..
C
      IF (INDIC.NE.3) THEN
         CALL GETRNT(RNT,ROT,B1)
C BEG MARCH 1990
         VN1 = DS*NYFIX(I)*FACT
         VN2 = DS*NXFIX(I)*FACT
C END MARCH 1990
         IF (IMODE.GT.1) THEN
            VN1 = 0.0
            VN2 = 0.0
         ENDIF
C
C        WRITE(8,*)' I,VN1,VN2=',I,VN1,VN2
C
         PRE(1,1) = VN1
         PRE(2,2) = VN2
         PRE(3,3) = VN1
         PRE(4,4) = VN2
         PRE(5,5) = VN1
         PRE(6,6) = VN2
         CALL MATMU4(PRE,RNT,U,6,7,1)
      ENDIF
C
C BEG JULY 1989
C   "LIVE" PRESSURE EFFECT FROM LOAD SET B...
      IF (IGLOB.EQ.1.AND.INDIC.NE.3.AND.ABS(THETA0).GT.3.14259/16.) THEN
         PSFIX(1) = -VN1/R
         CALL GETP(PSFIX(1),RFK2,UB,VB,WB,B1,ROT,U)
      ENDIF
C 
C END JULY 1989
C
C     SHELL WALL STRAIN ENERGY INDEPENDENT OF 'VARIABLE' LOADS
C
  120 CONTINUE
      IF (INDIC.NE.3.OR.AFN.LT.0.5) CALL MATMU4(C,B1,U,6,7,1)
C
C BEG JUN 1996
C     ADD ELASTIC FOUNDATION CONTRIBUTION...
      IF (ISANDW(JSEG,1).EQ.1.OR.ISANDW(JSEG,1).EQ.NLAYER(JSEG,1))
     1   CALL FOUNDA(WFOUND(JSEG,1),WB,RDS,U)
C END JUN 1996
C BEG AUG 1990
C BEG JUNE 1992
C  WRITE OUT A BUNCH OF STUFF FOR DEBUGGING....
      IF (INDIC.EQ.3.AND.NPRT.GE.3.AND.I.EQ.1.AND.ISEG.EQ.1
     1              .AND.ITER.EQ.1) THEN
C END JUNE 1992
         WRITE(IFILE,1607) (NXVAR(JJ),JJ= 1,L5)
 1607    FORMAT(' NXVAR(JJ),JJ=1,L5='/1P,11E11.3)
         WRITE(IFILE,1608) (NYVAR(JJ),JJ= 1,L5)
 1608    FORMAT(' NYVAR(JJ),JJ=1,L5='/1P,11E11.3)
         WRITE(IFILE,1609) (NXFIX(JJ),JJ= 1,L5)
 1609    FORMAT(' NXFIX(JJ),JJ=1,L5='/1P,11E11.3)
         WRITE(IFILE,1610) (NYFIX(JJ),JJ= 1,L5)
 1610    FORMAT(' NYFIX(JJ),JJ=1,L5='/1P,11E11.3)
         WRITE(IFILE,'(A,/,7I5)')
     1                 ' INDIC,ISTIF,IGLOB,ILOCAL,JSEG,MAXSEG,ISEG=',
     1                   INDIC,ISTIF,IGLOB,ILOCAL,JSEG,MAXSEG,ISEG
         WRITE(IFILE,'(A,/,5I5)')
     1                 ' I5TOT,I,IT,IBUCK,IFINIS=',
     1                   I5TOT,I,IT,IBUCK,IFINIS
         WRITE(IFILE,'(A,/,7I5)')
     1                 ' I3M,I2M,I1M,I0,I1P,I2P,I3P=',
     1                   I3M,I2M,I1M,I0,I1P,I2P,I3P
         WRITE(IFILE,'(A,/,1P,5E12.4)')
     1                 ' H,HI,HPAST,DS,FMULT3=',
     1                   H,HI,HPAST,DS,FMULT3
         WRITE(IFILE,'(A,/,1P,6E12.4)')
     1                 ' FK1,FK2,RD,RFK2,RDS,PRESS=',
     1                   FK1,FK2,RD,RFK2,RDS,PRESS
         WRITE(IFILE,'(A,/,1P,7E12.4)')
     1                 ' FN,AFN,CHI,PSI,GAM,COF,PPROD=',
     1                   FN,AFN,CHI,PSI,GAM,COF,PPROD
         WRITE(IFILE,'(A,/,1P,7E12.4)')
     1    ' FB(I3M),FB(I2M),FB(I1M),FB(I0),FB(I1P),FB(I2P),FB(I3P)=',
     1      FB(I3M),FB(I2M),FB(I1M),FB(I0),FB(I1P),FB(I2P),FB(I3P)
         DO 1601 KKX = 1,6
            WRITE(IFILE,16) KKX,(C(KKX,JJ),JJ=1,6)
   16       FORMAT('  C(',I1,',JJ),JJ=1,6, ='/1P,6E12.4)
            WRITE(IFILE,1611) KKX,(COEF(KKX,JJ),JJ=1,6)
 1611       FORMAT(' COEF(',I1,',JJ),JJ=1,6, ='/1P,6E12.4)
            WRITE(IFILE,1612) KKX,(CX3C(KKX,JJ),JJ=1,6)
 1612       FORMAT(' CX3C(',I1,',JJ),JJ=1,6, ='/1P,6E12.4)
            WRITE(IFILE,17) KKX,(B1(KKX,JJ),JJ=1,7)
   17       FORMAT(' B1(',I1,',JJ),JJ=1,7, ='/1P,7E12.4)
            IF (KKX.LE.3) WRITE(IFILE,15) KKX,(ROT(KKX,JJ),JJ=1,7)
   15       FORMAT(' ROT(',I1,',JJ),JJ=1,7, ='/1P,7E12.4)
 1601    CONTINUE
         WRITE(IFILE,1602) (WB(JJ),JJ= 1,7)
 1602    FORMAT(' WB(JJ),JJ=1,7='/1P,7E12.4)
         WRITE(IFILE,1603) (WBD(JJ),JJ= 1,7)
 1603    FORMAT(' WBD(JJ),JJ=1,7='/1P,7E12.4)
         WRITE(IFILE,1604) (RHS(JJ),JJ= 1,7)
 1604    FORMAT(' RHS(JJ),JJ=1,7='/1P,7E12.4)
         WRITE(IFILE,1613) (SPSL(JJ),JJ= 1,6)
 1613    FORMAT(' SPSL(JJ),JJ=1,6='/1P,6E12.4)
         DO 1606 KKX = 1,7
            WRITE(IFILE,1605) KKX,(U(KKX,JJ),JJ=1,7)
 1605       FORMAT('  U(',I1,',JJ),JJ=1,7, ='/1P,7E12.4)
 1606    CONTINUE
      ENDIF
C END AUG 1990
C
      GO TO 160
  130 IF (IBUCK.NE.2) GO TO 140
C BEG JULY 1997
      IF (IWRITE.EQ.1)
     1    WRITE(8,'(A,1P4E12.4)')' NXFIX,NYFIX,NXVAR,NYVAR=',
     1                    NXFIX(I),NYFIX(I),NXVAR(I),NYVAR(I)
C END JULY 1997
      NXITOT = NXVAR(I)
C BEG 26 JAN 1989
C     IF (IGLOB.EQ.0.AND.ILOCAL.NE.1.AND.INDIC.NE.3) THEN
C        IF (JSEG.EQ.JWEBP) THEN
C           NXITOT   = NXAVE
C        ENDIF
C     ENDIF
C END 26 JAN 1989
C
      CALL GETRNT(RNT,ROT,B1)
C BEG MARCH 1990
            DNY = NYVAR(I) - FACT*NYFIX(I)
            DNX = NXITOT - FACT*NXFIX(I)
C END MARCH 1990
C BEG APR 1991
C           IF (IGLOBP.EQ.-2.AND.(JSEG.EQ.JWEB.OR.JSEG.EQ.JWEBP)) THEN
C              DNY = 0.
C              DNX = 0.
C           ENDIF
C END APR 1991
            VN1 = DS*DNY
            VN2 = DS*DNX
C
C        IF (ILOCAL.EQ.1.AND.INDIC.NE.3.AND.JSEG.EQ.JWEB) THEN
C           WRITE(8,*)' ISEG,I,DS=',ISEG,I,DS
C           WRITE(8,*)' NXITOT,NXFIX(I)=',NXITOT,NXFIX(I)
C           WRITE(8,*)' NYVAR(I),NYFIX(I)=',NYVAR(I),NYFIX(I)
C        ENDIF
C
      IF (IMODE.EQ.3) THEN
            VN1 = -DS
            VN2 = 0.0
            IF (JSEG.GT.2) THEN
               VN1 = 0.0
               VN2 = 0.0
            ENDIF
      ENDIF
C
      PRE(1,1) = VN1
      PRE(2,2) = VN2
      PRE(3,3) = VN1
      PRE(4,4) = VN2
      PRE(5,5) = VN1
      PRE(6,6) = VN2
C
C BEG JULY 1989
C   "LIVE" PRESSURE EFFECT FROM (LOAD SET A + LOAD SET B) - (LOAD SET B)...
      IF (IGLOB.EQ.1.AND.INDIC.NE.3.AND.ABS(THETA0).GT.3.14259/16.) THEN
         PSVAR(1) = -VN1/R
         CALL GETP(PSVAR(1),RFK2,UB,VB,WB,B1,ROT,U)
      ENDIF
C 
C END JULY 1989
C
C     WRITE(IFILE,111) ISEG,I,VN2/DS,VN1/DS
  111 FORMAT(' SEG., POINT,DNX,DNY=',I3,I3,1P,E12.4,1P,E12.4)
C
C     WORK DONE BY 'VARIABLE' PRESTRESS DURING BUCKLING
      CALL MATMU4(PRE,RNT,U,6,7,1)
C BEG APR 1991
C BEG JUNE 1992
      IF (NPRT.GE.3.AND.ISEG.EQ.1.AND.I.EQ.1.AND.ITER.EQ.1) THEN
C END JUNE 1992
         WRITE(IFILE,1112) ILOCAL,IGLOB,I,ISEG,I3M,I2M,I1M,I0,I1P,
     1                     I2P,I3P,ILOC(I3M),ILOC(I2M),ILOC(I1M),
     1                     ILOC(I0),ILOC(I1P),ILOC(I2P),ILOC(I3P),
     1                     FACT,FNBAR,DS,RD,FK1,FK2,RFK2,RDS,
     1                     H,HI,HPAST,
     1                     NXITOT,NYVAR(I),NXFIX(I),NYFIX(I)
 1112    FORMAT(/' IBUCK=2 CHECK AT FIRST SEGMENT, FIRST NODE:'/
     1           '  ILOCAL,IGLOB,I,ISEG        =',4I5/
     1           '  I3M,I2M,I1M,I0,I1P,I2P,I3P =',7I5/
     1           '  ILOC(I3M),ILOC(I2M),..etc. =',7I5/
     1           '  FACT,FNBAR,DS,RD,FK1,FK2,RFK2,CURD,RDS='/
     1              1P,8E12.4/
     1           '  H,HI,HPAST                       =',1P,3E12.4/
     1           '  NXITOT,NYVAR(I),NXFIX(I),NYFIX(I)=',1P,4E12.4)
         WRITE(IFILE,1113) (WB(II),II=1,7),(WBD(II),II=1,7)
 1113    FORMAT(/'  (WB(II),II=1,7) =',1P,7E12.4/
     1           '  (WBD(II),II=1,7)=',1P,7E12.4)
         WRITE(IFILE,1114) ((ROT(II,JJ),JJ=1,7),II=1,3)
 1114    FORMAT(/'  ((ROT(II,JJ),JJ=1,7),II=1,3)='/(1P,7E12.4))
         WRITE(IFILE,1115) ((RNT(II,JJ),JJ=1,7),II=1,6)
 1115    FORMAT(/'  ((RNT(II,JJ),JJ=1,7),II=1,6)='/(1P,7E12.4))
         WRITE(IFILE,1116) ((B1(II,JJ),JJ=1,7),II=1,6)
 1116    FORMAT(/'  (( B1(II,JJ),JJ=1,7),II=1,6)='/(1P,7E12.4))
         WRITE(IFILE,1117) ((PRE(II,JJ),JJ=1,6),II=1,6)
 1117    FORMAT(/'  ((PRE(II,JJ),JJ=1,6),II=1,6)='/(1P,6E12.4))
         WRITE(IFILE,1118) ((U(II,JJ),JJ=1,7),II=1,7)
 1118    FORMAT(/'  ((  U(II,JJ),JJ=1,7),II=1,7)='/(1P,7E12.4))
      ENDIF
C END APR 1991
      GO TO 160
  140 CONTINUE
  150 IF (IBUCK.NE.3) GO TO 160
C     LOCAL MASS MATRIX GENERATED
      SMS = CMASS
      U(2,2) = -0.25*SMS*DS
      U(3,3) = U(2,2)
      U(1,1) =-WB(1)*WB(1)*DS*SMS
      U(4,1) =-WB(4)*WB(1)*DS*SMS
      U(7,1) =-WB(7)*WB(1)*DS*SMS
      U(7,4) =-WB(7)*WB(4)*DS*SMS
      U(4,4) =-WB(4)*WB(4)*DS*SMS
      U(7,7) =-WB(7)*WB(7)*DS*SMS
      U(5,2) = U(2,2)
      U(5,5) = U(2,2)
      U(6,3) = U(2,2)
      U(6,6) = U(2,2)
  160 CONTINUE
C
  180 CONTINUE
C
C     CONSTRAINT CONDITIONS
C
C     IFX(ICOND1,1) CONTAINS LOCATIONS OF 'MINUS' SIDE OF JUNCTURE
C     IN MONOTONICALLY INCREASING ORDER.
C
C
      IF (ICOND1.GT.NCOND) GO TO 330
      IFX1 = IFX(ICOND1,1)
      IF (I.EQ.(IFX1-ISEG*1000)) GO TO 190
      GO TO 330
C     FILL THE 'MINUS' PART OF THE CONSTRAINT CONDITION
C
C     IR,IR1,IR2,IR3 CONTAIN GLOBAL MATRIX ROW NOS. CORRESPONDING TO THE
C     LAGRANGE MULTIPLIERS ASSOCIATED WITH CONSTRAINT CONDITIONS
C     IDENTIFIED BY IFX(ICOND1,1)
  190 CONTINUE
      IR = IFX(ICOND1,2)
      IR1 = IR + 1
      IR2 = IR + 2
      IR3 = IR + 3
      IR4 = IR + 4
      IF (IBUCK.EQ.1) GO TO 200
      ICOND1 = ICOND1 + 1
      GO TO 180
  200 KKK = ICOND1
      DS1 = D1(KKK)
      DS2 = D2(KKK)
C BEG 16 OCT 1989
C BEG MAY 1997
      IF (IZSTIF.EQ.1.AND.DS2.GT.0.0) DS2 = 0.5*(TX(1)+TX(2))
C BEG JAN 2002
      IF (IZSTIF.EQ.0.AND.DS2.GT.0.0) DS2 = -0.5*TX(1) + TX(2)
C     WRITE(IFILE,'(A,I4,1P,2E12.4)')
C    1' IN SUB. STABIL: KKK, DS1, DS2 =', KKK,DS1,DS2
C END JAN 2002
C     IF (IZSTIF.EQ.1.AND.DS2.GT.0.0) DS2 = 0.0
      ITEST = L5/2+1
      IF (IZSTIF.EQ.1) ITEST = L5
      IF (JSEG.EQ.2.AND.I.EQ.ITEST) THEN
C END MAY 1997
         IF (INDIC.NE.3.AND.ILOCAL.EQ.0.AND.IGLOB.EQ.0) THEN
            IF (ISTIF.EQ.1.OR.ISTIF.EQ.2.OR.ISTIF.EQ.3) THEN
               DS2 = 0.5*TX(2)
            ENDIF
         ENDIF
      ENDIF
C END 16 OCT 1989
C
C     FIFX1, 2, 3, AND 4 CONTAIN INTEGERS WHICH MAY OR MAY NOT RELEASE
C     THE CONSTRAINT CONDITIONS.
  220 CONTINUE
      FIFX1 = FLOAT(IFX(ICOND1,3))*CMAX
      FIFX2 = FLOAT(IFX(ICOND1,4))*CMAX
      FIFX3 = FLOAT(IFX(ICOND1,5))*CMAX
      FIFX4 = FLOAT(IFX(ICOND1,6))*CMAX
      FIFX5 = 0.
C BEG APR 2007 (The following three lines: too conservative)
C     IF (KLAYER(1,1).NE.0.AND.INDIC.NE.3.AND.ISEG.EQ.2
C    1 .AND.I.EQ.(L5/2+1).AND.IZSTIF.EQ.0.AND.ILOCAL.EQ.1
C    1 .AND.(ISTIF.EQ.1.OR.ISTIF.EQ.2)) FIFX4 = 0.0
C END APR 2007
C BEG FEB 1996
C BEG MAR 1996
      IF (IBEAM.EQ.1.AND.INDIC.NE.3) THEN
C     IF (IBEAM.EQ.1) THEN
C END MAR 1996
C        IF THE STRUCTURE IS A BEAM RELEASE THE BOUNDARY CONDITIONS
C        ALONG THE TWO LONGITUDINAL EDGES OF THE SINGLE MODULE...
       IF ((ISEG.EQ.1.AND.I.EQ.1).OR.(ISEG.EQ.NSEG.AND.I.EQ.L5)) THEN
          FIFX1 = 0.
          FIFX2 = 0.
          FIFX3 = 0.
          FIFX4 = 0.
          FIFX5 = 0.
          GO TO 230
       ENDIF
      ENDIF
C END FEB 1996
      IF (IGLOB.EQ.1.AND.AFN.LT.0.5) FIFX3 = CMAX
C BEG NOV 1989
      IF (INDIC.EQ.3.AND.IGLOB.EQ.0.AND.AFN.LT.0.5
     1              .AND.IFREEY.EQ.1.AND.ISTIF.NE.5) THEN
C BEG APRIL 1990  (ADD WORK DONE BY APPLIED HOOP LOAD)
C BEG AUG 1997 (FOLLOWING 5 LINES COMMENTED OUT)
C        IF (ISEG.EQ.1.AND.I.EQ.1) THEN
C           FIFX3 = 0.
C           RHS(2)= RHS(2) - UB(2)*NYFIX(I)
C           RHS(5)= RHS(5) - UB(5)*NYFIX(I)
C        ENDIF
C END AUG 1997
         IF (ISEG.EQ.NSEG.AND.I.EQ.L5) THEN
            FIFX3 = 0.
            RHS(2)= RHS(2) + UB(2)*NYFIX(I)
            RHS(5)= RHS(5) + UB(5)*NYFIX(I)
         ENDIF
C END APRIL 1990
      ENDIF
C END NOV 1989
C BEG JULY 1989
      IF (ISTIF.EQ.5) THEN
C        IF (INDIC.EQ.3.AND.IGLOB.EQ.0) THEN
C           IF (PRESS.LE.0.0.AND.ISEG.EQ.1.AND.I.EQ.1) FIFX1 = 0.
C           IF (PRESS.GT.0.0.AND.ISEG.EQ.3.AND.I.EQ.1
C    1           .AND.IFX(ICOND1,3).EQ.IFIX(ICOND1,3)) FIFX1 = 0.
C        ENDIF
         GO TO 230
      ENDIF
C END JULY 1989
      IF (ISTIF.EQ.4.AND.BB2(1).EQ.WW2(1)) GO TO 225
C BEG MAY 1997
      IF (NSEG.GT.1.AND.ISEG.EQ.1.AND.I.EQ.L5.AND.IZSTIF.EQ.0)
     1   FIFX5 = 1.
C END MAY 1997
      IF (ISEG.EQ.7.AND.I.EQ.L5) FIFX5 = 1.
      IF (ISTIF.EQ.4) GO TO 225
C BEG MAY 1997
      IF (NSEG.GT.2.AND.ISEG.EQ.2.AND.I.EQ.L5.AND.IZSTIF.EQ.0)
     1   FIFX5 = 1.
C BEG JULY 1997
      IF (ITOR.EQ.0) THEN
        IF (IZSTIF.EQ.1.AND.ISEG.EQ.3.AND.INDIC.NE.3.AND.I.EQ.1
C    1                 .AND.IGLOB.EQ.0.AND.ILOCAL.EQ.1) FIFX1 = CMAX
     1                 .AND.IGLOB.EQ.0.AND.ILOCAL.EQ.1) FIFX1 = 0.0
      ELSE
        IF (IZSTIF.EQ.1.AND.ISEG.EQ.3.AND.INDIC.NE.3.AND.I.EQ.1
     1                 .AND.IGLOB.EQ.0.AND.ILOCAL.EQ.1) FIFX1 = 0.0
C BEG DEC 2001
C BEG JULY 2006
C       IF (ISTIF.NE.5.AND.ISTIF.NE.0
C    1                .AND.(IICURV.EQ.0.OR.IBEAM.EQ.1)) THEN
        IF (ISTIF.NE.5.AND.ISTIF.NE.0.AND.IBEAM.EQ.1) THEN
C END JULY 2006
C END DEC 2001
           IF (ISEG.EQ.1.AND.INDIC.NE.3.AND.I.EQ.1
     1                 .AND.IGLOB.EQ.0.AND.ILOCAL.EQ.1) FIFX3 = 0.0
           IF (ISEG.EQ.NSEG.AND.INDIC.NE.3.AND.I.EQ.L5
     1                 .AND.IGLOB.EQ.0.AND.ILOCAL.EQ.1) FIFX3 = 0.0
        ENDIF
      ENDIF
C END JULY 1997
C     L521 = L5/2+1
C     IF (ISTIF.EQ.2.AND.ISEG.EQ.2.AND.INDIC.NE.3.AND.I.EQ.L521
C    1 .AND.IZSTIF.EQ.0.AND.IGLOB.EQ.0.AND.ILOCAL.EQ.1) FIFX1 = CMAX
C END MAY 1997
  225 CONTINUE
C
      IF (IGLOB.EQ.1) GO TO 230
      L521 = L5/2+1
      W52  = 3.*WW2(1)
C BEG JULY 1989
      IF (ISTIF.NE.4) THEN
         IF (ISEG.EQ.1.AND.ILOCAL.EQ.1.AND.I.EQ.L521.AND.IMODE.NE.2)
C BEG MAR 1996
     1   THEN
            FIFX1 = -CMAX
C BEG MAY 1997
C BEG JULY 1997
            IF (IZSTIF.EQ.1) FIFX1 = 0.
C           IF (IZSTIF.EQ.1.AND.ITOR.NE.0) FIFX1 = 0.
C END JULY 1997
C           IF (IGLOB.EQ.0.AND.INDIC.NE.3.AND.ISTIF.EQ.2) FIFX1 = 0.
C END MAY 1997
C           IF (IBEAM.EQ.1.AND.N.EQ.1) FIFX1 = 0.
         ENDIF
C END MAR 1996
         IF (ISEG.EQ.1.AND.ILOCAL.EQ.1.AND.I.EQ.L521.AND.IMODE.EQ.2)
     1            FIFX1 =  CMAX
      ENDIF
C END JULY 1989
C BEG APRIL 1990
      IF (ISTIF.EQ.4) THEN
         IF (ISEG.EQ.1.AND.ILOCAL.EQ.1.AND.I.EQ.L521.AND.IMODE.NE.2)
C BEG MAR 1996
     1   THEN
            FIFX1 = CMAX
C           IF (IBEAM.EQ.1.AND.N.EQ.1) FIFX1 = 0.
         ENDIF
C END MAR 1996
         IF (ISEG.EQ.1.AND.ILOCAL.EQ.1.AND.I.EQ.L521.AND.IMODE.EQ.2)
     1            FIFX1 = -CMAX
      ENDIF
C END APRIL 1990
C
      IF (ILOCAL.EQ.1.AND.INDIC.NE.3) THEN
        IF ((ISEG.EQ.1.AND.I.EQ.1).OR.(ISEG.EQ.NSEG.AND.I.EQ.L5)) THEN
           IF (IFREE.EQ.1) FIFX3 = 0.
        ENDIF
      ENDIF
C
      IF (INDIC.EQ.3.AND.AFN.LT.0.5)
     1CALL CHGFIX(1,ISEG,NSEG,I,L5,ISTIF,BB(1),BB2(1),WW2(1),CMAX,FIFX2)
C     IF (ISTIF.EQ.0) GO TO 230
C
C
C     IF (ISTIF.NE.3) GO TO 230
C
C
C  FOLLOWING NINE STATEMENTS APPLY ONLY TO PANEL MODULE.  AN EXTRA
C  CONSTRAINT IS BEING APPLIED AT THE SYMMETRY PLANE TO FORCE GENERAL
C  INSTABILITY...
C
      ISCP = 3
      IF (BB2(1).EQ.WW2(1)) ISCP = 2
      IF (ISTIF.EQ.4.AND.ILOCAL.EQ.0.AND.ISEG.EQ.ISCP.AND.I.EQ.(L5/2+1))
     1 THEN
C BEG MAR 1996
C BEG AUG 1997
C        FIFX3 = CMAX
         IF (INDIC.NE.3) FIFX3 = CMAX
C END AUG 1997
         FIFX4 = CMAX
C        IF (IBEAM.EQ.1.AND.N.EQ.1) THEN
C           FIFX3 = 0.0
C           FIFX4 = 0.0
C        ENDIF
C END MAR 1996
      ENDIF
C BEG 26 JAN 1989
      IF (ISTIF.EQ.4.AND.INDIC.EQ.3.AND.ISEG.EQ.ISCP) THEN
C BEG JUNE 1992
         IF (I.EQ.1.OR.I.EQ.L5) THEN
            FIFX1 = CMAX
            FIFX4 = CMAX
         ENDIF
C END JUNE 1992
      ENDIF
C END 26 JAN 1989
C BEG JULY 1989
      IF (ISTIF.EQ.4.AND.INDIC.NE.3.AND.ISEG.EQ.ISCP.AND.I.EQ.1
C BEG MAR 1996
     1              .AND.ILOCAL.EQ.1) THEN
         FIFX1 = CMAX
C        IF (IBEAM.EQ.1.AND.N.EQ.1) FIFX1 = 0.
      ENDIF
C END MAR 1996
C END JULY 1989
C BEG APRIL 1990
      IF (ISTIF.EQ.4.AND.INDIC.NE.3.AND.ISEG.EQ.ISCP.AND.I.EQ.L5
C BEG MAR 1996
     1              .AND.ILOCAL.EQ.1) THEN
         FIFX1 = CMAX
C        IF (IBEAM.EQ.1.AND.N.EQ.1) FIFX1 = 0.
      ENDIF
C END MAR 1996
C END APRIL 1990
C
C BEG MAY 1997
      ITEST = L5/2+1
      ISEGT = 2
      IF (IZSTIF.EQ.1) THEN
         ITEST = L5
         ISEGT = 1
      ENDIF
      IF (ISTIF.NE.4.AND.ILOCAL.EQ.0.AND.ISEG.EQ.ISEGT.AND.I.EQ.ITEST)
C END MAY 1997
     1 THEN
         IF (INDIC.EQ.3) FIFX1 = CMAX
C BEG AUG 1997
C        FIFX3 = CMAX
         IF (INDIC.NE.3.OR.ISTIF.EQ.5) FIFX3 = CMAX
C END AUG 1997
         FIFX4 = CMAX
C BEG MAR 1996
C        IF (IBEAM.EQ.1.AND.N.EQ.1) THEN
C           FIFX3 = 0.0
C           FIFX4 = 0.0
C        ENDIF
C END MAR 1996
      ENDIF
C
      IF (ISTIF.EQ.4.AND.IMODE.EQ.2.AND.ISEG.EQ.ISCP.AND.I.EQ.(L5/2+1))
     1 THEN
         FIFX1 = CMAX
         FIFX3 = CMAX
         FIFX4 = CMAX
      ENDIF
C
C BEG MAY 1997
      IF (ISTIF.NE.4.AND.IMODE.EQ.2.AND.ISEG.EQ.ISEGT.AND.I.EQ.ITEST)
C END MAY 1997
     1 THEN
         FIFX1 = CMAX
         FIFX3 = CMAX
         FIFX4 = CMAX
      ENDIF
C
C     WRITE(8,*)' ISTIF,IMODE,ISEG,I,CMAX=', ISTIF,IMODE,ISEG,I,CMAX
C     WRITE(8,*)' I,ISEG,ICOND1,NCOND,IFX1=',I,ISEG,ICOND1,NCOND,IFX1
C
      IF (ISTIF.EQ.0.AND.IMODE.EQ.2.AND.ISEG.EQ.2.AND.I.EQ.1)
     1 THEN
         FIFX1 = CMAX
         FIFX3 = CMAX
         FIFX4 = CMAX
      ENDIF
C
C BEG FEB 1992
C  NEW CONSTRAINT FOR HI-WAVENUMBER POST-POST BUCKLING OF UNSTIFFENED PLATE
C
      IF (IGLOBP.EQ.-2.AND.INDIC.NE.3.AND.ISTIF.EQ.0
     1                .AND.ISEG.EQ.2.AND.I.EQ.1) THEN
        FIFX1 = CMAX
      ENDIF
C END FEB 1992
C
C BEG APR 1993
C  NEW CONSTRAINT FOR SPECIAL INTER-RING MODE OF BUCKLING OF HAT-STIFFENED
C  PANELS. THE SKIN MIDWAY BETWEEN STRINGERS IS SIMPLY SUPPORTED.  THIS
C  SEEMS ODD, BUT BELIEVE IT OR NOT, THE FUNDAMENTAL BUCKLING MODE WITH
C  THIS CONSTRAINT CAN BE LOWER THAN THE WIDE-COLUMN BUCKLING MODE FOR
C  SOME CONFIGURATIONS.
C
C BEG APR 1996
C     IF (IGLOBP.EQ.-4) THEN
      IF (IGLOBP.EQ.-4.OR.
     1                (IONEST.EQ.1.AND.ISTIF.NE.0.AND.ISTIF.NE.5)) THEN
C END APR 1996
         IF ((ISEG.EQ.1.AND.I.EQ.1).OR.(ISEG.EQ.NSEG.AND.I.EQ.L5)) THEN
            FIFX1 = CMAX
            FIFX2 = CMAX
            FIFX3 = 0.
            FIFX4 = 0.
         ENDIF
      ENDIF
C END APR 1993
  230 CONTINUE
  240 CONTINUE
C     KROOTS = NO. OF NEGATIVE EIGENVALUES DUE TO LAGRANGE MULTIPLIERS
C              WE KEEP TRACK OF THIS TO AVOID MISSING ROOTS IN
C              EBAND,EBAND2, AND EIGEN, THE THREE EQUATION-SOLVING
C              ROUTINES.
      IF (FIFX1.NE.0.) KROOTS = KROOTS+1
      IF (FIFX2.NE.0.) KROOTS = KROOTS+1
      IF (FIFX3.NE.0.) KROOTS = KROOTS+1
      IF (FIFX4.NE.0.) KROOTS = KROOTS+1
      IF (FIFX5.NE.0.) KROOTS = KROOTS+1
  250 CONTINUE
C
C     D1(KKK) = KKKTH RADIAL DISCONTINUITY
C     D2(KKK) = KKKTH AXIAL  DISCONTINUITY
C
C     BEGINNING OF LOOP FOR CONTRIBUTION TO ENERGY OF 'MINUS' PART
C     OF CONSTRAINT AND BOUNDARY CONTITIONS.
C
C MAKE B.C.S AT BEGINNING AND END IN TERMS OF SHELL U,W, NOT IN TERMS
C OF GLOBAL USTAR,WSTAR
C
      BC1 = RFK2
      BC2 = RD
      BMULT = 1.
      IF (IGLOB.EQ.0.AND.ILOCAL.EQ.0.AND.INDIC.NE.3) GO TO 255
      IF ((ISEG.EQ.1.AND.I.EQ.1).OR.(ISEG.EQ.NSEG.AND.I.EQ.L5)) THEN
         BC1 = 0.
         BC2 = 1.
         IF (ILOCAL.EQ.1) BMULT = 1.
         IF (INDIC.EQ.3.AND.IGLOB.EQ.1) THEN
            DS1 = 0.
C   APRIL, 1986 MOD...
C           DS2 = DSURF
            DS2 = 0.
            FIFX3 = CMAX
C   END APRIL, 1986 MOD
C
         ENDIF
      ENDIF
  255 CONTINUE
C     WRITE(8,*)' I,ISEG,BC1,BC2,BMULT=',I,ISEG,BC1,BC2,BMULT
      DO 260 II=1,NSUB
      USTAR = BC1*UB(II) - BC2*WB(II)
      VSTAR = VB(II)
      WSTAR = BMULT*BC2*UB(II) + BC1*WB(II)
      FMOMM = 0.
      IF (FIFX5.NE.0.)
     1 FMOMM = (C(1,4)*B1(1,II) +C(2,4)*B1(2,II)
     1         +C(4,4)*B1(4,II) +C(4,5)*B1(5,II))/DS
C     FNSM  = COEF(1,1)*B1(1,II) +COEF(1,2)*B1(2,II)
C    1       +COEF(1,4)*B1(4,II) +COEF(1,5)*B1(5,II)
C     FMTOTM= FMOMM + FNSM*(D1(KKK)*RFK2 - D2(KKK)*RD)
      FMTOTM= FMOMM
C     QD( ) = LOCAL MATRIX CONTAINING 'MINUS' PART OF CONSTRAINTS
C
      QD(1,II) = FIFX1*(-USTAR + DS1*ROT(1,II))
      QD(2,II) = FIFX2*(-VSTAR +
     1 DS1*FNBAR*WSTAR +DS2*FNBAR*USTAR)
      QD(3,II) = FIFX3*(-WSTAR - DS2*ROT(1,II))
      QD(4,II) = -FIFX4*ROT(1,II)
      QD(5,II) = -FIFX5*FMTOTM
C
C  contribution to local stiffness matrix U and r.h.s. RHS of nonlinear
C  term in the minus-moment expression...
      IF (FIFX5.NE.0.0.AND.INDIC.EQ.3) THEN
         RHS(II) = RHS(II) +C(1,4)*FB(IR4)*CHI*ROT(1,II)/DS
C      WRITE(8,*)' ISEG,I,II,C(1,4),IR4,FB(IR4),CHI,ROT(1,II),DS=',
C    1             ISEG,I,II,C(1,4),IR4,FB(IR4),CHI,ROT(1,II),DS
         DO 259 JJ = 1,II
         U(II,JJ) = U(II,JJ) -C(1,4)*FB(IR4)*ROT(1,II)*ROT(1,JJ)/DS
  259    CONTINUE
      ENDIF
C
  260 CONTINUE
      IF (FIFX5.NE.0.0.AND.INDIC.EQ.3) THEN
         EPS1 = B1(1,1)*FB(I3M) +B1(1,2)*FB(I2M) +B1(1,3)*FB(I1M)
     1         +B1(1,4)*FB(I0)  +B1(1,5)*FB(I1P) +B1(1,6)*FB(I2P)
     1         +B1(1,7)*FB(I3P) - .5*CHI**2
C
         EPS2 = B1(2,1)*FB(I3M) +B1(2,2)*FB(I2M) +B1(2,3)*FB(I1M)
     1         +B1(2,4)*FB(I0)  +B1(2,5)*FB(I1P) +B1(2,6)*FB(I2P)
     1         +B1(2,7)*FB(I3P)
C
         EPS4 = B1(4,1)*FB(I3M) +B1(4,2)*FB(I2M) +B1(4,3)*FB(I1M)
     1         +B1(4,4)*FB(I0)  +B1(4,5)*FB(I1P) +B1(4,6)*FB(I2P)
     1         +B1(4,7)*FB(I3P)
C
         EPS5 = B1(5,1)*FB(I3M) +B1(5,2)*FB(I2M) +B1(5,3)*FB(I1M)
     1         +B1(5,4)*FB(I0)  +B1(5,5)*FB(I1P) +B1(5,6)*FB(I2P)
     1         +B1(5,7)*FB(I3P)
C
         FRHS(IR4) = FRHS(IR4) +   (C(1,4)*EPS1 +C(2,4)*EPS2
     1                             +C(4,4)*EPS4 +C(4,5)*EPS5)/DS
C
C BEG AUG 1997
         IF (IWRITE.EQ.1) WRITE(8,'(A,2I4,1P2E12.4)')
     1             ' ISEG,IR4,FRHS(minus),DS=',ISEG,IR4,FRHS(IR4),DS
C END AUG 1997
      ENDIF
C
C BEG MAY 1997
C BEG AUG 1997
C     IF (NPRT.GE.4) THEN
      IF (NPRT.GE.4.OR.IWRITE.EQ.1) THEN
C END AUG 1997
         WRITE(IFILE,'(A)')
     1      ' MINUS SIDE OF CONSTRAINT CONDITION FOLLOW...'
         WRITE(IFILE,'(A,/,4I4,1P,5E12.4)')
     1      ' ISEG,I,KKK,IZSTIF,FIFX1,FIFX2,FIFX3,FIFX4,FIFX5=',
     1        ISEG,I,KKK,IZSTIF,FIFX1,FIFX2,FIFX3,FIFX4,FIFX5
         WRITE(IFILE,'(A,5I5)')
     1      ' IR,IR1,IR2,IR3,IR4=',IR,IR1,IR2,IR3,IR4
C BEG AUG 1997
         WRITE(IFILE,'(A,/,1P,5E12.4)')
     1  ' RIGHT-HAND SIDE VECTOR, FRHS(IR,IR1..IR4)=',
     1    FRHS(IR),FRHS(IR1),FRHS(IR2),FRHS(IR3),FRHS(IR4)
         WRITE(IFILE,'(A,/,1P,5E12.4)')
     1  ' SOLUTION VECTOR, FB(IR,IR1..IR4)=',
     1    FB(IR),FB(IR1),FB(IR2),FB(IR3),FB(IR4)
C END AUG 1997
         WRITE(IFILE,'(A,/,1P,5E12.4)')
     1      ' DS1,DS2,FNBAR,RFK2,RD=',
     1        DS1,DS2,FNBAR,RFK2,RD
         WRITE(IFILE,'(A)')
     1      ' QD(I,J) MINUS CONSTRAINT CONDITION MATRIX..'
         DO 270 JJ = 1,5
          WRITE(IFILE,265) (QD(JJ,II),II=1,NSUB)
  265     FORMAT(1P,7E12.4)
  270    CONTINUE
      ENDIF
C END MAY 1997
C 280 CONTINUE
C
C     END OF LOOP FOR 'MINUS' PART OF CONSTRAINT CONDITIONS.
C
      ICOND1 = ICOND1 + 1
C     FILL AS ARRAY WITH MINUS PART OF CONSTRAINT CONDITIONS.
C
      IF ((ILOC(IR)-ILOC(IR-1)).GT.(NSUB+1)) GO TO 300
C     THIS BRANCH CORRESPONDS TO CONSTRAINT CONDITIONS OF TYPE 1,2,AND5
      ILOC1 = ILOC(IR)
      ILOC2 = ILOC(IR1)
      ILOC3 = ILOC(IR2)
      ILOC4 = ILOC(IR3)
      ILOC5 = ILOC(IR4)
      DO 290 II=1,NSUB
      IB = ILOC1    - NSUB - 1 + II
      AS(IB) = QD(1,II)
      IB = ILOC2     - NSUB - 2 + II
      AS(IB)= QD(2,II)
      IB = ILOC3     - NSUB - 3 + II
      AS(IB)= QD(3,II)
      IB = ILOC4     - NSUB - 4 + II
      AS(IB)= QD(4,II)
      IB = ILOC5     - NSUB - 5 + II
  290 AS(IB)= QD(5,II)
      GO TO 180
  300 IF (NGBK(III).LT.IR) GO TO 310
C     THIS BRANCH CORRESPONDS TO CONSTRAINT CONDITIONS OF TYPE
C     3 AND 4 AS LONG AS CURRENT QD(I,J) IS STORED IN CURRENT BLOCK.
C
      CALL FILLB(IC,NSUB,I3M,I2M,I1M,I0,I1P,I2P,I3P,IR,ILOC,QD,AS)
      GO TO 180
C     THIS BRANCH CORRESPONDS TO CONSTRAINT CONDITIONS OF TYPE 3 AND 4
C     EXCEPT THAT QD(I,J) HAS TO BE SAVED BECAUSE IT CONTRIBUTES
C     ELEMENTS TO A FUTURE BLOCK.
C
  310 IV = IV + 1
      IRSAVE(IV) = IR
      ISAVE(IV,1) = I3M
      ISAVE(IV,2) = I2M
      ISAVE(IV,3) = I1M
      ISAVE(IV,4) = I0
      ISAVE(IV,5) = I1P
      ISAVE(IV,6) = I2P
      ISAVE(IV,7) = I3P
      DO 320 II=1,IC
      DO 320 J=1,NSUB
  320 QSAVE(IV,II,J) = QD(II,J)
      GO TO 180
C
C     FILL THE 'PLUS' PART OF THE CONSTRAINT CONDITION
C     IFIX(ICOND2,2) CONTAINS LOCATIONS OF 'PLUS' SIDE OF JUNCTURE
C     IN MONOTONICALLY INCREASING ORDER.
  330 CONTINUE
      IF (ICOND2.GT.NCOND) GO TO 440
      IFIX2 = IFIX(ICOND2,2)
      IF (I.EQ.(IFIX2-ISEG*1000)) GO TO 340
      GO TO 440
C     NO 'PLUS' SIDE IF CONDITION REPRESENTS BOUNDARY.
  340 CONTINUE
      IF (IFIX(ICOND2,2).EQ.IFIX(ICOND2,1)) GO TO 420
      KKK = ICOND2
C     IR,IR1,IR2,IR3 HAVE SAVE MEANING AS ABOVE
      IR = IROWC(ICOND2)
      IR1 = IR + 1
      IR2 = IR + 2
      IR3 = IR + 3
      IR4 = IR + 4
      IF (IBUCK.NE.1) GO TO 420
      FIFX1 = FLOAT(IFIX(ICOND2,3))*CMAX
      FIFX2 = FLOAT(IFIX(ICOND2,4))*CMAX
      FIFX3 = FLOAT(IFIX(ICOND2,5))*CMAX
      FIFX4 = FLOAT(IFIX(ICOND2,6))*CMAX
      FIFX5 = 0.
C BEG APR 2007 (The following three lines: too conservative)
C     IF (KLAYER(1,1).NE.0.AND.INDIC.NE.3.AND.ISEG.EQ.3
C    1 .AND.I.EQ.1.AND.IZSTIF.EQ.0.AND.ILOCAL.EQ.1
C    1 .AND.(ISTIF.EQ.1.OR.ISTIF.EQ.2)) FIFX4 = 0.0
C END APR 2007
      FIFX5 = 0.
C BEG JULY 1989
      IF (ISTIF.EQ.5) THEN
C        IF (INDIC.EQ.3.AND.IGLOB.EQ.0) THEN
C           IF (PRESS.LE.0.0.AND.ISEG.EQ.1.AND.I.EQ.1) FIFX1 = 0.
C           IF (PRESS.GT.0.0.AND.ISEG.EQ.3.AND.I.EQ.1
C    1           .AND.IFX(ICOND2,3).EQ.IFIX(ICOND2,3)) FIFX1 = 0.
C        ENDIF
         GO TO 348
      ENDIF
C END JULY 1989
      IF (ISTIF.EQ.4.AND.BB2(1).EQ.WW2(1)) GO TO 345
C BEG MAY 1997
      IF (IZSTIF.EQ.0.AND.ISEG.EQ.2.AND.I.EQ.1) FIFX5 = 1.
      IF (IZSTIF.EQ.0.AND.ISEG.EQ.NSEG.AND.I.EQ.1) FIFX5 = 1.
C END MAY 1997
  345 CONTINUE
C
      IF (IGLOB.EQ.0) THEN
      L521 = L5/2+1
      W52  = 3.*WW2(1)
C     IF (ISEG.EQ.NSEG.AND.ILOCAL.EQ.1.AND.I.EQ.L521.AND.BB(1).GT.W52)
C    1         FIFX1 = CMAX
C BEG JULY 1989
      IF (ISTIF.NE.4) THEN
         IF (ISEG.EQ.NSEG.AND.ILOCAL.EQ.1.AND.I.EQ.L521)
C BEG MAR 1996
     1   THEN
            FIFX1 = CMAX
C BEG MAY 1997
C BEG JULY 1997
            IF (IZSTIF.EQ.1) FIFX1 = 0.
C           IF (IZSTIF.EQ.1.AND.ITOR.NE.0) FIFX1 = 0.
C END JULY 1997
C           IF (IGLOB.EQ.0.AND.INDIC.NE.3.AND.ISTIF.EQ.2) FIFX1 = 0.
C END MAY 1997
C           IF (IBEAM.EQ.1.AND.N.EQ.1) FIFX1 = 0.
         ENDIF
C END MAR 1996
      ENDIF
C END JULY 1989
C BEG APRIL 1990
      IF (ISTIF.EQ.4) THEN
         IF (ISEG.EQ.NSEG.AND.ILOCAL.EQ.1.AND.I.EQ.L521)
C BEG MAR 1996
     1   THEN
            FIFX1 = CMAX
C           IF (IBEAM.EQ.1.AND.N.EQ.1) FIFX1 = 0.
         ENDIF
C END MAR 1996
      ENDIF
C END APRIL 1990
C
C
C
      IF (INDIC.EQ.3.AND.AFN.LT.0.5)
     1CALL CHGFIX(0,ISEG,NSEG,I,L5,ISTIF,BB(1),BB2(1),WW2(1),CMAX,FIFX2)
      ENDIF
C
C     LOOP FOR CONTRIBUTION OF 'PLUS' SIDE TO LOCAL MATRIX
C
C BEG JULY 1989
  348 CONTINUE
C END JULY 1989
C BEG DEC 2001
      BC1 = RFK2
      BC2 = RD
      BMULT = 1.
      IF (IGLOB.EQ.0.AND.ILOCAL.EQ.0.AND.INDIC.NE.3) GO TO 3485
      IF ((ISEG.EQ.1.AND.I.EQ.1).OR.(ISEG.EQ.NSEG.AND.I.EQ.L5)) THEN
         BC1 = 0.
         BC2 = 1.
         IF (ILOCAL.EQ.1) BMULT = 1.
      ENDIF
 3485 CONTINUE
      DO 350 II=1,NSUB
      USTAR = BC1*UB(II) - BC2*WB(II)
      VSTAR = VB(II)
      WSTAR = BMULT*BC2*UB(II) + BC1*WB(II)
C END DEC 2001
      IF (FIFX5.NE.0.)
     1 FMOMP = (C(1,4)*B1(1,II) +C(2,4)*B1(2,II)
     1         +C(4,4)*B1(4,II) +C(4,5)*B1(5,II))/DS
C     D( ) = LOCAL MATRIX CONTAINING 'PLUS' SIDE OF CONSTRAINT CONDS.
      D(1,II) = USTAR*FIFX1
      D(2,II) = VSTAR*FIFX2
      D(3,II) = WSTAR*FIFX3
      D(4,II) = FIFX4*ROT(1,II)
      D(5,II) = FIFX5*FMOMP
C
C  contribution to local stiffness matrix U and r.h.s. RHS of nonlinear
C  term in the plus-moment expression...
      IF (FIFX5.NE.0.0.AND.INDIC.EQ.3) THEN
         RHS(II) = RHS(II) -C(1,4)*FB(IR4)*CHI*ROT(1,II)/DS
C      WRITE(8,*)' ISEG,I,II,C(1,4),IR4,FB(IR4),CHI,ROT(1,II),DS=',
C    1             ISEG,I,II,C(1,4),IR4,FB(IR4),CHI,ROT(1,II),DS
         DO 349 JJ = 1,II
         U(II,JJ) = U(II,JJ) +C(1,4)*FB(IR4)*ROT(1,II)*ROT(1,JJ)/DS
  349    CONTINUE
      ENDIF
C
  350 CONTINUE
      IF (FIFX5.NE.0.0.AND.INDIC.EQ.3) THEN
         EPS1 = B1(1,1)*FB(I3M) +B1(1,2)*FB(I2M) +B1(1,3)*FB(I1M)
     1         +B1(1,4)*FB(I0)  +B1(1,5)*FB(I1P) +B1(1,6)*FB(I2P)
     1         +B1(1,7)*FB(I3P) - .5*CHI**2
         EPS2 = B1(2,1)*FB(I3M) +B1(2,2)*FB(I2M) +B1(2,3)*FB(I1M)
     1         +B1(2,4)*FB(I0)  +B1(2,5)*FB(I1P) +B1(2,6)*FB(I2P)
     1         +B1(2,7)*FB(I3P)
C
         EPS4 = B1(4,1)*FB(I3M) +B1(4,2)*FB(I2M) +B1(4,3)*FB(I1M)
     1         +B1(4,4)*FB(I0)  +B1(4,5)*FB(I1P) +B1(4,6)*FB(I2P)
     1         +B1(4,7)*FB(I3P)
C
         EPS5 = B1(5,1)*FB(I3M) +B1(5,2)*FB(I2M) +B1(5,3)*FB(I1M)
     1         +B1(5,4)*FB(I0)  +B1(5,5)*FB(I1P) +B1(5,6)*FB(I2P)
     1         +B1(5,7)*FB(I3P)
C
         FRHS(IR4) = FRHS(IR4) -   (C(1,4)*EPS1 +C(2,4)*EPS2
     1                             +C(4,4)*EPS4 +C(4,5)*EPS5)/DS
C
C BEG AUG 1997
         IF (IWRITE.EQ.1) WRITE(8,'(A,2I4,1P2E12.4)')
     1             ' ISEG,IR4,FRHS(plus ),DS=',ISEG,IR4,FRHS(IR4),DS
C END AUG 1997
      ENDIF
C BEG MAY 1997
C BEG AUG 1997
C     IF (NPRT.GE.4) THEN
      IF (NPRT.GE.4.OR.IWRITE.EQ.1) THEN
C END AUG 1997
         WRITE(IFILE,'(A)')
     1      ' PLUS SIDE OF CONSTRAINT CONDITION FOLLOW...'
         WRITE(IFILE,'(A,/,4I4,1P,5E12.4)')
     1      ' ISEG,I,KKK,IZSTIF,FIFX1,FIFX2,FIFX3,FIFX4,FIFX5=',
     1        ISEG,I,KKK,IZSTIF,FIFX1,FIFX2,FIFX3,FIFX4,FIFX5
         WRITE(IFILE,'(A,5I5)')
     1      ' IR,IR1,IR2,IR3,IR4=',IR,IR1,IR2,IR3,IR4
C BEG AUG 1997
         WRITE(IFILE,'(A,/,1P,5E12.4)')
     1  ' RIGHT-HAND SIDE VECTOR, FRHS(IR,IR1..IR4)=',
     1    FRHS(IR),FRHS(IR1),FRHS(IR2),FRHS(IR3),FRHS(IR4)
         WRITE(IFILE,'(A,/,1P,5E12.4)')
     1  ' SOLUTION VECTOR, FB(IR,IR1..IR4)=',
     1    FB(IR),FB(IR1),FB(IR2),FB(IR3),FB(IR4)
C END AUG 1997
         WRITE(IFILE,'(A,/,1P,5E12.4)')
     1      ' RFK2,RD,USTAR,VSTAR,WSTAR=',RFK2,RD,USTAR,VSTAR,WSTAR
         WRITE(IFILE,'(A)')
     1      ' D(I,J) PLUS CONSTRAINT CONDITION MATRIX..'
         DO 355 JJ = 1,5
           WRITE(IFILE,354) (D(JJ,II),II=1,NSUB)
  354      FORMAT(1P,7E12.4)
  355    CONTINUE
      ENDIF
C END MAY 1997
C
C     FILL AS( ) WITH LOCAL MATRIX CONTAINING 'PLUS' SIDE OF CONSTRAINTS
C     ITYPE( ) = TYPE OF CONSTRAINT CONDITION. 5 MEANS SEGS. IN SERIES.
C
      IF (ITYPE(ICOND2).EQ.5) GO TO 400
C     THIS BRANCH FOR PLUS SIDES OF ALL TYPES OF CONSTRAINT CONDITIONS
C     EXCEPT ITYPE(ICOND2) = 5.
C
      ILOC1 = ILOC(IR)
      ILOC2 = ILOC(IR1)
      ILOC3 = ILOC(IR2)
      ILOC4 = ILOC(IR3)
      ILOC5 = ILOC(IR4)
      DO 360 II=1,NSUB
      IB = ILOC1    - NSUB - 1 + II
      AS(IB) = D(1,II)
      IB = ILOC2     - NSUB - 2 + II
      AS(IB) = D(2,II)
      IB = ILOC3     - NSUB - 3 + II
      AS(IB) = D(3,II)
      IB = ILOC4     - NSUB - 4 + II
      AS(IB) = D(4,II)
      IB = ILOC5     - NSUB - 5 + II
  360 AS(IB) = D(5,II)
      IF (IV.EQ.0) GO TO 420
      DO 370 IIV=1,IV
      IF (IR.EQ.IRSAVE(IIV)) GO TO 380
  370 CONTINUE
      GO TO 420
C     THIS BRANCH FOR INSERTION INTO GLOBAL STIFFNESS MATRIX OF
C     'MINUS' SIDE OF CONSTRAINT CONDITIONS REQUIRING VARIABLES FROM
C     PREVIOUS BLOCKS.
C
  380 DO 390 II=1,IC
      DO 390 J=1,NSUB
  390 QD(II,J) = QSAVE(IIV,II,J)
      I3MS = ISAVE(IIV,1)
      I2MS = ISAVE(IIV,2)
      I1MS = ISAVE(IIV,3)
      I0S  = ISAVE(IIV,4)
      I1PS = ISAVE(IIV,5)
      I2PS = ISAVE(IIV,6)
      I3PS = ISAVE(IIV,7)
      CALL FILLB(IC,NSUB,I3MS,I2MS,I1MS,I0S,I1PS,I2PS,I3PS,IR,ILOC,QD,AS
     1  )
      GO TO 420
  400 CONTINUE
C
C     THIS BRANCH FOR PLUS SIDE OF CONSTRAINT CONDITION TYPE 5
C
      DO 410 II=1,NSUB
      I1 = IR4 + II
      DO 410 J=1,IC
      ILOC1 = ILOC(I1)
      IB = ILOC1    - IC + J - II
  410 AS(IB) = D(J,II)
  420 ICOND2 = ICOND2 + 1
      DO 430 II=1,NSUB
      DO 430 J=1,IC
  430 D(J,II) = 0.0
      GO TO 330
  440 CONTINUE
C
C     FILL AS( ) WITH LOCAL MATRIX CORRESPONDING TO MESH POINT I
C
      DO 620 II=1,NSUB
      GO TO (450,460,470,480,490,500,510),II
  450 J = I3M
      GO TO 520
  460 J = I2M
      GO TO 520
  470 J = I1M
      GO TO 520
  480 J = I0
      GO TO 520
  490 J = I1P
      GO TO 520
  500 J = I2P
      GO TO 520
  510 J = I3P
  520 CONTINUE
C
      FRHS(J) = FRHS(J) + RHS(II)
C
      DO 610 K=1,II
      GO TO (530,540,550,560,570,580,590),K
  530 INDX = I3M
      GO TO 600
  540 INDX = I2M
      GO TO 600
  550 INDX = I1M
      GO TO 600
  560 INDX = I0
      GO TO 600
  570 INDX = I1P
      GO TO 600
  580 INDX = I2P
      GO TO 600
  590 INDX = I3P
  600 CONTINUE
      ILOC1 = ILOC(J)
      IB = ILOC1   - J + INDX
      AS(IB) = AS(IB) + U(II,K)
  610 CONTINUE
  620 CONTINUE
  630 CONTINUE
C
C     END OF LOOP OVER MESH POINTS IN CURRENT SEGMENT
C
C BEG FEB 2009
      IF (IWRITE.GT.0) THEN
         WRITE(IFILE,'(A,/,8I7)')
     1' ITER,NPRT,ISEG,JSEG,IC,III,I3P,NGBK(III)=',
     1  ITER,NPRT,ISEG,JSEG,IC,III,I3P,NGBK(III)
      ENDIF
C END FEB 2009
      I5TOT = I5TOT + L5  + 2
      IF (I3P.EQ.NGBK(III)) GO TO 640
      IR3 = I3P + IC
      IF (IR3.EQ.NGBK(III)) GO TO 640
      GO TO 720
  640 NN =2*ILOC(I3P)
      IF (IR3.EQ.NGBK(III)) NN =2*ILOC(IR3)
C     STORE BLOCK NUMBER III ON DISK OR DRUM.
      IF (IBLK.GT.1) CALL GASP(AS,NN,1,IDRW(III,IBUCK))
C BEG JUNE 1992
C BEG OCT 1998
      IF ((NPRT.LT.4.AND.IWRITE.EQ.0).OR.ITER.GT.1) GO TO 690
C END OCT 1998
C END JUNE 1992
      ZERO = 0.0
      WRITE (IFILE,650)III,IBUCK
      IF (III.EQ.1) NROWS  = 0
  650 FORMAT(//' PREFACTORED BLOCK NO.',I3,' FOLLOWS. IBUCK=',I3//)
      NROWS1 = NROWS + 1
      NROWS = NGBK(III)
      DO 680 I=NROWS1,NROWS
      IF (I.NE.NROWS1) J1 = ILOC(I-1) + 1
      IF (I.EQ.NROWS1) J1 = 1
      J2 = ILOC(I)
      J3 = 11- J2 + J1
      IF (J3.GT.0) WRITE (IFILE,660)I,(ZERO,J=1,J3),(AS(J),J=J1,J2)
      IF (J3.LE.0) WRITE (IFILE,670)I,(AS(J),J=J1,J2)
C BEG OCT 1998
  660 FORMAT(1X,I3,(6E12.4))
  670 FORMAT(1X,I3,(6E12.4))
C END OCT 1998
  680 CONTINUE
  690 CONTINUE
      IF (IBLK.GT.1) CALL MOVER(0.,0,AS,1,2*IMAX)
  710 III = III + 1
  720 CONTINUE
      RETURN
      END
C
C
C
C=DECK      GETP
C
C BEG JULY 1989
C
      SUBROUTINE GETP(NX,RFK2,UB,VB,WB,B1,ROT,U)
C
C  PURPOSE IS TO GET "LIVE" PRESSURE EFFECT
C
      DOUBLE PRECISION UB,VB,WB,B1,ROT,U,PR2,RFK2
      DIMENSION U(7,7),UB(7),VB(7),WB(7),B1(6,7),ROT(3,7)
      REAL NX
C
      PR2 = NX/2.
C
C END JULY 1989
C
      DO 20 J = 1,7
      DO 10 K = 1,J
      U(J,K) = U(J,K) - PR2*(WB(J)*(B1(1,K) +B1(2,K))
     1                     + WB(K)*(B1(1,J) +B1(2,J)))
     2 + PR2*(UB(J)*ROT(1,K) + ROT(1,J)*UB(K)
     3 +      VB(J)*ROT(2,K) + ROT(2,J)*VB(K) )
   10 CONTINUE
   20 CONTINUE
C
      RETURN
      END
C
C
C
C BEG AUG 2001
C=DECK      GETPB5
      SUBROUTINE GETPB5(P,PCOEFA,P2,PCOEFB,UB,VB,WB,B1,ROT,U)
C     CALLED FROM STABL2.
C     PRESSURE ROTATION EFFECT FOR BUCKLING PROBLEMS (LIKE BOSOR5 VERSION)
      DOUBLE PRECISION R,RD,FK1,FK2,CURD,RDS,FN,H
      DOUBLE PRECISION U,PR,PP,WB,PROD,PROD1,PROD2
      DOUBLE PRECISION B1,PR2,ROT,UB,VB
      COMMON/GGG/R,RD,FK1,FK2,CURD,RDS,FN,H
      DIMENSION U(7,7),WB(7)
      DIMENSION B1(6,7),ROT(3,7),UB(7),VB(7)
      PR = (P*PCOEFA + P2*PCOEFB)*RDS
      PP = 0.0
      PROD = PR*(FK1+FK2)
      PROD1 = -.25*PR*FK1
      PROD2 = -.25*PR*FK2
      PR2 = PR/2.
C
C     ADD TERMS FOR EFFECT OF REF. SURF. BUCKLING STRAIN ON WORK DONE BY
C     PRESSURE...
C
      DO 20 J = 1,7
      DO 10 K = 1,J
   10 U(J,K) = U(J,K) - PR2*(WB(J)*(B1(1,K) +B1(2,K))  +
     1   (B1(1,J) +B1(2,J))*WB(K))
     2 +PR2*(UB(J)*ROT(1,K) + ROT(1,J)*UB(K)
     3      +VB(J)*ROT(2,K) + ROT(2,J)*VB(K))
   20 CONTINUE
C
      RETURN
      END
C END AUG 2001
C
C
C
C=DECK      FILLB
      SUBROUTINE FILLB(IC,N,I3M,I2M,I1M,I0,I1P,I2P,I3P,IR,ILOC,QD,BB)
C     CALLED FROM STABIL, WHOSE TRACE IS ASTAB,ARRAYS,MAIN
C     PURPOSE IS TO ASSEMBLE THE 'MINUS' CONSTRAINT CONDITION
C     MATRIX QD(5X7) INTO THE GLOBAL MATRIX BB.
C     BUCKLING,VIBRATION, AND NONSYMMETRIC STRESS PROBLEMS.
C
      DOUBLE PRECISION QD,BB
      DIMENSION ILOC(*),QD(5,7),BB(*)
      DO 100 I=1,IC
      J = IR - 1 + I
      DO 90 K=1,N
      GO TO (10,20,30,40,50,60,70),K
   10 INDX = I3M
      GO TO 80
   20 INDX = I2M
      GO TO 80
   30 INDX = I1M
      GO TO 80
   40 INDX = I0
      GO TO 80
   50 INDX = I1P
      GO TO 80
   60 INDX = I2P
      GO TO 80
   70 INDX = I3P
   80 CONTINUE
      ILOC1 = ILOC(J)
      IB = ILOC1 - J + INDX
      BB(IB) = QD(I,K)
   90 CONTINUE
  100 CONTINUE
      RETURN
      END
C
C
C
C=DECK      GETB1
      SUBROUTINE GETB1(B1,ROT,L5,WB,WBD,HPAST,HI,FMULT,FACT)
C
C     CALLED FROM STABIL, WHOSE TRACE IS STABIL,ASTAB,ARRAYS,MAIN
C     STRAIN-DISPLACEMENT AND CURVATURE DISPLACEMENT RELATIONS IN
C     FINITE-DIFFERENCE FORM. CORRESPONDS TO ITH MESH POINT IN SEGMENT
C     NUMBER ISEG.
C
      DOUBLE PRECISION FNBAR,RD,FK1,RFK2,CURD,RDS,FN,H
      DOUBLE PRECISION FK2
      DOUBLE PRECISION C,B1,ROT,CHIFIX,WB,WBD,HPAST,HI
      COMMON/GGG/ FNBAR,RD,FK1,RFK2,CURD,RDS,FN,H
      COMMON/GGG1/FK2
      DIMENSION B1(6,7),ROT(3,7),WB(7),WBD(7)
C
C     CENTRAL DIFFERENCES USED INSIDE DOMAIN. U AND V LOCATED AT
C     HALF-STATIONS.
      B1(1,1) = FK1*WB(1) 
      B1(1,2) = -1./H 
      B1(1,4) = FK1*WB(4)
      B1(1,5) = 1./H
      B1(1,7) = FK1*WB(7)
      B1(2,1) = FK2*WB(1)
      B1(2,3) = FMULT*0.5*FNBAR
      B1(2,4) = FK2*WB(4)
      B1(2,6) = B1(2,3)
      B1(2,7) = FK2*WB(7)
      B1(3,2) = .5*FNBAR
      B1(3,3) = -1./H 
      B1(3,5) = B1(3,2)
      B1(3,6) = 1./H 
      B1(4,1) = 1./(HPAST*H)  
      B1(4,2) = FACT*FK1/H         
      B1(4,4) =-2./(HI*HPAST) 
      B1(4,5) = -FACT*FK1/H        
      B1(4,7) = 1./(H*HI)     
C
      DO 10 I=1,7
      B1(5,I) = -ROT(2,I)*FNBAR
   10 B1(6,I) = -2.*ROT(1,I)*FNBAR
      B1(6,3) = B1(6,3) - (2.*FK2/H)*FACT
      B1(6,6) = B1(6,6) + (2.*FK2/H)*FACT
C
      RETURN
      END
C
C
C
C=DECK      GETRNT
      SUBROUTINE GETRNT(RNT,ROT,B1)
C
C     GET MATRIX FOR TRANSFORMATION FROM DISP. GRADIENTS TO NODAL UNKN.
C     THIS MATRIX IS USED IN THE DERIVATION OF WORK DONE BY MEMBRANE
C     STRESS RESULTANTS DURING BUCLING OR VIBRATION
C
      DOUBLE PRECISION RNT,ROT,B1,FNBAR,RD,FK1,RFK2,CURD,RDS,FN,H
      COMMON/GGG/FNBAR,RD,FK1,RFK2,CURD,RDS,FN,H
      DIMENSION RNT(6,7),ROT(3,7),B1(6,7)
C
      DO 10 I = 1,7
      RNT(1,I) = ROT(1,I)
      RNT(2,I) = ROT(2,I)
      RNT(3,I) = B1(1,I)
      RNT(4,I) = B1(2,I)
   10 CONTINUE
C
      RNT(5,3) = -1./H
      RNT(5,6) = 1./H
      RNT(6,2) = .5*FNBAR
      RNT(6,5) = RNT(6,2)
C
      RETURN
      END
C
C
C
C=DECK      GETROT
      SUBROUTINE GETROT(ROT,I,L5,WB,WBD,FACT)
C
C     CALLED FROM STABIL. MATRIX ROT(I,J) IS SET UP WHICH RELATES
C     ROTATION VECTOR WITH SHELL REFERENCE SURFACE DISPLACEMENT COMPONEN
C
      DOUBLE PRECISION FNBAR,RD,FK1,RFK2,CURD,RDS,FN,H
      DOUBLE PRECISION FK2
      DOUBLE PRECISION ROT,WB,WBD
      COMMON/GGG/ FNBAR,RD,FK1,RFK2,CURD,RDS,FN,H
      COMMON/GGG1/FK2
      DIMENSION ROT(3,7),WB(7),WBD(7)
      ROT(1,1) = WBD(1)
      ROT(1,2) = -FACT*0.5*FK1
      ROT(1,4) = WBD(4)
      ROT(1,5) = ROT(1,2)
      ROT(1,7) = WBD(7)
      ROT(2,1) = WB(1)*FNBAR
      ROT(2,3) = -0.5*FK2*FACT
      ROT(2,4) = WB(4)*FNBAR
      ROT(2,6) = -0.5*FK2*FACT
      ROT(2,7) = WB(7)*FNBAR
      ROT(3,2) = 0.25*FNBAR*FACT
      ROT(3,3) = FACT*0.5/H 
      ROT(3,5) = ROT(3,2)
      ROT(3,6) = -FACT*0.5/H 
      RETURN
      END
C
C
C
C=DECK      GETWWD
      SUBROUTINE GETWWD(DS,K,H,WB,WBD)
C     CALLED FROM STABIL
C     FINITE-DIFFERENCE EXPRESSIONS FOR VARIABLE MESH SPACING WITH
C     U,V HALF-WAY BETWEEN W.
C
      DOUBLE PRECISION DS,K,H,WB,WBD,HMK,KPDS,HPDS
      DIMENSION WB(7),WBD(7)
      HMK = H - K
      KPDS = K + DS
      HPDS = H + DS
      WB(1) = HMK*KPDS/(16.*H*DS)
      WB(4) = KPDS*HPDS/(4.*H*K)
      WB(7) = -HMK*HPDS/(16.*K*DS)
      WBD(1) = -0.5/H
      WBD(7) = 0.5/K
      WBD(4) = -WBD(1) - WBD(7)
      RETURN
      END
C
C
C
C BEG JUN 1996
C=DECK      FOUNDA
      SUBROUTINE FOUNDA(FSTIFF,WB,RDS,U)
C
C     PURPOSE IS TO ADD CONTRIBUTION DUE TO ELASTIC FOUNDATION OF
C     STIFFNESS FSTIFF...
C
      DOUBLE PRECISION WB, RDS, U, PROD
      DIMENSION WB(7), U(7,7)
C
      PROD = RDS*FSTIFF
      U(1,1) = U(1,1) + WB(1)*WB(1)*PROD
      U(4,1) = U(4,1) + WB(4)*WB(1)*PROD
      U(7,1) = U(7,1) + WB(7)*WB(1)*PROD
      U(7,4) = U(7,4) + WB(7)*WB(4)*PROD
      U(4,4) = U(4,4) + WB(4)*WB(4)*PROD
      U(7,7) = U(7,7) + WB(7)*WB(7)*PROD
C
      RETURN
      END
C
C
C
C END JUN 1996
C
C
C BEG OCT 1998
C=DECK      ARRYS2
      SUBROUTINE ARRYS2(IFILE,IW,ILOC,DS,N,AS,BS,R,CIRC,TEMP,IMTEMP,
     1                  IWRITE,ITOR,RESEIG,RESTOT,DELFCR,DELWBR,
     1                  WBEIG,WBTOT,FNX,FNX0,DELTAN,IPRINT,MINTRG,
C BEG AUG 2001
C BEG JUN 2004
     1                  IMOD,PRESS,ILABEL,
     1       B,B2,B0,B20,H,H0,W,W0,W2,W20,IZSTIF,ISTIF,NSEGB5,
     1       I5,M3,NCONDB,D1B,D2B,IFIXB,
     1       IFXB,ITYPEB,IMAXB,KMAXB,ILOCB,
     1       IROWCB,IIWB,IDRW,IBLK,NGBK,NKF,
     1       FCXWEB,FCXWBA,FCXWBB,FCYWEB,FCYWBA,FCYWBB,
     1       CX,IICURV,WFOUND,ISANDW,NLAYER,IFREE,
     1       KROOTS,TX,CS,
     1       CY3,INTRNG,IFAY,TY,CY,NPRT,FCEFLG,FCEFGB,
     1       IXNUMB,POPISA,POPISB,POPRNA,POPRNB,ISOGRD,PEDG,
     1       PNXVAR,PNYVAR,PNXFIX,PNYFIX,FNYYP,FNYYP0,FXXXP)
C END JUN 2004
C END AUG 2001
C
C  PURPOSE IS TO SET UP MATRICES K1, K2, AND M FOR EIGENPROBLEMS
C  FOR SKIN-RING DISCRETIZED MODULE.
C
C BEG JUN 2004
      DIMENSION I5(95),D1B(98),D2B(98)
      DIMENSION IFIXB(98,6),IFXB(98,6),ITYPEB(98),KMAXB(20)
      DIMENSION IROWCB(98),IDRW(20,5),NGBK(20),NKF(20)
      DIMENSION FCXWEB(11),FCXWBA(11),FCXWBB(11)
      DIMENSION FCYWEB(11),FCYWBA(11),FCYWBB(11)
      DIMENSION B(2),B0(2),B2(2),B20(2),H(2),H0(2),W(2),W0(2)
      DIMENSION W2(2),W20(2),IZSTIF(2),ISTIF(2),TY(5)
      DIMENSION CX(6,6,5),WFOUND(4,2),ISANDW(4,2),NLAYER(4,2)
      DIMENSION TX(5),CY3(6,6,11),IFAY(2)
      DIMENSION CY(6,6,5),CS(6,6)
      DIMENSION PNXVAR(23,8),PNYVAR(23,8),PNXFIX(23,8),PNYFIX(23,8)
      DIMENSION FNYYP(30),FNYYP0(30),FXXXP(30)
C END JUN 2004
      DIMENSION RESEIG(3,5,2),RESTOT(3,5,2),DELFCR(3,4),DELWBR(2)
      DIMENSION WBEIG(2,4,2),WBTOT(2,4,2)
      DIMENSION XCOORD(23,2),FNYYPA(23,8),FNYYPB(23,8)
C BEG JUN 2004
C     COMMON/IZSTIX/IZSTIF(2)
C     COMMON/GEOM6/IFAY(2),ITRTOT,IRESET,NLOADS,NSTEPS,WMAX,NCROSS,
C    1       NOPLOT,KMAX,ILAYPL,XMXX,XMIN,YMXX,YMIN,N3DPLT,NOBJ,NSTRNS,
C    1       NPLTST,NABSCI,IDIAG,ITRALL,IFAYT(2),IBEAM,IMISCL(5)
C     COMMON/THICK/TX(5),TY(5)
C     COMMON/WEBTH6/FCXWEB(11),FCXWBA(11),FCXWBB(11),FCXWBT(11)
C     COMMON/WEBTH7/FCYWEB(11),FCYWBA(11),FCYWBB(11),FCYWBT(11)
C BEG DEC 1998
C BEG NOV 2003
C     COMMON/FNYYPX/FNYYP(30),FNYYP0(30),FXXXP(30),RNGSPA
C END NOV 2003
C     COMMON/FNYYPY/IXNUMB,IXNMBA,IXNMBB,IXNMBT
C END DEC 1998
C     COMMON/WLOCAA/POPISA,POPISB,POPRNA,POPRNB,DFNYPA,DFNYPB,DFNYP0
C     COMMON/ISOGR/ISOGRD,ISOANG
C     COMMON/FCERNG/FCEWEB,FCEFLG,FCEWBA,FCEFGA,FCEWBB,FCEFGB,
C    1              FCEWBT,FCEFGT
C     COMMON/EDGCON/PEDG
C     COMMON/SEGSR/NSEGB5,M2,I5(95),I2,I2G
C     COMMON/TOTPTR/M3
C     COMMON/NCONDX/NCONDB
C     COMMON/RING3R/D1B(98),D2B(98)
C     COMMON/JUNCTR/IFIXB(98,6),IFXB(98,6),ITYPEB(98)
C     COMMON/BKSIZR/IMAXP,IMAXB,KMAXP(20),KMAXB(20)
C     COMMON/LOCATR/ILOCP,ILOCB,IROWCP(98),IROWCB(98),IIWP,IIWB
C     COMMON/BCKR/IDRW(20,5)
C     COMMON/BLKR/IBLK,NGBK(20),NKF(20)
      COMMON/MISCLR/ICOND1,ICOND2,KK,NSUB,KLAP,I5TOT,ICC,III,IV
C     COMMON/ORTA/IFLGG,KTM,KROOTS
C     COMMON/GEOM0/B0(2),B20(2),H0(2),W0(2),W20(2)
C     COMMON/GEOM2/B(2),B2(2),H(2),W(2),W2(2)
C     COMMON/GEOM3/ISTIF(2),NLAYER(4,2),NSEG(2),INTEXT(2)
C     COMMON/ALLCIJ/CX(6,6,5),CY(6,6,5),CS(6,6)
C     COMMON/OUTP/NPRT
C END JUN 2004
C
      DOUBLE PRECISION AS,BS,QSAVE,SEND
      DIMENSION DS(*),AS(*),BS(*),QSAVE(350)
      DIMENSION ILOC(*),IW(*)
      DIMENSION GEOM(5),CNEW(6,6)
      DIMENSION TEMP(*)
      LOGICAL PEDG
C
      IF (ISTIF(2).EQ.5) RETURN
      NNPRT = NPRT
C     IF (ILABEL.EQ.9270) NNPRT = 3
      CMAX=CX(1,1,1)
      CMASS = 0.
C
      CALL MOVER(0.,0,AS,1,2*IMAXB)
      CALL MOVER(0.,0,BS,1,2*IMAXB)
C
      IBUCK = 1
C
      IF (IWRITE.EQ.1.OR.NNPRT.GE.3) THEN
      WRITE(IFILE,14) NCONDB
      WRITE(IFILE,15) ((IFIXB(I,J),J=1,6),I=1,NCONDB)
      WRITE(IFILE,16) ((IFXB(I,J),J=1,6), I=1,NCONDB)
      WRITE(IFILE,17) (ITYPEB(I),I=1,NCONDB)
   14 FORMAT(//' NCONDB=',I10)
   15 FORMAT(//' IFIXB='/ (6I10))
   16 FORMAT(//' IFXB ='/ (6I10))
   17 FORMAT(//' ITYPEB='/(10I5))
      ENDIF
C
   20 CONTINUE
      ICOND1 = 1
      ICOND2 = 1
      NSUB = 7
      KLAP = 4
      I5TOT = 0
      ICC = 5
      III = 1
      IV = 0
      IF (IBUCK.EQ.1) KROOTS = 0
      ITOTL = 1
      SEND = 0.
C
      DO 100 ISEG = 1,NSEGB5
C
C     CALCULATE MATRIX ELEMENTS FOR NEXT SHELL SEGMENT
C
      I5I = I5(ISEG)
C
C  GET CORRECT C(i,j) AND LOADING IN THE VARIOUS SEGMENTS...
C
C BEG JUN 2004
      CALL IDSEG2(ISTIF(2),ISEG,NSEGB5,B20(2),W20(2),J,IFAY)
C END JUN 2004
      JSKN = J
      IF (J.GT.2) JSKN = 2
      IF (B2(2).EQ.0.0) JSKN = 1
      ISEGB = 1
      ISEGC = NSEGB5
      IF (ISTIF(2).EQ.4) THEN
         ISEGB = 3
         ISEGC = NSEGB5-1
         IF (NSEGB5.EQ.6) THEN
            ISEGB = 2
            ISEGC = NSEGB5
         ENDIF
      ENDIF
C BEG JUN 2004
      CALL GTGEO2(ISEG,GEOM,RATIO,ABS(R),
     1 B,B2,B0,B20,H,H0,W,W0,W2,W20,IZSTIF,ISTIF,
     1 INTRNG,TX,TY)
C END JUN 2004
      IF (ISEG.GT.ISEGB.AND.ISEG.LT.ISEGC)
     1   CALL CHGCIJ(CY(1,1,J),CNEW)
      IF (ISEG.LE.ISEGB.OR.ISEG.GE.ISEGC)
     1   CALL MOVER(CX(1,1,5),1,CNEW,1,36)
      IF (ISEG.EQ.2.AND.IZSTIF(2).EQ.0
     1             .AND.(ISTIF(1).NE.0.OR.B2(2).LE.0.0)) THEN
         CALL MOVER(CX(1,1,5),1,CNEW,1,36)
         IF (B2(2).GT.0.0) THEN
            CNEW(1,1) = CNEW(1,1) + CY(2,2,J) - CX(1,1,1)
            CNEW(4,4) = CNEW(4,4) + CY(5,5,J) - CX(4,4,1)
            CNEW(3,3) = CNEW(3,3) + CY(3,3,J) - CX(3,3,1)
            CNEW(6,6) = CNEW(6,6) + CY(6,6,J) - CX(6,6,1)
            CNEW(2,2) = CNEW(2,2) + CY(1,1,J) - CX(2,2,1)
            CNEW(5,5) = CNEW(5,5) + CY(4,4,J) - CX(5,5,1)
            IF (ISOGRD.EQ.0) THEN
               CNEW(2,2) = CY(1,1,J)
               CNEW(5,5) = CY(4,4,J)
            ENDIF
         ENDIF
      ENDIF
      IF (R.GT.0.) THEN
         CNEW(1,4) = -CNEW(1,4)
         CNEW(4,1) = CNEW(1,4)
         CNEW(1,5) = -CNEW(1,5)
         CNEW(5,1) = CNEW(1,5)
         CNEW(2,4) = -CNEW(2,4)
         CNEW(4,2) = CNEW(2,4)
         CNEW(2,5) = -CNEW(2,5)
         CNEW(5,2) = CNEW(2,5)
      ENDIF
      IF (R.LT.0.) THEN
         CNEW(3,6) = -CNEW(3,6)
         CNEW(6,3) = CNEW(3,6)
      ENDIF
C
C BEG AUG 2001
      FNHOOP = 0.
      IF (IMOD.EQ.0.AND.ILABEL.EQ.9480) THEN
         EPS2 = -ABS(PRESS*R)/(CS(2,2) - CS(1,2)**2/CS(1,1))
         FNHOOP = (CNEW(2,2) - CNEW(1,2)**2/CNEW(1,1))*EPS2
C        IF (NPRT.GE.2)
C    1    WRITE(IFILE,'(A,/,I2,1P4E12.4,/,A,1P3E12.4,/,A,1P3E12.4)')
C    1  ' Infinite cyl. prebuck:ISEG, ABS(R), PRESS, EPS2, FNHOOP=',
C    1                          ISEG, ABS(R), PRESS, EPS2, FNHOOP,
C    1  ' CS(1,1), CS(1,2), CS(2,2)=',CS(1,1), CS(1,2), CS(2,2),
C    1  ' CNEW(1,1), CNEW(1,2), CNEW(2,2)=',
C    1    CNEW(1,1), CNEW(1,2), CNEW(2,2)
         DO 19 I = 1,I5I
            FNYYPA(I,ISEG) = FNHOOP
            FNYYPB(I,ISEG) = 0.
   19    CONTINUE
      ENDIF
C BEG APR 2009
C     IF (PEDG.AND.(ISEG.EQ.1.OR.ISEG.EQ.2).AND.ILABEL.NE.9480) THEN
      IF (PEDG.AND.(ISEG.EQ.1.OR.ISEG.EQ.2).AND.ILABEL.NE.9480
     1                                     .AND.ILABEL.NE.9270) THEN
C END APR 2009
C END AUG 2001
         DX = DS(ITOTL)*RATIO
         XCOORD(1,ISEG) = 0.
         I511 = I5(1)
         IF (ISEG.EQ.2) XCOORD(1,2) = XCOORD(I511,1)
         DO 22 I = 2,I5I
            I1 = I - 1
            XCOORD(I,ISEG) = XCOORD(I1,ISEG) + DX
   22    CONTINUE
C23456789012345678901234567890123456789012345678901234567890123456789012
         IF (ISEG.EQ.1) THEN
            DO 23 I = 1,I5I
              CALL INTERP(IFILE,IXNUMB,FXXXP,FNYYP,XCOORD(I,1),
     1                    FNYYPA(I,ISEG))
              CALL INTERP(IFILE,IXNUMB,FXXXP,FNYYP0,XCOORD(I,1),
     1                    FNYYPB(I,ISEG))
   23       CONTINUE
         ENDIF
         IF (ISEG.EQ.2                  .AND.ISTIF(2).LT.4) THEN
            IF (IZSTIF(2).EQ.0) THEN
               I5I2 = I5I/2 + 1
               DO 24 I = 1,I5I2
                  CALL INTERP(IFILE,IXNUMB,FXXXP,FNYYP,XCOORD(I,2),
     1                        FNYYPA(I,ISEG))
                  CALL INTERP(IFILE,IXNUMB,FXXXP,FNYYP0,XCOORD(I,2),
     1                        FNYYPB(I,ISEG))
   24          CONTINUE
               I5I2P = I5I2 + 1
               DO 25 I = I5I2P,I5I
                  II = I5I - I + 1
                  FNYYPA(I,ISEG) = FNYYPA(II,ISEG)
                  FNYYPB(I,ISEG) = FNYYPB(II,ISEG)
   25          CONTINUE
               IF (ISTIF(2).NE.0.AND.ISOGRD.EQ.0.AND.B2(2).NE.0.) THEN
                DO 252 I = 1,I5I
                 FNYYPA(I,ISEG) = FNYYPA(I,ISEG)*CY(1,1,2)/CX(2,2,5)
                 FNYYPB(I,ISEG) = FNYYPB(I,ISEG)*CY(1,1,2)/CX(2,2,5)
  252           CONTINUE
               ENDIF
            ELSE
               DO 26 I = 1,I5I
                  FNYYPA(I,ISEG) = FNYYP(IXNUMB)*CY(1,1,2)/CX(2,2,5)
                  FNYYPB(I,ISEG) =FNYYP0(IXNUMB)*CY(1,1,2)/CX(2,2,5)
   26          CONTINUE
            ENDIF
         ENDIF
      ENDIF
C BEG AUG 2001
C BEG APR 2009
C     IF (PEDG.AND.ISEG.EQ.NSEGB5.AND.ILABEL.NE.9480) THEN
      IF (PEDG.AND.ISEG.EQ.NSEGB5.AND.ILABEL.NE.9480
     1                           .AND.ILABEL.NE.9270) THEN
C END APR 2009
C END AUG 2001
         DO 27 I = 1,I5I
            II = I5I - I + 1
            FNYYPA(I,ISEG) = FNYYPA(II,1)
            FNYYPB(I,ISEG) = FNYYPB(II,1)
   27    CONTINUE
      ENDIF
C     IF (PEDG) THEN
C BEG AUG 2001
C        IF (ISEG.EQ.1.AND.ILABEL.NE.9480) THEN
C END AUG 2001
C           WRITE(IFILE,'(/,A,I2,/,(1P,5E12.4))')
C    1    ' (FNYYP(I),I=1,IXNUMB), SEGMENT',ISEG,(FNYYP(I),I=1,IXNUMB)
C           WRITE(IFILE,'(/,A,/,(1P,5E12.4))')
C    1    ' (FXXXP(I),I=1,IXNUMB)=',(FXXXP(I),I=1,IXNUMB)
C           WRITE(IFILE,'(/,A,/,(1P,5E12.4))')
C    1    ' (XCOORD(I),I=1,I5I)=',(XCOORD(I,ISEG),I=1,I5I)
C        ENDIF
C        WRITE(IFILE,'(/,A,I2,/,(1P,5E12.4))')
C    1 ' (FNYYPA(I),I=1,I5I), SEGMENT',ISEG,(FNYYPA(I,ISEG),I=1,I5I)
C        WRITE(IFILE,'(/,A,/,(1P,5E12.4))')
C    1 ' (FNYYPB(I),I=1,I5I)=',(FNYYPB(I,ISEG),I=1,I5I)
C     ENDIF
C
      IF (IWRITE.GT.0) THEN
         WRITE(IFILE,30) NSEGB5,CIRC,R,ISEG,
     1   B(2),B2(2),H(2),W(2),W2(2),(GEOM(K),K=1,5),CMAX,RATIO
   30 FORMAT(/' INPUT DATA FOR MODULE WITH',I2,' SEGMENTS AND',/,
     1' OVERALL DIMENSIONS (CIRC, RAD. OF CURV.)=',1P,2E12.4,/,
     1' INPUT DATA FOR SEGMENT NO.',I2,/,
     1'   B, B2, H, W, W2   =',1P,5E12.4,/,
     1'   GEOM(i),i=1,5     =',1P,5E12.4,/,
     1'    C(1,1)           =',1P,E12.4,/,
     1'    RATIO            =',1P,E12.4)
C
         WRITE(IFILE,'(A,I3)')' IBUCK=',IBUCK
         WRITE(IFILE,40) I5I,ITOTL,DS(ITOTL),DS(ITOTL+1),
     1   DS(ITOTL+2),DS(ITOTL+3),DS(ITOTL+4),DS(ITOTL+5),DS(ITOTL+6),
     1   J,JSKN,IMAXB,NCONDB,N,(RESEIG(K,J,2),K=1,2),
     1   (RESTOT(K,J,2),K=1,2),(DELFCR(1,K),K=1,4),
     1   (DELWBR(K),K=1,2),(WBEIG(K,4,2),K=1,2),(WBTOT(K,4,2),K=1,2),
     1   CNEW(1,1),CNEW(1,2),CNEW(2,1),CNEW(2,2)
   40    FORMAT(
     1'  NO. OF NODES,ITOTL =',2I5,/,
     1'    ELEMENT SIZES, DS=',1P,7E12.4,/,
     1'    SEG. NOs., J,JSKN=',2I5,/,
     1'    SIZE OF AS BLOCK =',I5,/,
     1'   NO. OF CONSTRAINTS=',I5,/,
     1'   NO. OF CIRC. WAVES=',I5,/,
     1' EIG.RESULTANTS, (RESEIG(i,J,2),i=1,2)=',1P,2E12.4,/,
     1' FIX.RESULTANTS, (RESTOT(i,J,2),i=1,2)=',1P,2E12.4,/,
     1' EIG.RESULTANTS, (DELFCR(1,i),i=1,4)=',1P,4E10.2,/,
     1' EIG.WEB:ROOT,TIP,(DELWBR(i),i=1,2)   =',1P,2E12.4,/,
     1' EIG.WEB:ROOT,TIP,(WBEIG(i,4,2),i=1,2)=',1P,2E12.4,/,
     1' FIX.WEB:ROOT,TIP,(WBTOT(i,4,2),i=1,2)=',1P,2E12.4,/,
     1' CN11,CN12,CN21,CN22=',1P,4E12.4)
      ENDIF
      POPFCA = POPRNA
      POPFCB = POPRNB
      IF (ISOGRD.EQ.1) THEN
         POPFCA = POPISA
         POPFCB = POPISB
      ENDIF
      IF (IBUCK.EQ.1) THEN
         CALL STABL2(IFILE,ISEG,I5I,DS(ITOTL),NSEGB5,IBUCK,CNEW,
     1       CMASS,GEOM,AS,IW,ILOC,IFXB,IFIXB,IROWCB,ITYPEB,IMAXB,CMAX,
     1       D1B,D2B,NCONDB,QSAVE,N,RATIO,ISTIF(2),
     1       IBLK,IDRW,NGBK,NKF,NNPRT,
     1       SEND,J,TEMP,IMTEMP,IZSTIF(2),IWRITE,ITOR,DELFCR(1,J),
     1       DELWBR(1),DELWBR(2),WBEIG(1,4,2),WBEIG(2,4,2),
     1       WBTOT(1,4,2),WBTOT(2,4,2),FNX,FNX0,DELTAN,ABS(R),CIRC,
     1       IPRINT,FNYYPA(1,ISEG),FNYYPB(1,ISEG),FNYRF1,FNYRF2,
     1       FCXWEB,FCYWEB,FCEFLG,FCXWBB,FCYWBB,FCEFGB,MINTRG,
C BEG AUG 2001
C BEG JUN 2004
     1       POPFCA,POPFCB,IMOD,PRESS,ILABEL,
     1       CX,IICURV,WFOUND,ISANDW,NLAYER,B20,IFREE,
     1       KROOTS,B,B2,W,W2,TX,TY,
     1       CY3,INTRNG,PNXVAR,PNYVAR,PNXFIX,PNYFIX,
     1       W20)
C END JUN 2004
C END AUG 2001
C
      ELSE
C
         CALL STABL2(IFILE,ISEG,I5I,DS(ITOTL),NSEGB5,IBUCK,CNEW,
     1       CMASS,GEOM,BS,IW,ILOC,IFXB,IFIXB,IROWCB,ITYPEB,IMAXB,CMAX,
     1       D1B,D2B,NCONDB,QSAVE,N,RATIO,ISTIF(2),
     1       IBLK,IDRW,NGBK,NKF,NNPRT,
     1       SEND,J,TEMP,IMTEMP,IZSTIF(2),IWRITE,ITOR,DELFCR(1,J),
     1       DELWBR(1),DELWBR(2),WBEIG(1,4,2),WBEIG(2,4,2),
     1       WBTOT(1,4,2),WBTOT(2,4,2),FNX,FNX0,DELTAN,ABS(R),CIRC,
     1       IPRINT,FNYYPA(1,ISEG),FNYYPB(1,ISEG),FNYRF1,FNYRF2,
     1       FCXWEB,FCYWEB,FCEFLG,FCXWBB,FCYWBB,FCEFGB,MINTRG,
C BEG AUG 2001
C BEG JUN 2004
     1       POPFCA,POPFCB,IMOD,PRESS,ILABEL,
     1       CX,IICURV,WFOUND,ISANDW,NLAYER,B20,IFREE,
     1       KROOTS,B,B2,W,W2,TX,TY,
     1       CY3,INTRNG,PNXVAR,PNYVAR,PNXFIX,PNYFIX,
     1       W20)
C END JUN 2004
C END AUG 2001
C
      ENDIF
C
      ITOTL = ITOTL + I5I
  100 CONTINUE
C
      IF (NPRT.GT.2) WRITE(IFILE,120) IBUCK,N
  120 FORMAT(/' ***** COEFFICIENT MATRIX CALCULATED. IBUCK =',I2,
     1 '; N =',I6,' WAVES *****'/)
      IF (IBUCK.EQ.2) RETURN
      IBUCK = 2
      GO TO 20
      END
C
C
C
C=DECK      GTGEO2
C BEG JUN 2004
      SUBROUTINE GTGEO2(ISEG,GEOM,RATIO,R,
     1 B,B2,B0,B20,H,H0,W,W0,W2,W20,IZSTIF,ISTIF,
     1 INTRNG,TX,TY)
C END JUN 2004
C
C  PURPOSE IS TO CALCULATE GEOMETRY PARAMETERS NEEDED IN STABL2 FROM
C  CROSS-SECTION DIMENSIONS OF THE PANEL MODULE
C
      DIMENSION GEOM(*)
C BEG JUN 2004
      DIMENSION B(2),B0(2),B2(2),B20(2),H(2),H0(2),W(2),W0(2)
      DIMENSION W2(2),W20(2),IZSTIF(2),ISTIF(2)
      DIMENSION TX(*),TY(*)
C     COMMON/SEGS/NSEGB5,M2,I5(95),I2,I2G
C     COMMON/GEOM0/B0(2),B20(2),H0(2),W0(2),W20(2)
C     COMMON/GEOM2/B(2),B2(2),H(2),W(2),W2(2)
C     COMMON/GEOM3/ISTIF(2),NLAYER(4,2),NSEG(2),INTEXT(2)
C     COMMON/IZSTIX/IZSTIF(2)
C     COMMON/INTRGX/INTRNG
C     COMMON/GEOM6/IFAY(2),ITRTOT,IRESET,NLOADS,NSTEPS,WMAX,NCROSS,
C    1       NOPLOT,KMAX,ILAYPL,XMXX,XMIN,YMXX,YMIN,N3DPLT,NOBJ,NSTRNS,
C    1       NPLTST,NABSCI,IDIAG,ITRALL,IFAYT(2),IBEAM,IMISCL(5)
C BEG JAN 2002
C     COMMON/THICK/TX(5),TY(5)
C END JAN 2002
      FACT = 1.
      IF (INTRNG.EQ.1) FACT = -1.
      GEOM(1) = ABS(R)
      GEOM(2) = 0.
      GEOM(3) = 0.
      GEOM(4) = 1.
      GEOM(5) = 0.
      RATIO = (B(2) - B2(2))/(B0(2) - B20(2))
      IF (IZSTIF(2).EQ.1) RATIO = B(2)/B0(2)
      IF (ISTIF(2).NE.5) THEN
         IF (ISTIF(2).NE.4) THEN
            IF (ISEG.EQ.2) THEN
               RATIO = B(2)/B0(2)
               IF (B2(2).GT.0.0.AND.B20(2).GT.0.) RATIO = B2(2)/B20(2)
            ENDIF
C BEG JAN 2002
            ECCEN = 0.
            IF (ISEG.EQ.4.AND.ISTIF(2).NE.3) THEN
                RATIO = W(2)/W0(2)
                IF (IZSTIF(2).EQ.1) THEN
                   ECCEN = 0.5*(TX(1)+TY(2))
                ELSE
                   ECCEN = 0.5*TY(2)
                ENDIF
                GEOM(1) = ABS(R) + FACT*(H(2)+ECCEN)
            ENDIF
C END JAN 2002
            IF (ISEG.EQ.3.AND.ISTIF(2).NE.0) THEN
               GEOM(2) = FACT
               GEOM(4) = 0.
               RATIO = H(2)/H0(2)
            ENDIF
         ELSE
            IF (B20(2).GT.W20(2)) THEN
               IC2 = 2
               IC3 = 3
               IC4 = 4
               IC5 = 5
               IC6 = 6
               IC7 = 7
               IF (ISEG.EQ.2.OR.ISEG.EQ.7) THEN
                  RATIO = (B2(2)-W2(2))/(B20(2)-W20(2))
                  IF (RATIO.LT.0) CALL ERREX
               ENDIF
            ELSE
               IC2 = 2
               IC3 = 2
               IC4 = 3
               IC5 = 4
               IC6 = 5
               IC7 = 2
            ENDIF
            IF (ISEG.EQ.IC3) RATIO = W2(2)/W20(2)
            IF (ISEG.EQ.IC4.OR.ISEG.EQ.IC6) THEN
               S = SQRT(H(2)*H(2) + (W2(2) - W(2))**2/4.)
               S0= SQRT(H0(2)**2+(W20(2)-W0(2))**2/4.)
               RATIO = S/S0
               WDIFF = 0.5*(W2(2)-W(2))
               IF (ISEG.EQ.IC4) GEOM(2) =  FACT*H(2)/S
               IF (ISEG.EQ.IC6) GEOM(2) = -FACT*H(2)/S
               GEOM(4) =  FACT*WDIFF/S
             ENDIF
             IF (ISEG.EQ.IC5) RATIO = W(2)/W0(2)
         ENDIF
      ELSE
C  THIS SECTION (TRUSS CORE) HAS NOT BEEN CORRECTED FOR ARRYS2...
         IF (B2(2).LE.0.0.AND.(ISEG.EQ.2.OR.ISEG.EQ.4)) THEN
            S = SQRT(H(2)*H(2) + .25*B(2)*B(2))
            S0= SQRT(H0(2)**2  + .25*B0(2)**2)
            RATIO = S/S0
            GEOM(2) = -.5*B(2)/S
            IF (ISEG.EQ.2) GEOM(4) =  FACT*H(2)/S
            IF (ISEG.EQ.4) GEOM(4) = -FACT*H(2)/S
            GEOM(5) = 0.
         ENDIF
         IF (B2(2).GT.0.0) THEN
          IF (ISEG.EQ.2.OR.ISEG.EQ.4) THEN
            S = SQRT(H(2)*H(2) + .25*(B(2)-2.*B2(2))**2)
            S0= SQRT(H0(2)**2  + .25*(B0(2)-2.*B20(2))**2)
            RATIO = S/S0
            GEOM(2) = -.5*(B(2)-2.*B2(2))/S
            IF (ISEG.EQ.2) GEOM(4) =  FACT*H(2)/S
            IF (ISEG.EQ.4) GEOM(4) = -FACT*H(2)/S
            GEOM(5) = 0.
          ENDIF
          IF (ISEG.EQ.5) GEOM(2) = -1.
          IF (ISEG.EQ.5.OR.ISEG.EQ.6) RATIO = B2(2)/B20(2)
         ENDIF
      ENDIF
      RETURN
      END
C
C
C
C=DECK      STABL2
      SUBROUTINE STABL2(IFILE,ISEG,L5,HS,NSEG,IBUCK,COEF,CMASS,
     1 GEOM,AS,IW,ILOC,IFX,IFIX,IROWC,ITYPE,IMAX,CMAX,
     1 D1,D2,NCOND,QSAVE,N,RATIO,ISTIF,IBLK,IDRW,NGBK,NKF,
     1 NPRT,SEND,JSEG,TEMP,IMTEMP,IZSTIF,IWRITE,ITOR,
     1 DELFCR,DLWBR1,DLWBR2,WBROTV,WBTIPV,WBROTF,WBTIPF,
     1 FNX,FNX0,DELTAN,RADIUS,CIRC,IPRINT,FNYYPA,FNYYPB,FNYRF1,FNYRF2,
     1 FCXWEB,FCYWEB,FCEFLG,FCXWBB,FCYWBB,FCEFGB,MINTRG,POPFCA,POPFCB,
C BEG AUG 2001
C BEG JUN 2004
     1 IMOD,PRESS,ILABEL,
     1 CX,IICURV,WFOUND,ISANDW,NLAYER,BB20,IFREE,
     1 KROOTS,BB,BB2,WW,WW2,TX,TY,
     1 CY3,INTRNG,PNXVAR,PNYVAR,PNXFIX,PNYFIX,WW20)
C END JUN 2004
C END AUG 2001
C
C     SETS UP STABILITY OR VIBRATION GLOBAL MATRICES
C     FOR CURRENT CIRC. WAVENUMBER N
C     BASED ON MINIMIZATION OF ENERGY WITH RESPECT TO MESH
C     POINT DISPLACEMENTS.
C
C BEG JUN 2004
      DIMENSION CX(6,6,5),WFOUND(4,2),ISANDW(4,2),NLAYER(4,2)
      DIMENSION BB20(2),WW20(2),BB(2),BB2(2),WW(2),WW2(2)
      DIMENSION TX(5),TY(2),CY3(6,6,11)
      DIMENSION PNXVAR(23,8),PNYVAR(23,8),PNXFIX(23,8),PNYFIX(23,8)
C END JUN 2004
      DIMENSION FNYYPA(*),FNYYPB(*),FCXWEB(*),FCYWEB(*),FCXWBB(*)
      DIMENSION NXFIX(31),NYFIX(31),NXVAR(31),NYVAR(31),FCYWBB(*)
      DOUBLE PRECISION  RAD,RD,FK1,FK2,CURD,RDS,FN,H
      DOUBLE PRECISION C,B1,D,U,ROT,PRE,QD,AS,DS,SMS
      DOUBLE PRECISION     VN1,VN2,WB,VB,UB,QSAVE,DSAVE
      DOUBLE PRECISION USTAR,VSTAR,WSTAR,HPAST,HI,WBD
      DOUBLE PRECISION RNT,SEND,S
      DIMENSION RNT(6,7)
      DIMENSION UB(7),VB(7),WB(7),HS(*),WBD(7) 
C BEG AUG 2001
C BEG JUN 2004
C     COMMON/PACTQQ/PACTUL
C END JUN 2004
C END AUG 2001
C BEG JAN 2002
C BEG JUN 2004
C     COMMON/INTRGX/INTRNG
C END JUN 2004
C END JAN 2002
C BEG JUN 2004
C     COMMON/ALLCIJ/CX(6,6,5),CY(6,6,5),CS(6,6)
C     COMMON/GEOM6/IFAY(2),ITRTOT,IRESET,NLOADS,NSTEPS,WMAX,NCROSS,
C    1       NOPLOT,KMAX,ILAYPL,XMXX,XMIN,YMXX,YMIN,N3DPLT,NOBJ,NSTRNS,
C    1       NPLTST,NABSCI,IDIAG,ITRALL,IFAYT(2),IBEAM,IONEST,IMISCL(4)
C     COMMON/XFOUND/EFOUND,HXSIDE,WFOUND(4,2),HEXSID(4,2)
C     COMMON/XSANDW/ISANDW(4,2),ICORE(4,2)
C     COMMON/GEOM3/IISTIF(2),NLAYER(4,2),NNSEG(2),INTEXT(2)
C     COMMON/GEOM0/BB0(2),BB20(2),HH0(2),WW0(2),WW20(2)
C     COMMON/MAXSHR/SHEAR(2),XMAX,YMAX
C     COMMON/FREEDG/IFREE
C     COMMON/ORTA/IFLGG,KTM,KROOTS
C     COMMON/PRERNG/PNXVAR(23,8),PNYVAR(23,8),PNXFIX(23,8),PNYFIX(23,8)
C END JUN 2004
      COMMON/GGG/ RAD,RD,FK1,FK2,CURD,RDS,FN,H
      DIMENSION QD(5,7),COEF(6,6)
      DIMENSION IFX(98,6),IFIX(98,6),ILOC(*),ITYPE(98),IROWC(98)
      DIMENSION QSAVE(9,5,7),IRSAVE(9),ISAVE(9,7),IW(*),AS(*)
      DIMENSION C(6,6),B1(6,7),D(5,7),U(7,7),ROT(3,7),PRE(6,6)
      DIMENSION D1(98),D2(98),GEOM(*)
      COMMON/MISCLR/ICOND1,ICOND2,KK,NSUB,KLAP,I5TOT,IC,III,IV
      DIMENSION NGBK(*),NKF(*),IDRW(20,5)
      COMMON/INDICS/I3M,I2M,I1M,I0,I1P,I2P,I3P
C BEG JUN 2004
C     COMMON/NEUTRL/DNEUTX,DNEUTY,DSURF
C     COMMON/GNNSTB/EIGGEN,EIGLOC,EIGTST,FBOUND,EIGTHM
C     COMMON/BNDLAY/BLL
C     COMMON/GEOM2/BB(2),BB2(2),HH(2),WW(2),WW2(2)
C     COMMON/JHYDRO/IHYDRO
C     COMMON/WEBTH1/CX3(6,6,11),CY3(6,6,11),THRMX3(6,11),THRMY3(6,11)
C     COMMON/THICK/TX(5),TY(5)
C     COMMON/BYLOCP/IFREEY
C END JUN 2004
      DIMENSION TEMP(*),CY3C(6,6)
C
      REAL NXVAR,NYVAR,NXFIX,NYFIX
C     SOME INITIALIZATIONS FOLLOW.
      CALL MOVER(COEF,1,CY3C,1,36)
      IF (IBUCK.EQ.3) GO TO 40
      DO 30 I=1,6
      DO 20 J=1,6
      PRE(I,J) = 0.0
   20 C(I,J) = 0.0
      DO 30 J=1,7
      RNT(I,J) = 0.0
   30 B1(I,J) = 0.0
   40 CONTINUE
      DO 60 I=1,5
      DO 50 J=1,7
      QD(I,J) = 0.0
   50 D(I,J) = 0.0
   60 CONTINUE
      DO 80 I=1,3
      DO 70 J=1,7
   70 ROT(I,J) = 0.0
   80 CONTINUE
      DO 90 I=1,7
      UB(I) = 0.0
      VB(I) = 0.0
      WBD(I) = 0.0
   90 WB(I) = 0.0
      UB(2) = 0.5
      UB(5) = 0.5
      VB(3) = 0.5
      VB(6) = 0.5
      FMULT3 = 0.
      FACSTF = 1.0
      PI = 3.1415927
      FN = (FLOAT(N) + DELTAN)*PI*RADIUS/CIRC
      DS = 0.
      HI = HS(1)*RATIO
      S = SEND - HI
      JWEB = 3
      IF (ISTIF.EQ.5) JWEB = 2
      JWEBP = JWEB + 1
      JWEBM = JWEB - 1
C BEG NOV 1999
      FMLT = 1.0
      IF (MINTRG.EQ.0) FMLT = 0.
C END NOV 1999
C BEG AUG 2001
      IF (IMOD.EQ.0.AND.ILABEL.EQ.9480) THEN
         CALL MOVER(0.,0,NXVAR,1,L5)
         CALL MOVER(0.,0,NXFIX,1,L5)
         CALL MOVER(FNYYPA,0,NYVAR,1,L5)
         CALL MOVER(FNYYPB,0,NYFIX,1,L5)
      ENDIF
C BEG APR 2009
C     IF (JSEG.LT.JWEB.AND.ILABEL.NE.9480) THEN
      IF (JSEG.LT.JWEB.AND.ILABEL.NE.9480.AND.ILABEL.NE.9270) THEN
C END APR 2009
C END AUG 2001
         CALL MOVER(FNX+FNX0,0,NXVAR,1,L5)
         CALL MOVER(FNX0,0,NXFIX,1,L5)
C BEG NOV 1999
         CALL MOVER(FMLT*DELFCR,0,NYVAR,1,L5)
C END NOV 1999
         DO 93 I = 1,L5
            NYVAR(I) = NYVAR(I) + FNYYPA(I) + FNYYPB(I)
            NYFIX(I) = FNYYPB(I)
   93    CONTINUE
      ENDIF
C BEG AUG 2001
C BEG APR 2009
C     IF (JSEG.GT.JWEB.AND.ILABEL.NE.9480) THEN
      IF (JSEG.GT.JWEB.AND.ILABEL.NE.9480.AND.ILABEL.NE.9270) THEN
C END APR 2009
C END AUG 2001
         CALL MOVER(0.,0,NXVAR,1,L5)
         CALL MOVER(0.,0,NXFIX,1,L5)
C BEG NOV 1999
         CALL MOVER(FCEFLG+FCEFGB+FMLT*DELFCR,0,NYVAR,1,L5)
C END NOV 1999
         CALL MOVER(FCEFGB,0,NYFIX,1,L5)
      ENDIF
C BEG AUG 2001
C BEG APR 2009
C     IF (JSEG.EQ.JWEB.AND.ILABEL.NE.9480) THEN
      IF (JSEG.EQ.JWEB.AND.ILABEL.NE.9480.AND.ILABEL.NE.9270) THEN
C END APR 2009
C END AUG 2001
C        CALL MOVER(POPFCA+POPFCB,0,NXVAR,1,L5)
C        CALL MOVER(POPFCB,0,NXFIX,1,L5)
         DWBF = (WBTIPF - WBROTF)/FLOAT(L5-1)
C BEG NOV 1999
         DWBV = FMLT*(DLWBR2 - DLWBR1)/FLOAT(L5-1)
C END NOV 1999
         DO 95 I = 1,L5
            WBF = WBROTF + FLOAT(I-1)*DWBF
C BEG NOV 1999
            WBV = FMLT*DLWBR1 + FLOAT(I-1)*DWBV
C END NOV 1999
            NYVAR(I) = FCXWEB(I) + FCXWBB(I) + WBV
            NYFIX(I) = FCXWBB(I)
            NXVAR(I) = FCYWEB(I) + FCYWBB(I)
            NXFIX(I) = FCYWBB(I)
   95    CONTINUE
      ENDIF
C
C BEG APR 2009
C     IF (IMOD.EQ.0) THEN
      IF (IMOD.EQ.0.AND.ILABEL.NE.9270) THEN
C END APR 2009
         DO 952 I = 1,L5
            PNYVAR(I,ISEG) = NYVAR(I)
            PNYFIX(I,ISEG) = NYFIX(I)
            PNXVAR(I,ISEG) = NXVAR(I)
            PNXFIX(I,ISEG) = NXFIX(I)
  952    CONTINUE
      ENDIF
C
      IF (ILABEL.EQ.9270) THEN
         DO 954 I = 1,L5
            NYVAR(I) = PNYVAR(I,ISEG)
            NYFIX(I) = 0.
            NXVAR(I) = PNXVAR(I,ISEG)
            NXFIX(I) = 0.
  954    CONTINUE
      ENDIF
C
C23456789012345678901234567890123456789012345678901234567890123456789012
      IF (NPRT.GE.2.AND.IBUCK.EQ.1.AND.IPRINT.EQ.0
     1                            .AND.ILABEL.NE.9270) THEN
C BEG AUG 2001
         IF (ISEG.EQ.NSEG.AND.ILABEL.NE.9480) IPRINT = 1
C END AUG 2001
         IF (ISEG.EQ.1) THEN
            WRITE(IFILE,96)
   96    FORMAT(/' Constitutive law, C(i,j), for locally deformed'/
     1 ' panel between rings with smeared stringers.....')
            DO 98 I = 1,6
               WRITE(IFILE,97) (COEF(I,J),J=1,6)
   97          FORMAT(5X,1P,6E12.4)
   98       CONTINUE
         ENDIF
         IF (ISEG.EQ.1) WRITE(8,'(/,A)')
     1 ' **** PREBUCKLING LOADS IN "SKIN"-RING DISCRETIZED MODULE ****'
         WRITE(8,'(A,/,A,3I6)')
     1 ' -------------------------------------------------------------',
     1 ' Circ. waves, Discretized seg., Seg. type, N,ISEG,JSEG=',
     1   N,ISEG,JSEG
         WRITE(8,'(A,I2,/,1P,6E12.4)')
     1 ' Integrated constitutive diagonal, (C(i,i),i=1,6), Seg.',ISEG,
     1   (COEF(I,I),I=1,6)
         IF (JSEG.NE.JWEB) THEN
            WRITE(8,'(A,/,(1P,6E12.4))')
     1    ' Total axial nodal point resultants, (Nx+Nxo)=',
     1      (NXVAR(I),I=1,L5)
         ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
         IF (JSEG.EQ.JWEB) THEN
C BEG AUG 2001
            IF (ILABEL.NE.9480) WRITE(8,
C END AUG 2001
     1    '(A,/,A,1P,E12.4,A,1P,E12.4,/A,/,A,1P,E12.4,A,1P,E12.4)')
     1    ' Eigenvalue hoop resultants in ring web from bending:',
     1    '  resultant at web root, DLWBR1=',DLWBR1,
     1    '; at tip, DLWBR2=',DLWBR2,
     1    ' Fixed hoop resultants in ring web:',
     1    '  resultant at web root, WBROTF=',WBROTF,
     1    '; at tip, WBTIPF=',WBTIPF
            WRITE(8,'(A,/,(1P,6E12.4))')
     1    ' Total meridional nodal point resultants, (Nx+Nxo)=',
     1      (NXVAR(I),I=1,L5)
         ENDIF
         WRITE(8,'(A,/,(1P,6E12.4))')
     1 ' Total circ. nodal point resultants, (Ny+Nyo)=',
     1   (NYVAR(I),I=1,L5)
         IF (JSEG.NE.JWEB) WRITE(8,'(A,/,(1P,6E12.4))')
     1 ' Fixed axial nodal point resultants, Nxo=',
     1   (NXFIX(I),I=1,L5)
         IF (JSEG.EQ.JWEB) WRITE(8,'(A,/,(1P,6E12.4))')
     1 ' Fixed meridional nodal point resultants, Nxo=',
     1   (NXFIX(I),I=1,L5)
         WRITE(8,'(A,/,(1P,6E12.4))')
     1 ' Fixed circ. nodal point resultants, Nyo=',
     1   (NYFIX(I),I=1,L5)
         IF (ISEG.EQ.NSEG) WRITE(8,'(A)')
     1 ' ============================================================='
      ENDIF
C
      DO 630 I=1,L5
C
      IKOUNT = I
      IF (JSEG.EQ.JWEB.AND.ISEG.GT.JWEBP) IKOUNT = L5 - I + 1
C
      H = HS(I)*RATIO
      HPAST = HI
      HI = 2.*H - HPAST
      IT = I5TOT + I + 1
C     GLOBAL EQUATION NO.S FOR FINITE-DIFFERENCE 'ELEMENT' MODULE ARE
C     I3M,I2M,I1M,I0,I1P,I2P,I3P.  THESE LOCATE THE LOCAL ELEMENT
C     MATRICES FOR ASSEMBLY INTO THE GLOBAL MATRICES
      I3M = IW(IT - 1)
      I0 = IW(IT)
      I3P = IW(IT + 1)
      I2M = I0 - 2
      I1M = I0 - 1
      I1P = I0 + 1
      I2P = I0 + 2
C     CERTAIN LOCAL MATRICES ARE 'EXPLODED' BECAUSE OF MINUS SIDES OF
C     CONSTRAINT CONDITIONS.
      I3PI0 = I3P - I0
      ICNSUB = IC + NSUB - KLAP
      IF(I3PI0.EQ.ICNSUB) I1P = I0 + IC + 1
      IF(I3PI0.EQ.ICNSUB) I2P = I0 + IC + 2
      DSAVE = DS
      DS = H
      IF (I.EQ.1.OR.I.EQ.L5) DS = H/2.
C     SHELL GEOMETRY PARAMETERS . .
C       RAD= RADIUS FROM AXIS OF REVOLUTION
C        RD= DERIVATIVE OF PARALLEL CIRCLE RADIUS WITH RESPECT TO S
C       FK1= MERIDIONAL CURVATURE
C       FK2= CIRCUMFERENTIAL CURVATURE
C
      DIF = DABS(DSAVE-DS)/DS
      DO 100 II=1,7
      DO 100 JJ=1,7
  100 U(II,JJ) = 0.0
C
      RD = GEOM(2)
      RAD = GEOM(1) + FLOAT(I-1)*H*RD
      FK1 = 0.
      FK2 = GEOM(4)/RAD
      IF (IWRITE.GT.0) WRITE(8,'(A,3I3,1P4E12.4)')
     1 ' ISEG,JSEG,I,RAD,RD,FK2,H=',ISEG,JSEG,I,RAD,RD,FK2,H
      CURD= 0.
      RDS = RAD*DS
C
      MAXSEG = 2
      NDSEG = NSEG
      IF (ISTIF.EQ.4.AND.BB20(2).GT.WW20(2)) THEN
         MAXSEG = 3
         NDSEG = NSEG - 1
      ENDIF
      IF (IZSTIF.EQ.1) MAXSEG = 1
      IF (ISTIF.EQ.5.AND.NSEG.EQ.4) MAXSEG = 1
      IF ((ISEG.LE.MAXSEG.OR.ISEG.GE.NDSEG).AND.ISTIF.NE.5) THEN
         FACSTF = 1.0
         S = S + H
         IF (I.EQ.L5) SEND = S
      ENDIF
C
C     DIFFERENCE EXPRESSIONS FOR W,W' FOR VARIABLE SPACING
C
      CALL GTWWD2(H,HI,HPAST,WB,WBD)
      CALL GTROT2(ROT,I,L5,WB,WBD)
      CALL GETB12(B1,ROT,L5,WB,WBD,HPAST,HI)
      IF (IBUCK.NE.1) GO TO 130
C     CONSTITUTIVE EQUATION COEFFICIENTS
      IF (JSEG.EQ.JWEB.AND.IMTEMP.EQ.1.AND.
     1          TEMP(JWEBM).NE.TEMP(JWEBP)) THEN
         CALL CHGCIJ(CY3(1,1,IKOUNT),CY3C)
      ENDIF
C BEG APR 2009
      IF (ILABEL.EQ.9270.AND.JSEG.EQ.JWEB) THEN
         CALL CHGCIJ(CY3(1,1,IKOUNT),CY3C)
      ENDIF
C END APR 2009
      DO 10 II = 1,6
      DO 10 JJ = 1,6
   10 C(II,JJ) = CY3C(II,JJ)*RDS
C
C     IF (JSEG.EQ.JWEB) THEN
C           WRITE(8,*)' I,ISEG,DS=',I,ISEG,DS
C           WRITE(8,*)' CY3(1,1,IKOUNT),CY3(2,2,IKOUNT),CY3(4,4,IKOUNT),
C    1                  CY3(5,5,IKOUNT)=',
C    1                  CY3(1,1,IKOUNT),CY3(2,2,IKOUNT),CY3(4,4,IKOUNT),
C    1                  CY3(5,5,IKOUNT)
C           WRITE(8,*)' C(1,1),C(2,2),C(4,4),C(5,5)=',
C    1                  C(1,1),C(2,2),C(4,4),C(5,5)
C     ENDIF
C
C  Fixed prestress..
C
         CALL GTRNT2(RNT,ROT,B1)
         VN1 = RDS*NXFIX(I)
         VN2 = RDS*NYFIX(I)
C
C        WRITE(8,*)' I,VN1,VN2=',I,VN1,VN2
C
         PRE(1,1) = VN1
         PRE(2,2) = VN2
         PRE(3,3) = VN1
         PRE(4,4) = VN2
         PRE(5,5) = VN1
         PRE(6,6) = VN2
C BEG NOV 1999
         IF (MINTRG.EQ.0) THEN
            PRE(1,1) = 0.
            PRE(3,3) = 0.
            PRE(5,5) = 0.
         ENDIF
C END NOV 1999
         CALL MATMU4(PRE,RNT,U,6,7,1)
C
C     SHELL WALL STRAIN ENERGY INDEPENDENT OF 'VARIABLE' LOADS
C
  120 CONTINUE
      CALL MATMU4(C,B1,U,6,7,1)
C
C     ADD ELASTIC FOUNDATION CONTRIBUTION...
C BEG SEP 2004
C     IF (ISANDW(JSEG,1).EQ.1.OR.ISANDW(JSEG,1).EQ.NLAYER(JSEG,1))
C    1   CALL FOUNDA(WFOUND(JSEG,1),WB,RDS,U)
      IF (ISANDW(JSEG,2).EQ.1.OR.ISANDW(JSEG,2).EQ.NLAYER(JSEG,2))
     1   CALL FOUNDA(WFOUND(JSEG,2),WB,RDS,U)
C END SEP 2004
C
      GO TO 160
  130 IF (IBUCK.NE.2) GO TO 140
      IF (IWRITE.EQ.1)
     1    WRITE(8,'(A,1P4E12.4)')' NXFIX,NYFIX,NXVAR,NYVAR=',
     1                    NXFIX(I),NYFIX(I),NXVAR(I),NYVAR(I)
      CALL GTRNT2(RNT,ROT,B1)
            DNY = NYVAR(I) - NYFIX(I)
            DNX = NXVAR(I) - NXFIX(I)
            VN1 = RDS*DNX
            VN2 = RDS*DNY
C
C        IF (JSEG.EQ.JWEB) THEN
C           WRITE(8,*)' ISEG,I,DS=',ISEG,I,DS
C           WRITE(8,*)' NXVAR(I),NXFIX(I)=',NXVAR(I),NXFIX(I)
C           WRITE(8,*)' NYVAR(I),NYFIX(I)=',NYVAR(I),NYFIX(I)
C        ENDIF
C
C     'VARIABLE' PRESSURE-ROTATION EFFECT
C BEG AUG 2001
      IF (IMOD.EQ.0.AND.ILABEL.EQ.9480.AND.JSEG.LT.JWEB)
C    1   CALL GETPB5(1.0,-ABS(PACTUL),0.,0.,UB,VB,WB,B1,ROT,U)
     1   CALL GETPB5(1.0,-ABS(PRESS),0.,0.,UB,VB,WB,B1,ROT,U)
C END AUG 2001
C BEG AUG 1999
      PRE(1,1) = VN1
      PRE(2,2) = VN2
      PRE(3,3) = VN1
      PRE(4,4) = VN2
      PRE(5,5) = VN1
      PRE(6,6) = VN2
C BEG NOV 1999
      IF (MINTRG.EQ.0) THEN
         PRE(1,1) = 0.
         PRE(3,3) = 0.
         PRE(5,5) = 0.
      ENDIF
C END NOV 1999
C
C     WORK DONE BY 'VARIABLE' PRESTRESS DURING BUCKLING
      CALL MATMU4(PRE,RNT,U,6,7,1)
      IF (NPRT.GE.3.AND.ISEG.EQ.1.AND.I.EQ.1) THEN
         WRITE(IFILE,1112) I,ISEG,I3M,I2M,I1M,I0,I1P,
     1                     I2P,I3P,ILOC(I3M),ILOC(I2M),ILOC(I1M),
     1                     ILOC(I0),ILOC(I1P),ILOC(I2P),ILOC(I3P),
     1                     RAD,DS,RD,FK1,FK2,RAD*FK2,RDS,
     1                     H,HI,HPAST,
     1                     NXVAR(I),NYVAR(I),NXFIX(I),NYFIX(I)
 1112    FORMAT(/' IBUCK=2 CHECK AT FIRST SEGMENT, FIRST NODE:'/
     1           '  I,ISEG                     =',2I5/
     1           '  I3M,I2M,I1M,I0,I1P,I2P,I3P =',7I5/
     1           '  ILOC(I3M),ILOC(I2M),..etc. =',7I5/
     1           '  RAD,DS,RD,FK1,FK2,RAD*FK2,CURD,RDS='/
     1              1P,7E12.4/
     1           '  H,HI,HPAST                       =',1P,3E12.4/
     1           '  NXVAR(I),NYVAR(I),NXFIX(I),NYFIX(I)=',1P,4E12.4)
         WRITE(IFILE,1113) (WB(II),II=1,7),(WBD(II),II=1,7)
 1113    FORMAT(/'  (WB(II),II=1,7) =',1P,7E12.4/
     1           '  (WBD(II),II=1,7)=',1P,7E12.4)
         WRITE(IFILE,1114) ((ROT(II,JJ),JJ=1,7),II=1,3)
 1114    FORMAT(/'  ((ROT(II,JJ),JJ=1,7),II=1,3)='/(1P,7E12.4))
         WRITE(IFILE,1115) ((RNT(II,JJ),JJ=1,7),II=1,6)
 1115    FORMAT(/'  ((RNT(II,JJ),JJ=1,7),II=1,6)='/(1P,7E12.4))
         WRITE(IFILE,1116) ((B1(II,JJ),JJ=1,7),II=1,6)
 1116    FORMAT(/'  (( B1(II,JJ),JJ=1,7),II=1,6)='/(1P,7E12.4))
         WRITE(IFILE,1117) ((PRE(II,JJ),JJ=1,6),II=1,6)
 1117    FORMAT(/'  ((PRE(II,JJ),JJ=1,6),II=1,6)='/(1P,6E12.4))
         WRITE(IFILE,1118) ((U(II,JJ),JJ=1,7),II=1,7)
 1118    FORMAT(/'  ((  U(II,JJ),JJ=1,7),II=1,7)='/(1P,7E12.4))
      ENDIF
      GO TO 160
  140 CONTINUE
  150 IF (IBUCK.NE.3) GO TO 160
C     LOCAL MASS MATRIX GENERATED
      SMS = CMASS
      U(2,2) = -0.25*SMS*RDS
      U(3,3) = U(2,2)
      U(1,1) =-WB(1)*WB(1)*RDS*SMS
      U(4,1) =-WB(4)*WB(1)*RDS*SMS
      U(7,1) =-WB(7)*WB(1)*RDS*SMS
      U(7,4) =-WB(7)*WB(4)*RDS*SMS
      U(4,4) =-WB(4)*WB(4)*RDS*SMS
      U(7,7) =-WB(7)*WB(7)*RDS*SMS
      U(5,2) = U(2,2)
      U(5,5) = U(2,2)
      U(6,3) = U(2,2)
      U(6,6) = U(2,2)
  160 CONTINUE
C
  180 CONTINUE
C
C     CONSTRAINT CONDITIONS
C
C     IFX(ICOND1,1) CONTAINS LOCATIONS OF 'MINUS' SIDE OF JUNCTURE
C     IN MONOTONICALLY INCREASING ORDER.
C
C
      IF (ICOND1.GT.NCOND) GO TO 330
      IFX1 = IFX(ICOND1,1)
      IF (I.EQ.(IFX1-ISEG*1000)) GO TO 190
      GO TO 330
C     FILL THE 'MINUS' PART OF THE CONSTRAINT CONDITION
C
C     IR,IR1,IR2,IR3 CONTAIN GLOBAL MATRIX ROW NOS. CORRESPONDING TO THE
C     LAGRANGE MULTIPLIERS ASSOCIATED WITH CONSTRAINT CONDITIONS
C     IDENTIFIED BY IFX(ICOND1,1)
  190 CONTINUE
      IR = IFX(ICOND1,2)
      IR1 = IR + 1
      IR2 = IR + 2
      IR3 = IR + 3
      IR4 = IR + 4
      IF (IBUCK.EQ.1) GO TO 200
      ICOND1 = ICOND1 + 1
      GO TO 180
  200 KKK = ICOND1
      DS1 = D1(KKK)
      DS2 = D2(KKK)
C BEG JAN 2002
      FACT = 1.
      IF (INTRNG.EQ.1) FACT = -1.
      IF (IZSTIF.EQ.1.AND.DS1.GT.0.0) DS1 = 0.5*(TX(1)+TY(2))*FACT
      IF (IZSTIF.EQ.0.AND.DS1.GT.0.0) DS1 = 0.5*TY(2)*FACT
C     WRITE(IFILE,'(A,I4,1P,2E12.4)')
C    1' IN SUB. STABL2: KKK, DS1, DS2 =', KKK,DS1,DS2
C     WRITE(IFILE,'(A,/,1P,5E12.4)')
C    1' D1(KKK),D2(KKK),TX(1),TY(2),FACT=',
C    1  D1(KKK),D2(KKK),TX(1),TY(2),FACT
C END JAN 2002
      ITEST = L5/2+1
      IF (IZSTIF.EQ.1) ITEST = L5
C
C     FIFX1, 2, 3, AND 4 CONTAIN INTEGERS WHICH MAY OR MAY NOT RELEASE
C     THE CONSTRAINT CONDITIONS.
  220 CONTINUE
      FIFX1 = FLOAT(IFX(ICOND1,3))*CMAX
      FIFX2 = FLOAT(IFX(ICOND1,4))*CMAX
      FIFX3 = FLOAT(IFX(ICOND1,5))*CMAX
      FIFX4 = FLOAT(IFX(ICOND1,6))*CMAX
      FIFX5 = 0.
C BEG NOV 1999
C23456789012345678901234567890123456789012345678901234567890123456789012
      IF (MINTRG.EQ.0.AND.I.EQ.ITEST.AND.ICOND1.EQ.ICOND2.AND.
     1  IFIX(ICOND2,1).EQ.IFIX(ICOND2,2)) THEN
         IF ((IZSTIF.EQ.0.AND.ISEG.EQ.2).OR.
     1       (IZSTIF.EQ.1.AND.ISEG.EQ.1)) THEN
C           WRITE(8,'(A,/,7I7)')
C    1    ' ISEG,I,IFX1,ICOND1,ICOND2,IFIX(ICOND2,1),IFIX(ICOND2,2)=',
C    1      ISEG,I,IFX1,ICOND1,ICOND2,IFIX(ICOND2,1),IFIX(ICOND2,2)
            FIFX1 = 0
            FIFX2 = 0
            FIFX3 = 0
            FIFX4 = CMAX
         ENDIF
      ENDIF
C END NOV 1999
      IF (MINTRG.EQ.2) THEN
         IF (I.EQ.1.AND.ISEG.EQ.1) THEN
            FIFX1 = 0.
            FIFX2 = CMAX
            FIFX3 = CMAX
            FIFX4 = 0.
         ENDIF
         IF (I.EQ.L5.AND.ISEG.EQ.NSEG) THEN
            FIFX1 = 0.
            FIFX2 = CMAX
            FIFX3 = CMAX
            FIFX4 = 0.
         ENDIF
      ENDIF
      IF (ISTIF.EQ.5) THEN
         GO TO 230
      ENDIF
      IF (ISTIF.EQ.4.AND.BB2(2).EQ.WW2(2)) GO TO 225
      IF (ISTIF.EQ.4) GO TO 225
      IF (ITOR.EQ.0) THEN
        IF (IZSTIF.EQ.1.AND.ISEG.EQ.3.AND.I.EQ.1) FIFX3 = 0.0
      ELSE
        IF (IZSTIF.EQ.1.AND.ISEG.EQ.3.AND.I.EQ.1) FIFX3 = 0.0
C BEG DEC 2001 (COMMENTED OUT)
C       IF (ISTIF.NE.5.AND.ISTIF.NE.0) THEN
C          IF (ISEG.EQ.1.AND.I.EQ.1) FIFX1 = 0.0
C          IF (ISEG.EQ.NSEG.AND.I.EQ.L5) FIFX1 = 0.0
C       ENDIF
C END DEC 2001
      ENDIF
  225 CONTINUE
C
      L521 = L5/2+1
      W52  = 3.*WW2(2)
      IF (ISTIF.NE.4) THEN
         IF (ISEG.EQ.1.AND.I.EQ.L521) THEN
            FIFX3 = 0.
            IF (IZSTIF.EQ.1) FIFX3 = 0.
         ENDIF
      ENDIF
      IF (ISTIF.EQ.4) THEN
         IF (ISEG.EQ.1.AND.I.EQ.L521) THEN
            FIFX3 = CMAX
         ENDIF
      ENDIF
C
      IF ((ISEG.EQ.1.AND.I.EQ.1).OR.(ISEG.EQ.NSEG.AND.I.EQ.L5)) THEN
         IF (IFREE.EQ.1) FIFX1 = 0.
      ENDIF
C
C
C  FOLLOWING NINE STATEMENTS APPLY ONLY TO PANEL MODULE.  AN EXTRA
C  CONSTRAINT IS BEING APPLIED AT THE SYMMETRY PLANE TO FORCE GENERAL
C  INSTABILITY...
C
      ISCP = 3
      IF (BB2(2).EQ.WW2(2)) ISCP = 2
      IF (ISTIF.EQ.4.AND.ISEG.EQ.ISCP.AND.I.EQ.1) THEN
         FIFX3 = CMAX
      ENDIF
      IF (ISTIF.EQ.4.AND.ISEG.EQ.ISCP.AND.I.EQ.L5) THEN
         FIFX3 = CMAX
      ENDIF
      ITEST = L5/2+1
      ISEGT = 2
      IF (IZSTIF.EQ.1) THEN
         ITEST = L5
         ISEGT = 1
      ENDIF
C
C     WRITE(8,*)' ISTIF,ISEG,I,CMAX=', ISTIF,ISEG,I,CMAX
C     WRITE(8,*)' I,ISEG,ICOND1,NCOND,IFX1=',I,ISEG,ICOND1,NCOND,IFX1
C
  230 CONTINUE
  240 CONTINUE
C     KROOTS = NO. OF NEGATIVE EIGENVALUES DUE TO LAGRANGE MULTIPLIERS
C              WE KEEP TRACK OF THIS TO AVOID MISSING ROOTS IN
C              EBAND,EBAND2, AND EIGEN, THE THREE EQUATION-SOLVING
C              ROUTINES.
      IF (FIFX1.NE.0.) KROOTS = KROOTS+1
      IF (FIFX2.NE.0.) KROOTS = KROOTS+1
      IF (FIFX3.NE.0.) KROOTS = KROOTS+1
      IF (FIFX4.NE.0.) KROOTS = KROOTS+1
      IF (FIFX5.NE.0.) KROOTS = KROOTS+1
  250 CONTINUE
C
C     BEGINNING OF LOOP FOR CONTRIBUTION TO ENERGY OF 'MINUS' PART
C     OF CONSTRAINT AND BOUNDARY CONTITIONS.
C
      BC1 = RAD*FK2
      BC2 = RD
  255 CONTINUE
C     WRITE(8,*)' I,ISEG,BC1,BC2=',I,ISEG,BC1,BC2
      DO 260 II=1,NSUB
      USTAR = BC1*UB(II) - BC2*WB(II)
      VSTAR = VB(II)
      WSTAR = BC2*UB(II) + BC1*WB(II)
      FMOMM = 0.
      IF (FIFX5.NE.0.)
     1 FMOMM = (C(1,4)*B1(1,II) +C(2,4)*B1(2,II)
     1         +C(4,4)*B1(4,II) +C(4,5)*B1(5,II))/DS
      FMTOTM= FMOMM
C     QD( ) = LOCAL MATRIX CONTAINING 'MINUS' PART OF CONSTRAINTS
C
      QD(1,II) = FIFX1*(-USTAR + DS1*ROT(1,II))
      QD(2,II) = FIFX2*(-VSTAR +
     1(DS1*(FN*WSTAR-VSTAR) +DS2*FN*USTAR)/RAD)
      QD(3,II) = FIFX3*(-WSTAR - DS2*ROT(1,II))
      QD(4,II) = -FIFX4*ROT(1,II)
      QD(5,II) = -FIFX5*FMTOTM
C
  260 CONTINUE
      IF (NPRT.GE.4.OR.IWRITE.EQ.1) THEN
         WRITE(IFILE,'(A)')
     1      ' MINUS SIDE OF CONSTRAINT CONDITION FOLLOW...'
         WRITE(IFILE,'(A,/,4I4,1P,5E12.4)')
     1      ' ISEG,I,KKK,IZSTIF,FIFX1,FIFX2,FIFX3,FIFX4,FIFX5=',
     1        ISEG,I,KKK,IZSTIF,FIFX1,FIFX2,FIFX3,FIFX4,FIFX5
         WRITE(IFILE,'(A,5I5)')
     1      ' IR,IR1,IR2,IR3,IR4=',IR,IR1,IR2,IR3,IR4
         WRITE(IFILE,'(A,/,1P,5E12.4)')
     1      ' DS1,DS2,RAD,RAD*FK2,RD=',
     1        DS1,DS2,RAD,RAD*FK2,RD
         WRITE(IFILE,'(A)')
     1      ' QD(I,J) MINUS CONSTRAINT CONDITION MATRIX..'
         DO 270 JJ = 1,5
          WRITE(IFILE,265) (QD(JJ,II),II=1,NSUB)
  265     FORMAT(1P,7E12.4)
  270    CONTINUE
      ENDIF
C
C     END OF LOOP FOR 'MINUS' PART OF CONSTRAINT CONDITIONS.
C
      ICOND1 = ICOND1 + 1
C     FILL AS ARRAY WITH MINUS PART OF CONSTRAINT CONDITIONS.
C
      IF ((ILOC(IR)-ILOC(IR-1)).GT.(NSUB+1)) GO TO 300
C     THIS BRANCH CORRESPONDS TO CONSTRAINT CONDITIONS OF TYPE 1,2,AND5
      ILOC1 = ILOC(IR)
      ILOC2 = ILOC(IR1)
      ILOC3 = ILOC(IR2)
      ILOC4 = ILOC(IR3)
      ILOC5 = ILOC(IR4)
      DO 290 II=1,NSUB
      IB = ILOC1    - NSUB - 1 + II
      AS(IB) = QD(1,II)
      IB = ILOC2     - NSUB - 2 + II
      AS(IB)= QD(2,II)
      IB = ILOC3     - NSUB - 3 + II
      AS(IB)= QD(3,II)
      IB = ILOC4     - NSUB - 4 + II
      AS(IB)= QD(4,II)
      IB = ILOC5     - NSUB - 5 + II
  290 AS(IB)= QD(5,II)
      GO TO 180
  300 IF (NGBK(III).LT.IR) GO TO 310
C     THIS BRANCH CORRESPONDS TO CONSTRAINT CONDITIONS OF TYPE
C     3 AND 4 AS LONG AS CURRENT QD(I,J) IS STORED IN CURRENT BLOCK.
C
      CALL FILLB(IC,NSUB,I3M,I2M,I1M,I0,I1P,I2P,I3P,IR,ILOC,QD,AS)
      GO TO 180
C     THIS BRANCH CORRESPONDS TO CONSTRAINT CONDITIONS OF TYPE 3 AND 4
C     EXCEPT THAT QD(I,J) HAS TO BE SAVED BECAUSE IT CONTRIBUTES
C     ELEMENTS TO A FUTURE BLOCK.
C
  310 IV = IV + 1
      IRSAVE(IV) = IR
      ISAVE(IV,1) = I3M
      ISAVE(IV,2) = I2M
      ISAVE(IV,3) = I1M
      ISAVE(IV,4) = I0
      ISAVE(IV,5) = I1P
      ISAVE(IV,6) = I2P
      ISAVE(IV,7) = I3P
      DO 320 II=1,IC
      DO 320 J=1,NSUB
  320 QSAVE(IV,II,J) = QD(II,J)
      GO TO 180
C
C     FILL THE 'PLUS' PART OF THE CONSTRAINT CONDITION
C     IFIX(ICOND2,2) CONTAINS LOCATIONS OF 'PLUS' SIDE OF JUNCTURE
C     IN MONOTONICALLY INCREASING ORDER.
  330 CONTINUE
      IF (ICOND2.GT.NCOND) GO TO 440
      IFIX2 = IFIX(ICOND2,2)
      IF (I.EQ.(IFIX2-ISEG*1000)) GO TO 340
      GO TO 440
C     NO 'PLUS' SIDE IF CONDITION REPRESENTS BOUNDARY.
  340 CONTINUE
      IF (IFIX(ICOND2,2).EQ.IFIX(ICOND2,1)) GO TO 420
      KKK = ICOND2
C     IR,IR1,IR2,IR3 HAVE SAVE MEANING AS ABOVE
      IR = IROWC(ICOND2)
      IR1 = IR + 1
      IR2 = IR + 2
      IR3 = IR + 3
      IR4 = IR + 4
      IF (IBUCK.NE.1) GO TO 420
      FIFX1 = FLOAT(IFIX(ICOND2,3))*CMAX
      FIFX2 = FLOAT(IFIX(ICOND2,4))*CMAX
      FIFX3 = FLOAT(IFIX(ICOND2,5))*CMAX
      FIFX4 = FLOAT(IFIX(ICOND2,6))*CMAX
      FIFX5 = 0.
      IF (ISTIF.EQ.5) THEN
         GO TO 348
      ENDIF
      IF (ISTIF.EQ.4.AND.BB2(2).EQ.WW2(2)) GO TO 345
C     IF (IZSTIF.EQ.0.AND.ISEG.EQ.2.AND.I.EQ.1) FIFX5 = 1.
C     IF (IZSTIF.EQ.0.AND.ISEG.EQ.NSEG.AND.I.EQ.1) FIFX5 = 1.
  345 CONTINUE
C
      L521 = L5/2+1
      W52  = 3.*WW2(2)
      IF (ISTIF.NE.4) THEN
         IF (ISEG.EQ.NSEG.AND.I.EQ.L521) THEN
            FIFX3 = 0.
            IF (IZSTIF.EQ.1) FIFX3 = 0.
         ENDIF
      ENDIF
      IF (ISTIF.EQ.4) THEN
         IF (ISEG.EQ.NSEG.AND.I.EQ.L521) THEN
            FIFX3 = CMAX
         ENDIF
      ENDIF
C
C     LOOP FOR CONTRIBUTION OF 'PLUS' SIDE TO LOCAL MATRIX
C
  348 CONTINUE
      DO 350 II=1,NSUB
      USTAR = RAD*FK2*UB(II) - RD*WB(II)
      VSTAR = VB(II)
      WSTAR = RD*UB(II) + RAD*FK2*WB(II)
      IF (FIFX5.NE.0.)
     1 FMOMP = (C(1,4)*B1(1,II) +C(2,4)*B1(2,II)
     1         +C(4,4)*B1(4,II) +C(4,5)*B1(5,II))/DS
C     D( ) = LOCAL MATRIX CONTAINING 'PLUS' SIDE OF CONSTRAINT CONDS.
      D(1,II) = USTAR*FIFX1
      D(2,II) = VSTAR*FIFX2
      D(3,II) = WSTAR*FIFX3
      D(4,II) = FIFX4*ROT(1,II)
      D(5,II) = FIFX5*FMOMP
C
  350 CONTINUE
      IF (NPRT.GE.4.OR.IWRITE.EQ.1) THEN
         WRITE(IFILE,'(A)')
     1      ' PLUS SIDE OF CONSTRAINT CONDITION FOLLOW...'
         WRITE(IFILE,'(A,/,4I4,1P,5E12.4)')
     1      ' ISEG,I,KKK,IZSTIF,FIFX1,FIFX2,FIFX3,FIFX4,FIFX5=',
     1        ISEG,I,KKK,IZSTIF,FIFX1,FIFX2,FIFX3,FIFX4,FIFX5
         WRITE(IFILE,'(A,5I5)')
     1      ' IR,IR1,IR2,IR3,IR4=',IR,IR1,IR2,IR3,IR4
         WRITE(IFILE,'(A,/,1P,5E12.4)')
     1      ' RAD*FK2,RD=',
     1        RAD*FK2,RD
         WRITE(IFILE,'(A)')
     1      ' D(I,J) PLUS CONSTRAINT CONDITION MATRIX..'
         DO 355 JJ = 1,5
           WRITE(IFILE,354) (D(JJ,II),II=1,NSUB)
  354      FORMAT(1P,7E12.4)
  355    CONTINUE
      ENDIF
C
C     FILL AS( ) WITH LOCAL MATRIX CONTAINING 'PLUS' SIDE OF CONSTRAINTS
C     ITYPE( ) = TYPE OF CONSTRAINT CONDITION. 5 MEANS SEGS. IN SERIES.
C
      IF (ITYPE(ICOND2).EQ.5) GO TO 400
C     THIS BRANCH FOR PLUS SIDES OF ALL TYPES OF CONSTRAINT CONDITIONS
C     EXCEPT ITYPE(ICOND2) = 5.
C
      ILOC1 = ILOC(IR)
      ILOC2 = ILOC(IR1)
      ILOC3 = ILOC(IR2)
      ILOC4 = ILOC(IR3)
      ILOC5 = ILOC(IR4)
C     IF (ILABEL.EQ.9270.AND.N.EQ.33.AND.ISEG.EQ.3
C    1                  .AND.IBUCK.EQ.1) CALL ERREX
      DO 360 II=1,NSUB
      IB = ILOC1    - NSUB - 1 + II
      AS(IB) = D(1,II)
      IB = ILOC2     - NSUB - 2 + II
      AS(IB) = D(2,II)
      IB = ILOC3     - NSUB - 3 + II
      AS(IB) = D(3,II)
      IB = ILOC4     - NSUB - 4 + II
      AS(IB) = D(4,II)
      IB = ILOC5     - NSUB - 5 + II
  360 AS(IB) = D(5,II)
      IF (IV.EQ.0) GO TO 420
      DO 370 IIV=1,IV
      IF (IR.EQ.IRSAVE(IIV)) GO TO 380
  370 CONTINUE
      GO TO 420
C     THIS BRANCH FOR INSERTION INTO GLOBAL STIFFNESS MATRIX OF
C     'MINUS' SIDE OF CONSTRAINT CONDITIONS REQUIRING VARIABLES FROM
C     PREVIOUS BLOCKS.
C
  380 DO 390 II=1,IC
      DO 390 J=1,NSUB
  390 QD(II,J) = QSAVE(IIV,II,J)
      I3MS = ISAVE(IIV,1)
      I2MS = ISAVE(IIV,2)
      I1MS = ISAVE(IIV,3)
      I0S  = ISAVE(IIV,4)
      I1PS = ISAVE(IIV,5)
      I2PS = ISAVE(IIV,6)
      I3PS = ISAVE(IIV,7)
      CALL FILLB(IC,NSUB,I3MS,I2MS,I1MS,I0S,I1PS,I2PS,I3PS,IR,ILOC,
     1 QD,AS)
      GO TO 420
  400 CONTINUE
C
C     THIS BRANCH FOR PLUS SIDE OF CONSTRAINT CONDITION TYPE 5
C
      DO 410 II=1,NSUB
      I1 = IR4 + II
      DO 410 J=1,IC
      ILOC1 = ILOC(I1)
      IB = ILOC1    - IC + J - II
  410 AS(IB) = D(J,II)
  420 ICOND2 = ICOND2 + 1
      DO 430 II=1,NSUB
      DO 430 J=1,IC
  430 D(J,II) = 0.0
      GO TO 330
  440 CONTINUE
C
C     FILL AS( ) WITH LOCAL MATRIX CORRESPONDING TO MESH POINT I
C
      DO 620 II=1,NSUB
      GO TO (450,460,470,480,490,500,510),II
  450 J = I3M
      GO TO 520
  460 J = I2M
      GO TO 520
  470 J = I1M
      GO TO 520
  480 J = I0
      GO TO 520
  490 J = I1P
      GO TO 520
  500 J = I2P
      GO TO 520
  510 J = I3P
  520 CONTINUE
C
      DO 610 K=1,II
      GO TO (530,540,550,560,570,580,590),K
  530 INDX = I3M
      GO TO 600
  540 INDX = I2M
      GO TO 600
  550 INDX = I1M
      GO TO 600
  560 INDX = I0
      GO TO 600
  570 INDX = I1P
      GO TO 600
  580 INDX = I2P
      GO TO 600
  590 INDX = I3P
  600 CONTINUE
      ILOC1 = ILOC(J)
      IB = ILOC1   - J + INDX
      AS(IB) = AS(IB) + U(II,K)
  610 CONTINUE
  620 CONTINUE
  630 CONTINUE
C
C     END OF LOOP OVER MESH POINTS IN CURRENT SEGMENT
C
      I5TOT = I5TOT + L5  + 2
      IF (I3P.EQ.NGBK(III)) GO TO 640
      IR3 = I3P + IC
      IF (IR3.EQ.NGBK(III)) GO TO 640
      GO TO 720
  640 NN =2*ILOC(I3P)
      IF (IR3.EQ.NGBK(III)) NN =2*ILOC(IR3)
C     STORE BLOCK NUMBER III ON DISK OR DRUM.
      IF (IBLK.GT.1) CALL GASP(AS,NN,1,IDRW(III,IBUCK))
      IF (NPRT.LT.4.AND.IWRITE.EQ.0) GO TO 690
      ZERO = 0.0
      WRITE (IFILE,650)III,IBUCK
      IF (III.EQ.1) NROWS  = 0
  650 FORMAT(//' PREFACTORED BLOCK NO.',I3,' FOLLOWS. IBUCK=',I3//)
      NROWS1 = NROWS + 1
      NROWS = NGBK(III)
      DO 680 I=NROWS1,NROWS
      IF (I.NE.NROWS1) J1 = ILOC(I-1) + 1
      IF (I.EQ.NROWS1) J1 = 1
      J2 = ILOC(I)
      J3 = 11- J2 + J1
      IF (J3.GT.0) WRITE (IFILE,660)I,(ZERO,J=1,J3),(AS(J),J=J1,J2)
      IF (J3.LE.0) WRITE (IFILE,670)I,(AS(J),J=J1,J2)
  660 FORMAT(1X,I3,(6E12.4))
  670 FORMAT(1X,I3,(6E12.4))
  680 CONTINUE
  690 CONTINUE
      IF (IBLK.GT.1) CALL MOVER(0.,0,AS,1,2*IMAX)
  710 III = III + 1
  720 CONTINUE
      RETURN
      END
C
C
C
C=DECK      GTWWD2
      SUBROUTINE GTWWD2(DS,K,H,WB,WBD)
C     CALLED FROM STABL2
C     FINITE-DIFFERENCE EXPRESSIONS FOR VARIABLE MESH SPACING WITH
C     U,V HALF-WAY BETWEEN W.
C
      DOUBLE PRECISION DS,K,H,WB,WBD,HMK,KPDS,HPDS
      DIMENSION WB(7),WBD(7)
      HMK = H - K
      KPDS = K + DS
      HPDS = H + DS
      WB(1) = HMK*KPDS/(16.*H*DS)
      WB(4) = KPDS*HPDS/(4.*H*K)
      WB(7) = -HMK*HPDS/(16.*K*DS)
      WBD(1) = -0.5/H
      WBD(7) = 0.5/K
      WBD(4) = -WBD(1) - WBD(7)
      RETURN
      END
C
C
C
C=DECK      GTRNT2
      SUBROUTINE GTRNT2(RNT,ROT,B1)
C
C     GET MATRIX FOR TRANSFORMATION FROM DISP. GRADIENTS TO NODAL UNKN.
C     THIS MATRIX IS USED IN THE DERIVATION OF WORK DONE BY MEMBRANE
C     STRESS RESULTANTS DURING BUCLING OR VIBRATION
C
      DOUBLE PRECISION RNT,ROT,B1,R,RD,FK1,FK2,CURD,RDS,FN,H
      COMMON/GGG/R,RD,FK1,FK2,CURD,RDS,FN,H
      DIMENSION RNT(6,7),ROT(3,7),B1(6,7)
C
      DO 10 I = 1,7
      RNT(1,I) = ROT(1,I)
      RNT(2,I) = ROT(2,I)
      RNT(3,I) = B1(1,I)
      RNT(4,I) = B1(2,I)
   10 CONTINUE
      RNT(5,3) = -1./H
      RNT(5,6) = 1./H
      RNT(6,2) = .5*FN/R
      RNT(6,3) = -.5*RD/R
      RNT(6,5) = RNT(6,2)
      RNT(6,6) = RNT(6,3)
      RETURN
      END
C
C
C
C=DECK      GTROT2
      SUBROUTINE GTROT2(ROT,I,L5,WB,WBD)
C
C     CALLED FROM STABL2. MATRIX ROT(I,J) IS SET UP WHICH RELATES
C     ROTATION VECTOR WITH SHELL REFERENCE SURFACE DISPLACEMENT COMPONEN
C
      DOUBLE PRECISION R,RD,FK1,FK2,CURD,RDS,FN,H
      DOUBLE PRECISION ROT,WB,WBD
      COMMON/GGG/ R,RD,FK1,FK2,CURD,RDS,FN,H
      DIMENSION ROT(3,7),WB(7),WBD(7)
      ROT(1,1) = WBD(1)
      ROT(1,2) = -0.5*FK1
      ROT(1,4) = WBD(4)
      ROT(1,5) = ROT(1,2)
      ROT(1,7) = WBD(7)
      ROT(2,1) = WB(1)*FN/R
      ROT(2,2) = 0.0
      ROT(2,3) = -0.5*FK2
      ROT(2,4) = WB(4)*FN/R
      ROT(2,5) = 0.0
      ROT(2,6) = ROT(2,3)
      ROT(2,7) = WB(7)*FN/R
      ROT(3,2) = 0.25*FN/R
      ROT(3,3) = 0.5/H - 0.25*RD/R
      ROT(3,5) = ROT(3,2)
      ROT(3,6) = -0.5/H - 0.25*RD/R
      RETURN
      END
C
C
C
C=DECK      GETB12
      SUBROUTINE GETB12(B1,ROT,L5,WB,WBD,HPAST,HI)
C
C     CALLED FROM STABL2, WHOSE TRACE IS STABL2,ARRAYS,BUCKLE
C     STRAIN-DISPLACEMENT AND CURVATURE DISPLACEMENT RELATIONS IN
C     FINITE-DIFFERENCE FORM. CORRESPONDS TO ITH MESH POINT IN SEGMENT
C     NUMBER ISEG.
C
      DOUBLE PRECISION R,RD,FK1,FK2,CURD,RDS,FN,H
      DOUBLE PRECISION C,B1,ROT,WB,WBD,HPAST,HI
      COMMON/GGG/ R,RD,FK1,FK2,CURD,RDS,FN,H
      DIMENSION B1(6,7),ROT(3,7),WB(7),WBD(7)
C
C     CENTRAL DIFFERENCES USED INSIDE DOMAIN. U AND V LOCATED AT
C     HALF-STATIONS.
      B1(1,1) = FK1*WB(1)
      B1(1,2) = -1./H
      B1(1,4) = FK1*WB(4)
      B1(1,5) = 1./H
      B1(1,7) = FK1*WB(7)
      B1(2,1) = FK2*WB(1)
      B1(2,2) = 0.5*RD/R
      B1(2,3) = - 0.5*FN/R
      B1(2,4) = FK2*WB(4)
      B1(2,5) = B1(2,2)
      B1(2,6) = B1(2,3)
      B1(2,7) = FK2*WB(7)
      B1(3,1) = ROT(2,1)
      B1(3,2) = - B1(2,6)
      B1(3,3) = -1./H -.5*RD/R
      B1(3,4) = 0.
      B1(3,5) = B1(3,2)
      B1(3,6) = 1./H - .5*RD/R
      B1(3,7) = 0.
      FMUL = 0.0
      B1(4,1) = 1./(HPAST*H)  -FMUL*B1(1,1)*FK1
      B1(4,2) = FK1/H         -FMUL*B1(1,2)*FK1
      B1(4,4) =-2./(HI*HPAST) -FMUL*B1(1,4)*FK1
      B1(4,5) = -FK1/H        -FMUL*B1(1,5)*FK1
      B1(4,7) = 1./(H*HI)     -FMUL*B1(1,7)*FK1
C
      DO 10 I=1,7
      B1(5,I) = (-ROT(2,I)*FN +ROT(1,I)*RD)/R -FMUL*B1(2,I)*FK2
10    B1(6,I) = 2.*(-ROT(1,I)*FN + ROT(2,I)*RD)/R
      B1(6,3) = B1(6,3) - 2.*FK2/H
      B1(6,6) = B1(6,6) + 2.*FK2/H
      RETURN
      END
C
C
C
C=DECK      IDSEG2
C BEG JUN 2004
      SUBROUTINE IDSEG2(ISTIF,ISEG,NSEGB5,B2,W2,J,IFAY)
C END JUN 2004
C
C  PURPOSE IS TO GET INDEX J FOR WALL PROPERTIES OF BOSOR5 SEGMENT NO.
C  ISEG.
C
C BEG JUN 2004
      DIMENSION IFAY(2)
C     COMMON/GEOM6/IFAY(2),IMISCL(28)
C END JUN 2004
      J = 1
      IF (ISTIF.NE.4) THEN
         IF (ISEG.NE.NSEGB5) J = ISEG
         IF (ISEG.EQ.2.AND.B2.EQ.0.) J = 1
      ELSE
         IF (ISEG.EQ.2) J = ISEG
         IF (B2.GT.W2) THEN
            IF (ISEG.GE.3.AND.ISEG.LE.5) J = ISEG-1
            IF (ISEG.EQ.6) J = 3
            IF (ISEG.EQ.7) J = 2
            IF (IFAY(2).EQ.1.AND.ISEG.EQ.3) J = 1
         ELSE
            IF (ISEG.EQ.3) J = ISEG
            IF (ISEG.EQ.4) J = ISEG
            IF (ISEG.EQ.5) J = 3
         ENDIF
      ENDIF
      IF (ISTIF.EQ.5) THEN
         IF (B2.LE.0.0) THEN
            IF (ISEG.EQ.NSEGB5) J = 2
         ELSE
            IF (ISEG.EQ.4) J = 2
            IF (ISEG.EQ.5) J = 1
            IF (ISEG.EQ.6) J = 3
         ENDIF
      ENDIF
C
      RETURN
      END
C END OCT 1998
C
C
C
C BEG VMS
C=DECK      MATMU4
C     SUBROUTINE MATMU4(B,A,C,K,J,IZERO)
C
C     CALLED FROM BOTH PRESTS AND STABIL (LINKS 2 AND 3). SIMILAR TO
C     MATMU2 EXCEPT FOR ONE STATEMENT  AFTER LABEL 50.
C     WE FORM THE PRODUCT C = A(TRANSPOSE)XBXA, WHERE B IS SYMMETRIC
C
C     DOUBLE PRECISION B,A,C,D
C     DIMENSION B(K,K),A(K,J),C(J,J),D(7,7)
C     DO 10 KK=1,K
C     DO 10 JJ=1,J
C     D(KK,JJ) = 0.0
C  10 CONTINUE
C     DO 30 KK=1,K
C     DO 30 JJ=1,J
C     DO 20 LL=1,K
C     D(KK,JJ) = D(KK,JJ) + B(KK,LL)*A(LL,JJ)
C  20 CONTINUE
C  30 CONTINUE
C     IF (IZERO.EQ.1) GO TO 50
C     DO 40 II=1,J
C     DO 40 JJ=1,J
C     C(II,JJ) = 0.0
C  40 CONTINUE
C  50 DO 70 II=1,J
C     DO 70 JJ=1,II
C     DO 60 KK=1,K
C     C(II,JJ) = C(II,JJ) + A(KK,II)*D(KK,JJ)
C  60 CONTINUE
C  70 CONTINUE
C     RETURN
C     END
C END VMS
C BEG UNIX
C
C=DECK      MATMU4
      SUBROUTINE MATMU4(B,A,C,K,J,IZERO)
C
C     CALLED FROM BOTH PRESTS AND STABIL (LINKS 2 AND 3). SIMILAR TO
C     MATMU2 EXCEPT FOR ONE STATEMENT  AFTER LABEL 50.
C     WE FORM THE PRODUCT C = A(TRANSPOSE)XBXA, WHERE B IS SYMMETRIC
C
      integer dim
      parameter (dim = 7)
      DOUBLE PRECISION B,A,C,D
      DIMENSION B(K,K),A(K,J),C(J,J),D(dim, dim)
#if cray
      call matms4(B, A, C, K, J, IZERO)
#else
      DO 10 KK=1,K
      DO 10 JJ=1,J
      D(KK,JJ) = 0.0
   10 CONTINUE
      DO 30 KK=1,K
      DO 30 JJ=1,J
      DO 20 LL=1,K
      D(KK,JJ) = D(KK,JJ) + B(KK,LL)*A(LL,JJ)
   20 CONTINUE
   30 CONTINUE
      IF (IZERO.EQ.1) GO TO 50
      DO 40 II=1,J
      DO 40 JJ=1,J
      C(II,JJ) = 0.0
   40 CONTINUE
   50 DO 70 II=1,J
      DO 70 JJ=1,II
      DO 60 KK=1,K
      C(II,JJ) = C(II,JJ) + A(KK,II)*D(KK,JJ)
   60 CONTINUE
   70 CONTINUE
#endif
      RETURN
      END
