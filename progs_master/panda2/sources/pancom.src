C=DECK      PANCOM
      SUBROUTINE PANCOM(IABP,IDESGN,FNX,FNY,FNXY,FNX0,FNY0,FNXY0,
     1            FNXP0,FNYP0,FNXYP0,FNXPL0,FNYPL0,FNXYPL,MIDEND,
C BEG NOV 2003
C BEG JUN 2004
     1   IREDUC,RWBEIG,RWBTOT,IPRELM,IADDFC,IADDST,IADDFT,NUMBUC,
     1   ILABEL)
C END JUN 2004
C END NOV 2003
C
C  PURPOSE IS TO FILL COMMON BLOCKS REQUIRED BY PANDA SOFTWARE FOR
C  BUCKLING AND ROLLING ANALYSIS, AND TO INITIALIZE CERTAIN PANDA
C  VARIABLES
C
C  COMMON BLOCKS USED IN PANDA...
C
C BEG JUN 2004
      COMMON/OUTP/NPRT
C END JUN 2004
C BEG MAR 1996
      COMMON/GEOM6/IFAY(2),ITRTOT,IRESET,NLOADS,NSTEPS,WMAX,NCROSS,
     1       NOPLOT,KMAX,ILAYPL,XMXX,XMIN,YMXX,YMIN,N3DPLT,NOBJ,NSTRNS,
     1       NPLTST,NABSCI,IDIAG,ITRALL,IFAYT(2),IBEAM,IMISCL(5)
C END MAR 1996
C BEG JUN 1996 (ELASTIC FOUNDATION)
C        "F1" signifies "face sheet 1" (top or leftmost face sheet)
C        "F2" signifies "face sheet 2" (bottom or rightmost face sheet)
C  wrinkling parameters...
      COMMON/VSANDW/MWAVF1(4,2),MWAVF2(4,2),NWAVF1(4,2),NWAVF2(4,2)
      COMMON/TSANDW/TESTF1(4,2),TESTF2(4,2),SLOPF1(4,2),SLOPF2(4,2)
C  dimpling parameters...
      COMMON/SSANDW/MWADF1(4,2),MWADF2(4,2),NWADF1(4,2),NWADF2(4,2)
      COMMON/RSANDW/TESDF1(4,2),TESDF2(4,2),SLODF1(4,2),SLODF2(4,2)
C  buckling eigenvalues: EIGW..=face wrinkling; EIGD..=face dimpling
      COMMON/QSANDW/EIGWF1(4,2),EIGWF2(4,2),EIGDF1(4,2),EIGDF2(4,2)
C END JUN 1996
      COMMON/ROLLIT/NSTOT,NRTOT,IROLL(9,9,2),FNUM(9,2),FDEN(9,2)
      COMMON/INTCUR/ICURV,IFILE,DTHETA,THMAX,THMIN,DIADIF
      COMMON/CWALL/C11,C12,C22,C33,C44,C45,C55,C66
      COMMON/PARAM5/ MBAR,NBAR,NXNORM,NYNORM
      COMMON/WARBUC/MSKINW,NSKINW,TSTLCW,CLOCW,ELOCW
      COMMON/PRESHR/NXY0,E0XY,NXYNRM,ISHEAR,SHEAR,CSTART,NXYSKN,CSKIN
      COMMON/STFTHK/C1S(9),C1R(9),C33S(9),C33R(9),ANGLS(9),ANGLR(9)
      COMMON/STR/D11S(9),D12S(9),D22S(9),GJS(9),ALS(9),ASSM(9),ASSM3(9)
      COMMON/RNG/D11R(9),D12R(9),D22R(9),GJR(9),ALR(9),ARSM(9),ARSM3(9)
      COMMON/STR2/NPARTS,NSEGS(9),NENDS(9)
      COMMON/RNG2/NPARTR,NSEGR(9),NENDR(9)
      COMMON/PARAM1/ E0X,E0Y,A0,B0,ROB,PHI,PI,ERR,ABIG,BBIG
C BEG OCT 2001 (name change from PRELOD to avoid variable name conflict)
      COMMON/PRELDX/NX0,NY0
C END OCT 2001
      COMMON/WALLX/JWALL,KWALL,NNNLAY,NLIP,NSMRS
      COMMON/GWAVES/NGEN,MGEN,WSKIN,WSTIFF
      COMMON/DESVAR/IBUCKL,ISPACR,ISIZS,ISIZR,R
      COMMON/PANLNG/TESTLC,TESTGL
      COMMON/PRESTS/NXPRE,NYPRE
      COMMON/GENLOC/NXFIX,NYFIX,NXYFIX,TEST,E0XP,E0YP
C BEG OCT 2001 (name changes from AA1,AA5 to AA1XXX, AA5XXX)
      COMMON/AA1XXX/EIGSTR(9),EIGRNG(9),EIGROL(4),X(20),Y(20),XSAVE(20)
      COMMON/AA5XXX/EIGGEN,EIGLOC,WSTAR,DX
C END OCT 2001
      COMMON/AA7/IFLAG
      COMMON/AA8/EIGSS,EIGSR,KWAVES(2,4)
      COMMON/MISCLN/NMATEL,IFLAT,DENS(10) 
C BEG OCT 2001 (change name from STRRNG to STRRNX to avoid conflict)
      COMMON/STRRNX/E0YSVE
C END OCT 2001
C BEG OCT 2001 (change name from SLOPE to SLOPEQ to avoid name conflict)
      COMMON/SLOPEQ/CCRIT
C END OCT 2001
      COMMON/BENDNG/WXXMID,EPS1(30),EPS2(30),EPS12(30),TTOT
      COMMON/MORSTB/TESTSS,TESTSR,CSS,CSR,MSS ,NSS ,MSR ,NSR
C BEG MARCH 1990
C BEG NOV 2003
      COMMON/MRSTB2/EIGSS2,TSTSS2,CSS2,MSS2,NSS2,ILOWSS(10,40)
C END NOV 2003
      COMMON/CHGCUR/FFLAT(20,2,2),TST2ND(20,2),SLP2ND(20,2),
     1              EIG2ND(20,2),FNEFF(20,2)
      COMMON/MN2ND/M2ND(20,2),N2ND(20,2),IAGAIN(20,2)
C END MARCH 1990
      COMMON/MODES2/MMSKN,NNSKN,CLOCAL,CSLOPE
      COMMON/MODES3/MMSKN2,NNSKN2,CLOCA2,CSLOP2,TESTL2,EIGLO2
C BEG AUG 1992
C BEG AUG 1993
      COMMON/DELIMP/DELFCE(4,2),DELISO(4,3),DELSKN(3,2,2),DELWEB(2)
      DIMENSION RSUM(3,5)
C END AUG 1993
      COMMON/RESULX/RESLTS(9),RESLTR(9),TOTS,TOTR,RSKINX,RSKINY
      COMMON/ISOGR/ISOGRD,ISOANG
C BEG DEC 2000
C BEG JUN 2004
C     COMMON/ISOGR5/JSTIF1,JSTIFF
      COMMON/ISOGR5/JSTIF1,JSTIF2
C END DEC 2000
      COMMON/ISOGR2/JSTIFX
C END JUN 2004
      COMMON/LOADS8/RWEIG(3),RWFXL(3),RWPGL(3),RWFIX(3),RWTOT(3)
      COMMON/LOADS9/RSPRS(3,5,3),ESPRS(3,5,3),RSTOT(3,5,3),RSULT(3,5,3)
C END AUG 1992
      COMMON/RESLTP/RPRES(9),RPRER(9),TOTPS,TOTPR,RSKNXP,RSKNYP
      COMMON/SMROLL/EIGRSS,EIGRSR,MRSS,NRSS,MRSR,NRSR
      COMMON/WALLC/C13,C16,C23,C26,C34,C35,C46,C56,IBAL
      COMMON/ROLSLP/EIGRGN,CRSLOP,CRLOCL,CRSS,CRSR,TSTRGL,TSTRLC,TSTRSS,
     1 TSTRSR
      COMMON/KSHEER/KTRANS
      COMMON/WEBBUC/EIGWEB(2),TSTWEB(2),CSLOPW(2),MMWEB(2),NNWEB(2)
      COMMON/BASBUC/EHBASE(4),THBASE(4),CHBASE(4),MHBASE(4),NHBASE(4)
      COMMON/CROWNB/ECROWN(4),TCROWN(4),CCROWN(4),MCROWN(4),NCROWN(4)
      COMMON/WBBUC2/EIGWB2,TSTWB2,CSLPW2,MMWB2,NNWB2
      COMMON/ROLEND/TSTRL2,CRLCL2,EIGRL2,MMRL2,NNRL2,EIGRS2,MMRS2
C BEG JULY 1989
      COMMON/EPRELM/EIGGN1,TSTGL1,CSLOP1,MGEN1,NGEN1
      COMMON/DELIM2/DELFCX(3,4),DELWBX(2),DELCUR(3)
C END JULY 1995
C
      REAL NXPRE,NYPRE,NXYPRE
      REAL NXFIX,NYFIX,NXYFIX
      REAL           MBAR,NBAR,NXNORM,NYNORM
      REAL NX0,NY0,NXY0
      REAL      NXYNRM,NXYSKN
      REAL MSKIN,NSKIN,NXSKIN,NYSKIN
C
C  COMMON BLOCKS USED IN PANDA2...
C
      COMMON/GEOM1/AXIAL,CIRC,RR
      COMMON/GEOM2/B(2),B2(2),H(2),W(2),W2(2)
      COMMON/GEOM3/ISTIF(2),NLAYER(4,2),NSEG(2),INTEXT(2)
      COMMON/GEOM5/RAD2,CURV2
      COMMON/LOADS/FNXX,FNYY,FNXXYY,RESULT(3,5,2)
      COMMON/LOADS2/FNX00,FNY00,FNXY00,RESFXT(3,5,2)
      COMMON/LOADS5/RESFIX(3,5,2)
      COMMON/ALLCIJ/CX(6,6,5),CY(6,6,5),CS(6,6)
C
C BEG 26 JAN 1989
      DIMENSION RWBEIG(*),RWBTOT(*)
C END 26 JAN 1989
C
C BEG AUG 1993
      IF (IDESGN.NE.0.OR.MIDEND.EQ.2) GO TO 10
C END AUG 1993
C
      CALL MOVER(9999.,0,EIGSTR,1,9)
      CALL MOVER(9999.,0,EIGRNG,1,9)
      CALL MOVER(9999.,0,EIGROL,1,4)
      CALL MOVER(0.,0,RPRES,1,22)
      EIGGEN = 9999.
      EIGLOC = 9999.
      EIGLO2 = 9999.
      ELOCW  = 9999.
       EIGSS = 9999.
       EIGSR = 9999.
      EIGRSS = 9999.
      EIGRSR = 9999.
      EIGRGN = 9999.
      EIGWEB(1) = 9999.
      EIGWEB(2) = 9999.
C
      DO 5 I = 1,4
      EHBASE(I) = 9999.
      ECROWN(I) = 9999.
      THBASE(I) = 10.
      TCROWN(I) = 10.
      CHBASE(I) = 0.
      CCROWN(I) = 0.
      MHBASE(I) = 1
      NHBASE(I) = 1
      MCROWN(I) = 1
      NCROWN(I) = 1
    5 CONTINUE
C
      EIGWB2 = 9999.
      EIGRL2 = 9999.
      EIGRS2 = 9999.
      CSTART = 0.
      CCRIT = 0.
      CSKIN = 0.
      CLOCW = 0.
      CSLPW2 = 0.
      CRLCL2 = 0.
      TESTGL = 10.
      TESTLC = 10.
      TSTLCW = 10.
      TESTL2 = 10.
      TESTSS = 10.
      TESTSR = 10.
      TSTRGL = 10.
      TSTRLC = 10.
      TSTRSS = 10.
      TSTRSR = 10.
      TSTWEB(1) = 10.
      TSTWEB(2) = 10.
      TSTWB2 = 10.
      TSTRL2 = 10.
      CLOCAL = 0.
      CSLOPE = 0.
      CLOCA2 = 0.
      CSLOP2 = 0.
      CSS = 0.
      CSR = 0.
      CRSLOP = 0.
      CRLOCL = 0.
      CRSS   = 0.
      CRSR   = 0.
      CSLOPW(1) = 0.
      CSLOPW(2) = 0.
      MMSKN = 1
      NNSKN = 1
      MMSKN2=1
      NNSKN2=1
      NSKINW = 1
      MSKINW = 1
      MSS = 1
      NSS = 1
      MSR = 1
      NSR = 1
      MGEN = 1
      NGEN = 1
      MRSS = 1
      NRSS = 1
      MRSR = 1
      NRSR = 1
      MMWEB(1)= 1
      NNWEB(1)= 1
      MMWEB(2)= 1
      NNWEB(2)= 1
      DO 7 I = 1,2
      DO 7 J = 1,4
    7 KWAVES(I,J) = 1
      MMWB2 = 1
      NNWB2 = 1
      MMRL2 = 1
      NNRL2 = 1
      MMRS2 = 1
C BEG MARCH 1990
      EIGSS2 = 9999.
      TSTSS2 = 10.
      CSS2   = 0.
      MSS2   = 1
      NSS2   = 1
C BEG NOV 2003
C     ILOWSS = 0
      IF (IDESGN.EQ.0) ILOWSS(IPRELM+1,NUMBUC)=0
C END NOV 2003
      CALL MOVER(9999.,0,EIG2ND,1,40)
      CALL MOVER(10.,0,TST2ND,1,40)
      CALL MOVER(1.,0,FNEFF,1,40)
      CALL MOVER(1,0,M2ND,1,40)
      CALL MOVER(1,0,N2ND,1,40)
      CALL MOVER(0.,0,SLP2ND,1,40)
C END MARCH 1990
C BEG JUN 1996
      IF (IPRELM.EQ.0) THEN
         CALL MOVER(9999.,0,EIGWF1,1,32)
         CALL MOVER(10.,0,TESTF1,1,16)
         CALL MOVER(10.,0,TESDF1,1,16)
         CALL MOVER(1,0,MWAVF1,1,32)
         CALL MOVER(1,0,MWADF1,1,32)
         CALL MOVER(0.,0,SLOPF1,1,16)
         CALL MOVER(0.,0,SLODF1,1,16)
      ENDIF
C END JUN 1996
C BEG JULY 1989
      IF (IPRELM.EQ.1) THEN
         EIGGN1 = 9999.
         TSTGL1 = 10.
         CSLOP1 =  0.
         MGEN1  =  1
         NGEN1  =  1
      ENDIF
C END JULY 1989
C
   10 CONTINUE
C
C BEG AUG 1993
C     IF (IDESGN.EQ.0.AND.IPRELM.EQ.6) THEN
C        EIGROL(2) = 0.
C        KWAVES(1,2) = 1
C        EIGRS2 = 0.
C        MMRS2 = 1
C        EIGROL(3) = 0.
C        KWAVES(2,3) = 1
C     ENDIF
C END AUG 1993
C
C  TRANSLATE FROM PANDA2 TO PANDA VARIABLES...
C
      PHI = 1.0
      ICURV = 0
C     KTRANS = 0
C
C  KTRANS CHANGE NEW ON 11 JULY, 1987 (USE MINDLIN THEORY FOR
C  TRANSVERSE SHEAR EFFECTS IN SMEARED STIFFENER MODELS IF IREDUC = 1.
C
      KTRANS = IREDUC
C
C BEG JULY 1995
      RSKINX =  RESULT(1,1,1) + FLOAT(IADDST)*DELSKN(1,1,1)
     1                        + FLOAT(IADDFT)*DELFCX(1,1)
      RSKINY =  RESULT(2,1,1) + FLOAT(IADDST)*DELSKN(2,1,1)
     1                        + FLOAT(IADDFT)*DELFCX(2,1)
C END JULY 1995
      RSKNXP =  RESFIX(1,1,1)
      RSKNYP =  RESFIX(2,1,1)
C BEG JUN 2004
C     IF (ILABEL.EQ.9260.AND.NPRT.GE.2) THEN
C        WRITE(8,'(/,A,2I5,1P,2E12.4)')
C    1' IADDST,IADDFT,RSKINX,RSKINY=',IADDST,IADDFT,RSKINX,RSKINY
C        WRITE(8,'(A,1P,4E12.4)')
C    1' RESULT(1,1,1),DELSKN(1,1,1),RESULT(2,1,1),DELSKN(2,1,1)=',
C    1  RESULT(1,1,1),DELSKN(1,1,1),RESULT(2,1,1),DELSKN(2,1,1)
C     ENDIF
C END JUN 2004
      A0 = B(2)
      B0 = B(1)
      SFNXY = 1.
      IF (ABS(FNXY).GT.0.) SFNXY = FNXY/ABS(FNXY)
      NXY0 = FNXY + 0.*FLOAT(IADDFC)*DELSKN(3,1,1)*SFNXY
      NXYPRE = 0.
      NXYFIX = NXYPRE
C
C BEG AUG 1992
C BEG AUG 1993
      IF (ISOGRD.EQ.0) THEN
        RSUMW = RWBEIG(1)
        DO 20 I = 1,3
        DO 20 J = 1,5
           RSUM(I,J) = RESULT(I,J,1)
   20   CONTINUE
        IF (ISTIF(1).NE.5) THEN
           RSUMW = RWBEIG(1) + FLOAT(IADDFC)*0.7*DELFCE(3,1)
           RSUM(1,3) = RESULT(1,3,1) + FLOAT(IADDFC)*0.5*DELFCE(3,1)
           RSUM(1,4) = RESULT(1,4,1) + FLOAT(IADDST)*DELFCE(4,1)
        ENDIF
C BEG JULY 1995
        IF (ISTIF(1).EQ.5) THEN
           RSUMW = RWBEIG(1) + FLOAT(IADDFC)*0.7*DELFCE(2,1)
        ENDIF
C END JULY 1995
        CALL STFTYP(ISTIF(1),INTEXT(1),NPARTS,ANGLS,NSEGS,NENDS,
     1            RESLTS,RPRES,RSUM,RESFIX(1,1,1),ALS,W(1),H(1),
     1            C1S,C33S,D12S,D22S,D11S,GJS,CX,TOTS,TOTPS,
     1            RSUMW,RWBTOT(1),B(1))
      ENDIF
C
      IF (ISOGRD.EQ.1) THEN
C BEG JUN 2004
        IF (ISTIF(1).EQ.3) JSTIFF = JSTIFX
        IF (ISTIF(1).NE.3) JSTIFF = JSTIF2
C END JUN 2004
        IF (JSTIFF.LE.0.OR.JSTIFF.GT.3) JSTIFF = 1
        RSUMW = RWEIG(JSTIFF)
        DO 30 I = 1,3
        DO 30 J = 1,5
           RSUM(I,J) = RSULT(I,J,JSTIFF)
   30   CONTINUE
        RSUMW = RWEIG(JSTIFF) + FLOAT(IADDFC)*0.7*DELISO(3,JSTIFF)
        RSUM(1,3) = RSULT(1,3,JSTIFF)
     1                        + FLOAT(IADDFC)*0.5*DELISO(3,JSTIFF)
        RSUM(1,4) = RSULT(1,4,JSTIFF) + FLOAT(IADDFC)*DELISO(4,JSTIFF)
        CALL STFTYP(ISTIF(1),INTEXT(1),NPARTS,ANGLS,NSEGS,NENDS,
     1       RESLTS,RPRES,RSUM,RSTOT(1,1,JSTIFF),ALS,W(1),H(1),
     1       C1S,C33S,D12S,D22S,D11S,GJS,CX,TOTS,TOTPS,
     1       RSUMW,RWTOT(JSTIFF),B(1))
      ENDIF
C
      RSUMW = RWBEIG(2)
      DO 40 I = 1,3
      DO 40 J = 1,5
         RSUM(I,J) = RESULT(I,J,2)
   40 CONTINUE
      IF (ISTIF(2).NE.5) THEN
         RSUMW = RWBEIG(2) + FLOAT(IADDFC)*0.7*DELFCE(3,2)
         RSUM(1,3) = RESULT(1,3,2) + FLOAT(IADDFC)*0.5*DELFCE(3,2)
         RSUM(1,4) = RESULT(1,4,2) + FLOAT(IADDFC)*DELFCE(4,2)
      ENDIF
      CALL STFTYP(ISTIF(2),INTEXT(2),NPARTR,ANGLR,NSEGR,NENDR,
     1            RESLTR,RPRER,RSUM,RESFIX(1,1,2),ALR,W(2),H(2),
     1            C1R,C33R,D12R,D22R,D11R,GJR,CY,TOTR,TOTPR,
     1            RSUMW,RWBTOT(2),B(2))
C END AUG 1993
C
      ABIG = AXIAL
      BBIG = CIRC
      RTEST = 10000.*SQRT(ABIG**2 +BBIG**2)
      R    = RR
C BEG MARCH 1990       (FOLLOWING STATEMENT IS COMMENTED OUT)
C     IF (ABS(RAD2).LT.(RTEST/1.1)) R = RAD2
C END MARCH 1990
C     WRITE(8,*) ' RAD2 (FROM GEOM5 COMMON BLOCK) =', RAD2
C
      IF (IABP.EQ.0) THEN
         NX0 = FNX
         NY0 = FNY
C BEG APR 1991
C        NXPRE = FNX0 + FNXP0 + FNXPL0
C        NYPRE = FNY0 + FNYP0 + FNYPL0
         NXPRE = FNX0 + FNXP0
         NYPRE = FNY0 + FNYP0
      ELSE
C        NX0 = FNX + FNXP0 + FNXPL0
C        NY0 = FNY + FNYP0 + FNYPL0
         NX0 = FNX + FNXP0
         NY0 = FNY + FNYP0
C END APR 1991
         NXPRE = FNX0 
         NYPRE = FNY0 
      ENDIF
      IFLAT = 0
      IF (ABS(R).GT.(RTEST/1.1)) IFLAT = 1
C BEG MAR 1996
      IF (IBEAM.EQ.1) IFLAT = 1
C END MAR 1996
C
      RETURN
      END
C
C
C=DECK      STFTYP
      SUBROUTINE STFTYP(ISTIF,INTERN,NPART,ANGL,NSEG,NEND,RESLT,RPRE,  
C BEG 26 JAN 1989
     1           RESULT,RESFIX,AL,W,H,C1,C33,D12,D22,D11,GJ,C,TOT,TOTP,
C BEG JULY 1989
     1           RWBEIG,RWBTOT,B)
C END JULY 1989
C END 26 JAN 1989
C     
C   PURPOSE IS TO FILL NPART,ANGL,NSEG, AND NEND, GIVEN ISTIF,INTERN
C     
      DIMENSION NSEG(*),ANGL(*),NEND(*),RESLT(*),RPRE(*),AL(*)   
      DIMENSION C1(*),C33(*),D12(*),D22(*),D11(*),GJ(*)
      DIMENSION RESULT(3,5),RESFIX(3,5),C(6,6,5)
C     
      DEGRAD = 3.1415927/180.
      NPART = 0
      TOT = 0.
      TOTP= 0.
      CALL MOVER(0,0,NSEG,1,5)
      CALL MOVER(0,0,NEND,1,5)
      CALL MOVER(0.,0,ANGL,1,5)
      CALL MOVER(0.,0,RESLT,1,5)
      CALL MOVER(0.,0,RPRE,1,5)
      CALL MOVER(0.,0,AL,1,5)
      CALL MOVER(0.,0,C1,1,5)
      CALL MOVER(0.,0,C33,1,5)
      CALL MOVER(0.,0,D11,1,5)
      CALL MOVER(0.,0,D12,1,5)
      CALL MOVER(0.,0,D22,1,5)
      CALL MOVER(0.,0,GJ,1,5)
C
      ISTIF1 = ISTIF + 1
C BEG JULY 1989
      GO TO (5000,120,130,110,140,140), ISTIF1
C END JULY 1989
  110 CONTINUE
C     
C   BRANCH FOR RECTANGULAR CROSS SECTION...     
C     
      NPART = 1   
      ANGL(1) = 0.
      IF (INTERN.EQ.1) ANGL(1) = 180.     
      NSEG(1) = 0 
      NEND(1) = 1 
      AL(1)   = H
      C1(1) = C(1,1,3)
      C33(1)= C(3,3,3)
      D11(1)= C(4,4,3)
      D12(1)= C(4,5,3)
      D22(1)= C(5,5,3)
      GJ(1)   = C(6,6,3)
      RESLT(1)= RESULT(1,3)
      RPRE(1) = RESFIX(1,3)
      TOT = RESLT(1)*H
      TOTP= RPRE(1)*H
C BEG 26 JAN 1989
      RESLT(1)= RWBTOT +RWBEIG
      RPRE(1) = RWBTOT
C END 26 JAN 1989
      GO TO 5000  
C     
  120 CONTINUE    
C     
C   BRANCH FOR TEE CROSS SECTION (FLANGE AWAY FROM PANEL SKIN)    
C     
      NPART = 3   
      ANGL(1) = 0.
      IF (INTERN.EQ.1) ANGL(1) = 180.     
      ANGL(2) = 90.     
      ANGL(3) = -90.    
      NSEG(1) = 0 
      NSEG(2) = 1 
      NSEG(3) = 1 
      NEND(1) = 0 
      NEND(2) = 1 
      NEND(3) = 1 
      AL(1)   = H
      C1(1) = C(1,1,3)
      C33(1)= C(3,3,3)
      D11(1)= C(4,4,3)
      D12(1)= C(4,5,3)
      D22(1)= C(5,5,3)
      GJ(1)   = C(6,6,3)
      RESLT(1)= RESULT(1,3)
      RPRE(1) = RESFIX(1,3)
      AL(2)   = W/2.
      C1(2) = C(1,1,4)
      C33(2)= C(3,3,4)
      D11(2)= C(4,4,4)
      D12(2)= C(4,5,4)
      D22(2)= C(5,5,4)
      GJ(2)   = C(6,6,4)
      RESLT(2)= RESULT(1,4)
      RPRE(2) = RESFIX(1,4)
      AL(3)   = W/2.
      C1(3) = C(1,1,4)
      C33(3)= C(1,1,4)
      D11(3)= C(4,4,4)
      D12(3)= C(4,5,4)
      D22(3)= C(5,5,4)
      GJ(3)   = C(6,6,4)
      RESLT(3)= RESULT(1,4)
      RPRE(3) = RESFIX(1,4)
      TOT = RESLT(1)*H + RESLT(2)*W
      TOTP=  RPRE(1)*H +  RPRE(2)*W
C     WRITE(8,*)' RESLT1,RESLT2,RESLT3=',RESLT(1),RESLT(2),RESLT(3)
C     WRITE(8,*)' RPRE1, RPRE2, RPRE3 =',RPRE(1), RPRE(2), RPRE(3)
      GO TO 5000  
C     
  130 CONTINUE    
C     
C   BRANCH FOR L-SHAPED CROSS SECTION, FLANGE AWAY FROM SKIN..    
C     
      NPART = 2   
      ANGL(1) = 0.
      IF (INTERN.EQ.1) ANGL(1) = 180.     
      ANGL(2) = 90.     
      NSEG(1) = 0 
      NSEG(2) = 1 
      NEND(1) = 0 
      NEND(2) = 1 
      AL(1)   = H
      C1(1) = C(1,1,3)
      C33(1)= C(3,3,3)
      D11(1)= C(4,4,3)
      D12(1)= C(4,5,3)
      D22(1)= C(5,5,3)
      GJ(1)   = C(6,6,3)
      RESLT(1) = RESULT(1,3)
      RPRE(1)  = RESFIX(1,3)
      AL(2)   = W
      C1(2) = C(1,1,4)
      C33(2)= C(3,3,4)
      D11(2)= C(4,4,4)
      D12(2)= C(4,5,4)
      D22(2)= C(5,5,4)
      GJ(2)   = C(6,6,4)
      RESLT(2) = RESULT(1,4)
      RPRE(2)  = RESFIX(1,4)
      TOT = RESLT(1)*H + RESLT(2)*W
      TOTP=  RPRE(1)*H +  RPRE(2)*W
      GO TO 5000  
C     
C     
  140 CONTINUE    
C     
C   BRANCH FOR HAT OR TRUSSCORE CROSS SECTION 
C   (FLANGE AWAY FROM PANEL SKIN)
C     
      NPART = 3   
      ANGL(1) = 0.
      IF (INTERN.EQ.1) ANGL(1) = 180.     
      ANGL(2) = 90.     
      ANGL(3) = 0.
      IF (INTERN.EQ.1) ANGL(3) = 180.     
      NSEG(1) = 0 
      NSEG(2) = 1 
      NSEG(3) = 0 
      NEND(1) = 0 
      NEND(2) = 0 
      NEND(3) = 0 
      AL(1)   = H
C BEG JULY 1989
      IWEB = 3
      IF (ISTIF.EQ.5) IWEB = 2
      WFL = W
      IF (ISTIF.EQ.5) WFL = B
      C1(1) = C(1,1,IWEB)
      C33(1)= C(3,3,IWEB)
      D11(1)= C(4,4,IWEB)
      D12(1)= C(4,5,IWEB)
      D22(1)= C(5,5,IWEB)
      GJ(1)   = C(6,6,IWEB)
      RESLT(1)= RESULT(1,IWEB)
      RPRE(1) = RESFIX(1,IWEB)
      AL(2)   = WFL
      IWEBP = IWEB + 1
      C1(2) = C(1,1,IWEBP)
      C33(2)= C(3,3,IWEBP)
      D11(2)= C(4,4,IWEBP)
      D12(2)= C(4,5,IWEBP)
      D22(2)= C(5,5,IWEBP)
      GJ(2)   = C(6,6,IWEBP)
      RESLT(2)= RESULT(1,IWEBP)
      RPRE(2) = RESFIX(1,IWEBP)
      AL(3)   = H
      C1(3) = C(1,1,IWEB)
      C33(3)= C(1,1,IWEB)
      D11(3)= C(4,4,IWEB)
      D12(3)= C(4,5,IWEB)
      D22(3)= C(5,5,IWEB)
      GJ(3)   = C(6,6,IWEB)
      RESLT(3)= RESULT(1,IWEB)
      RPRE(3) = RESFIX(1,IWEB)
      TOT = RESLT(1)*2.*H + RESLT(2)*WFL
      TOTP=  RPRE(1)*2.*H +  RPRE(2)*WFL
C END JULY 1989
C     
C     
 5000 CONTINUE    
C
      DO 5100 I = 1,5
 5100 ANGL(I) = ANGL(I)*DEGRAD
C
      RETURN
      END   
C
C
C
C=DECK      GTRANS
      SUBROUTINE GTRANS(INDX,C,ISTIF) 
C     
C     PURPOSE IS TO CALCULATE TRANSVERSE SHEAR STIFFNESS FOR SMEARED    
C     STIFFENER WEBS.   
C     
C     THE OUTPUT (A44, A55, A45, K1, AND K2) ARE USED IN SUBROUTINE     
C     TSHEAR, WHICH CALCULATES CONTRIBUTION DUE TO TRANSVERSE SHEAR     
C     DEFORMATION.
C     
      COMMON/STFTHK/C1S(9),C1R(9),C33S(9),C33R(9),ANGLS(9),ANGLR(9)
      COMMON/STR/D11S(9),D12S(9),D22S(9),GJS(9),ALS(9),ASSM(9),ASSM3(9)
      COMMON/RNG/D11R(9),D12R(9),D22R(9),GJR(9),ALR(9),ARSM(9),ARSM3(9)
      COMMON/PARAM1/ E0X,E0Y,A0,B0,ROB,PHI,PI,ERR,ABIG,BBIG 
      COMMON/STR2/ NPARTS,NSEGS(9),NENDS(9)     
      COMMON/RNG2/ NPARTR,NSEGR(9),NENDR(9)     
      DIMENSION C(6,6),ISTIF(2)
      COMMON/WALLD/K1,K2,A44,A45,A55,ITRANS(4)  
      COMMON/KSHEER/KTRANS    
C BEG JULY 1989
      COMMON/ALLCIJ/CX(6,6,5),CY(6,6,5),CS(6,6)
C END JULY 1989
C BEG APR 1992
      COMMON/MATRN2/GTX(2,5),GTY(2,5),GTS(2),TEFF(2)
C END APR 1992
C BEG AUG 1992
      COMMON/ISOGR/ISOGRD,ISOANG
C END AUG 1992
C     
      REAL K1,K2,KAPPA  
C     
      PI = 3.141593     
      KAPPA = 5./6.     
      DO 5 I = 1,4
    5 ITRANS(I) = 0     
C BEG APR 1992
      A44 = GTX(2,1)*KAPPA
      A45 = 0.    
      A55 = GTX(1,1)*KAPPA
C END APR 1992
C     
      IF (INDX.EQ.1) RETURN   
      IF (KTRANS.EQ.0) RETURN 
      IF (NPARTS.EQ.0) GO TO 100    
      IF (INDX.EQ.4) GO TO 100
C     
      DO 10 I = 1,NPARTS
      IF (NSEGS(I).NE.0) GO TO 10   
      DIFF = ABS( ABS(ANGLS(I)) - PI/2. )  
      IF (DIFF.LT.0.1) GO TO 10     
C     
C  THIS STRINGER PART IS A WEB ATTACHED TO THE SKIN...
C     
      KAPPA = 1.0 
C BEG APR 1992
      IF (NENDS(I).NE.0) GO TO 10
C END APR 1992
      FACT = 1.0
C BEG JULY 1989
      IF (ISTIF(1).GE.4) FACT = 2.0
      GXZ = FACT*C33S(I)/B0    
C BEG APR 1992
      W = ALS(2)
      IF (ISTIF(1).EQ.1) W = 2.*ALS(2)
      ICX = 4
      IF (ISTIF(1).EQ.5) ICX = 3
      KAPPA = CX(1,1,2)/(CX(1,1,ICX)*(W/B0))
      IF (KAPPA.LT.1.0) KAPPA = 1./KAPPA
C END APR 1992
      A55 = GXZ*ALS(I)*KAPPA  
C BEG AUG 1992
      IF (ISOGRD.EQ.1) A44 = A55
C END AUG 1992
      IF (ISTIF(1).EQ.5) THEN
         S = SQRT(ALS(I)**2 + 0.25*B0**2)
         A44 = (2.*CX(2,2,2)*B0*ALS(I)/(4.*S**3))*ALS(I)*KAPPA
      ENDIF
C END JULY 1989
      ITRANS(INDX) = 1  
C     
      GO TO 100   
   10 CONTINUE    
C     
  100 CONTINUE    
C     
      IF (NPARTR.EQ.0) RETURN 
      IF (INDX.EQ.3) RETURN   
C     
      DO 20 I = 1,NPARTR
      IF (NSEGR(I).NE.0) GO TO 20   
      DIFF = ABS( ABS(ANGLR(I)) - PI/2. )  
      IF (DIFF.LT.0.1) GO TO 20     
C     
C  THIS RING PART IS A WEB ATTACHED TO THE SKIN...    
C     
      KAPPA = 1.0 
C BEG APR 1992
      IF (NENDR(I).NE.0) GO TO 20
C END APR 1992
      FACT = 1.0
C BEG JULY 1989
      IF (ISTIF(2).GE.4) FACT = 2.0
      GYZ = FACT*C33R(I)/A0    
C BEG APR 1992
      W = ALR(2)
      IF (ISTIF(2).EQ.1) W = 2.*ALR(2)
      ICY = 4
      IF (ISTIF(2).EQ.5) ICY = 3
      KAPPA = CY(1,1,2)/(CY(1,1,ICY)*(W/A0))
      IF (KAPPA.LT.1.0) KAPPA = 1./KAPPA
C END APR 1992
      A44 = GYZ*ALR(I)*KAPPA  
      IF (ISTIF(2).EQ.5) THEN
         S = SQRT(ALR(I)**2 + 0.25*A0**2)
         A55 = (2.*CY(2,2,2)*A0*ALR(I)/(4.*S**3))*ALR(I)*KAPPA
      ENDIF
C END JULY 1989
      ITRANS(INDX) = 1  
      RETURN
   20 CONTINUE    
      RETURN
      END   
C
C
C
C=DECK      FILLC 
      SUBROUTINE FILLC(C)  
C     
C     PURPOSE IS TO TRANSFER C(I,J) MATRIX INTO C11,C12,...AND B11,B12..
C     
      DIMENSION C(6,6)
      COMMON /CWALL/C11,C12,C22,C33,C44,C45,C55,C66   
      COMMON/WALLB/B11,B12,B22,B33  
      COMMON/WALLC/C13,C16,C23,C26,C34,C35,C46,C56,IBAL     
      COMMON/PRESHR/NXY0,E0XY,NXYNRM,ISHEAR,SHEAR,CSTART,NXYSKN,CSKIN   
      REAL NXY0,NXYNRM,NXYSKN 
      C11 = C(1,1)
      C12 = C(1,2)
      C22 = C(2,2)
      C33 = C(3,3)
      C44 = C(4,4)
      C45 = C(4,5)
      C55 = C(5,5)
      C66 = C(6,6)
C     
      B11 =  C(1,4)
      B12 =  C(1,5)
      B22 =  C(2,5)
      B33 =  C(3,6)
C     
      C13 = C(1,3)
      C16 = C(1,6)
      C23 = C(2,3)
      C26 = C(2,6)
      C34 = C(3,4)
      C35 = C(3,5)
      C46 = C(4,6)
      C56 = C(5,6)
C     
      RETURN
      END   
C
C
C
C=DECK      CNORM 
      SUBROUTINE CNORM(C)  
C     
C     PURPOSE IS TO NORMALIZE THE C(I,J) TO PREVENT OVERFLOW.     
C     
      DIMENSION C(6,6)
      COMMON/CMOD/CC(6,6)     
      COMMON /CWALL/C11,C12,C22,C33,C44,C45,C55,C66   
      COMMON/WALLB/B11,B12,B22,B33  
      COMMON/WALLC/C13,C16,C23,C26,C34,C35,C46,C56,IBAL     
      COMMON/WALLD/K1,K2,A44,A45,A55,ITRANS(4)  
C BEG OCT 2001
      REAL K1,K2
C END OCT 2001
      C12 = C(1,2)/C11  
      C22 = C(2,2)/C11  
      C33 = C(3,3)/C11  
      C44 = C(4,4)/C11  
      C45 = C(4,5)/C11  
      C55 = C(5,5)/C11  
      C66 = C(6,6)/C11  
C     
      B11 = C(1,4)/C11  
      B12 = C(1,5)/C11  
      B22 = C(2,5)/C11  
      B33 = C(3,6)/C11  
C     
      C13 = C(1,3)/C11  
      C16 = C(1,6)/C11  
      C23 = C(2,3)/C11  
      C26 = C(2,6)/C11  
      C34 = C(3,4)/C11  
      C35 = C(3,5)/C11  
      C46 = C(4,6)/C11  
      C56 = C(5,6)/C11  
      A44 = A44/C11     
      A45 = A45/C11     
      A55 = A55/C11     
      DO 20 I = 2,6     
      I1 = I - 1  
      DO 20 J = 1,I1    
   20 C(I,J) = C(J,I)   
      DO 30 I = 1,6     
      DO 30 J = 1,6     
   30 CC(I,J) = C(I,J)/C11    
C
C     DO 40 I = 1,3
C     DO 40 J = 4,6
C  40 CC(I,J) = -CC(I,J)
C     DO 50 I = 2,6     
C     I1 = I - 1  
C     DO 50 J = 1,I1    
C  50 CC(I,J) = CC(J,I)   
C
      C11 = 1.0   
C     
      RETURN
      END   
C
C
C
C=DECK      DIFF  
      SUBROUTINE DIFF(A,B,DIFF1)    
C     
C     PURPOSE IS TO FIND A FLOATING PT. QUANTITY DIFF1 USED IN COMPARI- 
C     SONS WITH A TOLERANCE INDEX, TOL, FOR LOGICAL IF STATEMENTS.
C     
      FNUM = ABS(A-B)   
      FDEN = SQRT(A*A + B*B)  
      DIFF1 = 0.0 
      IF (FDEN.GT.0.00001) DIFF1 = FNUM/FDEN    
C     
      RETURN
      END   
C
C
C
C=DECK      ZAZB  
      SUBROUTINE ZAZB(NPART,NSEG,ANGL,AL,FL,ZA,ZB,YA,YB)    
C     
C     PURPOSE IS TO CALCULATE BEGINNING AND END COORDINATES OF STIFFENER
C     SEGMENTS.   
C     
      DIMENSION NSEG(9),ANGL(9),AL(9),ZA(9),ZB(9),YA(9),YB(9)     
      CHARACTER*6 SUBNAM
      DATA SUBNAM/ 'ZAZB  ' / 
C     
      KOUNT = 0   
C     
      DO 20 J = 1,NPART 
      DO 10 I = 1,NPART 
C     
      K = NSEG(I) 
      IF (K.NE.J-1) GO TO 10  
      A = ANGL(I) 
      SA = SIN(A) 
      ASA = ABS(SA)     
      CA = COS(A) 
      ACA = ABS(CA)     
C     
      ZSTART = 0. 
      IF (K.GT.0) ZSTART = ZB(K)    
      YSTART = 0. 
      IF (K.GT.0) YSTART = YB(K)    
C     
      ZA(I) = ZSTART    
      ZB(I) = ZSTART + AL(I)*CA     
C     
      YA(I) = YSTART    
      YB(I) = YSTART + AL(I)*SA     
C     
      KOUNT = KOUNT + 1 
      IF (KOUNT.EQ.NPART) GO TO 25  
C     
   10 CONTINUE    
   20 CONTINUE    
      IF (KOUNT.LT.NPART) CALL MERR(SUBNAM)     
C     
   25 CONTINUE    
C     
      RETURN
      END   
C
C
C
C=DECK      MERR  
      SUBROUTINE MERR(SUBNAM) 
      CHARACTER*6 SUBNAM
      WRITE(6,10) 
   10 FORMAT(//' ERROR EXIT... CHECK INPUT DATA OR PROGRAM LOGIC.'/     
     1' ERROR OCCURRED IN SUBROUTINE...'/)
      WRITE(6,20) SUBNAM
   20 FORMAT(A6)  
      CALL ERREX   
      RETURN
      END   
C
C
C
C=DECK      RECORD
      SUBROUTINE RECORD(IROLL,INDX,EIG,SLOPE,M,N,ICONST,CONSTR,WORDB,
     1                  IFILE,IDESGN,JJJ,LENMOD,EIGMAX,IPOINC,INUMTT,
     1                  FSAFE,ICASE,ISEG,ILOOP,VINHOF,MORMAR,ENDMID,
     1                  IALTSL,IDISCT,ISUB)
C
C  PURPOSE IS TO RECORD THE EIGENVALUE AND CONSTRAINT CONDITION PHRASE
C
C BEG 26 JAN 1989
      COMMON/MIDCOM/MIDEND
      COMMON/FMAXPP/MAXCON
      COMMON/WORDS5/PCWORD(99)
      COMMON/PLOTCD/ICAR,IADDCC(99),CPLOT(99)
      CHARACTER*80 PCWORD
      CHARACTER*9 MIDWRD
      REAL MAXCON
C END 26 JAN 1989
      COMMON/OUTP/NPRT
C BEG MAR 1991
      COMMON/FSAFEB/FSAFEP(99)
C END MAR 1991
      DIMENSION CONSTR(*),WORDB(*),IPOINC(*)
C BEG APR 1992
      COMMON/ATRNGS/ATRING
      LOGICAL ATRING
C END APR 1992
C BEG AUG 1992
      COMMON/ISOGR/ISOGRD,ISOANG
C BEG DEC 2000
C BEG JUN 2004
      COMMON/GEOM3/ISTIF(2),NLAYER(4,2),NSEG(2),INTEXT(2)
C     COMMON/ISOGR5/JSTIF1,JSTIFF
      COMMON/ISOGR5/JSTIF1,JSTIF2
      COMMON/ISOGR2/JSTIFX
C END JUN 2004
C END DEC 2000
      CHARACTER*2 CJ
C END AUG 1992
C BEG AUG 1994
C BEG JUN 1996
      COMMON/ISANDR/ISAND,ISANDS
C END JUN 1996
C BEG OCT 1996
      CHARACTER*5  CM,CN,CMM,CNN
      CHARACTER*8 VINHOF
      CHARACTER*3 ENDMID
      COMMON/HICONX/IHICON
C END OCT 1996
      CHARACTER*6 W3
C BEG AUG 1998
      CHARACTER*14 W5
C END AUG 1998
C END AUG 1994
      CHARACTER*80 WORDB
      CHARACTER*74 WORDC
      CHARACTER*3  C1,C2,C11,C22
      CHARACTER*7  C3,C4,C33,C44
C BEG JUN 1996
      CHARACTER*2  C5
      CHARACTER*10 W4
C END JUN 1996
      CHARACTER*12 W1
      CHARACTER*16 W2
      REAL LENMOD
C
      INUMTT = INUMTT + 1
C
C     WRITE(8,*) ' IN RECORD.. IMOD,INUMTT,IPOINC(INUMTT),EIG=',
C    1                       IDESGN,INUMTT,IPOINC(INUMTT),EIG
      IF (EIG.EQ.9999.) RETURN
C BEG 26 JAN 1989
C BEG OCT 1996
      C1 = '   '
      C2 = '   '
      IF (M.LT.1000) CALL CONVRT(M,C1)
      IF (N.LT.1000) CALL CONVRT(N,C2)
      CM = '     '
      IF (M.LT.1000) CM=C1//'  '
      CN = '     '
      IF (N.LT.1000) CN=C2//'  '
      IF (M.GE.1000) CALL CONVR5(M,CM)
      IF (N.GE.1000) CALL CONVR5(N,CN)
C END OCT 1996
C BEG AUG 1992
C BEG JUN 2004
      IF (ISOGRD.EQ.1) THEN
         IF (ISTIF(1).EQ.3) JSTIFF = JSTIFX
         IF (ISTIF(1).NE.3) JSTIFF = JSTIF2
      ENDIF
C END JUN 2004
      IF (JSTIFF.NE.0.AND.ISOGRD.EQ.1) CALL CONVR2(JSTIFF,CJ)
C END AUG 1992
      CALL CONVRF(SLOPE,C3)
      CALL CONVRF(FSAFE,C4)
C BEG NOV 1996
      ILKM = 0
      ILKN = 0
      DO 7 I = 1,5
        IF(CM(I:I).EQ.' ') GO TO 6
        ILKM = ILKM + 1
        CMM(ILKM:ILKM) = CM(I:I)
    6   CONTINUE
        IF(CN(I:I).EQ.' ') GO TO 7
        ILKN = ILKN + 1
        CNN(ILKN:ILKN) = CN(I:I)
    7 CONTINUE
      CM = CMM
      CN = CNN
C
      ILK3 = 0
      ILK4 = 0
      DO 9 I = 1,7
        IF(C3(I:I).EQ.' ') GO TO 8
        ILK3 = ILK3 + 1
        C33(ILK3:ILK3) = C3(I:I)
    8   CONTINUE
        IF(C4(I:I).EQ.' ') GO TO 9
        ILK4 = ILK4 + 1
        C44(ILK4:ILK4) = C4(I:I)
    9 CONTINUE
      C3 = C33
      C4 = C44
C
      ILK1 = 0
      ILK2 = 0
      DO 13 I = 1,3
        IF(C1(I:I).EQ.' ') GO TO 12
        ILK1 = ILK1 + 1
        C11(ILK1:ILK1) = C1(I:I)
   12   CONTINUE
        IF(C2(I:I).EQ.' ') GO TO 13
        ILK2 = ILK2 + 1
        C22(ILK2:ILK2) = C2(I:I)
   13 CONTINUE
      C1 = C11
      C2 = C22
C END NOV 1996
C
C BEG AUG 1994
      W3 = '(DONL)'
      IF (ISAND.EQ.1) W3 = '(SAND)'
C BEG MAR 1998
      IF (ISAND.EQ.2) W3 = '(MARL)'
C END MAR 1998
C END AUG 1994
C BEG JUN 2004
      IF (IROLL.EQ.0) W1 = 'simp-support'
      IF (INDX.NE.2.AND.INDX.NE.4) GO TO 10
      IF (IROLL.EQ.0.AND.LENMOD.LT.0.99) W1 = '  clamped   '
   10 CONTINUE
      IF (IROLL.EQ.1) W1 = 'rolling with'
      IF (IROLL.EQ.2) W1 = 'rolling only'
C BEG MAR 1996
      IF (IROLL.EQ.3) W1 = 'hiwave roll.'
C END MAR 1996
C BEG AUG 1992
      IF (ISOGRD.EQ.0.AND.IROLL.EQ.1.AND.INDX.GE.8) W1 = ' STRINGERS: '
      IF (ISOGRD.EQ.1.AND.IROLL.EQ.1.AND.INDX.GE.8) W1 = ' ISOGRID  : '
C END AUG 1992
      IF (IROLL.EQ.2.AND.INDX.GE.8)      W1 = '   RINGS:   '
      IF (INDX.EQ.23) W1 = ' wide-column'
C
      IF (INDX.EQ.1)  THEN
         IF (ISUB.EQ.0) W2 = ' local buck.; M='
         IF (ISUB.EQ.1) W2 = ' skin buckl.; M='
         IF (ISUB.EQ.2) W2 = ' smearsubstf; M='
      ENDIF
      IF (INDX.EQ.2)  W2 = ' general buck;M='
      IF (INDX.EQ.3) THEN
         IF (ISOGRD.EQ.0.AND.ISUB.EQ.0) W2 = ' smear string;M='
         IF (ISOGRD.EQ.0.AND.ISUB.EQ.1) W2 = ' smear substr;M='
         IF (ISOGRD.EQ.1.AND.ISUB.EQ.0) W2 = ' smear isogrd;M='
         IF (ISOGRD.EQ.1.AND.ISUB.EQ.1) W2 = ' smear subiso;M='
      ENDIF
      IF (INDX.EQ.4)  THEN
         IF (ISUB.EQ.0) W2 = ' smear rings; M='
         IF (ISUB.EQ.1) W2 = ' smear subrng;M='
      ENDIF
C END JUN 2004
      IF (ISOGRD.EQ.0.AND.INDX.EQ.5)  W2 = ' of stringers;M='
C BEG JUN 2004
      IF (INDX.EQ.5.AND.ISUB.EQ.1)    W2 = ' of substring;M='
C END JUN 2004
      IF (ISOGRD.EQ.1.AND.INDX.EQ.5)  W2 = ' of isogrid'//CJ//';M='
C END AUG 1992
      IF (INDX.EQ.6)  W2 = ' of   rings;  M='
C BEG JUN 2004
      IF (INDX.EQ.6.AND.ISUB.EQ.1) W2 = ' of subrings; M='
C END JUN 2004
      IF (INDX.EQ.7)  W2 = ' axisym.rings;M='
C BEG JUN 2004
      IF (INDX.EQ.7.AND.ISUB.EQ.1) W2 = ' axi.subrings;M='
C END JUN 2004
      IF (INDX.EQ.8)  W2 = ' web buckling;M='
      IF (INDX.EQ.9)  W2 = '  under hat;  M='
      IF (INDX.EQ.10) W2 = ' crown of hat;M='
C BEG JULY 1989
      IF (INDX.EQ.11) W2 = ' lower skin;  M='
      IF (INDX.EQ.12) W2 = ' upper skin;  M='
C END JULY 1989
C BEG JUN 1996 (sandwich stuff)
C BEG OCT 1996
      IF (INDX.EQ.13.OR.INDX.EQ.15.OR.INDX.EQ.17.OR.INDX.EQ.19)
     1                              W4 = 'wrinkling '
      IF (INDX.EQ.18)               W4 = 'corecrimp '
      IF (INDX.EQ.20)               W4 = 'localbuck '
C END OCT 1996
      IF (INDX.EQ.14.OR.INDX.EQ.16) W4 = 'dimpling  '
      IF (ISEG.GT.0) CALL CONVR2(ISEG,C5)
      IF (ILOOP.EQ.1) W1 = 'strng Iseg'//C5
      IF (ILOOP.EQ.2) W1 = ' ring Iseg'//C5
C BEG OCT 1996
C23456789012345678901234567890123456789012345678901234567890123456789012
      IF (INDX.EQ.13.OR.INDX.EQ.14.OR.INDX.EQ.17)
     1                                   W2 ='; '//ENDMID//';face 1; M='
      IF (INDX.EQ.15.OR.INDX.EQ.16.OR.INDX.EQ.19)
     1                                   W2 ='; '//ENDMID//';face 2; M='
      IF (INDX.EQ.18)                             W2 =' core crimping  '
      IF (INDX.EQ.20)                             W2 =' local buck.; M='
      IF (INDX.EQ.13.OR.INDX.EQ.14.OR.INDX.EQ.15.OR.INDX.EQ.16)
     1                                            W3 = 'BUSHNL'
      IF (INDX.EQ.17.OR.INDX.EQ.18
     1              .OR.INDX.EQ.19.OR.INDX.EQ.20) W3 = 'VINSON'
C END OCT 1996
C END JUN 1996
C BEG AUG 1998
      W5 = ';(0.95*altsol)'
      IF (IDISCT.EQ.1) W5 = ';(0.85*altsol)'
C END AUG 1998
C BEG SEP 2004
      IF (IDISCT.EQ.3) W5 = ';(1.00*altsol)'
C END SEP 2004
C BEG MAR 2005
      IF (IDISCT.EQ.4) W5 = ';    (altsol4)'
      IF (IDISCT.EQ.5) W5 = ';    (altsol5)'
      IF (IDISCT.EQ.6) W5 = ';    (altsol6)'
C END MAR 2005
C BEG NOV 2003
C BEG SEP 2004
C     IF (INDX.EQ.3.AND.IDISCT.EQ.1) W2 = ' inter-ring;    '
      IF (INDX.EQ.3.AND.(IDISCT.EQ.1.OR.IDISCT.EQ.3))
     1                               W2 = ' inter-ring;    '
C END SEP 2004
C END NOV 2003
C BEG JUN 2004
      IF (ISUB.EQ.1.AND.INDX.EQ.21) W2=' of substring.M='
      IF (ISUB.EQ.1.AND.INDX.EQ.22) W2=' of subrings  N='
      IF (ISUB.EQ.1.AND.INDX.EQ.23) W2=' of subrings    '
C END JUN 2004
C BEG OCT 2004
      IF (ISUB.EQ.1.AND.INDX.EQ.24) W2=' intermajorpatch'
      IF (ISUB.EQ.1.AND.INDX.EQ.25) W2=' skin+edgsubroll'
      IF (ISUB.EQ.1.AND.INDX.EQ.26) W2=' inter-subring  '
C END OCT 2004
      EIGSAF = EIG/FSAFE
      IF (IDESGN.EQ.0.AND.EIGSAF.LT.MAXCON) THEN
         ICAR = ICAR + 1
         MIDWRD = 'MIDLENGTH'
         IF (MIDEND.EQ.2.OR.ICASE.EQ.2) MIDWRD = 'PANEL END'
C BEG APR 1992
         IF (ATRING.AND.ICASE.EQ.2)     MIDWRD = 'AT RINGS '
C END APR 1992
C BEG JUN 1996
C BEG JUN 1998
         IF (INDX.LT.13) THEN
           IF (IALTSL.EQ.0) THEN
            PCWORD(ICAR) =
     1          'buck'//W3//W1//W2(1:14)//' '//MIDWRD
           ELSE
            PCWORD(ICAR) = 
     1          'buck'//W3//W1//W2(1:14)//' '//MIDWRD//W5
           ENDIF
         ENDIF
C BEG OCT 1996
C BEG JUN 2004
C        IF (INDX.GE.13) THEN
         IF (INDX.GE.13.AND.INDX.LE.20) THEN
C END JUN 2004
           IF (IALTSL.EQ.0) THEN
            PCWORD(ICAR) =
     1         W4//VINHOF//';'//W1//W2(1:14)//' '//MIDWRD
           ELSE
            PCWORD(ICAR) =
     1     W4//VINHOF//';'//W1//W2(1:14)//' '//MIDWRD//W5
           ENDIF
         ENDIF
C END JUN 1998
C END OCT 1996
C END JUN 1996
C BEG MAR 2005
         IF (ISUB.EQ.1.AND.
     1   (INDX.EQ.21.OR.INDX.EQ.22.OR.INDX.EQ.23))
     1   PCWORD(ICAR) =
     1    'buck'//W1//W2(1:16)//''//MIDWRD
         IF (ISUB.EQ.1.AND.
     1   (INDX.EQ.24.OR.INDX.EQ.25.OR.INDX.EQ.26))
     1   PCWORD(ICAR) =
     1    'buck'//W1//W2(1:16)//''//MIDWRD//W5
C END MAR 2005
         CPLOT(ICAR) = EIG/FSAFE - 1.
         IADDCC(ICAR) = 0
C BEG MAR 1991
         FSAFEP(ICAR) = FSAFE
C END MAR 1991
      ENDIF
C END 26 JAN 1989
      IF (IDESGN.EQ.0.AND.(EIG/FSAFE).GT.EIGMAX) RETURN
      IF (IDESGN.EQ.1.AND.IPOINC(INUMTT).EQ.0) RETURN
    5 CONTINUE
      IF (IDESGN.EQ.0) IPOINC(INUMTT) = 1
C     WRITE(8,*)' IMOD,INUMTT,IPOINC(INUMTT),EIG=',
C    1          IDESGN,INUMTT,IPOINC(INUMTT),EIG
C BEG OCT 1996
      MORMAR = 0
      IF (IDESGN.EQ.0) THEN
         IF (ICONST.GE.IHICON) THEN
            MORMAR = 1
            WRITE(IFILE,'(A)')
     1    ' TOO MANY CONSTRAINTS. CONSTRAINT THRESHOLD WILL BE RAISED.'
            RETURN
         ENDIF
      ENDIF
C END OCT 1996
      ICONST = ICONST + 1
      CONSTR(ICONST) = EIG/FSAFE
C BEG JUN 1996
C BEG NOV 1996
C BEG JUN 1998
C23456789012345678901234567890123456789012345678901234567890123456789012
      IF (INDX.LT.13) THEN
        IF (IALTSL.EQ.0) THEN
         WORDB(ICONST) =
     1   'buck.'//W3//';'//W1//W2//C1(1:ILK1)//';N='//C2(1:ILK2)//
     1   ';slope='//C3(1:ILK3)//';FS='//C4(1:ILK4)
        ELSE
         WORDB(ICONST) =
     1   'buck.'//W3//';'//W1//W2(1:14)//W5(2:14)//';FS='
     1   //C4(1:ILK4)
        ENDIF
      ENDIF
C BEG OCT 1996
      IF (INDX.GE.13.AND.INDX.LE.16) THEN
        IF (IALTSL.EQ.0) THEN
         WORDB(ICONST) =
     1    W4//';'//W1//W2//CM(1:ILKM)//';N='//CN(1:ILKN)//
     1    ';slope='//C3(1:ILK3)//';FS='//C4(1:ILK4)
        ELSE
         WORDB(ICONST) =
     1    W4//';'//W1//W2(1:14)//W5(2:14)//';FS='//C4(1:ILK4)
        ENDIF
      ENDIF
      IF (INDX.EQ.18) THEN
        IF (IALTSL.EQ.0) THEN
         WORDB(ICONST) =
     1    W4//VINHOF//';'//W1//';'//ENDMID//';'//W2(1:14)//';FS='
     1    //C4(1:ILK4)
        ELSE
         WORDB(ICONST) =
     1    W4//VINHOF//';'//W1//';'//ENDMID//';'//W2(1:14)
     1    //W5(2:14)//';FS='//C4(1:ILK4)
        ENDIF
      ENDIF
      IF (INDX.EQ.17.OR.INDX.EQ.19) THEN
        IF (IALTSL.EQ.0) THEN
         WORDB(ICONST) =
     1   W4//VINHOF//';'//W1//W2//CM(1:ILKM)//';FS='//C4(1:ILK4)
        ELSE
         WORDB(ICONST) =
     1   W4//VINHOF//';'//W1//W2(1:14)//W5(2:14)//';FS='
     1   //C4(1:ILK4)
        ENDIF
      ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
      IF (INDX.EQ.20) THEN
        IF (IALTSL.EQ.0) THEN
         WORDB(ICONST) =
     1   W4//VINHOF//';'//W1//';'//ENDMID//';'//W2//C1(1:ILK1)//
     1   ';FS='//C4(1:ILK4)
        ELSE
         WORDB(ICONST) =
     1   W4//VINHOF//';'//W1//';'//ENDMID//';'//W2(1:14)
     1   //W5(2:14)//';FS='//C4(1:ILK4)
        ENDIF
      ENDIF
C END JUN 1998
C END OCT 1996
C END JUN 1996
C BEG JUN 2004
      IF (ISUB.EQ.1.AND.INDX.EQ.21) WORDB(ICONST) =
     1 'buckling:'//W1//W2//CM(1:ILKM)//';FS='//C4(1:ILK4)
      IF (ISUB.EQ.1.AND.INDX.EQ.22) WORDB(ICONST) =
     1 'buckling:'//W1//W2//CN(1:ILKN)//';FS='//C4(1:ILK4)
      IF (ISUB.EQ.1.AND.INDX.EQ.23) WORDB(ICONST) =
     1 'buckling:'//W1//' buckling '//W2//'; FS='//C4(1:ILK4)
C END JUN 2004
C BEG OCT 2004
      IF (ISUB.EQ.1.AND.INDX.EQ.24) WORDB(ICONST) =
     1 'buckling:'//W1//' altsoln4 '//W2//'; FS='//C4(1:ILK4)
      IF (ISUB.EQ.1.AND.INDX.EQ.25) WORDB(ICONST) =
     1 'buckling:'//W1//' altsoln5 '//W2//'; FS='//C4(1:ILK4)
      IF (ISUB.EQ.1.AND.INDX.EQ.26) WORDB(ICONST) =
     1 'buckling:'//W1//' altsoln6 '//W2//'; FS='//C4(1:ILK4)
C END OCT 2004
C
      IF (IDESGN.EQ.0.OR.NPRT.GE.2) THEN
C BEG JUN 1996
C BEG JUN 1998
         IF (INDX.LT.13) THEN
           IF (IALTSL.EQ.0) THEN
            WORDC =
     1      'buckling load factor '//W1//W2//C1(1:ILK1)//';N='
     1      //C2(1:ILK2)//';slope='//C3(1:ILK3)
           ELSE
            WORDC = 'buckling load factor '//W1//W2(1:14)//W5(2:14)
           ENDIF
         ENDIF
C BEG OCT 1996
         IF (INDX.GE.13.AND.INDX.LE.16) THEN
           IF (IALTSL.EQ.0) THEN
            WORDC =
     1      'load fact. '//W4//W1//W2//CM(1:ILKM)//';N='//CN(1:ILKN)//
     1      ';slope='//C3(1:ILK3)
           ELSE
            WORDC = 'load fact. '//W4//W1//W2(1:14)//W5(2:14)
           ENDIF
         ENDIF
         IF (INDX.EQ.18) THEN
           IF (IALTSL.EQ.0) THEN
            WORDC = 'load fact. '//W4//VINHOF//';'//W1//';'//ENDMID//
     1      ';'//W2(1:14)
           ELSE
            WORDC = 'load fact. '//W4//VINHOF//';'//W1//';'//ENDMID//
     1      ';'//W2(1:14)//W5(2:14)
           ENDIF
         ENDIF
         IF (INDX.EQ.17.OR.INDX.EQ.19) THEN
           IF (IALTSL.EQ.0) THEN
            WORDC =
     1      'load fact. '//W4//VINHOF//';'//W1//W2//CM(1:ILKM)
           ELSE
            WORDC =
     1      'load fact. '//W4//VINHOF//';'//W1//W2(1:14)//W5(2:14)
           ENDIF
         ENDIF
         IF (INDX.EQ.20) THEN
           IF (IALTSL.EQ.0) THEN
            WORDC =
     1      'load fact. '//W4//VINHOF//';'//W1//';'//ENDMID//';'
     1       //W2//C1(1:ILK1)
           ELSE
            WORDC =
     1      'load fact. '//W4//VINHOF//';'//W1//';'//ENDMID//';'
     1       //W2(1:14)//W5(2:14)
           ENDIF
         ENDIF
C BEG JUN 2004
         IF (ISUB.EQ.1.AND.
     1   (INDX.EQ.21.OR.INDX.EQ.22.OR.INDX.EQ.23))
     1   WORDC ='buck. load factor '//W1//W2(1:14)//' '//MIDWRD
C END JUN 2004
C BEG OCT 2004
         IF (ISUB.EQ.1.AND.
     1   (INDX.EQ.24.OR.INDX.EQ.25.OR.INDX.EQ.26))
     1   WORDC ='buck.load factor '//W1//W2(1:16)//''//MIDWRD
C END OCT 2004
C END JUN 1998
C END OCT 1996
C END JUN 1996
C BEG MAY 1997
C        IF (JJJ.EQ.0.AND.NPRT.GE.1) WRITE(IFILE,100) ICONST,EIG,WORDC
         IF (NPRT.GE.1) WRITE(IFILE,100) ICONST,EIG,WORDC
C END MAY 1997
  100 FORMAT(I7,1PE17.5,3X,A74)
      ENDIF
C BEG APR 2007
      IF (NPRT.GE.0) WRITE(8,'(A,1P,E12.4,2X,A)')
     1 ' Margin=',CONSTR(ICONST)-1.,WORDB(ICONST)
C END APR 2007
C
      RETURN
      END
