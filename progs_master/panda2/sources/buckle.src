C=DECK      LOCAL
      SUBROUTINE LOCAL(IMODE,NPRT,N,AXIAL,B,IMOD,M3,INCR,YLOC,IFILE,IW,
     1                 ILOC,DS,AS,BS,DIAG,C,D,DI,X,Y,Z,NSERCH,PHIMIN,
     1                 KOITER,EIG,IYLOC,
     1                 INEG,IREDUC,FKNOCK,IDRW,NBLK,NGBK,
     1                 NKF,IGLOB,IMAXB,KMAXB,IPV2,IBVC,IENMAX,
     1                 IGENRL,JJJ,MLOCAL,BASE,EIGLOC,NLOC,
     1                 EIGHIW,NHIW,ITYPE,ILOW,INDIC,THERMX,THERMS,P,
     1                 KAPPA1,KAPPA2,IFINIS,CS,FNX,FNY,FNXY,RESULT,
     1                 FXBEG,FXEND,FYBEG,FYEND,FXYBEG,FXYEND,FNX0,FNY0,
     1                 FNXY0,R,CX,RESEIG,NMAXX,IABP,LENMOD,ICWEBL,
     1                 TEMP,IMTEMP,WPB1,ICLOOP,FSLOC,FSGEN,
     1                 I5,ITIPLX,WRATPX,EIGSVX,NSAVEX,YSAVE4,JJJTOR,
     1                 W2,EIGITR,IBEAM,DELTAN,RESFIX,ISTIF,TX,ISR,
     1                 NGLOB2,MINTRG,ILABEL,KLAYRS)
C
C  PURPOSE IS TO GET LOCAL BUCKLING LOAD FACTOR AND MODE...
C
      DOUBLE PRECISION AS,BS,C,D,DI,X,Y,Z
C BEG FEB 2006
      COMMON/NSTREX/NMINSR,NMAXSR,ISRMOD(10),ISRIDX
C END FEB 2006
C BEG NOV 1994
      DIMENSION I5(*),YSAVE4(*),EIGFSR(100),WRAT(100),FSLOCX(100)
      DIMENSION NWAVES(100),EIGTMP(100)
C     DIMENSION YP(400)
C END NOV 1994
      DIMENSION TEMP(*)
      CHARACTER*3 CN,CM,CQ
      CHARACTER*80 WORDB
      CHARACTER*7 CN2
      DIMENSION IW(*),ILOC(*),DS(*),AS(*),BS(*),DIAG(*),C(*),D(*)
      DIMENSION IDRW(20,5),NGBK(20),NKF(20),KMAXB(20),IPV2(*),IBVC(*)
      DIMENSION DI(*),X(*),Y(*),Z(*),YLOC(*),TX(*)
      DIMENSION THERMX(6,5),THERMS(*),CS(6,6),RESULT(3,5,2)
      DIMENSION CX(6,6,5),RESEIG(3,5,2)
C BEG NOV 1997
      DIMENSION RESFIX(3,5,2)
C END NOV 1997
C BEG JUN 2004
      COMMON/ISBSTF/KLAYER(4,2),NSURF(2,4,2),NB2(2,4,2),
     1              ISOSUB(2,4,2),ISOTYP(2,4,2),MATSUB(2,4,2)
C END JUN 2004
C BEG FEB 1996
      COMMON/IRESTX/IRESTY
C END FEB 1996
C BEG JUN 1996
      COMMON/XSANDW/ISANDW(4,2),ICORE(4,2)
C END JUN 1996
      COMMON/MATRN2/GTX(2,5),GTY(2,5),GTS(2),TEFF(2)
      COMMON/GEOM3/ISTIFX(2),NLAYER(4,2),NSEGGG(2),INTEXT(2)
      COMMON/KSTARR/EIGOLD,KSTAR
      COMMON/KSTARC/FKSTAR
      REAL KAPPA1,KAPPA2,KSTAR,LENMOD
C BEG OCT 1996
C BEG OCT 1998
      COMMON/ISOGR/ISOGRD,ISOANG
      COMMON/KNOCKY/KLOC(10),ITUTOR,ILOOPS
      DIMENSION NGLOB2(*)
C END OCT 1998
      COMMON/KSTARX/FSTAR1,FSTAR2
      REAL KSTAR1,KSTAR2
C END OCT 1996
C BEG NOV 1997
      COMMON/KSTARQ/KSTARZ
      REAL KSTARZ
C END NOV 1997
C BEG MAY 1997
      COMMON/IZSTIX/IZSTIF(2)
C END MAY 1997
      LOGICAL IPRT
C
C BEG DEC 2004
C     WRITE(8,*)' ENTERING LOCAL.  IMOD, IGLOB, ICWEBL=',
C    1                             IMOD, IGLOB, ICWEBL
C END DEC 2004
C BEG OCT 1996
      IF (IMOD.EQ.0) DELTAN = 0.
C END OCT 1996
C BEG OCT 1998
      IWRITE = 0
C BEG JULY 2006
C     IF (ILABEL.EQ.9340) IWRITE=1
C END JULY 2006
C     IF (IGLOB.EQ.2) IWRITE = 1
C     IF (IGLOB.EQ.0) IWRITE = 1
C END OCT 1998
      IRANGE = 0
   10 CONTINUE
      IRANGE = IRANGE + 1
      KOUNT = 0
      ICHLOW= 0
      FNADD = 2.
      BDIFF = B - BASE
C BEG MAY 1997
C BEG OCT 1998
      IF (IZSTIF(ISR).EQ.1) BDIFF = B
C END OCT 1998
C END MAY 1997
      CDIFF = ABS(CX(4,4,1) - CX(4,4,2))/CX(4,4,1)
C BEG JAN 1996
C     IF (ISTIF.EQ.5) CDIFF = 0.
C     IF (CDIFF.LT.0.1) BDIFF = B
      IF (CDIFF.LT.0.1.AND.ISTIF.NE.5) BDIFF = B
C BEG OCT 1998
      IF (ISR.EQ.2) BDIFF = B
C END OCT 1998
C END JAN 1996
      QUOT = BDIFF/TX(1)
      IF (QUOT.LE.25.) FNADD = 0.
      QUOT = AXIAL/TX(1)
      IF (QUOT.LE.25.) FNADD = 0.
      SQRRAT = SQRT(CX(5,5,1)/CX(4,4,1))
      IF (SQRRAT.LT.1.0) SQRRAT = 1.0
      NHIGH =  SQRRAT*AXIAL/BDIFF + FNADD
C BEG JUN 2004
      IF (KLAYER(1,1).NE.0.AND.NHIGH.GT.MLOCAL) THEN
         SQRRAT = SQRT(SQRRAT)
         NHIGH =  SQRRAT*AXIAL/BDIFF + FNADD
         IF (NHIGH.LT.(MLOCAL+2)) NHIGH = MLOCAL+ 2
      ENDIF
C END JUN 2004
C BEG MAR 1996
C BEG OCT 1998
      IF (IBEAM.EQ.1.AND.IGLOB.NE.2)
     1   NHIGH = 0.5*SQRRAT*AXIAL/BDIFF + FNADD
C END OCT 1998
C BEG JAN 1996
      IF (ISTIF.EQ.4) THEN
         FNHIGH = NHIGH
         IF (FNHIGH.EQ.0.0) FNHIGH = 1.0
         NHITST = AXIAL/(0.5*W2)
         IF (AXIAL/FNHIGH.LT.0.5*W2) NHIGH = MAX(MLOCAL,NHITST)
      ENDIF
C END JAN 1996
      IF (NHIGH.EQ.0) NHIGH = 1
      NMAXX = 10.*NHIGH
C BEG JUN 1996
C BEG JULY 1996
C BEG OCT 1998
      IF (IGLOB.NE.2.AND.IGLOB.NE.1) THEN
         IF (ISANDW(1,1).EQ.1.OR.ISANDW(1,1).EQ.NLAYER(1,1))
     1   NMAXX = MAX(2*MLOCAL,10*NHIGH)
         IF (ISTIF.EQ.4.AND.
     1   (ISANDW(2,1).EQ.1.OR.ISANDW(2,1).EQ.NLAYER(2,1)))
     1   NMAXX = MAX(2*MLOCAL,10*NHIGH)
      ENDIF
C END OCT 1998
C END JULY 1996
C END JUN 1996
C BEG APR 1991
      IF (IGLOB.EQ.-2) NMAXX = 2*N
      IF (NHIGH.GT.NMAXX) NHIGH = NMAXX - 2
C BEG OCT 1998
      IF (IGLOB.EQ.2) THEN
         NHIGH = MAX(20,10*N)
         NMAXX = NHIGH
      ENDIF
C END OCT 1998
      IF (IGLOB.EQ.0.AND.(ITYPE.EQ.4.OR.ITYPE.EQ.5)
     1 .AND.NSERCH.NE.0) THEN
         JJJMOD = MOD(JJJ,3)
C BEG MAR 2005
         JJJMOD = 0
C END MAR 2005
C BEG MAY 1997
         IF (JJJMOD.EQ.0.AND.ICLOOP.LT.2) THEN
            N = 0
            INCR = ABS(INCR)
         ENDIF
C END MAY 1997
      ENDIF
C BEG OCT 1998
      IF (IGLOB.NE.2.AND.N.EQ.0) N = NHIGH
C END OCT 1998
      IF (N.EQ.0) N = 1
      IF (IGLOB.EQ.0.AND.N.LT.MLOCAL.AND.ITYPE.EQ.1.AND.NSERCH.NE.0
     1              .AND.ICLOOP.LT.2) N = NHIGH
C END APR 1991
      IF (N.EQ.0) N = 1
      IF (N.EQ.1) INCR = 1
      NMIN = N
      NMAX = N
C BEG JUN 2004
C23456789012345678901234567890123456789012345678901234567890123456789012
C     IF (NPRT.GE.2) WRITE(8,'(A,/,6I5,1P,4E12.4)')
C    1' IGLOB,N,MLOCAL,NHIGH,NMAXX,NSERCH,SQRRAT,FNADD,AXIAL,BDIFF=',
C    1  IGLOB,N,MLOCAL,NHIGH,NMAXX,NSERCH,SQRRAT,FNADD,AXIAL,BDIFF
C END JUN 2004
      EIGSS=1.E+10
      EIGS= 1.E+10
      EIG = 1.E+10
C BEG OCT 1996
      IF (IGLOB.EQ.0.AND.IMODE.EQ.1) THEN
         FKSTAR = 1.
         KSTAR = 1.
         FSTAR1 = 1.
         FSTAR2 = 1.
      ENDIF
C END OCT 1996
C BEG APR 1991
      IF (IGLOB.LE.-2) KSTAR = 1.
C END APR 1991
      IF (IMOD.EQ.0.AND.IYLOC.EQ.0) CALL MOVER(0.,0,Y,1,2*M3)
      IF (FNX.GE.0.0.AND.FNY.GE.0.0.AND.FNXY.EQ.0.0) THEN
         GO TO 30
      ENDIF
C BEG NOV 1994
C  COMPUTE THE LOCATION IN THE EIGENVECTOR OF THE NODAL POINT
C  THAT CORRESPONDS TO THE TIP OF THE STRINGER WEB
C
C BEG AUG 1995
C BEG OCT 1996
C23456789012345678901234567890123456789012345678901234567890123456789012
      IF (IGLOB.LE.0
     1    .AND.(ISTIF.EQ.1.OR.ISTIF.EQ.2.OR.ISTIF.EQ.3)) THEN
C END OCT 1996
C END AUG 1995
         IWEB = 3
         I5TOT = 0
         DO 5 ISEG = 1,3
            I5I = I5(ISEG)
            IF (ISEG.EQ.IWEB) THEN
               IT = I5TOT + I5I + 1
               I0 = IW(IT)
               ITMID = IT - I5I/2
               IMID = IW(ITMID)
               GO TO 6
            ENDIF
            I5TOT = I5TOT + I5I + 2
    5    CONTINUE
    6    CONTINUE
      ENDIF
C END NOV 1994
C
C BEG MAR 1997
      IF (IGLOB.EQ.-1) THEN
         IDN = 1
         DNS= 1.0
      ENDIF
C END MAR 1997
   20 CONTINUE
C BEG FEB 2006
      IF (IMOD.EQ.0.AND.ILABEL.EQ.9310.AND.ICLOOP.EQ.1
     1                                .AND.NSERCH.NE.0) THEN
         NMINSR = MIN(NMINSR,N)
         NMAXSR = MAX(NMAXSR,N)
      ENDIF
C END FEB 2006
C
C  THIS IMPORTANT CHANGE MADE 6 MARCH, 1986, BECAUSE PANDA2 WAS
C  NOT FINDING THE LOWEST EIGENVALUE FOR BUCKLING OF A FLAT PLATE
C  WITH Nx = 0, Ny = -1, Nxy = 0, a = 20, b = 10. THE STARTING
C  AXIAL WAVENUMBER (M = 4) HAD A MORE COMPLEX MODE THAN DID THE
C  CRITICAL WAVENUMBER (M = 1), AND EBAND2 CONVERGED ON THE MORE
C  COMPLEX MODE INSTEAD OF THE SIMPLER ONE, WHICH CORRESPONDS TO
C  A LOWER EIGENVALUE. WE COMMENT OUT THE FOLLOWING STATEMENT, AND
C  ADD IT AT THE END OF LOCAL INSTEAD.  IN THIS WAY, THE FIRST TIME
C  WE ENTER LOCAL THE RANDOM VECTOR IS USED FOR EVERY WAVENUMBER IN
C  THE SEARCH INSTEAD OF JUST THE FIRST WAVENUMBER.
C
C      IF (KOUNT.GT.0) IYLOC = 1
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG MAR 1997
      IF (IGLOB.EQ.-1) THEN
         DNSS = DNS
         DNS  = IDN
      ENDIF
C END MAR 1997
      DN = 0.07*FLOAT(N) + 1.
C BEG JULY 1996
C BEG APR 1997
C     IF (N.GT.3.AND.IGLOB.EQ.-1.AND.(ISTIF.EQ.4.OR.ISTIF.EQ.5))
      IF (N.GT.20.AND.IGLOB.EQ.-1.AND.(ISTIF.EQ.4.OR.ISTIF.EQ.5))
C END APR 1997
     1   DN=0.2*FLOAT(N) + 1.
C END JULY 1996
C BEG NOV 1990
      IF (IGLOB.EQ.0.AND.ITYPE.EQ.3) DN = 1.0
C END NOV 1990
      IF (DN.LE.1.0) DN = 1.0
C BEG MAR 1997
      IDN = DN
C END MAR 1997
      SINCR = INCR
C BEG MAR 2005
      IF (KOUNT.EQ.0) THEN
         INCRSV = SIGN(DN,SINCR)
         IF (INCRSV.EQ.0) INCRSV = 1
      ENDIF
C END MAR 2005
      INCR = SIGN(DN,SINCR)
      IF (INCR.EQ.0) INCR = 1
      EIGSS= EIGS
      EIGS = EIG
C BEG OCT 1996
      IF (IGLOB.EQ.0.AND.IMODE.EQ.1) THEN
         FKSTRS= KSTAR
         FSTR1S= KSTAR1
         FSTR2S= KSTAR2
      ENDIF
C END OCT 1996
C BEG APR 1991
      IF (IGLOB.EQ.-2) FKSTRS = KSTAR
      IF (INCR.LT.0.AND.IGLOB.EQ.-2.AND.KOUNT.GT.1
     1             .AND.N.LT.(2*NHIW)) GO TO 27
C END APR 1991
      IF (IMOD.EQ.0) CALL TRANS1(M3,Y,YLOC)
      IF (IMOD.EQ.1) CALL TRANS2(M3,YLOC,Y)
C
C BEG FEB 2009
C       IF (IWRITE.EQ.0.AND.ILABEL.EQ.9310) THEN
C          IWRITE = 1
C          NPRTS  = NPRT
C          NPRT = 3
C       ENDIF
C END FEB 2009
        CALL BUCKLE(N,IMOD,IFILE,IW,ILOC,DS,AS,BS,0,DIAG,C,D,DI,X,
     1        Y,Z,EIG,1,IYLOC,RESULT,AXIAL,M3,IDRW,
     1        NBLK,NGBK,NKF,IGLOB,IMAXB,KMAXB,IPV2,IBVC,IENMAX,
     1        INDIC,THERMX,THERMS,P,KAPPA1,KAPPA2,IFINIS,WPRES,IUNK,
     1        CS,FNX,FNY,FNXY,FXBEG,FXEND,FYBEG,FYEND,FXYBEG,FXYEND,
     1        FNX0,FNY0,FNXY0,R,JJJ,IMODE,IABP,LENMOD,0,TEMP,IMTEMP,
C BEG AUG 2001
     1        WPB1,EIGITR,0,0.,IWRITE,0,MINTRG,ILABEL+1)
C END AUG 2001
C BEG FEB 2009
C       IF (ILABEL.EQ.9310) THEN
C          WRITE = 0
C          NPRT  = NPRTS
C       ENDIF
C END FEB 2009
C
        IF (EIG.LE.0.0.AND.IMOD.EQ.0.AND.JJJ.EQ.0) THEN
           WRITE(IFILE,23) EIG
   23      FORMAT(/' *************** NEGATIVE EIGENVALUE *************'/
     1' BUCKLING LOAD FACTOR =',1PE10.2,' . THIS TYPE OF BUCKLING WILL'/
     1' BE IGNORED IN THE OPTIMIZATION ANALYSIS BECAUSE THE LOAD FACTOR'
     1/' IS NEGATIVE. PLEASE CORRECT THE SIGNS OF THE APPLIED LOADS IF'/
     1' YOU DID NOT INTEND TO HAVE TENSILE LOADS.'/
     1' *************************************************************'/)
C
           IF (IGLOB.EQ.1) WRITE(IFILE,24) FXBEG, FXEND, FYBEG
   24      FORMAT(/' APPLIED LOADS THAT VARY ALONG THE PANEL EDGE..'/
     1' AXIAL LOAD AT BEGINNING OF PANEL EDGE, FXBEG=',1PE10.2/
     1' AXIAL LOAD AT    END    OF PANEL EDGE, FXEND=',1PE10.2/
     1' CIRCUMFERENTIAL LOAD (UNIFORM IN PANEL ), N2=',1PE10.2//
     1' IF YOU WANT TO INCLUDE AS A CONSTRAINT ON DESIGN, BUCKLING DUE'/
     1' TO NONUNIFORM AXIAL COMPRESSION, PLEASE MAKE THE LARGEST OF'/
     1' THE TWO GIVEN AXIAL LOADS NEGATIVE AND AT LEAST 30% GREATER'/
     1' IN ABSOLUTE VALUE THAN ANY AXIAL TENSION ALONG THE SAME EDGE.'/
     1' *************** NEGATIVE EIGENVALUE MESSAGE *****************'/)
C
C BEG FEB 1996
C BEG FEB 1999
            CALL LOADBA(1)
C END FEB 1999
            IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
            GO TO 30
         ENDIF
C
C BEG APR 1997
      IF (NSERCH.NE.0) THEN
         KSTAR = 1
         EIGOLD = EIG
      ENDIF
      IF (NSERCH.EQ.0) THEN
C
C  CORRECT FOR TRANSVERSE SHEAR DEFORMATION EFFECTS IN SKIN...
C
C BEG APR 1991
C BEG NOV 1997
         EIGOLD = EIG
C END NOV 1997
         EIGINP = EIG*FKNOCK
         KSTAR1 = 1.0
         KSTAR2 = 1.0
         IF (IGLOB.LE.0) THEN
           CALL SHRRED(IREDUC,RESEIG(1,1,1),RESEIG(2,1,1),
     1     RESEIG(3,1,1),TX(1),TX(1),GTX(1,1),EIGINP,
     1     NPRT,IMOD,JJJ,0.,0.,0,RESFIX(1,1,1),RESFIX(2,1,1),1)
           KSTAR1 = KSTAR
           IF (IREDUC.NE.0.AND.
     1        (ISTIF.EQ.1.OR.ISTIF.EQ.2.OR.ISTIF.EQ.3)) THEN
               WWEB = MAX(ABS(Y(IMID)),ABS(Y(I0)))
               WSKIN = ABS(Y(4))
               WSKWEB = 10.
               IF (WWEB.GT.0.) WSKWEB = WSKIN/WWEB
               IF (WSKWEB.LT.0.5) THEN
                  EIGINP = EIG
                  CALL SHRRED(IREDUC,RESEIG(1,3,1),RESEIG(2,3,1),
     1                     RESEIG(3,3,1),TX(3),TX(3),GTX(1,3),
     1                     EIGINP,NPRT,IMOD,JJJ,0.,0.,0,
     1                     RESFIX(1,3,1),RESFIX(2,3,1),2)
                  KSTAR2 = KSTAR
                  XLOW = 0.0
                  XHIGH= 0.5
                  IF (WSKWEB.LE.0.) KSTAR = KSTAR2
                  IF (WSKWEB.GE.XHIGH) KSTAR = KSTAR1
                  IF (WSKWEB.GT.XLOW.AND.WSKWEB.LT.XHIGH) THEN
                     ATIP = (KSTAR1 - KSTAR2)/(XHIGH - XLOW)
                     BTIP = (KSTAR1 + KSTAR2 - ATIP*(XHIGH + XLOW))/2.
                     KSTAR = ABS(ATIP*WSKWEB + BTIP)
                  ENDIF
                  EIGINP = EIG*FKNOCK*KSTAR
               ENDIF
           ENDIF
         ELSE
C BEG OCT 1998
            IF (IGLOB.EQ.1) THEN
               CALL SHRRED(IREDUC,FNX,FNY,FNXY,TEFF(1),TEFF(2),GTS,
     1                     EIGINP,NPRT,IMOD,JJJ,0.,0.,0,FNX0,FNY0,3)
            ELSE
               IF (ISOGRD.EQ.0) 
     1            CALL SHRRED(IREDUC,FNX,FNY,FNXY,TEFF(1),TX(1),
     1                      GTX(1,5),EIGINP,NPRT,IMOD,JJJ,0.,0.,0,
     1                      FNX0,FNY0,4)
               IF (ISOGRD.EQ.1) 
     1            CALL SHRRED(IREDUC,FNX,FNY,FNXY,TEFF(1),TEFF(1),
     1                      GTX(1,5),EIGINP,NPRT,IMOD,JJJ,0.,0.,0,
     1                      FNX0,FNY0,5)
            ENDIF
C END OCT 1998
         ENDIF
         EIGOUT = EIGINP
C BEG NOV 1997
C        EIGOLD = EIGOUT/(KSTAR*FKNOCK)
C        EIG    = EIGOLD*KSTAR
         EIG    = EIGOUT/FKNOCK
C END NOV 1997
C END APR 1991
      ENDIF
C END APR 1997
C
      IPRT = (IMOD.EQ.0.OR.NPRT.GE.2)
C     IF (NPRT.GT.0.AND.IPRT.AND.N.GT.0.AND.JJJ.EQ.0) THEN
C BEG JAN 2007
      IF (NPRT.GT.0.AND.IPRT.AND.N.GT.0) THEN
C     IF (NPRT.GE.0.AND.IPRT.AND.N.GT.0) THEN
C END JAN 2007
         IF (KOUNT.EQ.0) THEN
C BEG OCT 1998
            IF (IGLOB.NE.2) WRITE(IFILE,21)
   21       FORMAT(/' BUCKLING LOAD FACTORS FROM BOSOR4-TYPE DISCRETIZED
     1 MODEL...'/
     1'          (skin-stringer discretized module of local buckling)'/
     1'  AXIAL     BUCKLING        KNOCKDOWN FOR    KNOCKDOWN FOR      B
     1UCKLING'/
     1'  HALF-    LOAD FACTOR     TRANSVERSE SHEAR  IN-PLANE SHEAR    LO
     1AD FACTOR'/
     1'  WAVES  BEFORE KNOCKDOWN    DEFORMATION     LOADING AND/OR  AFTE
     1R KNOCKDOWN'/
     1'                                               ANISOTROPY'/
     1'    M        EIGOLD             KSTAR            KNOCK     EIGOLD
     1*KSTAR*KNOCK')
            IF (IGLOB.EQ.2) WRITE(IFILE,212)
  212       FORMAT(/' BUCKLING LOAD FACTORS FROM BOSOR4-TYPE DISCRETIZED
     1 MODEL...'/
     1'           (skin-smeared-stringer-ring discretized module)'/
     1'  HOOP      BUCKLING        KNOCKDOWN FOR    KNOCKDOWN FOR      B
     1UCKLING'/
     1'  HALF-    LOAD FACTOR     TRANSVERSE SHEAR  IN-PLANE SHEAR    LO
     1AD FACTOR'/
     1'  WAVES  BEFORE KNOCKDOWN    DEFORMATION     LOADING AND/OR  AFTE
     1R KNOCKDOWN'/
     1'                                               ANISOTROPY'/
     1'    n        EIGOLD             KSTAR            KNOCK     EIGOLD
     1*KSTAR*KNOCK')
C END OCT 1998
          ENDIF
         FKNOCP = FKNOCK
         IF (ISTIF.EQ.5.AND.IGLOB.EQ.-1.AND.N.EQ.1) FKNOCP = 1.0
         WRITE(IFILE,22) N, EIGOLD, KSTAR, FKNOCP, EIG*FKNOCP
   22    FORMAT(I5,1PE17.5,1PE18.5,1PE17.5,1PE16.5)
      ENDIF
C
      KOUNT = KOUNT + 1
C BEG OCT 1998
      IF (IMOD.EQ.0.AND.IGLOB.EQ.2) NGLOB2(KOUNT) = N
C END OCT 1998
      IF (KOUNT.EQ.1) NSAVE = N
      INEG = 0
      IF (NSERCH.EQ.0) THEN
         CALL TRANS1(M3,Y,YLOC)
         IF (IGLOB.NE.1.AND.IMODE.EQ.1) EIGLOC = EIG
         IF (IGLOB.NE.1.AND.IMODE.EQ.1) NLOC   = N
C BEG OCT 1996
         IF (IGLOB.EQ.0.AND.IMODE.EQ.1) THEN
            FKSTAR = KSTAR
            FSTAR1 = KSTAR1
            FSTAR2 = KSTAR2
         ENDIF
C END OCT 1996
         IYLOC = 1
         GO TO 30
      ENDIF
C BEG NOV 1994
C BEG AUG 1995
      IF (INDIC.NE.3.AND.(IGLOB.EQ.0.OR.IGLOB.EQ.-1)
     1    .AND.IMOD.EQ.0.AND.FSLOC.LT.FSGEN
     1    .AND.(ISTIF.EQ.1.OR.ISTIF.EQ.2.OR.ISTIF.EQ.3)
     1    .AND.KOUNT.LT.100.AND.(ICLOOP.LT.2.OR.IGLOB.EQ.-1)) THEN
C END AUG 1995
C      CHECK FOR BENDING-TORSION TYPE OF MODE SHAPE
         WRAT(KOUNT) = 10.
         IF (Y(4).NE.0.) WRAT(KOUNT) = ABS(Y(I0)/Y(4))
         XLOW = 0.5
         XHIGH= 1.0
         WTIPWS = WRAT(KOUNT)
         IF (WTIPWS.LE.XLOW)  FSLOCX(KOUNT) = FSLOC
         IF (WTIPWS.GE.XHIGH) FSLOCX(KOUNT) = FSGEN
         IF (WTIPWS.GT.XLOW.AND.WTIPWS.LT.XHIGH) THEN
            ATIP = (FSGEN - FSLOC)/(XHIGH - XLOW)
            BTIP = (FSGEN + FSLOC - ATIP*(XHIGH + XLOW))/2.
            FSLOCX(KOUNT) = ABS(ATIP*WTIPWS + BTIP)
         ENDIF
         EIGFSR(KOUNT) = EIG*FSLOC/FSLOCX(KOUNT)
         NWAVES(KOUNT) = N
C        CALL TRANS1(M3,Y,YP)
C        WRITE(8,2309) (YP(I),I=1,M3)
C2309    FORMAT(/' EIGENVECTOR, Y='/(1P5E12.4))
C        WRITE(8,2310) KOUNT,N,I0,YP(4),YP(I0),WRAT(KOUNT)
C2310    FORMAT(' KOUNT,N,ITOT,Y(4),Y(ITIP),WRAT(KOUNT)='/3I5,1P3E12.4)
C        WRITE(8,2311) FSLOC,FSGEN,FSLOCX(KOUNT),EIG,EIGFSR(KOUNT)
C2311    FORMAT(' FSLOC,FSGEN,FSLOCX(KOUNT),EIG,EIGFSR(KOUNT)='/
C    1            1P5E12.4)
      ENDIF
C END NOV 1994
C
      DIF = 100.
      IF (IGLOB.EQ.0.AND.EIGS.LT.1.0)
     1    DIF = ABS(EIGS - EIG)/ABS(EIG)
      IF (DIF.LT.0.0005.AND.INCR.GT.0) THEN
C BEG APR 1997
         NSAVED = N
C END APR 1997
         N = N + INCR
         GO TO 20
      ENDIF
C
      IF (EIG.LT.EIGS) THEN
         IF (DIF.LT.0.0005.AND.INCR.LT.0) GO TO 27
         IF (IGLOB.EQ.-1) THEN
            IF (N.EQ.3) THEN
               DIFF2 = EIGSS - 2.*EIGS + EIG
C BEG FEB 1991
               IF (DIFF2.GT.0.0.AND.ICLOOP.LT.2) ICHLOW = 1
            ENDIF
            IF (N.GT.3) THEN
               DIFF2S= DIFF2
C BEG MAR 1997
C              DIFF2 = EIGSS - 2.*EIGS + EIG
               DIFF2 = EIGSS/DNSS -EIGS*(1./DNS +1./DNSS) + EIG/DNS
C              WRITE(8,'(A,/,I3,1P6E12.4)')
C    1       ' N,DIFF2,EIGSS,EIGS,EIG,DNSS,DNS=',
C    1         N,DIFF2,EIGSS,EIGS,EIG,DNSS,DNS
C END MAR 1997
C BEG JULY 1996
               DIFF = ABS(EIGS - EIG)/ABS(EIG)
               NSKIP = 1
               IF ((ISTIF.EQ.4.OR.ISTIF.EQ.5).AND.DIFF.GT.0.01
     1            .AND.NHIW.GT.2*N) NSKIP = 0
C END JULY 1996
               IF (DIFF2.LT.0.0) THEN
                  ICHLOW = 0
C BEG JULY 1996
C                 IF (DIFF2S.GT.0.0.AND.N.LT.(NHIW-2)) GO TO 27
                  IF (NSKIP.EQ.1.AND.DIFF2S.GT.0.0
     1                          .AND.N.LT.(NHIW-2)) GO TO 27
C END JULY 1996
               ENDIF
            ENDIF
C BEG OCT 1996
C           IF ((N.GT.(NHIW-2).AND.N.GT.1).OR.NHIW.EQ.1) THEN
            IF ((N.GT.(NHIW-1).AND.N.GT.1).OR.NHIW.EQ.1) THEN
C END OCT 1996
               NLOC = N
               EIGLOC = EIG
               IF (IMOD.EQ.0.AND.ICLOOP.GE.2) CALL TRANS1(M3,Y,YLOC)
C BEG AUG 1995
               JJJMOD = MOD(JJJ,5)
               IF (JJJ.GT.10.AND.ITYPE.LT.3.AND.ICLOOP.LT.2
     1                      .AND.JJJMOD.NE.0.AND.JJJTOR.EQ.0) ILOW = 1
               IF (ICHLOW.EQ.1.AND.ITYPE.LT.3
     1                        .AND.JJJMOD.NE.0.AND.JJJTOR.EQ.0) THEN
C END AUG 1995
C END FEB 1991
                  ILOW = 1
C BEG AUG 1995
                  WRITE(IFILE,*)' LOW-WAVENUMBER SEARCH MAY BE DROPPED'
                  WRITE(IFILE,*)' DEPENDING ON LOW-M BENDING-TORSION'
C END AUG 1995
               ENDIF
C              WRITE(8,*)' IMOD,N,NHIW=',IMOD,N,NHIW
C BEG AUG 1995
C              GO TO 50
               GO TO 29
C END AUG 1995
            ENDIF
C
            DIFF = ABS(EIGS - EIG)/ABS(EIG)
C BEG JULY 1996
            DCOMP = 0.0005
            IF ((ISTIF.EQ.4.OR.ISTIF.EQ.5).AND.EIG.LT.EIGS
     1         .AND.EIG.GT.5.0.AND.NHIW.GT.5*N.AND.INCR.EQ.1)
     1         DCOMP=0.00001
            IF (DIFF.LT.DCOMP) THEN
C END JULY 1996
               EIGLOC = EIG
               NLOC   = N
C BEG AUG 1995
C              GO TO 30
               GO TO 29
C END AUG 1995
            ENDIF
         ENDIF
C
C BEG APR 1997
         NSAVED = N
C END APR 1997
         N = N + INCR
C
C BEG APR 1991
         IF ((IGLOB.EQ.0.OR.IGLOB.EQ.-2).AND.N.GT.NMAXX) THEN
C BEG DEC 2004
            WRITE(IFILE,'(/,A,I3,A,I3,A,I6,A,I6)')
     1   ' IMOD=',IMOD,';  IGLOB=',IGLOB,'; N=',N,'; NMAXX=',NMAXX
C END DEC 2004
            IF (IGLOB.EQ.0) THEN
               WRITE(IFILE,1017) N, NMAXX
 1017          FORMAT(/' ****** NOTE ******'/
     1' NUMBER OF AXIAL HALFWAVES =',I5,'. MAXIMUM PERMITTED=',I5/
     1' PLEASE INCREASE THE MAXIMUM PERMITTED NUMBER OF AXIAL'/
     1' HALFWAVES, NMAX, OR EXPLORE A LOWER RANGE OF AXIAL HALF-'/
     1' WAVES. IT MIGHT BE A GOOD IDEA TO OBTAIN A PLOT OF'/
     1' THE BUCKLING MODE FOR AXIAL HALFWAVES = NMAX IN ORDER'/
     1' TO SEE WHAT IS GOING ON: IN MAINSETUP, WHEN ASKED IF'/
     1' YOU WANT THE NUMBER OF AXIAL HALFWAVES TO VARY, SAY NO.'/
     1' THEN CHOOSE NMAX AS THE NUMBER OF AXIAL HALFWAVES, AND'/
     1' RUN PLOTTER.  INSPECT THE LOCAL BUCKLING MODE.'/
     1' ********* END NOTE **********'/)
C BEG OCT 1995
C              CALL ERREX
C BEG MAR 1997
               EIGS = EIG
C END MAR 1997
               GO TO 27
C END OCT 1995
            ENDIF
            IF (IGLOB.EQ.-2) THEN
               IF (IMOD.EQ.0) WRITE(IFILE,1018) N,NMAXX
 1018          FORMAT(/' ****** NOTE ******'/
     1' NUMBER OF AXIAL HALFWAVES =',I5,'. MAXIMUM PERMITTED=',I5/
     1' ********* END NOTE **********'/)
               GO TO 27
C END APR 1991
            ENDIF
         ENDIF
C
         IF (N.LE.0) THEN
            IF (IMOD.EQ.0) CALL TRANS1(M3,Y,YLOC)
            N = N - INCR
C BEG APR 1997
            NSAVED = N
C END APR 1997
            IF (IGLOB.NE.1) THEN
               EIGLOC = EIG
               NLOC   = N
C BEG OCT 1996
               IF (IGLOB.EQ.0.AND.IMODE.EQ.1) THEN
                  FKSTAR = KSTAR
                  FSTAR1 = KSTAR1
                  FSTAR2 = KSTAR2
               ENDIF
C END OCT 1996
            ENDIF
            GO TO 28
         ENDIF
C BEG MARCH 1990         (FOLLOWING SEVEN STATEMENTS COMMENTED OUT)
C        IF (IRANGE.EQ.2.AND.KOUNT.GT.1) THEN
C           IF (N.GE.NMINS.AND.N.LE.NMAXS) THEN
C              IF (IMOD.EQ.0) CALL TRANS1(M3,Y,YLOC)
C              N = N - INCR
C              GO TO 28
C           ENDIF
C        ENDIF
C END MARCH 1990
C
         NMIN = MIN(N,NMIN)
         NMAX = MAX(N,NMAX)
         GO TO 20
      ENDIF
C
      IF (KOUNT.EQ.2) THEN
C BEG MAR 2005
         IF (N.GE.15.AND.INCR.GT.0) INCR = INCRSV
C END MAR 2005
         IF (N.LE.14.AND.INCR.GT.0) INCR = INCR/IABS(INCR)
         IF (N.EQ.13.AND.NSAVE.EQ.15.AND.INCR.LT.0) INCR = -2
         N = N - 2*INCR
         IF (N.LE.0) THEN
            N = N + INCR
            EIG = EIGS
C BEG OCT 1996
            IF (IGLOB.EQ.0.AND.IMODE.EQ.1) THEN
               KSTAR = FKSTRS
               KSTAR1= FSTR1S
               KSTAR2= FSTR2S
            ENDIF
C END OCT 1996
C BEG APR 1991
            IF (IGLOB.EQ.-2) KSTAR = FKSTRS
C END APR 1991
            IF (IGLOB.NE.1.AND.IMODE.EQ.1) THEN
               EIGLOC = EIG
               NLOC   = N
C BEG OCT 1996
               IF (IGLOB.EQ.0.AND.IMODE.EQ.1) THEN
                  FKSTAR = KSTAR
                  FSTAR1 = KSTAR1
                  FSTAR2 = KSTAR2
               ENDIF
C END OCT 1996
            ENDIF
            GO TO 28
         ENDIF
         NMIN = MIN(N,NMIN)
         NMAX = MAX(N,NMAX)
         INCR = -INCR
         EIG = EIGS
C BEG OCT 1996
         IF (IGLOB.EQ.0.AND.IMODE.EQ.1) THEN
            KSTAR = FKSTRS
            KSTAR1= FSTR1S
            KSTAR2= FSTR2S
         ENDIF
C END OCT 1996
C BEG APR 1991
         IF (IGLOB.EQ.-2) KSTAR = FKSTRS
C END APR 1991
         IF (IMOD.EQ.0) CALL TRANS2(M3,YLOC,Y)
         GO TO 20
      ENDIF
C
   27 CONTINUE
C
C BEG APR 1997
      IF (IGLOB.EQ.-1) THEN
         N = NSAVED
      ELSE
         N = N - INCR
      ENDIF
C END APR 1997
C BEG MAR 1997
      IF (IGLOB.EQ.0.AND.N.GT.NMAXX) N = NMAXX
C END MAR 1997
      EIG = EIGS
C BEG OCT 1996
      IF (IGLOB.EQ.0.AND.IMODE.EQ.1) THEN
         KSTAR = FKSTRS
         KSTAR1= FSTR1S
         KSTAR2= FSTR2S
      ENDIF
C END OCT 1996
C BEG APR 1991
      IF (IGLOB.EQ.-2) KSTAR = FKSTRS
C END APR 1991
      IF (IGLOB.NE.1.AND.IMODE.EQ.1) THEN
         EIGLOC = EIG
         NLOC   = N
C BEG OCT 1996
         IF (IGLOB.EQ.0.AND.IMODE.EQ.1) THEN
            FKSTAR = KSTAR
            FSTAR1 = KSTAR1
            FSTAR2 = KSTAR2
         ENDIF
C END OCT 1996
      ENDIF
   28 CONTINUE
C BEG NOV 1994
C BEG AUG 1995
   29 CONTINUE
      IF (INDIC.NE.3.AND.(IGLOB.EQ.0.OR.IGLOB.EQ.-1)
     1    .AND.IMOD.EQ.0.AND.FSLOC.LT.FSGEN
     1    .AND.(ISTIF.EQ.1.OR.ISTIF.EQ.2.OR.ISTIF.EQ.3)
     1    .AND.KOUNT.GT.1.AND.KOUNT.LT.100
     1    .AND.(ICLOOP.LT.2.OR.IGLOB.EQ.-1)) THEN
C END AUG 1995
C      EXTRACT BENDING-TORSION MODE SHAPE, EIGENVALUE, WAVENUMBER
  284    CONTINUE
C BEG JULY 1995
C        WRITE(8,2313) (EIGFSR(I),I=1,KOUNT)
C        WRITE(8,2314) (NWAVES(I),I=1,KOUNT)
C        WRITE(8,2315) (FSLOCX(I),I=1,KOUNT)
C        WRITE(8,2316) (  WRAT(I),I=1,KOUNT)
C END JULY 1995
 2313    FORMAT(/' EIGFSR(I),I=1,KOUNT)='/(1P8E10.2))
 2314    FORMAT(/' NWAVES(I),I=1,KOUNT)='/(8I9))
 2315    FORMAT(/' FSLOCX(I),I=1,KOUNT)='/(1P8E10.2))
 2316    FORMAT(/'   WRAT(I),I=1,KOUNT)='/(1P8E10.2))
         EIGMIN = EIGFSR(1)
         DO 285 I = 1,KOUNT
            EIGMIN = MIN(EIGMIN,EIGFSR(I))
  285    CONTINUE
         DO 286 I = 1,KOUNT
            DIF = ABS(EIGFSR(I) - EIGMIN)/ABS(EIGMIN)
            IF (DIF.LT.0.00001) THEN
               ICRIT = I
               IF (ICRIT.GE.3.AND.NWAVES(ICRIT).EQ.1) THEN
                  CALL MOVER(EIGFSR,1,EIGTMP,1,KOUNT)
                  EIGTMP(ICRIT) = 2.0*EIGTMP(ICRIT-1)
                  EIGMN2 = EIGTMP(1)
                  DO 287 II = 1,KOUNT
                     EIGMN2 = MIN(EIGMN2,EIGTMP(II))
  287             CONTINUE
                  IF (EIGMN2.LT.1.1*EIGFSR(ICRIT)) THEN
                     EIGFSR(ICRIT) = 1.1*EIGFSR(ICRIT-1)
                     GO TO 284
                  ENDIF
                  IF (WRAT(I).LT.0.8) THEN
                     ISIG = 0
                     DO 289 II = 1,KOUNT
                        IF (WRAT(II).LT.0.8)
     1                     EIGTMP(II) = 10000.*EIGFSR(ICRIT)
                        IF (WRAT(II).GE.0.8) ISIG = 1
  289                CONTINUE
                     EIGMN3 = EIGTMP(1)
                     DO 290 II = 1,KOUNT
                        EIGMN3 = MIN(EIGMN3,EIGTMP(II))
  290                CONTINUE
                     IF (EIGMN3.LT.1.0.AND.ISIG.EQ.1) THEN
                        CALL MOVER(EIGTMP,1,EIGFSR,1,KOUNT)
                        GO TO 284
                     ENDIF
                  ENDIF
               ENDIF
               IF (WRAT(I).LT.0.8) GO TO 288
               IF (NWAVES(I).EQ.NLOC) GO TO 288
               NSAVEX = NWAVES(I)
               EIGSVX = EIGFSR(I)*FSLOCX(I)/FSLOC
               WRATPX = WRAT(I)
               ITIPLX = 1
               CALL MOVER(0.,0,Y,1,2*M3)
               CALL BUCKLE(NSAVEX,IMOD,IFILE,IW,ILOC,DS,AS,BS,0,DIAG,
     1          C,D,DI,X,Y,Z,EIGDUM,1,0,RESULT,AXIAL,M3,IDRW,
     1          NBLK,NGBK,NKF,IGLOB,IMAXB,KMAXB,IPV2,IBVC,IENMAX,
     1          INDIC,THERMX,THERMS,P,KAPPA1,KAPPA2,IFINIS,WPRES,IUNK,
     1          CS,FNX,FNY,FNXY,FXBEG,FXEND,FYBEG,FYEND,FXYBEG,FXYEND,
     1          FNX0,FNY0,FNXY0,R,JJJ,IMODE,IABP,LENMOD,0,TEMP,IMTEMP,
C BEG AUG 2001
     1          WPB1,EIGITR,0,0.,0,0,MINTRG,ILABEL+2)
C END AUG 2001
               CALL TRANS1(M3,Y,YSAVE4)
C BEG JULY 1995
C              WRITE(8,*)' NSAVEX,EIGSVX,WRATPX,ITIPLX=',
C    1                     NSAVEX,EIGSVX,WRATPX,ITIPLX
C END JULY 1995
               GO TO 288
            ENDIF
  286    CONTINUE
  288    CONTINUE
      ENDIF
C END NOV 1994
   30 CONTINUE
   50 CONTINUE
C BEG APR 1997
      IF (NSERCH.NE.0) THEN
C
C  CORRECT FOR TRANSVERSE SHEAR DEFORMATION EFFECTS IN SKIN...
C
         CALL TRANS2(M3,YLOC,Y)
C BEG NOV 1997
         EIGOLD = EIG
C END NOV 1997
         EIGINP = EIG*FKNOCK
         KSTAR1 = 1.0
         KSTAR2 = 1.0
         IF (IGLOB.LE.0) THEN
           CALL SHRRED(IREDUC,RESEIG(1,1,1),RESEIG(2,1,1),
     1     RESEIG(3,1,1),TX(1),TX(1),GTX(1,1),EIGINP,
     1     NPRT,IMOD,JJJ,0.,0.,0,RESFIX(1,1,1),RESFIX(2,1,1),6)
           KSTAR1 = KSTAR
           IF (IREDUC.NE.0.AND.
     1        (ISTIF.EQ.1.OR.ISTIF.EQ.2.OR.ISTIF.EQ.3)) THEN
               WWEB = MAX(ABS(Y(IMID)),ABS(Y(I0)))
               WSKIN = ABS(Y(4))
               WSKWEB = 10.
               IF (WWEB.GT.0.) WSKWEB = WSKIN/WWEB
               IF (WSKWEB.LT.0.5) THEN
                  EIGINP = EIG
                  CALL SHRRED(IREDUC,RESEIG(1,3,1),RESEIG(2,3,1),
     1                     RESEIG(3,3,1),TX(3),TX(3),GTX(1,3),
     1                     EIGINP,NPRT,IMOD,JJJ,0.,0.,0,
     1                     RESFIX(1,3,1),RESFIX(2,3,1),7)
                  KSTAR2 = KSTAR
                  XLOW = 0.0
                  XHIGH= 0.5
                  IF (WSKWEB.LE.0.) KSTAR = KSTAR2
                  IF (WSKWEB.GE.XHIGH) KSTAR = KSTAR1
                  IF (WSKWEB.GT.XLOW.AND.WSKWEB.LT.XHIGH) THEN
                     ATIP = (KSTAR1 - KSTAR2)/(XHIGH - XLOW)
                     BTIP = (KSTAR1 + KSTAR2 - ATIP*(XHIGH + XLOW))/2.
                     KSTAR = ABS(ATIP*WSKWEB + BTIP)
                  ENDIF
                  EIGINP = EIG*FKNOCK*KSTAR
               ENDIF
           ENDIF
         ELSE
C BEG OCT 1998
            IF (IGLOB.EQ.1) THEN
               CALL SHRRED(IREDUC,FNX,FNY,FNXY,TEFF(1),TEFF(2),GTS,
     1                     EIGINP,NPRT,IMOD,JJJ,0.,0.,0,FNX0,FNY0,8)
            ELSE
               IF (ISOGRD.EQ.0) 
     1            CALL SHRRED(IREDUC,FNX,FNY,FNXY,TEFF(1),TX(1),
     1                      GTX(1,5),EIGINP,NPRT,IMOD,JJJ,0.,0.,0,
     1                      FNX0,FNY0,9)
               IF (ISOGRD.EQ.1) 
     1            CALL SHRRED(IREDUC,FNX,FNY,FNXY,TEFF(1),TEFF(1),
     1                      GTX(1,5),EIGINP,NPRT,IMOD,JJJ,0.,0.,0,
     1                      FNX0,FNY0,10)
            ENDIF
C END OCT 1998
         ENDIF
         EIGOUT = EIGINP
C BEG NOV 1997
C        EIGOLD = EIGOUT/(KSTAR*FKNOCK)
C        EIG    = EIGOLD*KSTAR
         EIG    = EIGOUT/FKNOCK
C END NOV 1997
         IF (NPRT.GT.0.AND.IPRT.AND.N.GT.0) THEN
            FKNOCP = FKNOCK
            IF (ISTIF.EQ.5.AND.IGLOB.EQ.-1.AND.N.EQ.1) FKNOCP = 1.0
            WRITE(IFILE,22) N, EIGOLD, KSTAR, FKNOCP, EIG*FKNOCP
         ENDIF
         IF (IGLOB.EQ.0.AND.IMODE.EQ.1) THEN
            FKSTAR = KSTAR
            FSTAR1 = KSTAR1
            FSTAR2 = KSTAR2
         ENDIF
         IF (IGLOB.NE.1.AND.IMODE.EQ.1) THEN
            EIGLOC = EIG
            NLOC   = N
         ENDIF
      ENDIF
C END APR 1997
C BEG NOV 1997
      KSTARZ = EIGOUT/(EIGOLD*FKNOCK)
      IF (KSTARZ.GT.KSTAR) KSTARZ = KSTAR
C END NOV 1997
C
C   FOLLOWING STATEMENT ADDED 6 MARCH, 1986...
C
      IF (KOUNT.GT.0) IYLOC = 1
C
C BEG OCT 1996
C   PERFORM ITERATIVE REFINEMENT UNDER CERTAIN CONDITIONS:
C     IF (IMOD.EQ.0.AND.IGLOB.EQ.0.AND.IYLOC.EQ.1..AND.INDIC.NE.3) THEN
      IF (ILOOPS.EQ.1.AND.IGLOB.EQ.0
     1               .AND.IYLOC.EQ.1.AND.INDIC.NE.3) THEN
        DELTN2 = 0.0
        IF (IMOD.EQ.0) THEN
           DELTAN = 0.
           CALL TRANS2(M3,YLOC,Y)
           DELTN2 = 0.
        ENDIF
        CALL BUCKLE(NLOC,IMOD,IFILE,IW,ILOC,DS,AS,BS,0,DIAG,C,D,DI,X,
     1        Y,Z,EIG0,1,IYLOC,RESULT,AXIAL,M3,IDRW,
     1        NBLK,NGBK,NKF,IGLOB,IMAXB,KMAXB,IPV2,IBVC,IENMAX,
     1        INDIC,THERMX,THERMS,P,KAPPA1,KAPPA2,IFINIS,WPRES,IUNK,
     1        CS,FNX,FNY,FNXY,FXBEG,FXEND,FYBEG,FYEND,FXYBEG,FXYEND,
     1        FNX0,FNY0,FNXY0,R,JJJ,IMODE,IABP,LENMOD,0,TEMP,IMTEMP,
C BEG AUG 2001
     1        WPB1,EIGITR,0,DELTAN,0,0,MINTRG,ILABEL+3)
C END AUG 2001
C BEG APR 1997
C BEG NOV 1997
C       IF (IMOD.EQ.1) EIGLOC = EIG0*KSTAR
        IF (IMOD.EQ.1) EIGLOC = EIG0*KSTARZ
C END NOV 1997
C END APR 1997
C23456789012345678901234567890123456789012345678901234567890123456789012
        IF (NPRT.GE.2) WRITE(IFILE,'(/,A,I6,/,A,1P,E12.4,A,1P,E12.4)')
     1' In the iterative refinement section: No.of axial halfwaves, m=',
     1  NLOC,' dm =',DELTAN,', Eigenvalue (without knockdowns)=',EIG0
        IF (IMOD.EQ.0) CALL TRANS1(M3,Y,YLOC)
        IF (IMOD.EQ.0.AND.NLOC.GE.2.AND.NLOC.LE.8) THEN
           IF (IMOD.EQ.0) DELTAN = +0.5
           CALL BUCKLE(NLOC,IMOD,IFILE,IW,ILOC,DS,AS,BS,0,DIAG,C,D,
     1        DI,X,Y,Z,EIGP,1,IYLOC,RESULT,AXIAL,M3,IDRW,
     1        NBLK,NGBK,NKF,IGLOB,IMAXB,KMAXB,IPV2,IBVC,IENMAX,
     1        INDIC,THERMX,THERMS,P,KAPPA1,KAPPA2,IFINIS,WPRES,IUNK,
     1        CS,FNX,FNY,FNXY,FXBEG,FXEND,FYBEG,FYEND,FXYBEG,FXYEND,
     1        FNX0,FNY0,FNXY0,R,JJJ,IMODE,IABP,LENMOD,0,TEMP,IMTEMP,
C BEG AUG 2001
     1        WPB1,EIGITR,0,DELTAN+DELTN2,0,0,MINTRG,ILABEL+4)
C END AUG 2001
           IF (NPRT.GE.2)
     1        WRITE(IFILE,'(/,A,I6,/,A,1P,E12.4,A,1P,E12.4)')
     1' In the iterative refinement section: No.of axial halfwaves, m=',
     1     NLOC,' dm =',DELTAN+DELTN2,
     1    ', Eigenvalue (without knockdowns)=',EIGP
           IF (IMOD.EQ.0) DELTAN = -0.5
           CALL BUCKLE(NLOC,IMOD,IFILE,IW,ILOC,DS,AS,BS,0,DIAG,C,D,
     1        DI,X,Y,Z,EIGM,1,IYLOC,RESULT,AXIAL,M3,IDRW,
     1        NBLK,NGBK,NKF,IGLOB,IMAXB,KMAXB,IPV2,IBVC,IENMAX,
     1        INDIC,THERMX,THERMS,P,KAPPA1,KAPPA2,IFINIS,WPRES,IUNK,
     1        CS,FNX,FNY,FNXY,FXBEG,FXEND,FYBEG,FYEND,FXYBEG,FXYEND,
     1        FNX0,FNY0,FNXY0,R,JJJ,IMODE,IABP,LENMOD,0,TEMP,IMTEMP,
C BEG AUG 2001
     1        WPB1,EIGITR,0,DELTAN-DELTN2,0,0,MINTRG,ILABEL+5)
C END AUG 2001
           IF (NPRT.GE.2)
     1        WRITE(IFILE,'(/,A,I6,/,A,1P,E12.4,A,1P,E12.4)')
     1' In the iterative refinement section: No.of axial halfwaves, m=',
     1     NLOC,' dm =',DELTAN-DELTN2,
     1    ', Eigenvalue (without knockdowns)=',EIGM
           DELTN2 = 0.
           IF (IMOD.EQ.0) DELTAN = 0.
           Y1 = EIGM - EIG0
           Y3 = EIGP - EIG0
           IF ((Y1+Y3).GT.0.0) DELTN2 = 0.25*(Y1-Y3)/(Y1+Y3)
           IF (Y1.LT.0.0.AND.Y3.LT.0.0) DELTN2 = 0.
           IF (ABS(DELTN2).GE.0.5) DELTN2 = 0.5*DELTN2/ABS(DELTN2)
           IF (NLOC.EQ.2.AND.(DELTAN+DELTN2).LT.0.0) DELTN2 = 0.
           CALL BUCKLE(NLOC,IMOD,IFILE,IW,ILOC,DS,AS,BS,0,DIAG,C,D, 
     1        DI,X,Y,Z,EIGF,1,IYLOC,RESULT,AXIAL,M3,IDRW,
     1        NBLK,NGBK,NKF,IGLOB,IMAXB,KMAXB,IPV2,IBVC,IENMAX,
     1        INDIC,THERMX,THERMS,P,KAPPA1,KAPPA2,IFINIS,WPRES,IUNK,
     1        CS,FNX,FNY,FNXY,FXBEG,FXEND,FYBEG,FYEND,FXYBEG,FXYEND,
     1        FNX0,FNY0,FNXY0,R,JJJ,IMODE,IABP,LENMOD,0,TEMP,IMTEMP,
C BEG AUG 2001
     1        WPB1,EIGITR,0,DELTAN+DELTN2,0,0,MINTRG,ILABEL+6)
C END AUG 2001
           IF (NPRT.GE.2)
     1        WRITE(IFILE,'(/,A,I6,/,A,1P,E12.4,A,1P,E12.4)')
     1' In the iterative refinement section: No.of axial halfwaves, m=',
     1     NLOC,' dm =',DELTAN+DELTN2,
     1    ', Eigenvalue (without knockdowns)=',EIGF
           IF (IMOD.EQ.0) DELTAN = DELTN2
C BEG NOV 1997
C          EIGLOC = EIGF*KSTAR
           EIGLOC = EIGF*KSTARZ
C END NOV 1997
        ENDIF
        IF (IMOD.EQ.0) CALL TRANS1(M3,Y,YLOC)
 2221   CONTINUE
        IF (NPRT.GE.0) THEN
           DMPRNT = DELTAN+DELTN2
           IF (IMOD.EQ.0) DMPRNT = DELTAN
           WRITE(IFILE,'(/,A,1P,E12.4)')
     1   ' Value of dm used in SUBROUTINE ARRAYS=',DMPRNT
           WRITE(IFILE,'(A,I2,A,1P,E12.4,/,A,1P,E12.4)')
     1   ' IMOD=',IMOD,'; Eigenvalue passed to STRUCT=',EIGLOC,
     1   ' Knockdown for transverse shear deformation=',KSTAR
        ENDIF
      ENDIF
C END OCT 1996
C BEG FEB 1996
 2222 CONTINUE
      IF (IMOD.EQ.0) EIGITR = EIGLOC
C END FEB 1996
      RETURN
      END
C
C
C
C=DECK      LOCCON
      SUBROUTINE LOCCON(IMODE,IGLOB,ICWEBL,INUMTT,EIG,FKNOCK,FSAFE,
     1                  ISTIF,IGENRL,EIGHIW,IMOD,N,NLOC,NHIW,CONMAX,
     1              IPOINC,CONSTR,ICONST,WORDB,IPANDA,ITIPL,KOUBCK,
C BEG OCT 2004
     1              ICALL,IFLGL)
C END OCT 2004
C
C  PURPOSE IS TO GENERATE CONSTRAINT CONDITIONS RELATED TO LOCAL
C  BUCKLING OF THE PANEL VIA THE DISCRETIZED (BOSOR4-TYPE) PANEL
C  MODULE MODEL
C
C BEG APR 2007
      COMMON/OUTP/NPRT
C END APR 2007
      COMMON/WORDS5/PCWORD(99)
      COMMON/POSTB3/PBBOW(20)
      COMMON/PLOTCD/ICAR,IADDCC(99),CPLOT(99)
      COMMON/FSAFEB/FSAFEP(99)
      COMMON/MARK44/MARK4
      DIMENSION ISTIF(*),IPOINC(*),CONSTR(*),WORDB(*)
      CHARACTER*80 PCWORD,WORDB
      CHARACTER*7 CN2
      CHARACTER*3 CN,CM,CQ
C
      IF (IGLOB.EQ.-1) THEN
         IF ((N.GT.(NHIW-2).AND.N.GT.1).OR.NHIW.EQ.1) GO TO 50
      ENDIF
C
      IF (IMODE.GT.1) GO TO 40
C BEG OCT 2004
      IF (IGLOB.EQ.-1.AND.
     1 (ICWEBL.EQ.1.OR.ITIPL.EQ.1.OR.IFLGL.EQ.1)) GO TO 40
C END OCT 2004
C
      INUMTT = INUMTT + 1
C
      EIGTST = EIG*FKNOCK/FSAFE
C
      IF (EIG.LE.0.) GO TO 40
      IF (ISTIF(1).EQ.0.AND.ISTIF(2).EQ.0.AND.
     1       IGLOB.EQ.0.AND.IGENRL.EQ.1) GO TO 40
C
      EIGCON = EIG*FKNOCK/FSAFE
      IF (EIGCON.LT.0.) GO TO 40
      IF (IGLOB.EQ.-1) THEN
         IF (ISTIF(1).NE.5.AND.MARK4.EQ.0)
C BEG NOV 1994
     1      EIGCON = .80 +(EIG -EIGHIW)/ABS(EIGHIW)
C    1      EIGCON = .95 +(EIG -EIGHIW)/ABS(EIGHIW)
C END NOV 1994
         IF (ISTIF(1).EQ.5) EIGCON = EIG/FSAFE
      ENDIF
C
      IF (IMOD.EQ.0) THEN
         ICAR = ICAR + 1
         CALL CONVRT(N,CN)
         CALL CONVRF(FSAFE,CN2)
         IF (IGLOB.EQ.0) THEN
C BEG NOV 2006
          IF (ICALL.NE.8) THEN
C END NOV 2006
C BEG FEB 2009
            IF (IPANDA.EQ.0.AND.ICALL.NE.9) PCWORD(ICAR) =
     1   'Local buckling: discrete model'
            IF (IPANDA.EQ.0.AND.ICALL.EQ.9) PCWORD(ICAR) =
     1   'skin-substrnger discrete model'
C END FEB 2009
            IF (IPANDA.EQ.1) PCWORD(ICAR) =
     1   'Local buckling:    PANDA model'
            IF (KOUBCK.EQ.0) THEN
               PBBOW(9) = EIGCON*FSAFE
               PBBOW(10)= NLOC
            ENDIF
C BEG NOV 2006
          ELSE
            PCWORD(ICAR) = 'Hi-m skin-stringer buck., discrete model'
          ENDIF
C END NOV 2006
         ELSE
C  End of (IGLOB.EQ.0) condition.
C BEG OCT 1998
            IF (IGLOB.EQ.1.OR.IGLOB.EQ.2) THEN
               IF (IGLOB.EQ.1)
     1          PCWORD(ICAR) = 'General bucklng from discrete model'
               IF (IGLOB.EQ.2.AND.ITIPL.EQ.0.AND.ICALL.EQ.3)
     1          PCWORD(ICAR) = 'Inter-ring buckling, discrete model'
               IF (IGLOB.EQ.2.AND.ITIPL.EQ.1.AND.ICALL.EQ.3)
     1          PCWORD(ICAR) = 'Ring sidesway buck., discrete model'
               IF (IGLOB.EQ.2.AND.ICWEBL.EQ.1.AND.ICALL.EQ.3)
     1          PCWORD(ICAR) = 'Ring web buckling,   discrete model'
C BEG OCT 2004
               IF (IGLOB.EQ.2.AND.IFLGL.EQ.1.AND.ICALL.EQ.3)
     1          PCWORD(ICAR) = 'Ring flange buckling,discrete model'
C END OCT 2004
C
               IF (IGLOB.EQ.2.AND.ITIPL.EQ.0.AND.ICALL.EQ.4)
     1          PCWORD(ICAR) = 'Hi-n Inter-ring buc.,discrete model'
               IF (IGLOB.EQ.2.AND.ITIPL.EQ.1.AND.ICALL.EQ.4)
     1          PCWORD(ICAR) = 'Hi-n Ring sidesway,  discrete model'
               IF (IGLOB.EQ.2.AND.ICWEBL.EQ.1.AND.ICALL.EQ.4)
     1          PCWORD(ICAR) = 'Hi-n Ring web buck., discrete model'
C BEG OCT 2004
               IF (IGLOB.EQ.2.AND.IFLGL.EQ.1.AND.ICALL.EQ.4)
     1          PCWORD(ICAR) = 'Hi-n Ring flng buck.,discrete model'
C END OCT 2004
C
               IF (IGLOB.EQ.2.AND.ITIPL.EQ.0.AND.ICALL.EQ.5)
     1          PCWORD(ICAR) = 'Lo-n Inter-ring buc.,discrete model'
               IF (IGLOB.EQ.2.AND.ITIPL.EQ.1.AND.ICALL.EQ.5)
     1          PCWORD(ICAR) = 'Lo-n Ring sidesway,  discrete model'
               IF (IGLOB.EQ.2.AND.ICWEBL.EQ.1.AND.ICALL.EQ.5)
     1          PCWORD(ICAR) = 'Lo-n Ring web buck., discrete model'
C BEG OCT 2004
               IF (IGLOB.EQ.2.AND.IFLGL.EQ.1.AND.ICALL.EQ.5)
     1          PCWORD(ICAR) = 'Lo-n Ring flng buck.,discrete model'
C END OCT 2004
C END OCT 1998
            ELSE
C     End of (IGLOB.EQ.1.OR.IGLOB.EQ.2) condition.
               CALL CONVRT(NLOC,CM)
               IF (ISTIF(1).NE.5) THEN
                  IF (MARK4.EQ.0) THEN
                     CALL CONVRT(NHIW,CN)
                     CQ = '   '
                     PCWORD(ICAR) =
C BEG NOV 1994
     1              'long-wave local buck.mode=1.2 x short-wave mode'
C    1              'long-wave local buck.mode=1.05x short-wave mode'
C END NOV 1994
                  ELSE
                     PCWORD(ICAR) =
     1              'long-wave local buckling mode, discrete model  '
                  ENDIF
               ELSE
                  PCWORD(ICAR) =
     1           'local wide-column buckling mode, discrete model'
               ENDIF
            ENDIF
C    End of "ELSE" (IGLOB.EQ.1.OR.IGLOB.EQ.2) condition.
         ENDIF
C  End of "ELSE" (IGLOB.EQ.0) condition.
         CPLOT(ICAR) = EIGCON - 1.
         IADDCC(ICAR) = 0
         FSAFEP(ICAR) = FSAFE
      ENDIF
C End of (IMOD.EQ.0) condition.
C
      IF (IMOD.EQ.0.AND.EIGCON.GT.CONMAX) GO TO 40
      IF (IMOD.EQ.1.AND.IPOINC(INUMTT).EQ.0) GO TO 40
      ICONST = ICONST + 1
      IF (IMOD.EQ.0) IPOINC(INUMTT) = 1
      CONSTR(ICONST) = EIGCON
      CALL CONVRT(N,CN)
      CALL CONVRF(FSAFE,CN2)
C
      IF (IGLOB.EQ.0) THEN
C BEG NOV 2006
       IF (ICALL.NE.8) THEN
C END NOV 2006
C BEG FEB 2009
         IF (IPANDA.EQ.0.AND.ICALL.NE.9) WORDB(ICONST) =
     1   'Local buckling from discrete model-1.,M='//CN//' axial ha'//
     1'lfwaves;FS='//CN2
         IF (IPANDA.EQ.0.AND.ICALL.EQ.9) WORDB(ICONST) =
     1   'skin-substringer discrete model-1.,M='//CN//' axial ha'//
     1'lfwaves;FS='//CN2
C END FEB 2009
         IF (IPANDA.EQ.1) WORDB(ICONST) =
     1   'Local buckling from PANDA model-1.,M='//CN//' axial ha'//
     1'lfwaves;FS='//CN2
C BEG NOV 2006
       ELSE
         WORDB(ICONST) =
     1   'Hi-m skin-stringer, discrete model-1.,M='//CN//' axial ha'//
     1'lfwaves;FS='//CN2
       ENDIF
C END NOV 2006
      ELSE
C End of (IGLOB.EQ.0) condition.
C BEG OCT 1998
         IF (IGLOB.EQ.1.OR.IGLOB.EQ.2) THEN
            IF (IGLOB.EQ.1) WORDB(ICONST) =
     1   'General buckling, discrete model, M='//CN//' axial ha'//
     1'lfwaves;FS='//CN2
            IF (IGLOB.EQ.2.AND.ITIPL.EQ.0.AND.ICALL.EQ.3)
     1       WORDB(ICONST) =
     1   'Inter-ring bucklng, discrete model, n='//CN//' circ.ha'//
     1'lfwaves;FS='//CN2
            IF (IGLOB.EQ.2.AND.ITIPL.EQ.1.AND.ICALL.EQ.3)
     1       WORDB(ICONST) =
     1   'Ring sidesway buk., discrete model, n='//CN//' circ.ha'//
     1'lfwaves;FS='//CN2
            IF (IGLOB.EQ.2.AND.ICWEBL.EQ.1.AND.ICALL.EQ.3)
     1       WORDB(ICONST) =
     1   'Ring web buckling, discrete model, n='//CN//' circ.ha'//
     1'lfwaves;FS='//CN2
C BEG OCT 2004
            IF (IGLOB.EQ.2.AND.IFLGL.EQ.1.AND.ICALL.EQ.3)
     1       WORDB(ICONST) =
     1   'Ring flang buckling,discrete model,n='//CN//' circ.ha'//
     1'lfwaves;FS='//CN2
C END OCT 2004
C
            IF (IGLOB.EQ.2.AND.ITIPL.EQ.0.AND.ICALL.EQ.4)
     1       WORDB(ICONST) =
     1   'Hi-n Inter-ring buck.,discrete model,n='//CN//' circ.ha'//
     1'lfwaves;FS='//CN2
            IF (IGLOB.EQ.2.AND.ITIPL.EQ.1.AND.ICALL.EQ.4)
     1       WORDB(ICONST) =
     1   'Hi-n Ring sidesway, discrete model, n='//CN//' circ.ha'//
     1'lfwaves;FS='//CN2
            IF (IGLOB.EQ.2.AND.ICWEBL.EQ.1.AND.ICALL.EQ.4)
     1       WORDB(ICONST) =
     1   'Hi-n Ring web buckl.,discrete model, n='//CN//' circ.ha'//
     1'lfwaves;FS='//CN2
C BEG OCT 2004
            IF (IGLOB.EQ.2.AND.IFLGL.EQ.1.AND.ICALL.EQ.4)
     1       WORDB(ICONST) =
     1   'Hi-n Ring flang buckl.discrete model,n='//CN//' circ.ha'//
     1'lfwaves;FS='//CN2
C END OCT 2004
C
            IF (IGLOB.EQ.2.AND.ITIPL.EQ.0.AND.ICALL.EQ.5)
     1       WORDB(ICONST) =
     1   'Lo-n Inter-ring buck.,discrete model,n='//CN//' circ.ha'//
     1'lfwaves;FS='//CN2
            IF (IGLOB.EQ.2.AND.ITIPL.EQ.1.AND.ICALL.EQ.5)
     1       WORDB(ICONST) =
     1   'Lo-n Ring sidesway, discrete model, n='//CN//' circ.ha'//
     1'lfwaves;FS='//CN2
            IF (IGLOB.EQ.2.AND.ICWEBL.EQ.1.AND.ICALL.EQ.5)
     1       WORDB(ICONST) =
     1   'Lo-n Ring web buckl., discrete model, n='//CN//' circ.ha'//
     1'lfwaves;FS='//CN2
C BEG OCT 2004
            IF (IGLOB.EQ.2.AND.IFLGL.EQ.1.AND.ICALL.EQ.5)
     1       WORDB(ICONST) =
     1   'Lo-n Ring flang buckl.discrete model,n='//CN//' circ.ha'//
     1'lfwaves;FS='//CN2
C END OCT 2004
C END OCT 1998
         ELSE
C   End of (IGLOB.EQ.1.OR.IGLOB.EQ.2) condition.
            CALL CONVRT(NLOC,CM)
            IF (ISTIF(1).NE.5) THEN
               IF (MARK4.EQ.0) THEN
                  CALL CONVRT(NHIW,CN)
                  WORDB(ICONST) =
C BEG NOV 1994
     1'long-wave local buck:-.2+[eig(m='//CM//')-eig(m='//CN//')]/ei'//
C    1'long-wave local buck:-.05+[eig(m='//CM//')-eig(m='//CN//')]/e'//
     1'g(m='//CM//');FS=1.0'
C END NOV 1994
               ELSE
                  WORDB(ICONST) =
     1'long-wave local buckling, discrete model(m='//CM//' axial h'//
     1'alfwav);FS='//CN2
               ENDIF
            ELSE
               WORDB(ICONST) =
     1'local wide-column bucking, discrete model(m='//CM//' axial h'//
     1'alfwav);FS='//CN2
               EIG = EIG/FKNOCK
            ENDIF
         ENDIF
C   End of "ELSE" (IGLOB.EQ.1.OR.IGLOB.EQ.2) condition.
      ENDIF
C End of "ELSE" (IGLOB.EQ.0) condition.
C
C BEG APR 2007
      IF (NPRT.GE.0) WRITE(8,'(A,1P,E12.4,2X,A)')
     1 ' Margin=',CONSTR(ICONST)-1.,WORDB(ICONST)
C END APR 2007
   40 CONTINUE
C
      EIG = EIG*FKNOCK
C
   50 CONTINUE
C
      RETURN
      END
C
C
C
C=DECK      TRANS1
      SUBROUTINE TRANS1(M3,Y,Z)
C
C  PURPOSE IS TO COPY Y INTO Z
C
      DOUBLE PRECISION Y
      DIMENSION Y(*),Z(*)
C
      DO 10 I = 1,M3
   10 Z(I) = Y(I)
C
      RETURN
      END
C
C
C
C=DECK      TRANS2
      SUBROUTINE TRANS2(M3,Z,Y)
      DOUBLE PRECISION Y
      DIMENSION Y(*),Z(*)
      DO 10 I = 1,M3
   10 Y(I) = Z(I)
      RETURN
      END
C
C
C
C=DECK      TRANS3
      SUBROUTINE TRANS3(M3,Y,Z)
      DIMENSION Y(*),Z(*)
      DO 10 I = 1,M3
   10 Z(I) = Y(I)
      RETURN
      END
C
C
C
C=DECK      GLOBVC
      SUBROUTINE GLOBVC(I5I,CIRC,NGEN,IW,Y)
C
C  PURPOSE IS TO GENERATE AN INITIAL VECTOR FOR EBAND2 FOR GENERAL
C  INSTABILITY, BOSOR4-TYPE DISCRETE MODEL.  THE PREDICTED MODE FROM
C  THE PANDA-TYPE OF ANALYSIS (NGEN) IS USED.
C
      DOUBLE PRECISION Y
      DIMENSION IW(*),Y(*)
C
      FN = NGEN
      PI = 3.1415927
C
      DO 100 I = 1,I5I
C
      II  = I + 1
      IROW = IW(II)
      S    = FLOAT(I-1)*CIRC/FLOAT(I5I-1)
      ARG  = FN*PI*S/CIRC
      Y(IROW) = SIN(ARG)
  100 CONTINUE
      IROW1 = IW(1)
      IROW2 = IW(3)
      Y(IROW1) = - Y(IROW2)
      IROW1 = IW(I5I)
      IROW2 = IW(I5I+2)
      Y(IROW2) = - Y(IROW1)
      RETURN
      END
C
C
C
C=DECK      BUCKLE
      SUBROUTINE BUCKLE(N,IMOD,IFILE,IW,ILOC,DS,AS,BS,
     1        ISTORE,DIAG,C,D,DI,X,Y,Z,EIG,
     1        ILOCAL,IYBEG,RESULT,AXIAL,M3,IDRW,NBLK,
     1        NGBK,NKF,IGLOB,IMAXB,KMAXB,IPV2,IBVC,IENMAX,
     1        INDIC,THERMX,THERMS,P,KAPPA1,KAPPA2,IFINIS,WPRES,IUNK,
     1        CS,FNX,FNY,FNXY,FXBEG,FXEND,FYBEG,FYEND,FXYBEG,FXYEND,
     1        FNX0,FNY0,FNXY0,R,JJJ,IMODE,IABP,LENMOD,IFREEX,
     1        TEMP,IMTEMP,WPB1,EIGITR,ICTAN,DELTAN,IWRITE,ITOR,
C BEG AUG 2001
     1        MINTRG,ILABEL)
C END AUG 2001
C END OCT 1998
C
C  PURPOSE IS TO GET GENERAL OR LOCAL BUCKLING OF PANEL MODULE
C  ALSO, THE LINEAR STATIC RESPONSE TO PRESSURE AND THERMAL LOADING
C  CAN BE OBTAINED (INDIC = 3)
C
C BEG FEB 2009
C  substringer stuff...
      COMMON/SEGSZ/NSEGZ,M2Z,I5Z(95),I2GZ,I2GGZ
      COMMON/LOCATZ/ILOCPZ,ILOCBZ,IRWCPZ(98),IRWCBZ(98),IIWPZ,IIWBZ
      COMMON/NCONDZ/NCONDZ
      COMMON/RING3Z/D1Z(98),D2Z(98)
      COMMON/JUNCTZ/IFIXBZ(588),IFXBZ(588),ITYPEZ(98)
      COMMON/ALLSUB/CXXSUB(6,6,5)
      COMMON/NVARSB/NXVSUB(23,8),NYVSUB(23,8),NXYVSB(23,8)
      COMMON/NFIXSB/NXFSUB(23,8),NYFSUB(23,8),NXYFSB(23,8)
      REAL NXVSUB, NYVSUB, NXYVSB, NXFSUB, NYFSUB, NXYFSB
      DIMENSION IZDUM(2),IFAYDM(2)
C END FEB 2009
C BEG JUN 2004
      COMMON/CSUBXY/CSUBX(6,6),CSUBY(6,6),THSUBX(6),THSUBY(6),
     1                                    THCSBX(6),THCSBY(6)
      COMMON/GEOM0S/B0SUB(2),B20SUB(2),H0SUB(2),W0SUB(2),W20SUB(2)
      COMMON/GEOM2S/BSUBX(2),B2SUBX(2),HSUBX(2),WSUBX(2),W2SUBX(2)
      COMMON/GEOM3S/ISTFSB(2),NLAYSB(4,2),NSEGSB(2),INTXSB(2)
      COMMON/ISBSTF/KLAYER(4,2),NSURF(2,4,2),NB2(2,4,2),
     1              ISOSUB(2,4,2),ISOTYP(2,4,2),MATSUB(2,4,2)
      COMMON/SUBSPC/SPCNG(2,4,2),CX0(6,6,5),CY0(6,6,5),
     1    THRMX0(6,5),THRMY0(6,5),TCURX0(6,5),TCURY0(6,5),
     1    TX0(5),TY0(5),GTX0(2,5),GTY0(2,5),TXX(2,5),TYY(2,5),
     1    GTSSUB(2,5)
      COMMON/INTRGX/INTRNG
      COMMON/RADM14/IICURV
      COMMON/GEOM5/RAD2,CURV2
      COMMON/PRWAVE/NAFN
      COMMON/GLOBPP/IGLOBP
      COMMON/TANSTF/C11TAN(23,8),C12TAN(23,8),C22TAN(23,8),C33TAN(23,8)
      COMMON/NCONDS/NCONDB
      COMMON/RING3/D1B(98),D2B(98)
      COMMON/JUNCT/IFIX(98,6),IFX(98,6),ITYPE(98)
      COMMON/JUNCTB/IFIXB(98,6),IFXB(98,6),ITYPEB(98)
      COMMON/LOCATN/ILOCP,ILOCB,IROWCP(98),IROWCB(98),IIWP,IIWB
      COMMON/NVARXX/NXVAR(23,8),NYVAR(23,8),NXYVAR(23,8),MAXSEG,KOIT
      COMMON/RADM13/WG1S,WYYGNS,WYYPNS,WYYLCS,RADNEW
      REAL NXVAR,NYVAR,NXYVAR
      REAL NXFIX,NYFIX,NXYFIX
      COMMON/NFIX/NXFIX(23,8),NYFIX(23,8),NXYFIX(23,8)
      COMMON/SEGSR/NSEGR,M2R,I5R(95),I2GR,I2GGR
      COMMON/LOCATR/ILOCPR,ILOCBR,IRWCPR(98),IRWCBR(98),IIWPR,IIWBR
C BEG APR 2009
      COMMON/NCONDX/NCONDR
C END APR 2009
      COMMON/RING3R/D1R(98),D2R(98)
      COMMON/JUNCTR/IFIXBR(588),IFXBR(588),ITYPER(98)
      COMMON/IZSTIX/IZSTIF(2)
      COMMON/GEOM6/IFAY(2),ITRTOT,IRESET,NLOADS,NSTEPS,WMAX,NCROSS,
     1       NOPLOT,KMAX,ILAYPL,XMXX,XMIN,YMXX,YMIN,N3DPLT,NOBJ,NSTRNS,
     1       NPLTST,NABSCI,IDIAG,ITRALL,IFAYT(2),IBEAM,IONEST,IMISCL(4)
      COMMON/WEBTH6/FCXWEB(11),FCXWBA(11),FCXWBB(11),FCXWBT(11)
      COMMON/WEBTH7/FCYWEB(11),FCYWBA(11),FCYWBB(11),FCYWBT(11)
      COMMON/FNYYPX/FNYYP(30),FNYYP0(30),FXXXP(30),RNGSPA
      COMMON/FNYYPY/IXNUMB,IXNMBA,IXNMBB,IXNMBT
      COMMON/WLOCAA/POPISA,POPISB,POPRNA,POPRNB,DFNYPA,DFNYPB,DFNYP0
      COMMON/ISOGR/ISOGRD,ISOANG
      COMMON/FCERNG/FCEWEB,FCEFLG,FCEWBA,FCEFGA,FCEWBB,FCEFGB,
     1              FCEWBT,FCEFGT
      COMMON/ORTA/IFLGG,KTM,KROOTS
      COMMON/GEOM0/B0(2),B20(2),H0(2),W0(2),W20(2)
      COMMON/GEOM2/B(2),B2(2),H(2),W(2),W2(2)
      COMMON/ALLCIJ/CX(6,6,5),CY(6,6,5),CSXXX(6,6)
      COMMON/XFOUND/EFOUND,HXSIDE,WFOUND(4,2),HEXSID(4,2)
      COMMON/XSANDW/ISANDW(4,2),ICORE(4,2)
      COMMON/MAXSHR/SHEAR(2),XMAX,YMAX
      COMMON/FREEDG/IFREE
      COMMON/PRERNG/PNXVAR(23,8),PNYVAR(23,8),PNXFIX(23,8),PNYFIX(23,8)
      COMMON/NEUTRL/DNEUTX,DNEUTY,DSURF
      COMMON/GNNSTB/EIGGEN,EIGLOC,EIGTST,FBOUND,EIGTHM
      COMMON/BNDLAY/BLL
      COMMON/JHYDRO/IHYDRO
      COMMON/WEBTH1/CX3(6,6,11),CY3(6,6,11),THRMX3(6,11),THRMY3(6,11)
C END JUN 2004
      DOUBLE PRECISION AS,BS,C,D,DI,X,Y,Z
      DIMENSION IW(*),ILOC(*),DS(*),AS(*),BS(*),DIAG(*),C(*),D(*),DI(*)
      DIMENSION X(*),Y(*),Z(*),RESULT(3,5,2),THERMX(6,5),THERMS(*)
      DIMENSION KMAXB(*),IPV2(*),IBVC(*),CS(6,6)
      COMMON/GEOM3/ISTIF(2),NLAYER(4,2),NSEG(2),INTEXT(2)
      DIMENSION IDRW(20,5),NGBK(20),NKF(20)
      COMMON/OUTP/NPRT
      COMMON/SEGS/NSEGB5,M2,I5(95),I2,I2G
      COMMON/EIGNO/NVEC,EGV(50),AXB
      COMMON/FNP0/FNXP0,FNYP0,FNXYP0,FNXPL0,FNYPL0,FNXYPL
      COMMON/BYLOCP/IFREEY
C BEG OCT 1998
      COMMON/WLPRSX/WLPRES
C END OCT 1998
      COMMON/GEOM1/AXXIAL,CIRC,RRRR
      COMMON/DELIM4/DELFCR(3,4),DELWBR(2)
      COMMON/LODS11/WBEIG(2,4,2),WBTOT(2,4,2),WBSULT(2,4,2)
      COMMON/LOADS3/RESEIG(3,5,2)
      COMMON/LOADS5/RESTOT(3,5,2)
      COMMON/IPRNTR/IPRINT
C END OCT 1998
C BEG MAR 1993
      COMMON/EDGCON/PEDG
      LOGICAL PEDG
      COMMON/THICK/TX(5),TY(5)
C END MAR 1993
      DIMENSION TEMP(*)
      REAL KAPPA1,KAPPA2,LENMOD
C
C BEG JUN 2004
C     IF (NPRT.GE.2) WRITE(8,'(A,I5)')
C    1' Entering BUCKLE: ILABEL=',ILABEL
C END JUN 2004
      ITER = 0
    5 CONTINUE
      ITER = ITER + 1
C BEG FEB 2009
      IF (ILABEL.LT.9465.OR.ILABEL.GT.9467) THEN
      IF (IGLOB.EQ.0.OR.IGLOB.EQ.-1.OR.IGLOB.LE.-2)
     1 CALL ARRAYS(IFILE,IW,ILOC,DS,N,AS,BS,ILOCAL,RESULT,AXIAL,
     1             INDIC,X,THERMX,P,Z,KAPPA1,KAPPA2,IFINIS,R,IMODE,
     1             LENMOD,0,TEMP,IMTEMP,WPB1,IGLOB,ITER,ICTAN,DELTAN,
     1             IWRITE,ITOR,ILABEL,IMOD,
     1       B,B2,B0,B20,H,H0,W,W0,W2,W20,IZSTIF,ISTIF,NSEGB5,M2,
     1       I5,M3,NCONDB,D1B,D2B,IFIX,IFX,ITYPE,IFIXB,
     1       IFXB,ITYPEB,IMAXB,KMAXB,ILOCB,
     1       IROWCB,IIWB,IDRW,NBLK,NGBK,NKF,INTEXT,RAD2,
     1       CURV2,NXVAR,NYVAR,WG1S,WYYGNS,WYYPNS,WYYLCS,RADNEW,
     1       NXFIX,NYFIX,C11TAN,C12TAN,C22TAN,C33TAN,
     1       CX,CY,IBEAM,IONEST,IICURV,WFOUND,ISANDW,NLAYER,IFREE,
     1       KROOTS,AXXIAL,CIRC,BLL,NAFN,CX3,TX0,TY0,
     1       IFREEY,IGLOBP,IFAY,NPRT,MAXSEG,IFAYT,NXYVAR,NXYFIX)
C
      ELSE
C
       IZDUM(1) = 0
       IZDUM(2) = 0
       IFAYDM(1) = 0
       IFAYDM(2) = 0
C
       CALL ARRAYS(IFILE,IW,ILOC,DS,N,AS,BS,ILOCAL,RESULT,BSUBX(2),
     1             INDIC,X,THRMX0,P,Z,KAPPA1,KAPPA2,IFINIS,R,IMODE,
     1             LENMOD, 0, TEMP, 0, 0.,IGLOB,ITER, 0, 0.,
     1             IWRITE,ITOR,ILABEL,IMOD,
     1       BSUBX,B2SUBX,B0SUB,B20SUB,HSUBX,H0SUB,WSUBX,W0SUB,
     1       W2SUBX,W20SUB,IZDUM,ISTFSB,NSEGZ,M2Z,
     1       I5Z,M3Z,NCONDZ,D1Z,D2Z,IFIX,IFX,ITYPE,IFIXBZ,
     1       IFXBZ,ITYPEZ,IMAXB,KMAXB,ILOCBZ,
     1       IRWCBZ,IIWBZ,IDRW,NBLK,NGBK,NKF,INTXSB,RAD2,
     1       CURV2,NXVSUB,NYVSUB,WG1S,WYYGNS,WYYPNS,WYYLCS,RADNEW,
     1       NXFSUB,NYFSUB,C11TAN,C12TAN,C22TAN,C33TAN,
     1       CXXSUB,CY,0,0,IICURV,WFOUND,ISANDW,NLAYSB,IFREE,
     1       KROOTS,AXXIAL,CIRC,BLL,NAFN,CX3,TX0,TY0,
     1       IFREEY,IGLOBP,IFAYDM,NPRT,MAXSEG,IFAYDM,NXYVSB,NXYFSB)
C
      ENDIF
C END FEB 2009
C BEG OCT 1998
      IF (IGLOB.EQ.2) CALL ARRYS2(IFILE,IW,ILOC,DS,N,AS,BS,R,CIRC,TEMP,
     1                  IMTEMP,IWRITE,ITOR,RESEIG,RESTOT,DELFCR,DELWBR,
C BEG AUG 2001
     1                  WBEIG,WBTOT,FNX,FNX0,DELTAN,IPRINT,MINTRG,IMOD,
     1                  P,ILABEL,
C BEG JUN 2004
     1       B,B2,B0,B20,H,H0,W,W0,W2,W20,IZSTIF,ISTIF,NSEGR,
     1       I5R,M3,NCONDR,D1R,D2R,IFIXBR,
     1       IFXBR,ITYPER,IMAXB,KMAXB,ILOCBR,
     1       IRWCBR,IIWBR,IDRW,NBLK,NGBK,NKF,
     1       FCXWEB,FCXWBA,FCXWBB,FCYWEB,FCYWBA,FCYWBB,
     1       CX,IICURV,WFOUND,ISANDW,NLAYER,IFREE,
C BEG JAN 2005
     1       KROOTS,TX0,CS,
     1       CY3,INTRNG,IFAY,TY0,CY,NPRT,FCEFLG,FCEFGB,
C END JAN 2005
     1       IXNUMB,POPISA,POPISB,POPRNA,POPRNB,ISOGRD,PEDG,
     1       PNXVAR,PNYVAR,PNXFIX,PNYFIX,FNYYP,FNYYP0,FXXXP)
C END JUN 2004
C END AUG 2001
C END OCT 1998
      IF (IGLOB.EQ.1) CALL GLOBAX(IFILE,IW,ILOC,DS,N,AS,BS,INDIC,X,
     1        THERMS,P,Z,KAPPA1,KAPPA2,IFINIS,RESULT,
     1        CS,FNX,FNY,FNXY,FXBEG,FXEND,FYBEG,FYEND,FXYBEG,FXYEND,
     1        FNX0,FNY0,FNXY0,R,IMODE,IABP,LENMOD,IFREEX,TEMP,IMTEMP,
C BEG MAR 1996
C BEG OCT 1996
C BEG JULY 1997
C BEG JUN 2004
     1        WPB1,ITER,DELTAN,IWRITE,ITOR,IMOD,
     1        CX,IBEAM,IONEST,IICURV,WFOUND,ISANDW,NLAYER,B20,IFREE,
C BEG JAN 2005
     1        KROOTS,AXIAL,CIRC,BLL,B,B2,W,W2,CURV2,NAFN,CX3,TX0,
C END JAN 2005
     1        IFREEY,IGLOBP,RAD2,W20)
C END JUN 2004
C END JULY 1997
C END OCT 1996
C END MAR 1996
C END JUNE 1992
C
      IF (IFINIS.EQ.1) RETURN
      IF (INDIC.EQ.3) THEN
C BEG JUN 2004
         CALL FACTR(BS,AS,IDRW(1,1),DET,NEX,NBLK,NGBK,NKF,ILOC,
     1              DIAG,DI,KMAXB,KTM)
C END JUN 2004
C BEG AUG 1997
         IF (IWRITE.EQ.1) THEN
           WRITE(8,'(A,I4)')' BEFORE SOLVE...M3=',M3
           WRITE(8,'(A,/,(1P10E12.4))')' (Z(I),I=1,M3)=', (Z(I),I=1,M3)
         ENDIF
C END AUG 1997
         CALL SOLVE(AS,Z,NBLK,IDRW(1,1),NGBK,ILOC,DIAG,M3,1)
         DO 10 I = 1,M3
   10    X(I) = X(I) + Z(I)
C
C BEG AUG 1997
         IF (IWRITE.EQ.1) THEN
            WRITE(8,*)' AFTER SOLVE...'
            WRITE(8,1015)IGLOB,ITER,ISTIF(1),P,(X(I),I=1,M3)
 1015    FORMAT(/' IGLOB =',I2,'.  SOLUTION AFTER ',I2,' ITERATIONS...'/
     1  ' ISTIF(1) = ',I1,';  PRESSURE, P =',1PE12.4,'; SOLN VECTOR='/
     1   (1P10E12.4))
         ENDIF
C END AUG 1997
C
         IUNK = 4
         IF (ISTIF(1).EQ.5.AND.P.LT.0.) IUNK = 24
         IF (ISTIF(1).EQ.5.AND.P.GT.0.) IUNK = 118
         IF (IGLOB.EQ.1) IUNK = M3/2 + 1
C
         IF (IGLOB.EQ.1.AND.IFREEX.EQ.1) THEN
            IF ((IMOD.EQ.0.AND.JJJ.EQ.0.AND.NPRT.GE.1).OR.NPRT.GE.2) 
     1          WRITE(IFILE,20) ITER, Z(IUNK),X(IUNK)
            IF (IGLOB.EQ.1) WPRES = X(IUNK)
            RETURN
         ENDIF
C
C        IF (IGLOB.EQ.0.AND.IFREEY.EQ.1) THEN
C           IF ((IMOD.EQ.0.AND.JJJ.EQ.0.AND.NPRT.GE.1).OR.NPRT.GE.2) 
C    1          WRITE(IFILE,20) ITER, Z(IUNK),X(IUNK)
C           RETURN
C        ENDIF
C
         RAT = ABS(Z(IUNK)/X(IUNK))
         IF (RAT.GT.0.01.OR.ITER.LT.3) THEN
            IF (NPRT.GE.2) WRITE(IFILE,15) ITER,Z(IUNK),X(IUNK)
   15       FORMAT(' PANEL DEFORMATION UNDER PRESSURE NOT YET CONVERGED.
     1  Newton iteration no.',I3,'; DW=',1PE10.2,'; W=',1PE10.2)
C BEG MAR 1993
            ITMAX = 60
            IF (PEDG.AND.ITER.EQ.15.AND.IGLOB.NE.1
C BEG JAN 2005
     1              .AND.ABS(X(IUNK)).LT.0.001*TX0(1)) ITMAX = 14
C END JAN 2005
            IF (ITER.LE.ITMAX) GO TO 5
            IF (IGLOB.EQ.1) WRITE(IFILE,16)
            IF (IGLOB.NE.1.AND.ITMAX.EQ.60) WRITE(IFILE,17)
C END MAR 1993
   16       FORMAT(/' NO CONVERGENCE OF NONLINEAR STATIC RESPONSE TO'/
     1              ' UNIFORM PRESSURE. PROBABLY THE PANEL BUCKLES IN'/
     1              ' A GENERAL INSTABILITY MODE DUE TO THE APPLIED'/
     1              ' IN-PLANE LOADS Nx, Ny, Nxy  PLUS Nxo, Nyo, Nxyo.'/
     1              ' THIS NONLINEAR STATIC ANALYSIS OF THE ENTIRE'/
     1              ' PANEL IS BEING TERMINATED. A NONLINEAR STATIC'/
     1              ' ANALYSIS OF A SINGLE PANEL MODULE WILL BE'/
     1              ' CONDUCTED.'/)
   17       FORMAT(/' NO CONVERGENCE OF NONLINEAR STATIC RESPONSE TO'/
     1              ' UNIFORM PRESSURE. PROBABLY THE PANEL MODULE'/
     1              ' BUCKLES LIKE A WIDE COLUMN DUE TO THE APPLIED'/
     1              ' IN-PLANE LOADS Nx, Ny, Nxy  PLUS Nxo, Nyo, Nxyo.'/
     1              ' THIS NONLINEAR STATIC ANALYSIS OF THE SINGLE'/
     1              ' PANEL MODULE IS BEING TERMINATED, AND THE '/
     1              ' RESULTS FROM THE PREVIOUS ITERATIONS WILL BE'/
     1              ' IGNORED IN SUBSEQUENT ANALYSES.'/)
            IUNK = 0
            RETURN
         ELSE
            IF ((IMOD.EQ.0.AND.JJJ.EQ.0.AND.NPRT.GE.1).OR.NPRT.GE.2) 
     1          WRITE(IFILE,20) ITER, Z(IUNK),X(IUNK)
   20       FORMAT(' PANEL DEFORMATION UNDER NORMAL PRESSURE HAS CONVERG
     1ED.'/
     1'  Newton iterations required = ',I3/
     1'  Last Increment in normal displacement between stiffeners, DW=',
     1   1PE12.4/
     1'  Final  value  for normal displacement between stiffeners,  W=',
     1   1PE12.4/)
C
C BEG OCT 1998
            IF (IGLOB.EQ.0) THEN
               WLPRES = X(IUNK)
               IF (NPRT.GE.2) WRITE(IFILE,'(A,1P,E12.4,/,A)')
     1       ' Local "pillowing" between stringers, WLPRES=',WLPRES,
     1      ' before possible reduction by factor, PLOCF (ITEM 117(g)).'
            ENDIF
            IF (IGLOB.EQ.1) THEN
               WPRES = X(IUNK)
               IF (NPRT.GE.2) WRITE(IFILE,'(A,1P,E12.4)')
     1       ' Bowing of panel under pressure, WPRES=',WPRES
            ENDIF
C END OCT 1998
            RETURN
         ENDIF
      ENDIF
C
      IF (IGLOB.EQ.-1) THEN
C BEG FEB 1996
        IEBAND= 0
        IF (IMOD.EQ.1) THEN
           CALL RAYLEY(IFILE,M3,NBLK,IDRW,NGBK,ILOC,2,AS,BS,Y,X,EIG)
           DIFEIG = 1.0
           IF (EIGITR.GT.0.) DIFEIG = ABS(EIGITR-EIG)/EIGITR
           IF (DIFEIG.GT.0.3) IEBAND = 1
C          WRITE(8,*)' AFTER RAYLEY:DIFEIG,IEBAND,EIGITR,EIG=',
C    1                              DIFEIG,IEBAND,EIGITR,EIG
        ENDIF
        IF (IMOD.NE.1.OR.IEBAND.EQ.1) THEN
           CALL EBAND2(IFILE,ISTORE,N,ILOC,DIAG,AS,BS,C,D,DI,
     1                 X,Y,Z,IYBEG,M3,NBLK,IDRW,NGBK,NKF,
     1                 IMAXB,KMAXB,1,IPV2,IBVC,IENMAX,IGLOB,
C BEG JUN 2004
     1                 ILOCAL,ITER,FNX,FNY,IFLGG,KTM,KROOTS)
C END JUN 2004
           IF (IEBAND.EQ.1) EIG = EGV(1)
        ENDIF
C END FEB 1996
      ELSE
C BEG JUL 1999
C       IF (IMOD.EQ.1.AND.ILOCAL.EQ.0) THEN
        IF (IMOD.EQ.1.AND.ILOCAL.EQ.0.AND.IGLOB.NE.-4) THEN
C END JUL 1999
           CALL RAYLEY(IFILE,M3,NBLK,IDRW,NGBK,ILOC,2,AS,BS,Y,X,EIG)
        ELSE
          CALL EBAND2(IFILE,ISTORE,N,ILOC,DIAG,AS,BS,C,D,DI,X,Y,Z,IYBEG,
     1                M3,NBLK,IDRW,NGBK,NKF,IMAXB,KMAXB,1,IPV2,IBVC,
C BEG JUN 2004 
     1                IENMAX,IGLOB,ILOCAL,ITER,FNX,FNY,IFLGG,KTM,KROOTS)
C END JUN 2004 
C
          EIG = EGV(1)
        ENDIF
      ENDIF
C
      IF (IMOD.NE.1) EIG = EGV(1)
C
      RETURN
      END
C
C
C
C=DECK      STFEIG
      SUBROUTINE STFEIG(MIDEND,ISTIF,B,B2,H,W,W2,CX,CY,RESULT,RESFIX,
     1                  ICONST,CONSTR,WORDB,IADDB,ISKIN,
     1                  TX,TY,GTX,GTY,IREDUC,CONMAX,IPOINC,INUMTT,IMOD,
     1                  ICRIP,MSKIN,NSKIN,IFILE,JJJ,RWBTOT,RWBEIG,ICASE,
C BEG JULY 1997
     1           FSBSTR,EIGLCS,ILAMB2,ILAM34,ILAM44,ISWTCH,ITRUSS,ICWEB,
C END JULY 1997
C BEG JULY 1995
C BEG NOV 2003
C BEG JUN 2004
     1                  ICROWN,FKNOCK,IPROMP,IQUICK,WBEIG,NOPO,IBLADE,
C BEG DEC 2005
C BEG FEB 2006
     1                  ABIG,BBIG,LABEL,ILOADS,FSLOC)
C END FEB 2006
C END DEC 2005
C END JUN 2004
C END NOV 2003
C END JULY 1995
C
C  PURPOSE IS TO GET CRIPPLING OF STIFFENER PARTS
C
C BEG JUN 2004
      COMMON/ISBSTF/KLAYER(4,2),NSURF(2,4,2),NB2(2,4,2),
     1              ISOSUB(2,4,2),ISOTYP(2,4,2),MATSUB(2,4,2)
C END JUN 2004
C BEG NOV 2003
      DIMENSION IBLADE(*)
C END NOV 2003
C BEG FEB 1996
      COMMON/IRESTX/IRESTY
C END FEB 1996
C BEG JUN 1996 (ELASTIC FOUNDATION)
      COMMON/GEOM3/IISTIF(2),NLAYER(4,2),NSEG(2),INTEXT(2)
      COMMON/XFOUND/EFOUND,HXSIDE,WFOUND(4,2),HEXSID(4,2)
      COMMON/XSANDW/ISANDW(4,2),ICORE(4,2)
C END JUN 1996
C BEG APR 1997
C BEG JULY 1997
      COMMON/CRIP2X/ICRIPX(2),ICRIPZ(2)
C END JULY 1997
C END APR 1997
C BEG MAY 1997
      COMMON/IZSTIX/IZSTIF(2)
      DIMENSION WBEIG(2,4,2)
C END MAY 1997
      COMMON/GEOM6/IFAY(2),IMISCL(28)
      DIMENSION ISTIF(*),B(*),B2(*),H(*),W(*),W2(*),CX(6,6,5),CY(6,6,5)
      DIMENSION RESULT(3,5,2),RESFIX(3,5,2),CONSTR(*),WORDB(*),IADDB(*)
      DIMENSION TX(*),TY(*),GTX(2,5),GTY(2,5)
      DIMENSION IPOINC(*),RWBTOT(2),RWBEIG(2)
      COMMON/OUTP/NPRT
C BEG AUG 1992
      DIMENSION FKNOCK(*)
      COMMON/IWEAKX/IWEAK
      COMMON/ATRNGS/ATRING
      LOGICAL ATRING
      COMMON/IRFREX/IRFREE
      COMMON/FMAXPP/MAXCON
      COMMON/WORDS5/PCWORD(99)
      COMMON/PLOTCD/ICAR,IADDCC(99),CPLOT(99)
      COMMON/FSAFEB/FSAFEP(99)
      COMMON/ISOGR/ISOGRD,ISOANG
      COMMON/ISOGR2/JSTIFF
      COMMON/ISOGR3/ILISO(5,3)
C BEG DEC 2000
      COMMON/ISOGR4/JSTIF0
      COMMON/ISOGR5/JSTIF1,JSTIF2
C END DEC 2000
      COMMON/GEOM1/AXIAL,CIRC,RXXX
      COMMON/LOADS6/RSEIG(3,5,3),RSFXL(3,5,3),RSPGL(3,5,3),RSFIX(3,5,3)
      COMMON/LOADS8/RWEIG(3),RWFXL(3),RWPGL(3),RWFIX(3),RWTOT(3)
      COMMON/LOADS9/RSPRS(3,5,3),ESPRS(3,5,3),RSTOT(3,5,3),RSULT(3,5,3)
      COMMON/LODS11/WBEIGZ(2,4,2),WBTOT(2,4,2),WBSULT(2,4,2)
      COMMON/LODS12/WBFXL(2,4,2),WBPGL(2,4,2),WBFIX(2,4,2),WBPRS(2,4,2)
      CHARACTER*8 CN
      CHARACTER*4 CNN
      CHARACTER*2 CJ,CM
      CHARACTER*7 CN2
      CHARACTER*9 CNP
      CHARACTER*80 PCWORD
      REAL MAXCON
C END AUG 1992
C BEG MAY 1993
      COMMON/DELIMP/DELFCE(4,2),DELISO(4,3),DELSKN(3,2,2),DELWEB(2)
      DIMENSION WBEIGX(2)
C END MAY 1993
C BEG JULY 1997
      DIMENSION ILAMB2(5,2,2),ILAM34(2,2),ILAM44(2,2)
C END JULY 1997
      CHARACTER*80 WORDB
C
C BEG JUN 2004
      IF (NPRT.GE.2) WRITE(8,'(A,I5)')' ENTERING STFEIG: MIDEND=',
     1                                                   MIDEND
C BEG MAR 2005
      IF (NPRT.GE.2) WRITE(8,'(A,I2,A,I5,A,I5)')
     1 ' IMOD=',IMOD,', Wavenumbers: MSKIN=',MSKIN,', NSKIN=',NSKIN
C END MAR 2005
C END JUN 2004
      DO 100 K = 1,2
C BEG FEB 2006
C BEG JAN 2007
C     IF (K.EQ.1) WRITE(8,'(/,/,/,A)') ' STRINGER:'
C     IF (K.EQ.2) WRITE(8,'(/,/,/,A)') ' RING:'
      IF (K.EQ.1.AND.NPRT.GE.1) WRITE(8,'(/,/,/,A)') ' STRINGER:'
      IF (K.EQ.2.AND.NPRT.GE.1) WRITE(8,'(/,/,/,A)') ' RING:'
C END JAN 2007
C END FEB 2006
C BEG JULY 1995
      FMULT = 1.
C BEG DEC 1995
C BEG MAR 1997
C BEG JUN 2004
      IF (K.EQ.1.AND.IQUICK.EQ.0.AND.KLAYER(1,1).EQ.0) FMULT = 0.
C     IF (           IQUICK.EQ.0) FMULT = 0.
C END MAR 1997
C END DEC 1995
C END JULY 1995
      IFREE = 0
      IF (ISTIF(K).EQ.0) GO TO 100
      IF (ISTIF(K).EQ.1.OR.ISTIF(K).EQ.2) THEN
         ISTART = 3
C BEG MAY 1997
         IF (IZSTIF(K).EQ.1) ISTART = 2
C END MAY 1997
         IEND   = 4
      ENDIF
C
      IF (ISTIF(K).EQ.3) THEN
         ISTART = 3
         IEND   = 3
      ENDIF
C
      IF (ISTIF(K).EQ.4) THEN
         ISTART = 2
         IF (K.EQ.2.AND.B2(K).EQ.0.) ISTART = 3
C        IF (ISKIN.EQ.0) ISTART = 1
         IEND   = 4
      ENDIF
C
      ILOAD = 1
      IWEB  = 3
      IF (ISTIF(K).EQ.5) THEN
         ILOAD = 2
         IWEB  = 2
         ISTART= 1
         IEND  = 3 
      ENDIF
C   
C     WRITE(8,*)' IMOD,INUMTT,K,ISTART,IEND=',IMOD,INUMTT,K,ISTART,IEND
C
      M = 0
      IF (ISTIF(K).NE.5) THEN
         M = MSKIN
         IF (K.EQ.2) M = NSKIN
C BEG AUG 1998
         IF (M.EQ.0) M = 1
C END AUG 1998
      ENDIF
C BEG AUG 1992
C BEG DEC 2000
      IF (K.EQ.1.AND.IMOD.EQ.0) THEN
         JSTIFF = 1
         JSTIF0 = 1
         JSTIF1 = 1
         JSTIF2 = 1
      ENDIF
C END DEC 2000
      IF (K.EQ.1.AND.ISOGRD.EQ.1) THEN
         M = 1
         IF (IMOD.EQ.0) THEN
            IF (ISTIF(1).NE.3) THEN
C BEG MAY 1993
               RMIN = RSULT(1,4,1) + DELISO(4,1)
               DO 5 I = 2,3
                  RSUM = RSULT(1,4,I) + DELISO(4,I)
    5             RMIN = MIN(RMIN,RSUM)
               DO 10 I = 1,3
C BEG DEC 2000
                  JSTIF0 = I
C END DEC 2000
                  RSUM = RSULT(1,4,I) + DELISO(4,I)
                  DIFF = ABS(RMIN - RSUM)
                  IF (DIFF.LT.(0.0001*ABS(RMIN))) GO TO 15
   10          CONTINUE
   15          CONTINUE
            ELSE
               RMIN = RSULT(1,3,1) + 0.5*DELISO(3,1)
               DO 20 I = 2,3
                  RSUM = RSULT(1,3,I) + 0.5*DELISO(3,I)
   20          RMIN = MIN(RMIN,RSUM)
               DO 25 I = 1,3
C BEG DEC 2000
                  JSTIF0 = I
C END DEC 2000
                  RSUM = RSULT(1,3,I) + 0.5*DELISO(3,I)
                  DIFF = ABS(RMIN - RSUM)
C END MAY 1993
                  IF (DIFF.LT.(0.0001*ABS(RMIN))) GO TO 30
   25          CONTINUE
   30          CONTINUE
C BEG DEC 2000
               JSTIFF = JSTIF0
C END DEC 2000
            ENDIF
         ENDIF
      ENDIF
C END AUG 1992
C
      DO 60 I = ISTART,IEND
C
C BEG DEC 2000
         IF (K.EQ.1.AND.ISOGRD.EQ.1.AND.I.EQ.4) THEN
            JSTSAV = JSTIFF
            JSTIFF = JSTIF0
         ENDIF
C END DEC 2000
C BEG JUN 1996
      EFOUND = 0.
      IF (ISANDW(I,K).EQ.1.OR.ISANDW(I,K).EQ.NLAYER(I,K))
     1   EFOUND = WFOUND(I,K)
C END JUN 1996
      IF (ISTIF(K).LT.4.AND.I.EQ.IEND) IFREE = 1
      ID = I
      IF (IFAY(K).EQ.1.AND.I.EQ.2) ID = 1
C BEG AUG 1992
      IF (ISOGRD.EQ.0.OR.K.EQ.2) THEN
C BEG MAY 1993
         FVAR = RESULT(ILOAD,ID,K)
C BEG JULY 1995
         IF (ISTIF(K).NE.5.AND.ID.GT.2)
     1                    FVAR = FVAR + FMULT*DELFCE(ID,K)
         IF (ISTIF(K).EQ.4.AND.ID.LE.2)
     1                    FVAR = FVAR + FMULT*DELSKN(1,ID,K)
C END JULY 1995
         FFIX = RESFIX(ILOAD,ID,K)
         IF (ISTIF(K).NE.5.AND.I.EQ.IWEB) THEN
            FVAR = MIN(RWBEIG(K)+0.7*DELFCE(I,K),
     1                 RESULT(1,I,K)+0.5*DELFCE(I,K))
            FFIX = MIN(RWBTOT(K),RESFIX(1,I,K))
         ENDIF
      ENDIF
      IF (ISOGRD.EQ.1.AND.K.EQ.1) THEN
         FVAR = RSULT(ILOAD,ID,JSTIFF) + DELISO(ID,JSTIFF)
         FFIX = RSTOT(ILOAD,ID,JSTIFF)
         IF (I.EQ.3) THEN
            FVAR = MIN(RWEIG(JSTIFF)+0.7*DELISO(3,JSTIFF),
     1                 RSULT(1,3,JSTIFF)+0.5*DELISO(3,JSTIFF))
C END MAY 1993
            FFIX = MIN(RWTOT(JSTIFF),RSTOT(1,3,JSTIFF))
         ENDIF
      ENDIF
C END AUG 1992
C
C BEG MAY 1993
C     WRITE(8,*)' IN STFEIG: I,ID,ILOAD,K,JSTIFF=',I,ID,ILOAD,K,JSTIFF
C     WRITE(8,*)' RESULT(ILOAD,ID,K),RESFIX(ILOAD,ID,K)=',
C    1            RESULT(ILOAD,ID,K),RESFIX(ILOAD,ID,K)
C     WRITE(8,*)' DELFCE(ID,K),DELISO(ID,JSTIFF)=',
C    1            DELFCE(ID,K),DELISO(ID,JSTIFF)
C     WRITE(8,*)' DELISO(ID,1),DELISO(ID,2),DELISO(ID,3)=',
C    1            DELISO(ID,1),DELISO(ID,2),DELISO(ID,3)
C     WRITE(8,*)' FVAR,FFIX=',FVAR,FFIX
C END MAY 1993
C
      IF ((IMOD.EQ.0.AND.JJJ.EQ.0.AND.NPRT.GE.1).OR.NPRT.GE.2) THEN
         IF (K.EQ.1.AND.I.EQ.ISTART.AND.ISWTCH.EQ.1) WRITE(IFILE,109)
  109       FORMAT(//' Next, investigate wide-column buckling of the'/
     1' segments of the TRUSS-CORE SANDWICH as loaded by the fixed'/
     1' width-wise resultants (Load Set B quantities) only:')
         IF(K.EQ.1.AND.I.EQ.ISTART.AND.ISOGRD.EQ.0) WRITE(IFILE,110)
C BEG JUN 1996 (AUG 2003 comment location change)
  110    FORMAT(/' ***  BUCKLING (short wavelength buckling) of parts of
     1 the panel module cross section perpendicular to generator ***'/
     1' NOTE: The segment numbering scheme used here corresponds to'/
     1'       that used when the user provides input data.  It may'/
     1'       differ from that used for the discretized module model.'/
     1'       Please see ITEM 272 in the file panda2/doc/panda2.news.')
C END JUN 1996
         IF(K.EQ.1.AND.I.EQ.ISTART.AND.ISOGRD.EQ.1) WRITE(IFILE,1101)
C BEG JUN 1996 (AUG 2003 comment location change)
 1101    FORMAT(/' ***  BUCKLING (short wavelength buckling) of parts of
     1 the isogrid stiffeners ***'/
     1' NOTE: The segment numbering scheme used here corresponds to'/
     1'       that used when the user provides input data.  It may'/
     1'       differ from that used for the discretized module model.'/
     1'       Please see ITEM 272 in the file panda2/doc/panda2.news.')
C END JUN 1996
C BEG AUG 1992
C BEG JUN 1999
C        IF (K.EQ.2.AND.IWEAK.EQ.0.AND.ATRING.AND.ICASE.EQ.1) GO TO 31
         IF (K.EQ.2.AND.IWEAK.EQ.0.AND.ISTIF(2).EQ.0
     1                                       .AND.ICASE.EQ.1) GO TO 31
C END JUN 1999
C END AUG 1992
         IF(K.EQ.2.AND.I.EQ.ISTART) WRITE(IFILE,111)
C BEG JUN 1996 (AUG 2003 comment location change)
  111    FORMAT(/' ***  BUCKLING (short wavelength buckling) of parts of
     1 the panel module cross section   parallel    to generator ***'/
     1' NOTE: The segment numbering scheme used here corresponds to'/
     1'       that used when the user provides input data.  It may'/
     1'       differ from that used for the discretized module model.'/
     1'       Please see ITEM 272 in the file panda2/doc/panda2.news.')
C END JUN 1996
         IF (I.EQ.ISTART) WRITE(IFILE,112)
  112    FORMAT(
     1' STIFFENER   MODULE    PRELOAD     RESULTANT   BUCKLING       BUC
     1KLING     NO. OF BUCKLING           COMMENT'/
     1'   TYPE     SEGMENT   RESULTANT    FROM LOAD  LOAD FACTOR    LOAD 
     1 FACTOR      HALFWAVES'/
     1'                     (LOAD SET B)    SET A  (no transverse (with 
     1transverse   BETWEEN'/
     1'                      (average)     (ave.)   shear deform.) shear
     1 deform.)   STIFFENERS')
C BEG AUG 1992
   31    CONTINUE
C END AUG 1992
      ENDIF
C
C BEG APR 1991
C     IF (IFREE.EQ.1.AND.(ISTIF(K).EQ.1.OR.ISTIF(K).EQ.2)) GO TO 60
C END APR 1991
      IF (K.EQ.1) THEN         
C
C BEG AUG 1992
         STFSPA = B(2)
         IF (ISOGRD.EQ.1) STFSPA = B(1)/0.8660254
         JUP = 1
         JARG = JSTIFF
C BEG DEC 2000
         EIGMIN = 10.E+15
C END DEC 2000
         IF (ISOGRD.EQ.1.AND.I.EQ.3) JUP = 3
         DO 32 JJ = 1,JUP
            IF (ISOGRD.EQ.1.AND.I.EQ.3) JARG = JJ
C BEG MAY 1993
            WBEIGX(1) = WBEIG(1,JARG,K)
            IF (ISOGRD.EQ.0) THEN
C BEG JUN 2004
C              IF (NPRT.GE.2) WRITE(8,'(A,1P,3E12.4)')
C    1       ' WBEIG(2,JARG,K),FMULT,DELFCE(IWEB,K)=',
C    1         WBEIG(2,JARG,K),FMULT,DELFCE(IWEB,K)
C END JUN 2004
C BEG DEC 1995
               WBEIGX(2) = WBEIG(2,JARG,K) + FMULT*DELFCE(IWEB,K)
C END DEC 1995
            ELSE
               WBEIGX(2) = WBEIG(2,JARG,K) + DELISO(IWEB,JARG)
C BEG JUN 2004
               IF (JUP.EQ.3) THEN
                  FVARS = FVAR
                  FVAR = 0.7*WBEIGX(2) + 0.3*WBEIGX(1)
               ENDIF
C END JUN 2004
            ENDIF
C           WRITE(8,*)' ID,JUP,JJ,JARG,K,IWEB=',ID,JUP,JJ,JARG,K,IWEB
C           WRITE(8,*)' WBEIGX(1),WBEIGX(2)=',WBEIGX(1),WBEIGX(2)
            IF ((IMOD.EQ.0.AND.JJJ.EQ.0.AND.NPRT.GE.1)
     1          .OR.NPRT.GE.2) THEN
C BEG JULY 1995
               IF (I.EQ.IWEB)
     1            WRITE(IFILE,34) WBEIGX(1),WBEIGX(2),FKNOCK(5)
   34          FORMAT(
     1' Prebuck.resultant along stringer axis at root and tip of web:'/
     1       '   At root of web:',1PE12.4,';   At tip of web:',1PE12.4/
     1' Knockdown factor to account for in-plane shearing of web and'/
     1'   any anisotropic properties of the web, FKNOCK(5)='1PE12.4)
C END JULY 1995
            ENDIF
C END MAY 1993
C BEG MAR 2009
C           WRITE(8,'(A,4I5,1PE12.4)')
C    1    ' K,I,IWEB,ID,CX(5,5,ID)=',K,I,IWEB,ID,CX(5,5,ID)
C END MAR 2009 
C23456789012345678901234567890123456789012345678901234567890123456789012
            CALL CRIPPL(IFREE,K,I,ISTIF(K),B(K),H(K),W(K),W2(K),
     1               CX(1,1,ID),FVAR,FFIX,
     1               TX(ID),GTX(1,ID),IREDUC,CONMAX,IMOD,IPOINC,INUMTT,
     1               ICONST,CONSTR,WORDB,IADDB,STFSPA,M,IFILE,ISTART,
     1               ICRIP,JJJ,MIDEND,ICASE,FSBSTR,EIGSEG,ILAMB2(1,1,K),
     1               ISWTCH,ITRUSS,WBEIGX,WBTOT(1,JARG,K),
     1               FKNOCK(5),JSTIFF,JJ,ILISO(I,JARG),IRFREE,B(1),
C BEG NOV 2003 
     1               B2(1),EFOUND,IZSTIF(K),B2(K),NOPO,FKNOCK(9),
C BEG FEB 2006
C BEG JAN 2007
     1               IBLADE(K),FSLOC,IQUICK)
C END JAN 2007
C END FEB 2006
C END NOV 2003 
C BEG JUN 2004
            IF (JUP.EQ.3) FVAR = FVARS
C END JUN 2004
C BEG FEB 1996
            IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
C BEG DEC 2000
            IF (K.EQ.1.AND.ISOGRD.EQ.1) THEN
               IF (I.EQ.4) JSTIFF = JSTSAV
               IF (IMOD.EQ.0.AND.I.EQ.3.AND.EIGSEG.LT.EIGMIN) THEN
                  EIGMIN = EIGSEG
                  JSTIFF = JJ
               ENDIF
            ENDIF
C END DEC 2000
   32    CONTINUE
C
         IF (ISOGRD.EQ.0) THEN
            IF (IMOD.EQ.0.AND.FSBSTR.LT.1.0.AND.M.GT.(MSKIN+2).AND.
     1          EIGSEG.LT.EIGLCS.AND.EIGSEG.LT.1.0.AND.ICRIP.EQ.0
     1                          .AND.ICWEB.EQ.0.AND.ICROWN.EQ.0) THEN
             WRITE(IFILE,35) I,I,M,EIGSEG,MSKIN,EIGLCS,M
   35        FORMAT(/ ' *************** WARNING *********************'/
     1' ******** WE ARE NOW IN SUBROUTINE STFEIG ********'/
     1' BUCKLING LOAD FACTOR OF STRINGER SEGMENT(S) ',I2,' IS LOWER'/
     1' THAN THE BUCKLING LOAD FACTOR FOR THE PANEL SKIN, WHILE THE'/
     1' CRITICAL NUMBER OF AXIAL WAVES BETWEEN RINGS IS GREATER THAN'/
     1' THAT FOR BUCKLING OF THE PANEL SKIN BETWEEN RINGS:'/
     1'  Number of halfwaves for buckling of stringer seg(s). no. ',I2,
     1' m=',I4,'(STFEIG-theory)'/
     1'  Load factor for buckling of stringer segment(s) according to'/
     1'   the closed-form theory used in SUBROUTINE STFEIG   =',1PE12.4/
     1'  Number of halfwaves for buckling of panel skin, MSKIN=',I4/
     1'  Load factor for local buckling of panel skin, EIGLCS=',1PE12.4/
     1' MAKE SURE THAT WHEN YOU HAVE COMPLETED YOUR OPTIMIZATION RUNS'/
     1' TO RERUN MAINSETUP FOR A FIXED DESIGN WITH IQUICK=0,'/
     1' USING AS A STARTING NUMBER OF AXIAL HALFWAVES, MSTART =',I4,'.'/
     1' DO THIS IN ORDER TO ENSURE THAT THERE ARE NO HIGH STRESSES'/
     1' IN THE LOCALLY POSTBUCKLED STRINGER SEGMENT(S) THAT VIOLATE'/
     1' YOUR DESIGN CONSTRAINT CONDITIONS.'/
     1' ************* END WARNING **********************'/)
C
            ENDIF
         ENDIF
C END AUG 1992
C
   40    CONTINUE
C     WRITE(8,*)' IMOD,INUMTT,I,ICONST,CONSTR=',
C    1            IMOD,INUMTT,I,ICONST,CONSTR(ICONST)
C
C     end of K.EQ.1 condition
C
      ELSE
C
C     K loop for K=2 follows...
C
C BEG AUG 1992
C        IF (MIDEND.EQ.1) THEN
C BEG JUN 1999
C           IF (IWEAK.EQ.0.AND.ATRING.AND.ICASE.EQ.1) GO TO 45
            IF (IWEAK.EQ.0.AND.ISTIF(2).EQ.0.AND.ICASE.EQ.1) GO TO 45
C END JUN 1999
            STFSPA = B(1)
            IF (IRFREE.EQ.1) STFSPA = CIRC
C BEG MAY 1993
            WBEIGX(1) = WBEIG(1,4,K)
C BEG DEC 1995
            WBEIGX(2) = WBEIG(2,4,K) + FMULT*DELFCE(IWEB,K)
C END DEC 1995
            IF ((IMOD.EQ.0.AND.JJJ.EQ.0.AND.NPRT.GE.1)
     1          .OR.NPRT.GE.2) THEN
C BEG JULY 1995
               IF (I.EQ.IWEB)
     1            WRITE(IFILE,342) WBEIGX(1),WBEIGX(2),FKNOCK(6)
  342          FORMAT(
     1' Prebuck.resultant along   ring   axis at root and tip of web:'/
     1       '   At root of web:',1PE12.4,';   At tip of web:',1PE12.4/
     1' Knockdown factor to account for in-plane shearing of web and'/
     1'   any anisotropic properties of the web, FKNOCK(6)='1PE12.4)
C END JULY 1995
            ENDIF
C END MAY 1993
            FSBSTF = FSBSTR
            IF (FSBSTR.LT.1.0) FSBSTF = 1.0
C23456789012345678901234567890123456789012345678901234567890123456789012
            CALL CRIPPL(IFREE,K,I,ISTIF(K),B(K),H(K),W(K),W2(K),
     1               CY(1,1,ID),FVAR,FFIX,
     1               TY(ID),GTY(1,ID),IREDUC,CONMAX,IMOD,IPOINC,INUMTT,
     1               ICONST,CONSTR,WORDB,IADDB,STFSPA,M,IFILE,ISTART,
     1               ICRIP,JJJ,MIDEND,ICASE,FSBSTF,EIGSEG,ILAMB2(1,1,K),
     1               ISWTCH,ITRUSS,WBEIGX,WBTOT(1,4,K),FKNOCK(6),
     1               0,0,ILDUM,IRFREE,B(1),B2(1),EFOUND,IZSTIF(K),
C BEG NOV 2003 
C BEG FEB 2006
C BEG JAN 2007
     1               B2(K),NOPO,FKNOCK(9),IBLADE(K),FSLOC,IQUICK)
C END JAN 2007
C END FEB 2006
C END NOV 2003
C BEG FEB 1996
            IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
   45       CONTINUE
C        ENDIF
C END AUG 1992
C
C     WRITE(8,*)' IMOD,INUMTT,I,ICONST,CONSTR=',
C    1            IMOD,INUMTT,I,ICONST,CONSTR(ICONST)
C
      ENDIF
C    End of K loop condition
C
   60 CONTINUE
C
C BEG MAY 1997
C     IF (ISTART.EQ.3.AND.IEND.EQ.4) THEN
      IF (ISTIF(K).EQ.1.OR.ISTIF(K).EQ.2) THEN
C END MAY 1997
C
C  GET 2-SEGMENT CRIPPLING OF T OR J STIFFENER  (OCT. 20, 1986)
C
         IF (K.EQ.1) THEN
C BEG AUG 1992
          IF (ISOGRD.EQ.0) THEN
            CALL CRIPP2(K,ISTIF(K),B(2),H(K),W(K),CX(1,1,3),CX(1,1,4),
     1      RESULT(1,3,K)+0.5*FMULT*DELFCE(3,K),
     1      RESULT(1,4,K)+FMULT*DELFCE(4,K),
     1      RESFIX(1,3,K),RESFIX(1,4,K),
     1      TX(4),GTX(1,4),IREDUC,CONMAX,IMOD,IPOINC,INUMTT,ICONST,
     1      CONSTR,WORDB,IADDB,IFILE,JJJ,MIDEND,ICASE,FSBSTR,EIGSEG,
C BEG DEC 2000
C BEG FEB 2006
     1      ILAM34(1,K),ICRIPX(K),NOPO,FKNOCK(9),1,1,FSLOC)
C END FEB 2006
C END DEC 2000
            IF (IRESTY.EQ.1) GO TO 2222
          ENDIF
C
C23456789012345678901234567890123456789012345678901234567890123456789012
          IF (ISOGRD.EQ.1) THEN
C BEG DEC 2000
           IF (IMOD.EQ.0) THEN
             EIGMIN = 10.E+15
             DO 62 JJ = 1,3
               CALL CRIPP2(K,ISTIF(K),STFSPA,H(K),W(K),CX(1,1,3),
     1         CX(1,1,4),RSULT(1,3,JJ)+0.5*DELISO(3,JJ),
     1         RSULT(1,4,JJ)+DELISO(4,JJ),RSTOT(1,3,JJ),RSTOT(1,4,JJ),
     1         TX(4),GTX(1,4),IREDUC,CONMAX,IMOD,IPOINC,INUMTT,ICONST,
     1         CONSTR,WORDB,IADDB,IFILE,JJJ,MIDEND,ICASE,FSBSTR,EIGSEG,
C BEG FEB 2006
     1         ILAM34(1,K),ICRIPX(K),NOPO,FKNOCK(9),JJ,0,FSLOC)
C END FEB 2006
               IF (IRESTY.EQ.1) GO TO 2222
               IF (EIGSEG.LT.EIGMIN) THEN
                  EIGMIN = EIGSEG
                  JSTIF1 = JJ
               ENDIF
   62        CONTINUE
           ENDIF
           CALL CRIPP2(K,ISTIF(K),STFSPA,H(K),W(K),CX(1,1,3),
     1        CX(1,1,4),RSULT(1,3,JSTIF1)+0.5*DELISO(3,JSTIF1),
     1        RSULT(1,4,JSTIF1)+DELISO(4,JSTIF1),
     1        RSTOT(1,3,JSTIF1),RSTOT(1,4,JSTIF1),
     1        TX(4),GTX(1,4),IREDUC,CONMAX,IMOD,IPOINC,INUMTT,ICONST,
     1        CONSTR,WORDB,IADDB,IFILE,JJJ,MIDEND,ICASE,FSBSTR,EIGSEG,
C BEG FEB 2006
     1        ILAM34(1,K),ICRIPX(K),NOPO,FKNOCK(9),JSTIF1,1,FSLOC)
C END FEB 2006
           IF (IRESTY.EQ.1) GO TO 2222
C END DEC 2000
          ENDIF
C
          IF (ISOGRD.EQ.0) THEN
            IF (IMOD.EQ.0.AND.FSBSTR.LT.1.0.AND.M.GT.(MSKIN+2).AND.
     1        EIGSEG.LT.EIGLCS.AND.EIGSEG.LT.1.0.AND.ICRIP.EQ.0) THEN
                I = 34
                WRITE(IFILE,35) I,I,M,EIGSEG,MSKIN,EIGLCS,M
            ENDIF
          ENDIF
C
          IF (ISOGRD.EQ.1) THEN
C           FIND ROLLING OF ISOGRID STIFFENER HINGED AT PANEL SKIN:
C           For J-stiffener, FACTT would be 1.0 if the analysis were
C           exact.  However, we use a very limited Ritz method, which
C           overestimates the membrane strain energy in the flange.
C           To compensate, we set FACTT = 0.5 rather than 1.0. This
C           value for FACTT was arrived at via comparisons with BOSOR4
C           models.
C BEG DEC 2000
             FACTT = 0.5
             IF (ISTIF(1).EQ.1) FACTT = 0.25
             IF (IMOD.EQ.0) THEN
               EIGMIN = 10.E+15
               DO 63 JJ = 1,3
                CALL EIGISO(JJ,IFILE,FACTT,B(1)/0.866,H(1),W(1),CX,
     1                    RSTOT,RSEIG,WBTOT,WBEIG,ELAM,MWAVE,
     1                    IMOD,ILISO(1,JJ))
                IF (IRESTY.EQ.1) GO TO 2222
                IF (ELAM.LT.EIGMIN) THEN
                   EIGMIN = ELAM
                   JSTIF2 = JJ
                ENDIF
   63          CONTINUE
             ENDIF
             CALL EIGISO(JSTIF2,IFILE,FACTT,B(1)/0.866,H(1),W(1),CX,
     1                   RSTOT,RSEIG,WBTOT,WBEIG,ELAM,MWAVE,
     1                   IMOD,ILISO(1,JSTIF2))
             IF (IRESTY.EQ.1) GO TO 2222
             INUMTT = INUMTT + 1
             IF (IRESTY.EQ.1) GO TO 2222
             ELAMOL = ELAM
             IF (IMOD.EQ.0.AND.ABS(ELAM).GT.10.E+15) GO TO 80
             CALL SHRRED(IREDUC,RSULT(1,4,JSTIF2)+DELISO(4,JSTIF2),
     1                  0.,0.,TX(4),TX(4),GTX(1,4),ELAM,0,0,0,0.,0.,
     1                  1,0.,0.,11)
             IF (NPRT.GE.2) THEN
                WRITE(IFILE,65) JSTIF2
   65           FORMAT(/' Rolling of isogrid stiffener no.',I2,
     1                  ' with web assumed hinged at panel skin:')
                WRITE(IFILE,66) RSTOT(1,3,JSTIF2),
     1                      RSEIG(1,3,JSTIF2)+0.5*DELISO(3,JSTIF2)
   66           FORMAT('  isogrid      3  ',1P,2E13.4)
                WRITE(IFILE,67) RSTOT(1,4,JSTIF2),
     1                          RSEIG(1,4,JSTIF2)+DELISO(4,JSTIF2),
     1                          ELAMOL,ELAM,MWAVE
   67           FORMAT('               4  ',1P,3E13.4,1P,E14.4,I10)
             ENDIF
C END DEC 2000
C
C   INTRODUCE CONSTRAINT CONDITION...
             FSAFTY = 1.2
             CALL CONVRF(FSAFTY,CN2)
c BEG DEC 2000
             CALL CONVR2(JSTIF2,CJ)
C END DEC 2000
             CALL CONVR2(MWAVE,CM)
             CN = 'isogrd'//CJ
             CNN = 'MID.'
             IF (MIDEND.EQ.2.OR.ICASE.EQ.2) CNN = 'ENDS'
             IF (ATRING.AND.ICASE.EQ.2) CNN = 'RNGS'
             CNP = 'MIDLENGTH'
             IF (MIDEND.EQ.2.OR.ICASE.EQ.2) CNP = 'PANEL END'
             IF (ATRING.AND.ICASE.EQ.2) CNP = 'AT RINGS '
             EIGSAF = ELAM/FSAFTY
             IF (IMOD.EQ.0.AND.EIGSAF.LT.MAXCON) THEN
                ICAR = ICAR + 1
                PCWORD(ICAR)='Buckling of isogrid stiffener'//CNP
                CPLOT(ICAR) = EIGSAF - 1.
                IADDCC(ICAR) = K
                FSAFEP(ICAR) = FSAFTY
             ENDIF
             IF (IMOD.EQ.0.AND.EIGSAF.GT.CONMAX) GO TO 80
             IF (IMOD.EQ.1.AND.IPOINC(INUMTT).EQ.0) GO TO 80
             ICONST = ICONST + 1
             IF (IMOD.EQ.0) IPOINC(INUMTT) = 1
             CONSTR(ICONST) = EIGSAF
             WORDB(ICONST)=
     1      'buckling '//CN//' stiff.no.J='//CJ//
     1      ';panel '//CNN//';M='//CM//';FS='//CN2
             IADDB(ICONST) = K
C BEG APR 2007
             IF (NPRT.GE.0) WRITE(8,'(A,1P,E12.4,2X,A)')
     1     ' Margin=',CONSTR(ICONST)-1.,WORDB(ICONST)
C END APR 2007
   80        CONTINUE
          ENDIF
C END AUG 1992
C
         ELSE
C BEG AUG 1992
          STFSPA = B(1)
          IF (IRFREE.EQ.1) STFSPA = CIRC
C BEG JUN 1999
C         IF (IWEAK.EQ.0.AND.ATRING.AND.ICASE.EQ.1) GO TO 85
          IF (IWEAK.EQ.0.AND.ISTIF(2).EQ.0.AND.ICASE.EQ.1) GO TO 85
C END JUN 1999
C         IF (MIDEND.EQ.1)
            CALL CRIPP2(K,ISTIF(K),STFSPA,H(K),W(K),CY(1,1,3),CY(1,1,4),
     1      RESULT(1,3,K)+0.5*FMULT*DELFCE(3,K),
     1      RESULT(1,4,K)+FMULT*DELFCE(4,K),
     1      RESFIX(1,3,K),RESFIX(1,4,K),
     1      TY(4),GTY(1,4),IREDUC,CONMAX,IMOD,IPOINC,INUMTT,ICONST,
     1      CONSTR,WORDB,IADDB,IFILE,JJJ,MIDEND,ICASE,1.0,EIGSEG,
C BEG DEC 2000
C BEG FEB 2006
     1      ILAM34(1,K),ICRIPX(K),NOPO,FKNOCK(9),1,1,FSLOC)
C END FEB 2006
C END DEC 2000
C BEG FEB 1996
            IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
   85     CONTINUE
C END AUG 1992
         ENDIF
      ENDIF
C
C BEG JULY 1997
C23456789012345678901234567890123456789012345678901234567890123456789012
      IF (ISTIF(K).EQ.1.OR.ISTIF(K).EQ.4) THEN
        IF (K.EQ.1.AND.ISOGRD.EQ.0)
C BEG JUN 2004
C    1  CALL CRIPP3(K,ISTIF(K),B(2),H(K),W(K),W2(K),CX(1,1,3),CX(1,1,4),
     1  CALL CRIPP3(K,ISTIF(K),ABIG,H(K),W(K),W2(K),CX(1,1,3),CX(1,1,4),
C END JUN 2004
     1               RESULT(1,4,K)+FMULT*DELFCE(4,K),RESFIX(1,4,K),
     1               TX(4),GTX(1,4),IREDUC,CONMAX,IMOD,IPOINC,INUMTT,
     1               ICONST,CONSTR,WORDB,IADDB,IFILE,JJJ,MIDEND,
C BEG FEB 2006
     1               ICASE,1.0,EIGSEG,ILAM44(1,K),ICRIPZ(K),NOPO,FSLOC)
C END FEB 2006
        IF (K.EQ.2)
C BEG JUN 2004
C    1  CALL CRIPP3(K,ISTIF(K),B(1),H(K),W(K),W2(K),CY(1,1,3),CY(1,1,4),
     1  CALL CRIPP3(K,ISTIF(K),BBIG,H(K),W(K),W2(K),CY(1,1,3),CY(1,1,4),
C END JUN 2004
     1               RESULT(1,4,K)+FMULT*DELFCE(4,K),RESFIX(1,4,K),
     1               TY(4),GTY(1,4),IREDUC,CONMAX,IMOD,IPOINC,INUMTT,
     1               ICONST,CONSTR,WORDB,IADDB,IFILE,JJJ,MIDEND,
C BEG FEB 2006
     1               ICASE,1.0,EIGSEG,ILAM44(1,K),ICRIPZ(K),NOPO,FSLOC)
C END FEB 2006
        IF (IRESTY.EQ.1) GO TO 2222
      ENDIF
C END JULY 1997
  100 CONTINUE
C
C     WRITE(8,115) IMOD, INUMTT, (IPOINC(I),I=1,INUMTT)
  115 FORMAT(/' IMOD = ',I2,'   INUMTT = ', I2,'  IPOINC(I),I=1,..='/
     1 (10I10))
C
C BEG FEB 1996
 2222 CONTINUE
C END FEB 1996
      RETURN
      END
C
C
C
C=DECK      CRIPPL
      SUBROUTINE CRIPPL(IFREE,ILOOP,ISEG,ISTIF,B,H,W,W2,C,NVAR,NFIX,
     1                  T,GT,IREDUC,CONMAX,IMOD,IPOINC,INUMTT,
     1                  ICONST,CONSTR,WORDB,IADDB,A0,M,IFILE,ISTART,
     1                  ICRIP,JJJ,MIDEND,ICASE,FSBSTF,LAMBDA,ILAMB2,
     1                  ISWTCH,ITRUSS,WBVAR,WBFIX,FKNOCK,JSTIFF,JJ,
     1                  ILISO,IRFREE,B1,B2,EFOUND,IZSTIF,BB2,NOPO,
C BEG NOV 2003
C BEG FEB 2006
C BEG JAN 2007
     1                  FKNOC9,IBLADE,FSLOC,IQUICK)
C END JAN 2007
C END FEB 2006
C END NOV 2003
C
C  PURPOSE IS TO FIND THE CRIPPLING MARGIN FOR A STIFFENER SEGMENT
C
C BEG NOV 2006
      COMMON/IHILCX/IHILOC
C END NOV 2006
C BEG FEB 2006
      COMMON/NSTREX/NMINSR,NMAXSR,ISRMOD(10),ISRIDX
C END FEB 2006
C BEG JUN 2004
      COMMON/NRNGEY/IRNIDY
C BEG FEB 2006
      COMMON/NSTREY/ISRIDY
C END FEB 2006
C BEG OCT 1998
      COMMON/NRNGEX/NMINRG,NMAXRG,IRNMOD(10),IRNIDX
C END OCT 1998
C BEG FEB 1996
      COMMON/IRESTX/IRESTY
C END FEB 1996
      COMMON/FMAXPP/MAXCON
      COMMON/WORDS5/PCWORD(99)
      COMMON/PLOTCD/ICAR,IADDCC(99),CPLOT(99)
C BEG MAR 1991
      COMMON/FSAFEB/FSAFEP(99)
C END MAR 1991
C BEG APR 1992
      COMMON/ATRNGS/ATRING
      LOGICAL ATRING
C END APR 1992
C BEG AUG 1992
      COMMON/ISOGR/ISOGRD,ISOANG
      COMMON/WEBVAR/WBDIFF
      DIMENSION WBVAR(2),WBFIX(2)
      CHARACTER*2 CSTIFF
      REAL NFIXP,NVARP
C END AUG 1992
      CHARACTER*80 PCWORD
      CHARACTER*2 CISEG
      CHARACTER*9 CNP
      REAL MAXCON
      DIMENSION ILAMB2(5,2)
      COMMON/OUTP/NPRT
      DIMENSION C(6,6),CONSTR(*),WORDB(*),IADDB(*),IPOINC(*)
      CHARACTER*80 WORDB
      CHARACTER*8 CN
      CHARACTER*4 CNN
      CHARACTER*3 CM
      CHARACTER*7 CN2
      DIMENSION GT(*)
      CHARACTER*31 COMMNT
      REAL NVAR,NFIX,LAMBDA,NUM1,NUM2,LAMB2,LAMFIX
      IF (ILOOP.EQ.1.AND.ISEG.EQ.2.AND.ICRIP.NE.0.AND.ISTIF.NE.5)
     1   GO TO 100
      INUMTT = INUMTT + 1
C BEG AUG 1992  FOLLOWING STATEMENT IS NOW COMMENTED OUT
C     IF ((NVAR+NFIX).GE.0.0.AND.ISWTCH.EQ.0) RETURN
C END AUG 1992
      IF (NFIX.GE.0.0.AND.ISWTCH.EQ.1) RETURN
C
      ITYPE = IFREE + 1
C
C BEG JUN 2004
      IF (NPRT.GE.2) WRITE(8,'(/,A,/,A,1P,2E12.4,/,A,1P,2E12.4)')
     1' Entering CRIPPL:',
     1' Eigenvalue preload at web root and tip=',
     1                                        WBVAR(1),WBVAR(2),
     1' Fixed      preload at web root and tip=',
     1                                        WBFIX(1),WBFIX(2)
C END JUN 2004
      IF (ISTIF.NE.5) THEN
         IF (ISTIF.NE.4) THEN
C BEG MAY 1997
            FMFAY = M
            IF (IZSTIF.EQ.1.AND.ISEG.EQ.2) THEN
               WIDTH = BB2/2.
               ITYPE = 2
               FMFAY = A0/WIDTH
               M = FMFAY
            ENDIF
C END MAY 1997
            IF (ISEG.EQ.3) WIDTH = H
            IF (ISEG.EQ.4) WIDTH = W
C BEG APR 1991
            IF (ISTIF.EQ.1.AND.ISEG.EQ.4) WIDTH = W/2.
C END APR 1991
         ELSE
            IF (ISEG.EQ.1) THEN
               WIDTH = B - W2
               ITYPE = 1
            ENDIF
            IF (ISEG.EQ.2) WIDTH = W2
            IF (ISEG.EQ.3) WIDTH = SQRT(H*H + (W2-W)**2/4.)
            IF (ISEG.EQ.4) WIDTH = W
         ENDIF
C BEG AUG 1992
         COMMNT = '                               '
         IF ((ISTIF.EQ.1.OR.ISTIF.EQ.2.OR.ISTIF.EQ.4).AND.ISEG.EQ.3)
     1     COMMNT = '                               '
C END AUG 1992
         SHRLOD = NVAR
      ENDIF
C   End of ISTIF.NE.5 condition
C
      IF (ISTIF.EQ.5) THEN
C BEG NOV 1995
         IF (ISEG.EQ.1.OR.ISEG.EQ.3) WIDTH = B - B2
         IF (ISEG.EQ.2) WIDTH = SQRT(H*H + .25*(B -2.*B2)**2)
C END NOV 1995
         COMMNT = 'WIDTH-WISE WIDE-COLUMN BUCKLING'
         SHRLOD = NVAR
         IF (ISWTCH.EQ.1) SHRLOD = NFIX
      ENDIF
      CN = '  ring  '
C BEG AUG 1992
      NWAVE = M
      IF (ILOOP.EQ.1) THEN
         CN = 'stringer'
         IF (ISOGRD.EQ.1) THEN
            IF (ISEG.EQ.4) CALL CONVR2(JSTIFF,CSTIFF)
            IF (ISEG.EQ.3) CALL CONVR2(JJ,CSTIFF)
            CN = 'isogrd'//CSTIFF
         ENDIF
      ENDIF
C END AUG 1992
      CNN= 'MID.'
C BEG MAY 1997
      IF (NOPO.EQ.1) CNN = 'NOPO'
C END MAY 1997
      IF (MIDEND.EQ.2.OR.ICASE.EQ.2) CNN = 'ENDS'
C BEG APR 1992
      IF (ATRING.AND.ICASE.EQ.2)     CNN = 'RNGS'
C END APR 1992
      IF (ISEG.EQ.1)  CN = '  skin  '
C
      FACT = (3.1415927/WIDTH)**2
C BEG AUG 1992
      INDX = 1
      IF (CNN.EQ.'ENDS'.OR.CNN.EQ.'RNGS') INDX = 2
      IF (IMOD.EQ.0) THEN
         ILISO = 0
         ILAMB2(ISEG,INDX) = 0
      ENDIF
   40    FORMAT(/' *** NOTE **** NOTE **** NOTE ***'/
     1' TYPE OF STIFFENER                               =',A/
     1' LOCATION IN THE PANEL                           =',A/
     1' STIFFENER SEGMENT NO.                           =',I2/
     1' AXIAL RESULTANT IN SEGMENT FROM LOAD SET B, NFIX=',1PE12.4/
     1' THIS AXIAL RESULTANT, NFIX, WILL CAUSE BUCKLING BY ITSELF.'/
     1' TEMPORARILY (FOR THE PURPOSE OF CALCULATING THIS PARTICULAR'/
     1' BUCKLING LOAD FACTOR), PANDA2 IS COMBINING THE AXIAL RESULTANT'/
     1' IN THIS STIFFENER SEGMENT FROM LOAD SET B WITH THAT FROM LOAD'/
     1' SET A AND PROCEEDING.'/
     1' *** END NOTE **** END NOTE **** END NOTE ***'/)
C END AUG 1992
      IF (ISTIF.NE.5) THEN
         C44C55 = SQRT(C(4,4)*C(5,5))
C BEG JUN 1996
C        IF (ITYPE.EQ.1) M = SQRT(C44C55*FACT/C(4,4))*A0/3.1415927
         IF (ITYPE.EQ.1)
     1      M = SQRT(SQRT((EFOUND+C(5,5)*FACT**2)/C(4,4)))*A0/3.1415927
C END JUN 1996
C BEG NOV 1994
         IF (ITYPE.EQ.1.AND.M.LT.1) M = 1
C END NOV 1994
C BEG AUG 1992
         NWAVE = M
C END AUG 1992
C BEG MAR 2005
C23456789012345678901234567890123456789012345678901234567890123456789012
         IF (NPRT.GE.2) WRITE(8,'(A,I6)')
     1 ' M = SQRT(SQRT((EFOUND+C(5,5)*FACT**2)/C(4,4)))*A0/3.1415927=',M
C END MAR 2005
C
         GO TO (10,20),ITYPE
C
C  INTERIOR SEGMENT..
C
   10    CONTINUE
C
C BEG JUN 1996
C        NUM1    = 2.*FACT*(C44C55 + C(4,5) + 2.*C(6,6))
         NUM1    = 2.*(SQRT(C(4,4)*(EFOUND+C(5,5)*FACT**2))
     1                            + (C(4,5) + 2.*C(6,6))*FACT)
C END JUN 1996
         GO TO 30
C
   20    CONTINUE
C
C  "END" SEGMENT...
C
C BEG AUG 1992
         FM = M
         IF (ILOOP.EQ.2.AND.IRFREE.EQ.1.AND.ISTIF.EQ.3
     1                 .AND.(A0/FM).LT.B1) FM = A0/B1
         FMJ = FM*3.1415927/A0
C END AUG 1992
         NUM1 = C(4,4)*FMJ**2 +12.*C(6,6)/WIDTH**2
C
   30    CONTINUE
C
C BEG AUG 1992
         IF (ISTIF.EQ.4.AND.ISEG.NE.3) THEN
            NUM2    = -(NUM1 + NFIX)
            LAMBDA  = 10.E+16
            IF (NVAR.LT.0.) LAMBDA  =  NUM2/NVAR
            LAMB2   = 10.E+16
            IF ((NFIX+NVAR).LT.0.) LAMB2   = -NUM1/(NFIX + NVAR)
            IF (NUM2.GE.0.0.OR.ILAMB2(ISEG,INDX).EQ.1) THEN
               IF (IMOD.EQ.0) THEN
                  WRITE(IFILE,40) CN,CNN,ISEG,NFIX
                  ILAMB2(ISEG,INDX) = 1
C BEG FEB 1996
C BEG FEB 1999
                  CALL LOADBA(2)
C END FEB 1999
                  IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
               ENDIF
               LAMBDA = LAMB2
            ENDIF
         ENDIF
C   NEW CODING FOR BUCKLING OF WEB ACCOUNTING FOR LINEARLY VARYING
C   AXIAL RESULTANT ACROSS THE HEIGHT OF THE WEB...
         IF (ITYPE.EQ.1.AND.ISEG.EQ.3) THEN
            IF (ISOGRD.EQ.0)
     1         CALL WEBBUK(IFILE,C,M,WIDTH,WBFIX,WBVAR,A0,
C BEG JUN 1996
     1                     LAMBDA,NWAVE,IMOD,ILAMB2(ISEG,INDX),EFOUND)
C END JUN 1996
            IF (ISOGRD.EQ.1)
     1         CALL WEBBUK(IFILE,C,M,WIDTH,WBFIX,WBVAR,A0,
C BEG JUN 1996
     1                     LAMBDA,NWAVE,IMOD,ILISO,EFOUND)
C END JUN 1996
C BEG FEB 1996
            IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
         ENDIF
         IF (ITYPE.EQ.2) THEN
            IF (ISOGRD.EQ.0)
     1         CALL ENDBUK(IFILE,ISTIF,ISEG,C,FMJ,WIDTH,WBFIX,WBVAR,
     1                 NVAR,NFIX,SLOPE,LAMBDA,IMOD,ILAMB2(ISEG,INDX))
C BEG JAN 2006
            IF (ISOGRD.EQ.0.AND.ISEG.EQ.4
     1                     .AND.(ISTIF.EQ.1.OR.ISTIF.EQ.2)) THEN
C  remove criticalness of buckling of outstanding flange because
C  there is a better model: Segs 3+4 buckling that supersedes this
C  overly conservative model: 
C  No. comment out this change because of comparison with STAGS.
C              LAMBDA = MAX(10.E+13,LAMBDA)
            ENDIF            
C END JAN 2006
            IF (ISOGRD.EQ.1)
     1         CALL ENDBUK(IFILE,ISTIF,ISEG,C,FMJ,WIDTH,WBFIX,WBVAR,
     1                 NVAR,NFIX,SLOPE,LAMBDA,IMOD,ILISO)
C BEG NOV 2003
            IF (IRESTY.NE.1.AND.ISOGRD.EQ.0.AND.LAMBDA.GT.9.9E+16
     1             .AND.IMOD.EQ.0.AND.ISTIF.GE.1.AND.ISTIF.LE.3) THEN
             IBLADE= 1
	     IF (NPRT.GE.2.AND.ILOOP.EQ.1) WRITE(IFILE,'(A)')
     1     ' Prestress in stringer segments to be neglected in ALTSOL'
             IF (NPRT.GE.2.AND.ILOOP.EQ.2) WRITE(IFILE,'(A)')
     1     ' Prestress in   ring segments   to be neglected in ALTSOL'
            ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
C END NOV 2003
C BEG FEB 1996
            IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
         ENDIF
      ENDIF
C     End of (ISTIF.NE.5) condition
C END AUG 1992
      IF (ISTIF.EQ.5) THEN
         LAMFIX = 10.E+16
         IF (NFIX.LT.0.) LAMFIX = -C(5,5)*FACT/NFIX
         LAMBDA = 10.E+16
         IF (NVAR.LT.0.) LAMBDA = -C(5,5)*FACT/NVAR
         LAMB2  = 10.E+16
         IF ((NVAR+NFIX).LT.0.0) LAMB2 = -C(5,5)*FACT/(NVAR+NFIX)
         LAMBDA = LAMB2
         M = 0
         IF (ISWTCH.EQ.1) THEN
            LAMBDA = LAMFIX
C BEG SEPT 1991
            FSBMLT = 1.0
            IF (FSBSTF.GT.1.0) FSBMLT = FSBSTF
            FSAFE5 = 1.11*FSBMLT
            IF (IMOD.EQ.0.AND.LAMFIX.LT.FSAFE5) ITRUSS = 1
C END SEPT 1991
            IF (ITRUSS.EQ.0) RETURN
         ENDIF
      ENDIF
C BEG MAR 2009
C     IF (NPRT.GE.2) WRITE(8,'(A,I5,1P,3E12.4)')
C    1 ' ISWTCH,LAMBDA,C(5,5),FACT=',ISWTCH,LAMBDA,C(5,5),FACT
C END MAR 2009
C
   50 CONTINUE
C BEG AUG 1992
C BEG MAR 1997
C     IF (LAMBDA.GT.10.E+15) GO TO 200
      IF (IMOD.EQ.0.AND.LAMBDA.GT.10.E+15) GO TO 200
C END MAR 1997
      IF (IMOD.EQ.0) THEN
C BEG FEB 1996
         IF (ISOGRD.EQ.0.AND.ILAMB2(ISEG,INDX).EQ.1) THEN
            WRITE(IFILE,40) CN,CNN,ISEG,NFIX
C BEG FEB 1999
            CALL LOADBA(3)
C END FEB 1999
            IF (IRESTY.EQ.1) GO TO 2222
         ENDIF
         IF (ISOGRD.EQ.1.AND.ILISO.EQ.1) THEN
            WRITE(IFILE,40) CN,CNN,ISEG,NFIX
C BEG FEB 1999
            CALL LOADBA(4)
C END FEB 1999
            IF (IRESTY.EQ.1) GO TO 2222
         ENDIF
C END FEB 1996
      ENDIF
C END AUG 1992
      FSAFE  = FSBSTF
C BEG SEPT 1991
      IF (ISTIF.EQ.5.AND.ISWTCH.EQ.1) FSAFE = FSAFE5
C END SEPT 1991
C BEG AUG 1992
      IF (ISEG.EQ.3.AND.ISTIF.NE.3.AND.ISTIF.NE.5)
     1      LAMBDA = FKNOCK*LAMBDA
C END AUG 1992
      EIGPRE = LAMBDA
C     WRITE(8,*) ' M,LAMBDA=',M,LAMBDA
C BEG APR 1993
C BEG OCT 1996
C BEG JUN 2004
      IF (NPRT.GE.2) WRITE(8,'(A,/,1P,5E12.4)')
     1' In CRIPPL, before SHRRED: LAMBDA,SHRLOD,T,GT(1),GT(2)=',
     1                            LAMBDA,SHRLOD,T,GT(1),GT(2)
C END JUN 2004
C BEG NOV 1997
      CALL SHRRED(IREDUC,SHRLOD,0.,0.,T,T,GT,LAMBDA,0,1,JJJ,0.,0.,1,
     1            0.,0.,12)
C END NOV 1997
C END OCT 1996
C END APR 1993
C
C     WRITE(8,*)' ILOOP,ISEG,LAMBDA,CONMAX=',ILOOP,ISEG,LAMBDA,CONMAX
C BEG AUG 1992
      CALL CONVRT(NWAVE,CM)
C END AUG 1992
C BEG OCT 1998
      CONARG = LAMBDA/FSAFE
C BEG JUN 2004
C BEG FEB 2006
      IF (IMOD.EQ.0.AND.ILOOP.EQ.1) THEN
         ISRIDY = ISRIDX
         IF (WBVAR(2).LE.WBVAR(1)) ISRIDY = 1
      ENDIF
C BEG NOV 2006
      IF (IMOD.EQ.0.AND.ILOOP.EQ.1.AND.NPRT.GE.2)
     1 WRITE(8,'(A,5I5,1P,E12.4,/A,/,A,/,A)')
     1                   ' ISEG,ISRIDY,NMINSR,NWAVE,NMAXSR,FKNOCK=',
     1                     ISEG,ISRIDY,NMINSR,NWAVE,NMAXSR,FKNOCK,
     1' NOTE: If FKNOCK is less than 0.99 the stringer web buckling',
     1'       WILL be recorded as a margin even if the critical number',
     1'       of axial halfwaves lies within the range, NMINSR - NMAXSR'
C23456789012345678901234567890123456789012345678901234567890123456789012
C     IF (IMOD.EQ.0) THEN
      IF (IMOD.EQ.0.AND.ILOOP.EQ.2) THEN
C END FEB 2006
         IRNIDY = IRNIDX
         IF (WBVAR(2).LE.WBVAR(1)) IRNIDY = 1
      ENDIF
      IF (IMOD.EQ.0.AND.ILOOP.EQ.2.AND.NPRT.GE.2)
     1 WRITE(8,'(A,5I5,1P,E12.4,/A,/,A,/,A)')
     1                   ' ISEG,IRNIDY,NMINRG,NWAVE,NMAXRG,FKNOCK=',
     1                     ISEG,IRNIDY,NMINRG,NWAVE,NMAXRG,FKNOCK,
     1' NOTE: If FKNOCK is less than 0.99 the ring web buckling',
     1'       WILL be recorded as a margin even if the critical number',
     1'       of circ. halfwaves lies within the range, NMINRG - NMAXRG'
C END NOV 2006
C END JUN 2004
C BEG JAN 2007
      IF (IMOD.EQ.0.AND.ILOOP.EQ.1.AND.IQUICK.EQ.0
     1 .AND.(ISTIF.EQ.3.OR.FKNOCK.GT.0.99.OR.ISEG.EQ.4)
     1 .AND.ISRIDY.EQ.1.AND.NWAVE.LE.2) THEN
       IF (ISEG.EQ.3) THEN
         ISRMOD(5) = 1
C23456789012345678901234567890123456789012345678901234567890123456789012
         IF (IMOD.EQ.0.AND.NPRT.GE.1) WRITE(IFILE,
     1           '(/,A,/,A,/,A,/,A,/,A,/,A,/,I5,A)')
     1 ' Stringer Seg. 3 buckling (no participation of the panel skin)',
     1 ' is not recorded as a margin because this type of buckling',
     1 ' has been superseded by the results from the discretized',
     1 ' skin-stringer module model, for which buckling load factors',
     1 ' have been computed for n = 1 & 2 axial halfwaves betw.rings',
     1 ' The critical stringer web(Seg3) buckling mode from STFEIG has',
     1   NWAVE,' axial half waves, which lies within this range of n.'
       ENDIF
C
       IF (ISEG.EQ.4) THEN
         ISRMOD(8) = 1
         IF (IMOD.EQ.0.AND.NPRT.GE.1) WRITE(IFILE,
     1           '(/,A,/,A,/,A,/,A,/,A,/,A,/,I5,A)')
     1 ' Stringer Seg. 4 buckling (no participation of the panel skin)',
     1 ' is not recorded as a margin because this type of buckling',
     1 ' has been superseded by the results from the discretized',
     1 ' skin-stringer module model, for which buckling load factors',
     1 ' have been computed for n = 1 & 2 axial halfwaves betw.rings',
     1' The critical stringer flange(Seg4) buckling mode by STFEIG has',
     1   NWAVE,' axial half waves, which lies within this range of n.'
C23456789012345678901234567890123456789012345678901234567890123456789012
       ENDIF
      ENDIF
C END JAN 2007
C BEG FEB 2006
C BEG NOV 2006
C     IF (IMOD.EQ.0.AND.ILOOP.EQ.1.AND.FSLOC.GT.1000000.
      IF (IMOD.EQ.0.AND.ILOOP.EQ.1.AND.IHILOC.EQ.1
C END NOV 2006
     1 .AND.(ISTIF.EQ.3.OR.FKNOCK.GT.0.99.OR.ISEG.EQ.4)
     1 .AND.ISRIDY.EQ.1.AND.NWAVE.GE.NMINSR.AND.NWAVE.LE.NMAXSR) THEN
       IF (ISEG.EQ.3) THEN
         ISRMOD(5) = 1
C23456789012345678901234567890123456789012345678901234567890123456789012
C        IF (IMOD.EQ.0.AND.NPRT.GE.0) WRITE(IFILE,
         IF (IMOD.EQ.0.AND.NPRT.GE.1) WRITE(IFILE,
     1           '(/,A,/,A,/,A,/,A,/,A,I5,A,I5,A,/,A,I5,/,A)')
     1 ' Stringer Seg. 3 buckling (no participation of the panel skin)',
     1 ' is not recorded as a margin because this type of buckling',
     1 ' has been superseded by the results from the discretized',
     1 ' skin-stringer module model, for which buckling load factors',
     1 ' have been computed in the range from n = ',NMINSR,' to n = ',
     1   NMAXSR,' axial halfwaves.',
     1 ' The critical stringer web(Seg3) buckling mode from STFEIG has',
     1   NWAVE,' axial half waves, which lies within this range.'
       ENDIF
       IF (ISEG.EQ.4) THEN
         ISRMOD(8) = 1
C        IF (IMOD.EQ.0.AND.NPRT.GE.0) WRITE(IFILE,
         IF (IMOD.EQ.0.AND.NPRT.GE.1) WRITE(IFILE,
     1           '(/,A,/,A,/,A,/,A,/,A,I5,A,I5,A,/,A,A,I5,/,A)')
     1 ' Stringer Seg. 4 buckling (no participation of the panel skin)',
     1 ' is not recorded as a margin because this type of buckling',
     1 ' has been superseded by the results from the discretized',
     1 ' skin-stringer module model, for which buckling load factors',
     1 ' have been computed in the range from n = ',NMINSR,' to n = ',
     1   NMAXSR,' axial halfwaves.',
     1 ' The critical stringer flange (Seg4) buckling mode from STFEIG',
     1 ' has', NWAVE,' axial half waves, which lies within this range.'
       ENDIF
      ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
      IF (ILOOP.EQ.1.AND.ISEG.EQ.3.AND.ISRMOD(5).EQ.1) CONARG =10.E+20
      IF (ILOOP.EQ.1.AND.ISEG.EQ.4.AND.ISRMOD(8).EQ.1) CONARG =10.E+20
C END FEB 2006
      IF (IMOD.EQ.0.AND.ILOOP.EQ.2
     1 .AND.(ISTIF.EQ.3.OR.FKNOCK.GT.0.99.OR.ISEG.EQ.4)
C BEG JUN 2004
     1 .AND.IRNIDY.EQ.1.AND.NWAVE.GE.NMINRG.AND.NWAVE.LE.NMAXRG) THEN
C    1 .AND.IRNIDX.EQ.1.AND.NWAVE.GE.NMINRG.AND.NWAVE.LE.NMAXRG) THEN
C END JUN 2004
C    1 .AND.FKNOC9.GT.0.99) THEN
       IF (ISEG.EQ.3) THEN
         IRNMOD(5) = 1
C        IF (IMOD.EQ.0.AND.NPRT.GE.0) WRITE(IFILE,
         IF (IMOD.EQ.0.AND.NPRT.GE.1) WRITE(IFILE,
     1           '(/,A,/,A,/,A,/,A,/,A,I5,A,I5,A,/,A,I5,/,A)')
     1 ' Ring Seg. 3 buckling (no participation of the panel skin)',
     1 ' is not recorded as a margin because this type of buckling',
     1 ' has been superseded by the results from the discretized',
     1 ' "skin"-ring module model, for which buckling load factors',
     1 ' have been computed in the range from n = ',NMINRG,' to n = ',
     1   NMAXRG,' circ. halfwaves.',
     1 ' The critical ring web (Seg.3) buckling mode from STFEIG has',
     1   NWAVE,' circ. half waves, which lies within this range.'
       ENDIF
       IF (ISEG.EQ.4) THEN
         IRNMOD(8) = 1
C        IF (IMOD.EQ.0.AND.NPRT.GE.0) WRITE(IFILE,
         IF (IMOD.EQ.0.AND.NPRT.GE.1) WRITE(IFILE,
     1           '(/,A,/,A,/,A,/,A,/,A,I5,A,I5,A,/,A,A,I5,/,A)')
     1 ' Ring Seg. 4 buckling (no participation of the panel skin)',
     1 ' is not recorded as a margin because this type of buckling',
     1 ' has been superseded by the results from the discretized',
     1 ' "skin"-ring module model, for which buckling load factors',
     1 ' have been computed in the range from n = ',NMINRG,' to n = ',
     1   NMAXRG,' circ. halfwaves.',
     1 ' The critical ring flange (Seg.4) buckling mode from STFEIG',
     1 ' has', NWAVE,' circ. half waves, which lies within this range.'
       ENDIF
      ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
      IF (ILOOP.EQ.2.AND.ISEG.EQ.3.AND.IRNMOD(5).EQ.1) CONARG =10.E+20
      IF (ILOOP.EQ.2.AND.ISEG.EQ.4.AND.IRNMOD(8).EQ.1) CONARG =10.E+20
C END OCT 1998
      CALL CONVR2(ISEG,CISEG)
      CALL CONVRF(FSAFE,CN2)
C BEG OCT 1998
      IF (IMOD.EQ.0.AND.CONARG.LT.MAXCON) THEN
C END OCT 1998
         ICAR = ICAR + 1
         CNP = 'MIDLENGTH'
C BEG MAY 1997
         IF (NOPO.EQ.1) CNP = 'NO POSTBK'
C END MAY 1997
         IF (MIDEND.EQ.2.OR.ICASE.EQ.2) CNP = 'PANEL END'
C BEG APR 1992
         IF (ATRING.AND.ICASE.EQ.2)     CNP = 'AT RINGS '
C END APR 1992
C BEG AUG 1992
         IF (ISTIF.NE.5) THEN
            IF (ISOGRD.EQ.0.OR.ILOOP.EQ.2) PCWORD(ICAR)=
     1         'buckling: '//CN//' seg.'//CISEG//'. '//CNP
            IF (ISOGRD.EQ.1.AND.ILOOP.EQ.1) THEN
               IF (ISEG.EQ.3) PCWORD(ICAR)=
     1            'buckling: '//CN//' web.    '//CNP
               IF (ISEG.EQ.4) PCWORD(ICAR)=
     1            'buckling: '//CN//' flange. '//CNP
            ENDIF
         ENDIF
C END AUG 1992
         IF (ISTIF.EQ.5) PCWORD(ICAR)=
     1 'buckling (wide column): '//CN//' seg.'//CISEG//'. '//CNP
C BEG OCT 1998
         CPLOT(ICAR) = CONARG - 1.
C END OCT 1998
         IADDCC(ICAR) = 10*ISEG + ILOOP
C BEG MAR 1991
         FSAFEP(ICAR) = FSAFE
C END MAR 1991
      ENDIF
C
C BEG OCT 1998
      IF (IMOD.EQ.0.AND.CONARG.GT.CONMAX) GO TO 100
C END OCT 1998
      IF (IMOD.EQ.1.AND.IPOINC(INUMTT).EQ.0) GO TO 100
C
      ICONST = ICONST + 1
      IF (IMOD.EQ.0) IPOINC(INUMTT) = 1
C BEG OCT 1998
      CONSTR(ICONST) = CONARG
C END OCT 1998
C
C BEG SEPT 1990
C BEG AUG 1992
      IF (ISTIF.NE.5) THEN
         IF (ISOGRD.EQ.0.OR.ILOOP.EQ.2) WORDB(ICONST)=
C BEG JUN 1996
     1      'buckling margin '//CN//' Iseg.'//CISEG//
C END JUN 1996
     1      '. Local halfwaves='//CM//'.'//CNN//';FS='//CN2
         IF (ISOGRD.EQ.1.AND.ILOOP.EQ.1) THEN
           IF (ISEG.EQ.3) WORDB(ICONST)=
     1        'buckling margin '//CN//' web'//
     1        '. Local halfwaves='//CM//'.'//CNN//';FS='//CN2
           IF (ISEG.EQ.4) WORDB(ICONST)=
     1        'buckling margin '//CN//' flange'//
     1        '. Local halfwaves='//CM//'.'//CNN//';FS='//CN2
         ENDIF
      ENDIF
C END AUG 1992
C END SEPT 1990
      IF (ISTIF.EQ.5) WORDB(ICONST)=
C BEG JUN 1996
     1      'buckling marg. '//CN//' Iseg.(width-wise wide col.)'
C END JUN 1996
     1     //CNN//';FS='//CN2
C
      IADDB(ICONST) = ILOOP + 10*ISEG
C BEG APR 2007
      IF (NPRT.GE.0) WRITE(8,'(A,1P,E12.4,2X,A)')
     1 ' Margin=',CONSTR(ICONST)-1.,WORDB(ICONST)
C END APR 2007
  100 CONTINUE
C BEG AUG 1992
      IF (NPRT.GE.2) THEN
C END AUG 1992 
C   MANY STATEMENTS HAVING TO DO WITH TITLE REMOVED FROM HERE AND
C   INSERTED IN SUBROUTINE STFEIG.
         IF (ILOOP.EQ.1.AND.ISEG.EQ.2.AND.ICRIP.NE.0) GO TO 200
         IF (ISWTCH.EQ.0) THEN
C BEG AUG 1992
            NFIXP = NFIX
            NVARP = NVAR
            IF (ILOOP.EQ.1.AND.ISOGRD.EQ.1.AND.ISEG.EQ.3) THEN
               NFIXP = 0.5*(WBFIX(1) + WBFIX(2))
               NVARP = 0.5*(WBVAR(1) + WBVAR(2))
            ENDIF
            IF (IREDUC.NE.0) WRITE(IFILE,120) CN,ISEG,NFIXP,NVARP,
     1                       EIGPRE,LAMBDA,NWAVE,COMMNT
            IF (IREDUC.EQ.0)
     1      WRITE(IFILE,122) CN,ISEG,NFIXP,NVARP,EIGPRE,NWAVE,COMMNT
  120       FORMAT(2X,A8,I6,1PE15.4,1PE13.4,1PE13.4,1PE14.4,I10,5X,A)
  122       FORMAT(2X,A8,I6,1PE15.4,1PE13.4,1PE13.4,14X,I10,5X,A)
         ELSE
            IF (IREDUC.NE.0)
     1      WRITE(IFILE,124) CN,ISEG,NFIX,EIGPRE,LAMBDA,NWAVE,COMMNT
            IF (IREDUC.EQ.0)
     1      WRITE(IFILE,126) CN,ISEG,NFIX,EIGPRE,NWAVE,COMMNT
C END AUG 1992
  124       FORMAT(2X,A8,I6,1PE15.4,'    neglected',1PE13.4,1PE14.4,
     1             I10,5X,A)
  126       FORMAT(2X,A8,I6,1PE15.4,'    neglected',1PE13.4,14X,
     1             I10,5X,A)
         ENDIF
      ENDIF
C
  200 CONTINUE
C BEG FEB 1996
 2222 CONTINUE
C END FEB 1996
      RETURN
      END
C
C
C
C=DECK      CRIPP2
      SUBROUTINE CRIPP2(ILOOP,ISTIF,A0,H,W,C3,C4,NVAR3,NVAR4,
     1     NFIX3,NFIX4,T,GT,IREDUC,CONMAX,IMOD,IPOINC,INUMTT,
     1     ICONST,CONSTR,WORDB,IADDB,IFILE,JJJ,MIDEND,ICASE,FSBSTF,
C BEG DEC 2000
C BEG FEB 2006
     1     EIGPRE,ILAMB2,ICRIPX,NOPO,FKNOC9,JSTIFF,ICON,FSLOC)
C END FEB 2006
C END DEC 2000
C
C  PURPOSE IS TO FIND THE CRIPPLING MARGIN FOR A STIFFENER WEB AND
C  FLANGE BUCKLING TOGETHER, BUT WITH CORNER BETWEEN THEM NOT MOVING.
C
C BEG NOV 2006
      COMMON/IHILCX/IHILOC
C END NOV 2006
C BEG JUN 2004
      COMMON/NRNGEY/IRNIDY
C BEG FEB 2006
      COMMON/NSTREX/NMINSR,NMAXSR,ISRMOD(10),ISRIDX
      COMMON/NSTREY/ISRIDY
C END FEB 2006
C BEG OCT 1998
C BEG OCT 1998
      COMMON/NRNGEX/NMINRG,NMAXRG,IRNMOD(10),IRNIDX
C END OCT 1998
C BEG FEB 1996
      COMMON/IRESTX/IRESTY
C END FEB 1996
      COMMON/FMAXPP/MAXCON
      COMMON/WORDS5/PCWORD(99)
      COMMON/PLOTCD/ICAR,IADDCC(99),CPLOT(99)
C BEG MAR 1991
      COMMON/FSAFEB/FSAFEP(99)
C END MAR 1991
C BEG APR 1992
      COMMON/ATRNGS/ATRING
      LOGICAL ATRING
C END APR 1992
C BEG AUG 1992
      COMMON/ISOGR/ISOGRD,ISOANG
C BEG DEC 2000 (FOLLOWING LINE COMMENTED OUT
C     COMMON/ISOGR2/JSTIFF
C END DEC 2000
      CHARACTER*2 CSTIFF
      INTEGER DM
C END AUG 1992
      CHARACTER*80 PCWORD
      CHARACTER*9 CNP
      REAL MAXCON
      CHARACTER*7 CN3
      DIMENSION ILAMB2(*)
      COMMON/OUTP/NPRT
      DIMENSION C3(6,6),C4(6,6),CONSTR(*),WORDB(*),IADDB(*),IPOINC(*)
      DIMENSION GT(*)
      CHARACTER*80 WORDB
      CHARACTER*8 CN
      CHARACTER*4 CNN
      CHARACTER*3 CM
      CHARACTER*7 CN2
      REAL NVAR3,NVAR4,NFIX3,NFIX4,LAMBDA,NUM1,NUM2,LAMB2
      REAL NBAR,MBAR,NBAR2,MBAR2
C
      EIGPRE = 10.E+16
      LAMBDA = 10.E+16
C BEG DEC 2000
      IF (ICON.EQ.1) THEN
         INUMTT = INUMTT + 1
         FSAFE  = 1.40*FSBSTF
         CN = '  ring  '
         IF (ILOOP.EQ.1) THEN
            CN = 'stringer'
            IF (ISOGRD.EQ.1) THEN
               CALL CONVR2(JSTIFF,CSTIFF)
               CN = 'isogrd'//CSTIFF
            ENDIF
         ENDIF
         CNN= 'MID.'
         IF (NOPO.EQ.1) CNN = 'NOPO'
         IF (MIDEND.EQ.2.OR.ICASE.EQ.2) CNN = 'ENDS'
         IF (ATRING.AND.ICASE.EQ.2)     CNN = 'RNGS'
      ENDIF
C END DEC 2000
      IF (IMOD.EQ.1.AND.ICRIPX.EQ.1) RETURN
      IF (IMOD.EQ.0) ICRIPX = 0
      IF (IMOD.EQ.0.AND.NVAR3.GE.0.0.AND.NVAR4.GE.0.) THEN
         ICRIPX = 1
         RETURN
      ENDIF
      PI = 3.1415927
      DEN = 12.
      IF (ISTIF.EQ.2) DEN = 3.
      NBAR = PI/H
      NBAR2 = NBAR*NBAR
      WS3 = (2.*PI*PI/DEN)*(W/H)**3
      FM = 1.0
      EIGSAV = 0.
C BEG DEC 2000
      IF (NPRT.GE.2) THEN
C BEG JUN 2004
        IF (ILOOP.EQ.1.AND.ISOGRD.EQ.1) THEN
         WRITE(IFILE,'(/,A,/,A,I5,/,A,1P3E12.4)')
     1 ' Entering CRIPP2 (Segs 3+4 buckling). See Items 19, 30.',
     1 ' Segs 3+4 buckling of isogrid stiffener set no.,',JSTIFF,
     1 ' Stif.Length, web height, flange width=',A0,H,W
        ELSE
         WRITE(IFILE,'(/,A,/,A,1P3E12.4)')
     1 ' Entering CRIPP2 (Segs 3+4 buckling). See Items 19, 30.',
     1 ' Stif.Length, web height, flange width=',A0,H,W
        ENDIF
C BEG FEB 2006
      ENDIF
C END FEB 2006
C END JUN 2004
C BEG FEB 2007
        IF (NPRT.GE.1)
     1  WRITE(IFILE,'(A,1P2E12.4,/,A,1P2E12.4,/,A,1P2E12.4)')
     1 ' Fixed resultants at web root, web tip=',NFIX3,NFIX3,
     1 ' EIGEN resultants at web root, web tip=',NVAR3,NVAR3,
     1 ' Fixed and EIGEN resultants in flange =',NFIX4,NVAR4
C END FEB 2007
C23456789012345678901234567890123456789012345678901234567890123456789012
C END DEC 2000
   10 CONTINUE
      MBAR = FM*PI/A0
      MBAR2 = MBAR*MBAR
      UWEB  = C3(4,4)*MBAR2 +(2.*C3(4,5)+4.*C3(6,6))*NBAR2
     1      +C3(5,5)*NBAR2**2/MBAR2
      P1  = MBAR2*WS3
      P2  = 4.*NBAR2*2.*(W/H)
      UFLNGS = C4(4,4)*P1 +C4(6,6)*P2
      CS     = 0.
      IF (C4(4,6).EQ.0.0) GO TO 30
      C44 = C4(4,4)
      C45 = C4(4,5)
      C46 = C4(4,6)
      C55 = C4(5,5)
      C56 = C4(5,6)
      C66 = C4(6,6)
      DC = 0.1
      IF (C46.LT.0.0) DC = -0.1
      C   = 0.
   20 CONTINUE
      C  = C + DC
      CC = C*C
      CCC= CC*C
      CCCC= CCC*C
      D11EFF = C44 +2.*C45*CC +C55*CCCC -4.*(C46*C +C56*CCC -C66*CC)
      D66EFF = C66 - 2.*C56*C + C55*CC
      UFLANG = D11EFF*P1 +D66EFF*P2
      IF (UFLANG.LT.UFLNGS) THEN
         UFLNGS = UFLANG
         CS     = C
         IF (ABS(C).LT.2.) GO TO 20
      ENDIF
   30 CONTINUE
      NUM1 = UWEB + UFLNGS
      ADDX = NFIX3 + WS3*NFIX4
      ADDV = NVAR3 + WS3*NVAR4
      NUM2    = -(NUM1 + ADDX)
      LAMBDA  =  NUM2/ADDV
      LAMB2   = -NUM1/(ADDX + ADDV)
      INDX = 1
      IF (CNN.EQ.'ENDS'.OR.CNN.EQ.'RNGS') INDX = 2
      IF (IMOD.EQ.0) ILAMB2(INDX) = 0
      IF (NUM2.GE.0.0.OR.ILAMB2(INDX).EQ.1) THEN
         IF (IMOD.EQ.0) THEN
            WRITE(IFILE,40) CN,CNN,NFIX3,NFIX4
            ILAMB2(INDX) = 1
C BEG FEB 1999
            CALL LOADBA(5)
C END FEB 1999
            IF (IRESTY.EQ.1) GO TO 2222
         ENDIF
   40    FORMAT(/' *** NOTE **** NOTE **** NOTE ***'/
     1' TYPE OF STIFFENER                                 =',A/
     1' LOCATION IN PANEL                                 =',A/
     1' AXIAL RESULTANT IN SEGMENT 3 FROM LOAD SET B, NFIX3=',1PE12.4/
     1' AXIAL RESULTANT IN SEGMENT 4 FROM LOAD SET B, NFIX4=',1PE12.4/
     1' THESE AXIAL RESULTANTS WILL CAUSE BUCKLING BY THEMSELVES.'/
     1' TEMPORARILY (FOR THE PURPOSE OF CALCULATING THIS PARTICULAR'/
     1' BUCKLING LOAD FACTOR), PANDA2 COMBINES THE AXIAL RESULTANTS'/
     1' IN THESE STIFFENER SEGMENTS FROM LOAD SET B WITH THOSE FROM'/
     1' LOAD SET A AND PROCEEDS.'/
     1' ***** END NOTE  ***  END NOTE  ***   END NOTE   *********'/)
C BEG MAR 1997
C        IF ((ADDX+ADDV).GT.0.) GO TO 100
         IF ((ADDX+ADDV).GT.0.) THEN
            LAMBDA = 10.E+16
            EIGPRE = 10.E+16
C BEG APR 1997
            IF (IMOD.EQ.0) THEN
               ICRIPX = 1
               GO TO 100
            ENDIF
C END APR 1997
            IF (IMOD.EQ.1) GO TO 75
         ENDIF
C END MAR 1997
         LAMBDA = LAMB2
         GO TO 50
      ENDIF
C BEG MAR 1997
C     IF (ADDV.GT.0.0) GO TO 100
      IF (ADDV.GT.0.0) THEN
         LAMBDA = 10.E+16
         EIGPRE = 10.E+16
C BEG APR 1997
         IF (IMOD.EQ.0) THEN
            ICRIPX = 1
            GO TO 100
         ENDIF
C END APR 1997
         IF (IMOD.EQ.1) GO TO 75
      ENDIF
C END MAR 1997
   50 CONTINUE
      M = FM
C     WRITE(IFILE,*)' ISTIF,M,ADDV,LAMBDA=',ISTIF,M,ADDV,LAMBDA
C BEG AUG 1992
      DM = 0.1*M
      IF (DM.EQ.0) DM = 1
C BEG DEC 2000
      IF (NPRT.GE.2)
     1   WRITE(IFILE,'(A,I5,1PE12.4)') ' M,LAMBDA=',M,LAMBDA
C END DEC 2000
      IF (LAMBDA.LE.EIGSAV.OR.M.EQ.1) THEN
         EIGSAV = LAMBDA
         M = M + DM
         FM= M
         GO TO 10
      ELSE
         EIGPRE = EIGSAV
         M = M - DM
      ENDIF
C END AUG 1992
C     WRITE(8,*) ' M,LAMBDA=',M,LAMBDA
      LAMBDA = EIGPRE
C BEG APR 1993
C BEG OCT 1996
C BEG NOV 1997
      CALL SHRRED(IREDUC,NVAR4,0.,0.,T,T,GT,EIGPRE,0,1,JJJ,0.,0.,1,
     1            0.,0.,13)
C END NOV 1997
C END OCT 1996
C END APR 1993
C
C BEG MAR 1997
   75 CONTINUE
C END MAR 1997
C     WRITE(8,*)' ILOOP,ISEG,LAMBDA,CONMAX=',ILOOP,ISEG,LAMBDA,CONMAX
C BEG DEC 2000
      IF (ICON.EQ.1) THEN
         CALL CONVRT(M,CM)
         CALL CONVRF(FSAFE,CN2)
         CALL CONVRF(CS,CN3)
         EIGSAF = EIGPRE/FSAFE
C BEG FEB 2006
C BEG NOV 2006
C        IF (IMOD.EQ.0.AND.ILOOP.EQ.1.AND.FSLOC.GT.1000000.
         IF (IMOD.EQ.0.AND.ILOOP.EQ.1.AND.IHILOC.EQ.1
C END NOV 2006
     1    .AND.ISRIDY.EQ.1.AND.M.GE.NMINSR.AND.M.LE.NMAXSR) THEN
            ISRMOD(9) = 1
C           IF (NPRT.GE.0) WRITE(IFILE,
            IF (NPRT.GE.1) WRITE(IFILE,
     1           '(/,A,/,A,/,A,/,A,/,A,I5,A,I5,A,/,A,I5,/,A)')
     1   ' Stringer Seg. 3+4 buckling (no participation of panel skin)',
     1   ' is not recorded as a margin because this type of buckling',
     1   ' has been superseded by the results from the discretized',
     1   ' skin-stringer module model, for which buckling load factors',
     1   ' have been computed in the range from n = ',NMINSR,' to n = ',
     1     NMAXSR,' axial halfwaves.',
     1   ' The critical stringer seg.3+4 buckling mode from STFEIG has',
     1     M,' axial half waves, which lies within this range.'
         ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
         IF (ILOOP.EQ.1.AND.ISRMOD(9).EQ.1)  EIGSAF = 10.E+20
C END FEB 2006
C BEG OCT 1998
C        IF (IMOD.EQ.0.AND.ILOOP.EQ.2.AND.FKNOC9.GT.0.99
         IF (IMOD.EQ.0.AND.ILOOP.EQ.2
C BEG JUN 2004
     1    .AND.IRNIDY.EQ.1.AND.M.GE.NMINRG.AND.M.LE.NMAXRG) THEN
C    1    .AND.IRNIDX.EQ.1.AND.M.GE.NMINRG.AND.M.LE.NMAXRG) THEN
C END JUN 2004
            IRNMOD(9) = 1
C           IF (NPRT.GE.0) WRITE(IFILE,
            IF (NPRT.GE.1) WRITE(IFILE,
     1           '(/,A,/,A,/,A,/,A,/,A,I5,A,I5,A,/,A,I5,/,A)')
     1   ' Ring Seg. 3+4 buckling (no participation of the panel skin)',
     1   ' is not recorded as a margin because this type of buckling',
     1   ' has been superseded by the results from the discretized',
     1   ' "skin"-ring module model, for which buckling load factors',
     1   ' have been computed in the range from n = ',NMINRG,' to n = ',
     1     NMAXRG,' circ. halfwaves.',
     1   ' The critical ring seg.3+4 buckling mode from STFEIG has',
     1     M,' circ. half waves, which lies within this range.'
         ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
         IF (ILOOP.EQ.2.AND.IRNMOD(9).EQ.1)  EIGSAF = 10.E+20
C END OCT 1998
         IF (IMOD.EQ.0.AND.EIGSAF.LT.MAXCON) THEN
            ICAR = ICAR + 1
            CNP = 'MIDLENGTH'
C BEG MAY 1997
            IF (NOPO.EQ.1) CNP = 'NO POSTBK'
C END MAY 1997
            IF (MIDEND.EQ.2.OR.ICASE.EQ.2) CNP = 'PANEL END'
C BEG AUG 1992
            IF (ATRING.AND.ICASE.EQ.2)     CNP = 'AT RINGS '
C END AUG 1992
            PCWORD(ICAR)=
C BEG JUN 1996
     1    'buckling: '//CN//' Isegs.3+4. '//CNP
C END JUN 1996
C BEG OCT 1998
C           CPLOT(ICAR) = EIGPRE/FSAFE - 1.
            CPLOT(ICAR) = EIGSAF - 1.
C END OCT 1998
            IADDCC(ICAR) = ILOOP
C BEG MAR 1991
            FSAFEP(ICAR) = FSAFE
C END MAR 1991
         ENDIF
C NOTE CHANGE OF FOLLOWING STATEMENT:  "EIGPRE" CHANGED TO "EIGSAF" :
         IF (IMOD.EQ.0.AND.EIGSAF.GT.CONMAX) GO TO 100
         IF (IMOD.EQ.1.AND.IPOINC(INUMTT).EQ.0) GO TO 100
C
         ICONST = ICONST + 1
         IF (IMOD.EQ.0) IPOINC(INUMTT) = 1
         CONSTR(ICONST) = EIGPRE/FSAFE
C BEG SEPT 1990
         WORDB(ICONST)=
C BEG JUN 1996
     1    'buckling '//CN//' Isegs.3+4 together.M='//CM//
C END JUN 1996
     1    ';C='//CN3//';'//CNN//';FS='//CN2
C END SEPT 1990
C
         IADDB(ICONST) = ILOOP
C BEG APR 2007
  495 CONTINUE
         IF (NPRT.GE.0) WRITE(8,'(A,1P,E12.4,2X,A)')
     1 ' Margin=',CONSTR(ICONST)-1.,WORDB(ICONST)
C END APR 2007
      ENDIF
C END DEC 2000
C
  100 CONTINUE
C BEG MAR 1997 (COMMENT OUT THE FOLLOWING)
C     IF (EIGPRE.GT.10.E+15) GO TO 200
C END MAR 1997
C BEG AUG 1992
C BEG DEC 2000
      IF (ICON.EQ.1.AND.NPRT.GE.2) THEN
C END DEC 2000
         IF(ILOOP.EQ.1) WRITE(IFILE,110)
  110    FORMAT(/' Buckling of stringer segments 3 and 4 together,'
     1 ' line of intersection of web and flange remains straight.')
         IF(ILOOP.EQ.2) WRITE(IFILE,111)
  111    FORMAT(/' Buckling of   ring   segments 3 and 4 together,'
     1 ' line of intersection of web and flange remains straight.')
         ISEG = 3
         WRITE(IFILE,118) CN,ISEG,NFIX3,NVAR3
  118    FORMAT(2X,A8,I6,1PE15.4,1PE13.4)
         ISEG = 4
         IF (IREDUC.NE.0)
     1   WRITE(IFILE,120) CN,ISEG,NFIX4,NVAR4,LAMBDA,EIGPRE,M
         IF (IREDUC.EQ.0)
     1   WRITE(IFILE,122) CN,ISEG,NFIX4,NVAR4,LAMBDA,M
  120    FORMAT(2X,A8,I6,1PE15.4,1PE13.4,1PE13.4,1PE14.4,I10)
  122    FORMAT(2X,A8,I6,1PE15.4,1PE13.4,1PE13.4,14X,I10)
C END AUG 1992
      ENDIF
C
  200 CONTINUE
C BEG FEB 1996
 2222 CONTINUE
C END FEB 1996
      RETURN
      END
C
C
C
C BEG AUG 1992
C=DECK      EIGISO
      SUBROUTINE EIGISO(JSTIFF,IFILE,FACT,L,H,W,CX,RSTOT,RSEIG,
     1                  WBTOT,WBEIG,EIG,NBAR,IMOD,ILAM)
C
C  PURPOSE IS TO OBTAIN BUCKLING LOAD FACTOR FOR TEE- OR JAY-STIFFENED
C  ISOGRID STIFFENER. It has been determined that the JSTIFFth stiffener
C  set (there are three sets of stiffeners with the isogrid config.)
C  has the most compressive resultants. The buckling load factor is
C  calculated from a Ritz method with two unknowns. The normal
C  displacement in the stiffener web is assumed to be in the form
C
C         w = (as + bs**2 + cs**3)*sin(NBAR*PI*x/L)              (1)
C
C  in which a, b, and c are unknowns, s is the coordinate in the web
C  normal to the panel skin, x is the coordinate along the axis of the
C  stiffener, NBAR is the number of halfwaves over the length L, and
C  L is the length of one of the edges of the equilateral triangle
C  formed by the isogrid.
C
C  It is assumed here that the flange cross section does not deform
C  in the plane of the screen (in the local flange s direction)
C  and that its rotation about its line of attachment to the web must
C  be the same as the rotation of the web along that line (where s = H).
C
C  If it is assumed that the web is hinged along its line of attachment
C  to the panel skin (where s = 0), then w,ss must be zero along that
C  line. This edge condition is satisfied if the unknown b is taken to
C  be zero.
C
C  In-plane bending of the flange is, of course, accounted for. This
C  is the bending that gives rise to the "EI" terms in the A and B
C  matrices developed below. 
C
C BEG DEC 2000
      COMMON/OUTP/NPRT
      DIMENSION EIGALL(5),NALL(5)
C END DEC 2000
C BEG FEB 1996
      COMMON/IRESTX/IRESTY
C END FEB 1996
C BEG MAY 1993
      COMMON/DELIMP/DELFCE(4,2),DELISO(4,3),DELSKN(3,2,2),DELWEB(2)
C END MAY 1993
      DIMENSION CX(6,6,5),RSTOT(3,5,3),RSEIG(3,5,3)
      DIMENSION WBTOT(2,4,2),WBEIG(2,4,2)
      REAL L,N,N2,N3,N4,NWF,NFF,NWV,NFV,NWVR,NWVD,NWFR,NWFD,NWVT,NWFT
C
      W3 = W**3
      FW3= FACT*W3
      H2 = H*H
      H3 = H2*H
      H4 = H3*H
      H5 = H4*H
      H6 = H5*H
      H7 = H6*H
      EI = 0.
      IF (CX(2,2,4).GT.0.0) THEN
         C11S = CX(1,1,4) - CX(1,2,4)**2/CX(2,2,4)
         EI = C11S*FW3/3.
      ENDIF
      C55W = CX(4,4,3)
      C45W = CX(4,5,3)
      C44W = CX(5,5,3)
      C66W = CX(6,6,3)
      C55F = CX(4,4,4)
      C45F = CX(4,5,4)
      C44F = CX(5,5,4)
      C66F = CX(6,6,4)
      NWFR = WBTOT(1,JSTIFF,1)
      NWFT = WBTOT(2,JSTIFF,1)
      NWVR = WBEIG(1,JSTIFF,1)
C BEG MAY 1993
      NWVT = WBEIG(2,JSTIFF,1) + DELISO(3,JSTIFF)
C END MAY 1993
      NWFD = NWFT-NWFR
      NWVD = NWVT-NWVR
      NWF = RSTOT(1,3,JSTIFF)
      NFF = RSTOT(1,4,JSTIFF)
C BEG MAY 1993
      NWV = RSEIG(1,3,JSTIFF) + 0.5*DELISO(3,JSTIFF)
      NFV = RSEIG(1,4,JSTIFF) + DELISO(4,JSTIFF)
C     WRITE(IFILE,*)
C    1        ' EIGISO: JSTIFF,DELISO(3,JSTIFF),DELISO(4,JSTIFF)',
C    1                  JSTIFF,DELISO(3,JSTIFF),DELISO(4,JSTIFF)
C     WRITE(IFILE,*)' IN EIGISO: NWVT, NWV, NFV =',NWVT, NWV, NFV
C END MAY 1993
C
      EIG = 10.E+16
      PI = 3.1415927
      NBAR = 0
C BEG DEC 2000
      IF (NPRT.GE.2) THEN
        WRITE(IFILE,'(/,A,/,A,I2,/,A,1P3E12.4)')
     1 ' Entering EIGISO (Segs 3+4 rolling). See PANDA2.NEWS Item 122.',
     1 ' Rolling of isogrid set number         ',JSTIFF,
     1 ' stif.Length, web height, flange width=',L,H,W
C BEG FEB 2006
      ENDIF
C END FEB 2006
C BEG FEB 2007
         IF (NPRT.GE.1)
     1   WRITE(IFILE,'(A,1P2E12.4,/,A,1P2E12.4,/,A,1P2E12.4)')
     1 ' Fixed resultants at web root, web tip=',NWFR,NWFT,
     1 ' EIGEN resultants at web root, web tip=',NWVR,NWVT,
     1 ' Fixed and EIGEN resultants in flange =',NFF,NFV
C END FEB 2007
C23456789012345678901234567890123456789012345678901234567890123456789012
      EIGMIN = 10.E+16
C END DEC 2000
   10 CONTINUE
      EIGSVE = EIG
      NBAR = NBAR + 1
      FNBAR = NBAR
      N = FNBAR*PI/L
      N2= N*N
      N3= N2*N
      N4= N3*N
C
C  STIFFNESS MATRIX, A11, A12, A22:
C
      A11 = 2.*N4*H3*C55W/3.  +8.*N2*C66W*H
     1     +2.*N4*FW3*C55F/3. +8.*N2*C66F*W  + 2.*EI*N4*H2
      A12 = -4.*N2*C45W*H3 +2.*N4*C55W*H5/5. +8.*N2*C66W*H3
     1      +2.*N4*C55F*H2*FW3 +24.*C66F*N2*H2*W +2.*EI*N4*H4
      A22 = 24.*C44W*H3 -24.*N2*C45W*H5/5. +2.*N4*C55W*H7/7.
     1      +72.*N2*C66W*H5/5.
     1      +6.*C55F*N4*H4*FW3 +72.*C66F*N2*H4*W +2.*EI*N4*H6
C
C  LOAD-GEOMETRIC MATRIX WITH FIXED LOADS, B11, B12, B22:
C
      B11 =-H3*N2*(2.*NWFR/3.+NWFD/2.)-2.*NFF*N2*FW3/3. -2.*NFF*W*N2*H2
      B12 =-H5*N2*(2.*NWFR/5.+NWFD/3.)-2.*NFF*N2*FW3*H2 -2.*NFF*W*N2*H4
      B22 =-H7*N2*(2.*NWFR/7.+NWFD/4.)-6.*NFF*N2*FW3*H4 -2.*NFF*W*N2*H6
C
C  LOAD-GEOMETRIC MATRIX WITH EIGENVALUE LOADS, C11, C12, C22
C
      C11 =-H3*N2*(2.*NWVR/3.+NWVD/2.)-2.*NFV*N2*FW3/3. -2.*NFV*W*N2*H2
      C12 =-H5*N2*(2.*NWVR/5.+NWVD/3.)-2.*NFV*N2*FW3*H2 -2.*NFV*W*N2*H4
      C22 =-H7*N2*(2.*NWVR/7.+NWVD/4.)-6.*NFV*N2*FW3*H4 -2.*NFV*W*N2*H6
C
C  TEST TO SEE IF STIFFNESS MATRIX WITH FIXED LOADS ADDED IS
C  POSITIVE DEFINITE.
C
      DET = (A11-B11)*(A22-B22) - (A12-B12)**2
C
      IF (DET.GE.0.) THEN
         A11 = A11 - B11
         A12 = A12 - B12
         A22 = A22 - B22
      ENDIF
C BEG OCT 1994
      IF (DET.LT.0.0.OR.ILAM.EQ.1) THEN
C END OCT 1994
         IF (IMOD.EQ.0) ILAM = 1
C BEG FEB 1996
C BEG FEB 1999
         CALL LOADBA(6)
C END FEB 1999
         IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
         C11 = C11 + B11
         C12 = C12 + B12
         C22 = C22 + B22
      ENDIF
C
      DEL1 = A11*A22 - A12**2
      DEL2 = C11*C22 - C12**2
C     WRITE(IFILE,*)' DET,DEL1,DEL2=',DET,DEL1,DEL2
C     WRITE(IFILE,*)' A11,A12,A22=',A11,A12,A22
C     WRITE(IFILE,*)' B11,B12,B22=',B11,B12,B22
C     WRITE(IFILE,*)' C11,C12,C22=',C11,C12,C22
      B = (2.*A12*C12 -A22*C11 -A11*C22)/DEL2
      C = DEL1/DEL2
      DISCRM = B*B - 4.*C
      EIG = 10.E+16
      IF (DISCRM.LT.0.) THEN
         EIG = EIGSVE
         NBAR= NBAR - 1
         GO TO 100
      ENDIF
      EIGEN = (-B - SQRT(DISCRM))/2.
C     WRITE(IFILE,*) ' JSTIFF,NBAR,EIGEN=',JSTIFF,NBAR,EIGEN
      IF (EIGEN.LT.0.) THEN
         EIG = EIGSVE
         NBAR= NBAR - 1
         GO TO 100
      ENDIF
      EIG = EIGEN
C BEG DEC 2000
      IF (NPRT.GE.2)
     1   WRITE(IFILE,'(A,I5,1PE12.4)') ' NBAR,EIG=',NBAR,EIG
      IF (NBAR.LT.5) THEN
         EIGMIN = MIN(EIGMIN,EIG)
         EIGALL(NBAR) = EIG
         NALL(NBAR)   = NBAR
         GO TO 10
      ENDIF
      IF (EIG.LT.EIGSVE) GO TO 10
      EIG = EIGSVE
      NBAR = NBAR - 1
      DO 90 I = 1,4
         DIFF = ABS(EIGMIN - EIGALL(I))/ABS(EIGMIN)
         IF (DIFF.LT.0.0001) NCRIT = NALL(I)
   90 CONTINUE
      IF (EIG.GT.EIGMIN) THEN
         EIG = EIGMIN
         NBAR = NCRIT
      ENDIF
C END DEC 2000
  100 CONTINUE
C BEG FEB 1996
 2222 CONTINUE
C END FEB 1996
      RETURN
      END
C
C
C
C=DECK      WEBBUK
C BEG JUN 1996
      SUBROUTINE WEBBUK(IFILE,C,M,WIDTH,WBFIX,WBEIG,A0,EIG,N,IMOD,ILAM,
     1                  EFOUND)
C END JUN 1996
C
C  PURPOSE IS TO GET BUCKLING OF WEB WITH NONUNIFORM AXIAL COMPRESSION
C
C  INPUT VARIABLES...
C    C = constitutive terms for web.
C    M = starting number of halfwaves in axial length A0
C    WIDTH = height of the web
C    WBFIX = WBFIX(1),WBFIX(2)=web root,tip resultant, fixed loads
C    WBEIG = WBEIG(1),WBEIG(2)=web root,tip resultant, eigenvalue loads
C    A0 = length of web for this analysis.
C
C
C  OUTPUT...
C
C    EIG   = local web buckling load factor.
C      N   = number of halfwaves in buckling pattern
C
C BEG DEC 2000
      COMMON/OUTP/NPRT
C END DEC 2000
C BEG FEB 1996
      COMMON/IRESTX/IRESTY
C END FEB 1996
C BEG JULY 1995
      DOUBLE PRECISION A11,A12,A22,A23,A33,B11,B12,B22,B23,B33
C BEG AUG 1995
      DOUBLE PRECISION DETA,DEN,CQUAD,CLIN,CONST
C END AUG 1995
C END JULY 1995
      DIMENSION C(6,6),WBFIX(2),WBEIG(2)
      REAL MPI,M2,M4,NFIXM2,NVARM2,NFIXAL,NVARAL,NFACT
      INTEGER DN
C
      PI = 3.1415927
      PI2= PI*PI
      C44C55 = SQRT(C(4,4)*C(5,5))
      WBFAVE = 0.5*(WBFIX(1) +WBFIX(2))
      WBVAVE = 0.5*(WBEIG(1) +WBEIG(2))
      WBFDIF = ABS(WBFIX(1) - WBFIX(2))
      WBVDIF = ABS(WBEIG(1) - WBEIG(2))
      WBSUMA = ABS(WBFAVE) + ABS(WBVAVE)
      WBSUMD = WBFDIF + WBVDIF
      ISERCH = 1
C BEG DEC 2000
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG MAR 2005
C     IF (M.GT.5.AND.WBSUMA.GT.0.0.AND.(WBSUMD/WBSUMA).LT.1.0) ISERCH=0
      IF (M.GT.20.AND.WBSUMA.GT.0.0.AND.(WBSUMD/WBSUMA).LT.1.0) ISERCH=0
C END MAR 2005
C END DEC 2000
      NFACT = 1.0
      IF (WBVAVE.NE.0.) NFACT = ABS(C44C55/WBVAVE)
      CSUM = (C(4,5) +2.*C(6,6))/C44C55
      PIB = PI/WIDTH
      PIB2= PIB*PIB
      PIB4= PIB2*PIB2
      COEF1 = 8.*2./(PI2*9.)
      COEF2 = 8.*6./(PI2*25.)
      C55PIB= C(5,5)*PIB4/C44C55
      N = M
      NS = M
      DN = 0.1*M
      IF (DN.EQ.0) DN = 1
      EIGSVE = 10.E+16
C BEG DEC 2000
C BEG FEB 2006
C BEG FEB 2007
      IF (NPRT.GE.1) THEN
C END FEB 2007
C END FEB 2006
         WRITE(IFILE,'(/,A,/,A,1P2E12.4,/,A,1P2E12.4,/,A,1P2E12.4)')
     1 ' Entering WEBBUK (web buckling). See Items 121, 120d.',
     1 ' Length and height of web             =',A0,WIDTH,
     1 ' Fixed resultants at web root, web tip=',WBFIX(1),WBFIX(2),
     1 ' EIGEN resultants at web root, web tip=',WBEIG(1),WBEIG(2)
         WRITE(IFILE,'(A,I5,A,I5,A,I5)')
     1 ' Starting wavenumber=',N,'; increment=',DN,'; Search? ',ISERCH
C BEG FEB 2006
C BEG FEB 2007
      ENDIF
C END FEB 2007
C END FEB 2006
C23456789012345678901234567890123456789012345678901234567890123456789012
C END DEC 2000
      N = N - DN
   10 CONTINUE
      N = N + DN
      MPI= FLOAT(N)*PI/A0
      M2 = MPI*MPI
      M4 = M2*M2
      NFIXM2 = M2*WBFAVE/C44C55
      NFIXAL = M2*WBFDIF/C44C55
      NVARM2 = NFACT*M2*WBVAVE/C44C55
      NVARAL = NFACT*M2*WBVDIF/C44C55
C BEG JUN 1996
C     C44M4 = C(4,4)*M4/C44C55
      C44M4 = (C(4,4)*M4 + EFOUND)/C44C55
C END JUN 1996
      CSUMM2= 2.*M2*CSUM*PIB2
C
      A11 = C44M4 +CSUMM2    +C55PIB     +NFIXM2
      A12 = NFIXAL*COEF1
      A22 = C44M4 +4.*CSUMM2 +16.*C55PIB +NFIXM2
      A23 = NFIXAL*COEF2
      A33 = C44M4 +9.*CSUMM2 +81.*C55PIB +NFIXM2
C
      B11 = NVARM2
      B12 = NVARAL*COEF1
      B22 = NVARM2
      B23 = NVARAL*COEF2
      B33 = NVARM2
C
C  CHECK FOR POSITIVE DEFINITENESS OF A, AND IF A IS NOT POSITIVE
C  DEFINITE, PUT FIXED LOADS WITH VARIABLE LOADS IN THE B-MATRIX.
C
      DETA = A11*(A22*A33 - A23**2) -A12*A12*A33
C     WRITE(IFILE,*)' DETA=',DETA
      IF (DETA.LT.0.0.OR.ILAM.EQ.1) THEN
         IF (IMOD.EQ.0) ILAM = 1
C BEG FEB 1996
C BEG FEB 1999
         CALL LOADBA(7)
C END FEB 1999
         IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
         A11 = C44M4 +CSUMM2    +C55PIB
         A12 = 0.
         A22 = C44M4 +4.*CSUMM2 +16.*C55PIB
         A23 = 0.
         A33 = C44M4 +9.*CSUMM2 +81.*C55PIB
C
         B11 = NVARM2 +NFIXM2*NFACT
         B12 = (NVARAL +NFIXAL*NFACT)*COEF1
         B22 = NVARM2 +NFIXM2*NFACT
         B23 = (NVARAL +NFIXAL*NFACT)*COEF2
         B33 = NVARM2 +NFIXM2*NFACT
      ENDIF
C
C  CALCULATE POLYNOMIAL FOR EIGENVALUE, EIG:
C
C  COEFFICIENT FOR CUBIC TERM...
      DEN = B11*(B22*B33-B23**2) -B33*B12**2
C  COEFFICIENT FOR QUADRATIC TERM...
      CQUAD = A11*(B22*B33-B23**2) +B11*(B22*A33+B33*A22-2.*A23*B23)
     1       -A33*B12**2 -2.*B33*A12*B12
C  COEFFICIENT FOR LINEAR TERM...
      CLIN  = A11*(B22*A33 +B33*A22 -2.*A23*B23)
     1       +B11*(A22*A33-A23**2) -2.*A33*A12*B12 -B33*A12**2
C  COEFFICIENT FOR CONSTANT TERM...
      CONST = A11*(A22*A33-A23**2) -A33*A12**2
C
C  GET IT INTO THE STANDARD FORM...
C
C     WRITE(IFILE,*) ' A11,A12,A22,A23,A33=',A11,A12,A22,A23,A33
C     WRITE(IFILE,*) ' B11,B12,B22,B23,B33=',B11,B12,B22,B23,B33
C     WRITE(IFILE,*) ' DEN   =',DEN
C     WRITE(IFILE,*) ' CQUAD =',CQUAD
C     WRITE(IFILE,*) ' CLIN  =',CLIN
C     WRITE(IFILE,*) ' CONST =',CONST
C BEG AUG 1995
C BEG MAR 1997
C     CALL CUBIC(CONST,CLIN,CQUAD,DEN,EIG)
      CALL CUBIC(CONST,CLIN,CQUAD,DEN,EIG,IMOD,IDUM,JDUM,0,0,1)
C END MAR 1997
C END AUG 1995
C
C BEG DEC 2000
      IF (NPRT.GE.2)
     1   WRITE(IFILE,'(A,I5,1PE12.4)') ' N,EIG=',N,EIG*NFACT
C END DEC 2000
      IF (EIG.GT.10.E+15) RETURN
      IF (ISERCH.EQ.0) GO TO 100
      IF (EIG.LT.EIGSVE) THEN
         EIGSVE = EIG
         NS = N
         IF (N.LT.(3*M)) GO TO 10
      ELSE
         EIG = EIGSVE
         N = NS
      ENDIF
  100 CONTINUE
      IF (EIG.LT.10.E+15) EIG = EIG*NFACT
C
C BEG FEB 1996
 2222 CONTINUE
C END FEB 1996
      RETURN
      END
C
C
C
C=DECK      ENDBUK
      SUBROUTINE ENDBUK(IFILE,ISTIF,ISEG,C,FMJ,WIDTH,
     1                  WBTOT,WBEIG,FVAR,FFIX,S,LAMBDA,IMOD,ILAM)
C
C  PURPOSE IS TO GET BUCKLING OF END SEGMENT OF STIFFENER.
C  The normal displacement, w, in the segment is assumed to have
C  the form
C             w = ay*sin[m(x-sy)].
C  Input variables:
C   ISTIF = stiffener type.  1 = Tee, 2 = Jay, 3 = blade
C    ISEG = panel module segment number. ISEG = 3 means web, 4 = flange
C       C = 6x6 constitutive matrix for segment ISEG
C     FMJ = m*pi/L, where L is the relevant axial length of stiffener part.
C   WIDTH = width of the stiffener part.
C   WBTOT = fixed axial loads at root WBTOT(1) and tip WBTOT(2)
C           of web.
C   WBEIG = eigenvalue axial loads at root and tip of web.
C    FFIX = fixed axial load (uniform) in flange
C    FVAR = eigenvalue axial load (uniform) in flange
C
C  Output variables:
C       S = slope of buckling nodal lines
C  LAMBDA = buckling load factor, not accounting for t.s.d.
C
C BEG DEC 2000
      COMMON/OUTP/NPRT
C END DEC 2000
C BEG FEB 1996
      COMMON/IRESTX/IRESTY
C END FEB 1996
      DIMENSION C(6,6), WBTOT(2), WBEIG(2)
      REAL LAMBDA
C
C BEG DEC 2000
C BEG NOV 2003
C     IF (NPRT.GE.2.AND.ISTIF.EQ.3) THEN
C        WRITE(IFILE,'(/,A,/,A,1PE12.4,/,A,1P2E12.4)')
C    1 ' Entering ENDBUK (web buckling). See Items 121, 120d.',
C    1 ' Width of web                         =',WIDTH,
C    1 ' Fixed, EIGEN resultants in web       =',FFIX, FVAR
C     ENDIF
C
C BEG FEB 2006
C     IF (NPRT.GE.2.AND.ISTIF.NE.3) THEN
C BEG FEB 2007
      IF (NPRT.GE.1.AND.ISTIF.NE.3) THEN
C END FEB 2007
C END FEB 2006
C END NOV 2003
         WRITE(IFILE,'(/,A,/,A,1PE12.4,/,A,1P2E12.4)')
     1 ' Entering ENDBUK (flange buckling). See Items 121, 120d.',
     1 ' Width of flange                      =',WIDTH,
     1 ' Fixed, EIGEN resultants in flange    =',FFIX, FVAR
      ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
C END DEC 2000
      P1 = FMJ**2/3.
      P2 = 4./WIDTH**2
      US = C(4,4)*P1 +C(6,6)*P2
      SSAVE = 0.
      IF (C(4,6).EQ.0.0) GO TO 30
      C44 = C(4,4)
      C45 = C(4,5)
      C46 = C(4,6)
      C55 = C(5,5)
      C56 = C(5,6)
      C66 = C(6,6)
      DS = 0.1
      IF (C46.LT.0.0) DS = -0.1
      S   = 0.
   20 CONTINUE
      S  = S + DS
      SS = S*S
      SSS= SS*S
      SSSS= SSS*S
      D11EFF = C44 +2.*C45*SS +C55*SSSS -4.*(C46*S +C56*SSS -C66*SS)
      D66EFF = C66 - 2.*C56*S + C55*SS
      U = D11EFF*P1 +D66EFF*P2
C     WRITE(IFILE,*)' U,S=',U,S
      IF (U.LT.US) THEN
         US = U
         SSAVE = S
         IF (ABS(S).LT.2.) GO TO 20
      ENDIF
   30 CONTINUE
      PRELOD = FFIX/3.
      IF (ISEG.EQ.3) PRELOD = (WBTOT(2) -WBTOT(1))/4. +WBTOT(1)/3.
      EIGLOD = FVAR/3.
      IF (ISEG.EQ.3) EIGLOD = (WBEIG(2) -WBEIG(1))/4. +WBEIG(1)/3.
      UPLUS = US + PRELOD
      IF (UPLUS.GE.0.0) THEN
         EIG = 10.E+16
         IF (EIGLOD.LT.0.) EIG = -UPLUS/EIGLOD
      ENDIF
C BEG FEB 1999
C     WRITE(8,'(/,A,I2,/,1P,6E12.4)')
C    1' ISEG,US,PRELOD,WBTOT(1),WBTOT(2),WBEIG(1),WBEIG(2)=',ISEG,
C    1       US,PRELOD,WBTOT(1),WBTOT(2),WBEIG(1),WBEIG(2)
C     WRITE(8,'(A,I2,/,1P,4E12.4)')
C    1' ILAM,FFIX,FVAR,EIGLOD,UPLUS=',ILAM,FFIX,FVAR,EIGLOD,UPLUS
C END FEB 1999
      IF (UPLUS.LT.0.0.OR.ILAM.EQ.1) THEN
         IF (IMOD.EQ.0) ILAM = 1
C BEG FEB 1996
C BEG FEB 1999
         CALL LOADBA(8)
C END FEB 1999
         IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
         EIG = 10.E+16
C BEG OCT 1994
         IF ((PRELOD+EIGLOD).LT.0.0) EIG = -US/(PRELOD+EIGLOD)
      ENDIF
      LAMBDA = 10.E+16
      IF (EIG.GT.0.) LAMBDA = EIG
C BEG DEC 2000
      IF (NPRT.GE.2)
     1   WRITE(IFILE,'(A,1PE12.4)')' IN SUB. ENDBUK: EIG=',EIG
C END DEC 2000
C
C BEG FEB 1996
 2222 CONTINUE
C END FEB 1996
      RETURN
      END
C END AUG 1992
C
C
C
C=DECK      OBJECT
      SUBROUTINE OBJECT(ISTIF,NSEG,NLAYER,LTYPE,T,MATL,B,B2,H,W,W2,DENS,
     1          CMASS,AXIAL,CIRC,OBJ,WORDOB,ETHERM,TEFF,IOBJ,IFILE)
C
C  PURPOSE IS TO CALCULATE THE OBJECTIVE FUNCTION, WHICH IS THE WEIGHT.
C
C BEG APR 2007
      COMMON/OUTP/NPRT
C END APR 2007
      DIMENSION ISTIF(*),NSEG(*),NLAYER(4,2),LTYPE(99,5,2),T(*),MATL(*)
      DIMENSION B(*),B2(*),H(*),W(*),W2(*),DENS(*),CMASS(5,2),WIDTH(5,2)
      DIMENSION ETHERM(*),TEFF(*)
C BEG FEB 2004
      COMMON/SUBSTX/TSUB(2,4,2),HSUB(2,4,2),THSUB(2,4,2),
     1              BSUB(2,4,2)
      COMMON/ISBSTF/KLAYER(4,2),NSURF(2,4,2),NB2(2,4,2),
     1              ISOSUB(2,4,2),ISOTYP(2,4,2),MATSUB(2,4,2)
C END FEB 2004
C BEG APR 1996
      COMMON/GEOM6/IFAY(2),ITRTOT,IRESET,NLOADS,NSTEPS,WMAXXX,NCROSS,
     1       NOPLOT,KMAX,ILAYPL,XMAX,XMIN,YMAX,YMIN,N3DPLT,NOBJ,NSTRNS,
     1       NPLTST,NABSCI,IDIAG,ITRALL,IFAYT(2),IBEAM,IMISCL(5)
C END APR 1996
C BEG JUN 1996
      COMMON/XFOUND/EFOUND,HXSIDE,WFOUND(4,2),HEXSID(4,2)
      COMMON/XSANDW/ISANDW(4,2),ICORE(4,2)
      DIMENSION FOAM(2)
C END JUN 1996
C BEG APR 1997
C BEG JUN 2004
C     COMMON/WGTSTF/WGTSTR,WGTRNG,WGTSPC
      COMMON/WGTSTF/WGTSTR,WGTRNG,WGTSUB,WGTSKN,WGTSPC
C END JUN 2004
C END APR 1997
C BEG MAY 1997
      COMMON/IZSTIX/IZSTIF(2)
C END MAY 1997
C BEG AUG 1992
      COMMON/ISOGR/ISOGRD,ISOANG
C END AUG 1992
      CHARACTER*80 WORDOB
C
      IF (IOBJ.EQ.1) WORDOB = ' WEIGHT OF THE ENTIRE PANEL  '
      IF (IOBJ.EQ.2) WORDOB = ' THERMAL DISTORTION OF PANEL '
      OBJ = 0.
C BEG APR 1997
      WGTRNG = 0.
      WGTSTR = 0.
C BEG JUN 2004
      WGTSKN = 0.
      WGTSUB = 0.
C END JUN 2004
      WGTSPC = 0.
C END APR 1997
      IF (IOBJ.EQ.1) THEN
        CALL MOVER(0.,0,CMASS,1,10)
        CALL MOVER(0.,0,WIDTH,1,10)
C
        DO 100 ILOOP = 1,2
C
        ISTART = 1
        IEND   = NSEG(ILOOP)
        IF (ILOOP.EQ.2) THEN
           ISTART = 2
           IF (B2(ILOOP).EQ.0.) ISTART = 3
        ENDIF
        IF (ISTART.GT.IEND) GO TO 100
C
        DO 60 I = ISTART,IEND
C
        NLAY = NLAYER(I,ILOOP)
C
        DO 30 J = 1,NLAY
C
        K = LTYPE(J,I,ILOOP)
        M = MATL(K)
C
        CMASS(I,ILOOP) = CMASS(I,ILOOP) + T(K)*DENS(M)
C
   30   CONTINUE
C
C BEG FEB 2004
        IF (KLAYER(I,ILOOP).NE.0) THEN
C substiffener weight added...
           WGTSUB = 0.
           DO 50 JSET = 1,2
C          DO 40 ISUBST = 1,2
              M = MATSUB(JSET,I,ILOOP)
              IF (M.EQ.0) GO TO 40
              IF (ISOSUB(JSET,I,ILOOP).NE.0.AND.JSET.EQ.2)
     1                                                  GO TO 40
              THICK = TSUB(JSET,I,ILOOP)
              HEIGHT= HSUB(JSET,I,ILOOP)
              SPACNG= BSUB(JSET,I,ILOOP)
              RHOFCT= 1.0
              IF (ISOSUB(JSET,I,ILOOP).NE.0) RHOFCT = 3.0
              CMASS(I,ILOOP) = CMASS(I,ILOOP)
     1                        +RHOFCT*DENS(M)*HEIGHT*THICK/SPACNG
              WGTSUB = WGTSUB 
     1             +AXIAL*CIRC*RHOFCT*DENS(M)*HEIGHT*THICK/SPACNG
   40      CONTINUE
   50      CONTINUE
        ENDIF
C END FEB 2004
C
        IF (ISTIF(ILOOP).NE.5) THEN
C BEG MAY 1997
           IF (I.EQ.1.AND.IZSTIF(ILOOP).EQ.0)
     1        WIDTH(I,ILOOP) = B(ILOOP) - B2(ILOOP)
           IF (I.EQ.1.AND.IZSTIF(ILOOP).EQ.1)
     1        WIDTH(I,ILOOP) = B(ILOOP)
C END MAY 1997
           IF (I.EQ.2) WIDTH(I,ILOOP) = B2(ILOOP)
           IF (ISTIF(ILOOP).NE.4) THEN
C BEG AUG 1992
              RHOFCT = 1.0
              IF (ILOOP.EQ.1.AND.ISOGRD.EQ.1) RHOFCT = 3.0
              IF (I.EQ.3) WIDTH(I,ILOOP) = H(ILOOP)*RHOFCT
              IF (I.EQ.4) WIDTH(I,ILOOP) = W(ILOOP)*RHOFCT
C END AUG 1992
           ELSE
              IF (IFAY(ILOOP).EQ.1) THEN
                 IF (I.EQ.1) WIDTH(I,ILOOP) = 
     1                        B(ILOOP) - B2(ILOOP) + W2(ILOOP)
                 IF (I.EQ.2) WIDTH(I,ILOOP) = B2(ILOOP) - W2(ILOOP)
              ENDIF
              IF (I.EQ.3) WIDTH(I,ILOOP) = 2.*SQRT(H(ILOOP)*H(ILOOP) 
     1                             +(W2(ILOOP) -W(ILOOP) )**2/4.  )
              IF (I.EQ.4) WIDTH(I,ILOOP) = W(ILOOP)
           ENDIF
        ENDIF
C
   60   CONTINUE
C
        IF (ISTIF(ILOOP).EQ.5) THEN
           WIDTH(1,ILOOP) = B(ILOOP)
C BEG NOV 1995
           WIDTH(2,ILOOP) = 2.*SQRT(H(ILOOP)**2
     1                         +.25*(B(ILOOP)-2.*B2(ILOOP))**2)
C BEG APR 1996
     1             +2.*FLOAT(IFAYT(ILOOP))*B2(ILOOP)
C END APR 1996
C END NOV 1995
           WIDTH(3,ILOOP) = B(ILOOP)
        ENDIF
C
C BEG JUN 1996
        FOAM(ILOOP) = 0.0
        IF (ISTIF(ILOOP).EQ.4.OR.ISTIF(ILOOP).EQ.5) THEN
           IF (ISTIF(ILOOP).EQ.4) ITEST = 2
           IF (ISTIF(ILOOP).EQ.5) ITEST = 1
           IF (ISANDW(ITEST,ILOOP).EQ.1) THEN
              K = LTYPE(1,ITEST,ILOOP)
              M = MATL(K)
C  ADD THE WEIGHT OF THE FOAM THAT FILLS THE HAT OR THE TRUSS-CORE...
              IF (ISTIF(ILOOP).EQ.4)
     1         FOAM(ILOOP) = DENS(M)*H(ILOOP)*(W(ILOOP)+W2(ILOOP))/2.
              IF (ISTIF(ILOOP).EQ.5)
     1         FOAM(ILOOP) = DENS(M)*H(ILOOP)*B(ILOOP)
           ENDIF
        ENDIF
C END JUN 1996
C
  100   CONTINUE
C
        OBJ1 = 0.
        NSEG1 = NSEG(1)
        DO 110 I = 1,NSEG1
        OBJ1 = OBJ1 + WIDTH(I,1)*CMASS(I,1)*AXIAL
C BEG MAR 1996
C       WRITE(8,'(A,1P2E12.4)')
C    1  ' WIDTH(I,1),CMASS(I,1)=',WIDTH(I,1),CMASS(I,1)
  110   CONTINUE
C BEG JUN 1996
        OBJ1 = (OBJ1 + FOAM(1)*AXIAL)*CIRC/B(1)
C END JUN 1996
C       WRITE(8,'(A,/,1P,5E12.4)')
C    1  ' AXIAL,CIRC,B(1),FOAM(1),OBJ1=',
C    1    AXIAL,CIRC,B(1),FOAM(1),OBJ1
C END MAR 1996
C
        CMASS(1,2) = CMASS(1,1)
        IWEB = 3
        IF (ISTIF(2).EQ.5) IWEB = 2
        IWEBM = IWEB - 1
        IWEBP = IWEB + 1
C
        OBJ2 = CIRC*(WIDTH(IWEB,2)*CMASS(IWEB,2)
     1              +WIDTH(IWEBP,2)*CMASS(IWEBP,2)
     1        +WIDTH(IWEBM,2)*(CMASS(IWEBM,2) - CMASS(1,1)))
C BEG JUN 1996
        OBJ2 = (OBJ2 + FOAM(2)*CIRC)*AXIAL/B(2)
C END JUN 1996
C BEG MAR 1996
C       WRITE(8,'(A,1P4E12.4)')
C    1  ' (WIDTH(I,2),I=1,4)=',(WIDTH(I,2),I=1,4)
C       WRITE(8,'(A,1PE12.4)') ' OBJ2=',OBJ2
C END MAR 1996
C
        OBJ = OBJ1 + OBJ2
C
C BEG APR 1997
        WGTRNG = OBJ2
        WGTSTR = 0.
        WGTSPC = OBJ/(AXIAL*CIRC)
        IF (ISTIF(1).NE.0.AND.ISTIF(1).NE.5) THEN
           IWEB = 3
           IWEBM = IWEB - 1
           IWEBP = IWEB + 1
           WGTSTR = AXIAL*(WIDTH(IWEB, 1)*CMASS(IWEB, 1)
     1                   + WIDTH(IWEBP,1)*CMASS(IWEBP,1)
     1                   + WIDTH(IWEBM,1)*(CMASS(IWEBM,1)-CMASS(1,1)))
           WGTSTR = (WGTSTR + FOAM(1)*AXIAL)*CIRC/B(1)
        ENDIF
C END APR 1997
C BEG JUN 2004
        WGTSKN = OBJ - WGTSTR - WGTRNG - WGTSUB
C END JUN 2004
C BEG APR 2007
        IF (NPRT.GE.0) WRITE(8,'(/,A,1P,E12.4)')
     1' Objective (weight of PANDA2 model of panel), OBJ =',OBJ
C END APR 2007
      ENDIF
C
      IF (IOBJ.EQ.2.AND.ISTIF(1).NE.5.AND.ISTIF(2).NE.5) THEN
C
C
        OBJ = SQRT( ETHERM(1)**2 +ETHERM(2)**2 
     1             +(TEFF(1)*ETHERM(4))**2 +(TEFF(2)*ETHERM(5))**2)
C
C TEMPORARILY ADDED OCT 30, 1989.  PLEASE REMOVE THESE STATEMENTS.
C   CABINESS PROBLEM: TRY TO MATCH GIVEN CTE'S:
C       DALPHA1 = (0.25 - ETHERM(1)*1000000.)**2
C       DALPHA2 = (1.5  - ETHERM(2)*1000000.)**2
C       OBJ = DALPHA1 + DALPHA2
C  END CABINESS PROBLEM
C BEG APR 2007
        IF (NPRT.GE.0) WRITE(8,'(/,A,A,1P,E12.4)')
     1' Objective (root-mean-sqrared thermal expansion of panel),',
     1' OBJ =',OBJ
C END APR 2007
C
      ENDIF
C 
      IF (OBJ.EQ.0.) THEN
         WRITE(IFILE,200)
  200    FORMAT(//' ****** OBJECTIVE FUNCTION IS ZERO *********'/)
         GO TO (210,220),IOBJ
  210    WRITE(IFILE,215)
  215    FORMAT(' CHECK TO MAKE SURE THAT DENSITY OF PANEL MATERIAL'/
     1          ' IS NOT ZERO.')
         GO TO 230
  220    WRITE(IFILE,225)
  225    FORMAT(' CHECK TO MAKE SURE THAT COEFFICIENTS OF THERMAL'/
     1          ' EXPANSION OF PANEL MATERIAL ARE NOT ZERO, AND'/
     1          ' THAT CURING TEMPERATURE IS NOT ZERO.')
  230    CONTINUE
         WRITE(IFILE,240)
  240    FORMAT('  ****** TERMINATING CALCS. IN SUB. OBJECT.*****')
         CALL ERREX
      ENDIF
C
      RETURN
      END
C BEG JULY 1997
C
C
C
C=DECK      CRIPP3
      SUBROUTINE CRIPP3(ILOOP,ISTIF,A0,H,W,W2,C3,C4,NVAR4,NFIX4,T,GT,
     1                  IREDUC,CONMAX,IMOD,IPOINC,INUMTT,ICONST,
     1                  CONSTR,WORDB,IADDB,IFILE,JJJ,MIDEND,ICASE,
C BEG FEB 2006
     1                  FSBSTF,EIGPRE,ILAMB2,ICRIPX,NOPO,FSLOC)
C END FEB 2006
C
C  PURPOSE IS TO FIND THE CRIPPLING MARGIN FOR THE STIFFENER OUTSTANDING
C  FLANGE ASSUMING THAT IT BUCKLES AS A BEAM ON AN ELASTIC FOUNDATION.
C  THE ELASTIC FOUNDATION IS THE SUPPORT PROVIDED BY THE WEB(S). THE THEORY
C  APPEARS IN TIMOSHENKO, THEORY OF ELASTIC STABILITY, 1ST EDITION,
C  MCGRAW-HILL, 1936, P. 110, EQ.(74) AND P. 111, EQ. (77). THIS
C  SUBROUTINE IS CALLED ONLY IF THE STIFFENER IS A TEE OR A HAT.
C
      COMMON/MWAVEX/MWAVES(2)
      COMMON/IRESTX/IRESTY
      COMMON/FMAXPP/MAXCON
      COMMON/WORDS5/PCWORD(99)
      COMMON/PLOTCD/ICAR,IADDCC(99),CPLOT(99)
      COMMON/FSAFEB/FSAFEP(99)
      COMMON/ATRNGS/ATRING
      LOGICAL ATRING
      COMMON/ISOGR/ISOGRD,ISOANG
      COMMON/ISOGR2/JSTIFF
      CHARACTER*2 CSTIFF
      CHARACTER*80 PCWORD
      CHARACTER*9 CNP
      REAL MAXCON
      CHARACTER*7 CN3
      DIMENSION ILAMB2(*)
      COMMON/OUTP/NPRT
      DIMENSION C3(6,6),C4(6,6),CONSTR(*),WORDB(*),IADDB(*),IPOINC(*)
      DIMENSION GT(*)
      CHARACTER*80 WORDB
      CHARACTER*8 CN
      CHARACTER*4 CNN
      CHARACTER*3 CM
      CHARACTER*7 CN2
      REAL NVAR4,NFIX4,LAMBDA,NUM1,NUM2,LAMB2
C
      INUMTT = INUMTT + 1
C
      EIGPRE = 10.E+16
      LAMBDA = 10.E+16
C BEG JAN 2006
C     FSAFE  = 3.00*FSBSTF
      FSAFE  = 1.20*FSBSTF
C END JAN 2006
      CN = '  ring  '
      IF (ILOOP.EQ.1) THEN
         CN = 'stringer'
         IF (ISOGRD.EQ.1) THEN
            CALL CONVR2(JSTIFF,CSTIFF)
            CN = 'isogrd'//CSTIFF
         ENDIF
      ENDIF
      CNN= 'MID.'
      IF (NOPO.EQ.1) CNN = 'NOPO'
      IF (MIDEND.EQ.2.OR.ICASE.EQ.2) CNN = 'ENDS'
      IF (ATRING.AND.ICASE.EQ.2)     CNN = 'RNGS'
C
      IF (IMOD.EQ.1.AND.ICRIPX.EQ.1) RETURN
      IF (IMOD.EQ.0) ICRIPX = 0
      IF (IMOD.EQ.0.AND.NVAR4.GE.0.) THEN
         ICRIPX = 1
         RETURN
      ENDIF
C
      PI = 3.1415927
      C22WEB = C3(2,2)
      C44FLN = C4(4,4) - C4(4,5)**2/C4(5,5)
C   EI IS THE AXIAL BENDING STIFFNESS OF THE OUTSTANDING FLANGE (TREATED
C      AS A BEAM IN THIS MODEL).
      EI = C44FLN*W
C   BETA IS THE ELASTIC FOUNDATION MODULUS (TIMOSHENKO, P. 108, EQ.(a))
      BETA = 0.0
      IF (ISTIF.EQ.1) BETA = C22WEB/H
      IF (ISTIF.EQ.4) THEN
         SLENG = SQRT((0.5*(W2-W))**2 + H**2)
         SALPHA= H/SLENG
         BETA = 2.*C22WEB*SALPHA**3/H
      ENDIF
      FN = (A0/PI)*SQRT(SQRT(BETA/EI))
C BEG JUN 2004
C BEG DEC 2005
C23456789012345678901234567890123456789012345678901234567890123456789012
      IF (NPRT.GE.2) WRITE(8,'(/,A,/,A,/,1P,6E12.4)')
     1' Entering SUBROUTINE CRIPP3 (See panda2.news Item 383)...',
     1' beam on foundation calcs:EI,BETA,A0,H,C22WEB,FN=',
     1                           EI,BETA,A0,H,C22WEB,FN
C END DEC 2005
C END JUN 2004
      M = FN
      FN = M
      IF (IMOD.EQ.0) MWAVES(ILOOP) = M
      IF (FN.LT.1.) FN = 1.
      NUM1 = EI*(FN*PI/A0)**2 + BETA*(A0/(PI*FN))**2
      ADDX = NFIX4*W
      ADDV =  NVAR4*W
      NUM2    = -(NUM1 + ADDX)
      LAMBDA  =  NUM2/ADDV
      LAMB2   = -NUM1/(ADDX + ADDV)
      INDX = 1
      IF (CNN.EQ.'ENDS'.OR.CNN.EQ.'RNGS') INDX = 2
      IF (IMOD.EQ.0) ILAMB2(INDX) = 0
      IF (NUM2.GE.0.0.OR.ILAMB2(INDX).EQ.1) THEN
         IF (IMOD.EQ.0) THEN
            WRITE(IFILE,40) CN,CNN,NFIX4
            ILAMB2(INDX) = 1
C BEG FEB 1999
            CALL LOADBA(9)
C END FEB 1999
            IF (IRESTY.EQ.1) GO TO 2222
         ENDIF
   40    FORMAT(/' *** NOTE **** NOTE **** NOTE ***'/
     1' TYPE OF STIFFENER                                 =',A/
     1' LOCATION IN PANEL                                 =',A/
     1' AXIAL RESULTANT IN SEGMENT 4 FROM LOAD SET B, NFIX4=',1PE12.4/
     1' THIS AXIAL RESULTANT WILL CAUSE BUCKLING BY ITSELF.'/
     1' TEMPORARILY (FOR THE PURPOSE OF CALCULATING THIS PARTICULAR'/
     1' BUCKLING LOAD FACTOR), PANDA2 COMBINES THE AXIAL RESULTANTS'/
     1' IN THESE STIFFENER SEGMENTS FROM LOAD SET B WITH THOSE FROM'/
     1' LOAD SET A AND PROCEEDS.'/
     1' ***** END NOTE  ***  END NOTE  ***   END NOTE   *********'/)
         IF ((ADDX+ADDV).GT.0.) THEN
            LAMBDA = 10.E+16
            EIGPRE = 10.E+16
            IF (IMOD.EQ.0) THEN
               ICRIPX = 1
               GO TO 100
            ENDIF
            IF (IMOD.EQ.1) GO TO 75
         ENDIF
         LAMBDA = LAMB2
         GO TO 50
      ENDIF
      IF (ADDV.GT.0.0) THEN
         LAMBDA = 10.E+16
         EIGPRE = 10.E+16
         IF (IMOD.EQ.0) THEN
            ICRIPX = 1
            GO TO 100
         ENDIF
         IF (IMOD.EQ.1) GO TO 75
      ENDIF
   50 CONTINUE
      CS = 0.
      EIGPRE = LAMBDA
C BEG NOV 1997
      CALL SHRRED(IREDUC,NVAR4,0.,0.,T,T,GT,EIGPRE,0,1,JJJ,0.,0.,1,
     1            0.,0.,14)
C END NOV 1997
   75 CONTINUE
      CALL CONVRT(MWAVES(ILOOP),CM)
      CALL CONVRF(FSAFE,CN2)
      CALL CONVRF(CS,CN3)
      EIGSAF = EIGPRE/FSAFE
      IF (IMOD.EQ.0.AND.EIGSAF.LT.MAXCON) THEN
         ICAR = ICAR + 1
         CNP = 'MIDLENGTH'
         IF (NOPO.EQ.1) CNP = 'NO POSTBK'
         IF (MIDEND.EQ.2.OR.ICASE.EQ.2) CNP = 'PANEL END'
         IF (ATRING.AND.ICASE.EQ.2)     CNP = 'AT RINGS '
         PCWORD(ICAR)=
     1 'buckling: '//CN//' Iseg 4 as beam on foundation. '//CNP
         CPLOT(ICAR) = EIGPRE/FSAFE - 1.
         IADDCC(ICAR) = ILOOP
         FSAFEP(ICAR) = FSAFE
      ENDIF
C NOTE CHANGE OF FOLLOWING STATEMENT:  "EIGPRE" CHANGED TO "EIGSAF" :
      IF (IMOD.EQ.0.AND.EIGSAF.GT.CONMAX) GO TO 100
      IF (IMOD.EQ.1.AND.IPOINC(INUMTT).EQ.0) GO TO 100
C
      ICONST = ICONST + 1
      IF (IMOD.EQ.0) IPOINC(INUMTT) = 1
      CONSTR(ICONST) = EIGPRE/FSAFE
      WORDB(ICONST)=
     1 'buckling '//CN//' Iseg 4 as beam on foundation. M='//CM//
     1 ';'//CNN//';FS='//CN2
      IADDB(ICONST) = ILOOP
C BEG APR 2007
  495 CONTINUE
      IF (NPRT.GE.0) WRITE(8,'(A,1P,E12.4,2X,A)')
     1 ' Margin=',CONSTR(ICONST)-1.,WORDB(ICONST)
C END APR 2007
  100 CONTINUE
      IF (NPRT.GE.2) THEN
         IF(ILOOP.EQ.1) WRITE(IFILE,110)
  110    FORMAT(/' Buckling of stringer seg. 4 as beam',
     1 ' on elastic foundation (web is foundation).')
         IF(ILOOP.EQ.2) WRITE(IFILE,111)
  111    FORMAT(/' Buckling of   ring   seg. 4 as beam',
     1 ' on elastic foundation (web is foundation).')
         ISEG = 4
         IF (IREDUC.NE.0)
     1   WRITE(IFILE,120) CN,ISEG,NFIX4,NVAR4,LAMBDA,EIGPRE,M
         IF (IREDUC.EQ.0)
     1   WRITE(IFILE,122) CN,ISEG,NFIX4,NVAR4,LAMBDA,M
  120    FORMAT(2X,A8,I6,1PE15.4,1PE13.4,1PE13.4,1PE14.4,I10)
  122    FORMAT(2X,A8,I6,1PE15.4,1PE13.4,1PE13.4,14X,I10)
      ENDIF
  200 CONTINUE
 2222 CONTINUE
      RETURN
      END
C END JULY 1997
