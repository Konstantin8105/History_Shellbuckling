C BEG OCT 1998
C=DECK      SETUP2
C  PURPOSE IS TO SETUP UP A FILE SUITABLE AS INPUT TO BOSOR4
C  skin-ring module model
C
      PROGRAM SETUP2
C BEG UNIX
#if hp700
$hp9000_800 intrinsics
#endif
C END UNIX
C
      COMMON/GEOM0/B0(2),B20(2),H0(2),W0(2),W20(2)
      COMMON/GEOM2/B(2),B2(2),H(2),W(2),W2(2)
      COMMON/GEOM3/ISTIFF(2),NLAYER(4,2),NNNN(2),INTEXT(2)
      COMMON/INDAT/INFILE
      COMMON/IDEFAU/IDEFLT,IDDATA,IINPUT,IITYPE
      COMMON/IZSTIX/IZSTIF(2)
C BEG OCT 2004
C BEG APR 2007 (increas dimension of IPOINT from 195 to 295 for use with bigbosor4)
      COMMON/BOSGS2/NSEGB5,IPOINT(295)
C END APR 2007
C END OCT 2004
      COMMON/GEOM1/AXIAL,CIRC,R
      COMMON/INTRGX/INTRNG
      DIMENSION NMESH(10),R1(10),Z1(10),R2(10),Z2(10),NTYPEH(10)
C BEG VMS
C     CHARACTER*12 CASE
C     CHARACTER*16 CASE2,CASE3,CASE4,CASE5
C END VMS
C BEG UNIX
      CHARACTER*28 CASE
      CHARACTER*32 CASE2,CASE3,CASE4,CASE5
      integer lastch
      logical exists
      common/caseblock/case
#if hp700
C     call getarg(2, case)
      call getarg(1, case)
#else
      call getarg(1, case)
#endif
C END UNIX
C BEG VMS
C  ESTABLISH NAME FOR THE CASE...
C
C BEG OCT 1998
C     IUNAME = 5
C     CALL CASNAM(IUNAME,CASE)
C     IUNAME = 12
C     OPEN(UNIT=12,STATUS='OLD')
C     CALL CASNAM(IUNAME,CASE)
C     CLOSE(IUNAME)
C END OCT 1998
C END VMS
      I=INDEX(CASE,' ')
      IF(I.NE.0) THEN
         CASE2=CASE(:I-1)//'.AL2'
         CASE3=CASE(:I-1)//'.CBL'
         CASE5=CASE(:I-1)//'.SET'
      ELSE
         CASE2=CASE//'.AL2'
         CASE3=CASE//'.CBL'
         CASE5=CASE//'.SET'
      ENDIF
      NLET = I - 1
      IF (I.EQ.0) NLET = 12
C
C BEG FEB 1995
      IDDATA = 1
C END FEB 1995
      IFILE = 2
      IOUT2 = 3
      ifile1 = 1
      IFILE7 = 7
      ifile14 = 14
c
C BEG VMS
C     OPEN(UNIT=2,FILE='PANDA2:PROMPT.DAT',STATUS='OLD',READONLY)
C     OPEN(UNIT=14,FILE=CASE2,STATUS='UNKNOWN')
C     OPEN(UNIT=3,FILE=CASE5,STATUS='SCRATCH')
C     OPEN(UNIT=7,FILE=CASE3,STATUS='UNKNOWN',FORM='UNFORMATTED')
C END VMS
C BEG UNIX
      OPEN(UNIT=ifile,FILE='PROMPT.DAT',STATUS='OLD')
      inquire(FILE=case2(1:lastch(case2)), EXIST=exists)
      if (exists) then
        OPEN(UNIT=ifile14, FILE=case2(1:lastch(case2)), STATUS='OLD')
#if rs6k
        rewind(ifile14)
#endif
      else
        OPEN(UNIT=ifile14, FILE=case2(1:lastch(case2)), STATUS='NEW')
      endif
c
      inquire(FILE=case5(1:lastch(case5)), EXIST=exists)
      if (exists) then
        OPEN(UNIT=iout2, FILE=case5(1:lastch(case5)), STATUS='OLD')
#if rs6k
        rewind(iout2)
#endif
      else
        OPEN(UNIT=iout2, FILE=case5(1:lastch(case5)), STATUS='NEW')
      endif
c
      inquire(FILE=case3(1:lastch(case3)), EXIST=exists)
      if (exists) then
        OPEN(UNIT=ifile7, FILE=case3(1:lastch(case3)), STATUS='OLD',
     1       FORM='UNFORMATTED')
#if rs6k
        rewind(ifile7)
#endif
      else
        OPEN(UNIT=ifile7, FILE=case3(1:lastch(case3)), STATUS='NEW',
     1       FORM='UNFORMATTED')
      endif
C END UNIX
C
      CALL GETCOM(IFILE7)
C BEG JUNE 1990
      IOUT = 14
C END JUNE 1990
      IOUT1= 1
C
      WRITE(6,5)
C BEG VMS
C   5 FORMAT(//'  **************   SETUP2   ***************'//
C    1'  The purpose of SETUP2 is to set up an input data file called'/
C    1'  NAME.AL2, in which NAME is your name for this case.  This'/
C    1'  file, NAME.AL2, is a BOSOR4-type of input data file. It is'/
C    1'  used as input for the next batch run, launched when you give'/
C    1'  the command BOSMODEL. SETUP2 is for skin-ring module.'//
C    1'  **********************************************'/)
C END VMS
C BEG UNIX
    5 FORMAT(//'  **************   SETUP2  ***************'//
     1'  The purpose of SETUP2 is to set up an input data file called'/
     1'  NAME.AL2, in which NAME is your name for this case.  This'/
     1'  file, NAME.AL2, is a BOSOR4-type of input data file. It is'/
     1'  used as input for B4READ. SETUP2 is for skin-ring module.'//
     1'  **********************************************'/)
C END UNIX
C
      WRITE(6,6)
C BEG VMS
C   6 FORMAT(/ 
C    1'     GENERATING BOSOR4-TYPE DISCRETIZED MODEL'/
C    1'     FOR A SINGLE PANEL SKIN-RING MODULE'//
C    1' The commands  SETUP2 and BOSMODEL cause templates'/
C    1' of the stiffness and  load-geometric matrices to'/
C    1' be set up for the buckling problems involving: '//
C    1'   1. a single panel skin-ring module, which is'/
C    1'      used for: '//
C    1'        a. local buckling analysis and '/
C    1'        b. the nonlinear local static response of'/
C    1'           a ring stiffened panel to uniform'/
C    1'           normal pressure and axial compression. '/)
C END VMS
C BEG UNIX
    6 FORMAT(/ 
     1'     GENERATING BOSOR4-TYPE DISCRETIZED MODEL'/
     1'     FOR A SINGLE PANEL SKIN-RING MODULE'//
     1' The command  SETUP2 causes templates'/
     1' of the stiffness and  load-geometric matrices to'/
     1' be set up for the buckling problems involving: '//
     1'   1. a single panel skin-ring module, which is'/
     1'      used for: '//
     1'        a. local buckling analysis and '/
     1'        b. the nonlinear local static response of'/
     1'           a ring stiffened panel to uniform'/
     1'           normal pressure and axial compression. '/)
C END UNIX
C     CALL DATUM(IFILE,810,1,2,MODEL,REALL,CHARAC,IOUT2,0,1)
      IMESH = 9
      IFINE = 0
      NTEST = 6
      IF (ISTIFF(2).EQ.4.AND.B2(2).GT.W2(2)) NTEST = 8
      IF (NTEST.LE.6) IFINE = 1
      IFINE = 1
      MODEL = 1
C
C  GET END POINTS OF SEGMENTS IN A SINGLE MODULE OF THE PANEL...
C
C  TEMPORARY CARDS FOR CHECKING PURPOSES...
C
       ISTIF = ISTIFF(2)
       IF (ISTIF.EQ.4.AND.IFINE.EQ.0) IMESH = 7
       B2SAVE = B2(2)
       IF (B2(2).EQ.0.) B2(2) = B(2)/4.
C
      IF (ISTIF.LT.4) THEN
         CALL RZTJR2(IMESH,ISTIF,B(2),B2(2),H(2),W(2),NSEG,
     1      NMESH,NTYPEH,INTRNG,R1,Z1,R2,Z2,R0,IZSTIF(2),ABS(R))
         IF (ISTIF.GT.0.AND.B2(2).EQ.0.0) THEN
            R1(2) = R1(3)
            R2(2) = R2(3)
            Z1(2) = Z1(3)
            Z2(2) = Z2(3)
            NMESH(2) = NMESH(3)
            NTYPEH(2) = NTYPEH(3)
            R1(3) = R1(4)
            R2(3) = R2(4)
            Z1(3) = Z1(4)
            Z2(3) = Z2(4)
            NMESH(3) = NMESH(4)
            NTYPEH(3) = NTYPEH(4)
            NSEG = 3
            IF (ISTIF.EQ.1.OR.ISTIF.EQ.2) THEN
               R1(4) = R1(5)
               R2(4) = R2(5)
               Z1(4) = Z1(5)
               Z2(4) = Z2(5)
               NMESH(4) = NMESH(5)
               NTYPEH(4) = NTYPEH(5)
               NSEG = 4
            ENDIF
         ENDIF
      ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
      IF (ISTIF.EQ.4) CALL RZHAT2(IMESH,B(2),B2(2),H(2),W(2),W2(2),NSEG,
     1                           NMESH,NTYPEH,INTRNG,R1,Z1,R2,Z2,R0,
     1                           IFINE,ABS(R))
      IF (ISTIF.EQ.5) CALL RZTRS2(IMESH,B(2),B2(2),H(2),NSEG,
     1                           NMESH,NTYPEH,R1,Z1,R2,Z2,R0,ABS(R))
C
C  NOW WRITE TO THE OUTPUT FILE..
C
      WRITE(IOUT,'(A)')' BOSOR4 INPUT FOR A PANEL MODULE'
      WRITE(IOUT,'(A,I3,A)')
     1          ' 1,1,0,', NSEG,' $ NUMBER OF SEGS IN PANEL MODULE '
C
      NSEGB5 = NSEG
      DO 10 I = 1,NSEG
C
        IPOINT(I) = NMESH(I) + 2
        CALL OUTSG2(IOUT,I,NMESH(I),NTYPEH(I),R1(I),Z1(I),R2(I),Z2(I))
C
   10 CONTINUE
C
      WRITE(IOUT,'(A)')' H $ END OF SEGMENT DATA;  GLOBAL DATA BEGINS.'
      WRITE(IOUT,'(A,I3)')' -1,0,0,0,0,1,0,0,0,0,0,0,', NSEG
C
C23456789012345678901234567890123456789012345678901234567890123456789012
      IF (ISTIF.LT.4) CALL CNTJR2(IOUT,ISTIF,NSEG,NMESH,IZSTIF(2),B2(2))
      IF (ISTIF.EQ.4) CALL CNHAT2(IOUT,NSEG,NMESH,B2(2),W2(2))
C
      IF (ISTIF.EQ.5) THEN
         WRITE(6,'(A,/,A)') ' **** ILLEGAL SKIN-RING MODULE TYPE ****',
     1 ' TRUSS CORE GEOMETRY CANNOT BE USED FOR SKIN-RING MODULE.'
         CALL EXIT(2)
      ENDIF
C
      B2(2) = B2SAVE
      DO 20 ISEG = 1,NSEG
   20 WRITE(IOUT,'(A)')' Y'
      WRITE(IOUT,'(A)')' N'
C
      CALL STORCM(IFILE7)
C
      CLOSE(UNIT=IFILE7)
      CLOSE(UNIT=IOUT)
      CLOSE(UNIT=IOUT1)
C
      WRITE(6,30) CASE(1:NLET),CASE(1:NLET),CASE(1:NLET)
C BEG VMS
C  30 FORMAT(//' DESCRIPTION OF FILES GENERATED BY THIS CASE:'//
C    1 1X,A,'.AL2 = Input data for BOSOR4-type of preprocessor.'/
C    1' correponding to discretized single skin-ring panel module.'/
C    1 1X,A,'.CBL = Contains part of ',A,' data base.'//
C    1' For further information about files generated during operation'/
C    1' of PANDA2 give the command HELPAN FILES.'//
C    1' Next, give the command   BOSMODEL   .'//
C    1' This command will cause to be generated matrix templates'/
C    1' for solution of the local skin-ring buckling eigenvalue'/
C    1' problem in which the panel module cross section is discretized'/
C    1' according to the conventions used in BOSOR4.'/
C    1' After the batch run launched by BOSMODEL is'/
C    1' finished, you give either the command DECIDE or MAINSETUP.'/)
C END VMS
C BEG UNIX
   30 FORMAT(//' DESCRIPTION OF FILES GENERATED BY THIS CASE:'//
     1 1X,A,'.AL2 = Input data for BOSOR4-type of preprocessor.'/
     1' correponding to discretized single skin-ring panel module.'/
     1 1X,A,'.CBL = Contains part of ',A,' data base.'//
     1' For further information about files generated during operation'/
     1' of PANDA2 give the command HELPAN FILES.'//
     1' This command will cause to be generated matrix templates'/
     1' for solution of the local skin-ring buckling eigenvalue'/
     1' problem in which the panel module cross section is discretized'/
     1' according to the conventions used in BOSOR4.'//
     1' Next give either the command DECIDE or MAINSETUP.'/)
C
      close(unit=iout2, status='DELETE')
C END UNIX
      END
C
C
C
C=DECK      RZTJR2
      SUBROUTINE RZTJR2(IMESH,ISTIF,B,B2,H,W,NSEG,NMESH,NTYPEH,INTEXT,
     1                  R1,Z1,R2,Z2,R0,IZSTIF,RADIUS)
C
C  PURPOSE IS TO GET END POINTS OF ALL SEGMENTS IN A PANEL MODULE
C  FOR N, T, J, AND R TYPE STIFFENERS. Also Z-type (may 1997)
C
      DIMENSION NMESH(*),R1(*),Z1(*),R2(*),Z2(*),NTYPEH(*)
C
      R0 = RADIUS
      FACT = 1.0
      IF (INTEXT.EQ.1) FACT = -1.0
C  SEGMENT 1 (SAME LOGIC FOR ALL THREE TYPES OF STIFFENER, T, J, & R)
C
      R1(1) = R0
      Z1(1) = -B/2.
      NMESH(1) = IMESH
      NTYPEH(1) = 1
      R2(1) = R0
      Z2(1) = -B2/2.
C BEG DEC 1998
      IF (IZSTIF.EQ.1) Z2(1) = 0.
C END DEC 1998
C
C  SEGMENT 2 (SAME LOGIC FOR ALL THREE TYPES OF STIFFENER)
C
      R1(2) = R2(1)
      Z1(2) = Z2(1)
      NMESH(2) = 9
      NTYPEH(2) = 1
      R2(2) = R0
      Z2(2) = B2/2.
      IF (IZSTIF.EQ.1) THEN
C BEG DEC 1998
         Z1(2) = -B2/2.
         Z2(2) =  B2/2.
C END DEC 1998
      ENDIF
C
      IF (ISTIF.EQ.0) THEN
C BEG DEC 1998
         NMESH(3) = IMESH
         NTYPEH(3) = 1
         R1(3) = R2(2)
         Z1(3) = Z2(2)
         R2(3) = R1(3)
         Z2(3) = B/2.
         NSEG = 3
C END DEC 1998
         RETURN
      ENDIF
C
C  SEGMENT 3 (SAME LOGIC FOR ALL THREE TYPES OF STIFFENER)
C
      R1(3) = R0
      Z1(3) = 0.
      NMESH(3) = 9
      NTYPEH(3) = 1
      R2(3) = R1(3) + FACT*H
      Z2(3) = 0.0
C
C  SEGMENT 4  FOR THE T AND J IS THE FLANGE; FOR THE BLADE, SEGMENT 4
C             IS THE RIGHT-HAND-PART OF THE SKIN (RIGHTMOST THIN PART)
C
      IF (ISTIF.EQ.3) THEN
C
C  BRANCH FOR BLADE...
         R1(4) = R0
         Z1(4) = B2/2
         NMESH(4) = IMESH
         NTYPEH(4) = 1
         R2(4) = R0
         Z2(4) = B/2.
         NSEG = 4
         RETURN
C
      ELSE
C
C  BRANCH FOR T OR J STIFFENER...
C
         IF (ISTIF.EQ.1) Z1(4) = Z2(3) - W/2.
         IF (ISTIF.EQ.2) Z1(4) = Z2(3)
         R1(4) = R2(3)
         NMESH(4) = 9
         NTYPEH(4) = 1
         Z2(4) = Z1(4) + W
         R2(4) = R1(4)
C
C  SEGMENT 5 (SAME LOGIC FOR BOTH T AND J STIFFENERS...
C
         R1(5) = R0
         Z1(5) = Z2(2)
         IF (IZSTIF.EQ.1) Z1(5) = Z2(1)
         NMESH(5) = IMESH
         NTYPEH(5) = 1
         R2(5) = R0
         Z2(5) = B/2.
         NSEG = 5
C
      ENDIF
C
      RETURN
      END
C
C
C
C=DECK      RZHAT2
C BEG JUNE 1991
      SUBROUTINE RZHAT2(IMESH,B,B2,H,W,W2,NSEG,NMESH,NTYPEH,INTEXT,
     1                  R1,Z1,R2,Z2,R0,IFINE,RADIUS)
C END JUNE 1991
C
C  PURPOSE IS TO GENERATE GEOMETRY FOR THE HAT MODULE
C
      DIMENSION NMESH(*),R1(*),Z1(*),R2(*),Z2(*),NTYPEH(*)
C
      R0 = RADIUS
      FACT = 1.0
      IF (INTEXT.EQ.1) FACT = -1.0
C  SEGMENT 1..
C
      R1(1) = R0
      Z1(1) = -B/2.
      NMESH(1) = IMESH
      NTYPEH(1) = 1
      R2(1) = R0
      Z2(1) = -B2/2.
C
      IF (B2.GT.W2) THEN
C
C  BRANCH FOR HAT ON A THICKENED BASE WIDER THAN W2...
C
C
C  SEGMENT 2..
C
      R1(2) = R2(1)
      Z1(2) = Z2(1)
      NMESH(2) = 5
      IF (IFINE.EQ.1) NMESH(2) = 9
      NTYPEH(2) = 1
      R2(2) = R0
      Z2(2) = -W2/2.
C
C  SEGMENT 3..
C
      R1(3) = R2(2)
      Z1(3) = Z2(2)
      NMESH(3) = 7
      IF (IFINE.EQ.1) NMESH(3) = 9
      NTYPEH(3) = 1
      R2(3) = R0
      Z2(3) = W2/2.
C
C  SEGMENT 4..
C
      R1(4) = R2(2)
      Z1(4) = Z2(2)
      NMESH(4) = 5
      IF (IFINE.EQ.1) NMESH(4) = 9
      NTYPEH(4) = 1
      R2(4) = R0 + FACT*H
      Z2(4) = -W/2.
C
C  SEGMENT 5...
C
      R1(5) = R2(4)
      Z1(5) = Z2(4)
      NMESH(5) = 5
      IF (IFINE.EQ.1) NMESH(5) = 9
      NTYPEH(5) = 1
      R2(5) = R0 + FACT*H
      Z2(5) = W/2.
C
C  SEGMENT 6..
C
      R1(6) = R2(5)
      Z1(6) = Z2(5)
      NMESH(6) = 5
      IF (IFINE.EQ.1) NMESH(6) = 9
      NTYPEH(6) = 1
      R2(6) = R0
      Z2(6) = W2/2.
C
C  SEGMENT 7..
C
      R1(7) = R2(6)
      Z1(7) = Z2(6)
      NMESH(7) = 5
      IF (IFINE.EQ.1) NMESH(7) = 9
      NTYPEH(7) = 1
      R2(7) = R0
      Z2(7) = W2/2.
C
C  SEGMENT 8...
C
      R1(8) = R2(7)
      Z1(8) = Z2(7)
      NMESH(8) = IMESH
      NTYPEH(8) = 1
      R2(8) = R0
      Z2(8) = B/2.
      NSEG = 8
C
      ELSE
C
C  BRANCH FOR HAT WITH B2 = W2 . . .
C
C
C  SEGMENT 2..
C
      R1(2) = R2(1)
      Z1(2) = Z2(1)
      NMESH(2) = 7
      IF (IFINE.EQ.1) NMESH(2) = 9
      NTYPEH(2) = 1
      R2(2) = R0
      Z2(2) = -B2/2.
C
C  SEGMENT 3..
C
      R1(3) = R2(1)
      Z1(3) = Z2(1)
      NMESH(3) = 5
      IF (IFINE.EQ.1) NMESH(3) = 9
      NTYPEH(3) = 1
      R2(3) = R0 + FACT*H
      Z2(3) = -W/2.
C
C  SEGMENT 4...
C
      R1(4) = R2(3)
      Z1(4) = Z2(3)
      NMESH(4) = 5
      IF (IFINE.EQ.1) NMESH(4) = 9
      NTYPEH(4) = 1
      R2(4) = R0 + FACT*H
      Z2(4) = W/2.
C
C  SEGMENT 5..
C
      R1(5) = R2(4)
      Z1(5) = Z2(4)
      NMESH(5) = 5
      IF (IFINE.EQ.1) NMESH(5) = 9
      NTYPEH(5) = 1
      R2(5) = R0
      Z2(5) = B2/2.
C
C  SEGMENT 6..
C
      R1(6) = R2(5)
      Z1(6) = Z2(5)
      NMESH(6) = IMESH
      NTYPEH(6) = 1
      R2(6) = R0
      Z2(6) = B/2.
C
      NSEG = 6
C
      ENDIF
C
      RETURN
      END
C
C
C
C=DECK      RZTRS2
      SUBROUTINE RZTRS2(IMESH,B,B2,H,NSEG,NMESH,NTYPEH,
     1                  R1,Z1,R2,Z2,R0,RADIUS)
C
C  PURPOSE IS TO GENERATE GEOMETRY FOR THE HAT MODULE
C
      DIMENSION NMESH(*),R1(*),Z1(*),R2(*),Z2(*),NTYPEH(*)
C
      R0 = RADIUS
C
C  SEGMENT 1..
C
      R1(1) = R0 - B/2.
      Z1(1) = 0.
      NMESH(1) = IMESH
      NTYPEH(1) = 1
      R2(1) = R1(1) + B - B2
      Z2(1) = 0.
C
C  SEGMENT 2..
C
      R1(2) = R2(1)
      Z1(2) = 0.
      NMESH(2) = IMESH
      NTYPEH(2) = 1
      R2(2) = R1(1) + B/2.
      Z2(2) = H
C
C  SEGMENT 3..
C
      R1(3) = R2(2)
      Z1(3) = H
      NMESH(3) = IMESH
      NTYPEH(3) = 1
      R2(3) = R1(3) + B - B2
      Z2(3) = H
C
C  SEGMENT 4..
C
      R1(4) = R2(3)
      Z1(4) = H
      NMESH(4) = IMESH
      NTYPEH(4) = 1
      R2(4) = R2(1) + B2
      Z2(4) = 0.
      NSEG = 4
      IF (B2.GT.0.0) THEN
C SEGMENT 5..
         R1(5) = R2(4)
         Z1(5) = 0.
         NMESH(5) = IMESH
         NTYPEH(5) = 1
         R2(5) = R2(1)
         Z2(5) = 0.
C
C SEGMENT 6..
         R1(6) = R1(1) + B/2. - B2
         Z1(6) = H
         NMESH(6) = IMESH
         NTYPEH(6) = 1
         R2(6) = R1(3)
         Z2(6) = H
         NSEG = 6
      ENDIF
      RETURN
      END
C
C
C
C=DECK      OUTSG2
      SUBROUTINE OUTSG2(IOUT,ISEG,NMESH,NTYPEH,R1,Z1,R2,Z2)
C
C  PURPOSE IS TO GENERATE PART OF BOSOR5 DECK RELATED TO SEGMENTS.
C
      WRITE(IOUT,'(A,I3)')' H $ BEGINNING OF DATA FOR SEGMENT',ISEG
      WRITE(IOUT,'(2I4)') NMESH,NTYPEH
      IF (NTYPEH.EQ.1) THEN
         WRITE(IOUT,'(A,2I4,A)')' 4,1,2,',NMESH-2,NMESH-1,',2,1,1,2'
      ENDIF
      WRITE(IOUT,'(A,1P,4E14.6,A)') ' 1,',R1,Z1,R2,Z2,' $ END POINTS'
      WRITE(IOUT,'(A)')' 0,3,1'
      WRITE(IOUT,'(A)')' N,0,0,0,0,2,1,0,0,0,0,0'
      WRITE(IOUT,'(A)')' N'
      WRITE(IOUT,'(A)')' N'
      WRITE(IOUT,'(A)')' N'
C
      RETURN
      END
C
C
C
C=DECK      CNTJR2
      SUBROUTINE CNTJR2(IOUT,ISTIF,NSEG,NMESH,IZSTIF,B2)
C
C  PURPOSE IS TO GENERATE BOUNDARY AND JUNCTURE CONDITION BOSOR5 INPUT.
C
      DIMENSION NMESH(*)
C
      DO 100 I = 1,NSEG
C
      WRITE(IOUT,'(A,I3)')' H $ CONSTRAINT CONDITIONS FOR SEGMENT',I
      WRITE(IOUT,'(A)')' 0 $ NUMBER OF POLES'
      IF (I.NE.1.AND.I.NE.2.AND.I.NE.NSEG
     1                     .AND.(I.NE.3.OR.IZSTIF.EQ.0)) THEN
         WRITE(IOUT,'(A)')' 0 $ NO GROUNDING'
      ENDIF
      IF (I.EQ.1) THEN
         IF (IZSTIF.EQ.0) WRITE(IOUT,'(A)')' 1,1,1,0,0,1,0,0'
         IF (IZSTIF.EQ.1) WRITE(IOUT,'(A)')' 2,1,1,0,0,1,0,0'
         WRITE(IOUT,'(A)')' Y   $ SYMMETRY  APPLIED AT BEGINNING'
         IF (IZSTIF.EQ.1) THEN
            INODE = NMESH(I)
            WRITE(IOUT,'(I3,A)')
C BEG DEC 1998
     1      INODE,',0,1,0,0,0,0 $ CONSTRAIN SEG. 1 AT RIVET LINE'
C END DEC 1998
            WRITE(IOUT,'(A)')' Y'
         ENDIF
         WRITE(IOUT,'(A)')' N   $ NO CONNECTION TO LOWER SEGMENT'
      ENDIF
C BEG DEC 1998
C     IF (I.EQ.2.AND.ISTIF.GT.0.AND.IZSTIF.EQ.0) THEN
      IF (I.EQ.2.AND.IZSTIF.EQ.0) THEN
C END DEC 1998
         IF (B2.GT.0.) THEN
            INODE = NMESH(I)/2 + 1
            WRITE(IOUT,'(A,I3,A)')
     1      ' 1,',INODE,',0,1,1,0,0,0 $ CONSTRAIN BASE AT WEB ROOT'
         ELSE
            INODE = 1
            WRITE(IOUT,'(A,I3,A)')
     1      ' 1,',INODE,',0,1,1,0,0,0 $ CONSTRAIN WEB ROOT '
         ENDIF
         WRITE(IOUT,'(A)')' Y'
      ENDIF
      IF (I.EQ.2.AND.ISTIF.GT.0.AND.IZSTIF.EQ.1) THEN
         WRITE(IOUT,'(A)')' 0 $ NO GROUNDING'
      ENDIF
      IF (I.EQ.3.AND.IZSTIF.EQ.1) THEN
         WRITE(IOUT,'(A)')
     1      ' 1,1,0,0,0,0,0,0 $ PLACE TO HANG B.C.'
         WRITE(IOUT,'(A)')' Y'
      ENDIF
      IF (I.EQ.NSEG.AND.ISTIF.GT.0) THEN
         WRITE(IOUT,'(A,I3,A)')' 1,',NMESH(NSEG),',1,0,0,1,0,0'
         WRITE(IOUT,'(A)')' Y   $ SYMMETRY  APPLIED AT END'
      ENDIF
C
      IF (I.EQ.NSEG.AND.ISTIF.EQ.0) THEN
C BEG DEC 1998
C        WRITE(IOUT,'(A)')' 2,1,0,0,0,0,0,0 $ PLACE TO HANG B.C.'
C        WRITE(IOUT,'(A)')' Y'
         WRITE(IOUT,'(A)')' 1               $ number of ground pts.'
C END DEC 1998
         WRITE(IOUT,'(I4,A)') NMESH(NSEG),',1,0,0,1,0,0'
         WRITE(IOUT,'(A)')' Y   $ SYMMETRY  APPLIED AT END'
      ENDIF
C
      IF (I.GT.1) THEN
       WRITE(IOUT,'(A)')' Y   $ YES, CONNECTION TO LOWER SEG.'
       NNODE = 1
C      IF (I.EQ.NSEG) NNODE = 2
       INODE = 1
       IF (ISTIF.EQ.1.AND.I.EQ.4) INODE = NMESH(I)/2 + 1
       ECCEN = 0.
C BEG JAN 2002
       IF ((ISTIF.EQ.1.OR.ISTIF.EQ.2.OR.ISTIF.EQ.3)
     1    .AND.IZSTIF.EQ.0.AND.I.EQ.3) ECCEN = 0.00001
C END JAN 2002
       IF (IZSTIF.EQ.1.AND.I.EQ.2) THEN
          INODE =NMESH(I)/2 + 1
          ECCEN = 0.00001
       ENDIF
       JSEG = I - 1
       IF (I.EQ.NSEG.AND.ISTIF.GT.0.AND.IZSTIF.EQ.0) THEN
          JSEG = 2
          IF (B2.EQ.0.) JSEG = 1
       ENDIF
       IF (I.EQ.NSEG.AND.IZSTIF.EQ.1) JSEG = 1
       JNODE = NMESH(JSEG)
       IF (I.EQ.3.AND.IZSTIF.EQ.0) THEN
          JNODE = NMESH(JSEG)/2 + 1
C BEG DEC 1998
C         IF (B2.EQ.0.) JNODE = NMESH(JSEG)
          IF (B2.EQ.0.0.OR.ISTIF.EQ.0) JNODE = NMESH(JSEG)
C END DEC 1998
       ENDIF
C BEG JAN 2002
C      IF (IZSTIF.EQ.0)
C    1    WRITE(IOUT,'(4I4,A)') NNODE,INODE,JSEG,JNODE,',1,1,1,1,0,0'
C      IF (IZSTIF.EQ.1) WRITE(IOUT,'(4I4,A,1P,E10.2)') 
       WRITE(IOUT,'(4I4,A,1P,E10.2,A)')
     1       NNODE,INODE,JSEG,JNODE,',1,1,1,1,',ECCEN,', 0.'
C END JAN 2002
       WRITE(IOUT,'(A)')' Y'
      ENDIF
C
  100 CONTINUE
C
C     INODE = NMESH(NSEG)/2 + 1
C     JNODE = NMESH(1)/2 + 1
C     JSEG  = 1
C     WRITE(IOUT,'(3I4,A)') INODE,JSEG,JNODE,',0,0,0,0,0,0'
C     WRITE(IOUT,'(A)') ' Y'
C
      WRITE(IOUT,'(A)')' N   $ NO RIGID BODY MODE PREVENTION REQUIRED'
      WRITE(IOUT,'(A)')' H   $ END OF DATA FOR PANEL MODULE'
C
      RETURN
      END
C
C
C
C=DECK      CNHAT2
      SUBROUTINE CNHAT2(IOUT,NSEG,NMESH,B2,W2)
C
C  PURPOSE IS TO GENERATE BOUNDARY AND JUNCTURE CONDITIONS FOR HAT
C
      DIMENSION NMESH(*)
C
         IF (B2.GT.W2) THEN
            IC2 = 2
            IC3 = 3
            IC4 = 4
            IC5 = 5
            IC6 = 6
            IC7 = 7
         ELSE
            IC2 = 1
            IC3 = 2
            IC4 = 3
            IC5 = 4
            IC6 = 5
            IC7 = 6
         ENDIF
C
      DO 100 I = 1,NSEG
C
      WRITE(IOUT,'(A,I3)')' H $ CONSTRAINT CONDITIONS FOR SEGMENT',I
      WRITE(IOUT,'(A)')' 0 $ NUMBER OF POLES'
      IF (I.NE.1.AND.I.NE.IC3.AND.I.NE.NSEG) THEN
         WRITE(IOUT,'(A)')' 0 $ NO GROUNDING'
      ENDIF
      IF (I.EQ.1) THEN
         WRITE(IOUT,'(A)')' 1,1,1,0,0,1,0,0'
         WRITE(IOUT,'(A)')' Y   $ SYMMETRY  APPLIED AT BEGINNING'
         WRITE(IOUT,'(A)')' N   $ NO CONNECTION TO LOWER SEGMENT'
      ENDIF
      IF (I.EQ.IC3) THEN
         INODE = NMESH(I)/2 + 1
         WRITE(IOUT,'(A)')' 3                 $ NO. OF NODES TO GROUND'
         WRITE(IOUT,'(A)')' 1,0,0,0,0,0,0         $ PLACE TO HANG B.C.'
         WRITE(IOUT,'(A)')' Y'
         WRITE(IOUT,'(I4,A)') INODE,',0,0,0,0,0,0 $ PLACE TO HANG B.C.'
         WRITE(IOUT,'(A)')' Y'
         WRITE(IOUT,'(I4,A)')
     1      NMESH(I),',0,0,0,0,0,0 $ PLACE TO HANG B.C.'
         WRITE(IOUT,'(A)')' Y'
      ENDIF
      IF (I.EQ.NSEG) THEN
         WRITE(IOUT,'(A,I4,A)')' 1,',NMESH(NSEG),',1,0,0,1,0,0'
         WRITE(IOUT,'(A)')' Y   $ SYMMETRY  APPLIED AT END'
      ENDIF
C
      IF (I.GT.1) THEN
       WRITE(IOUT,'(A)')' Y   $ YES, CONNECTION TO LOWER SEG.'
       INODE = 1
       JSEG = I - 1
       IF (I.EQ.IC4) JSEG = IC2
       IF (I.EQ.IC7) JSEG = IC3
       JNODE = NMESH(JSEG)
       NNODE = 1
       IF (I.EQ.IC6) NNODE = 2
       IF (I.EQ.NSEG) NNODE = 2
C
       WRITE(IOUT,'(4I4,A)') NNODE,INODE,JSEG,JNODE,',1,1,1,1,0,0'
       WRITE(IOUT,'(A)')' Y'
       IF (I.EQ.IC6) THEN
          INODE = NMESH(I)
          JSEG  = IC3
          JNODE = NMESH(JSEG)
          WRITE(IOUT,'(3I4,A)') INODE,JSEG,JNODE,',1,1,1,1,0,0'
          WRITE(IOUT,'(A)')' Y'
       ENDIF
      ENDIF
C
  100 CONTINUE
C
      INODE = NMESH(NSEG)/2 + 1
      JNODE = NMESH(1)/2 + 1
      JSEG  = 1
      WRITE(IOUT,'(3I4,A)') INODE,JSEG,JNODE,',0,0,0,0,0,0'
      WRITE(IOUT,'(A)') ' Y'
C
      WRITE(IOUT,'(A)')' N   $ NO RIGID BODY MODE PREVENTION REQUIRED'
      WRITE(IOUT,'(A)')' H   $ END OF DATA FOR PANEL MODULE'
C
      RETURN
      END
