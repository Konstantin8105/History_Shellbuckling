C=DECK      STRUCT
      SUBROUTINE STRUCT(IFILE,IMOD,IW,ILOC,DS,AS,BS,DIAG,C,D,DI,
     1  X,Y,Z,NCONST,CONSTR,WORDB,IADDB,OBJ,WORDOB,N,NSERCH,EIGSAV,
     1  EP1,EP2,EP12,NMAX,IQUIT,IWHERE,KOITER,JJJ,IREDUC,CONMAX,
     1  ILOADS,FSGEN,FSPAN,FSLOC,FSSTR,IQUICK,IPOINC,INUMTT,EIGBOW,
     1  CRACK,IWG,ILOCG,DSG,ASG,BSG,DIAGG,CG,DG,DIG,XG,YG,ZG,IGENRL,
     1  IFINAL,EIGDIS,EALLST,CSLOPE,M0,AL0,FSQ,ITYPE,IFILE4,IPROMP,
     1  IOUT,ILOW,P,IWIDE,MCRIP,NCRIP,IOBJ,WIMPG,WIMPL,NOCONV,IABP,
C BEG DEC 2001
     1  ECC,ILONG,NCTOT,NLOADS,IWR,ILOCR,DSR,ASR,BSR,DIAGR,
C END DEC 2001
     1  CRX,DRX,DIR,XR,YR,ZR,IFREEX,ILOWVE,IWCON,WPGMAX,KOUNTM,MARK,
     1  MARK2,MARK3,ICWEBL,ICASE,IBPREL,VAR,ISTOP,TEMP,FMULT,IMTEMP,
     1  FSBSTR,IPOPX,ILAMB2,ILAM34,MX,MY,NCASES,ITRUSS,IABT,EIGBOP,
C BEG DEC 2001
     1  IHOOP,WIMPG1,WIMPG2,NVARB,ISUB,WORDV,IICURV,IIKOIT)
C END DEC 2001
C
C  PURPOSE IS TO FIND BEHAVIORAL CONSTRAINTS FOR OPTIMIZTION PROBLEM
C  THESE CONSTRAINTS ARE STORED IN CONSTR, WITH DEFINITIONS OF THEM
C  STORED IN WORDB
C
C BEG APR 2009
      COMMON/CIJCLD/CXCOLD(6,6,5),CYCOLD(6,6,5),CY3CLD(6,6,11),
     1              CXCLD0(6,6,5),CXCLD1(6,6,5)
      COMMON/CNVARX/CNXVAR(23,8),CNYVAR(23,8)
      COMMON/NCRITX/NCRIT1,NCRIT2,NCRIT3,NCRITA,NCRITB,NCRITC
      COMMON/NCRITY/NCRIT4,NCRITD,NCRIT5,NCRITE
      COMMON/LOCATR/ILOCPR,ILOCBR,IRWCPR(98),IRWCBR(98),IIWPR,IIWBR
      COMMON/NCONDX/NCONDR
      COMMON/RING3R/D1R(98),D2R(98)
      COMMON/JUNCTR/IFIXBR(588),IFXBR(588),ITYPER(98)
      COMMON/FREEDG/IFREE
      COMMON/ORTA/IFLGG,KTM,KROOTS
      COMMON/COLBND/FLGCLD,FN1WEB,RCOLD
      COMMON/YCOLDX/YCOLD1(400),YCOLD2(400)
      DIMENSION DUMMYA(1000),DIAGR(*),EIGCLD(50),YCOLD(400),YCOLDS(400)
      DIMENSION WDDD9(23,8),WFLANG(2),WFLNG0(2),B2COLD(2),B2CLD0(2)
      DIMENSION WDDD10(23,8),WDDD11(23,8),BCOLD(2),BCOLD0(2)
      COMMON/MODL11/WW9(23,8),WD9(23,8),WDD9(23,8),
     1 UU9(23,8),VV9(23,8),VP9(23,8)
      COMMON/MODL12/WW10(23,8),WD10(23,8),WDD10(23,8),
     1 UU10(23,8),VV10(23,8),VP10(23,8)
      COMMON/MODL13/WW11(23,8),WD11(23,8),WDD11(23,8),
     1 UU11(23,8),VV11(23,8),VP11(23,8)
      COMMON/IFCTXX/IFCT13,IFCT14,IFCT15
      CHARACTER*3 CCN
      CHARACTER*7 CCN2
C23456789012345678901234567890123456789012345678901234567890123456789012
C END APR 2009
C BEG JUL 2007
      DIMENSION EIGONE(4)
C END JUL 2007
C BEG MAR 2007
      COMMON/EIGNO/NVECX,ROOTX(50),AXBX
      COMMON/ECCRRR/ECCARR(4),EIEFF2,FNCRIT,ECCN,WIDKNK
      COMMON/SHRFCX/SHRFAC,SMRFAC
C END MAR 2007
C BEG JAN 2007
      COMMON/AMPMDZ/AMPMD7,AMPMD8,AMPMD9,AMPM10
      COMMON/WRDMDX/WRDMOD
      CHARACTER*16 WRDMOD
C END JAN 2007
C BEG NOV 2006
C23456789012345678901234567890123456789012345678901234567890123456789012
      COMMON/IHILCX/IHILOC
C BEG FEB 2009
      COMMON/ITIPLW/IFCT11,ITIPL8,IWEBL8,IFLGL8,MMAXHI,
     1              MMINHI,IYLOC9,IHIGHM
C END FEB 2009
      COMMON/YVECT4/YLOC9(400)
      COMMON/MODL10/WW8(23,8),WD8(23,8),WDD8(23,8),
     1 UU8(23,8),VV8(23,8),VP8(23,8)
      DIMENSION EIGHIS(200),NHIGST(200)
      DIMENSION WDDD8(23,8)
C END NOV 2006
C BEG JULY 2006
      COMMON/NMFIXD/NUSER(5),MUSER(5),NOSRCH(5)
C END JULY 2006
C BEG JUN 2006
      COMMON/EIG1XX/EIG1EIG(10,20),EIG1SLP(10,20)
C END JUN 2006
C BEG MAR 2005
      COMMON/DWAVQQ/DNWAVX
C END MAR 2005
C BEG DEC 2004
      COMMON/CSUBXY/CSUBX(6,6),CSUBY(6,6),THSUBX(6),THSUBY(6),
     1                                    THCSBX(6),THCSBY(6)
      COMMON/EIGSLZ/SLPRAT(300),EHILOW(300)
C END DEC 2004
C BEG JUN 2004
      COMMON/WIDCOX/WIDLMM
      COMMON/GEOM5/RAD2,CURV2
      COMMON/INTRGX/INSRNG
      COMMON/SKPSUB/ISKIPQ(10)
      COMMON/CURVFX/CURVSV,CURFSV
      COMMON/ISBSTF/KLAYER(4,2),NSURF(2,4,2),NB2(2,4,2),
     1              ISOSUB(2,4,2),ISOTYP(2,4,2),MATSUB(2,4,2)
C END JUN 2004
C BEG FEB 2009
C  substiffener stuff...
C   FN1SKN(1)   = "eigenvalue" axial resultant in SKIN
C   FN1SKN(2)   = "fixed"      axial resultant in SKIN
C   FN2SKN(1)   = "eigenvalue" hoop  resultant in SKIN
C   FN2SKN(2)   = "fixed"      hoop  resultant in SKIN
C   FNXTIP(1,1) = "eigenvalue" axial resultant at SUBSTRINGER tip
C   FNXTIP(1,2) = "fixed"      axial resultant at SUBSTRINGER tip
C   FNXTIP(2,1) = "eigenvalue" hoop  resultant at SUBRING     tip
C   FNXTIP(2,2) = "fixed"      hoop  resultant at SUBRING     tip
C   FNXRUT(1,1) = "eigenvalue" axial resultant at SUBSTRINGER root 
C   FNXRUT(1,2) = "fixed"      axial resultant at SUBSTRINGER root 
C   FNXRUT(2,1) = "eigenvalue" hoop  resultant at SUBRING     root 
C   FNXRUT(2,2) = "fixed"      hoop  resultant at SUBRING     root 
C
C   NXVSUB(i,j) = "eigenvalue" axial resultant in discretized
C                  skin-substringer module cross section
C   NYVSUB(i,j) = "eigenvalue" hoop  resultant in discretized
C                  skin-substringer module cross section
C   NXFSUB(i,j) = "fixed"      axial resultant in discretized
C                  skin-substringer module cross section
C   NYFSUB(i,j) = "fixed"      hoop  resultant in discretized
C                  skin-substringer module cross section
C   etc., in which "i" = nodal points, "j" = segment number.
C
      COMMON/NVARSB/NXVSUB(23,8),NYVSUB(23,8),NXYVSB(23,8)
      COMMON/NFIXSB/NXFSUB(23,8),NYFSUB(23,8),NXYFSB(23,8)
      REAL NXVSUB, NYVSUB, NXYVSB, NXFSUB, NYFSUB, NXYFSB
      DIMENSION IZDUM(2),IFAYDM(2),RESLTZ(2,5,2),ZPARTQ(5)
      DIMENSION IPV2Z(50),IBVCZ(50),EIGSUB(100),NSUB(100)
      DIMENSION FN1SKN(2),FN2SKN(2),FN12SK(2)
      DIMENSION FNXTIP(2,2),FNXRUT(2,2)
      COMMON/SUBSTX/TSUB(2,4,2),HSUB(2,4,2),THSUB(2,4,2),
     1              BSUB(2,4,2)
      COMMON/SUBSPC/SPCNG(2,4,2),CXX0(6,6,5),CYY0(6,6,5),
     1    THRMX0(6,5),THRMY0(6,5),TCURX0(6,5),TCURY0(6,5),
     1    TX0(5),TY0(5),GTX0(2,5),GTY0(2,5),TXX(2,5),TYY(2,5),
     1    GTSSUB(2,5)
      COMMON/CSKINX/CSKIN(6,6),TSKINX(5),TSKINY(5)
      COMMON/GEOM0S/B0SUB(2),B20SUB(2),H0SUB(2),W0SUB(2),W20SUB(2)
      COMMON/GEOM2S/BSUBX(2),B2SUBX(2),HSUBX(2),WSUBX(2),W2SUBX(2)
      COMMON/GEOM3S/ISTFSB(2),NLAYSB(4,2),NSEGSB(2),INTXSB(2)
      COMMON/TOTPTZ/M3Z
      COMMON/SEGSZ/NSEGZ,M2Z,I5Z(95),I2GZ,I2GGZ
      COMMON/ILOCGZ/ILOCZ(600),IWZ(210),DSZ(200)
      COMMON/BLKZ/NBLKZ,NGBKZ(20),NKFZ(20)
      COMMON/BCKZ/IDRWZ(20,5)
      COMMON/BKSIZZ/IMAXPZ,IMAXBZ,KMAXPZ(20),KMAXBZ(20)
      COMMON/ITIPSB/IFCT12,ITIPL9,IWEBL9,IFLGL9,MMAXSB,
     1              MMINSB,IYLC10,MCRSUB
      COMMON/ALLSUB/CXXSUB(6,6,5)
      COMMON/YVECT5/YLOC10(400)
C END FEB 2009
      DIMENSION ISUB(*),WORDV(*)
      CHARACTER*80 WORDV
      CHARACTER*65 TITLE
      DOUBLE PRECISION AS,BS,C,D,DI,X,Y,Z
C BEG NOV 2003
      COMMON/IFLTAX/IFLT8A,IFLT7A
      COMMON/EIGKNX/EIGKNS(3)
      COMMON/INTPRX/INTPRS
      COMMON/FKNCKX/FKNCKP(10),FKNRAT(10)
      COMMON/IBLADX/IBLADE(2),IBLDUM(2)
      COMMON/ILABLX/ILABLY
      COMMON/IDISCW/IDISCT,IDISCS,IDISC1
      COMMON/EIGXX2/EIGSX0,XMULTS,YMULTS,
     1 ASPSVU,ASPSVV,ASPSVW,ASPSVZ,EIGLX3,FKNMLS
      COMMON/EIGXX3/NMSTRS,NMRNGS,ISIGNS,ISSSRX
C END NOV 2003
C BEG AUG 2001
      COMMON/MNGNQQ/MGENQQ,NGENQQ
      COMMON/PACTQQ/PACTUL
C END AUG 2001
C BEG JUL 1999
      COMMON/IQUICX/IQUICS,IQUCHG
C END JUL 1999
C BEG NOV 1999
      COMMON/RNGKNX/RNGKNK
C END NOV 1999
C BEG JUN 2006
      COMMON/IALTSP/IALTSK(6)
C END JUN 2006
C BEG MAR 2005
C BEG JAN 2006
      COMMON/RNGKNY/RNGKNZ,RNGFCT,ICHLNG
      COMMON/ICONSX/ICONSV
C END JAN 2006
C BEG FEB 2006
      COMMON/NSTREX/NMINSR,NMAXSR,ISRMOD(10),ISRIDX
C END FEB 2006
      DIMENSION CSPNEW(6,6),THRSVE(6),CXSAVX(180),CYSAVX(180)
      DIMENSION CSSAVX(36),SVPRES(184)
      REAL LENMDS,NYAVEP
C END MAR 2005
C BEG OCT 1998
      DOUBLE PRECISION ASR,BSR,CRX,DRX,DIR,XR,YR,ZR
      DIMENSION ASR(*),BSR(*),CRX(*),DRX(*),DIR(*),XR(*),YR(*),ZR(*)
C END OCT 1998
C BEG NOV 1994
      DOUBLE PRECISION ASG,BSG,CG,DG,DIG,XG,YG,ZG
C END NOV 1994
      COMMON/BOVERW/BOVRW2(2)
      COMMON/PRWAVE/NAFN
      COMMON/ESHORT/EXAVE,EXAVEA,TXALOW
      COMMON/ISTL2/ISTFL2
      COMMON/SHRWEB/SHEARX,XMAX,SHEARY,YMAX
C BEG DEC 1998
      COMMON/SHRWBR/SHERRX,XMAXR,SHERRY,YMAXR
C END DEC 1998
C BEG JAN 1995
C BEG NOV 1996
      COMMON/XFOUN2/ECCORE(4,2),GCXP(4,2),GCYP(4,2)
      COMMON/CYLWXX/WMIDS,WRINGS,WXXMDS,WXXRGS,WCALCS,WXXXMS,XMAXQ
      COMMON/PBMODE/WVAR(23,8),WDVAR(23,8),WDDVAR(23,8)
C END NOV 1996
C BEG DEC 1996
      COMMON/ILWJJJ/ILOWJJ
C END DEC 1996
C BEG JAN 1997
      COMMON/PARAM6/CCROSS(10,20)
      COMMON/PARAM7/IDINQ1(10,20),IDINQ2(10,20),JCROSS(20)
C END JAN 1997
C BEG MAR 1997
      COMMON/IJCUBX/ICUBIC(20),JCUBIC(20)
      COMMON/EIGAMZ/IEIGAM
C END MAR 1997
C BEG APR 1998
      COMMON/IARBOX/IARBOC(20)
C END APR 1998
C BEG JUN 1998
      COMMON/MCASEZ/MCASL1,MCASS1
      COMMON/ALTRAT/EIGRT7,EIGRT8,EIGRT9,EIGMR7,EIGMR8,EIGMR9
C END JUN 1998
C BEG JULY 1998
C BEG OCT 2001
      COMMON/IALTSX/IALTSN,IALTSV
C END OCT 2001
C END JULY 1998
C BEG AUG 1998
      COMMON/FNYAVX/FNYAVE,INYAVE
      COMMON/IDISCY/IDISC0
      COMMON/EIGXX1/NUMSTR,NUMRNG,ISIGNL,ISIGNG,ILOCAL,IGENRX
C END AUG 1998
C BEG APR 1997
      COMMON/IMANYX/IMANY
C END APR 1997
C BEG MAY 1997
      COMMON/IZSTIX/IZSTIF(2)
      COMMON/LODS11/WBEIG(2,4,2),WBTOT(2,4,2),WBSULT(2,4,2)
      COMMON/OLDRES/RESOLD(3,5,2),RESEGX(3,5,2),WBOLD(2,4,2),RWBOLD(2)
C BEG JULY 1997
      COMMON/ILMB2X/ILMB2(5,2,2),ILM34(2,2),ILM44(2,2),ILAM44(2,2)
      COMMON/MTORSN/MTORS(10),MTOR,MTORP
      COMMON/ETORSN/ETORS(10),DELTOR
      COMMON/WTORSN/WTORS(10)
      CHARACTER*80 WTORS
c END JULY 1997
      COMMON/SHRWBT/SHERXT,XMAXT,SHERYT,YMAXT
C BEG FEB 1999
      COMMON/EFFWID/BLLN,ETHOOP,ETHALL
C END FEB 1999
      DIMENSION EAVET(6),ETHARG(6)
C END JAN 1995
      COMMON/NEUTRL/DNEUTX,DNEUTY,DSURF
      COMMON/KCOEF1/A1(8),A2(8),A2P(8),A3(8),A4(8),A5(8)
      COMMON/KCOEF2/A6(8),A6P(8),A7(8),A8(8),A9(8),A10(8)
      COMMON/CRIPL1/ICRIP,ISEGC
      COMMON/GEOM1/AXIAL,CIRC,R
      COMMON/GEOM2/B(2),B2(2),H(2),W(2),W2(2)
      COMMON/GEOM3/ISTIF(2),NLAYER(4,2),NSEG(2),INTEXT(2)
C BEG JULY 1996
      COMMON/GEOM0/B0(2),B20(2),H0(2),WW0(2),W20(2)
C END JULY 1996
C BEG AUG 1996
      COMMON/IXIMPX/IXIMPF(5)
C END AUG 1996
C BEG DEC 2004
      COMMON/AXWAVX/AXLWAV(5)
C END DEC 2004
C BEG OCT 1996
      COMMON/MODEL9/QX(23,8),QY(23,8),QXMAX(4,2),QYMAX(4,2)
      COMMON/PCRUSH/CRUSH(4,2)
      COMMON/EIGPRL/EIGAMG,EIGAMS,CSLAMG,CSLAMS,FACAMG,FACAMS
      COMMON/VINKNX/VINKNK
      COMMON/MODAL7/WDDD(23,8),PWDDD(23,8),WDDDVR(23,8)
      COMMON/MODAL8/WDDD2(23,8),WDDD3(23,8),WDDD4(23,8)
      COMMON/WXXXPR/WXXXGL,WYYYGL,WXXXGT
      COMMON/HICONX/IHICON
      COMMON/QYYTOR/QXXMAX(4,2),QYYMAX(4,2),FIQYY
      COMMON/NSANDW/PNXF1(11,8,2),PNYF1(11,8,2),PNXYF1(11,8,2),
     1              PNXF2(11,8,2),PNYF2(11,8,2),PNXYF2(11,8,2)
      COMMON/WRATXX/WRATTP,WRATWB,WRATCN
      DIMENSION IB2W2(2),MORCON(5,2),ZDUM(23,8)
      LOGICAL ISANDX, ELOG4
C END OCT 1996
      COMMON/LAYER/MATL(90),LTYPE(99,5,2),T(90),ANGLE(90)
      COMMON/MATER1/E1(20),E2(20),G(20),FNU(20),DENS(20)
      COMMON/MATRN2/GTX(2,5),GTY(2,5),GTS(2),TEFF(2)
      COMMON/MATER4/TAPE(20),TMINUM(20),FAILSC(100)
      COMMON/MATER5/DEGRAD(10,5,10)
      COMMON/THICK/TX(5),TY(5)
      COMMON/THICKM/TXMIN(5),TXMAX(5),TYMIN(5),TYMAX(5)
      COMMON/MATER3/STSMAX(10),EALLOW(5,10)
      COMMON/ALLCIJ/CX(6,6,5),CY(6,6,5),CS(6,6)
C BEG APR 2011
      COMMON/ORGCIJ/CXORIG(6,6,5),CYORIG(6,6,5),CSORIG(6,6)
C END APR 2011
      COMMON/LINCIJ/CX0(6,6,5),NXVAR0(23,8),NYVAR0(23,8),NXYVR0(23,8)
      REAL NXVAR0,NYVAR0,NXYVR0
      COMMON/F0COMM/F0
      COMMON/MARK44/MARK4
      COMMON/STFSTF/STFL1,STFL2,STFM1,STFM2,STFMM1,STFMM2,STORS1,STORS2
      COMMON/LOADS/FNX,FNY,FNXY,RESULT(3,5,2)
      COMMON/LOADS2/FNX0,FNY0,FNXY0,RESFIX(3,5,2)
      COMMON/LOADS3/RESEIG(3,5,2)
      COMMON/LOADS4/EPSEIG(3,5,2),EPSFIX(3,5,2),EPSTOT(3,5,2)
      COMMON/LOADS5/RESTOT(3,5,2)
C BEG NOV 1997
      DIMENSION RESDUM(3,5,2)
C END NOV 1997
      COMMON/LOADSG/FXBEG,FXEND,FYBEG,FYEND,FXYBEG,FXYEND
      COMMON/FNP0/FNXP0,FNYP0,FNXYP0,FNXPL0,FNYPL0,FNXYPL
C BEG NOV 2003 (change name from NVAR to NVARXX in 5 libraries to avoid conflict)
      COMMON/NVARXX/NXVAR(23,8),NYVAR(23,8),NXYVAR(23,8),MAXSEG,KOIT
C END NOV 2003
      COMMON/NFIX/NXFIX(23,8),NYFIX(23,8),NXYFIX(23,8)
      COMMON/PMD/PW(23,8),PWD(23,8),PWDD(23,8),PU(23,8),PV(23,8),
     1 PVP(23,8)
      COMMON/ECCEN/ZREF(23,8)
      COMMON/MODAL1/WW1(23,8),WD1(23,8),WDD1(23,8),
     1 UU1(23,8),VV1(23,8),VP1(23,8)
      COMMON/MODAL2/WW2(23,8),WD2(23,8),WDD2(23,8),
     1 UU2(23,8),VV2(23,8),VP2(23,8)
      COMMON/MODAL3/WW3(23,8),WD3(23,8),WDD3(23,8),
     1 UU3(23,8),VV3(23,8),VP3(23,8)
      COMMON/MODAL4/WW4(23,8),WD4(23,8),WDD4(23,8),
     1 UU4(23,8),VV4(23,8),VP4(23,8)
      COMMON/MODAL5/WW5(23,8),WD5(23,8),WDD5(23,8),
     1 UU5(23,8),VV5(23,8),VP5(23,8)
      COMMON/MODAL6/WW6(23,8),WD6(23,8),WDD6(23,8),
     1 UU6(23,8),VV6(23,8),VP6(23,8)
C BEG OCT 1998
      COMMON/MODAL9/WW7(23,8),WD7(23,8),WDD7(23,8),
     1 UU7(23,8),VV7(23,8),VP7(23,8)
C END OCT 1998
      COMMON/NPRESS/NXPRES(23,8),NYPRES(23,8),EP1MID(23,8),EP2MID(23,8)
      COMMON/MPRESS/MXPRES(23,8),MYPRES(23,8),EP4MID(23,8),EP5MID(23,8)
      COMMON/SEGS/NSEGB5,M2,I5(95),I2,I2G
      COMMON/SEGSG/NSEGG(1),M2G,I5G(95),I2GG,I2GGG   
      COMMON/OUTP/NPRT
      COMMON/TOTPTS/M3
      COMMON/TOTPTG/M3G
      COMMON/ROTALW/CHIALW,PHIMIN
      COMMON/GNNSTB/EIGGEN,EIGLOC,EIGTST,FBOUND,LENMOD
      COMMON/BNDLAY/BLL
      COMMON/NGENX/NWIDPR
      COMMON/GWAVES/NGEN,MGEN,WSKIN,WSTIFF
      COMMON/MODES2/MSKIN,NSKIN,CCCLLL,CCCSLP
      COMMON/MATERT/ALPHA1(20),ALPHA2(20),CURETP(20),ICOCUR(2)
      DIMENSION IW(*),ILOC(*),DS(*),AS(*),BS(*),DIAG(*),C(*),D(*)
      DIMENSION IWG(*),ILOCG(*),DSG(*),ASG(*),BSG(*),DIAGG(*),CG(*)
      DIMENSION DI(*),X(*),Y(*),Z(*),CONSTR(*),WORDB(*),IADDB(*)
      DIMENSION DIG(*),XG(*),YG(*),ZG(*),DG(*)
      DIMENSION CTAN(3,3),IPOINC(*)
C BEG NOV 1994
      COMMON/WIDLMX/WIDLM0
C END NOV 1994
C BEG OCT 1998
      DIMENSION IWR(*),ILOCR(*),DSR(*),IPV2R(50),IBVCR(50)
      DIMENSION ZREFRG(23,8),WDDD5(23,8),WDDD6(23,8),WDDD7(23,8)
      DIMENSION FKNKOI(3),FKNKAL(3),EIGPOS(5),NWVPOS(5)
      DIMENSION EAVEPA(6),EAVEPB(6),RESBGL(3,5,2),EPSBGL(3,5,2)
      DIMENSION NGLOB2(200),THS1(2)
      DIMENSION EIGHIG(200),NHIGRG(200),EIGLOW(200),NLOWRG(200)
      COMMON/WLPRSX/WLPRES
      COMMON/WEBTH6/FCXWEB(11),FCXWBA(11),FCXWBB(11),FCXWBT(11)
      COMMON/WEBTH7/FCYWEB(11),FCYWBA(11),FCYWBB(11),FCYWBT(11)
      COMMON/WEBTH1/CX3(6,6,11),CY3(6,6,11),THRMX3(6,11),THRMY3(6,11)
      COMMON/NRNGEX/NMINRG,NMAXRG,IRNMOD(10),IRNIDX
      COMMON/IDMDNX/IDMWAV(3),IDNWAV(3)
      COMMON/FKNKMX/FKNMLT
      COMMON/PRERNG/PNXVAR(23,8),PNYVAR(23,8),PNXFIX(23,8),PNYFIX(23,8)
C BEG DEC 1998
C BEG NOV 2003
      COMMON/FNYYPX/FNYYP(30),FNYYP0(30),FXXXP(30),RNGSPA
C END NOV 2003
      COMMON/FNYYPY/IXNUMB,IXNMBA,IXNMBB,IXNMBT
C BEG JAN 1999
      COMMON/FNYYPZ/IXNM0A,IXNM0B,IXNM0T
C END JAN 1999
C END DEC 1998
      COMMON/FNYYPQ/FNYYPA(30),FNYYPB(30),FNYYPT(30)
      COMMON/FNYAVQ/FNYAVA,FNYAVB,FNYAVT,INYAVA,INYAVB,INYAVT
      COMMON/FCERNG/FCEWEB,FCEFLG,FCEWBA,FCEFGA,FCEWBB,FCEFGB,
     1              FCEWBT,FCEFGT
      COMMON/EPSRNG/EPSRGA,EPSRGB,EPSRGT
      COMMON/IPRNTR/IPRINT
      COMMON/DELTAX/DELTAN,DELTN2
      COMMON/SHRWBA/SHERXA,XMAXA,SHARYA,YMAXA
      COMMON/SHRWBB/SHERXB,XMAXB,SHARYB,YMAXB
      COMMON/MCASEY/DFNYPM,DFNYTM,DFNYBM
      COMMON/CYLWXA/WMIDA,WRINGA,WXXMDA,WXXRGA,WCALCA,WXXXMA,XMAXQA
     1                    WRING0,WMID0,WXXMD0
      COMMON/CYLWXB/WMIDB,WRINGB,WXXMDB,WXXRGB,WCALCB,WXXXMB,XMAXQB
     1                    WRING1,WMID1,WXXMD1
      COMMON/CYLWXT/WMIDT,WRINGT,WXXMDT,WXXRGT,WCALCT,WXXXMT,XMAXQT
     1                    WRING2,WMID2,WXXMD2
      COMMON/WXXXPA/WXXXGA,WXXXGB,FNXPA,FNYPA,FNXPB,FNYPB
      COMMON/RNGWXB/WXXFLA,WXXFLB,WXXRNA,WXXRNB
      COMMON/RNGWXT/WXXFLT,POPRNT,WXXRNT
      COMMON/WLOCAA/POPISA,POPISB,POPRNA,POPRNB,DFNYPA,DFNYPB,DFNYP0
      COMMON/WPRSGX/WPRSGA,WPRSGB,WPRESG,WDDPRA,WDDPRB,WDDPRS
      COMMON/IYVECT/IYLOC,IYLOC2,IYLOC3,IYLOC4,IYLOC5,IYLOC6,
     1              IYLOC7,IYLOC8,IYLOCG,IYPLOC,IYPGEN,IYGEN,IYGEN2
      COMMON/YVECT1/YLOC(400),YLOC2(400),YLOC3(400),YLOCR(400),
     1 YLOCG(600),YPLOC(400),YPGEN(600),YLOCR2(400),YLOCR3(400)
      COMMON/YVECT2/YGEN(400),YGEN2(400),YSAVE(400),YSAVE2(400)
      COMMON/YVECT3/YSAVE3(400),YSAVE4(400),YSAVE5(400),YSAVE6(400)
      COMMON/DELIM4/DELFCR(3,4),DELWBR(2)
      COMMON/TOTPTR/M3R
      COMMON/SEGSR/NSEGR,M2R,I5R(95),I2GR,I2GGR   
      COMMON/BLKR/NBLKR,NGBKR(20),NKFR(20)
      COMMON/BCKR/IDRWR(20,5)
      COMMON/BKSIZR/IMAXPR,IMAXBR,KMAXPR(20),KMAXBR(20)
      COMMON/NWXNWT/NSAVEX,NSAVET,ITIPLX,ITIPLS,NSAVEZ,ITIPLZ,
     1 NSAVEQ,ITIPLQ,ITIPL5,ITIPL6,ITIPL7,IWEBL5,IWEBL6,IWEBL7,
     1 MINTRG,NINTRG,ILOWER,IHIGHR
C BEG OCT 2004
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG AUG 2005
      COMMON/INGENW/NGENNW,NGENNA(30,5,2)
C END AUG 2005
      COMMON/IFLGLX/IFLGL1,IFLGL2,IFLGL3,IFLGL4,IFLGL5,IFLGL6,IFLGL7
      COMMON/VARALT/SPANDA(6),EPANDA(6),EALTER(6),EPHIGH(6),ASPECT(6,2)
      COMMON/INTALT/MPANDA(6),NPANDA(6),MPHIGH(6),IDISCQ(6),NUMBST(6),
     1              NUMBRG(6),ISIGNA(6),IALTER(6)
      COMMON/ALTRT2/EGRT10,EGRT11,EGRT12,EGMR10,EGMR11,EGMR12
      COMMON/ALTRT4/XMULT4,YMULT4,XMULT5,YMULT5,XMULT6,YMULT6
C END OCT 2004
      COMMON/EWXEWT/EIGSVX,EIGSVY,EIGSVZ,WRATPX,WRATPS,WRATPZ,
     1              EIGSVQ,WRATPQ
C END OCT 1998
      COMMON/AK9X9Y/MWAV9X,NWAV9X,CSLP9X,MWAV9Y,NWAV9Y,CSLP9Y,
     1              FMA9X,FMA9Y
      COMMON/AK8X8Y/MWAV8X,NWAV8X,CSLP8X,MWAV8Y,NWAV8Y,CSLP8Y,
     1              FMA8X,FMA8Y,CSLP8Z,MWAV8Z,NWAV8Z,FMA8Z
      COMMON/AK7X7Y/MWAV7X,NWAV7X,CSLP7X,MWAV7Y,NWAV7Y,CSLP7Y,
     1            FMA7X,FMA7Y,MWAV7Z,NWAV7Z,CSLP7Z,FMA7Z,BABSR,CSLP7Q,
     1            WIDTH7,SID7
      COMMON/IK7X7Y/NOTCM7,NOTCM8,NOTCM9
      COMMON/IGENXX/IGENX
C END AUG 1995
      COMMON/PSTB1A/PBEIGK,PBEIGB
      COMMON/DELIMP/DELFCE(4,2),DELISO(4,3),DELSKN(3,2,2),DELWEB(2)
      DIMENSION RWBTOT(2),RWBEIG(2)
      DIMENSION EIGDIS(*)
      DIMENSION CSN(6,6),CMIN(5),TBASE(2)
      DIMENSION IPV2(50),IBVC(50),IPV2G(50),IBVCG(50)
      DIMENSION CSP(6,6)
      COMMON/TANSTF/C11TAN(23,8),C12TAN(23,8),C22TAN(23,8),C33TAN(23,8)
      COMMON/WIDCOL/CSWIDE(6,6)
      COMMON/REDGEN/CSREDU(6,6)
      COMMON/BLK/NBLK,NGBK(20),NKF(20)
      COMMON/BLKG/NBLKG,NGBKG(20),NKFG(20)
      COMMON/BCK/IDRW(20,5)
      COMMON/BCKG/IDRWG(20,5)
      COMMON/BKSIZE/IMAXP,IMAXB,KMAXP(20),KMAXB(20)
      COMMON/BKSIZG/IMAXPG,IMAXBG,KMAXPG(20),KMAXBG(20)
      COMMON/ZPARTS/ZPARTX(5),ZPARTY(5)
C BEG OCT 1994
      COMMON/WIMPF/WRATIO,WTIPWS
C END OCT 1994
      COMMON/MNNOSH/MLOCNS,NLOCNS,MLCNS3,NLCNS3
      COMMON/GENPRE/FBPRE,PRELEN,FMISC(28)
      COMMON/WORDS3/WORDIQ(20)
C BEG JULY 1995  The 10s were 5s in the next three lines.
      COMMON/PARAM3/CINEQ(10,20),DPWREQ(10,20)
      COMMON/PARAM4/IDINEQ(10,20),NINEQ,JINEQ(20),IEQTYP(20)
C END JULY 1995
      COMMON/FMAXPP/MAXCON
      COMMON/WORDS5/PCWORD(99)
      COMMON/PLOTCD/ICAR,IADDCC(99),CPLOT(99)
      CHARACTER*80 PCWORD,WORDIQ
C BEG JUN 1999
      REAL MX,MY,MXS,MYS
      COMMON/ITSTBX/ITESTB
C END JUN 1999
      REAL MAXCON
      DIMENSION VAR(*),CONPRT(99),IDUMMY(99),TEMP(4,2),FMULT(20,10,4,2)
      DIMENSION WRDUM(2),EPADUM(6),THSMRX(6,5),THSMRY(6,5)
      DIMENSION ETSMRX(6,5),ETSMRY(6,5),ILAMB2(5,2,2),ILAM34(2,2)
      COMMON/POSTB3/PBBOW(20)
      COMMON/KRESUL/RESULK(3,5,2)
      COMMON/EPRELM/EIGGN1,TSTGL1,CSLOP1,MGEN1,NGEN1
      COMMON/BYLOCP/IFREEY
      COMMON/EIGSLX/EIGSVL
      COMMON/INDMOM/FMOM,FNCIRC
      COMMON/IPANDX/IPANDA,ITIPL,ITIPL1,ITIPL2,IWEBL1
C BEG MAY 1998
      COMMON/EBEAMX/EBEAMR,EIEFF,FSAFE2,EFFLEN,EIGBM1
C END MAY 1998
      COMMON/EBEAXX/EIEFF0,EIEFFR,EIEFFX
C BEG DEC 1998
      COMMON/EBEARX/EBEAMZ,EIEFZ,EIGBMZ,EIEFZ0,EIEFFZ,EIEFFY,FSAFE3
C END DEC 1998
      COMMON/ISKNRD/IEFFSK
      COMMON/FSAFEB/FSAFEP(99)
      COMMON/PSTSTF/EKOISV,FMOD0,ALMOD0,FMMOD0,FNMOD0,FWAVE0
      COMMON/HATBUC/ICRIP1,ICRIP2,ICRIP3,ICRWN1,ICRWN2,ICRWN3
      COMMON/TEEBUC/ITIPL3,ICWEB3,IPOST(5,2),NPP(5,2),IBUCPP
      COMMON/WIDBUC/ITIPW,ICWEBW
      COMMON/WORIGL/WIMPL0(5),WIMPP(5)
      COMMON/FUNHAT/IFNHAT(5,2)
      COMMON/DISKKK/DISKNK
      COMMON/BLABUC/ITIPL4,IPOSTL(5,2),NPPL(5,2)
      DIMENSION EXMID(23,8),EYMID(23,8),EXYMID(23,8),EMAX(5,10)
      DIMENSION EALLST(5,10),FSTRN(5,2,5),GSTRN(5,2,5)
      DIMENSION EMARG(6,10),THERMX(6,5),THERMY(6,5),CRACK(99,5,2)
      DIMENSION CSINV(6,6),ETHERM(6),EPSLOD(6),CXSAVE(6,6,5)
C BEG JULY 1995
      DIMENSION EPSLDX(6)
C END JULY 1995
      DIMENSION ETHRMX(6,5),ETHRMY(6,5),EPSLDF(6)
      DIMENSION RESLT0(3,5,2),THERMS(6),ETHER0(6),EPSLD0(6)
C BEG OCT 1998
      COMMON/KNOCKX/WRESID(2),FKNOCK(10),NAPPL(3),EIGLCS(10),FKNOCX
      COMMON/KNOCKY/NLOC(10),ITUTOR,ILOOPS
      COMMON/FKNSRX/FKNSRG(10)
C END OCT 1998
      COMMON/FKNSTR/FKNMOD(10)
      COMMON/OPTVAR/IDV(50),ILV(50),IDLINK(50,5),IEV(50),JTERMS(50)
      COMMON/WORDSX/VARLEG(50),MARLEG(99),OBJLEG
C BEG MAY 2004
C     CHARACTER*12 VARLEG,MARLEG,OBJLEG
      CHARACTER*12 MARLEG,OBJLEG
      CHARACTER*16 VARLEG
C END MAY 2004
      DIMENSION EPSFXL(3,5,2),RESFXL(3,5,2),RESPRS(3,5,2),EAVEP(6)
      DIMENSION EPSLDB(3,5,2),RESLDB(3,5,2),EAVEPL(6)
      DIMENSION EPSPRS(3,5,2),RESPGL(3,5,2),EPSPGL(3,5,2)
      DIMENSION NXVARS(23)
      REAL NPB,MPB,NPBSAV,MPBSAV,N1,N2,N12,N1SAV,N2SAV,N12SAV,LENMOD
      REAL NXVAR,NYVAR,NXYVAR,NXFIX,NYFIX,NXYFIX,NAPPL,M0,KAPPA1,KAPPA2
      REAL NXPRES,NYPRES,NXAVEP,NXAVES,NXVARS
      COMMON/EDGCON/PEDG
      COMMON/INTSTP/ISTEP,NSTEPU
      DIMENSION CSBEND(50),CSWID(50),CSBNDR(50),CSWIDR(50),EAVEPR(6)
      COMMON/RNGWXX/WXXFLN,POPRNG
      COMMON/ATRNGS/ATRING
C BEG FEB 1996
      COMMON/GEOM6/IFAY(2),ITRTOT,IRESET,NLOADX,NSTEPS,WMAX,NCROSS,
     1       NOPLOT,KMAX,ILAYPL,XMXX,XMIN,YMXX,YMIN,N3DPLT,NOBJ,NSTRNS,
C BEG APR 1996
     1       NPLTST,NABSCI,IDIAG,ITRALL,IFAYT(2),IBEAM,IONEST,IMISCL(4)
C END APR 1996
C END FEB 1996
C BEG MAR 1996
      COMMON/IDISCX/IDISCR,FNNORM
      DIMENSION DSGS(200)
C END MAR 1996
C BEG JAN 1995
C BEG OCT 1995
C BEG MAR 1996
      COMMON/ISWWI/ISWWID,ISWLOC,ISWWIX,ISSKIP
C END MAR 1996
C END OCT 1995
C END JAN 1995
C BEG FEB 1995
      COMMON/CX110C/CX110(4),CX11R(4)
C END FEB 1995
      LOGICAL GENPRS,PWCON,PEDG,ELOG1,ELOG2,ELOG3,ATRING
      COMMON/WRWID/WRWIDE
      COMMON/IHOOOP/IHOOPS
      COMMON/   /WW(60000)
      COMMON/WLOCAX/POPISO
C BEG JAN 1995
      COMMON/WLOCAT/POPIST
C END JAN 1995
      COMMON/IWEAKX/IWEAK
      COMMON/ISOGR/ISOGRD,ISOANG
      COMMON/ISOGR2/JSTIFF
      COMMON/ISOGR3/ILISO(5,3)
      COMMON/IRFREX/IRFREE
      COMMON/RESULZ/PNX,PNY,PNXY
      COMMON/RESLTP/RPRES(9),RPRER(9),TOTPS,TOTPR,RSKNXP,RSKNYP   
      COMMON/LOADS6/RSEIG(3,5,3),RSFXL(3,5,3),RSPGL(3,5,3),RSFIX(3,5,3)
      COMMON/LOADS7/ESEIG(3,5,3),ESFXL(3,5,3),ESPGL(3,5,3),ESFIX(3,5,3)
      COMMON/LOADS8/RWEIG(3),RWFXL(3),RWPGL(3),RWFIX(3),RWTOT(3)
      COMMON/LOADS9/RSPRS(3,5,3),ESPRS(3,5,3),RSTOT(3,5,3),RSULT(3,5,3)
      COMMON/LODS10/ESTOT(3,5,3)
      CHARACTER*8 WRDSTR,WRDRNG,WRDISO
      COMMON/ISKPL/ISKIPL,IRMOD,IBLL,ICD7,ICD8,ICD9
C BEG MAR 2003
      COMMON/ISKPL2/ICD71,ICD81,ICD91,ICD10
C END MAR 2003
      COMMON/RADIMP/RADMOD,FNWAVX,EIGNOS,FNWNOS,RORIG,W0LOC,
     1              W0GLOB,WG1,WG2
      COMMON/RADIM2/WYYAMP,W0PAN,WYYGEN,WYYPAN,WYYLOC
C BEG DEC 2001
      COMMON/RADM13/WG1S,WYYGNS,WYYPNS,WYYLCS,RADNEW
      COMMON/RADM14/IICURX
C END DEC 2001
C23456789012345678901234567890123456789012345678901234567890123456789012
      COMMON/WXXP/WXX7(2),WXX8,WXX9,WYY7(2),WYY8,WYY9,WXY7(2),WXY8,WXY9,
     1            F7,F8,F9
      COMMON/WXXP2/WXX10,WYY10,WXY10
C BEG OCT 1996
      COMMON/WXXXP/WXXX7(2),WXXX8,WXXX9,WXXY7(2),WXXY8,WXXY9,
     1             WYYX7(2),WYYX8,WYYX9,WYYY7(2),WYYY8,WYYY9,
     1             WXXX10,WXXY10,WYYX10,WYYY10
C END OCT 1996
C BEG OCT 2001 (change name from EIGPAN to EIGPNX to avoid conflict)
      COMMON/EIGPNX/EIGLC0,EIGLC1,EIGSM0,EIGSM1,EIGAL0,EIGAL1
C END OCT 2001
      COMMON/MORSTB/TESTSS,TESTSR,CSS,CSR,MSS ,NSS ,MSR ,NSR
      COMMON/AA8/EIGSS,EIGSR,KWAVES(2,4)
      COMMON/ITESTX/ITEST,IAMPOV(4)
      DIMENSION CXNEW(6,6,5)
      COMMON/AMPL3/AMPLT3,AMPLT4
C BEG NOV 1995
      COMMON/JJLAST/JLAST,IHIAXL,IFIXMW
      COMMON/FNSTR/FNSTAR
C END NOV 1995
C BEG DEC 1995
      COMMON/FSLCSS/FSLCXS,FSLCYS,FSLCZS
      COMMON/IPANDY/IWEBL2
C END DEC 1995
C BEG OCT 1998
      COMMON/IFICTM/IFICT1,IFICT2,IFICT3,IFICT4,IFICT5,IFICT6,IFICT7,
     1              IFICT8,IFICT9,IFCT10
C END OCT 1998
C BEG FEB 1996
      COMMON/IGOTOX/ILOADX,ICASEX,IGOTO2(5,2),IABPX(5),IABTX(5)
      COMMON/IRESTX/IRESTY
      COMMON/PRESSX/PRESS(5)
      COMMON/SAVLOD/FNXS,FNYS,FNXYS,FNX0S,FNY0S,FNXY0S
      COMMON/SAVIAB/IABPS,IABTS
      COMMON/EIGITX/EIGITR(30)
C END FEB 1996
C BEG MAR 1998
C BEG APR 1998
C BEG JULY 1998
      COMMON/NSKPL/DNWAVE,DNWAV7,DNWAV8,DNWAV9,EIGVLX
C BEG NOV 2003
C     COMMON/ESKPL/EIGRTX(20)
      COMMON/ESKPL/EIGRTX(20),EIGRTY(20)
C END NOV 2003
C END JULY 1998
C END APR 1998
      COMMON/EIG789/EIG7X,EIG8X,EIG9X
C END MAR 1998
      COMMON/MSKPL/DMWAVE,DMWAV7,DMWAV8,DMWAV9
      COMMON/RADIM3/CSLP91,TLOC91,CSLOP9,TLOC9
      COMMON/RADM32/MLOC91,NLOC91,MLOC9,NLOC9
      COMMON/RADIM4/CSLP81,TLOC81,CSLOP8,TLOC8
      COMMON/RADM42/MLOC81,NLOC81,MLOC8,NLOC8
      COMMON/RADIM5/CSLP71,TLOC71,CSLOP7,TLOC7
      COMMON/RADM52/MLOC71,NLOC71,MLOC7,NLOC7
      COMMON/RADIM6/WYYAM2(4)
      COMMON/RADM62/WYYAMX(40,5,2),WYYAMY(40,5,2),WYYAMZ(40,5,2)
      COMMON/RADIM7/CSLP92,TLOC92,CSLP10,TLOC10,DNWV10,DMWV10
      COMMON/RADM72/MLOC92,NLOC92,MLOC10,NLOC10,IMLOC,ILAMHI
      COMMON/RADIM8/CSLP93,TLOC93,CONLAM,EILCSS,CONSET
      COMMON/RADM82/MLOC93,NLOC93
      COMMON/RADIM9/CSLP94,TLOC94,DMWAVA,DNWAVA
      COMMON/RADM94/FACM2X,FACM2Y,FACM2Z,FACM2W,W0SET
      COMMON/RADM92/MLOC94,NLOC94,NLOCAR,NLOCX(40,5,2)
C BEG JUNE 1995
      COMMON/RADM93/MLOCAR,MLOCX(40,5,2),IAMPLD(4),INDAMP,IW0SET
C END JUNE 1995
C BEG JULY 1995
      DIMENSION WYYAM3(4)
      COMMON/DELIM2/DELFCX(3,4),DELWBX(2),DELCUR(3)
      COMMON/DELCRX/DELCRC
      COMMON/DELIM3/GRDCUR(50,5,2),GRDSIG(5,2),DELCRS(2),GRDMAX(2)
      COMMON/NUMVRX/NUMVAR
      COMMON/BW2HAT/IBW2HT
      COMMON/ICHKRX/ICHKRG
      COMMON/BRATX/BRAT,FMSLOX
C END JULY 1995
C BEG AUG 1995
      COMMON/JJJTRX/JJJTOR
C END AUG 1995
      COMMON/RADM10/EPST1A,EPST2A,EPT12A
      COMMON/RADM11/INDDN(5,2),INDDM(5,2)
      DIMENSION AMPITR(20)
C BEG JAN 1994
      COMMON/DONNSW/IDONNL(10)
      COMMON/DONWVE/EIGN1(10),EIGN2(10),EIGN3(10),EIGN4(10)
      COMMON/RADM12/EIG91X,EIG92X,EIG81X,EIG71X
C END JAN 1994
C BEG AUG 1994
C BEG JUN 1996
      COMMON/XSANDW/ISANDW(4,2),ICORE(4,2)
      COMMON/ISANDR/ISAND,ISANDS
C        "F1" signifies "face sheet 1" (top or leftmost face sheet)
C        "F2" signifies "face sheet 2" (bottom or rightmost face sheet)
C  membrane loads in the face sheets...
      COMMON/USANDW/FNXF1(4,2),FNXF2(4,2),FNYF1(4,2),FNYF2(4,2),
     1              FNXYF1(4,2),FNXYF2(4,2)
      CHARACTER*4 WRD3
      DIMENSION ETHRMS(6),CSNEW(6,6)
      COMMON/ETCRXX/ETCURX(6),THCURX(6,5)
C END JUN 1996
C END AUG 1994
C23456789012345678901234567890123456789012345678901234567890123456789012
      CHARACTER*3 CN
      CHARACTER*7 CN2,CFACTB
      CHARACTER*15 CASEW
      CHARACTER*80 WORDB,WORDOB
      CHARACTER*72 ARGSTR
C BEG JUN 2004
C     IF (NPRT.GE.2) WRITE(8,'(/,/,/,A,1P,3E12.4)')
C    1' ********** ENTERING STRUCT: T(1),T(2),T(3)=',T(1),T(2),T(3) 
C END JUN 2004
C BEG JAN 2007
      IF (IMOD.EQ.0) WRDMOD = '  CURRENT DESIGN'
      IF (IMOD.EQ.1) WRDMOD = 'PERTURBED DESIGN'
      IF (NPRT.GE.0) THEN
       WRITE(IFILE,'(A)')' ****************************************'
       WRITE(IFILE,'(A,I2)')' ENTERING STRUCT. IMOD=',IMOD
       WRITE(IFILE,'(A,3I4,5X,A)')
     1  ' ITERATION NO., LOAD SET NO., SUBCASE NO. =',
     1    JJJ, ILOADS, ICASE, WRDMOD
       WRITE(IFILE,'(A)')' ****************************************'
      ENDIF
C END JAN 2007
C BEG MAR 2007
C BEG APR 2007
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG APR 2009
      IF (ITYPE.EQ.2.AND.NPRT.GE.0.AND.ICASE.EQ.1) THEN
C END APR 2009
        WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' The numbers of the references [ ] given in the CHAPTER',
     1' headings correspond to those listed at the end of the paper:',
     1' Bushnell, D.',
     1' "Optimization of an axially compressed ring and stringer',
     1' stiffened cylindrical shell with a general buckling modal',
     1' imperfection", AIAA Paper 2007-2216, 48th AIAA SDM Meeting,',
     1' Honolulu, Hawaii, April 2007'
C END MAR 2007
        WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' The overall structure of PANDA2 and its use are described in',
     1' the first PANDA2 paper, Ref.[1A], cited in the April 2007',
     1' paper just identified. Ref.[1A] is the following paper:',
     1' Bushnell, D.,',
     1' "PANDA2 - Program for minimum weight design of stiffened,',
     1' composite, locally buckled panels", COMPUTERS AND STRUCTURES,',
     1' Vol. 25, No. 4, pp 469-605, 1987'
C23456789012345678901234567890123456789012345678901234567890123456789012
        WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' Concepts such as "wide-column" buckling, "discretized module',
     1' model", "stringer pop-off", "constitutive matrices"',
     1' "reduction factor for transverse shear deformtion (t.s.d.)"',
     1' "smeared stiffeners", "neutral surface", "overall and local',
     1' static response to uniform pressure", "knockdown factors for',
     1' anisotropy and in-plane shear loading", "crippling of',
     1' stiffener parts", and "local postbuckling" are described',
     1' there, with many early PANDA2 examples provided.'
C
        WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' The string, "PANDA-type theory" often occurs. This refers to',
     1' the theory presented in Ref. [1B] of the April 2007 citation',
     1' listed first. Ref.[1B] contains the theory given in the paper:',
     1' Bushnell, D.,',
     1' "Theoretical basis of the PANDA computer program for',
     1' preliminary design of stiffened panels under combined in-',
     1' plane loads", COMPUTERS & STRUCTURES, v. 27, No. 4,',
     1' pp 541-563 (1987).'
C
        WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' The theory used for local postbuckling behavior appears in',
     1' Ref. [1C] of the April 2007 paper cited first (above).',
     1' Ref. [1C] is the following paper:',
     1' Bushnell, D.,',
     1' "Optimization of composite, stiffened, imperfect panels',
     1' under combined loads for service in the postbuckling',
     1' regime", Computer Methods in Applied Mechanics and',
     1' Engineering, Vol. 103 (1993) 43-114'
C
        WRITE(IFILE,'(/,A,/,A,/,A,/,/,A,/,A,/,A,/,A,/,A)')
     1' The theory used for imperfection sensitivity appears in',
     1' Refs. [1E] and [1D] of the first-cited paper above.',
     1' Refs. [1E] and [1D] are the following two papers:',
     1' Bushnell, D. and Bushnell, W. D.,',
     1' "Approximate method for the optimum design of ring and',
     1' stringer stiffened cylindrical panels and shells with',
     1' local, inter-ring, and general buckling modal imperfections"',
     1' Computers and Structures, Vol. 59, No. 3, pp 489-527 (1996)'
C23456789012345678901234567890123456789012345678901234567890123456789012
C
        WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,/,A,/,A,/,A,/,A,/,A)')
     1' Bushnell, D.,',
     1' "Recent enhancements to PANDA2" AIAA Paper 96-1337-CP,',
     1' Proc. of the AIAA 37th Structures, Structural Dynamics and',
     1' Materials Conference, pp 126-182, April, 1996.',
     1' The last paper cited also describes the "global" optimizer,',
     1' "SUPEROPT", implementation of Sanders shell equations into',
     1' PANDA2, implementation of the Arbocz theory for imperfection',
     1' sensitivity, implementation of isogrid geometry, and',
     1' implementation of various truss-core geometries, with examples.'
C
        WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' The theories used in PANDA2 for the analysis of sandwich',
     1' walls are given in Ref.[1F] of the first-cited paper above.',
     1' Ref. [1K] is the following paper:',
     1' Bushnell, D.,',
     1' "Optimum design via PANDA2 of composite sandwich panels with',
     1' honeycomb or foam cores", AIAA Paper 97-1142, Proc. 38th AIAA',
     1' Structures, Structural Dynamics and Materials Conference,',
     1' pp 2163-2202, April, 1997'
C
        WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' The "alternate" (double-trigonometric series expansion',
     1' buckling theory) and the discretized "skin"-ring module',
     1' model are described in Ref. [1G] of the first-cited paper.',
     1' Ref. [1G] is the following paper:',
     1' Bushnell, D., Jiang, H., and Knight, N.F.,',
     1' "Additional buckling solutions in PANDA2", Proceedings of the',
     1' 40th AIAA SDM Conference, AIAA Paper 99-1233, pp 302-345',
     1' April 1999'
C
        WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' Details of the strategy used in PANDA2 for accounting for',
     1' initial buckling modal imperfections are described and listed',
     1' in a table in Ref. [1K]. Ref. [1K] is the following paper:',
     1' Bushnell, D. and Rankin, C.C.,',
     1' "Difficulties in optimization of imperfect stiffened',
     1' cylindrical shells",',
     1' AIAA Paper 1943, 47th AIAA Structures, Structural Dynamics and',
     1' Materials Meeting, Newport RI, April 2006'
C
      ENDIF
C END APR 2007
C BEG OCT 2006
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG APR 2009
      IF (ITYPE.EQ.2.AND.NPRT.GE.1) THEN
C END APR 2009
C BEG FEB 2007
        WRITE(IFILE,'(/,/,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1 ' *************************************************************',
     1 ' ENTERING SUBROUTINE STRUCT',
     1 ' ****************    TABLE OF CONTENTS   *********************',
     1 ' CHAPTER 1  Compute the 6 x 6 constitutive matrices [C] for',
     1 '            individual model segments and various combinations',
     1 '            thereof (skin with smeared stiffener sets [1A]).',
     1 ' CHAPTER 2  Do PANDA-type [1B] general buckling analysis to',
     1 '            get Donnell factors for later use, if appropriate.',
     1 ' CHAPTER 3  Do various PANDA-type [1B] general buckling',
     1 '            analyses needed for later computation of effective',
     1 '            length of the panel. Compute the effective length.'
C BEG MAR 2007
        WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A)')
     1 ' CHAPTER NEW Compute wide-column buckling from discretized',
     1'            skin-stringer module model (Figs. 20b,c & 22b,c in',
     1'            [1A]) with only Nx (Ny=0, Nxy=0). The purpose is to',
     1'            obtain a knockdown factor, WIDKNK, for smearing',
     1'            the stringers in an inter-ring buckling mode'
C END MAR 2007
        WRITE(IFILE,'(A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1 ' CHAPTER 4  Compute axisymmetric prebuckling "hungry-horse"',
     1 '            state of the curved panel or cylindrical shell.',
     1 '            (See Ref.[1E]).',
     1 ' CHAPTER 5  Get static response of panel to normal pressure',
     1 '            [1A].',
     1 ' CHAPTER 6  Do PANDA-type [1B] general and inter-ring buckling',
     1 '            analyses to permit later computation of',
     1 '            amplification of panel bowing.',
     1 ' CHAPTER 7  Compute distribution of loads in panel module',
     1 '            skin-stringer segments, neglecting redistribution',
     1 '            due to initial buckling modal imperfections',
     1 '            (See Section 10 of [1A]).'
C23456789012345678901234567890123456789012345678901234567890123456789012
        WRITE(IFILE,
     1   '(A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1 ' CHAPTER 8  Do PANDA-type local, inter-ring, general buckling',
     1 '            analyses and PANDA-type stringer web and ring web',
     1 '            buckling analyses to get knockdown factors to',
     1 '            compensate for lack of in-plane shear Nxy loading',
     1 '            and anisotropy in discretized BOSOR4-type models.',
     1 '            (See Section 11 of [1A] and Item No. 81 in [1L]).',
     1 ' CHAPTER 9  Do BOSOR4-type "skin"-ring buckling analyses to',
     1 '            compute knockdown factor to compensate for',
     1 '            inherent unconservativeness of models with',
     1 '            smeared rings. (See Items 509, 511, 522, and',
     1 '            605 in [1L]; "skin"=skin+smeared stringers).',
     1 ' CHAPTER 10 Compute knockdown factors and prebuckling bending',
     1 '            associated with initial general, inter-ring, local',
     1 '            buckling modal imperfections. (See Ref.[1E]).'
        WRITE(IFILE,'(A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1 ' CHAPTER 10.1 Compute knockdown factor and prebuckling bending',
     1 '              associated with general buckling modal initial',
     1 '              imperfection. (See Sectons 13 and 14 and',
     1 '              Tables 9 and 10 of [1K] for a detailed example)',
     1 ' CHAPTER 10.2 Compute knockdown factor and prebuckling bending',
     1 '              associated with inter-ring buckling modal',
     1 '              initial imperfection.',
     1 ' CHAPTER 10.3 Compute knockdown factor and prebuckling bending',
     1 '              associated with local buckling modal initial',
     1 '              imperfection.',
     1 ' CHAPTER 10.4 Present a summary of imperfection sensitivity',
     1 '              results. (See Section 13 and Table 9 of [1K])'
C23456789012345678901234567890123456789012345678901234567890123456789012
        WRITE(IFILE,
     1          '(A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1 ' CHAPTER 11 Get change in stress resultants, Nx, Ny, Nxy in',
     1 '            various segments of the skin-stringer module',
     1 '            during prebuckling bending of the imperfect shell.', 
     1 '            Also, do PANDA-type [1B] local, inter-ring, gen-',
     1 '            eral buckling analyses and PANDA-type stringer web',
     1 '            and ring web buckling analyses to get knockdown',
     1 '            factors to compensate for the lack of in-plane',
     1 '            shear Nxy loading and anisotropy in discretized',
     1 '            BOSOR4-type models. (See Section 11 in [1A])',
     1 ' CHAPTER 12 List prebuckled state of the initially imperfect',
     1 '            and loaded and bent panel or shell. This section',
     1 '            includes the redistribution of Nx, Ny, Nxy in the',
     1 '            various segments of the stiffened shell structure.'
        WRITE(IFILE,
     1     '(A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1 ' CHAPTER 13 List prebuckling stress resultants, Nx, Ny, needed',
     1 '            for the discretized single-module skin-stringer',
     1 '            model used for local buckling and bending-torsion',
     1 '            buckling (BOSOR4-type model: see Figs. 18, 20,',
     1 '            22, 97, and 98 of [1A], for examples).',
     1 ' CHAPTER 14 Compute local buckling from BOSOR4-type',
     1 '            discretized skin-stringer single module model.',
     1 '            See Section 12.2 in [1A].',
     1 ' CHAPTER 15 Compute bending-torsion (low-m) buckling from',
     1 '            BOSOR4-type discretized skin-stringer single',
     1 '            module model. See Section 12.2 in [1A].',
     1 ' CHAPTER 16 Compute post-local buckling from the Koiter',
     1 '            theory given in Ref.[1C]. (Figs. 23, 24 in [1A]',
     1 '            and Fig. 6 in [1C]).'
C BEG MAR 2011
        WRITE(IFILE,'(A,/,A,/,A,/,A)')
     1 ' CHAPTER 17 Compute stresses in layers and at various',
     1 '            locations in skin-stringer module model, including',
     1 '            local post-buckling, if any. Compute stringer',
     1 '            popoff constraints [1A].SUBROUTINE STRTHK is used.'
        WRITE(IFILE,'(A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1 ' CHAPTER 18 Calculate the "mode jumping" margin. which is',
     1 '            identified by the following string:',
     1 '            "Hi-axial-wave post-post-buckling of module - 1".',
     1 '            Present summary of state of loaded imperfect panel',
     1 '            and give effective stiffnesses of possibly locally',
     1 '            postbuckled skin-stringer module. These effective',
     1 '            stiffnesses (Table 12 of Ref. [18]) are used later',
     1 '            for overall buckling and inter-ring buckling.',
     1 ' CHAPTER 19 Do wide-column inter-ring buckling analysis with',
     1 '            possibly locally postbuckled skin-stringer module',
     1 '            model. (See Fig. 20c of [1A]).'
C END MAR 2011
        WRITE(IFILE,'(A,/,A,/,A,/,A,/,A)')
     1 ' CHAPTER 20 Compute width-wise wide column buckling and',
     1 '            lateral-torsional buckling load factors from the',
     1 '            possibly locally postbuckled skin-stringer module',
     1 '            model (inter-ring buckling modes).',
     1 '            See panda2.news Item Numbers 379 and 381 in [1L].'
C BEG FEB 2009
        WRITE(IFILE,'(A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1 ' CHAPTER 20b Compute high-m buckling of single discretized',
     1 '            skin-stringer module (same model as used in',
     1 '            CHAPTER 14 except explored in the range of high',
     1 '            numbers of axial halfwaves). See panda2.news',
     1 '            Item Numbers 682 and 754.',
     1 ' CHAPTER 20c Compute buckling of a single discretized',
     1 '            skin-substringer module. See panda2.news Item 764.',
     1 '            The axial length of the module is equal to the',
     1 '            spacing of the subrings, and the width of the',
     1 '            module is equal to the spacing of the substringers.'
        WRITE(IFILE,'(A,/,A,/,A,/,A,/,A,/,A)')
     1 ' CHAPTER 21 Compute "skin"-ring buckling load factor for',
     1 '            computing knockdown to compensate for inherent',
     1 '            unconservativeness of smeared ring models.',
     1 '            (See bottom row in Fig. 30 of Ref.[1G]. Also see',
     1 '            panda2.news Items 509, 511, 522, 532, 605, 617',
     1 '            619, 632, 633, 676.'
C END FEB 2009
C23456789012345678901234567890123456789012345678901234567890123456789012
        WRITE(IFILE,'(A,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1 ' CHAPTER 22 Compute "skin"-ring buckling load factors for:',
     1 '            1. medium-n inter-ring buckling mode (See',
     1 '               rightmost three mode shapes in top row of',
     1 '               Fig. 30 of Ref.[1G]),',
     1 '            2. high-n inter-ring buckling mode (See rightmost',
     1 '               mode shape in middle row of Fig. 30, Ref.[1G]),',
     1 '            3. low-n inter-ring buckling mode (See leftmost',
     1 '               mode shape in top row of Fig. 30, Ref.[1G]).'
        WRITE(IFILE,'(A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1 ' CHAPTER 23 Compute stresses in layers and at various',
     1 '            locations in modules for both positive and',
     1 '            negative imperfection amplitudes from SUBROUTINE',
     1 '            STRCON (local postbuckling neglected).',
     1 ' CHAPTER 24 Present short summary of redistribution of stress',
     1 '            resultants, Nx, Ny, Nxy, caused by prebuckling',
     1 '            bending of an initially imperfect shell.',
     1 '            See Section 6.0 in [1K].',
     1 ' CHAPTER 25 Compute buckling load factors from PANDA-type',
     1 '            theory for the various segments of a stringer and',
     1 '            a ring. Typical buckling modes are displayed in',
     1 '            Figs. 5 and 6 of Ref.[1B].'
C
C BEG APR 2009
        WRITE(IFILE,'(A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1 ' CHAPTER 26 Compute local, inter-ring, general buckling load',
     1 '            factors from PANDA-type models [1B] and from',
     1 '            "alternative" (double-trigonometric series',
     1 '            expansion) models, Ref.[1G]. Also compute',
     1 '            sandwich wall behavior [1F], if applicable.',
     1 '            Also, compute buckling load factors appropriate',
     1 '            when substiffeners are present.'
C
        WRITE(IFILE,'(A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1 ' CHAPTER 26b Compute the ring web buckling load factor and',
     1 '            circumferential wavelength from cold-bending a',
     1 '            flat "hogged out" plate into a cylindrical panel',
     1 '            with cold-bending radius RCOLD from iterations.',
     1 '            This analysis is performed only for cylindrical',
     1 '            shells with INTERNAL rings with rectangular or',
     1 '            Tee-shaped cross sections. The entire shell must',
     1 '            be fabricated of the same isotropic material.',
     1 '            See Item No.790 in ...panda2/doc/panda2.news .'
C
        WRITE(IFILE,'(A,/,A,/,A)')
     1 ' CHAPTER 27 Compute the objective function (e.g. WEIGHT).',
     1 ' CHAPTER 28 Present design, loading, and margins for the',
     1 '            current load set and subcase. (See Table 6 in [18])'
C END APR 2009
C END FEB 2007
      ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
C
C     IF (JJJ.EQ.1) NPRT = 2
C
C ******************************************************
C
C
C
      ILONG = 0
C
C
C
C
C ******************************************************
C BEG NOV 1994
C     ISKIPL INITIALIZATION MOVED DOWN AFTER "IF (IMOD.EQ.0)..."
C END NOV 1994
C BEG FEB 1999
C BEG JUN 2004
      ABIG = AXIAL
      BBIG = CIRC
C END JUN 2004
      AR = ABS(R)
      RTEST = 10000.*SQRT(AXIAL**2 + CIRC**2)
      DIFF  = ABS(AR - RTEST)/AR
      IFLAT = 0
      IF (DIFF.LT.0.5) IFLAT = 1
      IF (IBEAM.EQ.1) IFLAT = 1
      PEDG = IFLAT.EQ.0
C END FEB 1999
C BEG DEC 2001
      IF (IFLAT.EQ.1) THEN
         IICURV = 0
         IIKOIT = 1
      ENDIF
C BEG APR 2007 (comment out the IIKOIT = 0)
C BEG JUN 2004
C     IF (KLAYER(1,1).NE.0) THEN
C        IIKOIT = 0
C        IQUICK = 1
C     ENDIF
C END JUN 2004
C END APR 2007
      IICURX = IICURV
C END DEC 2001
C BEG FEB 1996
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG NOV 2003
      ILABLY = 0
      RNGSPA = B(2)
C END NOV 2003
C BEG JUN 2004
      CURVSV = 0.
      CURFSV = 0.
C END JUN 2004
      ITESTY = 0
      IRESTY = 0
      ITESTB = 0
      NPRTS  = NPRT
C BEG DEC 1998
C     IF (IMOD.EQ.0.AND.JJJ.EQ.0) IGOTO2(ILOADS,ICASE) = 0
      IF (IMOD.EQ.0             ) IGOTO2(ILOADS,ICASE) = 0
C END DEC 1998
      IF (IMOD.EQ.0.AND.IGOTO2(ILOADS,ICASE).EQ.0) THEN
C        IF (ICASE.EQ.2.AND.IGOTO2(ILOADS,1).EQ.1) THEN
C           IABP  = IABPS
C           IABT  = IABTS
C           FNX   = FNXS
C           FNY   = FNYS
C           FNXY  = FNXYS
C           FNX0  = FNX0S
C           FNY0  = FNY0S
C           FNXY0 = FNXY0S
C        ENDIF
C BEG FEB 1999
C BEG JUN 1999
C BEG MAR 2009
C23456789012345678901234567890123456789012345678901234567890123456789012
         IF (NPRT.GE.2.OR.NPRTS.GE.2)
     1   WRITE(IFILE,'(/,A,/,A,3I5,1P,E12.4)')
     1 ' =============================================================',
     1 ' Just before LTESTB: ITESTB,IABP,IABT,Pressure P=',
     1                       ITESTB,IABP,IABT,P
         CALL LTESTB(P,PRESS(ILOADS),FNX,FNY,FNXY,FNX0,FNY0,FNXY0,IABT,
     1    IABP,PSAVE,IABTS,IABPS,FNXS,FNYS,FNXYS,FNX0S,FNY0S,FNXY0S,
     1    ITESTB,IFLAT,MX,MY,MXS,MYS)
         IF (NPRT.GE.2.OR.NPRTS.GE.2)
     1   WRITE(IFILE,'(A,3I5,1P,E12.4,/,A,/,A,/,A)')
     1 ' Just after  LTESTB: ITESTB,IABP,IABT,Pressure P=',
     1                       ITESTB,IABP,IABT,P,
     1 ' If ITESTB = 1 then PANDA2 computes some margins for',
     1 ' Load Set B acting by itself. The purpose of this strategy is',
     1 ' to make sure that Load Set B cannot cause buckling by itself.'
C END MAR 2009
C END JUN 1999
C END FEB 1999
         IF (ITESTB.EQ.1) THEN
            ICAR0  = 0
            ICAR   = 0
            ICONST = 0
            INUMTT = 0
C BEG MAR 2009 (next line commented out)
C           NPRT   = 0
C END MAR 2009
            CALL MOVER(0, 0,IPOINC,1,100)
         ENDIF
      ENDIF
 2222 CONTINUE
      IRESTY = 0
C END FEB 1996
C BEG MAR 1996
      FMLOCM = 1.0
      IF (IBEAM.EQ.1) FMLOCM = 0.5
C END MAR 1996
C BEG MAR 1998
      EIG7X = 1.
      EIG8X = 1.
      EIG9X = 1.
C END MAR 1998
      RADMOD = R
      RORIG  = R
      FNWAVX = 1.0
      EIGNOS = 0.0
      FNWNOS = 0.0
      IRMOD  = 0
      W0LOC = WIMPL0(ILOADS)
      W0GLOB= WIMPG
      WG1   = WIMPG1
      WG2   = WIMPG2
      W0PAN = WIMPP(ILOADS)
      IF (ISTIF(1).EQ.0) W0PAN = WIMPL0(ILOADS)
C BEG DEC 2004
      IEDGE = 0
      IF (ISTIF(1).EQ.3) IEDGE = 1
C END DEC 2004
C BEG OCT 1996
C BEG NOV 1996
      WMIDP  = 0.
      DELWSH = 0.
C END NOV 1996
      ISANDX = ISANDW(1,1).GT.1.AND.ISANDW(1,1).LT.NLAYER(1,1)
C BEG APR 1997
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG DEC 2003
      IF (NPRT.GT.-1.AND.ISANDX.AND.FSLOC.LT.0.95) 
C END DEC 2003
     1 WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/)')
     1' ******* WARNING ******** WARNING ******** WARNING ********',
     1' ******* WARNING ******** WARNING ******** WARNING ********',
     1' PANEL SKIN IS SANDWICH CONSTRUCTION AND FACTOR OF SAFETY FOR',
     1' LOCAL BUCKLING IS LESS THAN UNITY. PRELIMINARY COMPUTATIONS',
     1' USE REDUCED SKIN STIFFNESS. THIS MAY LEAD TO DESIGNS THAT ARE',
     1' TOO CONSERVATIVE. YOU ARE ADVISED TO SET THE FACTOR OF SAFETY',
     1' FOR LOCAL BUCKLING TO 1.0. IN OTHER WORDS, DO NOT ALLOW',
     1' SANDWICH WALLS TO BUCKLE. IT CAN LEAD TO DIFFICULTIES!',
     1' ******* END WARNING ***** END WARNING ***** END WARNING *****',
     1' ******* END WARNING ***** END WARNING ***** END WARNING *****'
C END APR 1997
C BEG JUN 2004
      IF (IMOD.EQ.0) CALL MOVER(0,0,ISKIPQ,1,10)
C END JUN 2004
C BEG FEB 2009
      CALL MOVER(0.,0,CXXSUB,1,180)
C END FEB 2009
      CALL MOVER(0.,0,PNXF1,1,1056)
      CALL MOVER(0.,0,QXXMAX,1,8)
      CALL MOVER(0.,0,QYYMAX,1,8)
      CALL MOVER(0.,0,WXXX7,1,20)
      CALL MOVER(0.,0,WDDVAR,1,184)
      CALL MOVER(0,0,MORCON,1,20)
      DELDUM = 0.
      WXXXGL = 0.
      WYYYGL = 0.
      WXXXGT = 0.
      IHICON = 50
      IF (ITYPE.EQ.1) IHICON = 98
C END OCT 1996
      WXX7(1) = 0.
      WXX7(2) = 0.
      WXX8 = 0.
      WXX9 = 0.
      WXX10= 0.
      WYY7(1) = 0.
      WYY7(2) = 0.
      WYY8 = 0.
      WYY9 = 0.
      WYY10= 0.
      WXY7(1) = 0.
      WXY7(2) = 0.
      WXY8 = 0.
      WXY9 = 0.
      WXY10= 0.
      F7 = 1.
      F8 = 1.
      F9 = 1.
      EILC82 = 0.
      INTGEN = 0
      INTRNG = 0
      INTLOC = 0
      CALL MOVER(0.,0,DELFCE,1,8)
      CALL MOVER(0.,0,DELISO,1,12)
      CALL MOVER(0.,0,DELSKN,1,12)
C BEG NOV 1995
      CALL MOVER(0.,0,NXVAR,1,552)
      CALL MOVER(0.,0,NXFIX,1,552)
C END NOV 1995
C BEG FEB 2009
      CALL MOVER(0.,0,NXVSUB,1,552)
      CALL MOVER(0.,0,NXFSUB,1,552)
C END FEB 2009
C BEG JUN 1996
C BEG NOV 1996
      CALL MOVER(0.,0,FNXF1,1,32)
C END NOV 1996
      CALL MOVER(0.,0,FNXYF1,1,16)
C END JUN 1996
C BEG OCT 1996
      CALL MOVER(0.,0,CRUSH,1,8)
      CALL MOVER(0.,0,QXMAX,1,8)
      CALL MOVER(0.,0,QYMAX,1,8)
      EIGAMG = 10.E+16
      EIGAMS = 10.E+16
      ICNBCK = 1
C BEG MAR 2007
      SHRFAC = 1.
      SMRFAC = 1.
C END MAR 2007
C BEG AUG 1998
      FNYAVE = 0.0
C END AUG 1998
C END OCT 1996
C BEG JUL 1999
      IQUICS = IQUICK
      IF (IMOD.EQ.1.AND.IQUCHG.EQ.1) IQUICK = 1
C END JUL 1999
C BEG NOV 2003
C BEG APR 2011
C     IF (IMOD.EQ.1) CALL MOVER(EIGRTY,0,EIGRTX,1,20)
      IF (IMOD.EQ.1) CALL MOVER(EIGRTY,1,EIGRTX,1,20)
C END APR 2011
C END NOV 2003
      IF (IMOD.EQ.0) THEN
C BEG NOV 2009
         WMIDA = 0.
         WMIDB = 0.
         WMIDT = 0.
         WMDTOT = 0.
C END NOV 2009
C BEG MAR 2007
         CALL MOVER(0.,0,ECCARR,1,4)
         FNCRIT = 0.
         EIEFF2 = 0.
         ECCN = 0.
         NVECX = 1
         WIDKNK = 1.
C END MAR 2007
C BEG JUN 2006
         CALL MOVER(0,0,IALTSK,1,6)
C END JUN 2006
C BEG JAN 2006
C  RNGFCT modifies the smeared ring knockdown factor
         RNGFCT = 1.0 
C  ICONSV = 1 for using ARBOCZ; ICONSV = 0 for not using ARBOCZ
C  ICONSV = 1 for more conservative knockdown for smearing stringers
C  ICONSV = 0 for less conservative knockdown for smearing stringers
C  ICONSV =-1 for less conservative knockdown for smearing stringers
C             for no knodkdown for smearing rings, and
C             for not using ARBOCZ
C        ICONSV = 1
C END JAN 2006
C BEG AUG 2006  (comment out the following line)
C        ICONSV = 0
C END AUG 2006
C BEG FEB 2006
         RNGKNZ = 1.0
         CALL MOVER(0,0,ISRMOD,1,10)
         NMINSR = 1000000 
         NMAXSR = 0
         ISRIDX = 0
C END FEB 2006
C BEG MAR 2005
         DNWAVX = 0.
C END MAR 2005
C BEG DEC 2004
         IF (ILOADS.EQ.1.AND.ICASE.EQ.1.AND.JJJ.EQ.0) THEN
            CALL MOVER(0.,0,EHILOW,1,300)
            CALL MOVER(0.,0,SLPRAT,1,300)
         ENDIF
C END DEC 2004
C BEG NOV 2003
         CALL MOVER(1.,0,EIGRTX,1,20)
         CALL MOVER(1.,0,EIGRTY,1,20)
         IFLT8A = 0
         IFLT7A = 0
         INTPRS = 0
         IBLADE(1) = 0
         IBLADE(2) = 0
         IBLDUM(1) = 0
         IBLDUM(2) = 0
C END NOV 2003
C BEG JUL 1999
         IQUCHG = 0
C END JUL 1999
C BEG NOV 1999
         RNGKNK = 1.
C END NOV 1999
C BEG AUG 2001
	 MGENQQ = 1
         NGENQQ = 2
         PACTUL = 0.
C END AUG 2001
C BEG OCT 1998
         NMINRG = 0
         NMAXRG = 0
C BEG NOV 2006
         IHILOC = 0
         MMAXHI = 0
         MMINHI = 0
         IYLOC9 = 0
C END NOV 2006
C BEG APR 2009
         IFCT13 = 0
         IFCT14 = 0
         IFCT15 = 0
C END APR 2009
C BEG FEB 2009
         MMAXSB = 0
         MMINSB = 0
         MCRSUB = 0
         IYLC10 = 0
         IFCT12 = 0
         ITIPL9 = 0
         IWEBL9 = 0
         IFLGL9 = 0
C END FEB 2009
         IYLOC = 0
         IYLOC2= 0
         IYLOC3= 0
         IYLOC4= 0
         IYLOC5= 0
         IYLOC6= 0
         IYLOC7= 0
         IYLOC8= 0
         IYLOCG= 0
         IYPLOC= 0
         IYPGEN= 0
         IYGEN = 0
         IYGEN2= 0
C END OCT 1998
C BEG AUG 1998
         INYAVE = 0
C BEG OCT 1998
         INYAVA = 0
         INYAVB = 0
         INYAVT = 0
C END OCT 1998
         IDISC0 = 0
C BEG NOV 2003
         IDISC1 = 0
C END NOV 2003
C END AUG 1998
C BEG OCT 1998
         IDMWAV(1) = 0
         IDMWAV(2) = 0
         IDMWAV(3) = 0
         IDNWAV(1) = 0
         IDNWAV(2) = 0
         IDNWAV(3) = 0
         FMDKD7 = 1.0
         FMDKD8 = 1.0
         FMDKD9 = 1.0
         FLTSL7 = 0.
         FLTSL8 = 0.
         FLTSL9 = 0.
C END OCT 1998
C BEG OCT 1996
C23456789012345678901234567890123456789012345678901234567890123456789012
         ILOOPS = 1
         DELTAN = 0.
         FIQYY = 0.
         IB2W2(1) = 0
         IF (ISTIF(1).EQ.4.AND.NSEGB5.EQ.6) IB2W2(1) = 1
         IF (B2(1).GT.0.9*B(1)) THEN
            B2(1) = 0.9*B(1)
            IF (IB2W2(1).EQ.1) W2(1) = B2(1)
C BEG JUL 1999
            IF (IB2W2(1).EQ.0) THEN
               DB2W2 = (B2(1)-W2(1))/B2(1)
               IF (DB2W2.LT.0.08) W2(1) = 0.90*B2(1)
            ENDIF
C END JUL 1999
            WRITE(IFILE,'(A,1P,2E12.4)')
     1    ' ILLEGAL HAT DIMENSIONS CORRECTED: NEW VALUES, B2(1),W2(1)=',
     1      B2(1),W2(1)
            DO 1201 I = 1,5
              ILETB2= INDEX(VARLEG(I),'B2(STR)')
              ILETW2= INDEX(VARLEG(I),'W2(STR)')
              IF (ILETB2.NE.0) VAR(I) = B2(1)
              IF (ILETW2.NE.0) VAR(I) = W2(1)
 1201       CONTINUE
         ENDIF
         FACAMG = 1.
         FACAMS = 1.
         VINKNK = 1.
C END OCT 1996
C BEG JUN 1996
         ISANDS = ISAND
C END JUN 1996
C BEG MAR 1996
         IDISCR = 0
         FNNORM = SQRT(FNX**2 + FNY**2 + FNXY**2)
C END MAR 1996
         IF (JJJ.GE.1) THEN
            NLOCX(JJJ,ILOADS,ICASE)=0
            MLOCX(JJJ,ILOADS,ICASE)=0
            WYYAMX(JJJ,ILOADS,ICASE)=0.
            WYYAMY(JJJ,ILOADS,ICASE)=0.
            WYYAMZ(JJJ,ILOADS,ICASE)=0.
         ENDIF
C BEG JULY 1997
         CALL MOVER(0,0,ILMB2,1,20)
         CALL MOVER(0,0,ILM34,1,4)
         CALL MOVER(0,0,ILM44,1,4)
         CALL MOVER(0,0,ILAM44,1,4)
         MTOR = 1
         DELTOR = 0.
         MTORP = 0
         CALL MOVER(0,0,MTORS,1,10)
         CALL MOVER(0.,0,ETORS,1,10)
C END JULY 1997
C BEG JUN 1998
         IF (ICASE.EQ.1) THEN
            MCASL1 = 0
            MCASS1 = 0
            DFNYPM = 0.
         ENDIF
         EIGRT7 = 1.0
         EIGMR7 = 1.0
         EIGRT8 = 1.0
         EIGRT8 = 1.0
         EIGMR8 = 1.0
         EIGRT9 = 1.0
         EIGMR9 = 1.0
C BEG OCT 2004
         EGRT10 = 1.0
         EGRT11 = 1.0
         EGRT12 = 1.0
         EGMR10 = 1.0
         EGMR11 = 1.0
         EGMR12 = 1.0
         CALL MOVER(0.,0,SPANDA,1,36)
         CALL MOVER(0 ,0,MPANDA,1,48)
C END OCT 2004
C END JUN 1998
C BEG AUG 1998
         ISIGNL = 0
         ISIGNG = 0
         ILOCAL = 0
         IGENRX = 0
C END AUG 1998
C BEG NOV 2003
         ISIGNS = 0
	 ISSSRX = 0
C END NOV 2003
         IF (JJJ.EQ.0) THEN
C BEG DEC 1993  (INDDN switch being set to unity from the start.
C                Therefore, negative dn will always be accepted
C                even if n = 3 circ. halfwaves. INDDM is never used.)
C           INDDN(ILOADS,ICASE) = 0
C           INDDM(ILOADS,ICASE) = 0
            INDDN(ILOADS,ICASE) = 1
            INDDM(ILOADS,ICASE) = 1
C END DEC 1993
         ENDIF
C BEG JAN 1994
C BEG MAR 1997
C  FOUR "MOVERs" MOVED DOWN AFTER "2 CONTINUE"
C END MAR 1997
C END JAN 1994
C BEG FEB 1996
C BEG MAR 1996
         CALL MOVER(0.,0,EIGITR,1,30)
C END MAR 1996
C END FEB 1996
C BEG MAR 1997
         DELWEB(1) = 0.
         DELWEB(2) = 0.
         CALL MOVER(0,0,ICUBIC,1,20)
         CALL MOVER(0,0,JCUBIC,1,20)
C END MAR 1997
C BEG APR 1998
         CALL MOVER(0,0,IARBOC,1,20)
C END APR 1998
C BEG OCT 1998
         CALL MOVER(0,0,NGLOB2,1,200)
         CALL MOVER(0,0,IRNMOD,1,10)
         CALL MOVER(0.,0,FNYYP,1,90)
         CALL MOVER(0.,0,FNYYPA,1,90)
         CALL MOVER(0.,0,PNXVAR,1,736)
         IRNIDX = 0
C END OCT 1998
         CALL MOVER(0,0,IAMPOV,1,4)
C BEG NOV 1994
         ISKIPL = 0
         ITIPLS = 0
         ITIPLX = 0
         NSAVET = 0
         NSAVEX = 0
C BEG OCT 1998
         NSAVEQ = 0
         WRATPQ = 0.
C END OCT 1998
         EIGSVY = 0.
         EIGSVX = 0.
         WRATPX = 0.
         WRATPS = 0.
         WIDLM0 = 100.
C END NOV 1994
C BEG AUG 1995
         ITIPLZ = 0
         NSAVEZ = 0
         EIGSVZ = 0.
         WRATPZ = 0.
C END AUG 1995
C BEG NOV 1995
C BEG JAN 1996
C        FNSTAR = 1.0
         FNSTAR = 0.5
         IFICT1 = 0
         IFICT2 = 0
         IFICT3 = 0
         IFICT4 = 0
         IFICT5 = 0
         IFICT6 = 0
C BEG MAR 1996
         IFICT7 = 0
C END MAR 1996
C END JAN 1996
C END NOV 1995
C BEG JULY 1995
         IBW2HT = 0
         B1EFF = B(1) - W2(1)
         ICHKRG = 0
         BRAT = B(2)/B(1)
C END JULY 1995
C BEG AUG 1995
         IF (JJJ.EQ.0) JJJTOR = 0
C END AUG 1995
         W0SET = 0.
         IW0SET= 0
         INDAMP = 1
         ICD7   = 0
         ICD8   = 0
         ICD9   = 0
         ICD91  = 0
         ICD81  = 0
         ICD71  = 0
C BEG JULY 1995
         ICD10 = 0
C END JULY 1995
         ILAMHI = 0
         IMLOC  = 1
C
C  IMLOC is a switch that determines whether or not general instability
C        load factors are to be saved corresponding to both low
C        and high numbers of axial halfwaves in the buckling mode. If
C        yes, then IMLOC = 0.  If IHIAXL and ILAMHI are both unity
C        (IHIAXL is a user-supplied index and ILAMHI, initially zero,
C        is possibly reset later), a constraint condition is set up by
C        means of which the general buckling mode with the high number
C        of axial halfwaves is forced to be at least 5 per cent higher
C        than that with the low number of axial halfwaves. As seen from
C        the coding that follows, in order for IMLOC to be set to zero,
C        the combined applied axial and hoop stress resultants, sqrt(Nx^2 
C        +Ny^2), must be greater than ten times the applied in-plane shear
C        resultant Nxy, the hoop resultant Ny must by greater than 1.9
C        times the axial resultant Nx, and both Nx and Ny must be
C        negative (compressive loading).
C
         IF (FNY.LT.0.0.AND.FNX.LT.0.0) THEN
            FNXFNY = SQRT(FNX**2 + FNY**2)
            IF (FNXFNY.GT.10.*ABS(FNXY)
     1        .AND.ABS(FNY).GT.1.9*ABS(FNX)) THEN
                 IMLOC = 0
            ENDIF
         ENDIF
         NOCONV=0
         IPANDA = 0
         EBEAMR = 1.0
         FSAFE2 = 1.0
         EIEFFR = 1.0
         EIEFFX = 1.0
C BEG DEC 1998
         EBEAMZ = 1.0
         EIEFFZ = 1.0
         EIEFFY = 1.0
         FSAFE3 = 1.0
C END DEC 1998
         ICWEBS = 0
         ITWICE = 0
         MLOCNS = 0
         MLCNS3 = 0
         WRWIDE = 0.
         IHOOPS = IHOOP
         ISWWID = 0
C BEG OCT 1995
         ISWWIX = 0
C END OCT 1995
         POPISO = 0.
C BEG JAN 1995
         ISWLOC = 0
C BEG MAR 1996
         ISSKIP = 0
C END MAR 1996
         POPIST = 0.
C BEG FEB 1995
         EKOISV = 10.
C END FEB 1995
C END JAN 1995
         IF (ICASE.EQ.1) IWEAK = 0
         IF (ITYPE.NE.1.AND.ITYPE.NE.2) IWEAK = 0
         JSTIFF = 1
         IF (ICASE.EQ.1.AND.JJJ.EQ.0
     1              .AND.ISTIF(1).NE.5.AND.ISTIF(2).NE.0) THEN
            IRFREE = 0
            DO 2095 ILOOP = 1,2
               IF (R.GE.0.) THEN
                  IF (ILOOP.EQ.1) THEN
                     WRDSTR = 'External'
                  ELSE
                     IF (INTEXT(ILOOP).EQ.0) THEN
                        WRDRNG = 'External'
                     ELSE
                        WRDRNG = 'Internal'
                     ENDIF
                  ENDIF
               ELSE
                  IF (ILOOP.EQ.1) THEN
                     WRDSTR = 'Internal'
                  ELSE
                     IF (INTEXT(ILOOP).EQ.0) THEN
                        WRDRNG = 'Internal'
                     ELSE
                        WRDRNG = 'External'
                     ENDIF
                  ENDIF
               ENDIF
 2095       CONTINUE
            IF (WRDSTR.NE.WRDRNG) IRFREE = 1
            IF (ISOGRD.EQ.1) IRFREE = 1
         ENDIF
         ITEST  = 0
         IBLL   = 0
         RMAX   = 10000.*SQRT(AXIAL**2 + CIRC**2)
         IF (IICURV.EQ.1) RMAX = R
         AR = ABS(R)
         RTEST = 10000.*SQRT(AXIAL**2 + CIRC**2)
         DIFF  = ABS(AR - RTEST)/AR
         IFLAT = 0
         IF (DIFF.LT.0.5) IFLAT = 1
C BEG MAR 1996
         IF (IBEAM.EQ.1) IFLAT = 1
C END MAR 1996
         IF (FNXY.EQ.0.0.AND.FNX.NE.0.0) FNXY = -0.005*FNX
C        IF (IFLAT.EQ.0.AND.ABS(FNX).LE.ABS(.05*FNXY))
C BEG JULY 1998
         XXYRAT = 0.05
         IF (IQUICK.EQ.1) XXYRAT = 0.0001
         IF (               ABS(FNX).LE.ABS(XXYRAT*FNXY))
     1      FNX = -XXYRAT*ABS(FNXY)
C END JULY 1998
         IF (IFLAT.EQ.0.AND.FNY.EQ.0.0.AND.FNX.NE.0.0) THEN
            FNY = -ABS(0.000001*FNX)
            P   = -(FNY+FNY0)/R
         ENDIF
C BEG NOV 1994
         IF (IFLAT.NE.0.AND.P.EQ.0.0.AND.FNY.LT.0.0) 
     1      P = 1.0E-10*ABS(FNY)
C END NOV 1994
C BEG JAN 1999
C        ATRING = IFLAT.EQ.0.AND.ISTIF(2).NE.0.AND.P.NE.0.0
         ATRING =                ISTIF(2).NE.0.AND.P.NE.0.0
C END JAN 1999
         PEDG = IFLAT.EQ.0
C BEG JUL 1999
C        IF (ITYPE.EQ.1.AND.JJJ.EQ.0) IFNHAT(ILOADS,ICASE) = 0
                                      IFNHAT(ILOADS,ICASE) = 0
C END JUL 1999
         IF (ISTIF(1).EQ.4) THEN
            DB2W2 = (B2(1)-W2(1))/B2(1)
            ADB2W2 = ABS(DB2W2)
            IF (NSEGB5.EQ.6.AND.ADB2W2.GT.0.0000001) THEN
C BEG SEPT 1994
               WRITE(IFILE,8010) W2(1),B2(1)
C END SEPT 1994
C23456789012345678901234567890123456789012345678901234567890123456789012
 8010          FORMAT(/' ******** FATAL ERROR **********',/,
     1       ' Illegal Hat geometry: In this case the width of the',/,
     1       ' skin under the hat (w2) must be equal to the width',/,
     1       ' of the stringer base (b2). Presently the values are:',/,
     1       '  Width of the panel skin under the hat, w2 =',1PE12.4,/,
     1       '  Width of the stringer base,            b2 =',1PE12.4,/,
     1       ' You must use DECIDE to link w2 to b2. RUN NOW ABORTS.',/,
     1       ' ******** FATAL ERROR *****************'/)
               CALL ERREX
            ENDIF
C BEG SEPT 1994
C BEG JUNE 1995
            IF (NSEGB5.EQ.8.AND.DB2W2.LT.0.08) THEN
C END JUNE 1995
               WRITE(IFILE,8012) W2(1),B2(1),DB2W2
 8012          FORMAT(/' ******** WARNING **********'/
     1       ' Illegal Hat geometry: In this case the width of the'/
     1       ' skin under the hat (w2) must be considerably less'/
     1       ' than the width of the stringer base (b2). (In fact,'/
C BEG JUNE 1995
     1       ' the quantity (b2-w2)/b2 must be greater than 0.08).'/
C END JUNE 1995
     1       ' Presently the values of w2, b2, and (b2-w2)/b2 are:'/
     1       '  Width of the panel skin under the hat, w2 =',1PE12.4/
     1       '  Width of the stringer base,            b2 =',1PE12.4/
     1       '                                 (b2-w2)/b2 =',1PE12.4/
C BEG JUNE 1995
C23456789012345678901234567890123456789012345678901234567890123456789012
     1       ' If the dimension b2 is approaching the stringer spacing'/
     1       ' b you may want to use the hat configuration for which'/
     1       ' b2 = w2 (corrugated sheet glued to flat sheet, see ITEM'/
     1       ' 178 in the file PANDA2.NEWS). Then this problem will'/
     1       ' not occur. If the hats remain far apart, then'/
C END JUNE 1995
     1       ' please use DECIDE to set up an inequality expression'/
     1       ' that forces w2 to be less than about 0.75*b2 in order'/
C BEG JUL 1999
     1       ' to avoid numerical difficulties. w2 is now reduced.'/
     1       ' ******** END WARNING *****************'/)
C END SEPT 1994
               W2(1) = 0.90*B2(1)
               WRITE(IFILE,'(A,1P,E12.4)')
     1       ' ILLEGAL HAT BASE WIDTH CORRECTED: NEW VALUE, W2(1)=',
     1         W2(1)
               DO 1202 I = 1,5
                 ILETW2= INDEX(VARLEG(I),'W2(STR)')
                 IF (ILETW2.NE.0) VAR(I) = W2(1)
 1202          CONTINUE
C END JUL 1999
            ENDIF
C BEG JUNE 1995
            B2OB = B2(1)/B(1)
C BEG AUG 1995
            IF (NSEGB5.EQ.8.AND.B2OB.GT.1.0) THEN
               WRITE(IFILE,8013) B2OB
 8013       FORMAT(/' ***** FATAL ERROR ******** FATAL ERROR ********'/
     1    ' ILLEGAL HAT GEOMETRY. THE STRINGER BASE WIDTH IS LARGER'/
     1    ' THAN THE STRINGER SPACING. PLEASE REFORMULATE THE DESIGN'/
     1    ' PROBLEM. READ THE NEXT MESSAGE CAREFULLY!'/
     1    '                   b2/b =',1PE12.4/
     1    ' ******* FATAL ERROR ******** FATAL ERROR ********')
               WRITE(IFILE,8014) B2OB
               CALL ERREX
            ENDIF
C
            IF (NSEGB5.EQ.8.AND.B2OB.GT.0.75) WRITE(IFILE,8014) B2OB
 8014       FORMAT(/' ******* NOTE ********* NOTE ********** NOTE ****'/
     1    ' The ratio of stringer base width b2 to stringer spacing b:'/
     1    '                   b2/b =',1PE12.4/
     1    ' If the dimension b2 tends to want to approach the stringer'/
     1    ' spacing b,  you may want to use the hat configuration for'/
     1    ' which b2=w2 (corrugated sheet glued to flat sheet). To do'/
     1    ' this you will have to run BEGIN again with new input data.'/
     1    ' If you set b2 and w2 equal to eachother in BEGIN, PANDA2'/
     1    ' then uses a discretized module model with fewer segments'/
     1    ' in it (6 segments) than your current model (8 segments).'/
     1    ' Please see ITEM 178 in the file PANDA2.NEWS for details.'/
     1    ' *******END NOTE ******END NOTE *******END NOTE *******'/)
C END JUNE 1995
         ENDIF
      ENDIF
      W0 = WIMPL
      WXXFLN = 0.
      POPRNG = 0.
C BEG JAN 1995
      CIRCS = CIRC
      DFNYP0 = 0.
      DFNYT0 = 0.
      WXXFLT = 0.
      POPRNT = 0.
      WRESID(1) = 0.
      WRESID(2) = 0.
C END JAN 1995
C     9 STATEMENTS MOVED UP AND DELETED HERE.
C     IABT = 0
      FMOM = 0.
      FNCIRC = 0.
      KAPPA1 = 0.
      KAPPA2 = 0.
      IBACK = 0
      IBACK2= 0
      KOUBCK = 0
      FAMPCS = 1.0
      FAMPCR = 1.0
      IF (ITYPE.EQ.3.AND.ISTEP.GT.1) THEN
         FAMPCS = CSWID(ISTEP-1)/CSBEND(ISTEP-1)
         IF (FAMPCS.GT.1.0) FAMPCS = 1.0
         IF (FAMPCS.LE.0.0) FAMPCS = 1.0
         IF (ISTIF(2).NE.0) THEN
            FAMPCR = CSWIDR(ISTEP-1)/CSBNDR(ISTEP-1)
            IF (FAMPCR.GT.1.0) FAMPCR = 1.0
            IF (FAMPCR.LE.0.0) FAMPCR = 1.0
         ENDIF
      ENDIF
      IF (IMOD.EQ.0) THEN
C BEG MAY 1998
         EIGBM1 = 10.E+16
         EIGBMZ = 10.E+16
C END MAY 1998
         ITIPL1 = 0
         ITIPL2 = 0
C BEG DEC 1995
         IWEBL2 = 0
C END DEC 1995
         ITIPL3 = 0
         ITIPL4 = 0
C BEG OCT 1998
         ITIPL5 = 0
         ITIPL6 = 0
         ITIPL7 = 0
         IWEBL5 = 0
         IWEBL6 = 0
         IWEBL7 = 0
         ILOWER = 0
         IHIGHR = 0
C END OCT 1998
         ITIPL  = 0
         IWEBL1 = 0
         ICWEB3 = 0
         ICRIP1 = 0
         ICRIP2 = 0
         ICRIP3 = 0
         ICRWN1 = 0
         ICRWN2 = 0
         ICRWN3 = 0
         ITIPW  = 0
         ICWEBW = 0
C BEG OCT 2004
         IFLG   = 0
         IFLGL  = 0
         IFLGL1 = 0
         IFLGL2 = 0
         IFLGL3 = 0
         IFLGL4 = 0
         IFLGL5 = 0
         IFLGL6 = 0
         IFLGL7 = 0
         IFLGLP = 0
         IFLGPP = 0
         IFLGT  = 0
         IFLGLW = 0
C END OCT 2004
C BEG JAN 2007
         AMPMD7 = 1.
         AMPMD8 = 1.
         AMPMD9 = 1.
         AMPM10 = 1.
C END JAN 2007
         IF (JJJ.EQ.0) IPOST(ILOADS,ICASE) = 1
         IF (JJJ.EQ.0) NPP(ILOADS,ICASE) = 0
         IF (JJJ.EQ.0) IPOSTL(ILOADS,ICASE) = 1
         IF (JJJ.EQ.0) NPPL(ILOADS,ICASE) = 0
      ENDIF
      INEUT = 0
      IF (IFREEX.EQ.1) INEUT = 1
      IF (ECC.EQ.0.)   INEUT = 1
      EIGTRY = 0.
      WPB1 = 0.
      NNODES = 11
      ICHANG = 0
      IICHAN = 0
      IPCIJ = 0
      IPFORC = 0
      IF (IMOD.EQ.0.AND.NPRT.GE.2) THEN
         IPCIJ = 1
         IPFORC= 1
      ENDIF
      PI = 3.1415927
    2 CONTINUE
C BEG NOV 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
      IF (NPRT.GE.2) WRITE(IFILE,'(/,/,A,/,A,1P,E12.4)')
     1' ********** IN SUBROUTINE STRUCT (after "2 CONTINUE)" *********',
     1' Constraints higher than CONMAX are excluded: CONMAX =',CONMAX
C END NOV 2003

C BEG MAR 1997
      IF (IMOD.EQ.0) THEN
         CALL MOVER(0.,0,EIGN1,1,10)
         CALL MOVER(0.,0,EIGN2,1,10)
         CALL MOVER(0.,0,EIGN3,1,10)
         CALL MOVER(0.,0,EIGN4,1,10)
         CALL MOVER(0,0,IDONNL,1,10)
C BEG DEC 2003
         INTPRS = 0
         IFLT8A = 0
         IFLT7A = 0
C END DEC 2003
C BEG OCT 1998
         IYPLOC = 0
C END OCT 1998
C BEG JULY 1997
         DISKNK = 1.55
      ENDIF
C     DISKNK = 1.55 (commented out here and moved into "IMOD.EQ.0" bracket.)
C END JULY 1997
C END MAR 1997
C BEG MAR 2005
      NYAVEP = 0.0
C END MAR 2005
      NXAVEP = 0.0
      LENMOD = 1.0
      IBOUND = FBOUND
      SHEARX = 0.
      SHEARY = 0.
      SHERRX = 0.
      SHERRY = 0.
C BEG JULY 1995
C     ITUTOR = 0
C END JULY 1995
      WDELKP = 0.
      IF (IMOD.EQ.0) THEN
         BOVRW2(1) = 10.
         BOVRW2(2) = 10.
         IF (W2(1).GT.0.) BOVRW2(1) = B(1)/W2(1)
         IF (W2(2).GT.0.) BOVRW2(2) = B(2)/W2(2)
         ISKIN = 0
         ITIP  = 0
         ICWEB = 0
         ITIPL = 0
         ICRIP = 0
         ISEGC = 0
         CALL MOVER(0.,0,CONSTR,1,99)
         CALL MOVER(0, 0,IADDB,1,99)
         CALL MOVER(0, 0,IPOINC,1,1500)
C BEG OCT 1996
         ITUTOR = 0
C END OCT 1996
C BEG MAY 1997
C        IF (JJJ.EQ.0.AND.IICHAN.EQ.0.AND.IPROMP.GT.1
         IF (             IICHAN.EQ.0.AND.IPROMP.GT.1
C END MAY 1997
     1               .AND.ILOADS.EQ.1.AND.ICASE.LE.2)
     1   ITUTOR = 1
      ENDIF
C
      IF (ITUTOR.EQ.1) THEN
         REWIND IFILE4
C        CALL DATUM(IFILE4,2,0,0,INT,REALL,CHARAC,IOUT,0,IPROMP)
      ENDIF
C
      KOIT = 0
      IKEEP = 0
C
C   establish multiplier, FKNOCK(10), for local buckling knockdown.
C   This multiplier is used in the BUCPAN1 library.
C     FKNOCK(10) = 1.0
C     IF (IMOD.EQ.1.AND.(B(1)/BSAVE).GT.1.0001) FKNOCK(10) = FKNMOD(7)
      IF (IMOD.EQ.0) THEN
         IBPRE     = FBPRE
C BEG FEB 2007
C        WRITE(8,'(\,A,I10,1P,E12.4)')
C    1 ' begin struct: IBPRE,FBPRE=',IBPRE,FBPRE
C END FEB 2007
         FKNOCK(1) =1.
         FKNOCK(2) =1.
         FKNOCK(3) =1.
         FKNOCK(4) =1.
         FKNOCK(5) =1.
         FKNOCK(6) =1.
         FKNOCK(7) =1.
         FKNOCK(8) =1.
         FKNOCK(9) =1.
         FKNOCK(10)=1.
         FKNMOD(7) =1.
C BEG AUG 1995
         FKNKOI(1) = 1.
         FKNKOI(2) = 1.
         FKNKOI(3) = 1.
C END AUG 1995
C BEG OCT 1998
         FKNSRG(1) = 1.
         FKNSRG(2) = 1.
         FKNSRG(3) = 1.
C END OCT 1998
         FKNKAL(1) = 1.
         FKNKAL(2) = 1.
         FKNKAL(3) = 1.
         FKNMLT = 1.
C END OCT 1998
C BEG NOV 2003
         FKNMLS = 1.
C END NOV 2003
         BSAVE = B(1)
         AL0 = 0.
         M0  = 0.
         FSQ = 0.
         F0  = 1.
         CASEW = 'PANEL MIDLENGTH'
C        IF (ICASE.EQ.2.AND.IBPREL.EQ.1) CASEW ='PANEL ENDS     '
         IF (ICASE.EQ.2) THEN
            CASEW ='PANEL ENDS     '
            IF (ATRING) CASEW ='AT RINGS       '
         ENDIF
         IF (NPRT.GE.1) WRITE(IFILE,3) JJJ, ILOADS, CASEW, IICHAN
    3    FORMAT(//' ***********************************************'/
     1            ' *****   DESIGN ITERATION NO.',I3,'  ***********'/
     1            ' *****           LOAD SET NO.',I3,'  ***********'/
     1            ' ***** STRESS AND BUCKLING STATE AT ',A15,'  ***'/
     1            ' ***** MATERIAL ITERATION NO.',I3,'  ***********'/)
C BEG JUL 1999
         IF (NPRT.GE.1) THEN
            IF (IMOD.EQ.0)
     1        TITLE = 'DIMENSIONS OF  CURRENT  DESIGN...'
            IF (IMOD.EQ.1)
     1        TITLE = 'DIMENSIONS OF PERTURBED DESIGN...'

C           write(IFILE,669) NVARB
C 669       format (/,'calling OUTVR2(---) with NVARB = ',I5,/)

            CALL OUTVR2(NVARB,VAR,WORDV,TITLE,IFILE,58,1,ISUB,1)

C           write(IFILE,670) NVARB
C 670       format (/,'returned from OUTVR2(---) with NVARB = ',I5,/)

         ENDIF
C END JUL 1999
         IF (IICHAN.GT.0) THEN
            WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A,/,A,/)')
     1' COMPOSITE LAYUP IS DAMAGED: MATL ITERATIONS ARE NEEDED BECAUSE',
     1' OF MICROCRACKING DUE TO TENSILE STRESSES NORMAL TO FIBERS.',
     1' THIS MAY BE CAUSED BY THERMAL CURING IF CURING TEMP.NE.0.',
     1' PLEASE READ ITEM 23 OF PANDA2.NEWS FOR DETAILS.',
     1' IF YOU WANT TO REGARD MICROCRACKING AS A STRUCTURAL FAILURE',
     1' RATHER THAN AS A MECHANISM THAT CHANGES THE 6 X 6 Cij MATRIX,',
     1' THEN INDICATE IN "BEGIN" THAT THE MATERIAL IS NOT "TAPE".'
         ENDIF
C BEG DEC 2003
         IF (JJJ.EQ.0.AND.NPRT.GE.1) WRITE(IFILE,2098)
 2098 FORMAT(/
     1' Get new constitutive matrices, C(i,j), static response'/
     1' to uniform normal pressure, distributions of resultants'/
     1' Nx, Ny, Nxy, in the skin and stiffener parts for Load Set A,'/
     1' Load Set B, curing, and other thermal effects, and knockdown'/
     1' factors for buckling modal imperfections....')
C END DEC 2003
C
      ENDIF
C
C     IF (ITUTOR.EQ.1.AND.ICASE.NE.2) THEN
C        CALL DATUM(IFILE4,4,0,0,INT,REALL,CHARAC,IOUT,0,IPROMP)
C        IF (ISTIF(1).NE.0)
C    1  CALL DATUM(IFILE4,ISTIF(1)+5,0,0,INT,REALL,CHARAC,IOUT,0,IPROMP)
C        CALL DATUM(IFILE4,10,0,0,INT,REALL,CHARAC,IOUT,0,IPROMP)
C        IF (IREDUC.NE.0)
C    1   CALL DATUM(IFILE4,11,0,0,INT,REALL,CHARAC,IOUT,0,IPROMP)
C     ENDIF
      NPRTCA = NPRT
      IF (ICASE.EQ.2) NPRTCA = 0
C
C ******************************************************************
C BEGIN DERIVATION OF CONSTITUTIVE LAWS FOR PANEL SEGMENTS AND FOR
C ENTIRE PANEL.  TEMPERATURE-DEPENDENT MATERIAL INCLUDED NOW.
C ******************************************************************
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG OCT 2006
      IF (NPRT.GE.1) WRITE(IFILE,'(/,/,/,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************',
     1' ************          CHAPTER 1              *****************',
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************'
      IF (NPRT.GE.0) WRITE(IFILE,'(A,I3,A)')
     1' **** CHAPTER  1: DESIGN PERTURBATION INDEX, IMOD=',IMOD,' *****'
      IF (NPRT.GE.1) WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A)')
     1 ' *************************************************************',
     1 ' CHAPTER 1  Compute the 6 x 6 constitutive matrices [C] for',
     1 '            individual model segments and various combinations',
     1 '            thereof (skin with smeared stiffener sets [1A]).',
     1 '            See Section 8 in [1A], Eq.(8.1) on p.495 of [1A].'
C END OCT 2006
C BEG DEC 2003
      IF (NPRT.GE.1) WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1'*** BEGIN SUBROUTINE GETCIJ (CONSTIT. LAW: SEGS AND SMEARED ***',
     1' See Section 8, pp 494-503 of Reference [1A]. First the 6 x 6',
     1' integrated constitutive coefficients Cij (Eq.8.1) and thermal',
     1' loading are found for each segment in the skin-stringer module',
     1' then for the skin-ring module, then for the skin with smeared',
     1' stringers only, then for the skin with smeared rings only,',
     1' and finally for the skin with both stringers and rings smeared.'
C END DEC 2003
      CALL GETCIJ(INTEXT,ITUTOR,IFILE,ISTIF,B,B2,H,W,W2,CX,CY,CS,
     1            ZPARTX,ZPARTY,THERMX,THERMY,THERMS,
     1            GTX,GTY,GTS,TEFF,CSINV,ETHRMX,ETHRMY,
     1            ICOCUR,ETHERM,CRACK,IFILE4,IPROMP,IOUT,NPRTCA,NSEG,
     1            FSTRN,GSTRN,CSN,CSWIDE,CSREDU,TBASE,IMOD,
     1            TEMP,FMULT,THSMRX,THSMRY,ETSMRX,ETSMRY,IBPRE,IQUICK,
     1            NNODES,IMTEMP,FSLOC,WIMPG,P,FSGEN)
      IF (NPRT.GE.0) WRITE(IFILE,*)
     1'**** END   SUBROUTINE GETCIJ (CONSTIT. LAW: SEGS AND SMEARED ***'
      IF (IMOD.EQ.0.AND.IICHAN.EQ.0) CALL MOVER(CX,1,CX0,1,180)
      IF (ITYPE.EQ.3)
     1   CSBEND(ISTEP) = CSREDU(4,4) - CSREDU(1,4)**2/CSREDU(1,1)
      IF (ITYPE.EQ.3.AND.ISTIF(2).NE.0)
     1   CSBNDR(ISTEP) = CSWIDE(4,4) - CSWIDE(1,4)**2/CSWIDE(1,1)
C BEG JUN 1996
      CALL MOVER(ETHERM,1,ETHRMS,1,6)
C END JUN 1996
C
C ******************************************************************
C END DERIVATION OF CONSTITUTIVE LAWS FOR PANEL SEGMENTS AND FOR
C ENTIRE PANEL.  TEMPERATURE-DEPENDENT MATERIAL INCLUDED NOW.
C ******************************************************************
C
C BEG FEB 1995
      IF (IMOD.EQ.0) THEN
         CX110(1) = CX(1,1,1)
         CX110(2) = CX(1,1,2)
         CX110(3) = CX(1,1,3)
         CX110(4) = CX(1,1,4)
      ENDIF
C END FEB 1995
C BEG JULY 2007
      IF (IFLAT.NE.0.AND.NPRT.GE.1) WRITE(IFILE,'(/,A,/,A,/,A,/,A)')
     1' *************************************************************',
     1' CHAPTER 2 (do PANDA-type [18] general buckling analysis to',
     1' get Donnell factors for later use, if appropriate) is',
     1' not executed because the panel is flat.'
C END JULY 2007
      IF (IFLAT.EQ.0) THEN
C BEG OCT 2006
      IF (NPRT.GE.1) WRITE(IFILE,'(/,/,/,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************',
     1' ************          CHAPTER 2              *****************',
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************'
      IF (NPRT.GE.0) WRITE(IFILE,'(A,I3,A)')
     1' **** CHAPTER  2: DESIGN PERTURBATION INDEX, IMOD=',IMOD,' *****'
      IF (NPRT.GE.1) WRITE(IFILE,'(/,A,/,A,/,A)')
     1 ' *************************************************************',
     1 ' CHAPTER 2  Do PANDA-type [1B] general buckling analysis to',
     1 '            get Donnell factors for later use, if appropriate.'
C END OCT 2006
C BEG NOV 2003
         IF (NPRT.GE.1) WRITE(IFILE,'(/,A,/,A)')
     1' ** BEGIN SUBROUTINE BUCPAN (GENERAL PANDA-TYPE BUCKL.) ***',
     1' PURPOSE IS TO GET DONNELL FACTORS FOR LATER USE IN SUB.DONELL.'
C END NOV 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
C
 9010    CONTINUE
         ILABEL=9010
         IF (NPRT.GE.1) WRITE(IFILE,'(A,I5,A,I2)')
     1   ' LABEL NO. IN STRUCT=',ILABEL,'; ITUTOR=',ITUTOR
C
C BEG MAR 2005
         CIRCSV = CIRC
         CIRC = 3.1415927*ABS(R)
C END MAR 2005
         CALL BUCPAN(IFILE,IMOD,JJJ,ICONST,CONSTR,WORDB,ISTIF,IREDUC, 
     1           KOITER,LENMOD,CONMAX,FSGEN,FSPAN,FSLOC,EIGGGG,1,IPOINC,
     1           INUMTT,FKNOCK,IGENRL,CSLOPE,EILOCL,MLOCAL,ISKIN,
     1           MSHEAR,NSHEAR,MNOSHR,NNOSHR,ITUTOR,IWIDE,IQUICK,
     1           FNX,FNY,FNXY,FNX0,FNY0,FNXY0,FNXP0,
     1           FNYP0,FNXYP0,FNXPL0,FNYPL0,FNXYPL,NLOCAL,ITIP,
     1           IABP,1,EPSLOD(4),RWBEIG,RWBTOT,ICASE,FSBSTR,1,TLOCAL,
C BEG NOV 2003
     1           0,0,0,9010,ICD7D,ICD8D,ICD9D,0,ILOADS,MORCON,NCASES,1)
C BEG MAR 2005
         CIRC = CIRCSV
C END MAR 2005
         IF (IRESTY.EQ.1) GO TO 2222
C END NOV 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
C        IF (NPRT.GE.3) THEN
         IF (NPRT.GE.2) THEN
            WRITE(IFILE,'(A,/,A,/,A,1PE12.4,A,1PE12.4,A,1PE12.4,A)')
     1    ' n = 2,3,4 eigenvalues used in calc. of Donnell factors for',
     1    ' buckling with 2 circumferential halfwaves over 180 deg.:',
     1    '  General buckling:',EIGN2(2),'(n=2);',EIGN3(2),'(n=3);',
     1      EIGN4(2),'(n=4)'
            IF (ISTIF(1).NE.0.AND.ISTIF(2).NE.0)
     1       WRITE(IFILE,'(A,1PE12.4,A,1PE12.4,A,1PE12.4,A)')
     1    '  Inter-ring buckling:',EIGN2(3),'(n=2);',EIGN3(3),'(n=3);',
     1      EIGN4(3),'(n=4)'
            WRITE(IFILE,'(A,/,A)')
     1    ' NOTE: The Donnell factor is NOT included in the above,',
     1    '       but IS included in the following computations.'
C BEG NOV 2003
            WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1    ' One or more of the n=2,3,4 eigenvalues above may be zero,',
     1    ' depending on the ratio of pi*r/(panel width).',
     1    ' Purpose of any non-zero n=2,3,4) eigenvalues is to help',
     1    ' later on in the computation of appropriate Donnell factors',
     1    ' for low-circ. wave buckling of models involving complete',
     1    ' cylindrical shells, such as are used for calculation of',
     1    ' imperfection sensitivity.'
C END NOV 2003
         ENDIF
         IF (NPRT.GE.0) WRITE(IFILE,*)
     1'*** END  SUBROUTINE BUCPAN (EIGENVALUES. PANDA-TYPE BUCKL.) ***'
      ENDIF
C  End of IFLAT.EQ.0 condition.
      CALL MOVER(1,0,IDONNL,1,10)
C
C*********************************************************************
C  DETERMINE MINIMUM KNOCKDOWN FACTOR, 1/DISKNK, TO BE USED WITH
C  BUCKLING LOAD FACTORS CALCULATED FROM PANDA-TYPE MODELS IN WHICH
C  STRINGERS HAVE BEEN SMEARED OUT.
C
C  DETERMINE THE EFFECTIVE LENGTH OF THE PANEL, EFFLEN.  EFFLEN  IS
C  UNITY IF THE PANEL IS SIMPLY SUPPORTED ON THE AXIALLY LOADED ENDS,
C  AND EFFLEN DEPENDS ON THE LOADING AND CURVATURE IF THE PANEL IS CLAMPED
C  THERE.
C*********************************************************************
C
      IBOUND = FBOUND
      IBPRE  = FBPRE
      IF (IMOD.EQ.0) THEN
         THEFF = SQRT(CSN(4,4)*12./CSN(2,2))
         BLL   = 2.73*SQRT(ABS(R)*THEFF)
         AMPLT3 = 1.0
         AMPLT4 = 1.0
         AXLONG = AXIAL
         BLL2   = BLL
C BEG SEP 1995
         IGENX = 0
         IF (ICASE.EQ.2) THEN
            IF (IFLAT.NE.0) IGENX = 2
            IF (ISTIF(2).NE.0) IGENX = 2
            IF (ISTIF(1).NE.0.AND.CX(4,4,1).LT.0.1*CX(4,4,5)) IGENX = 2
            IF (BLL.LT.0.3*AXIAL) IGENX = 2
         ENDIF
         IF (PEDG.AND.ISTIF(2).NE.0) THEN
C END SEP 1995
            AXLONG = B(2)
            CSWN44 = ABS(CSWIDE(4,4) - CSWIDE(1,4)**2/CSWIDE(1,1))
            THEFF2 = SQRT(CSWN44*12./CSWIDE(2,2))
            BLL2   = 2.73*SQRT(ABS(R)*THEFF2)
         ENDIF
C BEG JAN 1995
C BEG JUN 1998
C BEG DEC 2003
         IF (NPRT.GT.-1.AND.ICASE.EQ.2.AND.BLL2/B(2).LT.1.0)
C END DEC 2003
     1    WRITE(IFILE,1391) BLL2, B(2)
C23456789012345678901234567890123456789012345678901234567890123456789012
 1391    FORMAT(/' ******* NOTE ******** NOTE ********** NOTE ********'/
     1 ' Axial bending "boundary layer" length, BLL=',1PE12.4,', is'/
     1 ' less than the ring spacing,           B(2)=',1PE12.4,', so'/
     1 ' that it may be better locally to thicken the panel in the'/
     1 ' neighborhoods of the rings (or curved ends), rather than'/
     1 ' force the inter-ring properties to be uniform, as is done'/
     1 ' with PANDA2. Inspect carefully the stress and buckling'/
     1 ' constraints for both SUBCASE 1 (panel midlength or midbay)'/
     1 ' and SUBCASE 2 (at rings or at panel ends) to see if the'/
     1 ' constraints for SUBCASE 2 may be forcing the panel to be'/
     1 ' unnecessarily heavy in the midbay region. If they are, then'/
     1 ' read ITEM 175 in PANDA2.NEWS to see what to do to get a less'/
     1 ' conservative design.'/
     1 ' ******* END NOTE ******** END NOTE ******** END NOTE *******'/)
C END JUN 1998
C BEG JULY 1995
C        IF (IWIDE.EQ.0.AND.AXLONG.GT.(5.*BLL2)) IBLL = 1
         IF (AXLONG.GT.(2.*BLL2).AND.PEDG) IBLL = 1
C END JULY 1995
C END JAN 1995
         FBTEST = 0.
         EFFLEN = 1.0
         FSBLL  = 1.0
         FLDRAT = 1.0
C        FIRST, CALCULATE GENERAL INSTABILITY WITH ALL LOADS TO GET NUMBER
C        OF AXIAL WAVES IN THE GENERAL INSTABILITY MODE AND TO GET THE
C        GENERAL INSTABILITY LOAD FACTOR, EIGGG1 FOR USE IN CALCULATING
C        THE KNOCKDOWN FACTOR FOR SMEARING STIFFENERS.
         ISKNN = 0
         IF (FSLOC.LT.0.95.AND.IQUICK.EQ.0) ISKNN = 1
C BEG OCT 2006
      IF (NPRT.GE.1) WRITE(IFILE,'(/,/,/,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************',
     1' ************          CHAPTER 3              *****************',
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************'
      IF (NPRT.GE.0) WRITE(IFILE,'(A,I3,A)')
     1' **** CHAPTER  3: DESIGN PERTURBATION INDEX, IMOD=',IMOD,' *****'
      IF (NPRT.GE.1) WRITE(IFILE,'(/,A,/,A,/,A,/,A)')
     1 ' *************************************************************',
     1 ' CHAPTER 3  Do various PANDA-type [1B] general buckling',
     1 '            analyses needed for later computation of effective',
     1 '            length of the panel. Compute the effective length.'
C END OCT 2006
         IF (NPRT.GE.1) THEN
            WRITE(IFILE,'(/,A)')
     1' **** BEGIN SUBROUTINE BUCPAN (FOR EFFECTIVE LENGTH CALCS) *****'
            WRITE(IFILE,*)
     1' ****                     (KNOCKDOWN FOR SMEARED STRINGERS) ****'
C BEG NOV 2003
            WRITE(IFILE,'(A)')
     1' ***** SEE ITEMS 106 and 107 in ...panda2/doc/panda2.news *****'
C END NOV 2003
         ENDIF
 9020    CONTINUE
         ILABEL=9020
         IF (NPRT.GE.1) WRITE(IFILE,*) ' LABEL NO. IN STRUCT=',ILABEL
         CALL BUCPAN(IFILE,IMOD,JJJ,ICONST,CONSTR,WORDB,ISTIF,IREDUC,
     1       KOITER,1.0,CONMAX,FSGEN,FSPAN,FSLOC,EIGGG1,1,IPOINC,
     1       INUMTT,FKNOCK,IGENRL,CSLOPE,EILOCL,MLOCAL,ISKNN,
     1       MSHEAR,NSHEAR,MNOSHR,NNOSHR,ITUTOR,IWIDE,IQUICK,
     1       FNX,FNY,FNXY,FNX0,FNY0,FNXY0,0.,0.,0.,0.,0.,0.,NLOCAL,0,
     1       IABP,1,0.,RWBEIG,RWBTOT,ICASE,FSBSTR,0,TLOCAL,
C BEG NOV 2003
     1       0,0,0,9020,ICD7D,ICD8D,ICD9D,0,ILOADS,MORCON,NCASES,2)
C END NOV 2003
         IF (IRESTY.EQ.1) GO TO 2222
         IF (NPRT.GE.2) THEN
C23456789012345678901234567890123456789012345678901234567890123456789012
            WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A)')
     1    ' GENERAL BUCKLING LOAD FACTOR USED FOR CALCULATION OF THE',
     1    ' GENERAL INSTABILITY LOAD FACTOR EIGGG1, WHICH IS USED IN',
     1    ' THE FORMULA, KNOCKDOWN = 1.O + 0.55*EIGGG1/EIGGG3, WHERE',
     1   ' "KNOCKDOWN" IS USED TO REDUCE GENERAL AND PANEL INSTABILITY',
     1    ' BUCKLING LOAD FACTORS TO ACCOUNT FOR INHERENT UNCONSERVA-',
     1    ' TIVENESS IN SMEARING OUT STIFFENERS IN MODELS OF BUCKLING.'
            WRITE(IFILE,'(A,1PE12.4,A,I3,A,I3,A)')
     1          ' EIGGG1(M,N)=',EIGGG1,'(',MGEN1,',',NWIDPR,')'
            WRITE(IFILE,*) 
     1' **** END SUBROUTINE BUCPAN (AXIAL WAVENUMBER; EFF.LNGTH) ******'
            WRITE(IFILE,*)
     1' ****                   (KNOCKDOWN FOR SMEARED STRINGERS) ******'
         ENDIF
         MGENXX = MGEN1
         EIGGG4 = 10.E+15
C BEG JAN 1996
C        IF (ISTIF(1).NE.0.AND.ABS(FNXY).GT.0.05*ABS(FNX)) THEN
         IF (ABS(FNXY).GE.0.05*ABS(FNX)) THEN
C END JAN 1996
C           NEXT, CALCULATE GENERAL INSTABILITY WITH JUST SHEAR LOADS IN
C           ORDER TO GET GENERAL INSTABILITY LOAD FACTOR, EIGGG4, USED FOR
C           CALCULATION OF THE KNOCKDOWN FACTOR FOR SMEARING STRINGERS.
            IF (NPRT.GE.1) THEN
C BEG NOV 2003
               IF (NPRT.GE.0) WRITE(IFILE,'(/,A,/,A)')
     1' **** BEGIN SUB. BUCPAN (KNOCKDOWN FOR SMEARED STRINGERS) ****',
     1' **** In this execution of BUCPAN, only shear Nxy is non-zero.'
C END NOV 2003
            ENDIF
 9030       CONTINUE
            ILABEL=9030
            IF (NPRT.GE.1) WRITE(IFILE,*) ' LABEL NO. IN STRUCT=',ILABEL
            CALL BUCPAN(IFILE,IMOD,JJJ,ICONST,CONSTR,WORDB,ISTIF,
     1          IREDUC,KOITER,1.0,CONMAX,FSGEN,FSPAN,FSLOC,EIGGG4,1,
     1          IPOINC,INUMTT,FKNOCK,IGENRL,CSLOPE,EILOCL,MLOCAL,ISKNN,
     1          MSHEAR,NSHEAR,MNOSHR,NNOSHR,ITUTOR,IWIDE,IQUICK,
     1          0.,0.,FNXY,FNX0,FNY0,FNXY0,0.,0.,0.,0.,0.,0.,NLOCAL,0,
     1          IABP,1,0.,RWBEIG,RWBTOT,ICASE,FSBSTR,0,TLOCAL,0,0,
C BEG NOV 2003
     1          0,9030,ICD7D,ICD8D,ICD9D,0,ILOADS,MORCON,NCASES,3)
C END NOV 2003
            IF (IRESTY.EQ.1) GO TO 2222
            IF (NPRT.GE.2) THEN
C23456789012345678901234567890123456789012345678901234567890123456789012
               WRITE(IFILE,'(/,A,/,A,/,A)')
     1       ' GENERAL BUCKLING LOAD FACTOR USED FOR CALCULATION OF',
     1       ' EIGGG4, WHICH APPEARS IN THE FOLLOWING FORMULA:',
     1       ' 1/(SMEARED STRINGER KNOCKDOWN)=1.0+0.55*EIGGG1/EIGGG4.'
               WRITE(IFILE,'(A,1PE12.4,A,I3,A,I3,A)')
     1          ' EIGGG4(M,N)=',EIGGG4,'(',MGEN1,',',NWIDPR,')'
               WRITE(IFILE,*) 
     1' **** END SUB. BUCPAN (KNOCKDOWN FOR SMEARED STRINGERS) ****'
            ENDIF
         ENDIF
C
         EIGGG3 = 10.E+15
         IF (FNY.LT.0.0.OR.ABS(FNXY).GT.0.05*ABS(FNX)) THEN
C           NEXT, CALCULATE GENERAL INSTABILITY WITH JUST HOOP AND
C           SHEAR LOADS IN ORDER TO GET LAMBDAY AND TO GET THE
C           GENERAL INSTABILITY LOAD FACTOR, EIGGG3, USED FOR
C           CALCULATION OF THE EFFECTIVE LENGTH OF A CLAMPED PANEL.
            IF (NPRT.GE.1) THEN
C BEG NOV 2003
               IF (NPRT.GE.0) WRITE(IFILE,'(/,A,/,A)')
     1' **** BEGIN SUBROUTINE BUCPAN (FOR EFFECTIVE LENGTH CALCS) ****',
     1' **** In this execution of BUCPAN, Axial load Nx is set to 0.0'
C END NOV 2003
            ENDIF
 9040       CONTINUE
            ILABEL=9040
            IF (NPRT.GE.1) WRITE(IFILE,*) ' LABEL NO. IN STRUCT=',ILABEL
            CALL BUCPAN(IFILE,IMOD,JJJ,ICONST,CONSTR,WORDB,ISTIF,
     1          IREDUC,KOITER,1.0,CONMAX,FSGEN,FSPAN,FSLOC,EIGGG3,1,
     1          IPOINC,INUMTT,FKNOCK,IGENRL,CSLOPE,EILOCL,MLOCAL,ISKNN,
     1          MSHEAR,NSHEAR,MNOSHR,NNOSHR,ITUTOR,IWIDE,IQUICK,
     1          0.,FNY,FNXY,FNX0,FNY0,FNXY0,0.,0.,0.,0.,0.,0.,NLOCAL,0,
     1          IABP,1,0.,RWBEIG,RWBTOT,ICASE,FSBSTR,0,TLOCAL,0,0,
C BEG NOV 2003
     1          0,9040,ICD7D,ICD8D,ICD9D,0,ILOADS,MORCON,NCASES,4)
C END NOV 2003
            IF (IRESTY.EQ.1) GO TO 2222
C BEG NOV 2003
            IF (NPRT.GE.2) THEN
C END NOV 2003
               WRITE(IFILE,'(/,A,/,A)')
     1       ' GENERAL BUCKLING LOAD FACTOR USED FOR CALCULATION OF',
     1       ' LAMBDAY FOR EFFECTIVE LENGTH CALCULATION'
               WRITE(IFILE,'(A,1PE12.4,A,I3,A,I3,A)')
     1          ' LAMBDAY(M,N)=',EIGGG3,'(',MGEN1,',',NWIDPR,')'
               WRITE(IFILE,*) 
     1' **** END SUBROUTINE BUCPAN (LAMBDAY CALC.; EFF.LNGTH) *******'
            ENDIF
         ENDIF
C BEG NOV 1995
C   STATEMENTS WITH "CALL BUCPAN" FOR EIGGG2 ADDED HERE AND REMOVED
C   FROM BELOW. THEY ARE NEEDED NOW NOT ONLY FOR EFFECTIVE LENGTH
C   COMPUTATION OF CLAMPED PANELS BUT ALSO FOR COMPUTATION OF FNSTAR.
         EIGGG2 = 10.E+15
         IF (EIGGG3.GT.9.9E+15) EIGGG3 = 0.0000001*EIGGG2
         IF (FNX.LT.0.0) THEN
C           NEXT, CALCULATE GENERAL INSTABILITY WITH JUST AXIAL LOAD
C           IN ORDER TO GET LAMBDAX
C BEG NOV 2003
            IF (NPRT.GE.1) WRITE(IFILE,'(/,A,/,A)')
     1' **** BEGIN SUBROUTINE BUCPAN (LAMBDAX; EFFECTIVE LENGTH) ****',
     1' **** In this execution of BUCPAN, Ny and Nxy are set to 0.0'
C END NOV 2003
 9050       CONTINUE
            ILABEL=9050
            IF (NPRT.GE.1) WRITE(IFILE,*) 
     1                       ' LABEL NO. IN STRUCT=',ILABEL
            CALL BUCPAN(IFILE,IMOD,JJJ,ICONST,CONSTR,WORDB,ISTIF,
     1          IREDUC,KOITER,1.0,CONMAX,FSGEN,FSPAN,FSLOC,EIGGG2,1,
     1          IPOINC,INUMTT,FKNOCK,IGENRL,CSLOPE,EILOCL,MLOCAL,ISKNN,
     1          MSHEAR,NSHEAR,MNOSHR,NNOSHR,ITUTOR,IWIDE,IQUICK,
     1          FNX,0.,0.,FNX0,FNY0,FNXY0,0.,0.,0.,0.,0.,0.,NLOCAL,0,
     1          IABP,1,0.,RWBEIG,RWBTOT,ICASE,FSBSTR,0,TLOCAL,0,0,
C BEG NOV 2003
     1          0,9050,ICD7D,ICD8D,ICD9D,0,ILOADS,MORCON,NCASES,5)
C END NOV 2003
            IF (IRESTY.EQ.1) GO TO 2222
C BEG NOV 2003
            IF (NPRT.GE.2) THEN
C END NOV 2003
               WRITE(IFILE,'(/,A,/,A)')
     1        ' GENERAL BUCKLING LOAD FACTOR USED FOR CALCULATION OF',
     1          ' LAMBDAX FOR EFFECTIVE LENGTH CALCULATION.'
               WRITE(IFILE,'(A,1PE12.4,A,I3,A,I3,A)')
     1          ' LAMBDAX(M,N)=',EIGGG2,'(',MGEN1,',',NWIDPR,')'
               WRITE(IFILE,*) 
     1' **** END SUBROUTINE BUCPAN (LAMBDAX CALC.; EFF.LNGTH) *******'
            ENDIF
C BEG JAN 1996
C           IF (EIGGG4.NE.0.)
C    1          FNSTAR = 0.3*(0.2*EIGGG2/(0.8*EIGGG4)) + 0.7
C           IF (FNSTAR.LT.0.0) FNSTAR = 1.0
C           IF (FNSTAR.GT.1.0) FNSTAR = 1.0
            FNSTAR = 0.5
C23456789012345678901234567890123456789012345678901234567890123456789012
C           IF (NPRT.GE.2)
C    1       WRITE(IFILE,*)' EIGGG2,EIGGG4,FNSTAR=',EIGGG2,EIGGG4,FNSTAR
C END JAN 1996
         ENDIF
C END NOV 1995
         DISKNK = 1.0 + 0.55*EIGGG1/EIGGG4
         IF (DISKNK.GT.1.55) DISKNK = 1.55
         IF (DISKNK.LT.1.0)  DISKNK = 1.0
         IF (ISTIF(1).EQ.0)  DISKNK = 1.0
         PDISKN = 1./DISKNK
         IF (NPRT.GE.1) WRITE(IFILE,*)
     1 ' MINIMUM KNOCKDOWN FACTOR USED WITH SMEARED STIFFENER MODELS=',
     1   PDISKN
C BEG NOV 2003
         IF (NPRT.GE.1) WRITE(IFILE,*)
     1 ' THIS KNOCKDOWN FACTOR WILL PROBABLY BE CHANGED LATER BY'
         IF (NPRT.GE.1) WRITE(IFILE,*)
     1 ' EITHER SUBOUTINE EIGKNK OR SUBROUTINE EIGMOD OR BY BOTH.'
C END NOV 2003
C
C BEG MAR 2007
         FAX = 1.0
         FAY = 1.0
         COEFX = 1.5 
         COEFX1 = 1.5 
         COEFX2 = 2.05 
         CXXX   = 3.85 
C        IF (IBPRE.GE.1.OR.IBOUND.EQ.1) THEN
         IF (              IBOUND.EQ.1) THEN
C END MAR 2007
            FSBLL = 1.0
            FSWIDE = 1.0
            IF (IBOUND.EQ.1) THEN
               FSHFCT = 1.0 - EIGGG1/EIGGG3
               IF (FSHFCT.LT.0.0) FSHFCT = 0.0
               IF (FSHFCT.GT.1.0) FSHFCT = 1.0
               FSBLL = 0.5*(FSHFCT + 1.0)
C              IF (IWIDE.EQ.1.AND.ISTIF(2).EQ.0) FSWIDE = 100000.
            ENDIF
            BLLFSB = BLL*FSBLL*FSWIDE
            IF (AXIAL.GT.(3.*BLLFSB)) GO TO 111
            FBTEST = 1.0
            IF (AXIAL.GT.BLLFSB) FBTEST =-0.5*(AXIAL/BLLFSB) +1.5
            IF (MGENXX.GT.2) GO TO 111
C BEG NOV 1995
C   STATEMENTS WITH "CALL BUCPAN" FOR EIGGG2 REMOVED FROM HERE AND
C   MOVED UP. THEY ARE NEEDED NOW NOT ONLY FOR EFFECTIVE WIDTH
C   COMPUTATION BUT ALSO FOR COMPUTATION OF FNSTAR.
C END NOV 1995
C
C        NEXT, DETERMINE THE INTERCEPTS, FAX AND FAY, OF THE LOAD
C        FACTOR INTERACTION CURVE (CURVE FOR RATIO OF BUCKLING OF
C        CLAMPED/SIMPLY SUPPORTED AXIALLY LOADED EDGES V. IN-PLANE
C        LOAD RATIO (LAMBDAX/LAMBDAY)
C
C BEG FEB 1998
            CXXX = 3.85
C END FEB 1998
            FAX = (3.85-1.)*FBTEST + 1.
C           FAY = (1.6 -1.)*FBTEST + 1.
C           FAY = (2.05 -1.)*FBTEST + 1.
            EIGRAX = EIGGG3/EIGGG4
            COEFX1= 1.5
            IF (ISTIF(1).NE.0) COEFX1 = 1.0
            COEFX2 = 2.05
            COEFX = COEFX1
            IF (EIGRAX.GT.0.0.AND.EIGRAX.LT.1.0)
     1         COEFX = COEFX1*EIGRAX + COEFX2*(1.-EIGRAX)
            FAY = (COEFX -1.)*FBTEST + 1.
            IF (MGENXX.EQ.2) THEN
C BEG FEB 1998
               CXXX = 1.93
C END FEB 1998
               FAX = (1.93-1.)*FBTEST + 1.
C              FAY = (1.25-1.)*FBTEST + 1.
C              FAY = (1.60-1.)*FBTEST + 1.
               COEFX1= 1.25
               IF (ISTIF(1).NE.0) COEFX1 = 1.00
               COEFX2= 1.60
               COEFX = COEFX1
               IF (EIGRAX.GT.0.0.AND.EIGRAX.LT.1.0)
     1            COEFX = COEFX1*EIGRAX + COEFX2*(1.-EIGRAX)
               FAY = (COEFX -1.)*FBTEST + 1.
            ENDIF
C
C    STRAIGHT LINE INTERACTION:
C           FLDRAT =
C    1       FAY*SQRT(1.+(EIGGG2/EIGGG3)**2)/(EIGGG2/EIGGG3 +FAY/FAX)
C           IF (FLDRAT.LT.1.) FLDRAT = 1.
C
C    ELLIPSE INTERACTION:
            FAXY = EIGGG2/EIGGG3
            FLDRAT = SQRT((1. + FAXY**2)/(1./FAX**2 + FAXY**2/FAY**2))
C
C           EFFLEN = 1.0 -(1.0 - 1.0/SQRT(3.85))*FXTEST*FBTEST
            EFFLEN = 1./SQRT(FLDRAT)
            IF (EFFLEN.GT.1.0) EFFLEN = 1.0
  111       CONTINUE
C BEG JULY 1997
            IF (ISTIF(1).EQ.2) EFFLEN = 1.0
C END JULY 1997
            IF (JJJ.EQ.0.AND.NPRT.GE.1) THEN
C BEG MAR 2007
              IF (.NOT. PEDG) WRITE(IFILE,114) IBPRE,IBOUND
  114         FORMAT(/
     1 ' Prebuckling end conditions: (0=simple support, 1=clamped):'I5/
     1 '  Stability  end conditions: (0=simple support, 1=clamped):'I5)
              IF (PEDG) WRITE(IFILE,'(/,A,I5,/,A,I5)')
     1 ' Prebuckling end conditions: (0=bending incl., 2=membrane):',
     1   IBPRE,
     1 ' Stability  end conditions: (0=simple support, 1=clamped):',
     1   IBOUND
C END MAR 2007
              IF (IBOUND.EQ.1) THEN
               WRITE(IFILE,112) 
C BEG FEB 1998
               WRITE(IFILE,113)
     1                      FLDRAT,EFFLEN,FBTEST,AXIAL,BLL,FSBLL,MGENXX
               WRITE(IFILE,1132)
     1                      EIGGG1,EIGGG2,EIGGG3,EIGGG4,COEFX,COEFX1,
     1                      COEFX2,FAX,CXXX,FAY
              ENDIF
            ENDIF
C      End of JJJ.EQ.0.AND.NPRT.GE.1 condition.
  112    FORMAT(/' If the panel is clamped along the edges where the'/
     1 ' axial load is applied, a factor, EFFLEN, for'/
     1 ' the effective axial length of an equivalent simply-supported'/
     1 ' panel must be calculated, where'/
     1 '      (Effective Axial Length = EFFLEN*AXIAL).'/
     1 ' The factor, EFFLEN, depends on the in-plane loading'/
     1 ' combination and on the ratio of the axial length of the'/
     1 ' panel, AXIAL,  to the axial "boundary layer" length, BLL,'/
     1 ' modified by FSBLL, a factor that depends on the in-plane'/
     1 ' loading combination, Nx, Ny, Nxy. Significant quantities in'/
     1 ' the computation of "effective axial length" follow:'/)
C
  113    FORMAT(
     1 ' FLDRAT = (buckling: clamped)/(buckling: s.s.)      =',1PE12.4/
     1 ' EFFLEN = 1./SQRT(FLDRAT)                           =',1PE12.4/
     1 '  if (AXIAL.LE.BLL*FSBLL)   FBTEST= 1.0'/
     1 '  if (AXIAL.GT.BLL*FSBLL)   FBTEST=-0.5*(AXIAL/BLL*FSBLL)+1.5'/
     1 '  if (AXIAL.GT.3*BLL*FSBLL) FBTEST= 0.0, where'/
     1 ' FBTEST = factor for boundary layer length effect   =',1PE12.4/
     1 ' AXIAL  = axial length of the panel                 =',1PE12.4/
     1 ' BLL = 2.73*SQRT[ABS(R)*SQRT(CS(4,4)*12./CS(2,2))]  =',1PE12.4/
     1 ' FSBLL= 0.5*(ABS(1-EIGGG1/EIGGG3) + 1.)             =',1PE12.4/
     1 ' MGENXX = no. of axial halfwaves in general buckling mode=',I4)
 1132    FORMAT(
     1 ' EIGGG1=general buckling load factor with Nx,Ny,Nxy =',1PE12.4/
     1 ' EIGGG2=general buckling load factor with Nx  only  =',1PE12.4/
     1 ' EIGGG3=general buckling load factor with Ny,Nxy    =',1PE12.4/
     1 ' EIGGG4=general buckling load factor with Nxy only  =',1PE12.4/
     1 ' COEFX=COEFX1*EIGGG3/EIGGG4+COEFX2*(1-EIGGG3/EIGGG4)=',1PE12.4/
     1' in which COEFX1 and COEFX2 (from STAGS trials) are  ',1P2E12.4/
     1 ' Buckling(clamped)/buckling(s.s.) for pure axial load Nx'/
     1 ' is given by: FAX = (c - 1.)*FBTEST + 1.        FAX =',1PE12.4/
     1 ' in which the constant c (from STAGS trials),     c =',1PE12.4/
     1 ' Buckling(clamped)/buckling(s.s.) for (Ny+Nxy) only (Nx=0)'/
     1 ' is given by: FAY = (COEFX-1.)*FBTEST + 1.      FAY =',1PE12.4/
     1 ' The ratio, FLDRAT, printed above, is determined with the'/
     1 ' assumption that (Nx/Nxo)**2 + [(Ny+Nxy)/(Ny+Nxy)o]**2 = 1.0'/
     1 ' SEE ITEM 400 in ...panda2/doc/panda2.news for details.'/)
C END FEB 1998               
         ENDIF
C   End of IBOUND.EQ.1 condition.
      ENDIF
C  End of IMOD.EQ.0 condition.
      IBOUND = FBOUND
      LENMOD = 1.0
      IF (IBOUND.EQ.1) LENMOD = EFFLEN
      PRELEN = 1.0
      IF (IBPRE.GE.1) PRELEN = EFFLEN
C BEG APR 2007
      IF (NPRT.GE.0)
     1 WRITE(IFILE,'(/,A,1P,E12.4,/,A,1P,E12.4,/,A,A,1P,E12.4)')
     1 ' User-specified axial length of the panel, AXIAL=',AXIAL,
     1 ' Computed factor to modify the length, AXIAL: LENMOD=',LENMOD,
     1 ' Axial length of "equivalent" simply-supported panel,',
     1 ' LENMOD*AXIAL=',LENMOD*AXIAL
C END APR 2007
C
C***********************************************************************
C END DERIVATION OF EFFECTVE LENGTH OF PANEL (IF THE PANEL IS CLAMPED)
C***********************************************************************
C
C BEG MAR 2007
C
C **********************************************************************
C NEXT COMPUTE KNOCKDOWN FACTOR, WIDKNK, TO ACCOUNT FOR T.S.D. AND
C SMEARED STRINGERS IN AN INTER-RING SKIN-STRINGER MODULE. IN THIS
C SECTION "WIDE COLUMN' BUCKLING IS COMPUTED FROM A DISCRETIZED
C SKIN-STRINGER MODULE WITH ONLY AXIAL LOAD, FNX, APPLIED TO THE PANEL
C AND NO LOAD SET B AND NO PREBUCKLING DEFORMATION.
C **********************************************************************
C BEG JULY 2007
      IF (NPRT.GE.1) THEN
      IF (IMOD.NE.0.OR.ISTIF(1).EQ.0.OR.ISTIF(1).EQ.5.OR.ITESTB.NE.0
     1 .OR.FNX.GE.0.0.OR.ISOGRD.NE.0.OR.IBEAM.NE.0)
     1  WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A,/,A)') 
     1' *************************************************************',
     1' CHAPTER NEW (compute a knockdown factor to compensate for',
     1' the inherent unconservativeness of smearing stringers from',
     1' a wide-column discretized skin-stringer model) is not executed',
     1' because:',
     1' (IMOD.NE.0.OR.ISTIF(1).EQ.0.OR.ISTIF(1).EQ.5.OR.ITESTB.NE.0',
     1'.OR.FNX.GE.0.0.OR.ISOGRD.NE.0.OR.IBEAM.NE.0)'
      ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
C END JULY 2007
      IF (IMOD.EQ.0.AND.ISTIF(1).NE.0.AND.ISTIF(1).NE.5.AND.ITESTB.EQ.0
     1   .AND.FNX.LT.0.0.AND.ISOGRD.EQ.0.AND.IBEAM.EQ.0) THEN 
C
       IFX = 1
       IF (NPRT.LE.0) IFX = 0
C
       IF (NPRT.GE.1) WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A)')
     1 ' *************************************************************',
     1' CHAPTER NEW Compute wide-column buckling from discretized',
     1'            skin-stringer module model (Figs. 20b,c & 22b,c in',
     1'            [1A]) with only Nx (Ny=0, Nxy=0). The purpose is to',
     1'            obtain a knockdown factor, WIDKNK, for smearing',
     1'            the stringers in an inter-ring buckling mode'
C
      IF (NPRT.GE.0) WRITE(IFILE,'(A,I3,A)')
     1' ** CHAPTER  NEW1: DESIGN PERTURBATION INDEX, IMOD=',IMOD,' ***'
       IF (NPRT.GE.1) WRITE(IFILE,'(/,/,/,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************',
     1' ************          CHAPTER NEW1           *****************',
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************'
       IF (NPRT.GE.1) WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A)')
     1 ' CHAPTER NEW1 Compute distribution of loads in panel module',
     1 '            skin-stringer segments, neglecting redistribution',
     1 '            due to initial buckling modal imperfections',
     1 '            (See Section 10 of [1A]). These loads are for',
     1 '            computing a preliminary value of wide column',
     1 '            buckling, needed for smeared stringer knockdown.'
C
        IF (NPRT.GE.0) WRITE(IFILE,'(/,A,/,A)')
     1' ******* Begin the section where WIDKNK is computed *********',
     1' ******* See ..panda2/doc/panda2.news Items 724 & 725.*******'
C
 9055 CONTINUE
      ILABEL=9055
      IF (NPRT.GE.1) WRITE(IFILE,*) ' LABEL NO. IN STRUCT=',ILABEL
       IF (NPRT.GE.1) WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A)')
     1' ***** BEGIN SUB. FORCES (FOR SMEARED STRINGER KNOCKDOWN) *****',
     1' Resultants in each segment of the skin-stringer and skin-ring',
     1' modules are computed. The effect of prebuckling bending due to',
     1' initial buckling modal imperfections is ignored at this time,',
     1' but will be accounted for later when buckling load factors and',
     1' stresses are computed. See Section 10, pp 506-509 of Ref.[1]'
C
       CALL FORCEX(IFILE,IFX,ITUTOR,NSEG,CX,CY,CS,FNX,FNY,FNXY,RESULT,
     1            RESFIX,RESEIG,ISTIF,WRESID,WBEND,ZPARTX,ZPARTY,
     1            EIGBOW,EPSLOD,ETHERM,THERMX,THERMY,LENMOD,CSINV,
     1            ETHRMX,ETHRMY,ICOCUR,NPRT,EPSTOT,EPSFIX,EPSEIG,
     1            FSTRN,GSTRN,S1,S2,FNX0,FNY0,FNXY0,EPSFXL,RESFXL,
     1            RESTOT,FNXP0,FNYP0,WPRESG+DELWSH,EAVEP,RESPGL,EPSPGL,
     1            RESPRS,EPSPRS,P,FNXPL0,FNYPL0,EAVEPL,WPRES,EPSLDF,
     1            WIMPG,WIMPL,IMOD,IABP,FSLOC,IWIDE,JJJ,AMPLIT,ECC,
     1            RWBTOT,RWBEIG,2,IBOUND,IBPRE,PRELEN,ITYPE,
     1            THSMRX,THSMRY,ETSMRX,ETSMRY,ICASE,MX,MY,IABT,AMPLT2,
     1            NNODES,TEMP,IMTEMP,IQUICK,ETHRMS,RESBGL,EPSBGL,EAVEPB)
C23456789012345678901234567890123456789012345678901234567890123456789012
       IF (NPRT.GE.1) WRITE(IFILE,*)
     1' ****** END SUB. FORCES (FOR SMEARED STRINGER KNOCKDOWN) ******'
C
       CURVAR = 0.
       CURFIX = 0.
       A11STR = 0.
       ZZZ    = 0.
       JWEB = 3
       IF (ISTIF(1).EQ.5) JWEB = 2
C
       DO 9004 ISEG = 1,NSEGB5
        CALL IDSEG(ISTIF(1),ISEG,NSEGB5,B20(1),W20(1),J,IFAY)
        I5I = I5(ISEG)
C
        DO 9003 I = 1,I5I
         NXVAR(I,ISEG) = RESULT(1,J,1) - RESTOT(1,J,1)
C
         IF (NXVAR(1,1).GE.0.0) THEN
            EIGPRD = 10.E+16
            GO TO 9058
         ENDIF
C
         IF (ISTIF(1).EQ.5.AND.IFAYT(1).EQ.1
     1                 .AND.(ISEG.EQ.5.OR.ISEG.EQ.6)) THEN
           IF (ISEG.EQ.5) NXVAR(I,ISEG) = NXVAR(I,ISEG)+NXVAR(1,2)
           IF (ISEG.EQ.6) NXVAR(I,ISEG) = NXVAR(I,ISEG)+NXVAR(I5I,2)
         ENDIF
         NYVAR(I,ISEG) = 0. 
         NXYVAR(I,ISEG)= 0. 
         NXFIX(I,ISEG) = 0. 
         NYFIX(I,ISEG) = 0. 
         NXYFIX(I,ISEG)= 0. 
         IF (NPRT.GE.2) THEN
           IF (I.EQ.1.AND.ISEG.EQ.1.AND.NPRT.GE.2)
     1     WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************',
     1' ************          CHAPTER NEW2           *****************',
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************'
           IF (I.EQ.1.AND.ISEG.EQ.1.AND.NPRT.GE.2)
     1     WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1 ' CHAPTER NEW2 List prebuckling stress resultants, Nx, Ny,',
     1 '        needed for the discretized single-module skin-stringer',
     1 '        model used for a preliminary value of wide column',
     1 '        buckling (BOSOR4-type model: see Figs. 18, 20,',
     1 '        22, 97, and 98 of [1A], for examples of the',
     1 '        discretized single skin-stringer BOSOR4-type',
     1 '        module model.). This distribution of Nx is used in',
     1 '        the wide column model used to obtain the smeared',
     1 '        stringer knockdown factor, WIDKNK. Ny and Nxy and the',
     1 '        fixed (non-eigenvalue) loads, Nxo, Nyo, Nxyo are set',
     1 '        to zero for this computation of wide column buckling.'
 9056      CONTINUE
           ILABEL=9056
           IF (I.EQ.1.AND.ISEG.EQ.1.AND.NPRT.GE.2)
     1     WRITE(IFILE,*) ' LABEL NO. IN STRUCT=',ILABEL
           IF (I.EQ.1.AND.ISEG.EQ.1.AND.NPRT.GE.2)
     1     WRITE(IFILE,'(/,A,/,A,/,A,/,A)')
     1   ' ==============================================',
     1   ' BEGIN: PREBUCKLING STRESS RESULTANTS USED IN THE',
     1   ' DISCRETIZED SINGLE MODULE MODEL FOR WIDE COLUMN BUCKLING...',
     1   ' ----------------------------------------------------------'
C
           IF (I.EQ.1.AND.NPRT.GE.2)
     1      WRITE(IFILE,'(A,/,A,I2,/,A,1P,3E12.4,/,A,1P,3E12.4)')
     1    ' PREBUCKLING STRESS RESULTANTS AT THE FIRST NODE',
     1    ' IN THE DISCRETIZED SINGLE MODULE SEGMENT NO.',ISEG,
     1    '  "Total." loads, Nx(var),Ny(var),Nxy(var)=',
     1           NXVAR(I,ISEG),NYVAR(I,ISEG),NXYVAR(I,ISEG),
     1    '  "Fixed " loads, Nx(fix),Ny(fix),Nxy(fix)=',
     1           NXFIX(I,ISEG),NYFIX(I,ISEG),NXYFIX(I,ISEG)
           IF (I.EQ.I5I.AND.J.EQ.JWEB.AND.NPRT.GE.2) THEN
             WRITE(IFILE,'(/,A,A,I2,/,A,/,(1P,6E12.4))')
     1     ' PREBUCKLING AXIAL RESULTANTS IN STRINGER WEB:',
     1     ' SEGMENT NO.',ISEG,
     1     '  "Eigenvalue" axial resultant, Nx(var)=',
     1        (NXVAR(II,ISEG),II=1,I5I)
             WRITE(IFILE,'(A,/,(1P,6E12.4))')
     1     '  "  fixed   " axial resultant, Nx(fix)=',
     1        (NXFIX(II,ISEG),II=1,I5I)
           ENDIF
           IF (I.EQ.I5I.AND.ISEG.EQ.NSEGB5.AND.NPRT.GE.2)
     1       WRITE(IFILE,'(A,/,A,/,A,/,A,/)')
     1     ' -------------------------------------------------',
     1     ' END:  PREBUCKLING STRESS RESULTANTS USED IN THE',
     1     ' DISCRETIZED SINGLE MODULE MODEL FOR WIDE COL. BUCKLING.',
     1     ' ========================================================'
         ENDIF
C    End of NPRT.GE.2 condition.
         IF (NPRT.GE.2.AND.I.EQ.I5I.AND.ISEG.EQ.NSEGB5)
     1   WRITE(IFILE,'(A)')
     1 ' ***** END OF OUTPUT FOR UNIFORMLY LOADED PREBUCKLED STATE*****'
C23456789012345678901234567890123456789012345678901234567890123456789012
 9003   CONTINUE
 9004  CONTINUE
C
C**********************************************************************
C BEGIN CALCULATION OF WIDE-COLUMN BUCKLING LOAD FACTOR FROM SKIN-STRINGER
C PANEL MODULE MODEL
C**********************************************************************
C
C  GET wide column panel buckling OF PANEL MODULE (N = 1 AXIAL WAVE):
C
       IYDUM = 0
       IF (IMOD.EQ.0.AND.JJJ.EQ.0.AND.ILOADS.EQ.1.AND.NPRT.GE.2)
     1 WRITE(IFILE,6005) ILOADS,LENMOD
 6005  FORMAT(/' EXPLANATION OF FOLLOWING CALCULATION (LOAD SET NO.',
     1 I2,'):'/
     1'     Next, the load factor for wide column panel buckling is'/
     1'     computed from the discretized panel module model. The'/
     1'     analysis neglects local deformation of the skin between'/
     1'     stringers and local deformation of the stringers.'/
     1'     Clamping of the L2 edges (edges that lie in the plane of'/
     1'     the screen and parallel to it) is accounted for by doing'/
     1'     the wide column calculation for a panel that is shorter in'/
     1'     the axial direction by a factor, LENMOD =',1PE12.4,
     1' than the'/
     1'     axial dimension that you gave in your input.')
C
       AXLEN = LENMOD*AXIAL
       IF (ISTIF(2).NE.0) AXLEN = B(2)
C
       ISKINX = 0
       ITIPWX = 0
       ICWBWX = 0
       IFLGWX = 0
       ICRWNX = 0
       ISTRTX = 1
       ICTANX = 0
       NVECXS = NVECX
       IF (NPRT.GE.1) WRITE(IFILE,'(/,/,/,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************',
     1' ************          CHAPTER NEW3           *****************',
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************'
      IF (NPRT.GE.0) WRITE(IFILE,'(A,I3,A)')
     1' *** CHAPTER  NEW3: DESIGN PERTURBATION INDEX, IMOD=',IMOD,' ***'
       IF (NPRT.GE.1) WRITE(IFILE,'(/,A,/,A,/,A,/,A)')
     1 ' CHAPTER NEW3 Do wide-column inter-ring buckling analysis.',
     1 '            (See Figs. 20c, 22c, 46d, and 67 of [1A],',
     1 '            for examples.). The purpose of this computation',
     1 '            is to obtain a smeared stringer knockdown factor.'
      IKOUNT = 0
C BEG JUL 2007
      IMINUS = 0
C END JUL 2007
 9057 CONTINUE
      IKOUNT = IKOUNT + 1
      ILABEL=9057
      IF (NPRT.GE.1) WRITE(IFILE,*) ' LABEL NO. IN STRUCT=',ILABEL
       IF (NPRT.GE.1) WRITE(IFILE,'(/,A,/,A)')
     1'*** BEGIN SUBROUTINE BUCKLE (WIDE-COLUMN BUCKLING - MODULE ***',
     1'***                         FOR SMEARED STRINGER KNOCKDOWN ***'
       CALL BUCKLE(1,IMOD,IFILE,IW,ILOC,DS,AS,BS,ISTRTX,DIAG,C,D,DI,
     1      X,Y,Z,EIG,0,IYDUM,RESULT,AXLEN,M3,IDRW,
     1      NBLK,NGBK,NKF,0,IMAXB,KMAXB,IPV2,IBVC,1000,1,THERMX,
     1      THERMS,P,KAPPA1,KAPPA2,0,WPRES,IUNK,CS,
     1      FNX,0.,0.,FNX,FNX,0.,0.,0.,0.,
     1      FNX0,FNY0,FNXY0,R,JJJ,1,IABP,LENMOD,0,
     1      TEMP(1,1),IMTEMP,WPB1,EIGITR(20),ICTANX,0.,0,0,0,ILABEL)
       IF (NPRT.GE.1) WRITE(IFILE,'(A,/,A)')
     1'***  END  SUBROUTINE BUCKLE (WIDE-COLUMN BUCKLING - MODULE ***',
     1'***                         FOR SMEARED STRINGER KNOCKDOWN ***'
       IF (NPRT.GE.1) WRITE(IFILE,'(/,A,/,A)')
     1'*** BEGIN SUBROUTINE MODE (WIDE-COLUMN BUCKLING MODE SHAPE ***',
     1'***                         FOR SMEARED STRINGER KNOCKDOWN ***'
C
       DUMMY1 = 1.0
       DUMMY2 = 1.0
       DUMMY3 = 1.0
       DUMMY4 = 1.0
       CALL MODE(IFILE,NPRT,NSEGB5,I5,IW,DS,M3,Y,ISKINX,
     1    0,0,ECCARR,DUMMY1,CX,1,DUMMY2,EIG,R,ITIPWX,ICWBWX,IMOD,
     1    WW1,WD1,WDD1,UU1,VV1,VP1,ZREF,1,DUMMY3,
     1    DUMMY4,ICRWNX,P,IFICT6,WDDD,7,0,TX,1,0,
     1    INTSNG,RAD2,TY,IZSTIF,B,B2,H,W,W2,
     1    B0,B20,H0,WW0,W20,ISTIF,INTEXT,IFAY,IBEAM,IONEST,
     1    AXIAL,CIRC,ICRIP,ISEGC,WRATIO,WTIPWS,WRATTP,
     1    WRATWB,WRATCN,WRWIDE,WIDLMM,PEDG,ISOGRD,RESULT,IFLGWX)
C
       IF (NPRT.GE.1) WRITE(IFILE,'(/,A,/,A)')
     1'***  END  SUBROUTINE MODE (WIDE-COLUMN BUCKLING MODE SHAPE ***',
     1'***                         FOR SMEARED STRINGER KNOCKDOWN ***'
C
C BEG JUL 2007
       IF (NPRT.GE.2) WRITE(IFILE,'(A,I2,A,1P,4E12.4)')
     1' Eigenvalues for ',IKOUNT,' roots:  EIGPRD= ',
     1                                       (ROOTX(I),I=1,IKOUNT)
C END JUL 2007
       EIGPRD = ROOTX(IKOUNT)
C
       IF (NPRT.GE.0) THEN
        WRITE(IFILE,'(/,A,1P,E12.4,/,A,I2,A,/,A,I2,A,/,A,I2,A)')
     1'  WIDE COLUMN PANEL BUCKLING LOAD FACTOR = ',EIGPRD,
     1' ISKINX =',ISKINX,
     1'. MODE OF BUCKLING IS THE PANEL SKIN IF ISKINX = 1.',
     1' ITIPWX =',ITIPWX,
     1'. MODE OF BUCKLING IS STRINGER SIDESWAY IF ITIPWX=1',
     1' ICWBWX =',ICWBWX,
     1'. MODE OF BUCKLING IS THE STRINGER WEB IF ICWBWX=1'
        WRITE(IFILE,'(A,I2,A,/,A,I2,A)')
     1' IFLGWX =',IFLGWX,
     1'. MODE OF BUCKLING IS STRINGER OUTSTANDING FLANGE IF IFLGWX=1',
     1' ICRWNX =',ICRWNX,
     1'. MODE OF BUCKLING IS THE CROWN OF THE HAT IF ICRWNX=1'
       ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
       IF (ISKINX.EQ.1.AND.NPRT.GE.0)
     1  WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A)')
     1' *****************  NOTE    NOTE     NOTE  ***********',
     1' THIS PRELIMINARY WIDE COLUMN BUCKLING LOAD FACTOR CANNOT BE',
     1' USED IN THIS INSTANCE BECAUSE THE BIFURCATION BUCKLING MODE',
     1' CORRESPONDS TO JUST ANOTHER FORM OF LOCAL SKIN BUCKLING',
     1' ************************************************************'
C
       IF (ITIPWX.EQ.1.AND.NPRT.GE.0)
     1  WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A)')
     1' ***************** NOTE   NOTE    NOTE  *************',
     1' THIS PRELIMINARY WIDE COLUMN BUCKLING LOAD FACTOR CANNOT BE',
     1' USED IN THIS INSTANCE BECAUSE THE BIFURCATION BUCKLING MODE',
     1' CORRESPONDS TO SIDESWAY (ROLLING) OF THE STRINGER BY ITSELF.',
     1' ************************************************************'
C
       IF (ICWBWX.EQ.1.AND.NPRT.GE.0)
     1  WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A)')
     1' *****************  NOTE    NOTE     NOTE  ***********',
     1' THIS PRELIMINARY WIDE COLUMN BUCKLING LOAD FACTOR CANNOT BE',
     1' USED IN THIS INSTANCE BECAUSE THE BIFURCATION BUCKLING MODE',
     1' CORRESPONDS TO JUST ANOTHER FORM OF STRINGER WEB BUCKLING',
     1' ************************************************************'
C
       IF (IFLGWX.EQ.1.AND.NPRT.GE.0)
     1  WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A)')
     1' *****************  NOTE    NOTE     NOTE  ***********',
     1' THIS PRELIMINARY WIDE COLUMN BUCKLING LOAD FACTOR CANNOT BE',
     1' USED IN THIS INSTANCE BECAUSE THE BIFURCATION BUCKLING MODE',
     1' CORRESPONDS TO ANOTHER FORM OF STRINGER FLANGE BUCKLING',
     1' ************************************************************'
C
       IF (ICRWNX.EQ.1.AND.NPRT.GE.0)
     1  WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A)')
     1' *****************  NOTE    NOTE     NOTE  ***********',
     1' THIS PRELIMINARY WIDE COLUMN BUCKLING LOAD FACTOR CANNOT BE',
     1' USED IN THIS INSTANCE BECAUSE THE BIFURCATION BUCKLING MODE',
     1' CORRESPONDS TO ANOTHER FORM OF STRINGER HAT CROWN  BUCKLING',
     1' ************************************************************'
C
       IF (IKOUNT.LT.4) THEN
          IF (ISKINX.EQ.0.AND.ITIPWX.EQ.0.AND.
     1        ICWBWX.EQ.0.AND.IFLGWX.EQ.0.AND.ICRWNX.EQ.0) THEN
             IF (NPRT.GE.0) WRITE(IFILE,'(/,A,I2,A,A)')
     1     ' Mode number ',IKOUNT,' IS a wide column mode and is',
     1     ' therefore acceptable.'
          ELSE 
             IF (NPRT.GE.0) WRITE(IFILE,'(/,A,I2,A,A)')
     1     ' Mode number ',IKOUNT,' is NOT a wide column mode and is',
     1     ' therefore NOT acceptable.'
C BEG JUL 2007
             EIGONE(IKOUNT) = ROOTX(1)
             IF (IKOUNT.GT.1) THEN
                DIFEIG = ABS(EIGONE(1) -EIGONE(IKOUNT))/EIGONE(1)
                IF (IMINUS.EQ.0.AND.DIFEIG.GT.0.0001) THEN
                  WRITE(IFILE,'(A,A,I2,/,A,1P,E12.4,/,A,1P,E12.4)')
     1          ' First eigenvalue changed from 1st interation.',
     1          ' Iteration no.',IKOUNT,
     1          ' First eigenvalue from 1st iteration=',EIGONE(1),
     1          ' First eigenvalue from nth iteration=',
     1                                             EIGONE(IKOUNT)
                  WRITE(IFILE,'(A)')
     1          ' Do this iteration over again once.'
                  IKOUNT = IKOUNT - 1
                  IMINUS = 1
                ENDIF
             ENDIF
C END JUL 2007
             NVECX = IKOUNT + 1
             GO TO 9057
          ENDIF
       ENDIF
C   End of (IKOUNT.LT.4) condition.
C
       NVECX = NVECXS
C
       IF (NPRT.GE.2) WRITE(IFILE,'(A)')
     1' *** END OF PRELIMINARY WIDE COLUMN BUCKLING CALCULATIONS ***'
C
C**********************************************************************
C END CALCULATION OF WIDE-COLUMN BUCKLING LOAD FACTOR FROM SKIN-STRINGER
C PANEL MODULE MODEL, THE PURPOSE OF WHICH IS TO COMPUTE A KNOCKDOWN
C FACTOR FOR THE COMBINED EFFECT OF SMEARING STRINGERS AND T.S.D.
C
C Next, compute knockdown factor WIDKNK, which is equal to:
C  (buckling load from discretized wide-column model)/
C  (buckling load factor from Euler buckling model)
C
C23456789012345678901234567890123456789012345678901234567890123456789012
 9058  CONTINUE
       FAXMOD = 1.0
       DIFFAX = ABS(AXIAL - B(2))/B(2)
       IF (DIFFAX.LT.0.1) FAXMOD = LENMOD
       AXLEFF = B(2)*FAXMOD
       FNCRIT = EIEFF2*3.141592654**2/AXLEFF**2
       EIGWID = EIGPRD*ABS(FNX)
       WIDKNK = EIGWID/FNCRIT
       IF (WIDKNK.LE.0.0) WIDKNK = 1.0
       IF (WIDKNK.GT.1.0) WIDKNK = 1.0
       IF (WIDKNK.LE.0.3) WIDKNK = 0.3
       IF (ITIPWX.EQ.1.OR.ISKINX.EQ.1.OR.ICWBWX.EQ.1
     1                .OR.IFLGWX.EQ.1.OR.ICRWNX.EQ.1) WIDKNK = 1.0
       IF (NPRT.GE.0) THEN
        WRITE(IFILE,
     1'(/,A,/,A,/,A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4)')
     1' SMEARED STRINGER KNOCKDOWN FROM SKIN-STRINGER DISCRETE MODEL',
     1' (See ..panda2/doc/panda2.news Items 724 and 725):',
     1' Buckling axial resultant Nx from simple Euler model,   EULER =',
     1  FNCRIT,
     1' Buckling axial resultant Nx from discretized  model,   EIGWID=',
     1  EIGWID,
     1' Knockdown factor for cross section rigidity & t.s.d.,  WIDKNK=',
     1  WIDKNK,
     1' Effective axial length of the wide column model,       AXLEFF=',
     1  AXLEFF
C
       IF (ICONSV.LT.1) WIDKNK = 1.0
       IF (ICONSV.LT.1.AND.NPRT.GE.0) WRITE(IFILE,'(/,A,/,A,1P,E12.4)')
     1' Since ICONSV is less than 1, WIDKNK is reset equal to 1.0 .',
     1' Knockdown factor for cross section rigidity & t.s.d.,  WIDKNK=',
     1  WIDKNK
C
        IF (NXVAR(1,1).LT.0.0.AND.NPRT.GE.0)
     1   WRITE(IFILE,'(/,A,/,A,/,(1P,5E12.4))')
     1' Axial resultant, Nx, in each of the segments of the',
     1' discretized skin-stringer cross-section before any deformation',
     1 (NXVAR(1,ISEG), ISEG=1,NSEGB5)
        IF (NPRT.GE.0) WRITE(IFILE,'(A,/,A,/)')
     1' ******* End of the section where WIDKNK is computed ********',
     1' ******* See ..panda2/doc/panda2.news Items 724 & 725.*******'
C23456789012345678901234567890123456789012345678901234567890123456789012
       ENDIF
C   End of NPRT.GE.0 condition.
C BEG JUL 2007
       IF (ICONSV.LT.1) WIDKNK = 1.0
C END JUL 2007
      ENDIF
C End of (IMOD.EQ.0.AND.ISTIF(1).NE.0.AND.ISTIF(1).NE.5.AND.ITESTB.EQ.0
C        .AND.FNX.LT.0.0.AND.ISOGRD.EQ.0.AND.IBEAM.EQ.0) condition 
C *********************************************************************
C END OF DERIVAION OF KNOCKDOWN FACTOR, WIDKNK, FOR T.S.D. + SMEARED
C STRINGERS
C *********************************************************************
C END MAR 2007
C23456789012345678901234567890123456789012345678901234567890123456789012
C
C BEG AUG 1996
C     IF (IMOD.EQ.0.AND.WIMPL0(ILOADS).LE.0.0) W0 = 0.10*TX(1)
      IF (IMOD.EQ.0.AND.WIMPL0(ILOADS).LE.0.0.AND.IXIMPF(ILOADS).EQ.1)
C BEG JULY 2006
C    1   W0 = 0.10*TX(1)
     1   W0 = 0.05*TX(1)
C END JULY 2006
C END AUG 1996
C BEG OCT 1996
      IF (IMOD.EQ.0.AND.IQUICK.EQ.0.AND.IXIMPF(ILOADS).EQ.1) THEN
C END OCT 1996
         IF (FSLOC.LT.0.95.OR.FSBSTR.LT.1.0) W0 =MIN(ABS(W0),0.10*TX(1))
      ENDIF
      IF (IMOD.EQ.1.AND.IW0SET.EQ.1) W0 = W0SET
      WIMPL = W0
      WRATIO = 1.0
      WIPROD = W0
C     WRITE(8,*)' WIMPL0(ILOADS),W0,WIPROD=',
C    1            WIMPL0(ILOADS),W0,WIPROD
C
C BEG NOV 2003
C     IF (IMOD.EQ.0.AND.JJJ.EQ.0.AND.NPRT.GE.1)
C    1   WRITE(IFILE,*)' ***** END OF CONSTITUTIVE C(i,j) CALCUL. *****'
C END NOV 2003
      CALL MOVER(0.,0,EAVEP,1,6)
C BEG DEC 1998
      CALL MOVER(0.,0,EAVEPR,1,6)
C END DEC 1998
C BEG OCT 1998
      CALL MOVER(0.,0,EAVEPA,1,6)
      CALL MOVER(0.,0,EAVEPB,1,6)
      CALL MOVER(0.,0,FCXWEB,1,11)
      CALL MOVER(0.,0,FCXWBA,1,11)
      CALL MOVER(0.,0,FCXWBB,1,11)
      CALL MOVER(0.,0,FCXWBT,1,11)
      CALL MOVER(0.,0,FCYWEB,1,11)
      CALL MOVER(0.,0,FCYWBA,1,11)
      CALL MOVER(0.,0,FCYWBB,1,11)
      CALL MOVER(0.,0,FCYWBT,1,11)
      WMID0  = 0.
      WXXMD0 = 0.
      WRING0 = 0.
      WXXRNA = 0.
      WPRSGA = 0.
      WDDPRA = 0.
      FNXPA  = 0.
      FNYPA  = 0.
      WXXFLA = 0.
      POPRNA = 0.
      POPISA = 0.
      DFNYPA = 0.
      SHERXA = 0.
      SHERYA = 0.
      WXXXGA = 0.
      IF (IMOD.EQ.0) XMAXQA = 0.
      FNYAVA = 0.
      FCEWEB = 0.
      FCEFLG = 0.
      FCEWBA = 0.
      FCEFGA = 0.
      EPSRGA = 0.
C
      WMID1  = 0.
      WXXMD1 = 0.
      WRING1 = 0.
      WXXRNB = 0.
      WPRSGB = 0.
      WDDPRB = 0.
      FNXPB  = 0.
      FNYPB  = 0.
      WXXFLB = 0.
      POPRNB = 0.
      POPISB = 0.
      DFNYPB = 0.
      SHERXB = 0.
      SHERYB = 0.
      WXXXGB = 0.
      IF (IMOD.EQ.0) XMAXQB = 0.
      IF (ICASE.EQ.1) DFNYBM = 0.
      FNYAVB = 0.
      FCEWBB = 0.
      FCEFGB = 0.
      EPSRGB = 0.
C
      WMID2  = 0.
      WXXMD2 = 0.
      WRING2 = 0.
      WXXRNT = 0.
      WXXXGT = 0.
      IF (IMOD.EQ.0) XMAXQT = 0.
      IF (ICASE.EQ.1) DFNYTM = 0.
      FCEWBT = 0.
      FCEFGT = 0.
      FNYAVT = 0.
      EPSRGT = 0.
C END OCT 1998
C BEG JAN 1995
      CALL MOVER(ETHERM,1,EAVET,1,6)
      FNXT0 = 0.
      FNYT0 = 0.
      WPREST= 0.
      WDDPRT= 0.
C END JAN 1995
      CALL MOVER(0.,0,EAVEPL,1,6)
      CALL MOVER(0.,0,RESPRS,1,30)
      CALL MOVER(0.,0,EPSPRS,1,30)
      CALL MOVER(0.,0,PW,1,1104)
C BEG OCT 1996
      CALL MOVER(0.,0,PWDDD,1,184)
C END OCT 1996
      FNXP0 = 0.
      FNYP0 = 0.
      FNXYP0= 0.
      FNXPL0= 0.
      FNYPL0= 0.
      FNXYPL= 0.
      WPRES = 0.
      WPRESG= 0.
      WPRESR= 0.
C BEG OCT 1998
      WLPRES = 0.
C END OCT 1998
      WDDPRS= 0.
      WDDPRR= 0.
C BEG MAR 1998
      WPMAX = 0.
C END MAR 1998
C  FIND DEFORMATION OF RING-STIFFENED CYLINDRICAL SHELL...
      WMID = 0.
      WXXMID = 0.
      WRING = 0.
      WXXRNG = 0.
C BEG NOV 1996
      WXXXMX = 0.
c END NOV 1996
C
C*********************************************************************
C BEGIN DERIVATION OF BEHAVIOR OF ENTIRE PANEL (SMEARED STIFFENERS)
C UNDER UNIFORM NORMAL PRESSURE.
C*********************************************************************
C
C BEG MAR 1996
      IF (IBEAM.EQ.1) THEN
         CIRCSX = CIRC
         CIRC =10.*AXIAL
         CALL MOVER(DSG,1,DSGS,1,200)
         DSGMLT = CIRC/(DSG(1)*36.0)
         DO 121 I = 1,37
            DSG(I) = DSGS(I)*DSGMLT
  121    CONTINUE
      ENDIF
C END MAR 1996

      GENPRS = CIRC.GT.B(1).OR.AXIAL.GT.B(2).OR.ISTIF(1).EQ.0
C BEG OCT 1998
C     IF (NPRT.GE.2) WRITE(IFILE,*)
C    1' JUST BEFORE PRESSURE RESPONSE: IFLAT,P,GENPRS',IFLAT,P,GENPRS
C     IF (P.NE.0.0.AND.GENPRS) THEN
C BEG JAN 1999
C     IF (GENPRS) THEN
C BEG JULY 2007
      IF (NPRT.GE.1) THEN
      IF (.NOT.GENPRS.OR.(IFLAT.NE.0.AND.P.EQ.0.0))
     1 WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' *************************************************************',
     1' CHAPTERs 4 (compute axisymmetric prebuckling state of a',
     1' curved panel or cylindrical shell) and 5a (compute overall',
     1' static response of a flat panel to normal pressure)',
     1' are not executed because:',
     1' (.NOT.GENPRS.OR.(IFLAT.NE.0.AND.P.EQ.0.0)), in which',
     1' GENPRS = CIRC.GT.B(1).OR.AXIAL.GT.B(2).OR.ISTIF(1).EQ.0'
      IF (NPRT.GE.0) WRITE(IFILE,'(A,I3,A)')
     1' * CHAPTERs 4 & 5a: DESIGN PERTURBATION INDEX, IMOD=',IMOD,' *'
      ENDIF
C END JULY 2007
      IF (GENPRS.AND.(IFLAT.EQ.0.OR.P.NE.0.0)) THEN
C END JAN 1999
C END OCT 1998
C
C  Now find overall bending of the panel under uniform pressure...
C
C BEG NOV 1996
       IF (ISANDX.AND.IFLAT.EQ.1
     1          .AND.ISTIF(1).EQ.0.AND.ISTIF(2).EQ.0) THEN
C  compute additional normal deflection DELWSH due to t.s.d. Use rough
C  beam theory approximation from p.12 of "The basics on bonded
C  sandwich construction, TSB 124, 1987, Hexcel Corp., Dublin CA
         IF (AXIAL.LT.CIRC) THEN
            GCEFF = GCXP(1,1)
            FLBEAM= AXIAL
         ENDIF
         IF (CIRC.LE.AXIAL) THEN
            GCEFF = GCYP(1,1)
            FLBEAM= CIRC
         ENDIF
         DELWSH = 0.125*P*FLBEAM**2/(TX(1)*GCEFF)
         IF (NPRT.GE.2) WRITE(8,'(A,1P,E12.4)')
     1 ' Additional plate deflection due to t.s.d. effect, DELWSH=',
     1   DELWSH
       ENDIF
C END NOV 1996
C BEG JULY 2007
       IF (IFLAT.NE.0.AND.NPRT.GE.1) WRITE(IFILE,'(/,A,/,A,/,A,/A)')
     1' *************************************************************',
     1' CHAPTER 4 (compute axisymmetric prebuckling "hungry-horse"',
     1' state of a curved panel or cylindrical shell) is',
     1' not executed because the panel is flat.'
C END JULY 2007
      IF (IFLAT.NE.0.AND.NPRT.GE.0) WRITE(IFILE,'(A,I3,A)')
     1' **** CHAPTER  4: DESIGN PERTURBATION INDEX, IMOD=',IMOD,' *****'
       IF (IFLAT.EQ.0) THEN
         ISTF2 = ISTIF(2)
         WFLNG = 0.
         CS22 = CS(2,2)
         TH25 = THSMRX(2,5)
C BEG OCT 1998
         POPRNA = 0.
         POPRNB = 0.
         POPISA = 0.
         POPISB = 0.
         FCEWBB = 0.
         FCEFGB = 0.
         FNYAVB = 0.
         DFNYPB = 0.
C BEG DEC 1998
         IF (IMOD.EQ.0) THEN
            WCALCA = 0.
            WCALCB = 0.
            WCALCT = 0.
            IXNMBA = 0
            IXNMBB = 0
            IXNMBT = 0
            IXNUMB = 0
            IXNM0A = 0
            IXNM0B = 0
            IXNM0T = 0
         ENDIF
C END DEC 1998
         CALL MOVER(0.,0,FCXWBB,1,11)
         PPANEL = 0.0
         IF (IABP.EQ.1) PPANEL = P
C BEG OCT 2006
      IF (NPRT.GE.1) WRITE(IFILE,'(/,/,/,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************',
     1' ************          CHAPTER 4              *****************',
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************'
      IF (NPRT.GE.0) WRITE(IFILE,'(A,I3,A)')
     1' **** CHAPTER  4: DESIGN PERTURBATION INDEX, IMOD=',IMOD,' *****'
      IF (NPRT.GE.1) WRITE(IFILE,'(/,A,/,A,/,A,/,A)')
     1 ' *************************************************************',
     1 ' CHAPTER 4  Compute axisymmetric prebuckling "hungry-horse"',
     1 '            state of the curved panel or cylindrical shell.',
     1 '            (See Ref.[1E], especially Fig. 1 and pp.495-498).'
C END OCT 2006
C BEG NOV 2003
         IF (NPRT.GE.1) WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,A)')
     1 ' ***** BEGIN COMPUTATIONS FOR AXISYMMETRIC PREBUCKLING',
     1 ' ***** STATE OF THE PANEL. (See pp 495-498 of journal',
     1 ' ***** article, COMPUTERS & STRUCTURES vol 59, no.3, 1996',
     1 ' ***** Computations carried out in SUBROUTINE SKIN.',
     1 ' ***** Axisymmetric response of the curved panel to the',
     1 ' loads in Load Set A *****'
         CALL SKIN(CS,CX(1,1,5),FNX,FNY,WMID0,WXXMD0,
     1       WRING0,WXXRNA,-R,B(2),IMOD,IFILE,NPRT,PPANEL,ISTIF(2),
     1       IBPRE,AXIAL,DSURF,ICASE,EAVEPA,WPRSGA,WDDPRA,
     1       FNXPA,FNYPA,H(2),W(2),WXXFLA,INTEXT(2),
     1       POPRNA,1,ITYPE,ISOGRD,H(1),W(1),ISTIF(1),
     1       CX(1,1,4),POPISA,JJJ,ISTF2,WFLNG,CS22,DFNYPA,
     1       WMIDA,WRINGA,WXXMDA,WXXRGA,WCALCA,THS1,TH25,
     1       SHERXA,XMAXA,SHERYA,YMAXA,ETHRMX(2,5),ETHERM,0,
     1       ISANDX,WXXXGA,WXXXMA,XMAXQA,DFNYPM,MCASL1,MCASS1,
     1       FNYYPA,FXXXP,IXNMBA,FNYAVA,INYAVA,
     1       THERMY(1,3),THERMY(1,4),FCEWBA,FCEFGA,EPSRGA,THRMY3,
     1       FCXWBA,FCYWBA,ETSMRY(2,3),
C BEG NOV 2003
     1       CY3,CY(1,1,2),CY(1,1,3),CY(1,1,4),B2(2),IXNM0A,0.,RNGSPA)
C23456789012345678901234567890123456789012345678901234567890123456789012
C END NOV 2003
C
         PPANEL = 0.0
         IF (IABP.EQ.0) PPANEL = P
         IF (NPRT.GE.0) WRITE(IFILE,'(/,A,A)')
     1 ' ***** Axisymmetric response of the curved panel to the',
     1 ' loads in Load Set B *****'
         CALL SKIN(CS,CX(1,1,5),FNX0,FNY0,WMID1,WXXMD1,
     1       WRING1,WXXRNB,-R,B(2),IMOD,IFILE,NPRT,PPANEL,ISTIF(2),
     1       IBPRE,AXIAL,DSURF,ICASE,EAVEPB,WPRSGB,WDDPRB,
     1       FNXPB,FNYPB,H(2),W(2),WXXFLB,INTEXT(2),
     1       POPRNB,0,ITYPE,ISOGRD,H(1),W(1),ISTIF(1),
     1       CX(1,1,4),POPISB,JJJ,ISTF2,WFLNG,CS22,DFNYPB,
     1       WMIDB,WRINGB,WXXMDB,WXXRGB,WCALCB,THS1,TH25,
     1       SHERXB,XMAXB,SHERYB,YMAXB,ETHRMX(2,5),ETHERM,0,
     1       ISANDX,WXXXGB,WXXXMB,XMAXQB,DFNYBM,MCASL1,MCASS1,
     1       FNYYPB,FXXXP,IXNMBB,FNYAVB,INYAVB,
     1       THERMY(1,3),THERMY(1,4),FCEWBB,FCEFGB,EPSRGB,THRMY3,
     1       FCXWBB,FCYWBB,ETSMRY(2,3),
C BEG NOV 2003
     1       CY3,CY(1,1,2),CY(1,1,3),CY(1,1,4),B2(2),IXNM0B,0.,RNGSPA)
C END NOV 2003
C END OCT 1998
C
C BEG JUN 1999 (comment out)
C        WMIDP  = WMID
C END JUN 1999
C BEG JUN 1996
C        IF (ETHRMX(2,5).NE.0.0.OR.ETHERM(2).NE.0.0) THEN
C BEG FEB 1999
         IF (ETHRMX(2,5).NE.0.0.OR.ETHERM(2).NE.0.0
     1                         .OR.ETCURX(2).NE.0.0) THEN
C        IF (IMTEMP.NE.0.AND.(ETHRMX(2,5).NE.0.0.OR.ETHERM(2).NE.0.0
C    1                         .OR.ETCURX(2).NE.0.0)) THEN
C END FEB 1999
C END JUN 1996
            CALL MOVER(ETHERM,1,ETHARG,1,6)
            IF (ISTIF(2).NE.0) THEN
               IBPRET = 1
               FNHOOP = (CX(2,2,5) - CX(1,2,5)**2/CX(1,1,5))*
C BEG FEB 1999
C    1                       (ETHRMX(2,5) - ETHOOP)
     1                       (ETSMRX(2,5) - ETHOOP)
               DETH2 = 0.
               IF (ISTIF(1).NE.0.AND.ICOCUR(2).EQ.0) DETH2 = -ETCURX(2)
C END FEB 1999
               ISTF2 = ISTIF(2)
               WFLNG = 0.
               IF (ISTIF(2).EQ.1)
C BEG OCT 1998
C    1              WFLNG = -(ETHRMY(1,4) - ETHOOP)*ABS(R)
C BEG FEB 1999
C    1              WFLNG =  (ETHRMY(1,4) - ETHOOP)*ABS(R)
     1              WFLNG =  (ETSMRY(1,4) - ETHOOP)*ABS(R)
C END FEB 1999
C END OCT 1998
               CS22 = CS(2,2)
               ETHARG(2) = ETHOOP
C BEG JUN 1996
               ETHCHG = ETHRMX(2,5)
C BEG OCT 1998
C BEG FEB 1999
C              THS1(1) = THSMRX(1,5) - ICOCUR(1)*THCURX(1,5)
C              THS1(2) = THSMRX(2,5) - ICOCUR(1)*THCURX(2,5)
               THS1(1) = THSMRX(1,5)
               THS1(2) = THSMRX(2,5)
C              WRITE(IFILE,'(A,1P,2E12.4)')
C    1       ' THS1(1),THS1(2)=',THS1(1),THS1(2)
C END FEB 1999
C END OCT 1998
C END JUN 1996
C BEG OCT 1998
C              TH25 = FNHOOP
               TH25 = THSMRX(2,5) - ICOCUR(1)*THCURX(2,5)
C END OCT 1998
            ELSE
               IBPRET = IBPRE
C BEG JUN 1996
C              FNHOOP = (CS(2,2) - CS(1,2)**2/CS(1,1))*ETHERM(2)
               FNHOOP = 
     1            (CS(2,2) - CS(1,2)**2/CS(1,1))*(ETHERM(2)-ETCURX(2))
C END JUN 1996
               ISTF2  = 0
               WFLNG = 0.
               CS22 = CX(2,2,5)
C BEG JUN 1996
               ETHARG(2) = ETHERM(2) - ETCURX(2)
               ETHCHG = ETHRMX(2,5) - ETCURX(2)
               TH25 = THSMRX(2,5) - ICOCUR(1)*THCURX(2,5)
C BEG OCT 1998
               THS1(1) = THSMRX(1,5) - ICOCUR(1)*THCURX(1,5)
               THS1(2) = THSMRX(2,5) - ICOCUR(1)*THCURX(2,5)
C END OCT 1998
C END JUN 1996
            ENDIF
C       End of (ISTIF(2).NE.0) ... ELSE  condition.
            PHOOP  = -FNHOOP/R
C BEG OCT 1998
            IF (NPRT.GE.0) WRITE(IFILE,'(/,A,A)')
     1    ' ***** Axisymmetric response of the curved panel to the',
     1    ' thermal loading *****'
            CALL SKIN(CX(1,1,5),CX(1,1,5),0.,FNHOOP,WMID2,WXXMD2,
     1            WRING2,WXXRNT,-R,B(2),IMOD,IFILE,NPRT,PHOOP,0,
     1               IBPRET,B(2),DSURF,ICASE,EAVET,WPREST,WDDPRT,
     1               FNXT0,FNYT0,H(2),W(2),WXXFLT,INTEXT(2),
     1               POPRNT,IABT,ITYPE,ISOGRD,H(1),W(1),ISTIF(1),
     1               CX(1,1,4),POPIST,JJJ,ISTF2,WFLNG,CS22,DFNYT0,
     1               WMIDT,WRINGT,WXXMDT,WXXRGT,WCALCT,THS1,TH25,
     1               SHERXT,XMAXT,SHERYT,YMAXT,ETHCHG,ETHARG,1,
     1               ISANDX,WXXXGT,WXXXMT,XMAXQT,DFNYTM,MCASL1,MCASS1,
C BEG FEB 1999
     1               FNYYPT,FXXXP,IXNMBT,FNYAVT,INYAVT,THSMRY(1,3),
     1               THSMRY(1,4),FCEWBT,FCEFGT,EPSRGT,THRMY3,
C END FEB 1999
     1               FCXWBT,FCYWBT,ETSMRY(2,3),CY3,CY(1,1,2),
C BEG NOV 2003
     1               CY(1,1,3),CY(1,1,4),B2(2),IXNM0T,DETH2,RNGSPA)
C END NOV 2003
C END OCT 1998
C
C           CALL MOVER(EAVET,1,ETHERM,1,6)
C           CALL MOVER(EAVET,1,ETHRMX(1,5),1,6)
C BEG FEB 1999
C BEG MAR 2007
C           FITHRM = 1.0
            FITHRM = 0.0
C END MAR 2007
            IF (ISTIF(2).NE.0.) FITHRM = 0.0
            DO 2860 I = 1,6
               ETHERM(I)   = EAVET(I) + FITHRM*ETCURX(I)
               ETHRMX(I,5) = EAVET(I) + FITHRM*ETCURX(I)
 2860       CONTINUE
C           WRITE(IFILE,'(/,A,/,1P,6E12.4)')
C    1    ' EAVET(i),i=1,6=',(EAVET(I),I=1,6)
C           WRITE(IFILE,'(/,A,/,1P,6E12.4)')
C    1    ' ETCURX(i),i=1,6=',(ETCURX(I),I=1,6)
C END FEB 1999
C END JUN 1996
            WRESID(1) = WPREST
            WRESID(2) = 0.0
         ENDIF
C     End of  (ETHRMX(2,5).NE.0.0.OR.ETHERM(2).NE.0.0
C                                    .OR.ETCURX(2).NE.0.0) condition.
C23456789012345678901234567890123456789012345678901234567890123456789012
C END JAN 1995
C BEG OCT 1998
         IF (IMOD.EQ.0) IXNUMB = IXNMBA
C BEG JAN 1999
         IF (IMOD.EQ.1.AND.IXNM0A.GT.0) IXNUMB = IXNMBA
C END JAN 1999
C BEG JUN 1999
         WMIDP  = WMID0 + WMID1 + WMID2
C END JUN 1999
C BEG NOV 2009
         WMDTOT = WMIDA + WMIDB + WMIDT
C END NOV 2009
         WPRESG = WPRSGA + WPRSGB
         WXXFLN = WXXFLA + WXXFLB + WXXFLT
         POPRNG = POPRNA + POPRNB + POPRNT
         POPISO = POPISA + POPISB + POPIST
         SHEARX = SHERXA + SHERXB + SHERXT
C BEG APR 2000
         SHEARY = SHERYA + SHERYB + SHERYT
C END APR 2000
         WXXXGL = WXXXGA + WXXXGB + WXXXGT
         DO 2018 I = 1,6
            EAVEP(I) = EAVEPA(I)
 2018    CONTINUE
         IF (IABT.EQ.1) THEN
            IF (IMOD.EQ.0) THEN
               IF (IXNUMB.EQ.0) IXNUMB = IXNMBT
            ENDIF
C BEG JAN 1999
            IF (IMOD.EQ.1.AND.IXNM0T.GT.0) THEN
               IF (IXNUMB.EQ.0) IXNUMB = IXNMBT
            ENDIF
C END JAN 1999
            FNYAVE = FNYAVA + FNYAVT
            FCEWEB = FCEWBA + FCEWBT
            FCEFLG = FCEFGA + FCEFGT
            POPRNA = POPRNA + POPRNT
            POPISA = POPISA + POPIST
            DO 2019 I = 1,11
               FCXWEB(I) = FCXWBA(I) + FCXWBT(I)
               FCYWEB(I) = FCYWBA(I) + FCYWBT(I)
 2019       CONTINUE
            DO 2020 I = 1,30
               FNYYP(I) = FNYYPA(I) + FNYYPT(I)
               FNYYP0(I) = FNYYPB(I)
 2020       CONTINUE
         ELSE
            FCEWEB = FCEWBA
            FCEFLG = FCEFGA
            FCEWBB = FCEWBB + FCEWBT
            FCEFGB = FCEFGB + FCEFGT
            FNYAVE = FNYAVA
            FNYAVB = FNYAVB + FNYAVT
            DFNYPB = DFNYPB + DFNYT0
            POPRNB = POPRNB + POPRNT
            POPISB = POPISB + POPIST
            DO 2021 I = 1,11
               FCXWEB(I) = FCXWBA(I)
               FCXWBB(I) = FCXWBB(I) + FCXWBT(I)
               FCYWEB(I) = FCYWBA(I)
               FCYWBB(I) = FCYWBB(I) + FCYWBT(I)
 2021       CONTINUE
            DO 2022 I = 1,30
               FNYYP(I) = FNYYPA(I)
               FNYYP0(I) = FNYYPB(I) + FNYYPT(I)
 2022       CONTINUE
         ENDIF
C     End of (IABT.EQ.1)...ELSE  condition.
C END OCT 1998
       ENDIF
C End of IF (IFLAT.EQ.0) section
C
       AXLEN = AXIAL
C BEG OCT 2006
      IF (NPRT.GE.1) WRITE(IFILE,'(/,/,/,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************',
     1' ************          CHAPTER 5              *****************',
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************'
      IF (NPRT.GE.0) WRITE(IFILE,'(A,I3,A)')
     1' **** CHAPTER  5: DESIGN PERTURBATION INDEX, IMOD=',IMOD,' *****'
      IF (NPRT.GE.1) WRITE(IFILE,'(/,A,/,A,/,A,/,A)')
     1 ' *************************************************************',
     1 ' CHAPTER 5  Get static response of panel to normal pressure',
     1 '            [1A], especially Section 9 and Section 20.5 and',
     1 '            Figs. 55 - 60 in [1A].'
C END OCT 2006
C BEG FEB 2005
C BEG FEB 2007
       IF (NPRT.GE.1)
     1   WRITE(IFILE,'(/,A,/,A,1P,E12.4,/,/,A,/,A,/,A,/,A,/,A)')
     1 ' Begin static response of entire panel to normal pressure:',
     1 ' Axial length of panel, AXLEN=',AXLEN,
     1 ' ** NOTE ** If the panel is curved it is treated as a complete',
     1 ' (360-degree) cylindrical shell. The axisymmetric',
     1 ' "hungry-horse" deformed state is computed for a single ring',
     1 ' spacing in Chapter 4. For curved panels, therefore, no',
     1 ' computations are performed for the entire panel here.'
C END FEB 2007
C END FEB 2005
C
C  Solve nonlinear equilibrium equations iteratively...
C
       IF (IYPGEN.EQ.0.OR.IFREEX.EQ.1) CALL MOVER(0.,0,YPGEN,1,M3G)
       CALL TRANS2(M3G,YPGEN,XG)
C
       IF (IMOD.EQ.0) THEN
          IGLFLT = 0
          RTEMP = R
          RTEST = 10000.*SQRT(AXIAL**2 + CIRC**2)
          AR = ABS(R)
          DIFF  = ABS(AR - RTEST)/AR
C BEG MAR 1996
          IF (IBEAM.EQ.1) DIFF = 0.
C END MAR 1996
          FNYTST = FNY + FNY0
       ENDIF
C
       KOUNT = 0
  171 CONTINUE
       KOUNT = KOUNT + 1
       IF (KOUNT.GT.5) GO TO 173
C
C BEG FEB 2005
       IF (NPRT.GE.2) WRITE(IFILE,*)' PEDG=',PEDG
       IF (NPRT.GE.2) WRITE(IFILE,'(A,I3)')' IBPREL=',IBPREL
C END FEB 2005
       IF (PEDG) GO TO 173
       IF (IBPREL.EQ.1) THEN
C
C  CLAMPED PREBUCKLING BRANCH:  Linear beam bending theory is
C  used for changes in curvature at the panel ends and at the
C  panel midlength. Formulas are from ROARK, 3rd edition, 1954,
C  Table III, p. 108, formula No. 33: bending of beam under uniform load.
C
         IGLFLT = 1
C  If there is significant in-plane shear loading, we must calculate
C  the ratio of load factors for general instability without and with
C  in-plane shear loading in order to get the beam-column response of
C  the panel subjected to combined normal pressure and in-plane loads...
         IF (IMOD.EQ.0) THEN
            EIEFF = CSREDU(4,4) - CSREDU(1,4)**2/CSREDU(1,1)
            EIEFF0 = EIEFF
            IF (ITYPE.EQ.3) THEN
               CSBEND(ISTEP) = MIN(CSBEND(ISTEP),EIEFF)
               IF (ISTEP.GT.1)  EIEFF = FAMPCS*CSBEND(ISTEP)
            ENDIF
            EIEFFX = 1.0
            IF (IREDUC.EQ.1) THEN
C  GET THE RATIO OF BUCKLING LOAD FACTORS WITHOUT AND WITH TRANSVERSE
C  SHEAR DEFORMATION EFFECT:
               IF (NPRT.GE.0) WRITE(IFILE,'(/,A)')
     1'****** BEGIN SUB. BUCPAN (BEAM PRESSURE RESPONSE, EIEFFX) *****'
C  WITHOUT TRANSVERSE SHEAR DEFORMATION EFFECT (EIGBM1)...
 9060          CONTINUE
               ILABEL=9060
               IF (NPRT.GE.1) WRITE(IFILE,*) 
     1                       ' LABEL NO. IN STRUCT=',ILABEL
               CALL BUCPAN(IFILE,IMOD,JJJ,ICONST,CONSTR,WORDB,ISTIF,
     1           0,0,0.5,CONMAX,FSGEN,FSPAN,FSLOC,EIGBM1,1,
     1           IPOINC,INUMTT,FKNOCK,IGENRL,CSLOPE,EILOCL,MLOCAL,
     1           ISKIN,MPGL,NPGL,MNOPGL,NNOPGL,ITUTOR,1,IQUICK,
     1           -1.0,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,NLOCAL,ITIP,
     1           IABP,1,EPSLOD(4),RWBEIG,RWBTOT,ICASE,FSBSTR,0,TLOCAL,
C BEG NOV 2003
     1           0,0,0,9060,ICD7D,ICD8D,ICD9D,0,ILOADS,MORCON,NCASES,6)
C END NOV 2003
               IF (IRESTY.EQ.1) GO TO 2222
C
C  WITH TRANSVERSE SHEAR DEFORMATION EFFECT (EIGBM2)...
 9070          CONTINUE
               ILABEL=9070
               IF (NPRT.GE.1) WRITE(IFILE,*) 
     1                       ' LABEL NO. IN STRUCT=',ILABEL
               CALL BUCPAN(IFILE,IMOD,JJJ,ICONST,CONSTR,WORDB,ISTIF,
     1           1,0,0.5,CONMAX,FSGEN,FSPAN,FSLOC,EIGBM2,1,
     1           IPOINC,INUMTT,FKNOCK,IGENRL,CSLOPE,EILOCL,MLOCAL,
     1           ISKIN,MPGL,NPGL,MNOPGL,NNOPGL,ITUTOR,1,IQUICK,
     1           -1.0,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,NLOCAL,ITIP,
     1           IABP,1,EPSLOD(4),RWBEIG,RWBTOT,ICASE,FSBSTR,0,TLOCAL,
C BEG NOV 2003
     1           0,0,0,9070,ICD7D,ICD8D,ICD9D,0,ILOADS,MORCON,NCASES,7)
C END NOV 2003
               IF (IRESTY.EQ.1) GO TO 2222
C
               EIEFFX = EIGBM1/EIGBM2
               IF (EIEFFX.LT.1.0) EIEFFX = 1.0
               IF (NPRT.GE.0) WRITE(IFILE,*)
     1  ' GENERAL INSTAB. LOAD FACTORS: Without t.s.d.: EIGBM1=',EIGBM1,
     1  '                               With    t.s.d.: EIGBM2=',EIGBM2,
     1  ' Bowing under pressure will be amplified by  : EIEFFX=',EIEFFX
               IF (NPRT.GE.0) WRITE(IFILE,*)
     1'******   END SUB. BUCPAN (BEAM PRESSURE RESPONSE, EIEFFX) *****'
            ENDIF
C        End of (IREDUC.EQ.1) condition.
            IF ((FNX+FNX0).LT.0.0) THEN
C  First, calculate the general instability load factor with only Nx acting:
C              FLENMD = PRELEN
               FLENMD = 0.5
               IF (NPRT.GE.0) WRITE(IFILE,'(/,A)')
     1'****** BEGIN SUB. BUCPAN (BEAM PRESSURE RESPONSE, Nx ONLY) *****'
 9080          CONTINUE
               ILABEL=9080
               IF (NPRT.GE.0) WRITE(IFILE,*) 
     1                       ' LABEL NO. IN STRUCT=',ILABEL
               CALL BUCPAN(IFILE,IMOD,JJJ,ICONST,CONSTR,WORDB,ISTIF,
     1           0,0,FLENMD,CONMAX,FSGEN,FSPAN,FSLOC,EIGBM1,1,
     1           IPOINC,INUMTT,FKNOCK,IGENRL,CSLOPE,EILOCL,MLOCAL,
     1           ISKIN,MPGL,NPGL,MNOPGL,NNOPGL,ITUTOR,1,IQUICK,
     1           FNX+FNX0,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,NLOCAL,ITIP,
     1           IABP,1,EPSLOD(4),RWBEIG,RWBTOT,ICASE,FSBSTR,0,TLOCAL,
C BEG NOV 2003
     1           0,0,0,9080,ICD7D,ICD8D,ICD9D,0,ILOADS,MORCON,NCASES,8)
C END NOV 2003
               IF (IRESTY.EQ.1) GO TO 2222
               IF (NPRT.GE.2) WRITE(IFILE,'(A,1PE12.4,/,A,/,A,/,A)')
     1       ' Wide column instability load factor, EIGBM1=',EIGBM1,
     1       ' EIGBM1 is used with the eq. EIGBM1=4*pi**2*EI/L**2 in',
     1       ' order to obtain an effective bending stiffness, EI,',
     1       ' for predicting the bending of the panel under pressure.'
               IF (NPRT.GE.0) WRITE(IFILE,*)
     1'******   END SUB. BUCPAN (BEAM PRESSURE RESPONSE, Nx ONLY) *****'
C
C  Next, calculate what the effective EI of the beam must be to yield
C  the buckling load factor, EIGBM1. The Euler buckling load of a clamped
C  beam is:  P(euler) = 4*pi**2*EI/L**2. Therefore:
C                  EI = EIGBM1*(FNX+FNX0)*L**2/(4*pi**2)
               EIEFF = EIGBM1*FSAFE2*ABS(FNX+FNX0)*AXIAL**2/(4.*PI**2)
               IF (ITYPE.EQ.3) THEN
                  CSBEND(ISTEP) = MIN(CSBEND(ISTEP),EIEFF)
                  IF (ISTEP.GT.1)  EIEFF = FAMPCS*CSBEND(ISTEP)
               ENDIF
C
C  Next, calculate the general instability load factor with Nx, Ny, Nxy
C  acting:
               IF (ABS(FNXY).GT.0.1*ABS(FNX+FNX0)) THEN
                  IF (NPRT.GE.0) WRITE(IFILE,'(/,A)')
     1'***** BEGIN SUB. BUCPAN (BEAM PRESSURE RESPONSE, Nx,Ny,Nxy) ****'
 9090             CONTINUE
                  ILABEL=9090
                  IF (NPRT.GE.1) WRITE(IFILE,*) 
     1                       ' LABEL NO. IN STRUCT=',ILABEL
                  CALL BUCPAN(IFILE,IMOD,JJJ,ICONST,CONSTR,WORDB,ISTIF,
     1             0,0,FLENMD,CONMAX,FSGEN,FSPAN,FSLOC,EIGBM2,1,
     1             IPOINC,INUMTT,FKNOCK,IGENRL,CSLOPE,EILOCL,MLOCAL,
     1             ISKIN,MPGL,NPGL,MNOPGL,NNOPGL,ITUTOR,1,IQUICK,
     1             FNX+FNX0,FNY+FNY0,FNXY,0.,0.,0.,0.,0.,0.,0.,0.,0.,
     1             NLOCAL,ITIP,IABP,1,EPSLOD(4),RWBEIG,RWBTOT,ICASE,
     1             FSBSTR,0,TLOCAL,0,0,0,9090,ICD7D,ICD8D,ICD9D,0,
C BEG NOV 2003
     1             ILOADS,MORCON,NCASES,9)
C END NOV 2003
                  IF (IRESTY.EQ.1) GO TO 2222
                  IF (NPRT.GE.0) WRITE(IFILE,*)
     1'*****  END  SUB. BUCPAN (BEAM PRESSURE RESPONSE, Nx,Ny,Nxy) ****'
C
C  Next, calculate the ratio, EBEAMR = EIGBM1/EIGBM2, to be used in OUTPRS:
C
                  IF (EIGBM1.GT.0.0.AND.EIGBM2.GT.0.0)
     1               EBEAMR = EIGBM1/EIGBM2
                  IF (EBEAMR.LT.1.0) EBEAMR = 1.0
                  IF (NPRT.GE.0) WRITE(IFILE,*)
     1  ' GENERAL INSTAB. LOAD FACTORS:   With Nx only: EIGBM1=',EIGBM1,
     1  '                             With Nx, Ny, Nxy: EIGBM2=',EIGBM2,
     1  ' Ratio to be used with beam-column eq(OUTPRS): EBEAMR=',EBEAMR,
     1  ' Effective beam bending stiffness for pressure: EIEFF=',EIEFF
               ENDIF
C           End of (ABS(FNXY).GT.0.1*ABS(FNX+FNX0)) condition.
            ENDIF
C        End of ((FNX+FNX0).LT.0.0) condition.
         ENDIF
C     End of (IMOD.EQ.0) condition.
         EIEFFR = (CSREDU(4,4) - CSREDU(1,4)**2/CSREDU(1,1))/EIEFF0
         IF (NPRT.GE.0) WRITE(IFILE,'(/,A)')
     1'****** BEGIN SUBROUTINE OUTPRS (OVERALL PRESSURE RESPONSE) *****'
         INODE = I5G(1)/2 + 1
         CALL OUTPRS(IFILE,NSEGG(1),I5G,WPRESG,WPRES,WDDPRS,IGLFLT,
     1   AXIAL,RESPRS,EPSPRS,1,EAVEP,CIRC,INODE,FNXP0,FNYP0,NPRT,-P,
     1   DSURF,DNEUTX,DNEUTY,CSN,NXAVEP,1,IMOD,JJJ,1,IBPREL,ICASE)
         IF (NPRT.GE.0) WRITE(IFILE,*)
     1'****** END SUBROUTINE OUTPRS (OVERALL PRESSURE RESPONSE) *****'
C BEG MAR 1998
         IF (IMOD.EQ.0.AND.IFREEX.EQ.0
     1               .AND.ABS(WPRESG).GT.0.2*MIN(AXIAL,CIRC)) THEN
            WRITE(IFILE,'(A,/A,/,A,1P,E12.4,A,/,A,/,A)')
     1    ' Changing prebuckling boundary condition from clamped to',
     1    ' simple support (still in-plane held) because normal',
     1    ' deflection, WPRESG=',WPRESG,', is very large. Therefore,',
     1    ' nonlinear theory must be used for the overall static',
     1    ' response of the panel to normal pressure.'
            IBPREL = 0
            IGLFLT = 0
            GO TO 1712
         ENDIF
C END MAR 1998
         GO TO 173
       ENDIF
C  End of IF (IBPREL.EQ.1) section
 1712  CONTINUE
       IF (INEUT.EQ.1) CALL MOVER(CSN,1,CSP,1,36)
       IF (INEUT.EQ.0) CALL MOVER(CS, 1,CSP,1,36)
C BEG MAR 2005
C23456789012345678901234567890123456789012345678901234567890123456789012
       IF (IMOD.EQ.0) ICHLNG = 0
       IF (IFLAT.EQ.1.AND.IMOD.EQ.0) THEN
          TSTLNG = (AXLEN/CIRC)*SQRT(CSN(5,5)/CSN(4,4))
          IF (TSTLNG.GE.2.0.AND.IBEAM.EQ.0.AND.ITESTB.EQ.0) ICHLNG = 1
       ENDIF
       IF (ICHLNG.EQ.1) THEN
          CALL MOVER(DSG,1,DSGS,1,200)
          DO 1714 I = 1,200
             DSG(I) = DSG(I)*AXLEN/CIRC
 1714     CONTINUE
          IF (INEUT.EQ.1) CALL CSHIFT(CS,DNEUTY,CSP)
          CALL CGCIJP(CSP,CSPNEW)
          CALL MOVER(CSPNEW,1,CSP,1,36)
          CALL MOVER(THERMS,1,THRSVE,1,6)
          CALL MOVER(CX,1,CXSAVX,1,180)
          CALL MOVER(CY,1,CYSAVX,1,180)
          CALL MOVER(CS,1,CSSAVX,1,36)
          CALL CGCIJP(CS,CSPNEW)
          CALL MOVER (CSPNEW,1,CS,1,36)
          CALL MOVER (CYSAVX,1,CX,1,180)
          CALL MOVER (CXSAVX,1,CY,1,180)
          TEMPZZ = THERMS(1)
          THERMS(1) = THERMS(2)
          THERMS(2) = TEMPZZ
          TEMPZZ = THERMS(4)
          THERMS(4) = THERMS(5)
          THERMS(5) = TEMPZZ
          AXIALS = AXIAL
          AXLENS = AXLEN
          CIRCSZ = CIRC
          AXLEN = CIRC
          AXIAL = CIRC
          CIRC = AXLENS
          LENMDS = LENMOD
          LENMOD = 1.0
          DSURFS = DSURF
          DSURF = DNEUTY
          DNOOTX = DNEUTX
          DNEUTX = DNEUTY
          DNOOTY = DNEUTY
          DNEUTY = DNOOTX
          RSAVEZ = R
          RAD2SV = RAD2
          R = RAD2
          RAD2 = RSAVEZ
          ISTF1S = ISTIF(1)
          ISTF2S = ISTIF(2)
          ISTIF(1) = ISTIF(2)
          ISTIF(2) = ISTF1S 
          B1SAVE = B(1)
          H1SAVE = H(1)
          B2SAVE = B(2)
          H2SAVE = H(2)
          B(1) = B2SAVE
          B(2) = B1SAVE
          H(1) = H2SAVE
          H(2) = H1SAVE
          NXAVEX = NXAVEP
          NXAVEP = NYAVEP
       ENDIF
C   End of ICHLNG.EQ.1 condition.
C END MAR 2005
       IF (NPRT.GE.0) WRITE(IFILE,'(/,A)')
     1'****** BEGIN SUBROUTINE BUCKLE (OVERALL PRESSURE RESPONSE) *****'
C BEG AUG 2001
 9415  CONTINUE
       ILABEL=9415
       IF (NPRT.GE.1) WRITE(IFILE,*) 
     1               ' LABEL NO. IN STRUCT=',ILABEL
C END AUG 2001
       CALL BUCKLE(1,IMOD,IFILE,IWG,ILOCG,DSG,ASG,BSG,ISTORT,DIAGG,
     1    CG,DG,DIG,XG,YG,ZG,EIGG,0,IYGEN,RESULT,AXLEN,M3G,IDRWG,
     1    NBLKG,NGBKG,NKFG,1,IMAXBG,KMAXBG,IPV2G,IBVCG,3000,3,THERMX,
     1    THERMS,P,KAPPA1,KAPPA2,0,WPRESG,IUNK,CSP,
     1    -NXAVEP,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,RTEMP,JJJ,1,IABP,
C BEG AUG 2001
     1    LENMOD,IFREEX,TEMP(1,1),IMTEMP,WPB1,EIGITR(10),0,0.,0,0,0,
     1    ILABEL)
C END AUG 2001
       IF (NPRT.GE.0) WRITE(IFILE,*)
     1'****** END SUBROUTINE BUCKLE (OVERALL PRESSURE RESPONSE) *****'
C
       IF (IUNK.EQ.0) GO TO 14
       IYPGEN = 1
       IF (IMOD.EQ.0) CALL TRANS1(M3G,XG,YPGEN)
C
C  Get membrane strain components (ex,ey) and stress resultants (Nx,Ny)
C  corresponding to converged state..
C
       IF (NPRT.GE.0) WRITE(IFILE,'(/,A)')
     1'****** BEGIN SUBROUTINE BUCKLE (OVERALL PRESSURE RESPONSE) *****'
C BEG AUG 2001
 9420  CONTINUE
       ILABEL=9420
       IF (NPRT.GE.1) WRITE(IFILE,*) 
     1               ' LABEL NO. IN STRUCT=',ILABEL
C END AUG 2001
       CALL BUCKLE(1,IMOD,IFILE,IWG,ILOCG,DSG,ASG,BSG,ISTORT,DIAGG,
     1    CG,DG,DIG,XG,YG,ZG,EIGG,0,IYGEN,RESULT,AXLEN,M3G,IDRWG,
     1    NBLKG,NGBKG,NKFG,1,IMAXBG,KMAXBG,IPV2G,IBVCG,3000,3,THERMX,
     1    THERMS,P,KAPPA1,KAPPA2,1,WPRESG,IUNK,CSP,
     1    -NXAVEP,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,RTEMP,JJJ,1,IABP,
C BEG AUG 2001
     1    LENMOD,IFREEX,TEMP(1,1),IMTEMP,WPB1,EIGITR(11),0,0.,0,0,0,
     1    ILABEL)
C END AUG 2001
       IF (NPRT.GE.0) WRITE(IFILE,*)
     1'****** END SUBROUTINE BUCKLE (OVERALL PRESSURE RESPONSE) *****'
C BEG MAR 1998
       IF (NPRT.GE.0) WRITE(IFILE,'(A,1P,E12.4)')
     1 ' Maximum overall normal displacement of panel under pressure=',
     1 WPRESG
       WPMAX = WPRESG
C END MAR 1998
C
C  Get normal displacement distribution and change in curvature
C
       NXAVES = NXAVEP
       INODE = I5G(1)/2 + 1
C
C BEG MAR 2005
       IF (IMOD.EQ.0.AND.ICHLNG.EQ.1.AND.NPRT.GE.1)
     1 WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' ************** NOTE ******************** NOTE ****************',
     1' Only for the overall bending of the flat panel under normal',
     1' pressure the "x" and "y" directions and properties were',
     1' exchanged because the panel is shorter/stiffer in the "y"',
     1' direction than in the "x" direction. Therefore the approximate',
     1' solution becomes more accurate. Note that the following output',
     1' from SUBROUTINE OUTPRS corresponds to the "switched" (x,y).',
     1' The "x" and "y" directions and properties are "unswitched"',
     1' following the call to OUTPRS, so that the output from FORCEX',
     1' represents the state of the panel as set up by the user.',
     1' See Item No. 616 in the file, ../panda2/doc/pana2.news.',
     1' ***************************************************************'
C END MAR 2005
       IF (NPRT.GE.0) WRITE(IFILE,'(/,A)')
     1'****** BEGIN SUBROUTINE OUTPRS (OVERALL PRESSURE RESPONSE) *****'
       CALL OUTPRS(IFILE,NSEGG(1),I5G,WPRESG,WPRES,WDDPRS,IGLFLT,
     1   AXLEN,RESPRS,EPSPRS,1,EAVEP,CIRC,INODE,FNXP0,FNYP0,NPRT,-P,
     1   DSURF,DNEUTX,DNEUTY,CSP,NXAVEP,IFREEX,IMOD,JJJ,INEUT,
     1   IBPREL,ICASE)
       IF (NPRT.GE.0) WRITE(IFILE,*)
     1'****** END SUBROUTINE OUTPRS (OVERALL PRESSURE RESPONSE) *****'
C BEG MAR 1998
       IF (NPRT.GE.0) WRITE(IFILE,'(A,1P,E12.4)')
     1' Maximum overall normal displacement of panel under pressure=',
     1 WPRESG
C END MAR 1998
       IF (ICHLNG.EQ.1) THEN
          CALL MOVER(DSGS,1,DSG,1,200)
          CALL MOVER(THRSVE,1,THERMS,1,6)
          CALL MOVER(CXSAVX,1,CX,1,180)
          CALL MOVER(CYSAVX,1,CY,1,180)
          CALL MOVER(CSSAVX,1,CS,1,36)
          AXIAL  = AXIALS
          AXLEN  = AXLENS
          CIRC = CIRCSZ
          LENMOD = LENMDS 
          DSURF = DSURFS
          DNEUTX = DNOOTX
          DNEUTY = DNOOTY
          TEMPZZ = FNXP0
          FNXP0 = FNYP0
          FNYP0 = TEMPZZ
          TEMPZZ = EAVEP(1)
          EAVEP(1) = EAVEP(2)
          EAVEP(2) = TEMPZZ
          TEMPZZ = EAVEP(4)
          EAVEP(4) = EAVEP(5)
          EAVEP(5) = TEMPZZ
          TEMPZZ = SHEARX
          SHEARX = SHEARY
          SHEARY = TEMPZZ
          TEMPZZ = XMAX
          XMAX = YMAX
          YMAX = TEMPZZ
          TEMPZZ = KAPPA1
          KAPPA1 = KAPPA2
          KAPPA2 = TEMPZZ
          R = RSAVEZ
          RAD2 = RAD2SV
          ISTIF(1) = ISTF1S
          ISTIF(2) = ISTF2S
          B(1) = B1SAVE
          B(2) = B2SAVE
          H(1) = H1SAVE
          H(2) = H2SAVE
          NXAVEP = NXAVEX
          WDDPRS = 0.0
          CALL MOVER(NXPRES,1,SVPRES,1,184)
          CALL MOVER(NYPRES,1,NXPRES,1,184)
          CALL MOVER(SVPRES,1,NYPRES,1,184)
          CALL MOVER(MXPRES,1,SVPRES,1,184)
          CALL MOVER(MYPRES,1,MXPRES,1,184)
          CALL MOVER(SVPRES,1,MYPRES,1,184)
          CALL MOVER(EP1MID,1,SVPRES,1,184)
          CALL MOVER(EP2MID,1,EP1MID,1,184)
          CALL MOVER(SVPRES,1,EP2MID,1,184)
          CALL MOVER(EP4MID,1,SVPRES,1,184)
          CALL MOVER(EP5MID,1,EP4MID,1,184)
          CALL MOVER(SVPRES,1,EP5MID,1,184)
       ENDIF
C   End of ICHLNG.EQ.1 condition.
C END MAR 2005
C
C      IF (IFLAT.EQ.0.AND.NAFN.EQ.0) GO TO 173
C      DIFF = 0.0
C      IF (FNXP0.NE.0.0) DIFF = ABS(NXAVES - NXAVEP)/ABS(FNXP0)
C      IF (DIFF.GT.0.01) GO TO 171   (PANDA2 no longer iterates here)
  173  CONTINUE
   14  CONTINUE
       IF (IMOD.EQ.0.AND.JJJ.EQ.0.AND.NPRT.GE.0) THEN
           WRITE(IFILE,9) -P
    9      FORMAT(' End of equilibrium calculations for entire panel'/
     1   ' with smeared stiffeners under uniform normal pressure,'/
     1   ' p =',1PE12.4)
C BEG FEB 2007
           IF (PEDG) WRITE(IFILE,'(A,/,A,/,A)')
     1   ' ***** NOTE ****** See Chapter 4 for static response of a',
     1   ' single "skin"-ring module of the curved panel, which is',
     1   ' modelled as a complete (360-degree) cylindrical shell there.'
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2007
       ENDIF
C
      ENDIF
C  End of IF (GENPRS.AND.(IFLAT.EQ.0.OR.P.NE.0.0)) section
C BEG MAR 1996
      IF (IBEAM.EQ.1) THEN
         CIRC = CIRCSX
         CALL MOVER(DSGS,1,DSG,1,200)
      ENDIF
C END MAR 1996
C
C
C*********************************************************************
C END DERIVATION OF BEHAVIOR OF ENTIRE PANEL (SMEARED STIFFENERS)
C UNDER UNIFORM NORMAL PRESSURE.
C*********************************************************************
C
C
C
C*********************************************************************
C BEGIN DERIVATION OF BEHAVIOR OF SKIN-STRINGER PANEL MODULE
C UNDER UNIFORM NORMAL PRESSURE.
C*********************************************************************
C
C BEG FEB 1996
C BEG MAR 1996
C BEG APR 1996
C     IF (IBEAM.EQ.1.OR.ITESTB.EQ.1) ISKIPL = 1
      IF (IBEAM.EQ.1.OR.ITESTB.EQ.1.OR.IONEST.EQ.1) ISKIPL = 1
C END APR 1996
C END MAR 1996
C END FEB 1996
      IF (IMOD.EQ.0.AND.CX(4,4,1).GT.0.5*CX(4,4,5)) ISKIPL = 1
C BEG JULY 2007
      IF (NPRT.GE.1) THEN
      IF (P.EQ.0.OR.ISTIF(1).EQ.0.OR.ISOGRD.NE.0
     1          .OR.ISKIPL.NE.0)
     1  WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' *************************************************************',
     1' CHAPTER 5b (bending of a single skin-stringer module',
     1' under uniform normal pressure) is not executed because:',
     1' (P.EQ.0.OR.ISTIF(1).EQ.0.OR.ISOGRD.NE.0',
     1'        .OR.ISKIPL.NE.0), in which ISKIPl is defined by',
     1' IF (IBEAM.EQ.1.OR.ITESTB.EQ.1.OR.IONEST.EQ.1) ISKIPL = 1',
     1' IF (IMOD.EQ.0.AND.CX(4,4,1).GT.0.5*CX(4,4,5)) ISKIPL = 1'
      IF (NPRT.GE.0) WRITE(IFILE,'(A,I3,A)')
     1' **** CHAPTER 5b: DESIGN PERTURBATION INDEX, IMOD=',IMOD,' *****'
      ENDIF 
C END JULY 2007
      IF (P.NE.0.AND.ISTIF(1).NE.0.AND.ISOGRD.EQ.0
     1          .AND.ISKIPL.EQ.0) THEN
C
C  Find bending of panel module under uniform normal pressure.
C
         IF (IMOD.EQ.0.AND.JJJ.EQ.0.AND.NPRT.GE.1) THEN
C BEG FEB 2007
            WRITE(IFILE,'(/,A,/,A,/,A,1P,E12.4,A,/,A,/,A)')
     1' **** CHAPTER 5b ****:',
     1    ' Next, find bending of a single skin-stringer panel',
     1    ' module under uniform normal pressure, p=',-P,', See',
     1    ' Section 9 of Ref.[1A].The panel skin is assumed to be flat',
     1    ' Also see Fig. 56 on p. 555 of [1A] for an example.'
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2007
   10      FORMAT(/' Next, find bending of panel module under uniform'/
     1    ' normal pressure, p=',1PE12.4,'. See Section 9 of [1A].'/
     1    ' Also see Fig. 56 on p. 555 of [1A] for an example.')
C           IF (IFREEY.EQ.0) WRITE(IFILE,701)
C           IF (IFREEY.EQ.1) WRITE(IFILE,7011)
C
C           IF (ITUTOR.EQ.1.AND.(CIRC.LE.B(1).AND.AXIAL.LE.B(2)))
C    1      CALL DATUM(IFILE4,33,0,0,INT,REALL,CHARAC,IOUT,0,IPROMP)
C
C  Get behavior of area between adjacent rings and including
C  a single stringer. Use the local panel module with same boundary
C  conditions as are used for wide column buckling. Panel is assumed
C  to be clamped at the edge in the plane of the screen and the
C  opposite edge. Symmetry conditions are imposed on the two edges
C  that are normal to the plane of the screen. If nonlinear theory is
C  used, the nonlinear equations are solved by Newton's method.
C
C           IF (ITUTOR.EQ.1) THEN
C             CALL DATUM(IFILE4,37,0,0,INT,REALL,CHARAC,IOUT,0,IPROMP)
C             REWIND IFILE4
C             IF (ISTIF(1).EQ.1) CALL DATUM(IFILE4,6,0,0,INT,REALL,
C    1                                      CHARAC,IOUT,0,IPROMP)
C             IF (ISTIF(1).EQ.2) CALL DATUM(IFILE4,7,0,0,INT,REALL,
C    1                                      CHARAC,IOUT,0,IPROMP)
C             IF (ISTIF(1).EQ.3) CALL DATUM(IFILE4,8,0,0,INT,REALL,
C    1                                      CHARAC,IOUT,0,IPROMP)
C             IF (ISTIF(1).EQ.4) CALL DATUM(IFILE4,9,0,0,INT,REALL,
C    1                                      CHARAC,IOUT,0,IPROMP)
C           ENDIF
         ENDIF
C     End of (IMOD.EQ.0.AND.JJJ.EQ.0.AND.NPRT.GE.0) condition.
C
C  Get resultants in various segments of panel module from the
C  results of the global (smeared-stiffener) panel model, plus the
C  applied loads Nx,Ny,Nxy from Load Set A, plus the applied loads
C  Nxo,Nyo, Nxyo from Load Set B, plus the thermal loads from
C  curing and other thermal effects.
C
         IF (IMOD.EQ.0) THEN
C          IF (ITUTOR.EQ.1) THEN
C             REWIND IFILE4
C             CALL DATUM(IFILE4,25,0,0,INT,REALL,CHARAC,IOUT,0,IPROMP)
C          ENDIF
C BEG NOV 2003
           IF (NPRT.GE.1) WRITE(IFILE,'(/,A,/,A,/,A,/,A)')
     1'***** BEGIN SUBROUTINE BUCPAN (MODULE PRESSURE RESPONSE) *****',
     1'***** This execution of BUCPAN is needed to get buckling load',
     1'***** factor that is used to determine axial "softening" due',
     1'***** to prebuckling destabilizing loads.'
C END NOV 2003
 9100      CONTINUE
           ILABEL=9100
           IF (NPRT.GE.0) WRITE(IFILE,*) ' LABEL NO. IN STRUCT=',ILABEL
           CALL BUCPAN(IFILE,IMOD,JJJ,ICONST,CONSTR,WORDB,ISTIF,IREDUC,
     1          KOITER,PRELEN,CONMAX,FSGEN,FSPAN,FSLOC,EIGBOW,1,IPOINC,
     1          INUMTT,FKNOCK,IGENRL,CSLOPE,EILOCL,MLOCAL,ISKIN,
     1          MSHEAR,NSHEAR,MNOSHR,NNOSHR,ITUTOR,IWIDE,IQUICK,
     1          FNX,FNY,FNXY,FNX0,FNY0,FNXY0,FNXP0,
     1          FNYP0,FNXYP0,FNXPL0,FNYPL0,FNXYPL,NLOCAL,ITIP,
     1          IABP,1,EPSLOD(4),RWBEIG,RWBTOT,ICASE,FSBSTR,1,TLOCAL,
C BEG NOV 2003
     1         0,0,0,9100,ICD7D,ICD8D,ICD9D,0,ILOADS,MORCON,NCASES,10)
C END NOV 2003
           IF (IRESTY.EQ.1) GO TO 2222
           EIGBOP = EIGBOW
           IF (NPRT.GE.3) THEN
              WRITE(IFILE,'(/,A,/,A)')
     1     ' GENERAL BUCKLING LOAD FACTOR USED FOR CALCULATION OF THE',
     1      ' AMPLIFICATION OF BOWING DUE TO NORMAL PRESSURE.'
              WRITE(IFILE,'(A,1PE12.4,A,I3,A,I3,A)')
     1            ' EIGBOW(M,N)=',EIGBOW,'(',MGEN1,',',NWIDPR,')'
              WRITE(IFILE,*) 
     1'****** END SUBROUTINE BUCPAN (MODULE PRESSURE RESPONSE) *******'
           ENDIF
         ENDIF  
C    End of (IMOD.EQ.0) condition.
C
         MNOSHR = MSHEAR
         NNOSHR = NSHEAR
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG DEC 2003
         IF (NPRT.GE.0) WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A)')
     1' ***** BEGIN SUBROUTINE FORCES (MODULE PRESSURE RESPONSE) *****',
     1' Purpose is to obtain resultants in each segment of the skin-',
     1' stringer single module model for input to the nonlinear static',
     1' response of single skin-stringer module to normal pressure.',
     1' See Section 10, pp 506-509, of Reference [1A].'
C END DEC 2003
         CALL FORCEX(IFILE,0,ITUTOR,NSEG,CX,CY,CS,FNX,FNY,FNXY,RESULT,
     1         RESFIX,RESEIG,ISTIF,WRESID,WBEND,ZPARTX,ZPARTY,
     1         EIGBOP,EPSLOD,ETHERM,THERMX,THERMY,LENMOD,CSINV,
     1         ETHRMX,ETHRMY,ICOCUR,NPRT,EPSTOT,EPSFIX,EPSEIG,
     1         FSTRN,GSTRN,S1,S2,FNX0,FNY0,FNXY0,EPSFXL,RESFXL,
     1         RESTOT,FNXP0,FNYP0,WPRESG,EAVEP,RESPGL,EPSPGL,
     1         RESPRS,EPSPRS,P,FNXPL0,FNYPL0,EAVEPL,WPRES,EPSLDF,
     1         WIMPG,WIMPL,IMOD,IABP,FSLOC,IWIDE,JJJ,AMPLIT,ECC,
     1         RWBTOT,RWBEIG,1,IBOUND,IBPRE,PRELEN,ITYPE,
     1         THSMRX,THSMRY,ETSMRX,ETSMRY,ICASE,MX,MY,IABT,AMPLT2,
C BEG OCT 1998
     1         NNODES,TEMP,IMTEMP,IQUICK,ETHRMS,RESBGL,EPSBGL,EAVEPB)
C END OCT 1998
         IF (NPRT.GE.0) WRITE(IFILE,*)
     1'****** END SUBROUTINE FORCES (MODULE PRESSURE RESPONSE) *******'
C
C BEG DEC 1998
C23456789012345678901234567890123456789012345678901234567890123456789012
         FNYIND = 0.
         IF (.NOT.PEDG.AND.ISTIF(1).NE.5
     1                .AND.ISOGRD.EQ.0.AND.ISTIF(1).NE.0) THEN
            FNYIND = CX(1,2,1)*EAVEP(1) + CX(2,2,1)*EAVEP(2)
     1             + CX(2,4,1)*EAVEP(4) + CX(2,5,1)*EAVEP(5)
            IF (NPRT.GE.2) WRITE(IFILE,'(/,A,/,A,1P,E12.4)')
     1    ' Hoop resultant induced in panel skin by global bending of',
     1    ' panel under normal pressure, Nyskin(induced)=',FNYIND
         ENDIF
         FNYSUB = 0.
         IF (FNYIND.GT.0.) FNYSUB = FNYIND
C        RESTST = RESULT(2,1,1)
         RESTST = RESULT(2,1,1) - FNYSUB
         FNYSV1 = RESULT(2,1,1)
         FNYSV2 = RESULT(2,2,1)
         IF (ISTIF(1).NE.5.AND.FNYIND.GT.0.) THEN
            RESULT(2,1,1) = RESTST
            RESULT(2,2,1) = RESTST
         ENDIF
         IF (NPRT.GE.2.AND.FNYIND.GT.0.0.AND.ISTIF(1).NE.5
     1                  .AND.ISOGRD.EQ.0.AND.ISTIF(1).NE.0)
     1   WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A)')
     1 ' Hoop tension is induced in the panel skin due to global',
     1 ' bending under normal pressure. For conservativeness, this',
     1 ' hoop tension is neglected in the computation of local',
     1 ' transverse bending of the panel skin between stringers',
     1 ' computed next for the discretized single skin-stringer',
     1 ' module. It is included, however, when stress is computed.'
C END DEC 1998
C
C  Fill the prestress arrays NXFIX, NYFIX with resultants found from
C  the thermal phenomena and from the applied in-plane loads NX,
C  NY, NXY and NX0, NY0...
C
         DO 6 ISEG = 1,NSEGB5
C BEG JUN 2004
            CALL IDSEG(ISTIF(1),ISEG,NSEGB5,B20(1),W20(1),J,IFAY)
C END JUN 2004
            I5I = I5(ISEG)
            DO 5 I = 1,I5I
               NXFIX(I,ISEG) = RESULT(1,J,1)
C BEG APR 1996
               IF (ISTIF(1).EQ.5.AND.IFAYT(1).EQ.1
     1                          .AND.(ISEG.EQ.5.OR.ISEG.EQ.6))
     1            NXFIX(I,ISEG) = NXFIX(I,ISEG) + RESULT(1,2,1)
C END APR 1996
               NYFIX(I,ISEG) = RESULT(2,J,1)
               NXYFIX(I,ISEG)= RESULT(3,J,1)
    5       CONTINUE
    6    CONTINUE
C
         IF (ISTIF(1).EQ.5) RESTST = MIN(RESULT(2,1,1),RESULT(2,3,1))
C BEG OCT 1995
C        IF (ISWWID.EQ.1.OR.RESTST.LT.0.0) THEN
         IF (ISWWIX.EQ.1.OR.RESTST.LT.0.0) THEN
C END JULY 1995
C
C   Test for width-wise wide column buckling of panel skin under
C   the hoop component of loading. The width-wise wide column
C   buckling load is given by P(cr) = 4*pi**2*EI/L**2, in which EI
C   is the effective bending rigidity about the neutral plane for
C   bending in the y-direction and L is the width of the wide column.
C   In the coding below, WIDLAM is the width-wise wide column buckling
C   load factor for a CLAMPED wide column.  The reason we
C   must test for this kind of buckling here is that if it is critical
C   the nonlinear problem for prismatic response of the single panel
C   module under pressure may blow up, causing the run to crash. If
C   WIDLAM is less than or equal to unity, we set up a constraint
C   condition so that the width-wise wide column mode of buckling
C   will not occur.  In this way, we avoid the possibility of run
C   crashes caused by the failure of convergence of the nonlinear
C   equilibrium problem of the single panel module loaded by normal
C   pressure.
C   
            PI = 3.1415927
            WIDTH = B(1)
C BEG NOV 1995
            IF (ISTIF(1).EQ.5) WIDTH = B(1) - B2(1)
C END NOV 1995
            IF (ISTIF(1).EQ.4) WIDTH = B(1) - B2(1)
            EICOL = CX(5,5,1) - CX(2,5,1)**2/CX(2,2,1)
C BEG JULY 1995
            WIDLAM = 1000000.
C BEG AUG 1995
C BEG OCT 1995
            IF (ISTIF(1).NE.0.AND.WIDTH.LT.0.5*(B(2)-B2(2))
C           IF (ISTIF(1).NE.0.AND.WIDTH.LT.0.2*(B(2)-B2(2))
C END OCT 1995
     1          .AND.WIDTH.GT.0.0.AND.RESULT(2,1,1).LT.0.0)
     1          WIDLAM = 4.0*PI*PI*EICOL/(-RESULT(2,1,1)*WIDTH**2)
C BEG OCT 1995
C           IF (ISWWID.EQ.1.AND.WIDTH.GT.0.0)
            IF (ISWWIX.EQ.1.AND.WIDTH.GT.0.0)
C END OCT 1995
C END AUG 1995
     1          WIDLAM = 4.0*PI*PI*EICOL/(-RESULT(2,1,1)*WIDTH**2)
            IF (WIDLAM.LT.0.) WIDLAM = 1000000.
C END JULY 1995
            IF (ISTIF(1).EQ.5) THEN
               EICOL2 = CX(5,5,3) - CX(2,5,3)**2/CX(2,2,3)
C BEG JULY 1996
               WIDLM2 = 1000000.
               IF (WIDTH.GT.0.0.AND.RESULT(2,3,1).LT.0.0)
     1           WIDLM2 = 4.0*PI*PI*EICOL2/(-RESULT(2,3,1)*WIDTH**2)
C END JULY 1996
               IF (WIDLM2.GT.0.) WIDLAM = MIN(WIDLAM,WIDLM2)
            ENDIF
            IF (ISTIF(1).EQ.4) THEN
               ID = 2
               IF (IFAY(1).EQ.1) ID = 1
               EICOL2 = CX(5,5,ID) - CX(2,5,ID)**2/CX(2,2,ID)
C BEG JULY 1996
               WIDLM2 = 1000000.
               IF (W2(1).GT.0.0.AND.RESULT(2,ID,1).LT.0.0)
     1           WIDLM2 = 4.0*PI*PI*EICOL2/(-RESULT(2,ID,1)*W2(1)**2)
C END JULY 1996
               IF (WIDLM2.GT.0.) WIDLAM = MIN(WIDLAM,WIDLM2)
            ENDIF
C BEG NOV 1994
            IF (IMOD.EQ.0) WIDLM0 = ABS(WIDLAM)
C END NOV 1994
C BEG OCT 1995
C           IF (ISWWID.EQ.1) THEN
            IF (ISWWIX.EQ.1) THEN
C END OCT 1995
               WIDLAM = ABS(WIDLAM)
               IUNK = 0
               GO TO 16
            ENDIF
            IF (IMOD.EQ.0.AND.WIDLAM.LT.1.1.AND.WIDLAM.GT.0.0) THEN
C BEG OCT 1995
C              ISWWID = 1
               ISWWIX = 1
C END OCT 1995
               IUNK = 0
C BEG DEC 1994
C BEG DEC 2003
               IF (ICASE.EQ.1) WRITE(IFILE,1013)
               IF (ICASE.EQ.2) WRITE(IFILE,1015)
C END DEC 2003
 1015          FORMAT(/
     1      ' LOCAL WIDTH-WISE WIDE COLUMN SKIN BUCKLING IS CRITICAL.'/
     1      ' THE LOCAL NONLINEAR STATIC RESPONSE OF THE PANEL MODULE'/
     1      ' TO NORMAL PRESSURE IS NOT CALCULATED IN THIS ITERATION'/
     1      ' BECAUSE IT IS LIKELY THAT NEWTON ITERATIONS WILL FAIL'/
     1      ' TO CONVERGE.')
C END DEC 1994
 1013          FORMAT(/
     1      ' LOCAL WIDTH-WISE WIDE COLUMN SKIN BUCKLING IS CRITICAL.'/
     1      ' THE LOCAL NONLINEAR STATIC RESPONSE OF THE PANEL MODULE'/
     1      ' TO NORMAL PRESSURE IS NOT CALCULATED IN THIS ITERATION'/
     1      ' BECAUSE IT IS LIKELY THAT NEWTON ITERATIONS WILL FAIL'/
     1      ' TO CONVERGE. INSTEAD, A WIDTH-WISE WIDE COLUMN BUCKLING'/
C BEG OCT 1995
     1      ' CONSTRAINT CONDITION MAY BE SET UP.')
               IF (WIDLAM.LT.10000.) WRITE(IFILE,1014) WIDLAM
C END OCT 1995
               GO TO 16
            ENDIF
C      End of (IMOD.EQ.0.AND.WIDLAM.LT.1.1.AND.WIDLAM.GT.0.0) condition.
C BEG JULY 1995
C BEG OCT 1995
C23456789012345678901234567890123456789012345678901234567890123456789012
            IF (NPRT.GE.2.AND.WIDLAM.LT.10000.) WRITE(IFILE,1014) WIDLAM
C END OCT 1995
C END JULY 1995
C BEG DEC 2003
 1014       FORMAT(/' WIDTH-WISE WIDE COLUMN BUCKLING LOAD FACTOR'/
     1    ' WIDLAM =4*pi**2*EI/[abs(local hoop load)*WIDTH**2]=',
     1      1PE12.4,/,
     1    ' See ITEM 118(b) of .../panda2/doc/panda2.news for a'/
     1    ' discussion of width-wise wide column buckling constraint.')
C END DEC 2003
         ENDIF
C   End of (ISWWIX.EQ.1.OR.RESTST.LT.0.0) condition.
C
         AXLEN = B(2)
C
C  Solve nonlinear equilibrium equations iteratively...
C
         IF (IYPLOC.EQ.0) CALL MOVER(0.,0,YPLOC,1,M3)
         CALL TRANS2(M3,YPLOC,X)
         IF (NPRT.GE.0) WRITE(IFILE,'(/,A)')
     1'****** BEGIN SUBROUTINE BUCKLE (MODULE PRESSURE RESPONSE) *****'
C BEG AUG 2001
 9430    CONTINUE
         ILABEL=9430
         IF (NPRT.GE.1) WRITE(IFILE,*) 
     1               ' LABEL NO. IN STRUCT=',ILABEL
C END AUG 2001
         CALL BUCKLE(1,IMOD,IFILE,IW,ILOC,DS,AS,BS,ISTORT,DIAG,C,D,
     1            DI,X,Y,Z,EIG,0,IYGEN,RESULT,AXLEN,M3,IDRW,
     1            NBLK,NGBK,NKF,0,IMAXB,KMAXB,IPV2,IBVC,1000,3,THERMX,
     1            THERMS,P,KAPPA1,KAPPA2,0,WPRES,IUNK,CS,
     1            FNX,FNY,FNXY,FXBEG,FXEND,FYBEG,FYEND,FXYBEG,FXYEND,
     1            FNX0,FNY0,FNXY0,R,JJJ,1,IABP,LENMOD,0,
C BEG AUG 2001
     1            TEMP(1,1),IMTEMP,WPB1,EIGITR(12),0,0.,0,0,0,ILABEL)
C END AUG 2001
         IF (NPRT.GE.0) WRITE(IFILE,*)
     1'****** END SUBROUTINE BUCKLE (MODULE PRESSURE RESPONSE) *******'
C
         IF (IUNK.EQ.0) GO TO 16
         IYPLOC = 1
         IF (IMOD.EQ.0) CALL TRANS1(M3,X,YPLOC)
C
C  Get membrane strain components (ex,ey) and stress resultants (Nx,Ny)
C  corresponding to converged state..
C
C  Get factor PLOCF by which to reduce the local deformations under
C  normal pressure in the case of weak stringers.
         C44N = CX(4,4,5) - CX(1,4,5)**2/CX(1,1,5)
         C44NS= CX(4,4,1) - CX(1,4,1)**2/CX(1,1,1)
         BLLRAT = SQRT(SQRT((C44N/CX(2,2,5))/(C44NS/CX(2,2,1))))
         BLLR1 = 2.
         BLLR2 = 5.
         BLLDIF= BLLR2 - BLLR1
         PLOCF = (BLLRAT - BLLR1)/BLLDIF
         IF (BLLRAT.LT.BLLR1) PLOCF = 0.
         IF (BLLRAT.GT.BLLR2) PLOCF = 1.
C BEG OCT 1998
         IF (NPRT.GE.0)
     1      WRITE(IFILE,'(/,A,/,A,/,A,/,A,1P,E12.4,A,/,A,/)')
     1 ' *** NOTE ****** NOTE ****** NOTE ****** NOTE ****** NOTE ***',
     1 ' Because the stringers are relatively weak, the local',
     1 ' amplitude of "pillowing" between stringers is being reduced',
     1 ' by the factor, PLOCF = ',PLOCF,'. See news ITEM 117(g).',
     1 ' *** END NOTE ***** END NOTE ***** END NOTE ***** END NOTE ***'
         WLPRES = WLPRES*PLOCF
C END OCT 1998
         DO 1016 I = 1,M3
 1016    X(I) = X(I)*PLOCF
         IF (NPRT.GE.0) WRITE(IFILE,'(/,A)')
     1'****** BEGIN SUBROUTINE BUCKLE (MODULE PRESSURE RESPONSE) *****'
C BEG FEB 2007
         IF (NPRT.GE.0) WRITE(IFILE,'(A)')
     1 ' See Fig. 56 in Ref.[1A] for the model and its behavior.'
C END FEB 2007
C BEG AUG 2001
 9440    CONTINUE
         ILABEL=9440
         IF (NPRT.GE.1) WRITE(IFILE,*) 
     1               ' LABEL NO. IN STRUCT=',ILABEL
C END AUG 2001
         CALL BUCKLE(1,IMOD,IFILE,IW,ILOC,DS,AS,BS,ISTORT,DIAG,C,D,
     1            DI,X,Y,Z,EIG,0,IYGEN,RESULT,AXLEN,M3,IDRW,
     1            NBLK,NGBK,NKF,0,IMAXB,KMAXB,IPV2,IBVC,1000,3,THERMX,
     1            THERMS,P,KAPPA1,KAPPA2,1,WPRES,IUNK,CS,
     1            FNX,FNY,FNXY,FXBEG,FXEND,FYBEG,FYEND,FXYBEG,FXYEND,
     1            FNX0,FNY0,FNXY0,R,JJJ,1,IABP,LENMOD,0,
C BEG AUG 2001
     1            TEMP(1,1),IMTEMP,WPB1,EIGITR(13),0,0.,0,0,0,ILABEL)
C END AUG 2001
         IF (NPRT.GE.0) WRITE(IFILE,*)
     1'****** END SUBROUTINE BUCKLE (MODULE PRESSURE RESPONSE) *******'
C
C  Get normal displacement distribution and change in curvature
C  W,yy..
C
         NPB = (3.1415927/(2.*B(2)))**2
         IF (NPRT.GE.0) WRITE(IFILE,'(/,A)')
     1'****** BEGIN SUBROUTINE MODE (MODULE PRESSURE RESPONSE) *****'
         CALL MODE(IFILE,1,NSEGB5,I5,IW,DS,M3,X,IDUM,0,0,ZPARTX,
C BEG JUL 1999
     1             NPB,CX,3,WPRES,EIG,R,ITIP,ICWEB,IMOD,
C END JUL 1999
     1             WW1,WD1,WDD1,UU1,VV1,VP1,ZREF,1,FKNOCK(2),
C BEG OCT 1998
C BEG JUN 2004
     1             FKNOCK(3),ICROWN,P,IFICT1,WDDD,1,0,TX,1,0,
     1    INTSNG,RAD2,TY,IZSTIF,B,B2,H,W,W2,
     1    B0,B20,H0,WW0,W20,ISTIF,INTEXT,IFAY,IBEAM,IONEST,
     1    AXIAL,CIRC,ICRIP,ISEGC,WRATIO,WTIPWS,WRATTP,
     1    WRATWB,WRATCN,WRWIDE,WIDLMM,PEDG,ISOGRD,RESULT,IFLG)
C END JUN 2004
C END OCT 1998
C
         IF (NPRT.GE.0) WRITE(IFILE,*)
     1'****** END SUBROUTINE MODE (MODULE PRESSURE RESPONSE) *******'
         IF (NPRT.GE.0) WRITE(IFILE,'(/,A)')
     1'****** BEGIN SUBROUTINE OUTPRS (MODULE PRESSURE RESPONSE) *****'
         CALL OUTPRS(IFILE,NSEGB5,I5,WPRESG,WPRES,WDDPRS,0,
     1   AXLEN,RESPRS,EPSPRS,0,EAVEPL,CIRC,IUNK,FNXPL0,FNYPL0,NPRT,-P,
     1   0.,0.,0.,CS,NXAVEP,IFREEX,IMOD,JJJ,0,L,ICASE)
         IF (NPRT.GE.0) WRITE(IFILE,*)
     1'****** END SUBROUTINE OUTPRS (MODULE PRESSURE RESPONSE) *******'
C
   16    CONTINUE
         IF (IMOD.EQ.0.AND.JJJ.EQ.0.AND.NPRT.GE.0) THEN
            WRITE(IFILE,11) -P
   11       FORMAT(' End of nonlinear equilibrium calculations for'/
     1    ' panel module with uniform normal pressure, p=',1PE12.4/)
         ENDIF
         RESULT(2,1,1) = FNYSV1
         RESULT(2,2,1) = FNYSV2
      ENDIF
C  End of (P.NE.0.AND.ISTIF(1).NE.0.AND.ISOGRD.EQ.0
C                                  .AND.ISKIPL.EQ.0) condition. 
C BEG FEB 1995
C  It is too conservative to include contribution of curvature change
C  for local single module model at the ends or at rings of the panel.
C  This was check against STAGS for a case of thermal deformations on
C  Feb. 15, 1995.
      IF (ICASE.EQ.2) CALL MOVER(0.,0,PWDD,1,184)
C END FEB 1995
C
C BEG JULY 2007
      IF (NPRT.GE.1) THEN
      IF (PEDG.OR.P.EQ.0.0.OR.ISKIPL.NE.0.OR.ISTIF(2).EQ.0
     1 .OR.ISOGRD.NE.0.OR.ISTIF(1).EQ.5.OR.AXIAL.LT.2.5*B(2))
     1 WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A)')
     1' *************************************************************',
     1' CHAPTER 5c (prebuckling bending between rings with beam',
     1' model) is not executed because:',
     1' (PEDG.OR.P.EQ.0.0.OR.ISKIPL.NE.0.OR.ISTIF(2).EQ.0',
     1' .OR.ISOGRD.NE.0.OR.ISTIF(1).EQ.5.OR.AXIAL.LT.2.5*B(2))'
      IF (NPRT.GE.0) WRITE(IFILE,'(A,I3,A)')
     1' **** CHAPTER 5c: DESIGN PERTURBATION INDEX, IMOD=',IMOD,' *****'
      ENDIF
C END JULY 2007
C BEG DEC 1998
      IF (.NOT.PEDG.AND.P.NE.0.0.AND.ISKIPL.EQ.0.AND.ISTIF(2).NE.0
     1 .AND.ISOGRD.EQ.0.AND.ISTIF(1).NE.5.AND.AXIAL.GE.2.5*B(2)) THEN
C
         IF (NPRT.GE.0) WRITE(IFILE,'(A,I3,A)')
     1' **** CHAPTER 5c: DESIGN PERTURBATION INDEX, IMOD=',IMOD,' *****'
         IF (NPRT.GE.1) WRITE(IFILE,'(/,A,/,A,/,A,1P,E12.4)')
     1' **** CHAPTER 5c ****:',
     1' Begin prebuckling bending between rings (beam model is used)',
     1' Ring spacing, B(2) =',B(2)
C
C  CLAMPED PREBUCKLING BRANCH:  "Linear" beam bending theory is
C  used for changes in curvature at the panel rings and at the panel
C  midbay between rings. Formulas are from ROARK, 3rd edition, 1954,
C  Table III, p. 108, formula No. 33: bending of clamped beam under
C  uniform load.
C
C  If there is significant in-plane shear loading, we must calculate
C  the ratio of load factors for general instability without and with
C  in-plane shear loading in order to get the beam-column response of
C  the panel subjected to combined normal pressure and in-plane loads...
C
         AXLEN = B(2)
         IF (IMOD.EQ.0) THEN
            EIEFZ = CSWIDE(4,4) - CSWIDE(1,4)**2/CSWIDE(1,1)
            EIEFZ0 = EIEFZ
            IF (ITYPE.EQ.3) THEN
               CSBNDR(ISTEP) = MIN(CSBNDR(ISTEP),EIEFZ)
               IF (ISTEP.GT.1)  EIEFZ = FAMPCR*CSBNDR(ISTEP)
            ENDIF
            EIEFFY = 1.0
            FNYSKN = RESULT(2,1,1)
            RESULT(2,1,1) = 0.
            IF (IREDUC.EQ.1) THEN
C  GET THE RATIO OF BUCKLING LOAD FACTORS WITHOUT AND WITH TRANSVERSE
C  SHEAR DEFORMATION EFFECT:
               IF (NPRT.GE.0) WRITE(IFILE,'(/,A)')
     1'****** BEGIN SUB. BUCPAN (BEAM PRESSURE RESPONSE, EIEFFY) *****'
C  WITHOUT TRANSVERSE SHEAR DEFORMATION EFFECT (EIGBMZ)...
 9102          CONTINUE
               ILABEL=9102
               IF (NPRT.GE.1) WRITE(IFILE,*) 
     1                       ' LABEL NO. IN STRUCT=',ILABEL
               CALL BUCPAN(IFILE,IMOD,JJJ,ICONST,CONSTR,WORDB,ISTIF,
     1           0,0,0.5,CONMAX,FSGEN,FSPAN,FSLOC,EIGDUM,5,
     1           IPOINC,INUMTT,FKNOCK,IGENRL,CSLOPE,EIGBMZ,MLOCAL,
     1           ISKIN,MPGL,NPGL,MNOPGL,NNOPGL,ITUTOR,1,IQUICK,
     1           -1.0,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,NLOCAL,ITIP,
     1           IABP,1,EPSLOD(4),RWBEIG,RWBTOT,ICASE,FSBSTR,0,TLOCAL,
C BEG NOV 2003
     1         0,0,0,9102,ICD7D,ICD8D,ICD9D,0,ILOADS,MORCON,NCASES,11)
C END NOV 2003
               IF (IRESTY.EQ.1) GO TO 2222
C
C  WITH TRANSVERSE SHEAR DEFORMATION EFFECT (EIGBM2)...
 9103          CONTINUE
               ILABEL=9103
               IF (NPRT.GE.1) WRITE(IFILE,*) 
     1                       ' LABEL NO. IN STRUCT=',ILABEL
               CALL BUCPAN(IFILE,IMOD,JJJ,ICONST,CONSTR,WORDB,ISTIF,
     1           1,0,0.5,CONMAX,FSGEN,FSPAN,FSLOC,EIGDUM,5,
     1           IPOINC,INUMTT,FKNOCK,IGENRL,CSLOPE,EIGBM2,MLOCAL,
     1           ISKIN,MPGL,NPGL,MNOPGL,NNOPGL,ITUTOR,1,IQUICK,
     1           -1.0,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,NLOCAL,ITIP,
     1           IABP,1,EPSLOD(4),RWBEIG,RWBTOT,ICASE,FSBSTR,0,TLOCAL,
C BEG NOV 2003
     1         0,0,0,9103,ICD7D,ICD8D,ICD9D,0,ILOADS,MORCON,NCASES,12)
C END NOV 2003
               IF (IRESTY.EQ.1) GO TO 2222
C
C              IF (NPRT.GE.0) WRITE(IFILE,'(A,1P,2E12.4)')
C    1       ' Inter-ring buckling: EIGBMZ,EIGBM2=',EIGBMZ,EIGBM2
               EIEFFY = EIGBMZ/EIGBM2
               IF (EIEFFY.LT.1.0) EIEFFY = 1.0
               IF (NPRT.GE.0) WRITE(IFILE,*)
     1  ' GENERAL INSTAB. LOAD FACTORS: Without t.s.d.: EIGBMZ=',EIGBMZ,
     1  '                               With    t.s.d.: EIGBM2=',EIGBM2,
     1  ' Bowing under pressure will be amplified by  : EIEFFY=',EIEFFY
               IF (NPRT.GE.0) WRITE(IFILE,*)
     1'******   END SUB. BUCPAN (BEAM PRESSURE RESPONSE, EIEFFY) *****'
            ENDIF
C       End of (IREDUC.EQ.1) condition.
C
            IF ((FNX+FNX0).LT.0.0) THEN
C  First, calculate the general instability load factor with only Nx acting:
               FLENMD = 0.5
               IF (NPRT.GE.0) WRITE(IFILE,'(/,A)')
     1'****** BEGIN SUB. BUCPAN (BEAM PRESSURE RESPONSE, Nx ONLY) *****'
 9104          CONTINUE
               ILABEL=9104
               IF (NPRT.GE.1) WRITE(IFILE,*) 
     1                       ' LABEL NO. IN STRUCT=',ILABEL
               CALL BUCPAN(IFILE,IMOD,JJJ,ICONST,CONSTR,WORDB,ISTIF,
     1           0,0,FLENMD,CONMAX,FSGEN,FSPAN,FSLOC,EIGDUM,5,
     1           IPOINC,INUMTT,FKNOCK,IGENRL,CSLOPE,EIGBMZ,MLOCAL,
     1           ISKIN,MPGL,NPGL,MNOPGL,NNOPGL,ITUTOR,1,IQUICK,
     1           FNX+FNX0,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,NLOCAL,ITIP,
     1           IABP,1,EPSLOD(4),RWBEIG,RWBTOT,ICASE,FSBSTR,0,TLOCAL,
C BEG NOV 2003
     1          0,0,0,9104,ICD7D,ICD8D,ICD9D,0,ILOADS,MORCON,NCASES,13)
C END NOV 2003
               IF (IRESTY.EQ.1) GO TO 2222
               IF (NPRT.GE.0) WRITE(IFILE,'(A,1PE12.4,/,A,/,A,/,A)')
     1       ' Wide column instability load factor, EIGBMZ=',EIGBMZ,
     1       ' EIGBMZ is used with the eq. EIGBMZ=4*pi**2*EI/L**2 in',
     1       ' order to obtain an effective bending stiffness, EI,',
     1       ' for predicting the bending of the panel under pressure.'
               IF (NPRT.GE.0) WRITE(IFILE,*)
     1'******   END SUB. BUCPAN (BEAM PRESSURE RESPONSE, Nx ONLY) *****'
C
C  Next, calculate what the effective EI of the beam must be to yield
C  the buckling load factor, EIGBM1. The Euler buckling load of a clamped
C  beam is:  P(euler) = 4*pi**2*EI/L**2. Therefore:
C                  EI = EIGBMZ*(FNX+FNX0)*L**2/(4*pi**2)
               EIEFZ = EIGBMZ*FSAFE3*ABS(FNX+FNX0)*AXLEN**2/(4.*PI**2)
               IF (ITYPE.EQ.3) THEN
                  CSBNDR(ISTEP) = MIN(CSBNDR(ISTEP),EIEFZ)
                  IF (ISTEP.GT.1)  EIEFZ = FAMPCR*CSBNDR(ISTEP)
               ENDIF
C
C  Next, calculate the general instability load factor with Nx, Ny, Nxy
C  acting:
               RESULT(2,1,1) = FNYSKN
               IF (ABS(FNXY).GT.0.1*ABS(FNX+FNX0)) THEN
                  IF (NPRT.GE.0) WRITE(IFILE,'(/,A)')
     1'***** BEGIN SUB. BUCPAN (BEAM PRESSURE RESPONSE, Nx,Ny,Nxy) ****'
 9105             CONTINUE
                  ILABEL=9105
                  IF (NPRT.GE.1) WRITE(IFILE,*) 
     1                       ' LABEL NO. IN STRUCT=',ILABEL
                  CALL BUCPAN(IFILE,IMOD,JJJ,ICONST,CONSTR,WORDB,ISTIF,
     1             0,0,FLENMD,CONMAX,FSGEN,FSPAN,FSLOC,EIGDUM,5,
     1             IPOINC,INUMTT,FKNOCK,IGENRL,CSLOPE,EIGBM2,MLOCAL,
     1             ISKIN,MPGL,NPGL,MNOPGL,NNOPGL,ITUTOR,1,IQUICK,
     1             FNX+FNX0,FNY+FNY0,FNXY,0.,0.,0.,0.,0.,0.,0.,0.,0.,
     1             NLOCAL,ITIP,IABP,1,EPSLOD(4),RWBEIG,RWBTOT,ICASE,
     1             FSBSTR,0,TLOCAL,0,0,0,9105,ICD7D,ICD8D,ICD9D,0,
C BEG NOV 2003
     1             ILOADS,MORCON,NCASES,14)
C END NOV 2003
                  IF (IRESTY.EQ.1) GO TO 2222
                  IF (NPRT.GE.0) WRITE(IFILE,*)
     1'*****  END  SUB. BUCPAN (BEAM PRESSURE RESPONSE, Nx,Ny,Nxy) ****'
C
C  Next, calculate the ratio, EBEAMR = EIGBM1/EIGBM2, to be used in BEAMBD:
C
                  IF (EIGBMZ.GT.0.0.AND.EIGBM2.GT.0.0)
     1               EBEAMR = EIGBM1/EIGBM2
                  IF (EBEAMZ.LT.1.0) EBEAMZ = 1.0
                  IF (NPRT.GE.0) WRITE(IFILE,*)
     1  ' GENERAL INSTAB. LOAD FACTORS:   With Nx only: EIGBMZ=',EIGBMZ,
     1  '                             With Nx, Ny, Nxy: EIGBM2=',EIGBM2,
     1  ' Ratio to be used with beam-column eq(OUTPRS): EBEAMZ=',EBEAMZ,
     1  ' Effective beam bending stiffness for pressure: EIEFZ=',EIEFZ
               ENDIF
C           End of (ABS(FNXY).GT.0.1*ABS(FNX+FNX0)) condition.
            ENDIF
C       End of ((FNX+FNX0).LT.0.0) condition.
            RESULT(2,1,1) = FNYSKN
         ENDIF
C    End of (IMOD.EQ.0) condition.
         EIEFFZ = (CSWIDE(4,4) - CSWIDE(1,4)**2/CSWIDE(1,1))/EIEFZ0
         IWEB = 3
         IF (ISTIF(1).EQ.5) IWEB = 2
         IF (NPRT.GE.0) WRITE(IFILE,'(/,A)')
     1'**** BEGIN SUBROUTINE BEAMBD (INTER-RING PRESSURE RESPONSE) ***'
         CALL BEAMBD(IFILE,WPRESR,WDDPRR,AXLEN,EAVEPR,
     1    FNX,FNX0,FNXP0,FNYP0,NPRT,-P,DSURF,CX(1,1,5),CSWIDE,NXAVEP,
     1    ICASE,EBEAMZ,EIEFZ,EIEFFZ,EIGBMZ,EIEFFY,SHERRX,SHERRY,XMAXR,
     1    YMAXR,IWEB,B(1),H(1),CX)
C
         IF (NPRT.GE.0) WRITE(IFILE,
     1 '(/,A,/,A,/,1P,6E12.4,/,A,/,A,/,1P,6E12.4,/,A,/,A,/,A)')
     1 ' Next, add the strains and changes in curvature from the',
     1 ' overall bending, (EAVEP(i),i=1,6)=',(EAVEP(I),I=1,6),
     1 ' to the strains and changes in curvature from the inter-ring',
     1 ' bending,        (EAVEPR(i),i=1,6)=',(EAVEPR(I),I=1,6),
     1 ' to obtain the total strains and changes in curvature from',
     1 ' pressure applied to a flat panel with one or both sets of',
     1 ' stiffeners "smeared" (averaged) in this prebuckling analysis.'
C 
         DO 9107 I = 1,6
            EAVEP(I) = EAVEP(I) + EAVEPR(I)
 9107    CONTINUE
         IF (NPRT.GE.0) WRITE(IFILE,'(A,/,A,/,1P,6E12.4,/,A,/,A)')
     1 ' The total strains and changes in curvature from the two',
     1 ' "smeared" stiffener models is, (EAVEP(i),i=1,6)=',
     1    (EAVEP(I),I=1,6),
     1 ' This does not yet include the effect of local transverse',
     1 ' bending of the panel skin between adjacent stringers.'
      ENDIF
C  End of (.NOT.PEDG.AND.P.NE.0.0.AND.ISKIPL.EQ.0.AND.ISTIF(2).NE.0
C .AND.ISOGRD.EQ.0.AND.ISTIF(1).NE.5.AND.AXIAL.GE.2.5*B(2)) condition.
C END DEC 1998
C
C*********************************************************************
C END DERIVATION OF BEHAVIOR OF SKIN-STRINGER PANEL MODULE
C UNDER UNIFORM NORMAL PRESSURE.
C*********************************************************************
C
C***********************************************************************
C BEGIN DERIVATION OF HOW APPLIED LOADS ARE DISTRIBUTED IN PANEL MODULE
C SEGMENTS OF THE SKIN-STRINGER-RING ASSEMBLY.
C***********************************************************************
C
C       IF (ITUTOR.EQ.1) THEN
C          REWIND IFILE4
C          CALL DATUM(IFILE4,25,0,0,INT,REALL,CHARAC,IOUT,0,IPROMP)
C       ENDIF
        ISKNN = 0
        IF (FSLOC.LT.0.95.AND.IQUICK.EQ.0) ISKNN = 1
C BEG OCT 2006
      IF (NPRT.GE.1) WRITE(IFILE,'(/,/,/,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************',
     1' ************          CHAPTER 6              *****************',
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************'
      IF (NPRT.GE.0) WRITE(IFILE,'(A,I3,A)')
     1' **** CHAPTER  6: DESIGN PERTURBATION INDEX, IMOD=',IMOD,' *****'
      IF (NPRT.GE.1) WRITE(IFILE,'(/,A,/,A,/,A,/,A)')
     1 ' *************************************************************',
     1 ' CHAPTER 6  Do PANDA-type [1B] general and inter-ring buckling',
     1 '            analyses to permit later computation of',
     1 '            amplification of panel bowing.'
C END OCT 2006
C BEG NOV 2003
        IF (NPRT.GE.1) WRITE(IFILE,'(/,A,/,A,/,A,/,A)')
     1'**** BEGIN SUBROUTINE BUCPAN (PRELIM. PANDA-TYPE BUCKLING) ****',
     1'**** This execution of BUCPAN is used to find the general',
     1'**** buckling load factor that is used to compute the',
     1'**** amplification of bowing from all sources except pressure.'
C END NOV 2003
 9110   CONTINUE
        ILABEL=9110
        IF (NPRT.GE.1) WRITE(IFILE,*) ' LABEL NO. IN STRUCT=',ILABEL
        IEIGAM = 0
        CALL BUCPAN(IFILE,IMOD,JJJ,ICONST,CONSTR,WORDB,ISTIF,IREDUC,
     1       KOITER,LENMOD,CONMAX,FSGEN,FSPAN,FSLOC,EIGBOW,1,IPOINC,
     1       INUMTT,FKNOCK,IGENRL,CSLOPE,EILOCL,MLOCAL,ISKNN,
     1       MSHEAR,NSHEAR,MNOSHR,NNOSHR,ITUTOR,IWIDE,IQUICK,
     1       FNX,FNY,FNXY,FNX0,FNY0,FNXY0,FNXP0,
     1       FNYP0,FNXYP0,FNXPL0,FNYPL0,FNXYPL,NLOCAL,ITIP,
     1       IABP,1,EPSLOD(4),RWBEIG,RWBTOT,ICASE,FSBSTR,1,TLOCAL,0,0,
C BEG NOV 2003
     1       0,9110,ICD7D,ICD8D,ICD9D,0,ILOADS,MORCON,NCASES,15)
C END NOV 2003
        IEIGAM = 0
        IF (IRESTY.EQ.1) GO TO 2222
      IF ((IMOD.EQ.0.AND.NPRT.GE.1).OR.NPRT.GE.0) THEN
              WRITE(IFILE,'(/,A,/,A)')
     1      ' GENERAL BUCKLING LOAD FACTOR USED FOR CALCULATION OF THE',
     1      ' AMPLIFICATION OF BOWING FROM ALL SOURCES EXCEPT PRESSURE.'
              WRITE(IFILE,'(A,1PE12.4,A,I3,A,I3,A)')
     1            ' EIGBOW(M,N)=',EIGBOW,'(',MGEN1,',',NWIDPR,')'
         WRITE(IFILE,*) 
     1'**** END SUBROUTINE BUCPAN (PRELIM. PANDA-TYPE BUCKLING) *******'
      ENDIF
      IF (ISTIF(1).NE.0.AND.EIGBOW.LT.1.0) ISTOP = 1
        MNOSHR = MSHEAR
        NNOSHR = NSHEAR
      IF (IMOD.EQ.0.AND.PEDG.AND.ISTIF(1).NE.0.AND.ISTIF(2).NE.0) THEN
C BEG NOV 2003
         IF (NPRT.GE.0) WRITE(IFILE,'(/,A,/,A,/,A,/,A)')
     1'*** BEGIN BUCPAN (INTER-RING BUCKLING, SMEARED STRINGERS) ***',
     1'*** This execution of BUCPAN is used to get amplification',
     1'*** factors for inter-ring axial bowing and inter-ring local',
     1'*** prebuckling deformations (pillowing).'
C END NOV 2003
 9120    CONTINUE
         ILABEL=9120
         IF (NPRT.GE.1) WRITE(IFILE,*) ' LABEL NO. IN STRUCT=',ILABEL
         IEIGAM = 0
         CALL BUCPAN(IFILE,0,JJJ,ICONST,CONSTR,WORDB,ISTIF,
     1              IREDUC,KOITER,LENMOD,CONMAX,FSGEN,FSPAN,FSLOC,
     1              EIGGG8,5,IPOINC,INUMTT,FKNOCK,IGENRL,CSLOP8,
     1              EILOC8,MLOC8,ISKIN,MSHER8,NSHER8,MNOSH8,NNOSH8,
     1              ITUTOR,IWIDE,IQUICK,FNX,FNY,FNXY,FNX0,FNY0,FNXY0,
     1              FNXP0,FNYP0,FNXYP0,FNXPL0,FNYPL0,FNXYPL,NLOC8,ITIP,
     1              IABP,1,EPSLOD(4),RWBEIG,RWBTOT,ICASE,FSBSTR,1,
     1              TLOC8,0,0,0,9120,ICD7D,ICD8D,ICD9D,0,ILOADS,MORCON,
C BEG NOV 2003
     1              NCASES,16)
C END NOV 2003
         IEIGAM = 0
         IF (IRESTY.EQ.1) GO TO 2222
         AMPLT3 = FACAMS*EIGAMS/(EIGAMS - 1.)
         AMPLT4 = FACAMS*4.*EIGAMS/(4.*EIGAMS - 1.)
         AMPMAX = 100.
         IF (AMPLT3.LE.0.) AMPLT3 = AMPMAX
         IF (AMPLT3.GT.AMPMAX) AMPLT3 = AMPMAX
         IF (EILOC8.LT.0.0) AMPLT3 = 1.0
         IF (AMPLT4.LE.0.) AMPLT4 = AMPMAX
         IF (AMPLT4.GT.AMPMAX) AMPLT4 = AMPMAX
         IF (EILOC8.LT.0.0) AMPLT4 = 1.0
         IF (NPRT.GE.0) THEN
              WRITE(IFILE,'(A,1PE12.4,A,I3,A,I3,A,1PE10.2,A)')
     1            ' EIGPAN(M,N)=',EILOC8,'(',MLOC8,',',NLOC8,',',
     1                                       CSLOP8,')'
              WRITE(IFILE,'(A,1PE12.4)')
C BEG MAR 1997
     1      ' AMPLIFICATION OF INTER-RING BOWING,       AMPLT3=',AMPLT3
C END MAR 1997
              WRITE(IFILE,'(A,1PE12.4)')
     1      ' AMPLIFICATION OF INTER-RING PREB.DEFORM., AMPLT4=',AMPLT4
            WRITE(IFILE,*)
     1'*** END BUCPAN  (INTER-RING BUCKLING, SMEARED STRINGERS) ***'
         ENDIF
      ENDIF
C  End of (IMOD.EQ.0.AND.PEDG.AND.ISTIF(1).NE.0.AND.ISTIF(2).NE.0)
C         condition.
C
C     IF (ITUTOR.EQ.1) THEN
C        REWIND IFILE4
C        CALL DATUM(IFILE4,30,0,0,INT,REALL,CHARAC,IOUT,0,IPROMP)
C     ENDIF
C BEG JUN 1999
      IF (ABS(WPRESG).LT.0.000001) DELWSH = 0.
C END JUN 1999
      IFX = 1
C BEG DEC 2003
      IF (NPRT.LE.0) IFX = 0
C BEG OCT 2006
      IF (NPRT.GE.1) WRITE(IFILE,'(/,/,/,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************',
     1' ************          CHAPTER 7              *****************',
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************'
      IF (NPRT.GE.0) WRITE(IFILE,'(A,I3,A)')
     1' **** CHAPTER  7: DESIGN PERTURBATION INDEX, IMOD=',IMOD,' *****'
      IF (NPRT.GE.1) WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A)')
     1 ' *************************************************************',
     1 ' CHAPTER 7  Compute distribution of loads in panel module',
     1 '            skin-stringer segments, neglecting redistribution',
     1 '            due to initial buckling modal imperfections',
     1 '            (See Section 10 of [1A]).'
C END OCT 2006
      IF (NPRT.GE.1) WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A)')
     1' *** BEGIN SUBROUTINE FORCES (LOAD DISTRIB. IN SEGMENTS) *****',
     1' Resultants in each segment of the skin-stringer and skin-ring',
     1' modules are computed. The effect of prebuckling bending due to',
     1' initial buckling modal imperfections is ignored at this time,',
     1' but will be accounted for later when buckling load factors and',
     1' stresses are computed. See Section 10, pp 506-509 of Ref.[1A]'
C END DEC 2003
      CALL FORCEX(IFILE,IFX,ITUTOR,NSEG,CX,CY,CS,FNX,FNY,FNXY,RESULT,
     1            RESFIX,RESEIG,ISTIF,WRESID,WBEND,ZPARTX,ZPARTY,
     1            EIGBOW,EPSLOD,ETHERM,THERMX,THERMY,LENMOD,CSINV,
     1            ETHRMX,ETHRMY,ICOCUR,NPRT,EPSTOT,EPSFIX,EPSEIG,
     1            FSTRN,GSTRN,S1,S2,FNX0,FNY0,FNXY0,EPSFXL,RESFXL,
     1            RESTOT,FNXP0,FNYP0,WPRESG+DELWSH,EAVEP,RESPGL,EPSPGL,
     1            RESPRS,EPSPRS,P,FNXPL0,FNYPL0,EAVEPL,WPRES,EPSLDF,
     1            WIMPG,WIMPL,IMOD,IABP,FSLOC,IWIDE,JJJ,AMPLIT,ECC,
     1            RWBTOT,RWBEIG,2,IBOUND,IBPRE,PRELEN,ITYPE,
     1            THSMRX,THSMRY,ETSMRX,ETSMRY,ICASE,MX,MY,IABT,AMPLT2,
C BEG OCT 1998
     1            NNODES,TEMP,IMTEMP,IQUICK,ETHRMS,RESBGL,EPSBGL,EAVEPB)
C23456789012345678901234567890123456789012345678901234567890123456789012
C END OCT 1998
      IF (NPRT.GE.1) WRITE(IFILE,*)
     1'**** END SUBROUTINE FORCES (LOAD DISTRIB. IN SEGMENTS) *******'
C     WRITE(IFILE,*)' AFTER FORCES, RESEIG(3,3,1)=',RESEIG(3,3,1)
C
C***********************************************************************
C END DERIVATION OF HOW APPLIED LOADS ARE DISTRIBUTED IN PANEL MODULE
C SEGMENTS OF THE SKIN-STRINGER-RING ASSEMBLY.
C***********************************************************************
C
C BEG FEB 1996
      IF (ITESTB.EQ.1) THEN
         IF (ITYPE.EQ.1.AND.NPRTS.GE.2) WRITE(IFILE,*)
     1   ' AFTER "IF (ITESTB.EQ.1)": ICAR,INUMTT,ICONST=',
     1                               ICAR,INUMTT,ICONST
C BEG MAR 2009
         IF (ITESTB.EQ.0.AND.ISTIF(1).EQ.5)
     1      CALL MOVER(CXSAVE,1,CX,1,144)
C END MAR 2009
         IF (IMOD.EQ.0.AND.JJJ.EQ.0.AND.ILOADS.EQ.1) THEN
            IF (ITUTOR.EQ.1) WRITE(IFILE,70) ILOADS
            IF (ITUTOR.EQ.1) WRITE(IFILE,71)
            IF (ITUTOR.EQ.1) WRITE(IFILE,72) LENMOD
         ENDIF
         IF (IMOD.EQ.0.AND.JJJ.EQ.0.AND.NPRT.GE.1) THEN
            WRITE(IFILE,73) JJJ,ILOADS,IICHAN,FNX,FNY,FNXY,
     1                               FNX0,FNY0,FNXY0
            IF (IABP.EQ.0) THEN
               WRITE(IFILE,422) -P,FNXP0,FNYP0,FNXPL0,FNYPL0
            ELSE
               WRITE(IFILE,423) -P,FNXP0,FNYP0,FNXPL0,FNYPL0
            ENDIF
            WRITE(IFILE,74)
         ENDIF
         ISHORT = 1
         EIGLC0 = 0.
         EIGSM0 = 0.
         EIGAL0 = 0.
         IF (NPRTS.GE.0) WRITE(IFILE,'(/,A)')
     1  '*** BEGIN SUB. BUCPAN (LOAD B PANDA-TYPE BUCKLING LOADS) ****'
 9125    CONTINUE
         ILABEL=9125
         IF (NPRTS.GE.1) WRITE(IFILE,*)' LABEL NO. IN STRUCT=',ILABEL
         IADDST = 0
         FNYEFF = FNY
         FNY0FF = FNY0
         IF (ISTIF(2).EQ.0) THEN
            FNYEFF = FNY + DFNYPA
            FNY0FF = FNY0 + DFNYPB
         ENDIF
         NPRTSS = NPRT
         NPRT = NPRTS
         CALL BUCPAN(IFILE,IMOD,JJJ,ICONST,CONSTR,WORDB,ISTIF,IREDUC,
     1         KOITER,LENMOD,CONMAX,FSGEN,FSPAN,FSLOC,EIGGEN,0,IPOINC,
     1         INUMTT,FKNOCK,IGENRL,CSLOP,EILOCL,MLOCAL,ISKIN,
     1         MSHEAR,NSHEAR,MNOSHR,NNOSHR,ITUTOR,IWIDE,ISHORT,
     1         FNX,FNYEFF,FNXY,FNX0,FNY0FF,FNXY0,FNXP0,FNYP0,
     1         FNXYP0,FNXPL0,FNYPL0,FNXYPL,NLOCAL,ITIP,IABP,1,
     1         EPSLOD(4),RWBEIG,RWBTOT,ICASE,FSBSTR,1,TLOCAL,1,0,
C BEG NOV 2003
     1     IADDST,9125,ICD7D,ICD8D,ICD9D,0,ILOADS,MORCON,NCASES,17)
C END NOV 2003
         NPRT = NPRTSS
         IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 9410
         IF (ITYPE.EQ.1.AND.NPRTS.GE.2) WRITE(IFILE,*)
     1   ' AFTER "CALL BUCPAN     ": ICAR,INUMTT,ICONST=',
     1                               ICAR,INUMTT,ICONST
         IF (IRESTY.EQ.1) GO TO 765
         IF (NPRT.GE.0) WRITE(IFILE,*)
     1  '***** END SUB. BUCPAN (LOAD B PANDA-TYPE BUCKLING LOADS) ****'
C
         MCRIP = MSKIN
         NCRIP = NSKIN
         IF (NPRT.GE.0) WRITE(IFILE,'(/,A)')
     1  '***** BEGIN SUB. STFEIG (LOAD B BUCKLING IN STIFFENERS) *****'
         CALL STFEIG(ICASE,ISTIF,B,B2,H,W,W2,CX,CY,RESEIG,RESTOT,
     1         ICONST,CONSTR,WORDB,IADDB,ISKIN,TX,TY,GTX,GTY,IREDUC,
     1         CONMAX,IPOINC,INUMTT,IMOD,0,MCRIP,NCRIP,IFILE,JJJ,
     1         RWBTOT,RWBEIG,ICASE,FSBSTR,EIGTRY,ILAMB2,ILAM34,ILAM44,
C BEG NOV 2003 
     1         0,ITRUSS,ICWEB,ICROWN,FKNOCK,IPROMP,ISHORT,WBEIG,0,
C BEG JUN 2004
C BEG DEC 2005
C BEG FEB 2006
     1         IBLDUM,ABIG,BBIG,9125,ILOADS,FSLOC)
C END FEB 2006
C END DEC 2005
C END JUN 2004
C END NOV 2003
         IF (ITYPE.EQ.1.AND.NPRTS.GE.2) WRITE(IFILE,*)
     1   ' AFTER "CALL STFEIG     ": ICAR,INUMTT,ICONST=',
     1                               ICAR,INUMTT,ICONST
         IF (IRESTY.EQ.1) GO TO 765
         IF (NPRT.GE.0) WRITE(IFILE,*)
     1  '******* END SUB. STFEIG (LOAD B BUCKLING IN STIFFENERS) *****'
         IF (ITYPE.EQ.1.AND.NPRT.GE.2)
     1     WRITE(IFILE,*)' AFTER STFEIG: IMOD,INUMTT,ICONST=',
     1                                   IMOD,INUMTT,ICONST
         IF ((IMOD.EQ.0.AND.JJJ.EQ.0.AND.NPRT.GE.1).OR.NPRT.GE.0) THEN
           WRITE(IFILE,*)
     1    ' *** END OF LOAD B STIFFENER SEGMENT BUCKLING (if any) ****'
           WRITE(IFILE,*)' '
         ENDIF
C
C  GET LOCAL BUCKLING OF TRIANGULAR SKIN BETWEEN ISOGRID STIFFENERS
         IF (ISOGRD.EQ.1) THEN
            SIDE = B(1)/0.8660254
C BEG DEC 2004
C           NDOF = 10
            NDOF = 15
C           NODEX = 15
C           NODEY = 15
            NODEX = 21
            NODEY = 21
C END DEC 2004
            IF (ITYPE.NE.1) THEN
               NDOF = 15
               NODEX= 21
               NODEY= 21
            ENDIF
            SFNXY = 1.
            IF (ABS(PNXY).GT.0.) SFNXY = PNXY/ABS(PNXY)
C BEG JUN 2004
C           PPNXY= -(PNXY+DELSKN(3,1,1)*SFNXY)
            PPNXY= -(PNXY+0.0*DELSKN(3,1,1)*SFNXY)
C END JUN 2004
            IF (ISOANG.EQ.2) THEN
C BEG JUN 2004
C              PPNX = -(PNX+DELSKN(1,1,1))
C              PPNY = -(PNY+DELSKN(2,1,1))
               PPNX = -(PNX+0.0*DELSKN(1,1,1))
               PPNY = -(PNY+0.0*DELSKN(2,1,1))
C END JUN 2004
               PSKNXP = -RSKNXP
               PSKNYP = -RSKNYP
            ELSE
C BEG JUN 2004
C              PPNX = -(PNY+DELSKN(2,1,1))
C              PPNY = -(PNX+DELSKN(1,1,1))
               PPNX = -(PNY+0.0*DELSKN(2,1,1))
               PPNY = -(PNX+0.0*DELSKN(1,1,1))
C END JUN 2004
               PSKNXP = -RSKNYP
               PSKNYP = -RSKNXP
            ENDIF
            CALL TRIANG(IFILE,0,SIDE,60.,CX(4,4,1),CX(4,5,1),CX(5,5,1),
     1               CX(4,6,1),CX(5,6,1),CX(6,6,1),PPNX,PPNY,PPNXY,
     1               PSKNXP,PSKNYP,1,NODEX,NODEY,NDOF,NPRT,ISOANG,
     1               EIGLOC,WW(1),WW(22501),WW(45001),WW(46601),
C BEG DEC 2004
     1               WW(48201),CX(4,4,3),CX(6,6,3),H(1),WBEIG(1,1,1),
     1               WBTOT(1,1,1),IEDGE)
C END DEC 2004
C BEG NOV 1997
            CALL SHRRED(IREDUC,-PPNX,-PPNY,PPNXY,TX(1),TY(1),GTX(1,1),
C BEG OCT 1996
     1                  EIGLOC,0,0,0,0.,0.,1,-PSKNXP,-PSKNYP,25)
C END OCT 1996
C END NOV 1997
            IF (NPRT.GE.2.AND.IREDUC.EQ.1) WRITE(IFILE,*)
     1     ' LOCAL BUCKLING OF PANEL SKIN AFTER KNOCKDOWN FOR T.S.D.=',
     1      EIGLOC
            INUMTT = INUMTT + 1
C BEG DEC 2004
            FSAFTY = FSLOC 
C END DEC 2004
            CALL CONVRF(FSAFTY,CN2)
            IF (IMOD.EQ.0.AND.(EIGLOC/FSAFTY).LT.MAXCON) THEN
               ICAR = ICAR + 1
               PCWORD(ICAR) = 'local buckling of triangular skin'
               CPLOT(ICAR) = EIGLOC/FSAFTY - 1.
               IADDCC(ICAR) = 0
               FSAFEP(ICAR) = FSAFTY
            ENDIF
            IF (IMOD.EQ.0.AND.(EIGLOC/FSAFTY).GT.CONMAX) GO TO 762
            IF (IMOD.EQ.1.AND.IPOINC(INUMTT).EQ.0) GO TO 762
            ICONST = ICONST + 1
            IF (IMOD.EQ.0) IPOINC(INUMTT) = 1
            CONSTR(ICONST) = EIGLOC/FSAFTY
            WORDB(ICONST)=
     1     'Local triangular skin buckling load factor -1;FS='
     1     //CN2
C BEG APR 2007
            IF (NPRT.GE.0) WRITE(IFILE,'(A,1P,E12.4,2X,A)')
     1    ' Margin=',CONSTR(ICONST)-1.,WORDB(ICONST)
C END APR 2007
C23456789012345678901234567890123456789012345678901234567890123456789012
            IF (NPRT.GE.2) WRITE(IFILE,'(A,/,A,/,A,I3,A,I2,A,I2)')
     1    ' ***** THE ISOGRID PANEL SKIN BUCKLING MARGIN WAS COMPUTED:',
     1      WORDB(ICONST),
     1    ' ******* CONSTRAINT NO.',ICONST,'; LOAD SET NO.',ILOADS,
     1    '; SUBCASE NO.',ICASE
  762       CONTINUE
         ENDIF
C    End of ISOGRD.EQ.1 condition
C
C BEG MAR 2009
         IF (ITYPE.EQ.1.AND.NPRTS.GE.2) WRITE(IFILE,*)
C        IF (               NPRTS.GE.2) WRITE(IFILE,*)
     1   ' AFTER "762 CONTINUE    ": ICAR0,ICAR,INUMTT,ICONST=',
     1                               ICAR0,ICAR,INUMTT,ICONST
C END MAR 2009
         IF (ISTIF(1).NE.0.AND.EIGGEN.LT.1.0) ISTOP = 1
C
         ITESTY = 0
         ICAR01 = ICAR0 + 1
         IF (ICAR.GE.ICAR01) THEN
            DO 763 I = ICAR01,ICAR
               J = I - ICAR0
               CONPRT(J) = (CPLOT(I) + 1.)*FSAFEP(I) - 1.
               IF (CONPRT(J).LT.0.0) THEN
C BEG DEC 1997
                  ILET = INDEX(PCWORD(I),'wavelength/celldiam')
                  IF (ILET.EQ.0) THEN
                     ITESTY = 1
                     IRESTY = 1
                  ENDIF
C END DEC 1997
               ENDIF
  763       CONTINUE
            CALL MOVER(0,0,IDUMMY,1,99)
            IF (NPRT.GE.0) WRITE(IFILE,*)
     1    ' ****** RESULTS FOR LOAD SET B BUCKLING ******'
            IF (NPRT.GE.0)
     1      WRITE(IFILE,*)' NOTE: FOLLOWING MARGINS COMPUTED WITH THE'
            IF (NPRT.GE.0)
     1      WRITE(IFILE,*)'       FACTORS OF SAFETY SET TO UNITY.'
            ARGSTR = ' MARGINS FOR DESIGN SUBJECTED ONL'//
     $               'Y TO THE LOADS IN LOAD SET B:   '
            CALL OUTVR2(J,CONPRT,PCWORD(ICAR01),ARGSTR,IFILE,80,1,
     $                  IDUMMY,6)
         ENDIF
  765    CONTINUE
         IABP  = IABPS
         IABT  = IABTS
         P     = PSAVE
         FNX   = FNXS
         FNY   = FNYS
         FNXY  = FNXYS
         FNX0  = FNX0S
         FNY0  = FNY0S
         FNXY0 = FNXY0S
C BEG JUN 1999
         MX    = MXS
         MY    = MYS
C END JUN 1999
         ITESTB = 0
         ICAR   = 0
         ICONST = 0
         INUMTT = 0
         CALL MOVER(0, 0,IPOINC,1,100)
         NPRT = NPRTS
         IF (ITESTY.EQ.1) THEN
C BEG FEB 1999
            CALL LOADBA(17)
C END FEB 1999
            ITESTY = 0
            IRESTY = 0
         ENDIF
         GO TO 2222          
C23456789012345678901234567890123456789012345678901234567890123456789012
      ENDIF
C  End of IF (ITESTB.EQ.1) section
C END FEB 1996
C***********************************************************************
C IF THE WALL IS TRUSS-CORE SANDWICH CONSTRUCTION, CHECK FIRST TO SEE IF
C THERE IS BUCKLING OF THE LOWER OR UPPER FACE SHEETS FROM THE LOADS IN
C LOAD SET B ACTING BY THEMSELVES. IF SO, SET UP CONSTRAINT CONDITIONS,
C SET ITRUSS = 1, CALCULATE THE STRESSES FROM STRCON, CALCULATE THE
C GENERAL INSTABILITY LOAD FACTOR, CALCULATE THE OBJECTIVE FUNCTION, AND
C RETURN. 
C**********************************************************************
C
      IF (ISTIF(1).EQ.5.OR.ISTIF(2).EQ.5) THEN
         IF (IMOD.EQ.0) THEN
            ICAR   = 0
            ITRUSS = 0
            CALL MOVER(0, 0,IPOINC,1,100)
         ENDIF
         ICONST = 0
         INUMTT = 0
         CALL MOVER(0.,0,DELFCE,1,8)
         CALL MOVER(0.,0,DELISO,1,12)
         CALL MOVER(0.,0,DELSKN,1,12)
C BEG DEC 2005
 9127    CONTINUE
         ILABEL=9127
         IF (NPRT.GE.1) WRITE(IFILE,*)
     1            ' LABEL NO. IN STRUCT=',ILABEL
C END DEC 2005
         CALL STFEIG(ICASE,ISTIF,B,B2,H,W,W2,CX,CY,RESEIG,RESTOT,
     1            ICONST,CONSTR,WORDB,IADDB,ISKIN,TX,TY,GTX,GTY,IREDUC,
     1            CONMAX,IPOINC,INUMTT,IMOD,0,MCRIP,NCRIP,IFILE,JJJ,
C BEG JULY 1997
     1          RWBTOT,RWBEIG,ICASE,FSBSTR,EIGTRY,ILAMB2,ILAM34,ILAM44,
C END JULY 1997
C BEG JULY 1995
C BEG NOV 2003
     1            1,ITRUSS,ICWEB,ICROWN,FKNOCK,IPROMP,IQUICK,WBEIG,0,
C BEG JUN 2004
C BEG DEC 2005
C BEG FEB 2006
     1            IBLDUM,ABIG,BBIG,9127,ILOADS,FSLOC)
C END FEB 2006
C END DEC 2005
C END JUN 2004
C END NOV 2003
C END JULY 1995
C BEG FEB 1996
         IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
         IF (ITRUSS.EQ.1) THEN
            IF (IMOD.EQ.0) WRITE(IFILE,115)
  115       FORMAT(/
     1    ' ONE OR MORE OF THE FACE SHEETS OF THE TRUSS-CORE SANDWICH'/
     1    ' BUCKLES OR NEARLY BUCKLES UNDER THE LOADS IN LOAD SET B'/
     1    ' ACTING ALONE.  THE ANALYSIS PROCEEDS WITH LIMITED'/
     1    ' EVALUATION OF OTHER BEHAVIORS (STRESSES FROM SUBROUTINE'/
     1    ' STRCON; GENERAL INSTABILITY FROM PANDA-TYPE CLOSED FORM'/
     1    ' SOLUTION).   OTHER BEHAVIORS WILL BE EVALUATED MORE'/
     1    ' COMPLETELY WHEN BOTH LOWER AND UPPER FACE SHEETS ARE'/
     1    ' STRONG ENOUGH TO RESIST BUCKLING UNDER THE LOADS IN'/
     1    ' LOAD SET B ACTING ALONE.'/)
C
            CALL STRCON(CONMAX,ISTIF,NSEG,NLAYER,LTYPE,EALLOW,MATL,
     1               ANGLE,EPS1,EPS2,EPS12,EPS10,EPS20,EPS120,
     1               B2,W2,ICONST,CONSTR,WORDB,IADDB,T,TAPE,DEGRAD,
     1               FSSTR,ETHERM,THERMX,THERMY,IPOINC,INUMTT,IMOD,
     1               EPSLOD,ZPARTX,ZPARTY,ETHRMX,ETHRMY,CRACK,ICHANG,
     1               EALLST,NPRT,NAPPL,IFILE,ITYPE,IICHAN,
     1               EPSTOT,EPSFIX,EPSEIG,1,INTEXT,ICASE,
     1               TEMP,FMULT,NNODES,IMTEMP,P,PWDD,IABT,0,1,0,1)
C
            ISKIN = 0
            ISHORT= 1
            IF (IMOD.EQ.0.AND.JJJ.EQ.0.AND.NPRT.GE.1) WRITE(IFILE,9405)
 9405       FORMAT(/' GENERAL INSTABILITY FROM PANDA-TYPE THEORY...')
 9130       CONTINUE
            ILABEL=9130
            IF (NPRT.GE.1) WRITE(IFILE,*) ' LABEL NO. IN STRUCT=',ILABEL
            CALL BUCPAN(IFILE,IMOD,JJJ,ICONST,CONSTR,WORDB,ISTIF,IREDUC,
     1           KOITER,LENMOD,CONMAX,FSGEN,FSPAN,FSLOC,EIGGEN,3,IPOINC,
     1           INUMTT,FKNOCK,IGENRL,CSLOP,EILOCL,MLOCAL,ISKIN,
     1           MSHEAR,NSHEAR,MNOSHR,NNOSHR,ITUTOR,IWIDE,ISHORT,
     1           FNX,FNY,FNXY,FNX0,FNY0,FNXY0,FNXP0,FNYP0,
     1           FNXYP0,FNXPL0,FNYPL0,FNXYPL,NLOCAL,ITIP,IABP,1,
     1           EPSLOD(4),RWBEIG,RWBTOT,ICASE,FSBSTR,1,TLOCAL,0,0,
C BEG NOV 2003
     1           0,9130,ICD7D,ICD8D,ICD9D,0,ILOADS,MORCON,NCASES,18)
C END NOV 2003
            IF (IRESTY.EQ.1) GO TO 2222
C
            IF (ISTIF(1).NE.0.AND.EIGGEN.LT.1.0) ISTOP = 1
C
            GO TO 9410
         ENDIF
      ENDIF
C
C***********************************************************************
C BEGIN CALCULATION OF "KNOCKDOWN" FACTORS TO ACCOUNT FOR IN-PLANE SHEAR
C LOADING AND ANISOTROPY IN BOSOR4-TYPE (IQUICK = 0) MODELS. ALSO, GET
C KNOCKDOWN FACTORS FOR IMPERFECTION SENSITIVITY FOR LOCAL, PANEL, AND
C GENERAL BUCKLING.
C***********************************************************************
C
      IF (IMOD.EQ.0) THEN
C BEG DEC 2003
         IF (JJJ.EQ.0.AND.NPRT.GE.1)
     1   WRITE(IFILE,'(A,/,A,/,A)')
     1 ' *** END OF CALCS. FOR PREBUCKLING FORCE DISTRIBUTIONS ***',
     1 ' Prebuckling bending due to initial imperfections neglected.',
     1 ' *************************************************************'
C END DEC 2003
C        IF (IMOD.EQ.0.AND.ITUTOR.EQ.1)
C    1    CALL DATUM(IFILE4,40,0,0,INT,REALL,CHARAC,IOUT,0,IPROMP)
C BEG OCT 2006
      IF (NPRT.GE.1) WRITE(IFILE,'(/,/,/,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************',
     1' ************          CHAPTER 8              *****************',
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************'
      IF (NPRT.GE.0) WRITE(IFILE,'(A,I3,A)')
     1' **** CHAPTER  8: DESIGN PERTURBATION INDEX, IMOD=',IMOD,' *****'
      IF (NPRT.GE.1) WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1 ' *************************************************************',
     1 ' CHAPTER 8  Do PANDA-type local, inter-ring, general buckling',
     1 '            analyses and PANDA-type stringer web and ring web',
     1 '            buckling analyses to get knockdown factors to',
     1 '            compensate for lack of in-plane shear Nxy loading',
     1 '            and anisotropy in discretized BOSOR4-type models.',
     1 '            (See Section 11 of [1A] and Item No. 81 in [1L]).'
C END OCT 2006
C BEG NOV 2003
         IF (NPRT.GE.1) WRITE(IFILE,
     1'(/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1'*** BEGIN SUBROUTINE BUCPAN (KNOCKDOWN PANDA-TYPE BUCKLING) ***',
     1'**** The purpose of the following BUCPAN execution is to find:',
     1'*** LOCAL BUCKLING (buckling of skin between stiffeners):',
     1'**** a.with in-plane shear Nxy and anisotropic effects included',
     1'**** b.without in-plane shear Nxy and anisotropic effects',
     1'*** INTER-RING BUCKLING (stringers smeared out):',
     1'**** a.with in-plane shear Nxy and anisotropic effects included',
     1'**** b.without in-plane shear Nxy and anisotropic effects',
     1'*** GENERAL INSTABILITY (rings and stringers smeared out):',
     1'**** a.with in-plane shear Nxy and anisotropic effects included',
     1'**** b.without in-plane shear Nxy and anisotropic effects',
     1'*** THE PURPOSE IS TO FIND KNOCKDOWN FACTORS TO COMPENSATE',
     1'*** FOR THE ABSENCE OF IN-PLANE SHEAR AND ANISOTROPY IN BOSOR4-',
     1'*** TYPE MODELS (DISCRETIZED MODULE MODELS).',
     1'**** See Section 11, p. 509, of Reference [1].'
         IF (NPRT.GE.1) WRITE(IFILE,'(A,/,A)')
     1'*** NOTE: This set of calculations does NOT include the effect',
     1'***       of initial geometric buckling modal imperfections.'
C23456789012345678901234567890123456789012345678901234567890123456789012
C END NOV 2003
 9140    CONTINUE
         ILABEL=9140
         IF (NPRT.GE.1) WRITE(IFILE,*) ' LABEL NO. IN STRUCT=',ILABEL
         FNYEFF = FNY
         FNY0FF = FNY0
         IF (ISTIF(2).EQ.0) THEN
            FNYEFF = FNY + DFNYPA
            FNY0FF = FNY0 + DFNYPB
         ENDIF
         CALL BUCPAN(IFILE,IMOD,JJJ,ICONST,CONSTR,WORDB,ISTIF,IREDUC,
     1           KOITER,LENMOD,CONMAX,FSGEN,FSPAN,FSLOC,EIGGGG,2,IPOINC,
     1           INUMTT,FKNOCK,IGENRL,CSLOPE,EILOCL,MLOCAL,ISKIN,
     1           MSHEAR,NSHEAR,MNOSHR,NNOSHR,ITUTOR,IWIDE,IQUICK,
     1           FNX,FNYEFF,FNXY,FNX0,FNY0FF,FNXY0,FNXP0,
     1           FNYP0,FNXYP0,FNXPL0,FNYPL0,FNXYPL,NLOCAL,ITIP,
     1           IABP,1,EPSLOD(4),RWBEIG,RWBTOT,ICASE,FSBSTR,1,TLOCAL,
C BEG NOV 2003
     1           0,0,0,9140,ICD7D,ICD8D,ICD9D,0,ILOADS,MORCON,NCASES,19)
C END NOV 2003
         IF (IRESTY.EQ.1) GO TO 2222
C BEG DEC 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
         IF (NPRT.GE.0) 
     1    WRITE(IFILE,'(/,A,I5,A,/,A,/,A,1P,2E12.4,/,A,1P,2E12.4)')
     1  ' Label No. in STRUCT=',ILABEL,': Modifiers for knockdowns',
     1  ' generated from use of the alternative buckling soln.(if any)',
     1  '  General Instability, FKNOCK(1), EIGRT9 =',FKNOCK(1),EIGRT9,
     1  '  Local Buckling,      FKNOCK(2), EIGRT7 =',FKNOCK(2),EIGRT7
C
         IF (NPRT.GE.0) WRITE(IFILE,'(A,/,A,/,A,/,A,/,A,/,A,/)')
     1'**** END SUBROUTINE BUCPAN (KNOCKDOWN PANDA-TYPE BUCKL.) ******',
     1'**** Knockdown factors to account for anisotropy and/or the',
     1'**** presence of in-plane shear, in order to compensate for the',
     1'**** neglect of these in the BOSOR4-type discretized models for',
     1'**** buckling.',
     1'****************************************************************'
C END DEC 2003
C
C BEG JUN 1998
         FKNOCK(1) = FKNOCK(1)*EIGRT9
         FKNOCK(2) = FKNOCK(2)*EIGRT7
C END JUN 1998
         IF (EIGGGG.EQ.0) EIGGGG = EIGBOW
         IF (IMOD.EQ.0.AND.ISTIF(1).NE.0) EILC82 = EIGSS
C BEG MAR 1996 (Comment out since FNNORM is established above for IMOD=0)
C        FNNORM = SQRT(FNX**2 + FNY**2 + FNXY**2)
C END MAR 1996
         IF (FNNORM.EQ.0.) THEN
           EIGLCS(1) = EILOCL
           N = 1
         ENDIF
C
         MCRIP = MSKIN
         NCRIP = NSKIN
         IF (ABS(CSLOPE).LT.0.01.OR.ABS(CSLOPE).GT.10.) CSLOPE = 0.
         FKNOCK(2) = MIN(FKNOCK(2),FKNOCK(3))
         IF (FKNOCK(2).EQ.FKNOCK(3).AND.FKNOCK(2).LT.1.0) THEN
            MLOCNS = MLCNS3
            NLOCNS = NLCNS3
         ENDIF
         IF (ISTIF(1).EQ.0.AND.ISTIF(2).EQ.0) FKNOCK(2)=FKNOCK(1)
         IF (ISTIF(2).EQ.0) FKNOCK(4)=FKNOCK(1)
         IF (ISTIF(1).EQ.0.AND.ISTIF(2).NE.0) FKNOCK(4)=FKNOCK(2)
         CALL EQUFCE(ISTIF,B,B2,H,W,W2,RESULT,RSULT,NAPPL)
         IF (ISOGRD.EQ.1) FKNOCK(2) = 1.0
C BEG OCT 1996
         VINKNK = FKNOCK(2)
C END OCT 1996
      ENDIF
C  End of (IMOD.EQ.0) condition.
C
C BEG NOV 1995
C  BECAUSE "STRUCT" WAS SO LONG, IT WAS NECESSARY TO CARVE OUT THE
C  SECTION ON IMPERFECTION SENSITIVITY AND PUT IT IN A SEPARATE
C  SUBROUTINE. THE CALL TO THIS SUBROUTINE FOLLOWS:
C
C BEG OCT 2000
C  Temporarily set ISAND = 0 only in imperfection section...
C BEG JAN 2007 
C     ISAND = 0
      IF (ICONSV.GE.1) ISAND = 0
      IF (IMOD.EQ.0.AND.NPRT.GE.0) WRITE(IFILE,'(/,A,I2,A)')
     1' Conservativeness indicator, ICONSV=',ICONSV,
     1' (See panda2.news Item No. 676)'
C END JAN 2007
C END OCT 2000
C BEG MAR 2005
C23456789012345678901234567890123456789012345678901234567890123456789012
      IF (IMOD.EQ.0.AND.NPRT.GE.0)
     1WRITE(IFILE,'(A,/,A,1P,E12.4,/,A,E12.4,/,A,E12.4,/,A,E12.4)')
     1' Initial imperfections for general, panel, local buckling=',
     1' Total out-of-roundness + modal,    W0GLOB =',W0GLOB,
     1' Out-of-roundness,                    WG1  =',WG1,
     1' General buckling modal,              WG2  =',WG2,
     1' Inter-ring buckling modal,          W0PAN =',W0PAN
      IF (IMOD.EQ.0.AND.NPRT.GE.0) WRITE(IFILE,'(A,1P,E12.4)')
     1' Local buckling modal,               W0LOC =',W0LOC
C
      IF (IMOD.EQ.0) RNGKNZ = 1.0
C     IF (IMOD.EQ.0.AND.FNY.LT.0.0.AND.ICASE.EQ.1.AND.PEDG
C    1                            .AND.ISTIF(2).NE.0) THEN
C BEG JULY 2007
      IF (NPRT.GE.1) THEN
      IF (IMOD.NE.0.OR.FNY.GE.0.0.OR. .NOT.PEDG
     1 .OR.ISTIF(2).EQ.0) WRITE(IFILE,'(/,A,/,A,/,A)')
     1' *************************************************************',
     1' CHAPTER 9 ("skin"-ring buckling) is not executed because:',
     1' (IMOD.NE.0.OR.FNY.GE.0.0.OR. .NOT.PEDG.OR.ISTIF(2).EQ.0)'
      IF (NPRT.GE.0) WRITE(IFILE,'(A,I3,A)')
     1' **** CHAPTER  9: DESIGN PERTURBATION INDEX, IMOD=',IMOD,' *****'
      ENDIF
C END JULY 2007
      IF (IMOD.EQ.0.AND.FNY.LT.0.0.AND.PEDG
     1                            .AND.ISTIF(2).NE.0) THEN
C*********************************************************************
C BEGIN CALCULATION OF "SKIN"-RING BUCKLING USING DISCRETIZED MODEL
C OF INTER-RING PANEL WITH SMEARED STRINGERS AND DISCRETIZED RING
C IN ORDER TO GET KNOCKDOWN FACTOR FOR SMEARING RINGS. This block of
C coding was moved up here in March, 2005 because previously PANDA2
C could develop unconservative designs: the amplification
C of a general buckling modal imperfection was based on a general
C buckling load factor that did not account for the knockdown to
C compensate for the inherent unconservativeness of smearing rings.
C To eliminate this fault in PANDA2, we have to find the knockdown
C factor for smearing rings here and then use it appropriately in
C SUBROUTINE STRIMP. See panda2.news Items 509, 511, 522, 532, 605.
C*********************************************************************
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG DEC 2005
C BEG OCT 2006
      IF (NPRT.GE.1) WRITE(IFILE,'(/,/,/,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************',
     1' ************          CHAPTER 9              *****************',
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************'
      IF (NPRT.GE.0) WRITE(IFILE,'(A,I3,A)')
     1' **** CHAPTER  9: DESIGN PERTURBATION INDEX, IMOD=',IMOD,' *****'
      IF (NPRT.GE.1) WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A)')
     1 ' *************************************************************',
     1 ' CHAPTER 9  Do BOSOR4-type "skin"-ring buckling analyses to',
     1 '            compute knockdown factor to compensate for',
     1 '            inherent unconservativeness of models with',
     1 '            smeared rings. (See Items 509, 511, 522, and',
     1 '            605 in [1L]; "skin"=skin+smeared stringers).'
C END OCT 2006
          IF (NPRT.GE.2)
     1    WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1  ' *** BEGIN "SKIN"-RING BUCKLING, DISCRETE MODULE MODEL ***',
     1  ' See Ref.[6]: Bushnell, D., et al, "Additional buckling',
     1  ' solutions in PANDA2", AIAA Paper 99-1233, Proc. 40th AIAA',
     1  ' SDM Conference, pp 302-345 (1999). See especially pp 318-323',
     1  ' and Figs. 30-33. Also, read ITEMs 509, 511, 522, 605 of the',
     1  ' file, ..panda2/doc/panda2.news, about how PANDA2 develops a',
     1  ' knockdown factor to compensate for the unconservativeness of',
     1  ' buckling models in which the rings are smeared out.'
C END DEC 2005
         IF (NPRT.GE.2) WRITE(IFILE,
     1  '(A,/,A,/,A,I2,/,A,I2,/,A,I2,/,A,1P,E12.4,/,A,1P,E12.4)')
     1  ' Check to see if "skin"-ring discretized model is analyzed.',
     1  ' Whether it is or not depends on the following quantities:',
     1  '  Is the panel curved (IFLAT = 0)?,              IFLAT=',IFLAT,
     1  '  What is the ring cross section?,            ISTIF(2)=',
     1   ISTIF(2),
     1'  Did PANDA2 compute resultants at IXNUMB pts in SKIN?, IXNUMB=',
     1   IXNUMB,
     1'  Is the applied axial resultant in Load Set A negative,    Nx=',
     1   FNX,
     1'  Is the applied hoop  resultant in Load Set A negative,    Ny=',
     1   FNY
         IF (NPRT.GE.2) WRITE(IFILE,
     1  '(A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4)')
     1'  Is the average hoop load in the panel skin negative,  FNYAVE=',
     1   FNYAVE,
     1'  Is the average hoop load in the ring web negative,    FCEWEB=',
     1   FCEWEB,
     1'  Is the average hoop load in the ring flange negative, FCEFLG=',
     1   FCEFLG,
     1'  Is in-plane shear load Nxy .LT. 2*SQRT(Nx**2 + Ny**2),   Nxy=',
     1   FNXY
C23456789012345678901234567890123456789012345678901234567890123456789012
C
C BEG JUL 2007
         NVECXS = NVECX
C END JUL 2007
C BEG FEB 2007
C        IF (IFLAT.NE.0) GO TO 9144 
         IF (IFLAT.NE.0) THEN
            IF (NPRT.GE.2) WRITE(IFILE,'(/,A,/)')
     1 ' The panel is flat. There are no "skin"-ring computations.'
            GO TO 9144
C END FEB 2007
         ENDIF
         IF (ISTIF(2).GE.4) GO TO 9144 
C
C        IF (PEDG.AND.ISTIF(2).NE.0.AND.ICASE.EQ.1) THEN
         IF (PEDG.AND.ISTIF(2).NE.0) THEN
C  Get buckling of infinitely long, ring-stiff. cylindrical shell
C  with n = NGENNW circ. waves and symmetry imposed at bottom and top
C  of the discretized skin-smeared-stringer-ring single module model.
C BEG JUL 2007
            IKOUNT = 0
            IMINUS = 0
C END JUL 2007
 9142       CONTINUE
C BEG JUL 2007
            IKOUNT = IKOUNT + 1
C END JUL 2007
            ILABEL=9142
            IF (NPRT.GE.1) WRITE(IFILE,*) 
     1               ' LABEL NO. IN STRUCT=',ILABEL
            FNGENC = PI*ABS(R)/CIRC
            IF (FNGENC.LE.1.0) FNGENC = 1.00001
            NGENNW = FLOAT(NGENQQ)*FNGENC + 0.5
            IF (NGENNW.LT.2) NGENNW = 2 
C BEG FEB 2007
            NGNOLD = NGENNW
C           NGENNW = MAX(NGNOLD,NUSER(ILOADS))
C END FEB 2007
            PEXTNL = ABS(P)
            PACTUL = ABS(P)
            IF (PRESS(ILOADS).EQ.0.) PEXTNL = 1.0
            IF (NPRT.GE.1)
     1      WRITE(IFILE,'(/,A,/,A,1P,E12.4,/,A,I3,/,A,I3)')
     1     '*** Infinite cyl, external lateral pressure) **',
     1     ' Uniform external lateral pressure,      PRESS=',PEXTNL,
     1     ' Buck. axial halfwaves from PANDA-type, MGENQQ=',MGENQQ,
     1     ' Buck. circ. halfwaves from PANDA-type, NGENQQ=',NGENQQ
            IF (NPRT.GE.1) WRITE(IFILE,'(A,I3,/,A)')
     1     ' Buck. circ. halfwaves over arc=pi*r,   NGENNW=',NGENNW,
     1     ' NGENNW is used for the buckling analysis in BUCKLE.'
C
C23456789012345678901234567890123456789012345678901234567890123456789012
            CIRCSY = CIRC
            CIRC = 3.1415927*ABS(R)
C BEG MAR 2005
C IT DOES NOT MAKE SENSE TO DO THE FOLLOWING...(DNWAVX SHOULD BE
C COMPUTED IN BUCPAN, NOT IN BUCKLE. ONLY THE FOURTH CALL TO BUCKLE
C IS VALID AND THEREFORE NOT COMMENTED OUT IN THIS BLOCK OF CODE.
C           EIGRPX = 10E+16
C           EIGRMX = 10E+16
C           IF (IGENNW.GE.2.AND.IGENNW.LT.7)
C    1      CALL BUCKLE(NGENNW+1,IMOD,IFILE,IWR,ILOCR,DSR,ASR,BSR,0,
C    1      DIAGR,CRX,DRX,DIR,XR,YR,ZR,EIGRPX,1,IYLOC7,RESULT,CIRC,M3R,
C    1      IDRWR,NBLKR,NGBKR,NKFR,2,IMAXBR,KMAXBR,IPV2R,IBVCR,1000,1,
C    1      THERMX,THERMS,PEXTNL,KAPPA1,KAPPA2,0,WPRES,IUNK,CS,
C    1      0.,FNY,FNXY,0.,0.,FYBEG,FYEND,FXYBEG,FXYEND,
C    1      0.,FNY0,FNXY0,R,JJJ,1,IABP,LENMOD,0,
C    1      TEMP(1,1),IMTEMP,WPB1,EIGITR(17),0,0.,0,0,0,9480)
C
C           IF (IGENNW.GE.3.AND.IGENNW.LT.7)
C    1      CALL BUCKLE(NGENNW-1,IMOD,IFILE,IWR,ILOCR,DSR,ASR,BSR,0,
C    1      DIAGR,CRX,DRX,DIR,XR,YR,ZR,EIGRMX,1,IYLOC7,RESULT,CIRC,M3R,
C    1      IDRWR,NBLKR,NGBKR,NKFR,2,IMAXBR,KMAXBR,IPV2R,IBVCR,1000,1,
C    1      THERMX,THERMS,PEXTNL,KAPPA1,KAPPA2,0,WPRES,IUNK,CS,
C    1      0.,FNY,FNXY,0.,0.,FYBEG,FYEND,FXYBEG,FXYEND,
C    1      0.,FNY0,FNXY0,R,JJJ,1,IABP,LENMOD,0,
C    1      TEMP(1,1),IMTEMP,WPB1,EIGITR(17),0,0.,0,0,0,9480)
C
C           IF (IGENNW.EQ.2)
C    1      CALL BUCKLE(NGENNW-1,IMOD,IFILE,IWR,ILOCR,DSR,ASR,BSR,0,
C    1      DIAGR,CRX,DRX,DIR,XR,YR,ZR,EIGRMX,1,IYLOC7,RESULT,CIRC,M3R,
C    1      IDRWR,NBLKR,NGBKR,NKFR,2,IMAXBR,KMAXBR,IPV2R,IBVCR,1000,1,
C    1      THERMX,THERMS,PEXTNL,KAPPA1,KAPPA2,0,WPRES,IUNK,CS,
C    1      0.,FNY,FNXY,0.,0.,FYBEG,FYEND,FXYBEG,FXYEND,
C    1      0.,FNY0,FNXY0,R,JJJ,1,IABP,LENMOD,0,
C    1      TEMP(1,1),IMTEMP,WPB1,EIGITR(17),0,0.0,0,0,0,9480)
C
            CALL BUCKLE(NGENNW,IMOD,IFILE,IWR,ILOCR,DSR,ASR,BSR,0,
     1      DIAGR,CRX,DRX,DIR,XR,YR,ZR,EIGR,1,IYLOC7,RESULT,CIRC,M3R,
     1      IDRWR,NBLKR,NGBKR,NKFR,2,IMAXBR,KMAXBR,IPV2R,IBVCR,1000,1,
     1      THERMX,THERMS,PEXTNL,KAPPA1,KAPPA2,0,WPRES,IUNK,CS,
     1      0.,FNY,FNXY,0.,0.,FYBEG,FYEND,FXYBEG,FXYEND,
     1      0.,FNY0,FNXY0,R,JJJ,1,IABP,LENMOD,0,
     1      TEMP(1,1),IMTEMP,WPB1,EIGITR(17),0,DNWAVX,0,0,0,9480)
C
C           Y1 = EIGRMX - EIGR 
C           Y3 = EIGRPX - EIGR 
C           IF ((Y1+Y3).GT.0.0) DNWAVX = 0.5*(Y1-Y3)/(Y1+Y3)
C           IF (Y1.LT.0.0.AND.Y3.LT.0.0) DNWAVX = 0.
C           IF (ABS(DNWAVX).GE.1.0) DNWAVX = 1.0*DNWAVX/ABS(DNWAVX)
C           IF (NGENNW.LE.2.AND.DNWAVX.LT.0.0) DNWAVX = 0.
C           IF (EIGRMX.GT.10.*EIGR) DNWAVX = 0.
C           IF (EIGRPX.GT.10.*EIGR) DNWAVX = 0.
C23456789012345678901234567890123456789012345678901234567890123456789012
C           IF (NPRT.GE.2) WRITE(IFILE,
C    1'(/,A,/,A,I3,1P,E12.4,/,A,I3,1P,E12.4,/,A,I3,1P,E12.4,/A,E12.4)')
C    1' Computation of fractional circumferential wavenumber, DNWAVX:',
C    1' Orig. crit. waves and eigenv.,NGENNW, EIGR   =',NGENNW,EIGR,
C    1' Decrement in circ. wavenumber,NGENNW-1,EIGRMX=',NGENNW-1,EIGRMX,
C    1' Increment in circ. wavenumber,NGENNW+1,EIGRPX=',NGENNW+1,EIGRPX,
C    1' Fractional circumferential wavenumber, DNWAVX=',DNWAVX
C END MAR 2005
            ITIPPL = 0
            IFLGPP = 0
            ICWBRG = 0
            FKNDUM = 1.0
            IF (NPRT.GE.1) WRITE(IFILE,'(/,A,I4,A)')
     1    ' ** BEGIN SUB. MODE ("SKIN"-RING n=',NGENNW,
     1    ' GENERAL BUCKLNG MODE) **'
            CALL MODE(IFILE,NPRT,NSEGR,I5R,IWR,DSR,M3R,YR,ISKN10,
     1          1,2, ZPARTY,0.,CY,1,WPRES,EIGR,
     1          RMAX,ITIPPL,ICWBRG,IMOD,
     1          WW6,WD6,WDD6,UU6,VV6,VP6,ZREFRG,NGENNW,FKNSRG(2),
     1          FKNDUM,ICRNRG,PEXTNL,IFICT9,WDDD6,10,0,TY,2,0,
     1          INTSNG,RAD2,TY,IZSTIF,B,B2,H,W,W2,
     1          B0,B20,H0,WW0,W20,ISTIF,INTEXT,IFAY,IBEAM,IONEST,
     1          AXIAL,CIRC,ICRIP,ISEGC,WRATIO,WTIPWS,WRATTP,
     1          WRATWB,WRATCN,WRWIDE,WIDLMM,PEDG,
     1          ISOGRD,RESULT,IFLGPP)
C
            ITIPL6 = ITIPPL
            IWEBL6 = ICWBRG
            IFLGL6 = IFLGPP
            IF (NPRT.GE.1) WRITE(IFILE,'(/,A,I4,A)')
     1    ' **** END  SUB. MODE ("SKIN"-RING n=',NGENNW,
     1    ' GENERAL BUCKLNG MODE) **'
            WFIRST = WW6(1,1)
            ILASTQ = I5R(NSEGR)
            WLAST  = WW6(ILASTQ,NSEGR)
            IMIDQ  = I5R(2)/2 + 1
            WMIDQ  = WW6(IMIDQ,2)
C BEG FEB 2007
            I5FLG  = I5R(4)
            WFLG   = 1.0
            WFLGW  = 1.0
            IF (ISTIF(2).EQ.1.OR.ISTIF(2).EQ.2) WFLG   = WW6(I5FLG,4)
            I5FLGW = 1
            IF (ISTIF(2).EQ.1) I5FLGW = I5FLG/2 + 1
            IF (ISTIF(2).EQ.1.OR.ISTIF(2).EQ.2) WFLGW  = WW6(I5FLGW,4)
            WFLGM = MAX(ABS(WFLG),ABS(WFLGW))
            WFLGDF = ABS(ABS(WFLG) - ABS(WFLGW))/WFLGM
            WFLGK  = ABS(1.0 - WFLGDF)
            IF (NPRT.GE.2) WRITE(IFILE,
     1   '(A,I3,A,/,A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4)')
     1    ' Mode shape properties for n=',NGENNW,' circ. halfwaves:',
     1    ' Normal displacement midway between rings,   WFIRST=',WFIRST,
     1    ' Normal displacement midway between rings,    WLAST=',WLAST,
     1    ' Normal displacement in skin at web root,     WMIDQ=',WMIDQ,
     1    ' Normal displacement in ring at flange tip,    WFLG=',WFLG
            IF (NPRT.GE.2)
     1      WRITE(IFILE,'(A,1P,E12.4,/A,1P,E12.4,/A,1P,E12.4)')
     1    ' Normal displacement, ring flange at web tip, WFLGW=',WFLGW,
     1    ' Normalized difference,     ABS(WFLG-WFLGW)/WFLGMAX=',WFLGDF,
     1    ' Possible candidate for knockdown factor,     WFLGK=',WFLGK
C END FEB 2007
C BEG JUL 2007
            IF (NPRT.GE.2) WRITE(IFILE,'(A,I2,A,1P,4E12.4)')
     1    ' Eigenvalues for ',IKOUNT,' roots:  EIGRPP= ',
     1                                            (ROOTX(I),I=1,IKOUNT)
C END JUL 2007
C23456789012345678901234567890123456789012345678901234567890123456789012
            IF (ITIPL6.EQ.0.AND.IWEBL6.EQ.0.AND.IFLGL6.EQ.0
     1          .AND.WFIRST*WLAST.GT.0.0.AND.
     1           ABS(WMIDQ).GT.0.05*ABS(WFIRST+WLAST).AND.
     1           WFIRST*WMIDQ.GT.0.0) THEN
C BEG JUL 2007
C              EIGRP = EIGR
               EIGRP = ROOTX(IKOUNT)
               EIGR = EIGRP
C END JUL 2007
               IF (NPRT.GE.2)
     1       WRITE(IFILE,'(A,1P,E12.4,/,A,I4,A,/,A,/,A,1P,E12.4,A,/,A)')
     1  ' Buckling load factor BEFORE knockdown for smeared stringers=',
     1            EIGRP,
     1       ' In this n=',NGENNW,
     1       ' general buckling analysis there is no knockdown',
     1       ' for smeared stringers.',
     1       ' NOTE: The buckling load factor,',EIGR,', will not be',
     1       ' further reduced by the "shear/anisotropy" factor.'
C
C  Next, compute buckling load factor of "ring", that is, the infinite
C              cylindrical shell with all stiffeners smeared, buckling in the
C              n=NGENNW circ. wave mode. The formula for buckling of a "ring" of
C              unit axial length under uniform external pressure, p, is:
C              p(crit) = (n**2 - 1)*EI/r**3
C              in which the bending stiffness, EI = CS55 - CS25**2/CS22,
C              where CS = integrated constitutive matrix with all stiffeners
C              smeared.
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG FEB 2007
              FNARCQ = FLOAT(NGNOLD) + DNWAVX
              FNARCQ = MAX(FNARCQ,FLOAT(NGENNW))
C END FEB 2007
              EIGRNG = 
     1        ((FNARCQ**2-1.)*(CS(5,5)-CS(2,5)**2/CS(2,2))/(ABS(R))**3)/
     1                                           PEXTNL
              IF (EIGR.GT.0.0) RNGKNZ = EIGR/EIGRNG
              IF (RNGKNZ.GT.1.0) RNGKNZ = 1.0
              IF (RNGKNZ.LE.0.) RNGKNZ = 1.0
C BEG FEB 2010
              IF (FNARCQ.GT.100.0) RNGKNZ = 1.0
              IF (RNGKNZ.LE.0.1) RNGKNZ = 0.1
C END FEB 2010
C BEG OCT 2006
C BEG FEB 2007
C             IF (ICONSV.EQ.-1) RNGKNZ = 1.0
              IF (ICONSV.EQ.-1.AND.WFLGDF.LT.0.10) RNGKNZ = 1.0
C END FEB 2007
C END OCT 2006
C BEG JUL 2007
             IF (NPRT.GE.0) WRITE(IFILE,'(/,A,I2,A)')
     1     ' Mode number ',IKOUNT,' is     a suitable ring mode.'
C END JUL 2007
C BEG JAN 2006 (temporary)
              IF (NPRT.GE.0) WRITE(IFILE,
     1  '(/,A,/,A,1P,E12.4,/,A,1P,E12.4,/,A,/,A,1P,E12.4,/,A,1P,E12.4)')
     1     ' Knockdown for smeared rings on cylindrical shell...',
     1    '  Buckling load factor for n+dn = FNARCQ=',FNARCQ,
     1    '                               from discrete model =',EIGR,
     1    '  Buckling load factor for ring with bending stiffness EI:',
     1    '                      pcrit=[(n+dn)**2-1]*EI/r**3/p=',EIGRNG,
     1    '  Knockdown factor, general buckling,   EIGR/EIGRNG=',RNGKNZ
C23456789012345678901234567890123456789012345678901234567890123456789012
            ELSE
C BEG NOV 2003
               IF (NPRT.GE.0)
     1         WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,1P,E12.4,/,A)')
     1       ' ****** WARNING ******* WARNING ******** WARNING *****',
     1       ' KNOCKDOWN FACTOR FOR UNCONSERVATIVENESS OF SMEARING',
     1       ' RINGS IS NOT COMPUTED BECAUSE THE BUCKLING MODE SHAPE',
     1       ' JUST COMPUTED IS INAPPROPRIATE.',
     1       ' THE RING SMEARING KNOCKDOWN FACTOR, RNGKNZ =',RNGKNZ,
     1       ' **** END WARNING *** END WARNING *** END WARNING ****'
C
               IF (NPRT.GE.0.AND.(WFIRST*WLAST).LT.0.0)
     1         WRITE(IFILE,'(/,A,/,A,I3,A,/,A,/,A,/,A,/,A,/,A)')
     1       ' ****** NOTE ******** NOTE ********** NOTE ********',
     1       ' Discretized "skin"-ring module n=',NGENNW,' buckling',
     1       ' mode does not represent general instability, since the',
     1       ' normal displacement of the panel skin at one extreme',
     1       ' of the discretized module is positive whereas that at',
     1       ' the other extreme is negative.',
     1       ' **** END NOTE ***** END NOTE ****** END NOTE ******'
C
               IF (NPRT.GE.0.AND.(WFIRST*WLAST).GT.0.0) THEN
                  IF (ABS(WMIDQ).LE.0.05*ABS(WFIRST+WLAST))
     1            WRITE(IFILE,'(/,A,/,A,I3,A,/,A,/,A,/,A,/,A,/,A)')
     1       ' ****** NOTE ******** NOTE ********** NOTE ********',
     1       ' Discretized "skin"-ring module n=',NGENNW,' buckling',
     1       ' mode does not represent general instability, since the',
     1       ' normal displacement of the panel skin at the ring',
     1       ' is much smaller than the average of the normal dis-',
     1       ' placements midway between rings.',
     1       ' **** END NOTE ***** END NOTE ****** END NOTE ******'
               ENDIF
C
               IF (ITIPL6.EQ.1.AND.NPRT.GE.0)
     1            WRITE(IFILE,'(/,A,/,A,I4,A,/,A,/,A)')
     1       ' ******* NOTE ********** NOTE ******** NOTE *********',
     1       ' Discretized "skin"-ring module n=',NGENNW,
     1       ' gen. buckling mode',
     1       ' involves significant sidesway of the ring web.',
     1       ' ***** END NOTE ****** END NOTE ***** END NOTE *********'
               IF (IWEBL6.EQ.1.AND.NPRT.GE.0)
     1            WRITE(IFILE,'(/,A,/,A,I4,A,/,A,/,A)')
     1       ' ******* NOTE ********** NOTE ******** NOTE *********',
     1       ' Discretized "skin"-ring module n=',NGENNW,
     1       ' gen. buckling mode',
     1       ' involves significant crippling of the ring web.',
     1       ' ***** END NOTE ****** END NOTE ***** END NOTE *********'
               IF (IFLGL6.EQ.1.AND.NPRT.GE.0)
     1            WRITE(IFILE,'(/,A,/,A,I4,A,/,A,/,A)')
     1       ' ******* NOTE ********** NOTE ******** NOTE *********',
     1       ' Discretized "skin"-ring module n=',NGENNW,
     1       ' gen. buckling mode',
     1       ' involves significant crippling of the ring flange.',
     1       ' ***** END NOTE ****** END NOTE ***** END NOTE *********'
C BEG JUL 2007
C23456789012345678901234567890123456789012345678901234567890123456789012
               IF (IKOUNT.LT.4) THEN
                  IF (NPRT.GE.0) WRITE(IFILE,'(/,A,I2,A,A)')
     1          ' Mode number ',IKOUNT,' is not a suitable ring mode.',
     1          ' Try the next higher mode.'
                  EIGONE(IKOUNT) = ROOTX(1)
                  IF (IKOUNT.GT.1) THEN
                     DIFEIG = ABS(EIGONE(1) -EIGONE(IKOUNT))/EIGONE(1)
                     IF (IMINUS.EQ.0.AND.DIFEIG.GT.0.0001) THEN
                       WRITE(IFILE,'(A,A,I2,/,A,1P,E12.4,/,A,1P,E12.4)')
     1               ' First eigenvalue changed from 1st interation.',
     1               ' Iteration no.',IKOUNT,
     1               ' First eigenvalue from 1st iteration=',EIGONE(1),
     1               ' First eigenvalue from nth iteration=',
     1                                                  EIGONE(IKOUNT)
                       WRITE(IFILE,'(A)')
     1               ' Do this iteration over again once.'
                       IKOUNT = IKOUNT - 1
                       IMINUS = 1
                     ENDIF
                  ENDIF
                  NVECX = IKOUNT + 1
                  GO TO 9142
               ENDIF
C END JUL 2007
            ENDIF
C   End of IF (ITIPL6.EQ.0.AND.IWEBL6.EQ.0.AND.IFLGL6.EQ.0....) section
            IF (NPRT.GE.0) WRITE(IFILE,'(A,/,A,/,A,/)')
     1    ' END OF SECTION ON GENERATION OF KNOCKDOWN FACTOR FOR',
     1    ' COMPENSATING FOR THE UNCONSERVATIVENESS OF SMEARING RINGS',
     1    ' ---------------------------------------------------------'
            CIRC = CIRCSY
         ENDIF
C (End of IF (PEDG.AND.ISTIF(2).NE.0) condition)
C BEG JAN 2006
C        IF (RNGKNZ.LT.0.7) RNGKNZ = 0.7
C BEG FEB 2007
C        IF (RNGKNZ.LT.0.9) RNGKNZ = RNGKNZ + RNGFCT*(0.9 - RNGKNZ)
         IF (WFLGDF.LT.0.10.AND.RNGKNZ.LT.0.9)
     1                      RNGKNZ = RNGKNZ + RNGFCT*(0.9 - RNGKNZ)
C END FEB 2007
         IF (NPRT.GE.0) WRITE(IFILE,'(/,A,1P,E12.4,A,1P,E12.4,A)')
     1 ' Knockdown for smeared rings, RNGKNZ=',RNGKNZ,'(FNARCQ=',
     1   FNARCQ,')'
C END JAN 2006
C BEG AUG 2005
         NGENNA(JJJ+1,ILOADS,ICASE) = NGENNW
         IF (JJJ.GE.1.AND.NGENNA(JJJ,ILOADS,ICASE).NE.NGENNW)
     1    WRITE(IFILE,'(A,/,A,/,A,/,A,/,A,/,A,I6,/,A,I6,/,A)')
     1  ' ************* WARNING ************** WARNING *************',
     1  ' Number of circumferential halfwaves in general buckling mode',
     1  ' changes in successive design iterations, which may lead to',
     1  ' significant oscillations of some margins during iterations,',
     1  ' especially for shells with buckling modal imperfections.',
     1  ' Circumferential halfwaves in current  iteration=',NGENNW,
     1  ' Circumferential halfwaves in previous iteration=',
     1    NGENNA(JJJ,ILOADS,ICASE),
     1  ' *********** END WARNING ********** END WARNING ***********'
C END AUG 2005
 9144    CONTINUE
C BEG JUL 2007
         NVECX = NVECXS
C END JUL 2007
      ENDIF
C  End of IF (IMOD.EQ.0.AND.FNY.LT.0.0.AND.PEDG.AND.ISTIF(2).NE.0) sect.
C END MAR 2005 
C BEG NOV 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
      IF (IFLAT.EQ.0.AND.IMOD.EQ.0.AND.(FNY.GT.0.0.OR.FNY0.GT.0.0)) THEN
         CALL STRIMP(IFILE,IMOD,ICONST,CONSTR,WORDB,IADDB,BLL2,IFLAT,
     1              KOITER,JJJ,IREDUC,CONMAX,W0LOC,W0GLOB,WG1,WG2,
     1              ILOADS,FSGEN,FSPAN,FSLOC,FSSTR,IQUICK,IPOINC,INUMTT,
     1              EIGBOW,CRACK,EALLST,CSLOPE,ITYPE,IFILE4,IPROMP,
     1              P,IWIDE,MCRIP,NCRIP,WIMPG,WIMPL,IABP,IICURV,ICASE,
     1              THERMX,THERMY,TEMP,FMULT,IMTEMP,FSBSTR,IABT,WIMPG1,
     1              RWBTOT,RWBEIG,FKNKOI,ETHERM,EPSLOD,ETHRMX,ETHRMY,
     1              ICHANG,FKNOCK,NAPPL,EIGLCS,INTGEN,INTRNG,INTLOC,
     1              IGENRL,ISKIN,ITUTOR,ITIP,AMPITR,IICHAN,NNODES,
     1              DFNYPA,DFNYPB,EIGGGG,EILOCL,MLOCAL,NLOCAL,TLOCAL,
     1              MSHEAR,NSHEAR,MNOSHR,NNOSHR,WIDLAM,EILC82,IBEAM,
     1              MORCON,NCASES,ICUBIC,JCUBIC,IARBOC,FKNKAL,FKNMLT,
C BEG MAR 2005
     1              IDMWAV,IDNWAV,FKNSRG,EILC71,EILC81,FKNCKP,1,FKNMLS,
     1              RNGKNZ)
C END MAR 2005
C
         WYY8 = 0.
         WYY9 = 0.
         IFLT8A = 0
         IFLT7A = 0
         CALL MOVER(0.,0,DELFCE,1,8)
         CALL MOVER(0.,0,DELISO,1,12)
         CALL MOVER(0.,0,DELSKN,1,12)
         IF (NPRT.GE.0) WRITE(IFILE,
     1  '(/,A,A,/,A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4)')
     1 ' IMPERFECTION SENSITIVITY KNOCKDOWN FACTORS FOR PANEL NOT',
     1 ' INCLUDING INTERNAL PRESSURE...',
     1 '   Knockdown factor: general    buckling, FKNCKP(9)=',FKNCKP(9),
     1 '   Knockdown factor: inter-ring buckling, FKNCKP(8)=',FKNCKP(8),
     1 '   Knockdown factor: local skin buckling, FKNCKP(7)=',FKNCKP(7)
         INTPRS = 1
      ENDIF
C End of (IFLAT.EQ.0.AND.IMOD.EQ.0.AND.(FNY.GT.0.0.OR.FNY0.GT.0.0)) cond
C23456789012345678901234567890123456789012345678901234567890123456789012
C
      CALL STRIMP(IFILE,IMOD,ICONST,CONSTR,WORDB,IADDB,BLL2,IFLAT,
     1              KOITER,JJJ,IREDUC,CONMAX,W0LOC,W0GLOB,WG1,WG2,
     1              ILOADS,FSGEN,FSPAN,FSLOC,FSSTR,IQUICK,IPOINC,INUMTT,
     1              EIGBOW,CRACK,EALLST,CSLOPE,ITYPE,IFILE4,IPROMP,
     1              P,IWIDE,MCRIP,NCRIP,WIMPG,WIMPL,IABP,IICURV,ICASE,
     1              THERMX,THERMY,TEMP,FMULT,IMTEMP,FSBSTR,IABT,WIMPG1,
     1              RWBTOT,RWBEIG,FKNKOI,ETHERM,EPSLOD,ETHRMX,ETHRMY,
     1              ICHANG,FKNOCK,NAPPL,EIGLCS,INTGEN,INTRNG,INTLOC,
     1              IGENRL,ISKIN,ITUTOR,ITIP,AMPITR,IICHAN,NNODES,
     1              DFNYPA,DFNYPB,EIGGGG,EILOCL,MLOCAL,NLOCAL,TLOCAL,
     1              MSHEAR,NSHEAR,MNOSHR,NNOSHR,WIDLAM,EILC82,IBEAM,
     1              MORCON,NCASES,ICUBIC,JCUBIC,IARBOC,FKNKAL,FKNMLT,
C BEG MAR 2005
     1              IDMWAV,IDNWAV,FKNSRG,EILC71,EILC81,FKNCKP,0,FKNMLS,
     1              RNGKNZ)
C END MAR 2005
C
      IF (INTPRS.EQ.1) THEN
	 IF (NPRT.GE.0) WRITE(IFILE,
     1  '(/,A,A,/,A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4)')
     1 ' IMPERFECTION SENSITIVITY KNOCKDOWN FACTORS FOR PANEL YES',
     1 ' INCLUDING INTERNAL PRESSURE...',
     1 '   Knockdown factor: general    buckling, FKNOCK(9)=',FKNOCK(9),
     1 '   Knockdown factor: inter-ring buckling, FKNOCK(8)=',FKNOCK(8),
     1 '   Knockdown factor: local skin buckling, FKNOCK(7)=',FKNOCK(7)
         IF (IMOD.EQ.0) THEN
            FKNRAT(7) = 1.0
            FKNRAT(8) = 1.0
            FKNRAT(9) = 1.0
            IF (FKNOCK(7).LT.FKNCKP(7)) FKNRAT(7) = FKNCKP(7)/FKNOCK(7)
            IF (FKNOCK(8).LT.FKNCKP(8)) FKNRAT(8) = FKNCKP(8)/FKNOCK(8)
            IF (FKNOCK(9).LT.FKNCKP(9)) FKNRAT(9) = FKNCKP(9)/FKNOCK(9)
         ENDIF
         FKNOCK(7) = FKNRAT(7)*FKNOCK(7)
         FKNOCK(8) = FKNRAT(8)*FKNOCK(8)
         FKNOCK(9) = FKNRAT(9)*FKNOCK(9)
	 IF (NPRT.GE.0) WRITE(IFILE,
     1  '(/,A,A,/,A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4)')
     1 ' IMPERFECTION SENSITIVITY KNOCKDOWN FACTORS FOR PANEL TO BE',
     1 ' USED FROM NOW ON IN THIS CASE...',
     1 '   Knockdown factor: general    buckling, FKNOCK(9)=',FKNOCK(9),
     1 '   Knockdown factor: inter-ring buckling, FKNOCK(8)=',FKNOCK(8),
     1 '   Knockdown factor: local skin buckling, FKNOCK(7)=',FKNOCK(7)
         IF (NPRT.GE.1) WRITE(IFILE,'(A,A)')
     1 ' THE SECOND SET ARE THE KNOCKDOWN FACTORS USED IN THIS CASE',
     1 ' FROM NOW ON.'
      ENDIF
C End of (INTPRS.EQ.1) condition
C END NOV 2003
C BEG OCT 2000
C  Restore ISAND
      ISAND = ISANDS
C END OCT 2000
C BEG FEB 1996
      IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
C
C BEG NOV 2003
C Correct hoop load for axisymmetric variation along axis due to
C "hungry horse" prebuckling deformation as described in Computers & Structures,
C vol. 59, No. 3, pp 489-527, especially pp 495-498.
C
C23456789012345678901234567890123456789012345678901234567890123456789012
      IF (NPRT.GE.2) WRITE(IFILE,
     1'(/,A,/,A,I2,/,A,1P,E12.4,/,A,/,A,1P,3E12.4,/,A,1P,3E12.4)')
     1' In discretized local buckling model the panel skin is being',
     1' modelled as flat if IICURV=0; as curved if IICURV=1: IICURV=',
     1  IICURV,
     1' Radius of curvature used in SUBROUTINE LOCAL, RMAX =',RMAX,
     1' LOADING IN THE PANEL SKIN BEFORE ADJUSTMENTS:',
     1' PREBUCKLING TOTAL RESULTANTS, Nx, Ny, Nxy =',
     1 RESULT(1,1,1),RESULT(2,1,1),RESULT(3,1,1),
     1' PREBUCKLING FIXED RESULTANTS, Nxo,Nyo,Nxyo=',
     1 RESTOT(1,1,1),RESTOT(2,1,1),RESTOT(3,1,1)
      IF (NPRT.GE.2) WRITE(IFILE,'(A,I5,/,A,1P,E12.4,/,A,I3)')
     1' Axial halfwaves in skin buckling mode (PANDA), MLOC71=',MLOC71,
     1' Axial length used for "hungry-horse" analysis, RNGSPA=',RNGSPA,
     1' Number of nodal points used in "hungry-horse" analysis=',IXNUMB
C
      FNYADJ = 0.
      FNYAD0 = 0.
      IF (ICASE.EQ.2.AND.IFLAT.EQ.0.AND.IXNUMB.GT.25
     1                             .AND.MLOC71.GT.2) THEN
C Compute "local" average hoop load near ring (ICASE=2) for Load Sets A & B:
         IYNUMB = 25.*B(2)/(FLOAT(MLOC71)*0.5*RNGSPA) + 1.5
         IF (IYNUMB.LT.(IXNUMB-1)) THEN
            SUMNY = 0.
            SUMNY0= 0.
            DO 1331 I = 1,IYNUMB
               IY = IXNUMB - I + 1
               SUMNY = SUMNY + FNYYP(IY)
               SUMNY0= SUMNY0+ FNYYP0(IY)
 1331       CONTINUE
            FNYADJ = (SUMNY+SUMNY0)/FLOAT(IYNUMB) -FNYAVE -FNYAVB
            FNYAD0 =        SUMNY0/FLOAT(IYNUMB)          -FNYAVB
            IF (ISOGRD.EQ.0) RESULT(2,1,1) = RESULT(2,1,1) + FNYADJ
            IF (ISOGRD.EQ.0.AND.IZSTIF(1).EQ.0)
     1                       RESULT(2,2,1) = RESULT(2,2,1) +FNYADJ
            IF (ISOGRD.EQ.0) RESTOT(2,1,1) = RESTOT(2,1,1) + FNYAD0
            IF (ISOGRD.EQ.0.AND.IZSTIF(1).EQ.0)
     1                       RESTOT(2,2,1) = RESTOT(2,2,1) +FNYAD0
C           RESULT(2,5,1) = RESULT(2,5,1) + FNYADJ
C           RESTOT(2,5,1) = RESTOT(2,5,1) + FNYAD0
            IF (NPRT.GE.2) THEN
              WRITE(IFILE,'(/,A,/,A,4I5,/,A,1P,4E12.4,/,A,/,A)')
     1      ' "Hungry-horse" corrections to hoop loading near rings:',
     1      ' ICASE,MLOC71,IXNUMB,IYNUMB=',ICASE,MLOC71,IXNUMB,IYNUMB,
     1      ' FNYAVE,FNYAVB,FNYADJ,FNYAD0=',FNYAVE,FNYAVB,FNYADJ,FNYAD0,
     1      ' FNYADJ=adjustment to skin hoop resultant for Load Set A.',
     1      ' FNYAD0=adjustment to skin hoop resultant for Load Set B.'
            ENDIF
         ENDIF
      ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
C END NOV 2003
C
      EPS10 = 0.
      EPS20 = 0.
      EPS120= 0.
C
C BEG JULY 1995
      CALL MOVER(0.,0,DELFCX,1,12)
      CALL MOVER(0.,0,DELCUR,1,3)
      DELCRC = 0.
      DELWBX(1) = 0.
      DELWBX(2) = 0.
C BEG OCT 1998
      CALL MOVER(0.,0,DELFCR,1,12)
      DELWBR(1) = 0.
      DELWBR(2) = 0.
C END OCT 1998
C BEG DEC 2003
      IF (NPRT.GE.1) WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A)')
     1'***** BEGIN SUBROUTINE STRCON (GET DELFCX,DELCUR,DELWBX) *****',
     1' DELFCX =changes in resultants, dNx,dNy,dNxy, in skin-stringer',
     1'         module caused by growth of the initial imperfections.',
     1' DELCUR =changes in curvature and twist in the panel skin.',
     1' DELWBX =change in axial resultant dNx at web root and web tip.'
C END DEC 2003
      CALL STRCON(CONMAX,ISTIF,NSEG,NLAYER,LTYPE,EALLOW,
     1               MATL,ANGLE,EPS1,EPS2,EPS12,EPS10,EPS20,EPS120,
     1               B2,W2,ICONST,CONSTR,WORDB,IADDB,T,TAPE,DEGRAD,
     1               FSSTR,ETHERM,THERMX,THERMY,IPOINC,INUMTT,IMOD,
     1               EPSLOD,ZPARTX,ZPARTY,ETHRMX,ETHRMY,CRACK,ICHANG,
     1               EALLST,NPRT,NAPPL,IFILE,ITYPE,IICHAN,
     1               EPSTOT,EPSFIX,EPSEIG,1,INTEXT,ICASE,
     1               TEMP,FMULT,NNODES,IMTEMP,P,PWDD,IABT,1,IQUICK,0,2)
      IF (NPRT.GE.1) WRITE(IFILE,*)
     1'******* END SUBROUTINE STRCON (GET DELFCX,DELCUR,DELWBX) ******'
      DO 30 ISEG = 1,NSEGB5
      I5I = I5(ISEG)
C BEG JUN 2004
      CALL IDSEG(ISTIF(1),ISEG,NSEGB5,B20(1),W20(1),J,IFAY)
C END JUN 2004
      CURVAR = 0.
      CURFIX = 0.
      A11STR = 0.
      ZZZ    = 0.
      JWEB = 3
      IF (ISTIF(1).EQ.5) JWEB = 2
      IF (J.EQ.JWEB) THEN
         FIABT  = 1 - IABT
C BEG JAN 1995
         FFIABT = IABT
C        CURVAR = EPSLOD(4) + FIABT*ETHERM(4)
C        CURFIX = EPSLDF(4) + FIABT*ETHERM(4)
         CURVAR = EPSLOD(4) - FFIABT*ETHERM(4)
         CURFIX = EPSLDF(4)
C END JAN 1995
C BEG JUN 2004
         CURVSV = CURVAR
         CURFSV = CURFIX
C END JUN 2004
         A11STR = CX(1,1,J) - CX(1,2,J)**2/CX(2,2,J)
         IWEB = JWEB
C BEG JULY 1996
         IF (ISTIF(1).EQ.4.AND.B20(1).GT.W20(1)) IWEB = 4
C END JULY 1996
         DZ1 = H(1)/FLOAT(I5(IWEB)-1)
         ZAVE = TX(2)/2. + H(1)/2.
         IF (ISTIF(1).EQ.5) ZAVE = H(1)/2.
         IAVE = I5I/2 + 1
         FACT = 1.
         IF (ZPARTX(J).LT.0.) FACT = -1.
         IF (ISEG.EQ.IWEB) DZ = FACT*DZ1
C BEG JULY 1995
         IBEG = 1
         IF (ISEG.EQ.(IWEB+2)
     1                .AND.(ISTIF(1).EQ.4.OR.ISTIF(1).EQ.5)) THEN
            DZ = -FACT*DZ1
            IBEG = 2
         ENDIF
C        WRITE(8,*)' IWEB,I,DZ,ZZZ,CURVAR,CURFIX,A11STR,RESULT(1,J,1)='
C    1               IWEB,I,DZ,ZZZ,CURVAR,CURFIX,A11STR,RESULT(1,J,1)
      ENDIF
C  End of (J.EQ.JWEB) condition.
C
      JWEBM = JWEB - 1
      JWEBP = JWEB + 1
C BEG OCT 2006
      IF (ISEG.EQ.1.AND.NPRT.GE.1)
     1  WRITE(IFILE,'(/,/,/,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************',
     1' ************          CHAPTER 12             *****************',
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************'
      IF (ISEG.EQ.1.AND.NPRT.GE.0) WRITE(IFILE,'(A,I3,A)')
     1' **** CHAPTER 12: DESIGN PERTURBATION INDEX, IMOD=',IMOD,' *****'
      IF (ISEG.EQ.1.AND.NPRT.GE.1) WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A)')
     1 ' *************************************************************',
     1 ' CHAPTER 12 Obtain prebuckled state of the initially imperfect',
     1 '            and loaded and bent panel or shell. This section',
     1 '            includes the redistribution of Nx, Ny, Nxy in the',
     1 '            various segments of the stiffened shell structure.'
C END OCT 2006
      IF (ISEG.EQ.1.AND.NPRT.GE.2) WRITE(IFILE,1348)
C23456789012345678901234567890123456789012345678901234567890123456789012
 1348 FORMAT(/' ********** BEGIN OUTPUT FOR STATE CHANGE ***********'/
     1' CHANGES IN STATE OF THE PANEL DUE TO GROWTH OF INITIAL'/
     1' IMPERFECTIONS AS THE LOADING IS APPLIED. THESE CHANGES AFFECT'/
     1' THE BUCKLING LOAD FACTORS AND STRESSES IN THE VARIOUS SEGMENTS'/
     1' OF THE SKIN-STRINGER AND SKIN-RING PANEL MODULES.....')
C
      IF (ITYPE.EQ.1.AND.ISEG.EQ.1.AND.ICASE.EQ.1) THEN
         IF (IMOD.EQ.0) DELCRS(1) = DELCUR(1)
         IF (IMOD.EQ.1) THEN
            GRDCUR(NUMVAR,ILOADS,1) = 0.0
            DELNUM = ABS(DELCUR(1)-DELCRS(1))
            DELDEN = MIN(ABS(DELCUR(1)),ABS(DELCRS(1)))
            IF (DELDEN.GT.0.0) 
     1       GRDCUR(NUMVAR,ILOADS,1) = DELNUM/DELDEN
            GRDMAX(1) = MAX(ABS(GRDCUR(NUMVAR,ILOADS,1)),GRDMAX(1))
            GRDSIG(ILOADS,1)
     1              = MAX(ABS(GRDCUR(NUMVAR,ILOADS,1)),GRDSIG(ILOADS,1))
            IF (NPRT.GE.2) WRITE(IFILE,1350)
     1      NUMVAR,ILOADS,DELCRS(1),DELCUR(1),GRDCUR(NUMVAR,ILOADS,1)
 1350       FORMAT(/
     1    ' RATE OF CHANGE OF AXIAL CURVATURE CHANGE FROM PERTURBATION'/
     1  ' OF DESIGN WITH RESPECT TO VARIABLE NO.',I3,' LOAD SET',I2,':'/
     1' Axial curvature change, unperturbed design,    DELCRS=',1PE12.4/
     1' Axial curvature change,   perturbed design,    DELCUR=',1PE12.4/
     1' Rate of change of axial curvature change from perturbation='/
     1' abs(delcur-delcrs)/min(abs(delcur),abs(delcrs))GRDCUR=',1PE12.4)
         ENDIF
      ENDIF
C  End of (ITYPE.EQ.1.AND.ISEG.EQ.1.AND.ICASE.EQ.1) condition.
C
      IF (ITYPE.EQ.1.AND.ISEG.EQ.1.AND.ICASE.EQ.2) THEN
         IF (IMOD.EQ.0) DELCRS(2) = DELCUR(2)
         IF (IMOD.EQ.1) THEN
            GRDCUR(NUMVAR,ILOADS,2) = 0.0
            DELNUM = ABS(DELCUR(2)-DELCRS(2))
            DELDEN = MIN(ABS(DELCUR(2)),ABS(DELCRS(2)))
            IF (DELDEN.GT.0.0) 
     1       GRDCUR(NUMVAR,ILOADS,2) = DELNUM/DELDEN
            GRDMAX(2) = MAX(ABS(GRDCUR(NUMVAR,ILOADS,2)),GRDMAX(2))
            GRDSIG(ILOADS,2)
     1              = MAX(ABS(GRDCUR(NUMVAR,ILOADS,2)),GRDSIG(ILOADS,2))
            IF (NPRT.GE.2) WRITE(IFILE,1351)
     1      NUMVAR,ILOADS,DELCRS(2),DELCUR(2),GRDCUR(NUMVAR,ILOADS,2)
 1351       FORMAT(/
     1    ' RATE OF CHANGE OF CIRC. CURVATURE CHANGE FROM PERTURBATION'/
     1  ' OF DESIGN WITH RESPECT TO VARIABLE NO.',I3,' LOAD SET',I2,':'/
     1' Circ. curvature change, unperturbed design,    DELCRS=',1PE12.4/
     1' Circ. curvature change,   perturbed design,    DELCUR=',1PE12.4/
     1' Rate of change of circ. curvature change from perturbation='/
     1' abs(delcur-delcrs)/min(abs(delcur),abs(delcrs))GRDCUR=',1PE12.4)
         ENDIF
      ENDIF
C  End of (ITYPE.EQ.1.AND.ISEG.EQ.1.AND.ICASE.EQ.2) condition.
C
C BEG OCT 1998
      IF (ISEG.EQ.1) THEN
         IF (DELFCX(1,1).GT.0.0) THEN
           IF (NPRT.GE.2)
     1     WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,
     1                     A,/,A,/,A,/,A,/,A,/,A,1P,E12.4,/,A)')
     1 ' **** NOTE ********* NOTE ********* NOTE ********* NOTE **** ',
     1 ' This is Segment 1 (Panel skin between adjacent stringers)',
     1 ' Because of "effective width" considerations, the incremental',
     1 ' AXIAL tension in the panel skin, which is generated by',
     1 ' prebuckling bending of the imperfect panel, is being reset to',
     1 ' zero for the buckling computations (ONLY in Segs.1 and NSEG).',
     1 ' This is done because in the real world the incremental axial',
     1 ' tension in the panel skin decays from its computed value at',
     1 ' the hoop coordinate corresponding to the stringer station to',
     1 ' nearly zero midway between adjacent stringers. Therefore, it',
     1 ' is conservative to neglect the effect of this axial tension',
     1 ' on the local buckling load factor computed from the discrete',
     1 ' skin-stringer module. Axial tension is retained in Segment 2.',
     1 '  Axial tension before the reset to zero, dNx(1)=', DELFCX(1,1),
     1 '  Axial tension after  the reset to zero, dNx(1)= 0.0'
           DELFCX(1,1) = 0.0
         ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
         IF (DELFCX(2,1).GT.0.0) THEN
           IF (NPRT.GE.2)
     1     WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,
     1                     A,/,A,/,A,/,A,/,A,/,A,1P,E12.4,/,A)')
     1 ' **** NOTE ********* NOTE ********* NOTE ********* NOTE **** ',
     1 ' This is Segment 1 (Panel skin between adjacent stringers)',
     1 ' Because of "effective width" considerations, the incremental',
     1 ' CIRCUMFERENTIAL tension in the panel skin, generated by',
     1 ' prebuckling bending of the imperfect panel, is being reset to',
     1 ' zero for the buckling computations (ONLY in Segs.1 and NSEG).',
     1 ' This is done because in the "real world" the incremental hoop',
     1 ' tension in the panel skin decays from its computed value at',
     1 ' the axial coordinate corresponding to the ring station',
     1 ' to nearly zero midway between adjacent rings. Therefore, it',
     1 ' is conservative to neglect the effect of this hoop tension',
     1 ' on the local buckling load factor computed from the discrete',
     1 ' skin-stringer module. Hoop tension is retained in Segment 2.',
     1 '  Hoop tension before the reset to zero, dNy(1)=', DELFCX(2,1),
     1 '  Hoop tension after  the reset to zero, dNy(1)= 0.0'
           DELFCX(2,1) = 0.0
         ENDIF
      ENDIF
C  End of (ISEG.EQ.1) condition.
C END OCT 1998
C BEG MAR 1997
      IF (ISOGRD.EQ.0.AND.(NPRT.GE.2.OR.(NPRT.GE.1.AND.IMOD.EQ.0))) THEN
C END MAR 1997
         IF (ISEG.EQ.1) THEN
C BEG NOV 1995
            IF (ISTIF(1).NE.5) THEN
C END NOV 1995
                            WRITE(IFILE,1335) 
     1                      DELCUR(1),DELCUR(2),DELCUR(3),
     1                      DELFCX(1,1),DELFCX(1,JWEBM),DELFCX(1,JWEBP),
     1                      DELFCX(2,1),DELFCX(2,JWEBM),DELFCX(2,JWEBP),
     1                      DELFCX(3,1),DELFCX(3,JWEBM),DELFCX(3,JWEBP),
     1                      DELWBX(1),DELWBX(2),DELWEB(1)
C BEG NOV 1995
            ELSE
                            WRITE(IFILE,2335) 
     1                      DELCUR(1),DELCUR(2),DELCUR(3),
     1                      DELFCX(1,JWEBM),DELFCX(1,JWEBP),
     1                      DELFCX(2,JWEBM),DELFCX(2,JWEBP),
     1                      DELFCX(3,JWEBM),DELFCX(3,JWEBP),
     1                      DELWBX(1),DELWBX(2),DELWEB(1)
            ENDIF
C END NOV 1995
            IF (ISTIF(1).NE.5) WRITE(IFILE,1336) 
     1                      DELSKN(1,1,1),DELSKN(1,2,1),
     1                      DELSKN(2,1,1),DELSKN(2,2,1),
     1                      DELSKN(3,1,1),DELSKN(3,2,1),
     1                      DELFCE(JWEB,1),DELFCE(JWEBP,1),DELWEB(1)
            IF (ISTIF(1).EQ.5) WRITE(IFILE,1337) 
     1                      DELSKN(1,1,1),DELSKN(1,2,1),
     1                      DELSKN(2,1,1),DELSKN(2,2,1),
     1                      DELSKN(3,1,1),DELSKN(3,2,1),
     1                      DELFCE(JWEB,1),DELWEB(1)
         ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
 1335    FORMAT(/
     1 ' CHANGES IN CURVATURE AND TWIST, CHANGES IN RESULTANTS USED',/,
     1 ' IN THE IQUICK = 0 (DISCRETIZED MODULE) TYPE OF ANALYSIS.',/,
     1 ' THE FOLLOWING RESULT FROM GROWTH OF INITIAL IMPERFECTIONS',/,
     1 ' DURING LOADING. THEY DEPEND ON THE SIGNS OF THE',/,
     1 ' IMPERFECTION AMPLITUDES....',/,
     1' Curvature changes and twist: axial, hoop, twist:',/,
     1'  DELCUR(1), DELCUR(2), DELCUR(3)=    ',1P3E12.4,/,
     1' Change in axial resultant Nx in: skin, stringer base, flange:'/
     1'  DELFCX(1,1),DELFCX(1,2),DELFCX(1,4)=',1P3E12.4,/,
     1' Change in circ. resultant Ny in: skin, stringer base, flange:'/
     1'  DELFCX(2,1),DELFCX(2,2),DELFCX(2,4)=',1P3E12.4,/,
     1' Change in in-plane shear Nxy in: skin, stringer base, flange:'/
     1'  DELFCX(3,1),DELFCX(3,2),DELFCX(3,4)=',1P3E12.4,/,
     1' Change in axial resultant Nx in web at: web root,    web tip:'/
     1'  DELWBX(1), DELWBX(2)=               ',1P2E12.4,/,
     1' Change in in-plane shear Nxy in stringer web:',/,
     1'                DELWEB(1)    =',1PE12.4)
C BEG NOV 1995
C23456789012345678901234567890123456789012345678901234567890123456789012
 2335    FORMAT(/
     1 ' CHANGES IN CURVATURE AND TWIST, CHANGES IN RESULTANTS USED',/,
     1 ' IN THE IQUICK = 0 (DISCRETIZED MODULE) TYPE OF ANALYSIS.',/,
     1 ' THE FOLLOWING RESULT FROM GROWTH OF INITIAL IMPERFECTIONS',/,
     1 ' DURING LOADING. THEY DEPEND ON THE SIGNS OF THE',/,
     1 ' IMPERFECTION AMPLITUDES....',/,
     1' Curvature changes and twist: axial, hoop, twist:',/,
     1'  DELCUR(1), DELCUR(2), DELCUR(3)=    ',1P3E12.4,/,
     1' Change in axial resultant Nx in: lower skin, upper skin:',/,
     1'  DELFCX(1,1),DELFCX(1,3)=            ',1P2E12.4,/,
     1' Change in circ. resultant Ny in: lower skin, upper skin:',/,
     1'  DELFCX(2,1),DELFCX(2,3)=            ',1P2E12.4,/,
     1' Change in in-plane shear Nxy in: lower skin, upper skin:',/,
     1'  DELFCX(3,1),DELFCX(3,3)=            ',1P2E12.4,/,
     1' Change in axial resultant Nx in web at: web root,  web tip:',/,
     1'  DELWBX(1), DELWBX(2)=               ',1P2E12.4,/,
     1' Change in in-plane shear Nxy in stringer web:',/,
     1'                DELWEB(1)    =',1PE12.4)
C END NOV 1995
C
C23456789012345678901234567890123456789012345678901234567890123456789012
 1336    FORMAT(/' FOR PANELS THAT ARE NOT ISOGRID NOR TRUSS-CORE...',/,
     1 ' CHANGES IN RESULTANTS USED IN THE IQUICK = 1 (CLOSED FORM)',/,
     1 ' TYPE OF ANALYSIS. THE VALUES ARE INDEPENDENT OF THE SIGNS',/,
     1 ' OF THE IMPERFECTIONS BECAUSE THE IQUICK = 1 MODE OF',/,
     1 ' ANALYSIS USES THE MOST COMPRESSIVE VALUES FOR EITHER',/,
     1 ' POSITIVE OR NEGATIVE IMPERFECTION AMPLITUDES...',/,
     1' Change in axial resultant Nx in: skin and stringer base:',/,
     1'  DELSKN(1,1,1),DELSKN(1,2,1)=',1P2E12.4,/,
     1' Change in circ. resultant Ny in: skin and stringer base:',/,
     1'  DELSKN(2,1,1),DELSKN(2,2,1)=',1P2E12.4,/,
     1' Change in in-plane shear Nxy in: skin and stringer base:',/,
     1'  DELSKN(3,1,1),DELSKN(3,2,1)=',1P2E12.4,/,
     1' Change in axial resultant Nx at the tip of the stringer web:',/,
     1'               DELFCE(JWEB,1)=',1PE12.4,/,
     1' Change in axial resultant Nx in the outstndg stringer flange:'/
     1'              DELFCE(JWEBP,1)=',1PE12.4,/,
     1' Change in in-plane shear Nxy in stringer web:',/,
     1'                DELWEB(1)    =',1PE12.4)
C
C23456789012345678901234567890123456789012345678901234567890123456789012
 1337    FORMAT(/' FOR PANELS THAT ARE TRUSS-CORE CONFIGURATION...',/,
     1 ' CHANGES IN RESULTANTS USED IN THE IQUICK = 1 (CLOSED FORM)',/,
     1 ' TYPE OF ANALYSIS. THE VALUES ARE INDEPENDENT OF THE SIGNS',/,
     1 ' OF THE IMPERFECTIONS BECAUSE THE IQUICK = 1 MODE OF',/,
     1 ' ANALYSIS USES THE MOST COMPRESSIVE VALUES FOR EITHER',/,
     1 ' POSITIVE OR NEGATIVE IMPERFECTION AMPLITUDES...',/,
     1' Change in axial resultant Nx in:lower and upper face sheets:',/,
     1'  DELSKN(1,1,1),DELSKN(1,2,1)=',1P2E12.4,/,
     1' Change in circ. resultant Ny in:lower and upper face sheets:',/,
     1'  DELSKN(2,1,1),DELSKN(2,2,1)=',1P2E12.4,/,
     1' Change in in-plane shear Nxy in:lower and upper face sheets:',/,
     1'  DELSKN(3,1,1),DELSKN(3,2,1)=',1P2E12.4,/,
     1' Change in axial resultant Nx at tip of the trusscore web:',/,
     1'               DELFCE(JWEB,1)=',1PE12.4,/,
     1' Change in in-plane shear Nxy in stringer web:',/,
     1'                DELWEB(1)    =',1PE12.4)
C
      ENDIF
C End of (ISOGRD.EQ.0.AND.(NPRT.GE.2.OR.(NPRT.GE.1.AND.IMOD.EQ.0)))
C        condition.
C BEG FEB 2006
      IF (IMOD.EQ.0) THEN
         IF (DELWBX(2).LE.DELWBX(1)) ISRIDX = 1
         IF (ABS(DELWBX(2)).LT.0.1*ABS(RWBEIG(2)).OR.
     1       ABS(DELWBX(1)).LT.0.1*ABS(RWBEIG(1))) ISRIDX = 1
      ENDIF
C END FEB 2006
C
C BEG SEP 1995
C BEG NOV 1995
C BEG DEC 1995
C           IF (IMOD.EQ.0.AND.ISEG.EQ.1.AND.ISOGRD.EQ.0
            IF ((NPRT.GE.1.OR.JLAST.EQ.1)
     1      .AND.IMOD.EQ.0.AND.ISEG.EQ.1.AND.ISOGRD.EQ.0
C END DEC 1995
     1      .AND.ISTIF(1).NE.5.AND.IQUICK.EQ.0.AND.(DELFCX(1,1).GT.0.0
     1                     .OR.DELFCX(2,1).GT.0.0)) WRITE(IFILE,1361)
C END NOV 1995
C23456789012345678901234567890123456789012345678901234567890123456789012
 1361       FORMAT(/
     1    ' ****** WARNING ******** WARNING ******* WARNING ********',/,
     1    ' THE MARGINS MAY BE SMALLER (MORE CRITICAL) WITH ONE OR',/,
     1    ' MORE IMPERFECTION AMPLITUDES OF THE OPPOSITE SIGN. MAKE',/,
     1    ' SURE TO CHECK THE OPTIMUM DESIGN WITH RUNS IN WHICH YOU',/,
     1    ' TEST FOR ALL POSSIBLE COMBINATIONS OF IMPERFECTION',/,
     1    ' AMPLITUDES.',/,
     1    ' ***** END WARNING ***** END WARNING **** END WARNING ****')
C END SEP 1995
C
      IF (ISOGRD.EQ.1.AND.ISEG.EQ.1.AND.NPRT.GE.2) THEN
         WRITE(IFILE,1353)  DELCUR(1),DELCUR(2),DELCUR(3),
     1                      DELSKN(1,1,1),DELSKN(2,1,1),DELSKN(3,1,1)
C    1                      DELISO(3,1),DELISO(3,2),DELISO(3,3),
C    1                      DELISO(4,1),DELISO(4,2),DELISO(4,3)
C23456789012345678901234567890123456789012345678901234567890123456789012
 1353    FORMAT(/' FOR PANELS THAT ARE ISOGRID CONFIGURATION...',/,
     1 ' CHANGES IN RESULTANTS USED IN THE IQUICK = 1 (CLOSED FORM)',/,
     1 ' TYPE OF ANALYSIS. THE VALUES ARE INDEPENDENT OF THE SIGNS',/,
     1 ' OF THE IMPERFECTIONS BECAUSE THE IQUICK = 1 MODE OF',/,
     1 ' ANALYSIS USES THE MOST COMPRESSIVE VALUES FOR EITHER',/,
     1 ' POSITIVE OR NEGATIVE IMPERFECTION AMPLITUDES...',/,
     1' Curvature changes and twist: axial, hoop, twist:',/,
     1'  DELCUR(1), DELCUR(2), DELCUR(3)          =',1P3E12.4,/,
     1' Change in axial,hoop,shear resultants Nx,Ny,Nxy, panel skin:',/,
     1'  DELSKN(1,1,1),DELSKN(2,1,1),DELSKN(3,1,1)=',1P3E12.4)
C    1' Change in resultant in  webs   along axes of 3 isogrid ribs:',/,
C    1'  DELISO(3,1), DELISO(3,2), DELISO(3,3)    =',1P3E12.4,/,
C    1' Change in resultant in flanges along axes of 3 isogrid ribs:',/,
C    1'  DELISO(4,1), DELISO(4,2), DELISO(4,3)    =',1P3E12.4)
      ENDIF
C
      IF (ISEG.EQ.1.AND.NPRT.GE.2.AND.ICASE.EQ.2.AND.ISTIF(2).NE.0)
     1   WRITE(IFILE,1347) DELSKN(1,2,2),
     1                     DELFCE(JWEB,2),DELFCE(JWEBP,2),DELWEB(2)
C23456789012345678901234567890123456789012345678901234567890123456789012
 1347    FORMAT(/' CHANGES IN RESULTANTS USED FOR THE RINGS IN BOTH',/,
     1 ' THE IQUICK = 1 AND IQUICK = 0 MODES OF ANALYSIS. THE MOST',/,
     1 ' COMPRESSIVE VALUES FOR EITHER POSITIVE OR NEGATIVE',/,
     1 ' IMPERFECTION AMPLITUDES ARE USED...',/,
     1' Change in resultant along the ring axis in the ring base:',/,
     1'  DELSKN(1,2,2)                =',1PE12.4,/,
     1' Change in resultant along the ring axis at the tip of the',/,
     1'  ring web:     DELFCE(JWEB,2) =',1PE12.4,/,
     1' Change in resultant along the ring axis in the outstanding',/,
     1'  ring flange:  DELFCE(JWEBP,2)=',1PE12.4,/,
     1' Change in in-plane shear along the ring axis in ring web:',/,
     1'                DELWEB(2)      =',1PE12.4)
C
      IF (ISEG.EQ.1.AND.NPRT.GE.2) WRITE(IFILE,1354) DELCRC
C23456789012345678901234567890123456789012345678901234567890123456789012
 1354 FORMAT(/' ADDITIONAL CIRCUMFERENTIAL CHANGE IN CURVATURE',/,
     1' FROM GROWTH OF INTER-RING BUCKLING MODAL IMPERFECTION, ',/,
     1' TO BE USED IN THE COMPUTATION OF STRESSES IN THE PANEL SKIN',/,
     1' IN SUBROUTINE STRTHK DURING AN IQUICK=0 ANALYSIS: DELCRC=',
     1 1PE12.4,/)

C
      DO 20 I = 1,I5I
      DNXVAR = DELFCX(1,J)
      DNXYVR = DELFCX(3,J)
      IF (RESULT(3,J,1).NE.0.0)
     1   DNXYVR = DELFCX(3,J)*RESULT(3,J,1)/ABS(RESULT(3,J,1))
      IF (J.EQ.JWEB) THEN
          ZZZ  =  FLOAT(I-IAVE)*DZ
          DNXVAR =
     1          -FLOAT(I-1)*DZ*(DELWBX(2)-DELWBX(1))/H(1) +DELWBX(IBEG)
      ENDIF
      NXVAR(I,ISEG) = RESULT(1,J,1) -ZZZ*CURVAR*A11STR + DNXVAR
C BEG APR 1996
      IF (ISTIF(1).EQ.5.AND.IFAYT(1).EQ.1
     1                 .AND.(ISEG.EQ.5.OR.ISEG.EQ.6)) THEN
         IF (ISEG.EQ.5) NXVAR(I,ISEG) = NXVAR(I,ISEG)+NXVAR(1,2)
         IF (ISEG.EQ.6) NXVAR(I,ISEG) = NXVAR(I,ISEG)+NXVAR(I5I,2)
      ENDIF
C END APR 1996
      NYVAR(I,ISEG) = RESULT(2,J,1) + DELFCX(2,J)
      NXYVAR(I,ISEG)= RESULT(3,J,1) + DNXYVR
C BEG MAR 1996
C BEG DEC 1997 (comment these out here, change them and move below.
C     IF (IMOD.EQ.0) THEN
C  SET UP A SWITCH, IDISCR, FOR NOT DOING (IDISCR=0) OR DOING (IDISCR=1)
C  THE BUCKLING ANALYSES OF THE DISCRETIZED SKIN-STRINGER MODULE.
C        IF (NXVAR(I,ISEG).LT.0.)  IDISCR = 1
C        IF (NYVAR(I,ISEG).LT.0.)  IDISCR = 1
C     ENDIF
C END DEC 1997
C END MAR 1996
C     WRITE(8,*)' J,I,ISEG,CURVAR=',J,I,ISEG,CURVAR
C     WRITE(8,*)' RESULT123=',RESULT(1,J,1),RESULT(2,J,1),RESULT(3,J,1)
C     WRITE(8,*)' DNXVAR,DELFCX(2,J),DNXYVR=',DNXVAR,DELFCX(2,J),DNXYVR
C     WRITE(8,*)' NXVAR,NYVAR,NXYVAR=',
C    1            NXVAR(I,ISEG),NYVAR(I,ISEG),NXYVAR(I,ISEG)
C     WRITE(8,*)' DELCUR1,2,3=',DELCUR(1),DELCUR(2),DELCUR(3)
C     WRITE(8,*)' DELSKN(1,2,3;1)=',
C    1            DELSKN(1,1,1),DELSKN(2,1,1),DELSKN(3,1,1)
C     WRITE(8,*)' DELSKN(1,2,3;2)=',
C    1            DELSKN(1,2,1),DELSKN(2,2,1),DELSKN(3,2,1)
C END JULY 1995
      IF (IMOD.EQ.0.AND.IICHAN.EQ.0) THEN
         NXVAR0(I,ISEG)= NXVAR(I,ISEG)
         NYVAR0(I,ISEG)= NYVAR(I,ISEG)
         NXYVR0(I,ISEG)= NXYVAR(I,ISEG)
      ENDIF
      NXFIX(I,ISEG) = RESTOT(1,J,1) -ZZZ*CURFIX*A11STR
C BEG APR 1996
      IF (ISTIF(1).EQ.5.AND.IFAYT(1).EQ.1
     1                 .AND.(ISEG.EQ.5.OR.ISEG.EQ.6))
     1   NXFIX(I,ISEG) = NXFIX(I,ISEG) + RESTOT(1,2,1)
C END APR 1996
      NYFIX(I,ISEG) = RESTOT(2,J,1)
      NXYFIX(I,ISEG)= RESTOT(3,J,1)
C BEG DEC 1997 (These statements moved from above. Now NXFIX, etc defined)
      IF (IMOD.EQ.0) THEN
C  SET UP A SWITCH, IDISCR, FOR NOT DOING (IDISCR=0) OR DOING (IDISCR=1)
C  THE BUCKLING ANALYSES OF THE DISCRETIZED SKIN-STRINGER MODULE.
         IF ((NXVAR(I,ISEG)-NXFIX(I,ISEG)).LT.0.)  IDISCR = 1
         IF ((NYVAR(I,ISEG)-NYFIX(I,ISEG)).LT.0.)  IDISCR = 1
      ENDIF
C END DEC 1997
C BEG JULY 1995
C BEG MAR 1997
C     IF (ISOGRD.EQ.0.AND.NPRT.GE.2) THEN
C BEG FEB 2006
C     IF (ISOGRD.EQ.0.AND.NPRT.GE.1) THEN
      IF (ISOGRD.EQ.0.AND.NPRT.GE.0) THEN
C END FEB 2006
C END MAR 1997
C BEG OCT 2006
         IF (I.EQ.1.AND.ISEG.EQ.1.AND.NPRT.GE.1)
     1   WRITE(IFILE,'(/,/,/,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************',
     1' ************          CHAPTER 13             *****************',
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************'
         IF (I.EQ.1.AND.ISEG.EQ.1.AND.NPRT.GE.0) WRITE(IFILE,'(A,I3,A)')
     1' **** CHAPTER 13: DESIGN PERTURBATION INDEX, IMOD=',IMOD,' *****'
         IF (I.EQ.1.AND.ISEG.EQ.1.AND.NPRT.GE.1)
     1   WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1 ' *************************************************************',
     1 ' CHAPTER 13 Get prebuckling stress resultants, Nx, Ny, needed',
     1 '            for the discretized single-module skin-stringer',
     1 '            model used for local buckling and bending-torsion',
     1 '            buckling (BOSOR4-type model: see Figs. 18, 20,',
     1 '            22, 97, and 98 of [1A], for examples of the',
     1 '            discretized single skin-stringer BOSOR4-type',
     1 '            module model.).'
C END OCT 2006
C BEG JAN 2007
         IF (I.EQ.1.AND.ISEG.EQ.1.AND.NPRT.GE.1)
     1   WRITE(IFILE,'(/,A,1P,E12.4)')
     1 ' Effective circumferential radius of curvature, RADNEW=',RADNEW
C END JAN 2007
C BEG APR 2007
         IF (I.EQ.1.AND.ISEG.EQ.1.AND.NPRT.GE.1)
     1    CALL PICTS(IFILE,ISTIF(1),INTEXT(1),B2(1),W2(1),1,IFAY(1))
C END APR 2007
C        IF (I.EQ.1.AND.ISEG.EQ.1) WRITE(IFILE,1342)
         IF (I.EQ.1.AND.ISEG.EQ.1.AND.NPRT.GE.1) WRITE(IFILE,1342)
 1342    FORMAT(/' =============================================='/
     1 ' BEGIN: PREBUCKLING STRESS RESULTANTS USED IN THE'/
     1 ' DISCRETIZED SINGLE MODULE MODEL WITH IQUICK = 0...'/
     1 ' ----------------------------------------------------------')
C
C        IF (I.EQ.1) WRITE(IFILE,1339) ISEG,
         IF (I.EQ.1.AND.NPRT.GE.1) WRITE(IFILE,1339) ISEG,
     1           NXVAR(I,ISEG),NYVAR(I,ISEG),NXYVAR(I,ISEG),
     1           NXFIX(I,ISEG),NYFIX(I,ISEG),NXYFIX(I,ISEG)
 1339    FORMAT(' PREBUCKLING STRESS RESULTANTS AT THE FIRST NODE'/
     1 ' IN THE DISCRETIZED SINGLE MODULE SEGMENT NO.',I2,' .....'/
     1 '  "Total." loads, Nx(var),Ny(var),Nxy(var)=',1P3E12.4/
     1 '  "Fixed " loads, Nx(fix),Ny(fix),Nxy(fix)=',1P3E12.4)
C        IF (I.EQ.I5I.AND.J.EQ.JWEB) THEN
         IF (I.EQ.I5I.AND.J.EQ.JWEB.AND.NPRT.GE.1) THEN
            IF (NPRT.GE.1) WRITE(IFILE,1344) CURVAR, CURFIX
 1344       FORMAT(/' AXIAL CURVATURE CHANGES FROM SOURCES OTHER THAN'/
     1    ' INITIAL IMPERFECTIONS (FROM EPSLOD(4) AND ETHERM(4))...'/
     1    '  "Eigenvalue" axial curvature change'/
     1    '       CURVAR = EPSLOD(4) - FFIABT*ETHERM(4) =',1PE12.4/
     1    '  "Fixed" axial curvature change'/
     1    '       CURFIX = EPSLDF(4)                    =',1PE12.4)
             WRITE(IFILE,1340) ISEG,(NXVAR(II,ISEG),II=1,I5I)
             WRITE(IFILE,1341)      (NXFIX(II,ISEG),II=1,I5I)
         ENDIF
 1340    FORMAT(/' PREBUCKLING AXIAL RESULTANTS IN STRINGER WEB:',
     1 ' SEGMENT NO.',I3/
     1 '  "Eigenvalue" axial resultant, Nx(var)='/(1P6E12.4))
 1341    FORMAT(
     1 '  "  fixed   " axial resultant, Nx(fix)='/(1P6E12.4))
C        IF (I.EQ.I5I.AND.ISEG.EQ.NSEGB5) WRITE(IFILE,1343)
         IF (I.EQ.I5I.AND.ISEG.EQ.NSEGB5.AND.NPRT.GE.1)
     1                                    WRITE(IFILE,1343)
 1343    FORMAT(' -------------------------------------------------'/
     1 ' END:  PREBUCKLING STRESS RESULTANTS USED IN THE'/
     1 ' DISCRETIZED SINGLE MODULE MODEL WITH IQUICK = 0...'/
     1 ' ==========================================================')
      ENDIF
      IF (NPRT.GE.2.AND.I.EQ.I5I.AND.ISEG.EQ.NSEGB5) WRITE(IFILE,1349)
C23456789012345678901234567890123456789012345678901234567890123456789012
 1349 FORMAT(' ********** END OF OUTPUT FOR STATE CHANGE ************')
C END JULY 1995
   20 CONTINUE
   30 CONTINUE
C
      IF (IMOD.EQ.0.AND.JJJ.EQ.0.AND.NPRT.GE.1)
     1 WRITE(IFILE,4) JJJ,ILOADS, IICHAN
    4 FORMAT(' New C(i,j) and Nx, Ny, Nxy have now been calculated for 
     1design iter. no.',I3,', load set no.',I3,', matl iter. no.',I3/)
C
C     IF (ITUTOR.EQ.1)
C    1 CALL DATUM(IFILE4,50,0,0,INT,REALL,CHARAC,IOUT,0,IPROMP)
C     IF (ITUTOR.EQ.1)
C    1 CALL DATUM(IFILE4,60,0,0,INT,REALL,CHARAC,IOUT,0,IPROMP)
C
C BEG FEB 2009
C  substiffener stuff...
C
      IF (KLAYER(1,1).EQ.0.OR.ISOSUB(1,1,1).NE.0) GO TO 35
C
      IF (BSUB(2,1,1).EQ.0.) THEN
         BSUBX(2) = B(2)
         B0SUB(2) = B(2)
      ENDIF
      IF (BSUB(1,1,1).EQ.0.) THEN
         BSUBX(1) = B(1)
         B0SUB(1) = B(1)
      ENDIF
C
C   eigenvalue axial and hoop strains, EPS11 and EPS22, in the skin with
C   smeared substiffeners:
C23456789012345678901234567890123456789012345678901234567890123456789012
      EPS11 = ((NXVAR(1,1) -CX(1,4,1)*DELCUR(1) -CX(1,5,1)*DELCUR(2))*
     1         CX(2,2,1)
     1        -(NYVAR(1,1) -CX(2,4,1)*DELCUR(1) -CX(2,5,1)*DELCUR(2))*
     1         CX(1,2,1))/(CX(1,1,1)*CX(2,2,1) - CX(1,2,1)**2)
      EPS22 = (-(NXVAR(1,1) -CX(1,4,1)*DELCUR(1) -CX(1,5,1)*DELCUR(2))*
     1         CX(1,2,1)
     1        +(NYVAR(1,1) -CX(2,4,1)*DELCUR(1) -CX(2,5,1)*DELCUR(2))*
     1         CX(1,1,1))/(CX(1,1,1)*CX(2,2,1) - CX(1,2,1)**2)
C
C   eigenvalue axial and hoop loads in the skin without substiffeners:
      FN1SKN(1) =     EPS11*CXX0(1,1,1) +     EPS22*CXX0(1,2,1)
     1           +DELCUR(1)*CXX0(1,4,1) + DELCUR(2)*CXX0(1,5,1)
      FN2SKN(1) =     EPS11*CXX0(1,2,1) +     EPS22*CXX0(2,2,1)
     1           +DELCUR(1)*CXX0(2,4,1) + DELCUR(2)*CXX0(2,5,1)
      FN12SK(1) = NXYVAR(1,1)
C
C   eigenvalue axial strain at the root and tip of the substringer, if any:
      FNXTIP(1,1) = 0.
      FNXRUT(1,1) = 0.
      IF (HSUB(1,1,1).GT.0.0) THEN
         IF (NSURF(1,1,1).EQ.0) THEN
            EPSTIP = EPS11 + DELCUR(1)*(TX0(1)/2. +HSUB(1,1,1))
            EPSRUT = EPS11 + DELCUR(1)*TX0(1)/2.
         ELSE
            EPSTIP = EPS11 - DELCUR(1)*(TX0(1)/2. +HSUB(1,1,1))
            EPSRUT = EPS11 - DELCUR(1)*TX0(1)/2.
         ENDIF
C    eigenvalue axial resultant at root and tip of substringer, if any:
         FNXTIP(1,1) = (CSUBX(1,1) -CSUBX(1,2)**2/CSUBX(2,2))*EPSTIP
         FNXRUT(1,1) = (CSUBX(1,1) -CSUBX(1,2)**2/CSUBX(2,2))*EPSRUT
      ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
C   eigenvalue axial strain at the root and tip of the subring, if any:
      FNXTIP(2,1) = 0.
      FNXRUT(2,1) = 0.
      IF (HSUB(2,1,1).GT.0.0) THEN
         IF (NSURF(2,1,1).EQ.0) THEN
            EPSTIP = EPS22 + DELCUR(2)*(TX0(1)/2. +HSUB(2,1,1))
            EPSRUT = EPS22 + DELCUR(2)*TX0(1)/2.
         ELSE
            EPSTIP = EPS22 - DELCUR(2)*(TX0(1)/2. +HSUB(2,1,1))
            EPSRUT = EPS22 - DELCUR(2)*TX0(1)/2.
         ENDIF
C    eigenvalue axial resultant at root and tip of subring, if any:
         FNXTIP(2,1) = (CSUBY(1,1) -CSUBY(1,2)**2/CSUBY(2,2))*EPSTIP
         FNXRUT(2,1) = (CSUBY(1,1) -CSUBY(1,2)**2/CSUBY(2,2))*EPSRUT
      ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
C
C   fixed axial and hoop strains, EPS11 and EPS22, in the skin with
C   smeared substiffeners:

      EPS11 = ((NXFIX(1,1) -CX(1,4,1)*0.0 -CX(1,5,1)*0.0)*
     1         CX(2,2,1)
     1        -(NYFIX(1,1) -CX(2,4,1)*0.0 -CX(2,5,1)*0.0)*
     1         CX(1,2,1))/(CX(1,1,1)*CX(2,2,1) - CX(1,2,1)**2)
      EPS22 = (-(NXFIX(1,1) -CX(1,4,1)*0.0 -CX(1,5,1)*0.0)*
     1         CX(1,2,1)
     1        +(NYFIX(1,1) -CX(2,4,1)*0.0 -CX(2,5,1)*0.0)*
     1         CX(1,1,1))/(CX(1,1,1)*CX(2,2,1) - CX(1,2,1)**2)
C
C   fixed axial and hoop loads in the skin without substiffeners:
      FN1SKN(2) =     EPS11*CXX0(1,1,1) +     EPS22*CXX0(1,2,1)
     1           +0.0*CXX0(1,4,1) + 0.0*CXX0(1,5,1)
      FN2SKN(2) =     EPS11*CXX0(1,2,1) +     EPS22*CXX0(2,2,1)
     1           +0.0*CXX0(2,4,1) + 0.0*CXX0(2,5,1)
      FN12SK(2) = NXYFIX(1,1)
C
C   fixed axial strain at the root and tip of the substringer, if any:
      FNXTIP(1,2) = 0.
      FNXRUT(1,2) = 0.
      IF (HSUB(1,1,1).GT.0.0) THEN
         IF (NSURF(1,1,1).EQ.0) THEN
            EPSTIP = EPS11 + 0.0*(TX0(1)/2. +HSUB(1,1,1))
            EPSRUT = EPS11 + 0.0*TX0(1)/2.
         ELSE
            EPSTIP = EPS11 - 0.0*(TX0(1)/2. +HSUB(1,1,1))
            EPSRUT = EPS11 - 0.0*TX0(1)/2.
         ENDIF
C    axial resultant at root and tip of substringer, if any:
         FNXTIP(1,2) = (CSUBX(1,1) -CSUBX(1,2)**2/CSUBX(2,2))*EPSTIP
         FNXRUT(1,2) = (CSUBX(1,1) -CSUBX(1,2)**2/CSUBX(2,2))*EPSRUT
      ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
C   fixed axial strain at the root and tip of the subring, if any:
      FNXTIP(2,2) = 0.
      FNXRUT(2,2) = 0.
      IF (HSUB(2,1,1).GT.0.0) THEN
         IF (NSURF(2,1,1).EQ.0) THEN
            EPSTIP = EPS22 + 0.0*(TX0(1)/2. +HSUB(2,1,1))
            EPSRUT = EPS22 + 0.0*TX0(1)/2.
         ELSE
            EPSTIP = EPS22 - 0.0*(TX0(1)/2. +HSUB(2,1,1))
            EPSRUT = EPS22 - 0.0*TX0(1)/2.
         ENDIF
C    fixed axial resultant at root and tip of subring, if any:
         FNXTIP(2,2) = (CSUBY(1,1) -CSUBY(1,2)**2/CSUBY(2,2))*EPSTIP
         FNXRUT(2,2) = (CSUBY(1,1) -CSUBY(1,2)**2/CSUBY(2,2))*EPSRUT
      ENDIF
C
      WRITE(IFILE,'(/,A,3I5)')' ISTFSB(1),NSEGZ,NSEGSB(1) =',
     1                          ISTFSB(1),NSEGZ,NSEGSB(1)
      DO 3450 ISGSUB = 1,NSEGZ
         I5SUB = I5Z(ISGSUB)
         DELSUB = HSUBX(1)/FLOAT(I5SUB-1)
         DSUB   = -DELSUB
         DO 3440 INDSUB = 1,I5SUB
            IF (ISGSUB.EQ.1.OR.ISGSUB.EQ.2.OR.ISGSUB.EQ.4) THEN
               NXVSUB(INDSUB,ISGSUB) = FN1SKN(1)
               NYVSUB(INDSUB,ISGSUB) = FN2SKN(1)
               NXFSUB(INDSUB,ISGSUB) = FN1SKN(2)
               NYFSUB(INDSUB,ISGSUB) = FN2SKN(2)
            ELSE
               DSUB = DSUB + DELSUB
               NXVSUB(INDSUB,ISGSUB) = FNXRUT(1,1)
     1             +DSUB*(FNXTIP(1,1) -FNXRUT(1,1))/HSUBX(1) 
               NYVSUB(INDSUB,ISGSUB) = 0.0 
               NXFSUB(INDSUB,ISGSUB) = FNXRUT(1,2)
     1             +DSUB*(FNXTIP(1,2) -FNXRUT(1,2))/HSUBX(1)
               NYFSUB(INDSUB,ISGSUB) = 0.0 
            ENDIF
C           WRITE(IFILE,'(A,2I5,A,1P,4E12.4)')
C    1     ' iseg,ipoint=',ISGSUB,INDSUB,' NXV,NYV,NXF,NYF=',
C    1      NXVSUB(INDSUB,ISGSUB),NYVSUB(INDSUB,ISGSUB),
C    1      NXFSUB(INDSUB,ISGSUB),NYFSUB(INDSUB,ISGSUB)
 3440    CONTINUE
 3450 CONTINUE
C23456789012345678901234567890123456789012345678901234567890123456789012
C
      IF (NPRT.GE.2) THEN
C
       WRITE(IFILE,'(/,A)')
     1' **** There are either substringers or subrings or both. ****'
       IF (NSURF(1,1,1).EQ.0.AND.TSUB(1,1,1).NE.0.0) WRITE(IFILE,'(A)')
     1' There are substringers attached to layer 1 of the skin.'
       IF (NSURF(1,1,1).NE.0.AND.TSUB(1,1,1).NE.0.0) WRITE(IFILE,'(A)')
     1' There are substringers attached to layer n of the skin.'
       IF (NSURF(2,1,1).EQ.0.AND.TSUB(2,1,1).NE.0.0) WRITE(IFILE,'(A)')
     1' There are subrings attached to layer 1 of the skin.'
       IF (NSURF(2,1,1).NE.0.AND.TSUB(2,1,1).NE.0.0) WRITE(IFILE,'(A)')
     1' There are subrings attached to layer n of the skin.'
C
       CALL PICTS(IFILE,3,0,0.,0.,1,0)
C
       WRITE(IFILE,
     1'(/,A,/,A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4,/,A,/,A,I3)')
     1' Properties of the substringers:',
     1' substringer spacing,                 BSUB(1,1,1)=',BSUB(1,1,1),
     1' substringer height,                  HSUB(1,1,1)=',HSUB(1,1,1),
     1' substringer thickness,               TSUB(1,1,1)=',TSUB(1,1,1),
     1' substringer attached to which surface of the skin?',
     1' (NSURF=0 or 1: 0=layer 1, 1=layer n)NSURF(1,1,1)=',NSURF(1,1,1)
C
       WRITE(IFILE,
     1'(/,A,/,A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4,/,A,/,A,I3)')
     1' Properties of the subrings:',
     1' subring spacing,                     BSUB(2,1,1)=',BSUB(2,1,1),
     1' subring height,                      HSUB(2,1,1)=',HSUB(2,1,1),
     1' subring thickness,                   TSUB(2,1,1)=',TSUB(2,1,1),
     1' subring attached to which surface of the skin?',
     1' (NSURF=0 or 1: 0=layer 1, 1=layer n)NSURF(2,1,1)=',NSURF(2,1,1)
C
       WRITE(IFILE,'(/,A,/,A,/,A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4)')
     1' State of the skin with the SMEARED substiffeners:',
     1' Curvature changes due to imperfection amplification:',
     1' Axial curvature change,                DELCUR(1)=',DELCUR(1),
     1' Hoop  curvature change,                DELCUR(2)=',DELCUR(2),
     1' Twist,                                 DELCUR(3)=',DELCUR(3)
C
       WRITE(IFILE,'(/,A,/,A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4)')
     1' "Eigenvalue" resultants in skin with smeared substiffeners:',
     1' Axial resultant, NXVAR(1,1)=',NXVAR(1,1),
     1' Hoop  resultant, NYVAR(1,1)=',NYVAR(1,1),
     1' In-plane shear resultant, NXYVAR(1,1)=',NXYVAR(1,1)
C
       WRITE(IFILE,'(/,A,/,A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4)')
     1' "Fixed" resultants in skin with smeared substiffeners:',
     1' Axial resultant, NXFIX(1,1)=',NXFIX(1,1),
     1' Hoop  resultant, NYFIX(1,1)=',NYFIX(1,1),
     1' In-plane shear resultant, NXYFIX(1,1)=',NXYFIX(1,1)
C
       CALL OUTCIJ(15,1,IFILE,CX(1,1,1),TXDUM,ETHDUM)
       WRITE(IFILE,'(/,A)')
     1' Constitutive matrix for panel skin (without substiffeners):'
       CALL OUTCIJ(0,1,IFILE,CXX0(1,1,1),THERMX(1,1),ETHRMX(1,1))
       CALL OUTCIJ(16,1,IFILE,CSUBX(1,1),TXDUM,ETHDUM)
       CALL OUTCIJ(17,1,IFILE,CSUBY(1,1),TXDUM,ETHDUM)
C
       WRITE(IFILE,'(/,A,A)')
     1' Eigenvalue resultants in the skin and at the tip and root',
     1' of substiffeners:'
       WRITE(IFILE,'(A,/,A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4)')
     1' Eigenvalue resultants in the SKIN:',
     1' Eigenvalue axial resultant,            FN1SKN(1)=',FN1SKN(1),
     1' Eigenvalue hoop  resultant,            FN2SKN(1)=',FN2SKN(1),
     1' Eigenvalue in-plane shear resultant,   FN12SK(1)=',FN12SK(1)
       WRITE(IFILE,'(A,/,A,1P,E12.4,/,A,1P,E12.4)')
     1' Eigenvalue resultants at the tip and root of the SUBSTRINGER:',
     1' Resultant at the tip  of the substringer, FNXTIP=',FNXTIP(1,1),
     1' Resultant at the root of the substringer, FNXRUT=',FNXRUT(1,1)
       WRITE(IFILE,'(A,/,A,1P,E12.4,/,A,1P,E12.4)')
     1' Eigenvalue resultants at the tip and root of the SUBRING:',
     1' Resultant at the tip  of the subring,     FNXTIP=',FNXTIP(2,1),
     1' Resultant at the root of the subring,     FNXRUT=',FNXRUT(2,1)
C
       WRITE(IFILE,'(/,A,A)')
     1' Fixed resultants in the skin and at the tip and root',
     1' of substiffeners:'
       WRITE(IFILE,'(A,/,A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4)')
     1' Fixed resultants in the SKIN:',
     1' Fixed axial resultant,                 FN1SKN(2)=',FN1SKN(2),
     1' Fixed hoop  resultant,                 FN2SKN(2)=',FN2SKN(2),
     1' Fixed in-plane shear resultant,        FN12SK(2)=',FN12SK(2)
       WRITE(IFILE,'(A,/,A,1P,E12.4,/,A,1P,E12.4)')
     1' Fixed resultants at the tip and root of the SUBSTRINGER:',
     1' Resultant at the tip  of the substringer, FNXTIP=',FNXTIP(1,2),
     1' Resultant at the root of the substringer, FNXRUT=',FNXRUT(1,2)
       WRITE(IFILE,'(A,/,A,1P,E12.4,/,A,1P,E12.4)')
     1' Fixed resultants at the tip and root of the SUBRING:',
     1' Resultant at the tip  of the subring,     FNXTIP=',FNXTIP(2,2),
     1' Resultant at the root of the subring,     FNXRUT=',FNXRUT(2,2)
C
      ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2009
   35 CONTINUE 
      IF (IMOD.EQ.0) THEN
         ICAR   = 0
         CALL MOVER(0, 0,IPOINC,1,100)
      ENDIF
      ICONST = 0
      INUMTT = 0
      AMPLTP = AMPLIT
      AMPTP2 = AMPLT2
C BEG JULY 1995
      CALL MOVER(EPSLOD,1,EPSLDX,1,6)
C BEG JUN 1996
      DELCR1 = DELCUR(1)
      IF (ISTIF(1).EQ.0.AND.ISTIF(2).EQ.0.AND.EPSLOD(4).NE.0.0)
     1   DELCR1 = DELCUR(1)*EPSLOD(4)/ABS(EPSLOD(4))
C BEG OCT 1996
      IF (IQUICK.EQ.0.AND.ISTIF(1).EQ.0.AND.ISTIF(2).EQ.0) DELCR1 = 0.
C END OCT 1996
      EPSLDX(4) = EPSLOD(4) + DELCR1
      DELCR2 = DELCUR(2)
      IF (ISTIF(1).EQ.0.AND.ISTIF(2).EQ.0.AND.EPSLOD(5).NE.0.0)
     1   DELCR2 = DELCUR(2)*EPSLOD(5)/ABS(EPSLOD(5))
C BEG OCT 1996
      IF (IQUICK.EQ.0.AND.ISTIF(1).EQ.0.AND.ISTIF(2).EQ.0) DELCR2 = 0.
C END OCT 1996
      EPSLDX(5) = EPSLOD(5) + DELCR2
C END JUN 1996
      DELCR3 = DELCUR(3)
      IF (EPSLOD(6).NE.0.) DELCR3=DELCUR(3)*EPSLOD(6)/ABS(EPSLOD(6))
C BEG OCT 1996
      IF (IQUICK.EQ.0.AND.ISTIF(1).EQ.0.AND.ISTIF(2).EQ.0) DELCR3 = 0.
C END OCT 1996
      EPSLDX(6) = EPSLOD(6) + DELCR3
C END JULY 1995
C
C BEG JULY 2006
      IF (IQUICK.EQ.1.AND.NPRT.GE.1) WRITE(IFILE,'(/,A,/,A,/,A)')
     1' *************************************************************',
     1' CHAPTERs 14 - 18 are not executed because IQUICK=1, that is',
     1' the discretized skin-stringer single module model is not used.'
C23456789012345678901234567890123456789012345678901234567890123456789012
C END JULY 2006
      IF (IQUICK.EQ.1) GO TO 8
C
C************************************************************************
C BEGIN CALCULATION OF LOCAL BUCKLING LOAD FACTORS FROM BOSOR4-TYPE
C (DISCRETIZED) MODEL OF THE SKIN-STRINGER PANEL MODULE.
C************************************************************************
C
C BEG MAR 1996
C     FNNORM = SQRT(FNX**2 + FNY**2 + FNXY**2)
C     IF (FNNORM.EQ.0.) GO TO 46
C     IF (FNX.GE.0.0.AND.FNY.GE.0.0) GO TO 46
C BEG MAY 1997
      IF (IDISCR.EQ.0) THEN
         N = 1
         GO TO 46
      ENDIF
C END MAY 1997
C END MAR 1996
C
      IF (IMOD.EQ.0.AND.JJJ.EQ.0) THEN
C BEG OCT 2006
      IF (NPRT.GE.1.AND.IICHAN.EQ.0)
     1  WRITE(IFILE,'(/,/,/,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************',
     1' ************          CHAPTER 14             *****************',
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************'
      IF (IICHAN.EQ.0.AND.NPRT.GE.0) WRITE(IFILE,'(A,I3,A)')
     1' **** CHAPTER 14: DESIGN PERTURBATION INDEX, IMOD=',IMOD,' *****'
      IF (IICHAN.EQ.0.AND.NPRT.GE.1)
     1WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A)')
     1 ' *************************************************************',
     1 ' CHAPTER 14 Compute local buckling from BOSOR4-type',
     1 '            discretized skin-stringer single module model.',
     1 '            See Section 12.2 (upper table on p. 511) and',
     1 '            Figs. 46c and 98b in [1A], for examples.'
C END OCT 2006
         IF (NPRT.GE.1.AND.IICHAN.EQ.0) WRITE(IFILE,40) ILOADS
      ENDIF
   40 FORMAT(/' EXPLANATION OF FOLLOWING CALCULATIONS (LOAD SET NO.',
     1 I2,'):'/
     1'     Eigenvalues corresponding to local buckling of the skin'/
     1'     obtained from the BOSOR4-discretized panel module model'/
     1'     are calculated for a range of axial wavenumbers. All four'/
     1'     edges of the panel are assumed to be simply supported,'/
     1'     even if you indicated "clamped" in your input, and the in-'/
     1'     plane loading is assumed to be uniform (N1, N2, N12), even'/
     1'     if you provided for axial load Nx varying in the L2 (cir-'/
     1'     cumferential) direction.'/)
C
      IF (IMOD.EQ.0.AND.JJJ.EQ.0.AND.NPRT.GE.1) THEN
                     WRITE(IFILE,42) JJJ,ILOADS,IICHAN,FKNOCK(2),FNX,
     1                               FNY,FNXY,FNX0,FNY0,FNXY0
         IF (IABP.EQ.0) THEN
            WRITE(IFILE,422) -P,FNXP0,FNYP0,FNXPL0,FNYPL0
         ELSE
            WRITE(IFILE,423) -P,FNXP0,FNYP0,FNXPL0,FNYPL0
         ENDIF
      ENDIF
C
   42 FORMAT(/' Local buckling load factors from discretized model of a 
     1single panel module for'/' design iteration no.',I3,', load set no
     1.',I2,',  material iteration no.',I3,'. These load factors'/
     1' include the knockdown factor,',1PE12.4,' that accounts for the'/
     1' effect of in-plane shear loading and anisotropy [e.g. C(4,6)]'/
     1' in the panel skin.  Resultants are uniform and given by:'/
     1'   LOAD SET A: axial, Nx =',1PE10.2,'; circ., Ny =',1PE10.2,
     1'; in-plane shear, Nxy =',1PE10.2,' (Not from normal pressure)'/
     1'   LOAD SET B: axial, Nxo=',1PE10.2,'; circ., Nyo=',1PE10.2,
     1'; in-plane shear, Nxyo=',1PE10.2,' (Not from normal pressure)')
C
  422 FORMAT(
     1'   LOAD SET B: Uniform normal pressure, P = ',1PE12.4,/
     1'      Resultants from global (smeared stiffener) model: Nxo(p)=',
     1 1PE10.2,',  Nyo(p)=',1PE10.2,',  Nxyo(p)= 0.0'/
     1'      Resultants from local (discrete stiffener) model: Nxo(p)='
     1 1PE10.2,',  Nyo(p)=',1PE10.2,',  Nxyo(p)= 0.0 :')
C
  423 FORMAT(
     1'   LOAD SET A: Uniform normal pressure, P = ',1PE12.4,/
     1'      Resultants from global (smeared stiffener) model: Nx(p)=',
     1 1PE10.2,',  Ny(p)=',1PE10.2,',  Nxy(p)= 0.0'/
     1'      Resultants from local (discrete stiffener) model: Nx(p)='
     1 1PE10.2,',  Ny(p)=',1PE10.2,',  Nxy(p)= 0.0 :')
C
C
C        LOCAL INSTABILITY: BUCKLING BETWEEN MAJOR STIFFENERS...
C
      ICLOOP = 0
      IF (IMOD.EQ.0) MARK = 0
      IF (MARK.EQ.1) THEN
         I5I = I5(4)
         DO 425 I = 1,I5I
            NXVARS(I) = NXVAR(I,4)
            NXVAR(I,4)= NXFIX(I,4)
  425    CONTINUE
      ENDIF
C
      IF (IMOD.EQ.0) IREJCT = 0
   43 CONTINUE
       IF (ITYPE.EQ.1.AND.NPRT.GE.2)
     1    WRITE(IFILE,*)' AFTER 43 CON: IMOD,INUMTT,ICONST=',
     1                                  IMOD,INUMTT,ICONST
      ICLOOP = ICLOOP + 1
C BEG OCT 1996
      IF (IMOD.EQ.0) ILOOPS = ICLOOP
C END OCT 1996
C BEG AUG 1997
      IF (IZSTIF(1).EQ.1.AND.IMOD.EQ.0) IYLOC = 0
C END AUG 1997
      IF (IYLOC.EQ.1) CALL TRANS2(M3,YLOC,Y)
C
      FMULTB = 1.0
      IF (ISTIF(1).EQ.0.AND.ISTIF(2).EQ.0.AND.LENMOD.LT.1.0
     1            .AND.FSLOC.GT.0.5.AND.MLOCAL.EQ.1) FSLOC = LENMOD**2
C BEG NOV 1994
      IF (ICLOOP.EQ.1.AND.NPRT.GE.0) WRITE(IFILE,'(/,A)')
     1'**** BEGIN SUBROUTINE LOCAL (INITIAL LOCAL BUCKLING SEARCH) ****'
      IF (ICLOOP.GE.2.AND.NPRT.GE.0) WRITE(IFILE,*)
     1'**** BEGIN SUBROUTINE LOCAL (2ND LOCAL BUCKLING(ICLOOP=2)) *****'
C BEG AUG 2001
 9310 CONTINUE
      ILABEL=9310
      IF (NPRT.GE.1) WRITE(IFILE,*) ' LABEL NO. IN STRUCT=',ILABEL
C END AUG 2001
C BEG FEB 2006
      IF (ICLOOP.EQ.1.AND.ITYPE.NE.2.AND.IMOD.EQ.0) N = 0
C END FEB 2006
C BEG JUN 2004
      IF (NPRT.GE.2) WRITE(8,'(A,I6)')' Before CALL LOCAL: N =',N
C END JUN 2004
      CALL LOCAL(1,NPRT,N,FMULTB*B(2),B(1),IMOD,M3,INCR,YLOC,IFILE,
     1              IW,ILOC,DS,AS,BS,DIAG,C,D,DI,X,Y,Z,NSERCH,PHIMIN,
     1              KOITER,EIG,IYLOC,INEG,
     1              IREDUC,FKNOCK(2),IDRW,NBLK,NGBK,NKF,
     1              0,IMAXB,KMAXB,IPV2,IBVC,1000,IGENRL,JJJ,
     1              MLOCAL,B2(1),EIGLCS(1),NLOC(1),EIGLCS(1),NLOC(1),
     1              ITYPE,ILOW,1,THERMX,THERMS,P,KAPPA1,KAPPA2,0,CS,
     1              FNX,FNY,FNXY,RESULT,
     1              FXBEG,FXEND,FYBEG,FYEND,FXYBEG,FXYEND,FNX0,FNY0,
     1              FNXY0,RMAX,CX,RESEIG,NMAX,IABP,LENMOD,0,
     1              TEMP(1,1),IMTEMP,WPB1,ICLOOP,
     1              FSLOC,FSGEN,I5,ITIPLX,WRATPX,EIGSVX,NSAVEX,YSAVE4,
     1              JJJTOR,W2(1),EIGITR(1),IBEAM,DELTAN,RESTOT,
     1              ISTIF(1),TX,1,NGLOB2,0,ILABEL,KLAYER(1,1))
C BEG APR 2007
      IF (IMOD.EQ.0.AND.NPRT.GE.0) WRITE(IFILE,'(A,1P,E12.4,/,A,I5)')
     1' Buckling load factor from SUB. LOCAL, EIGITR(1)=',EIGITR(1),
     1' Number of axial halfwaves between rings, N=',N
C END APR 2007
C BEG FEB 1996
      IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
      IF (ICLOOP.EQ.1.AND.NPRT.GE.0) WRITE(IFILE,*)
     1'****  END  SUBROUTINE LOCAL (INITIAL LOCAL BUCKLING SEARCH) ****'
      IF (ICLOOP.GE.2.AND.NPRT.GE.0) WRITE(IFILE,*)
     1'****  END  SUBROUTINE LOCAL (2ND LOCAL BUCKLING(ICLOOP=2)) *****'
C END NOV 1994
C
      IF (IMOD.EQ.0) CALL TRANS3(M3,YLOC,YSAVE)
      IF (IMOD.EQ.0.AND.JJJ.EQ.0.AND.NPRT.GE.0)
     1 WRITE(IFILE,*)' **** END OF LOCAL BUCKLING EIGENVALUE CALC.****'
C
C    IF (ITUTOR.EQ.1)
C    1    CALL DATUM(IFILE4,70,0,0,INT,REALL,CHARAC,IOUT,0,IPROMP)
C
   44 CONTINUE
      PI = 3.1415927
      FN = N
      NPB = (PI*FN/(2.*FMULTB*B(2)))**2
C
      CALL TRANS2(M3,YLOC,Y)
      IF (NPRT.GE.0) WRITE(IFILE,'(/,A)')
     1'**** BEGIN SUBROUTINE MODE (LOCAL BUCKLING MODE SHAPE) ****'
C
      FKNOCS = FKNOCK(2)
      FKNOCH = FKNOCK(3)
C
      CALL MODE(IFILE,NPRT,NSEGB5,I5,IW,DS,M3,Y,ISKIN,1,0,
     1             ZPARTX,NPB,CX,1,WPRES,EIGLCS(1),
     1             RMAX,ITIPL,ICWEB,IMOD,
     1             WW1,WD1,WDD1,UU1,VV1,VP1,ZREF,N,FKNOCS,
C BEG OCT 1998
C BEG JUN 2004
     1             FKNOCH,ICROWN,P,IFICT2,WDDD,2,0,TX,1,0,
     1    INTSNG,RAD2,TY,IZSTIF,B,B2,H,W,W2,
     1    B0,B20,H0,WW0,W20,ISTIF,INTEXT,IFAY,IBEAM,IONEST,
     1    AXIAL,CIRC,ICRIP,ISEGC,WRATIO,WTIPWS,WRATTP,
     1    WRATWB,WRATCN,WRWIDE,WIDLMM,PEDG,ISOGRD,RESULT,IFLGL)
C END JUN 2004
C END OCT 1998
C
C BEG MAR 1996
      MLOCAX = FLOAT(MLOCAL)*FMLOCM
C END MAR 1996
      IF (IMOD.EQ.0) THEN
C BEG JAN 1996
         IF (IFICT2.EQ.1) THEN
            ITIPL = 0
            ICWEB = 0
            ICRIP = 0
            ICROWN= 0
            ITIPLX= 0
C BEG OCT 2004
            IFLGL = 0
C END OCT 2004
         ENDIF
C END JAN 1996
         ITIPL1 = ITIPL
         IWEBL1 = ICWEB
         ICRIP1 = ICRIP
         ICRWN1 = ICROWN
C BEG OCT 2004
         IFLGL1 = IFLGL
C END OCT 2004
      ENDIF
C End of (IMOD.EQ.0) condition.
C
      FSLOCT = FSLOC
C BEG JAN 2007
C     IF (ITIPL1.EQ.1) FSLOCT = FSGEN
C     IF (ITIPL1.EQ.1.AND.ICASE.EQ.2.AND.IFLAT.EQ.0) FSLOCT = FSBSTR
      IF (ISTIF(1).NE.3.AND.ITIPL1.EQ.1) FSLOCT = FSGEN
      IF (ISTIF(1).NE.3.AND.ITIPL1.EQ.1.AND.ICASE.EQ.2.AND.IFLAT.EQ.0)
     1                                   FSLOCT = FSBSTR
C END JAN 2007
C BEG FEB 2002
C23456789012345678901234567890123456789012345678901234567890123456789012
      IF (NPRT.GE.1.AND.FSLOCT.GT.FSLOC)
     1 WRITE(IFILE,'(/,A,/,A,/,A,1PE12.4,A,1PE12.4,/,A,/)')
     1' ********* NOTE *********** NOTE *********** NOTE ***********',
     1' BECAUSE OF LARGE DEFLECTION OF TIP OF THE STRINGER WEB, THE',
     1' FACTOR OF SAFETY FOR LOCAL BUCKLING CHANGED FROM',FSLOC,
     1' TO',FSLOCT,
     1' ******* END NOTE ******* END NOTE ****** END NOTE *********'
C END FEB 2002
      IF (NPRT.GE.0) WRITE(IFILE,*)
     1'**** END SUBROUTINE MODE (LOCAL BUCKLING MODE SHAPE) ******'
C
C BEG MAR 1996
      EIGRAT = EILOCL/(EIGLCS(1)*FKNOCS)
      IF (IBEAM.EQ.1) EIGRAT = EIGLCS(1)*FKNOCS
C BEG OCT 1996
      IF (NPRT.GE.2) WRITE(IFILE,'(A,/,1P,4E12.4)')
     1' EILOCL,EIGLCS(1),FKNOCS,EIGRAT=',EILOCL,EIGLCS(1),FKNOCS,EIGRAT
C END OCT 1996
C END MAR 1996
      IF (IMOD.EQ.0) THEN
C BEG JAN 1996
        IF (IFICT2.EQ.1) THEN
         WRITE(IFILE,*)' *******************************************'
         WRITE(IFILE,*)' **** LOCAL MODE IS SPURIOUS (FICTITIOUS) ****'
C BEG JUL 1999
         IF (EIGLCS(1)*FKNOCS.LT.5.0) THEN
            WRITE(IFILE,'(A,/,A,/,A)')
     1    ' TO AVOID THIS DIFFICULTY RAISE THE LOWER BOUNDS OF',
     1    ' THICKNESSES IN THE PANEL SKIN.',
     1    ' THE MODEL TYPE INDEX, IQUICK, IS BEING RESET TO UNITY.'
            IQUCHG = 1
            IQUICK = 1
         WRITE(IFILE,*)' *******************************************'
            GO TO 2
         ENDIF
         WRITE(IFILE,*)' *******************************************'
C END JUL 1999
        ENDIF
C   End of (IFICT2.EQ.1) condition.
C END JAN 1996
C BEG MAR 1996
C       IF (ICWEB.EQ.1.OR.ITIPL.EQ.1) THEN
C BEG MAY 1997
        IF (ICWEB.EQ.1.OR.
     1    ((ITIPL.EQ.1.OR.WRATCN.GE.5.0).AND.IBEAM.EQ.0)) THEN
C END MAY 1997
C END MAR 1996
         WRITE(IFILE,*)' *******************************************'
         IF (ICWEB.EQ.1)
     1      WRITE(IFILE,*)' **** LOCAL MODE HAS CRIPPLING OF WEB ****'
         IF (ITIPL.EQ.1)
     1      WRITE(IFILE,*)' **** LOCAL MODE HAS STRINGER SIDESWAY ****'
C BEG MAY 1997
C BEG OCT 2004
         IF (WRATCN.GE.5.0.AND.(ISTIF(1).EQ.1.OR.ISTIF(1).EQ.2))
C END OCT 2004
     1      WRITE(IFILE,*)' **** LOCAL MODE HAS FLANGE CRIPPLING ****'
         IF (WRATCN.GE.5.0.AND.ISTIF(1).EQ.4)
     1      WRITE(IFILE,*)' **** LOCAL MODE HAS HATCROWN CRIPPLING ****'
C END MAY 1997
         WRITE(IFILE,*)' *******************************************'
C23456789012345678901234567890123456789012345678901234567890123456789012
C
         IF (NSERCH.EQ.0.AND.ICLOOP.EQ.2.AND.IREJCT.EQ.0) THEN
C BEG MAR 1996
C           IF (ICWEBS.EQ.1.AND.ITIPL.EQ.1.AND.(EIGLCS(1)*FKNOCS)
C BEG MAY 1997
            IF (ICWEBS.EQ.1.AND.
     1         ((ITIPL.EQ.1.OR.WRATCN.GE.5.0).AND.IBEAM.EQ.0)
C END MAY 1997
     1                     .AND.(EIGLCS(1)*FKNOCS)
C END MAR 1996
     1                     .LT.(EIGSVE*FKNOSV)) THEN
              ITWICE = 1
              N = 1
              ICWEB = 0
              ITIPL = 0
C BEG OCT 2004
              IFLGL = 0
C END OCT 2004
              WRITE(IFILE,*) ' DO LOCAL BUCKLING AGAIN WITH SEARCH'
              NSERCH = NSRCHS
              GO TO 43
            ENDIF
         ENDIF
C    End of (NSERCH.EQ.0.AND.ICLOOP.EQ.2.AND.IREJCT.EQ.0) condition.
        ENDIF
C   End of  (ICWEB.EQ.1.OR.
C    ((ITIPL.EQ.1.OR.WRATCN.GE.5.0).AND.IBEAM.EQ.0)) condition. 
C
         IF (NSERCH.EQ.0.AND.ICLOOP.EQ.2.AND.IREJCT.EQ.0) THEN
C BEG MAR 1996
C           ELOG1 = (ICWEB.EQ.1.OR.ITIPL.EQ.1).AND.
C BEG MAY 1997
            ELOG1 = (ICWEB.EQ.1.OR.
     1             ((ITIPL.EQ.1.OR.WRATCN.GE.5.0).AND.IBEAM.EQ.0)).AND.
C END MAY 1997
C END MAR 1996
     1              (EIGSVE*FKNOSV).LT.(EIGLCS(1)*FKNOCS)
C BEG OCT 1996
            ELOG2 = (EIGLCS(1)*FKNOCS).GT.1.0.AND.(.NOT.ISANDX).AND.
C END OCT 1996
     1              (EIGSVE*FKNOSV).LT.(EIGLCS(1)*FKNOCS)
C BEG MAR 1996
            ELOG3 = IBEAM.EQ.0.AND.FSBSTR.LT.1.0.AND.
C END MAR 1996
     1              (EIGSVE*FKNOSV).LT.(EIGLCS(1)*FKNOCS)
C BEG OCT 1996
C BEG MAY 1997
            ELOG4 = (ICWEB.EQ.1.OR.
     1             ((ITIPL.EQ.1.OR.WRATCN.GE.5.0).AND.IBEAM.EQ.0)).AND.
C END MAY 1997
     1                WRATTP.GE.2.5
            ILOOPS = ICLOOP
C BEG APR 2011
C           IF (NPRT.GE.2) THEN
C             WRITE(IFILE,'(A,3I5,1P,3E12.4)')
C    1             ' ITIPL,ICWEB,IBEAM,WRATTP,WRATCN,FSBSTR= ',
C    1               ITIPL,ICWEB,IBEAM,WRATTP,WRATCN,FSBSTR
C             WRITE(IFILE,'(A,1P,4E12.4)')
C    1             ' EIGSVE,FKNOSV, EIGLCS(1),FKNOCS= ',
C    1               EIGSVE,FKNOSV, EIGLCS(1),FKNOCS
C             WRITE(IFILE,'(A)') ' ELOG1,ELOG2,ELOG3,ELOG4,ISANDX= '
C             WRITE(IFILE,*) ELOG1,ELOG2,ELOG3,ELOG4, ISANDX
C           ENDIF
C END APR 2011
            IF (ELOG1.OR.ELOG2.OR.ELOG3.OR.ELOG4) THEN
              ILOOPS = 1
C END OCT 1996
              EIGLCS(1) = EIGSVE
              EIG       = EIGSVE
              CALL TRANS3(M3,YSAVE2,YLOC)
              CALL TRANS3(M3,YSAVE2,YSAVE)
              IREJCT = 1
              WRITE(IFILE,'(A,I3,2X,A)')
     1      ' *** REJECTING THE MODE WITH AXIAL HALFWAVES=', N,' ****'
              WRITE(IFILE,'(A,I3,2X,A)')
     1      ' *** ACCEPTING THE MODE WITH AXIAL HALFWAVES=', NSAVE,
     1      ' ****'
              N = NSAVE
              NLOC(1) = NSAVE
C BEG NOV 1994
              ITIPLS = 0
              EIGSVY = 0
C END NOV 1994
              GO TO 44
            ENDIF
C      End of (ELOG1.OR.ELOG2.OR.ELOG3.OR.ELOG4) condition.
         ENDIF
C   End of (NSERCH.EQ.0.AND.ICLOOP.EQ.2.AND.IREJCT.EQ.0) condition.
C BEG JAN 1996
C       IF (ICWEB.EQ.1.OR.ITIPL.EQ.1) THEN
C BEG FEB 1996
C BEG MAR 1996
C       IF (ICWEB.EQ.1.OR.ITIPL.EQ.1.OR.IFICT2.EQ.1) THEN
C BEG MAY 1997
        IF (ICWEB.EQ.1.OR.
     1    ((ITIPL.EQ.1.OR.WRATCN.GE.5.0).AND.IBEAM.EQ.0)
C END MAY 1997
     1                .OR.IFICT2.EQ.1) THEN
C END FEB 1996
C END JAN 1996
C BEG OCT 1996
C BEG MAY 1997
         IF (N.NE.MLOCAX.AND.NSERCH.NE.0.AND.ISTIF(1).NE.3
     1       .AND.(EIGRAT.LT.1.0.OR.ISANDX.OR.IZSTIF(1).EQ.1)) THEN
C END MAY 1997
C END OCT 1996
            ML1 = MLOCAX+1
C END MAR 1996
C BEG JAN 1996
C           IF (ICLOOP.LT.2.AND.(NLOC(1).GT.ML1.OR.ITIPL.EQ.1)) THEN
            IF (ICLOOP.LT.2.AND.
C BEG MAR 1996
C    1        (NLOC(1).GT.ML1.OR.ITIPL.EQ.1.OR.IFICT2.EQ.1)) THEN
C BEG MAY 1997
     1        (NLOC(1).GT.ML1.OR.
     1         ((ITIPL.EQ.1.OR.WRATCN.GE.5.0).AND.IBEAM.EQ.0)
C END MAY 1997
     1                       .OR.IFICT2.EQ.1)) THEN
C END MAR 1996
C END JAN 1996
               IREJCT = 0
               NSAVE = N
C BEG NOV 1994
               NSAVET = N
               ITIPLS = ITIPL
               EIGSVY= EIGLCS(1)
C END NOV 1994
               EIGSVE= EIGLCS(1)
               FKNOSV= FKNOCS
C              WRITE(IFILE,*)' NSAVE,EIGSVE,FKNOSV=',
C    1                         NSAVE,EIGSVE,FKNOSV
               CALL TRANS3(M3,YSAVE,YSAVE2)
               IYLOC = 0
C BEG MAR 1996
               N = MLOCAX
               IF (ICWEB.EQ.1.AND.NLOC(1).GT.(2*MLOCAX)) ICWEBS = 1
C END MAR 1996
               ICWEB = 0
               ITIPL  = 0
C BEG OCT 2004
               IFLGL  = 0
C END OCT 2004
               NSRCHS = NSERCH
C BEG JAN 1996
C              NSERCH = 0
               IF (IFICT2.EQ.0) NSERCH = 0
C END JAN 1996
               WRITE(IFILE,433)
               GO TO 43
            ENDIF
C     End of (ICLOOP.LT.2.AND.
C             (NLOC(1).GT.ML1.OR.
C             ((ITIPL.EQ.1.OR.WRATCN.GE.5.0).AND.IBEAM.EQ.0)
C                            .OR.IFICT2.EQ.1)) condition. 
         ENDIF
C   End of (N.NE.MLOCAX.AND.NSERCH.NE.0.AND.ISTIF(1).NE.3
C      .AND.(EIGRAT.LT.1.0.OR.ISANDX.OR.IZSTIF(1).EQ.1)) condition. 
C
C  FOLLOWING GROUP OF STATEMENTS ATTEMPTS TO CORRECT A POSSIBLE
C  FAILURE TO DETECT LOCAL POSTBUCKLING WHEN NXY IS PRESENT IN
C  T- AND J-STIFFENED PANELS.
C
C BEG NOV 1994
C        IF (ISTIF(1).NE.3.AND.ISTIF(1).NE.4.AND.EIGRAT.LT.1.) THEN
         IF ((ISTIF(1).EQ.1.OR.ISTIF(1).EQ.2).AND.EIGRAT.LT.1.) THEN
C END NOV 1994
C BEG MAR 1996
            IF (ICLOOP.EQ.2.AND.EILOCL.LT.0.7.AND.N.GE.MLOCAX) THEN
C END MAR 1996
               IF (RESEIG(1,1,1).LT.-0.05*ABS(FNXY)) THEN
                  IF (ABS(FNXY).GT.ABS(RESEIG(1,1,1))) THEN
                     IYLOC = 0
                     ICWEB = 0
                     ITIPL  = 0
C BEG OCT 2004
                     IFLGL  = 0
C END OCT 2004
                     MARK = 1
                     I5I = I5(4)
                     DO 432 I = 1,I5I
                        NXVARS(I) = NXVAR(I,4)
                        NXVAR(I,4)  = NXFIX(I,4)
  432                CONTINUE
                     WRITE(IFILE,433)
  433                FORMAT(/' ATTEMPTING TO FIND LOCAL BUCKLING MODE'/
     1                       ' IN WHICH PANEL SKIN DEFORMS.'/)
                     GO TO 43
                  ENDIF
               ENDIF
            ENDIF
C      End of (ICLOOP.EQ.2.AND.EILOCL.LT.0.7.AND.N.GE.MLOCAX) condition.
         ENDIF
C     End of ((ISTIF(1).EQ.1.OR.ISTIF(1).EQ.2).AND.EIGRAT.LT.1.) condition.
        ENDIF
C    End of IF (ICWEB.EQ.1.OR.((ITIPL.EQ.1.OR.WRATCN.GE.5.0).AND.IBEAM.EQ.0)
C              .OR.IFICT2.EQ.1)  section
      ENDIF
C  End of IF (IMOD.EQ.0) section.
C
C  STATEMENTS THAT HELP PREVENT MISSING LARGE POSTBUCKLING STRESSES AND
C  POPOFF FORCES IN CASES
C  FOR WHICH THERE IS SIGNIFICANT IN-PLANE SHEAR, POSTBUCKLING BEHAVIOR,
C  AND FOR WHICH THE CRITICAL AXIAL WAVENUMBER DETERMINED FROM THE
C  DISCRETIZED MODEL IS QUITE A BIT LARGER THAN THAT FOUND FROM THE
C  PANDA-TYPE CLOSED-FORM SOLUTION.
C
C BEG FEB 1996
C     IF (IMOD.EQ.0.AND.NSERCH.NE.0.AND.ICRIP.EQ.0.AND.EIGRAT.LT.1.)THEN
      IF (IMOD.EQ.0.AND.NSERCH.NE.0.AND.ICRIP.EQ.0.AND.EIGRAT.LT.1.
     1                                            .AND.IBEAM.EQ.0) THEN
C END FEB 1996
         IF (FKNOCS.LT.0.7.AND.(EIGLCS(1)*FKNOCS).LT.0.8) THEN
            IF ((B(1)-W2(1)).GT.(3.*(B2(1)-W2(1))).AND.MLOCAL.GT.1) THEN
             IF (IPOPX.GT.0.AND.ITWICE.EQ.0) THEN
               FMLOCL = MLOCAL
               FMLOCL = 1.5*FMLOCL +0.1
               MLOCLT = FMLOCL
               FMLOCL = MLOCAL
               FMLOCL = 1.2*FMLOCL +0.1
               MLOCT2 = FMLOCL
               IF (NLOC(1).GE.MLOCLT.AND.MLOCNS.GE.MLOCT2) THEN
                  IYLOC = 0
                  FMLOCL = MLOCAL
                  FMLOC2 = MLOCNS
                  FMLOC3 = NLOC(1)
                  FN     = FMLOC3*FMLOCL/FMLOC2 + 1.0
                  NSAVE = N
                  N = FN
                  IF (N.LT.MLOCAL)  N = MLOCAL
                  IF (N.GE.NLOC(1).OR.N.LE.1) THEN
                      N = NSAVE
                      GO TO 435
                  ENDIF
                  ICWEB = 0
                  ITIPL  = 0
C BEG OCT 2004
                  IFLGL  = 0
C END OCT 2004
                  NSRCHS = NSERCH
                  NSERCH = 0
                  WRITE(IFILE,434) ILOADS,ICASE,N,N,NLOC(1)
  434             FORMAT(/' LOAD SET NO. ',I1,'; SUBCASE NO. ',I1/
     1 ' DOING LOCAL BUCKLING AGAIN, THIS TIME FOR'/
     1 ' NUMBER OF AXIAL HALF-WAVES, M =',I3,', BECAUSE THERE ARE'/
     1 ' INDICATIONS THAT LOCAL POSTBUCKLING STRESSES AND STRINGER'/
     1 ' POPOFF FORCES MAY BE LARGER FOR M =',I3,' THAN FOR THE'/
     1 ' CRITICAL VALUE, M ='I3,' JUST FOUND FROM THE DISCRETIZED'/
     1 ' PANEL MODULE MODEL.'/)
                  GO TO 43
               ENDIF
C        End of (NLOC(1).GE.MLOCLT.AND.MLOCNS.GE.MLOCT2) condition.
             ENDIF
C       End of (IPOPX.GT.0.AND.ITWICE.EQ.0) condition.
            ENDIF
C     End of ((B(1)-W2(1)).GT.(3.*(B2(1)-W2(1))).AND.MLOCAL.GT.1)
C                                                         condition.
         ENDIF
C   End of (FKNOCS.LT.0.7.AND.(EIGLCS(1)*FKNOCS).LT.0.8) condition.
      ENDIF
C End of (IMOD.EQ.0.AND.NSERCH.NE.0.AND.ICRIP.EQ.0.AND.EIGRAT.LT.1.
C                                        .AND.IBEAM.EQ.0) condition. 
C
  435 CONTINUE
      IF (ICLOOP.GE.2) NSERCH = NSRCHS
      IF ((IMOD.EQ.0.AND.JJJ.EQ.0.AND.NPRT.GE.1).OR.NPRT.GE.2)
     1 WRITE(IFILE,*)' **** END OF LOCAL BUCKLING EIGENVECTOR CALC.****'
      EIGDIS(1) = EIG
C BEG JAN 1996
      IF (IMOD.EQ.0.AND.IFICT2.EQ.1) THEN
         WRITE(IFILE,*)' *******************************************'
         WRITE(IFILE,*)' **** LOCAL MODE IS SPURIOUS (FICTITIOUS) ****'
C BEG JUL 1999
         IF (EIGLCS(1)*FKNOCS.LT.5.0) THEN
            WRITE(IFILE,'(A,/,A,/,A)')
     1    ' TO AVOID THIS DIFFICULTY RAISE THE LOWER BOUNDS OF',
     1    ' THICKNESSES IN THE PANEL SKIN.',
     1    ' THE MODEL TYPE INDEX, IQUICK, IS BEING RESET TO UNITY.'
            IQUCHG = 1
            IQUICK = 1
         WRITE(IFILE,*)' *******************************************'
            GO TO 2
         ENDIF
         WRITE(IFILE,*)' *******************************************'
C END JUL 1999
      ENDIF
C END JAN 1996
      IF (IMOD.EQ.0.AND.ICRIP.EQ.1) THEN
         WRITE(IFILE,*)' *******************************************'
         WRITE(IFILE,*)' **** LOCAL MODE IS BUCKLING UNDER HAT ****'
         WRITE(IFILE,*)' *******************************************'
      ENDIF
      IF (IMOD.EQ.0.AND.ICROWN.EQ.1) THEN
         WRITE(IFILE,*)' *******************************************'
         WRITE(IFILE,*)' *** LOCAL MODE IS BUCKLING OF HAT CROWN ***'
         WRITE(IFILE,*)' *******************************************'
      ENDIF
C BEG JUL 1999
C     IF (N.GT.NMAX) THEN
C BEG SEP 2004
C     IF (N.GT.NMAX.AND.EIG.LT.100.) THEN
C BEG JAN 2005
      IF (IMOD.EQ.0.AND.N.GT.NMAX.AND.EIG.LT.5.) THEN
C END JAN 2005
C END SEP 2004
         IQUICK = IQUICS
C END JUL 1999
         IQUIT = 1
C BEG JUN 2004
C23456789012345678901234567890123456789012345678901234567890123456789012
         WRITE(IFILE,'(/,A,3I6)')
     1 ' QUITTING STRUCT BECAUSE N .GT. NMAX: IMOD,N,NMAX=', IMOD,N,NMAX
C END JUN 2004
         RETURN
      ENDIF
      IF (INEG.EQ.1) THEN
         WRITE(IFILE,*)' NEGATIVE EIGENVALUE. NO. OF AXIAL WAVES=',N
C BEG FEB 1996
C BEG FEB 1999
         CALL LOADBA(18)
C END FEB 1999
         IF (IRESTY.EQ.1) GO TO 2222
         CALL ERREX
C END FEB 1996
      ENDIF
C
C  NEW SECTION TO PREVENT USE OF UNCONSERVATIVE OR TOO CONSERVATIVE
C  LOCAL BUCKLING LOAD FACTOR WHEN THERE IS CONSIDERABLE PANEL BENDING:
C
C BEG FEB 1996
C     IF (ISTIF(1).NE.5.AND.IMOD.EQ.0) THEN
      IF (ISTIF(1).NE.5.AND.IMOD.EQ.0.AND.IBEAM.EQ.0) THEN
C END FEB 1996
         IPANDA = 0
         RESFAC = SQRT(RESEIG(1,1,1)**2 +RESEIG(2,1,1)**2)
C      Use the more conservative estimate of local buckling if
C      in-plane shear is present yet the local knockdown is unity...
C BEG OCT 1998
         IF (ABS(RESEIG(3,1,1)).GT.0.1*RESFAC.AND.FKNOCS.EQ.1.0
     1                        .AND.EILOCL.LT.EIG*FKNOCS) THEN
C23456789012345678901234567890123456789012345678901234567890123456789012
            IF (NPRT.EQ.2) WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,1P,5E12.4)')
     1      ' IPANDA is being set equal to 1 because in-plane shear is',
     1      ' present yet the local knockdown to compensate for shear',
     1      ' is unity and EILOCL is less than EIG*FKNOCS.',
     1      ' RESEIG(3,1,1),RESFAC,FKNOCS,EILOCL,EIG=',
     1        RESEIG(3,1,1),RESFAC,FKNOCS,EILOCL,EIG
            IPANDA = 1
         ENDIF
C BEG JAN 2007
C      Use the local buckling estimate from PANDA-type theory if
C      in-plane shear is large and the alternative (double-trig-
C      series-solution) will be used (IALTSN=1), and the knockdown
C      factor, FKNOCS, is less than 0.3...
C      This section was added in order to try to prevent large
C      constraint gradients during optimization cycles.
C        IF (ABS(RESEIG(3,1,1)).GT.RESFAC.AND.FKNOCS.LT.0.3
C    1                                   .AND.IALTSN.EQ.1) THEN
C23456789012345678901234567890123456789012345678901234567890123456789012
C           IF (NPRT.EQ.2) WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,1P,5E12.4)')
C    1      ' IPANDA is being set equal to 1 because FKNOCS.LT.0.3',
C    1      ' The in-plane shear loading Nxy is large,',
C    1      ' and IALTSN is equal to unity (yes for alternate buck.)',
C    1      ' RESEIG(3,1,1),RESFAC,FKNOCS,EILOCL,EIG=',
C    1        RESEIG(3,1,1),RESFAC,FKNOCS,EILOCL,EIG
C           IPANDA = 1
C        ENDIF
C END JAN 2007
C      Use the less conservative estimate of local buckling if
C      the local knockdown is very small...
         IF (FKNOCS.LT.0.1.AND.EILOCL.GT.EIG*FKNOCS) THEN
            IF (NPRT.EQ.2) WRITE(IFILE,'(/,A,/,A,/,A,1P,3E12.4)')
     1      ' IPANDA is being set equal to 1 because FKNOCS.LT.0.1',
     1      ' and EILOCL is greater than EIG*FKNOCS.',
     1      ' FKNOCS,EILOCL,EIG=',FKNOCS,EILOCL,EIG
            IPANDA = 1
         ENDIF
C BEG DEC 2001
C      Use the less conservative estimate of local buckling if
C      the local knockdown is less than 0.3 and PANDA2 will execute
C      SUBROUTINE ALTSOL (find local buckling with use of the alternate
C      (double trig series expansion) buckling model described in
C      AIAA Paper 99-1233, Proceedings 40th AIAA SDM Meeting, p302, 1999,
C BEG OCT 2004
C      and there is no stringer sidesway or web buckling or flange crippling
         IF (FKNOCS.LT.0.3.AND.EILOCL.GT.EIG*FKNOCS.AND.IALTSN.EQ.1
     1     .AND.(ITIPL1.EQ.0.AND.IWEBL1.EQ.0.AND.IFLGL1.EQ.0)) THEN
C END OCT 2004
          IF (NPRT.EQ.2) WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,1P,3E12.4)')
     1      ' IPANDA is being set equal to 1 because FKNOCS.LT.0.3',
     1      ' and EILOCL is greater than EIG*FKNOCS.',
     1      ' and IALTSN is equal to unity (yes for alternate buck.)',
     1      ' and buckling is NOT by stringer sidesway or web buck.',
     1      ' FKNOCS,EILOCL,EIG=',FKNOCS,EILOCL,EIG
          IPANDA = 1
         ENDIF
C END DEC 2001
C      Use the less conservative estimate of local buckling if
C      significant in-plane shear is present and if
C BEG OCT 2004
C      buckling is by stringer sidesway or crippling or flange crippling...
         IF (ABS(RESEIG(3,1,1)).GT.RESFAC.AND.EILOCL.GT.EIG*FKNOCS
     1        .AND.(ITIPL1.EQ.1.OR.IWEBL1.EQ.1.OR.IFLGL1.EQ.1)
     1        .AND.FKNOCS.LT.0.7) THEN
            IF (NPRT.EQ.2)
     1        WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A,/,1P,5E12.4,2I5)')
     1      ' IPANDA is being set equal to 1 because in-plane shear is',
     1      ' significant and the local knockdown to compensate for',
     1      ' in-plane shear is less than 0.7 and',
     1      ' EILOCL is greater than EIG*FKNOCS and buckling is by',
     1      ' stringer deformation (ITIPL1=1 or IWEBL1=1 or IFLGL1=1).',
     1      ' RESEIG(3,1,1),RESFAC,FKNOCS,EILOCL,EIG,ITIPL1,IWEBL1=',
     1        RESEIG(3,1,1),RESFAC,FKNOCS,EILOCL,EIG,ITIPL1,IWEBL1
C END OCT 2004
            IPANDA = 1
         ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
      ENDIF
C End of (ISTIF(1).NE.5.AND.IMOD.EQ.0.AND.IBEAM.EQ.0) condition.
      IF (NPRT.GE.2) WRITE(IFILE,'(A,I2)') ' IPANDA=',IPANDA
C END OCT 1998
      IF (IPANDA.EQ.0) THEN
         ARGX = EIG
        IARGX = NLOC(1)
      ELSE
         ARGX = EILOCL/FKNOCS
        IARGX = MLOCAL
      ENDIF
C BEG NOV 1994
      IF (IPANDA.EQ.0.OR.ITYPE.NE.1) THEN
        FSLOCX = FSLOC
        IF (ISWWID.EQ.1) THEN
           FSLOCX = FSLOC
        ELSE
           XLOW = 0.5
           XHIGH= 1.0
           IF (WTIPWS.LE.XLOW)  FSLOCX = FSLOC
           IF (WTIPWS.GE.XHIGH) FSLOCX = FSGEN
           IF (WTIPWS.GT.XLOW.AND.WTIPWS.LT.XHIGH) THEN
              ATIP = (FSGEN - FSLOC)/(XHIGH - XLOW)
              BTIP = (FSGEN + FSLOC - ATIP*(XHIGH + XLOW))/2.
              FSLOCX = ABS(ATIP*WTIPWS + BTIP)
           ENDIF
        ENDIF
C BEG JAN 2007
        IF (ISTIF(1).EQ.3) FSLOCX = FSLOC
C END JAN 2007
C BEG FEB 2002
C23456789012345678901234567890123456789012345678901234567890123456789012
        IF (NPRT.GE.0.AND.FSLOCX.GT.FSLOC)
     1  WRITE(IFILE,'(/,A,/,A,/,A,1PE12.4,A,1PE12.4,/,A,/)')
     1' ********* NOTE *********** NOTE *********** NOTE ***********',
     1' BECAUSE OF LARGE DEFLECTION OF TIP OF THE STRINGER WEB, THE',
     1' FACTOR OF SAFETY FOR LOCAL BUCKLING CHANGED FROM',FSLOC,
     1' TO',FSLOCX,
     1' ******* END NOTE ******* END NOTE ****** END NOTE *********'
C END FEB 2002
C BEG DEC 1995
        IF (IMOD.EQ.0) FSLCXS = FSLOCX
C       IF (IMOD.EQ.1) FSLOCX = FSLCXS
C END DEC 1995
C
C BEG JAN 2005
C23456789012345678901234567890123456789012345678901234567890123456789012
        EIGMLT = 1.0
C BEG MAR 2005
C       IF (IPANDA.EQ.0.AND.KLAYER(1,1).NE.0
C    1      .AND.ITIPL1.EQ.0.AND.IWEBL1.EQ.0.AND.ICRIP1.EQ.0
C    1      .AND.ICRWN1.EQ.0.AND.IFLGL1.EQ.0) EIGMLT = 0.85
C BEG FEB 2009
        IF (ICONSV.EQ.1) THEN
           IF (IPANDA.EQ.0.AND.KLAYER(1,1).NE.0) EIGMLT = 0.85
C END MAR 2005
C BEG APR 2007
           IF (IPANDA.EQ.0.AND.KLAYER(1,1).NE.0.AND.ITIPL1.EQ.1)
     1                                           EIGMLT = 0.70
C END APR 2007
        ELSE
           IF (IPANDA.EQ.0.AND.KLAYER(1,1).NE.0) EIGMLT = 0.95
           IF (IPANDA.EQ.0.AND.KLAYER(1,1).NE.0.AND.ITIPL1.EQ.1)
     1                                           EIGMLT = 0.95
        ENDIF
C END FEB 2009
        IF (NPRT.GE.0.AND.EIGMLT.LT.1.0)
     1   WRITE(IFILE,'(/,A,1P,E12.4,/,A,/)')
     1' *** NOTE: Local buckling eigenvalue reduced by EIGMLT=',EIGMLT,
     1'           because there are smeared substiffeners.*******'
        CALL LOCCON(1,0,0,INUMTT,ARGX*EIGMLT,FKNOCS,FSLOCX,ISTIF,
     1   IGENRL,EIGLCS(1),IMOD,N,IARGX,IARGX,CONMAX,IPOINC,
C END JAN 2005
C BEG OCT 2004
     1           CONSTR,ICONST,WORDB,IPANDA,0,KOUBCK,1,0)
C END OCT 2004
      ENDIF
C End of (IPANDA.EQ.0.OR.ITYPE.NE.1) condition
C END NOV 1994
         IF (ITYPE.EQ.1.AND.NPRT.GE.2)
     1    WRITE(IFILE,*)' AFTER LOCCON: IMOD,INUMTT,ICONST=',
     1                                  IMOD,INUMTT,ICONST
      IF (EIGLCS(1).GT.0.0.AND.ITIPL1.EQ.1) THEN
C
C  INTRODUCE BENDING-TORSION BUCKLING CONSTRAINT...
C
C BEG MAR 2005
         EIGMLT = 1.0
C BEG FEB 2009
         IF (ICONSV.EQ.1) THEN
            IF (KLAYER(1,1).NE.0) EIGMLT = 0.85
         ELSE
            IF (KLAYER(1,1).NE.0) EIGMLT = 0.95
         ENDIF
C END FEB 2009
         IF (NPRT.GE.0.AND.EIGMLT.LT.1.0)
     1   WRITE(IFILE,'(/,A,1P,E12.4,/,A,/)')
     1' *** NOTE: Bending-torsion buckling eigvalue reduced by EIGMLT=',
     1      EIGMLT,
     1'     because there are smeared substiffeners.*******'
         EIGLCS(1) = EIGLCS(1)*EIGMLT
C23456789012345678901234567890123456789012345678901234567890123456789012
C END MAR 2005
         INUMTT = INUMTT + 1
         FSAFTY = FSGEN
C BEG FEB 2009
         IF (ICONSV.LT.1.AND.(IPANDA.EQ.0.OR.ITYPE.NE.1)) FSAFTY=FSLOCX 
C END FEB 2009
         IF (ICASE.EQ.2.AND.IFLAT.EQ.0) FSAFTY = FSBSTR
         CALL CONVRF(FSAFTY,CN2)
         CALL CONVRT(NLOC(1),CN)
         IF (IMOD.EQ.0.AND.(EIGLCS(1)/FSAFTY).LT.MAXCON) THEN
            ICAR = ICAR + 1
            PCWORD(ICAR) = 'Bending-torsion buckling'
            CPLOT(ICAR) = EIGLCS(1)/FSAFTY - 1.
            IADDCC(ICAR) = 0
            FSAFEP(ICAR) = FSAFTY
         ENDIF
         IF (IMOD.EQ.0.AND.(EIGLCS(1)/FSAFTY).GT.CONMAX) GO TO 4440
         IF (IMOD.EQ.1.AND.IPOINC(INUMTT).EQ.0) GO TO 4440
         ICONST = ICONST + 1
         IF (IMOD.EQ.0) IPOINC(INUMTT) = 1
         CONSTR(ICONST) = EIGLCS(1)/FSAFTY
         WORDB(ICONST)='Bending-torsion buckling; M='//CN//';FS='//CN2
C BEG APR 2007
         IF (NPRT.GE.0) WRITE(IFILE,'(A,1P,E12.4,2X,A)')
     1 ' Margin=',CONSTR(ICONST)-1.,WORDB(ICONST)
C END APR 2007
C BEG JULY 1997
         IF (IMOD.EQ.0) THEN
            MTORS(1) = NLOC(1)
            ETORS(1) = EIGLCS(1)
            WTORS(1) = WORDB(ICONST)(1:60)
         ENDIF
C END JULY 1997
C BEG AUG 1995
C23456789012345678901234567890123456789012345678901234567890123456789012
         IF (NPRT.GE.2) WRITE(IFILE,'(A,/,A,/,A,I3,A,I2,A,I2)')
     1 ' ******** THE FOLLOWING BENDING-TORSION MARGIN JUST COMPUTED:',
     1   WORDB(ICONST),
     1 ' ******** CONSTRAINT NO.',ICONST,'; LOAD SET NO.',ILOADS,
     1 '; SUBCASE NO.',ICASE
C END AUG 1995
 4440    CONTINUE
         IF (ITYPE.EQ.1.AND.NPRT.GE.2)
     1    WRITE(IFILE,*)' AFTER 4440 C: IMOD,INUMTT,ICONST=',
     1                                  IMOD,INUMTT,ICONST
      ENDIF
C End of (EIGLCS(1).GT.0.0.AND.ITIPL1.EQ.1) condition.
C BEG NOV 1994
C  FOLLOWING CODING INSERTED TO AVOID MISSING A CRITICAL BENDING-TORSION
C  BUCKLING CONSTRAINT THAT MIGHT HAVE BEEN PREVIOUSLY MISSED IN THE PREVIOUS
C  EFFORT TO SEARCH FOR A LOCAL BUCKLING MODE WITH SIGNIFICANT PARTICIPATION
C  OF THE PANEL SKIN...
C
      IF (EIGSVY.GT.0.0.AND.NSAVET.GT.1.AND.NSAVET.NE.NLOC(1)
     1                 .AND.ITIPLS.EQ.1) THEN
         IF (IMOD.EQ.1) THEN
            CALL TRANS2(M3,YSAVE2,Y)
            CALL TRANS3(M3,YSAVE2,YSAVE3)
            IYLOC4 = 0
            ILOW5  = 0
            IF (NPRT.GE.0) WRITE(IFILE,'(/,A)')
     1     '** BEGIN SUB.LOCAL (LOCAL BUCKL.,BENDING-TORSION MODE) **'
C BEG AUG 2001
 9320       CONTINUE
            ILABEL=9320
            IF (NPRT.GE.1) WRITE(IFILE,*) 
     1               ' LABEL NO. IN STRUCT=',ILABEL
C END AUG 2001
            CALL LOCAL(1,NPRT,NSAVET,B(2),B(1),IMOD,M3,INCR,YSAVE3,
     1              IFILE,IW,ILOC,DS,AS,BS,DIAG,C,D,DI,X,Y,Z,0,PHIMIN,
     1              KOITER,EIG,IYLOC4,INEG,
     1              IREDUC,FKNOCK(2),IDRW,NBLK,NGBK,NKF,
     1              0,IMAXB,KMAXB,IPV2,IBVC,1000,IGENRL,JJJ,
     1              MLOCAL,B2(1),EIGSVY,NSAVET,EIGSVY,NSAVET,
     1              ITYPE,ILOW5,1,THERMX,THERMS,P,KAPPA1,KAPPA2,0,CS,
     1              FNX,FNY,FNXY,RESULT,
     1              FXBEG,FXEND,FYBEG,FYEND,FXYBEG,FXYEND,FNX0,FNY0,
     1              FNXY0,RMAX,CX,RESEIG,NMAX,IABP,LENMOD,0,
     1              TEMP(1,1),IMTEMP,WPB1,ICLOOP,
     1              FSLOC,FSGEN,I5,ITIPLS,WRATPS,EIGSVY,NSAVET,YSAVE2,
     1              JJJTOR,W2(1),EIGITR(2),IBEAM,DELDUM,RESTOT,
     1              ISTIF(1),TX,1,NGLOB2,0,ILABEL,KLAYER(1,1))
C BEG APR 2007
            IF (IMOD.EQ.0.AND.NPRT.GE.0)
     1       WRITE(IFILE,'(A,1P,E12.4,/,A,I5)')
     1    ' Buckling load factor from SUB. LOCAL, EIGITR(2)=',EIGITR(2),
     1    ' Number of axial halfwaves between rings, NSAVET=',NSAVET
C23456789012345678901234567890123456789012345678901234567890123456789012
C END APR 2007
                    DELDUM = 0.
            IF (NPRT.GE.0) WRITE(IFILE,*)
     1     '**  END  SUB.LOCAL (LOCAL BUCKL.,BENDING-TORSION MODE) **'
         ENDIF
C  End of (IMOD.EQ.1) condition.
C
C  INTRODUCE BENDING-TORSION BUCKLING CONSTRAINT FROM BYPASSED MODE...
C
C BEG MAR 2005
         EIGMLT = 1.0
C BEG FEB 2009
         IF (ICONSV.EQ.1) THEN
            IF (KLAYER(1,1).NE.0) EIGMLT = 0.85
         ELSE
            IF (KLAYER(1,1).NE.0) EIGMLT = 0.95
         ENDIF
C END FEB 2009
         IF (NPRT.GE.0.AND.EIGMLT.LT.1.0)
     1   WRITE(IFILE,'(/,A,1P,E12.4,/,A,/)')
     1' *** NOTE: Bending-torsion buckling eigvalue reduced by EIGMLT=',
     1      EIGMLT,
     1'     because there are smeared substiffeners.*******'
         EIGSVY = EIGSVY*EIGMLT
C23456789012345678901234567890123456789012345678901234567890123456789012
C END MAR 2005
         INUMTT = INUMTT + 1
         FSAFTY = FSGEN
C BEG FEB 2009
         IF (ICONSV.LT.1.AND.(IPANDA.EQ.0.OR.ITYPE.NE.1)) FSAFTY=FSLOCX
C END FEB 2009
         IF (ICASE.EQ.2.AND.IFLAT.EQ.0) FSAFTY = FSBSTR
         CALL CONVRF(FSAFTY,CN2)
         CALL CONVRT(NSAVET,CN)
         IF (IMOD.EQ.0.AND.(EIGSVY/FSAFTY).LT.MAXCON) THEN
            ICAR = ICAR + 1
            PCWORD(ICAR) = 'Bending-torsion buckling(bypassed mode)'
            CPLOT(ICAR) = EIGSVY/FSAFTY - 1.
            IADDCC(ICAR) = 0
            FSAFEP(ICAR) = FSAFTY
         ENDIF
         IF (IMOD.EQ.0.AND.(EIGSVY/FSAFTY).GT.CONMAX) GO TO 4442
         IF (IMOD.EQ.1.AND.IPOINC(INUMTT).EQ.0) GO TO 4442
         ICONST = ICONST + 1
         IF (IMOD.EQ.0) IPOINC(INUMTT) = 1
         CONSTR(ICONST) = EIGSVY/FSAFTY
         WORDB(ICONST)='Bending-torsion buck.(bypassed mode);M='
     1//CN//';FS='//CN2
C BEG APR 2007
         IF (NPRT.GE.0) WRITE(IFILE,'(A,1P,E12.4,2X,A)')
     1 ' Margin=',CONSTR(ICONST)-1.,WORDB(ICONST)
C END APR 2007
C BEG JULY 1997
         IF (IMOD.EQ.0) THEN
            MTORS(2) = NSAVET
            ETORS(2) = EIGSVY
            WTORS(2) = WORDB(ICONST)(1:60)
         ENDIF
C END JULY 1997
C BEG AUG 1995
C23456789012345678901234567890123456789012345678901234567890123456789012
         IF (NPRT.GE.2) WRITE(IFILE,'(A,/,A,/,A,I3,A,I2,A,I2)')
     1 ' ******** THE FOLLOWING BENDING-TORSION MARGIN JUST COMPUTED:',
     1   WORDB(ICONST),
     1 ' ******** CONSTRAINT NO.',ICONST,'; LOAD SET NO.',ILOADS,
     1 '; SUBCASE NO.',ICASE
C END AUG 1995
 4442    CONTINUE
         IF (ITYPE.EQ.1.AND.NPRT.GE.2)
     1    WRITE(IFILE,*)' AFTER 4442 C: IMOD,INUMTT,ICONST=',
     1                                  IMOD,INUMTT,ICONST
      ENDIF
C End of (EIGSVY.GT.0.0.AND.NSAVET.GT.1.AND.NSAVET.NE.NLOC(1)
C                      .AND.ITIPLS.EQ.1) condition. 
C
C  FOLLOWING CODING INSERTED TO AVOID MISSING A CRITICAL BENDING-TORSION
C  BUCKLING CONSTRAINT THAT MIGHT HAVE BEEN PREVIOUSLY OVERLOOKED
C  IN THE PREVIOUS EFFORT TO SEARCH FOR THE LOCAL BUCKLING MODE
C  WITH THE MINIMUM EIGENVALUE WITH RESPECT TO NUMBER OF AXIAL HALFWAVES:
C
      IF (EIGSVX.GT.0.0.AND.NSAVEX.GT.1.AND.NSAVEX.NE.NLOC(1)
     1                 .AND.NSAVEX.NE.NSAVET.AND.ITIPLX.EQ.1) THEN
         IF (IMOD.EQ.1) THEN
            CALL TRANS2(M3,YSAVE4,Y)
            CALL TRANS3(M3,YSAVE4,YSAVE3)
            IYLOC5 = 0
            ILOW6 = 0
            IF (NPRT.GE.0) WRITE(IFILE,'(/,A)')
     1     '** BEGIN SUB.LOCAL (LOCAL BUCKL.2nd BEND-TORSION MODE) **'
C BEG AUG 2001
 9330       CONTINUE
            ILABEL=9330
            IF (NPRT.GE.1) WRITE(IFILE,*) 
     1               ' LABEL NO. IN STRUCT=',ILABEL
C END AUG 2001
            CALL LOCAL(1,NPRT,NSAVEX,B(2),B(1),IMOD,M3,INCR,YSAVE3,
     1              IFILE,IW,ILOC,DS,AS,BS,DIAG,C,D,DI,X,Y,Z,0,PHIMIN,
     1              KOITER,EIG,IYLOC5,INEG,
     1              IREDUC,FKNOCK(2),IDRW,NBLK,NGBK,NKF,
     1              0,IMAXB,KMAXB,IPV2,IBVC,1000,IGENRL,JJJ,
     1              MLOCAL,B2(1),EIGSVX,NSAVEX,EIGSVX,NSAVEX,
     1              ITYPE,ILOW6,1,THERMX,THERMS,P,KAPPA1,KAPPA2,0,CS,
     1              FNX,FNY,FNXY,RESULT,
     1              FXBEG,FXEND,FYBEG,FYEND,FXYBEG,FXYEND,FNX0,FNY0,
     1              FNXY0,RMAX,CX,RESEIG,NMAX,IABP,LENMOD,0,
     1              TEMP(1,1),IMTEMP,WPB1,ICLOOP,
     1              FSLOC,FSGEN,I5,ITIPLX,WRATPX,EIGSVX,NSAVEX,YSAVE4,
     1              JJJTOR,W2(1),EIGITR(3),IBEAM,DELDUM,RESTOT,
     1              ISTIF(1),TX,1,NGLOB2,0,ILABEL,KLAYER(1,1))
C BEG APR 2007
            IF (IMOD.EQ.0.AND.NPRT.GE.0)
     1       WRITE(IFILE,'(A,1P,E12.4,/,A,I5)')
     1    ' Buckling load factor from SUB. LOCAL, EIGITR(3)=',EIGITR(3),
     1    ' Number of axial halfwaves between rings, NSAVEX=',NSAVEX
C23456789012345678901234567890123456789012345678901234567890123456789012
C END APR 2007
                    DELDUM = 0.
            IF (NPRT.GE.0) WRITE(IFILE,*)
     1     '**  END  SUB.LOCAL (LOCAL BUCKL.2nd BEND-TORSION MODE) **'
         ENDIF
C   End of (IMOD.EQ.1) condition.
C
C  INTRODUCE BENDING-TORSION BUCKLING CONSTRAINT FROM BYPASSED 2nd MODE...
C
C23456789012345678901234567890123456789012345678901234567890123456789012
         XLOW = 0.5
         XHIGH= 1.0
         IF (WRATPX.LE.XLOW)  FSLOCX = FSLOC
         IF (WRATPX.GE.XHIGH) FSLOCX = FSGEN
         IF (WRATPX.GT.XLOW.AND.WRATPX.LT.XHIGH) THEN
            ATIP = (FSGEN - FSLOC)/(XHIGH - XLOW)
            BTIP = (FSGEN + FSLOC - ATIP*(XHIGH + XLOW))/2.
            FSLOCX = ABS(ATIP*WRATPX + BTIP)
         ENDIF
C BEG JAN 2007
         IF (ISTIF(1).EQ.3) FSLOCX = FSLOC
C END JAN 2007
C BEG FEB 2002
C23456789012345678901234567890123456789012345678901234567890123456789012
         IF (NPRT.GE.0.AND.FSLOCX.GT.FSLOC)
     1   WRITE(IFILE,'(/,A,/,A,/,A,1PE12.4,A,1PE12.4,/,A,/)')
     1 ' ********* NOTE *********** NOTE *********** NOTE ***********',
     1 ' BECAUSE OF LARGE DEFLECTION OF TIP OF THE STRINGER WEB, THE',
     1 ' FACTOR OF SAFETY FOR LOCAL BUCKLING CHANGED FROM',FSLOC,
     1 ' TO',FSLOCX,
     1 ' ******* END NOTE ******* END NOTE ****** END NOTE *********'
C END FEB 2002
C BEG DEC 1995
         IF (IMOD.EQ.0) FSLCYS = FSLOCX
C        IF (IMOD.EQ.1) FSLOCX = FSLCYS
C END DEC 1995
C BEG MAR 2005
         EIGMLT = 1.0
C BEG FEB 2009
         IF (ICONSV.EQ.1) THEN
            IF (KLAYER(1,1).NE.0) EIGMLT = 0.85
         ELSE
            IF (KLAYER(1,1).NE.0) EIGMLT = 0.95
         ENDIF
C END FEB 2009
         IF (NPRT.GE.0.AND.EIGMLT.LT.1.0)
     1   WRITE(IFILE,'(/,A,1P,E12.4,/,A,/)')
     1' *** NOTE: Bending-torsion buckling eigvalue reduced by EIGMLT=',
     1      EIGMLT,
     1'     because there are smeared substiffeners.*******'
         EIGSVX = EIGSVX*EIGMLT
C23456789012345678901234567890123456789012345678901234567890123456789012
C END MAR 2005
         INUMTT = INUMTT + 1
         FSAFTY = FSLOCX
         IF (ICASE.EQ.2.AND.IFLAT.EQ.0) FSAFTY = FSBSTR
         CALL CONVRF(FSAFTY,CN2)
         CALL CONVRT(NSAVEX,CN)
         IF (IMOD.EQ.0.AND.(EIGSVX/FSAFTY).LT.MAXCON) THEN
            ICAR = ICAR + 1
            PCWORD(ICAR) = 'Bending-torsion buckling(bypassed 2nd mode)'
            CPLOT(ICAR) = EIGSVX/FSAFTY - 1.
            IADDCC(ICAR) = 0
            FSAFEP(ICAR) = FSAFTY
         ENDIF
         IF (IMOD.EQ.0.AND.(EIGSVX/FSAFTY).GT.CONMAX) GO TO 4443
         IF (IMOD.EQ.1.AND.IPOINC(INUMTT).EQ.0) GO TO 4443
         ICONST = ICONST + 1
         IF (IMOD.EQ.0) IPOINC(INUMTT) = 1
         CONSTR(ICONST) = EIGSVX/FSAFTY
         WORDB(ICONST)='Bending-torsion buck.(bypassed 2nd mode);M='
     1//CN//';FS='//CN2
C BEG APR 2007
         IF (NPRT.GE.0) WRITE(IFILE,'(A,1P,E12.4,2X,A)')
     1 ' Margin=',CONSTR(ICONST)-1.,WORDB(ICONST)
C END APR 2007
C BEG JULY 1997
         IF (IMOD.EQ.0) THEN
            MTORS(3) = NSAVEX
            ETORS(3) = EIGSVX
            WTORS(3) = WORDB(ICONST)(1:60)
         ENDIF
C END JULY 1997
C BEG AUG 1995
C23456789012345678901234567890123456789012345678901234567890123456789012
         IF (NPRT.GE.2) WRITE(IFILE,'(A,/,A,/,A,I3,A,I2,A,I2)')
     1 ' ******** THE FOLLOWING BENDING-TORSION MARGIN JUST COMPUTED:',
     1   WORDB(ICONST),
     1 ' ******** CONSTRAINT NO.',ICONST,'; LOAD SET NO.',ILOADS,
     1 '; SUBCASE NO.',ICASE
C END AUG 1995
 4443    CONTINUE
         IF (ITYPE.EQ.1.AND.NPRT.GE.2)
     1    WRITE(IFILE,*)' AFTER 4443 C: IMOD,INUMTT,ICONST=',
     1                                  IMOD,INUMTT,ICONST
      ENDIF
C End of (EIGSVX.GT.0.0.AND.NSAVEX.GT.1.AND.NSAVEX.NE.NLOC(1)
C                      .AND.NSAVEX.NE.NSAVET.AND.ITIPLX.EQ.1) condition. 
C END NOV 1994
C BEG OCT 1995
      IF (IMOD.EQ.0.AND.NLOC(1).GT.1) ISWWID = 0
C END OCT 1995
C
C LOCAL-BUCKLING WITH LOW M (TO KEEP LOW-M-LOCAL-BUCKLING HIGHER THAN
C  HIGH-M-LOCAL-BUCKLING, or DETERMINE LONG-WAVE BENDING-TORSION TYPE
C  BUCKLING 
C  OR DETERMINE LOCAL WIDE-COLUMN SEGMENT BUCKLING (TRUSS-CORE
C  SANDWICH CONSTRUCTION ONLY)...
C
      IF (IYLOC.EQ.1) CALL TRANS2(M3,YSAVE,Y)
      EIGTRY = EIGLCS(1)*FKNOCS
      IF (ILOWVE.EQ.1.OR.ISTIF(1).EQ.5) THEN
C BEG DEC 1996
C        IF (ILOW.EQ.0) THEN
         IF (ILOWJJ.EQ.0) THEN
C END DEC 1996
C           IF (ITUTOR.EQ.1)
C    1       CALL DATUM(IFILE4,80,0,0,INT,REALL,CHARAC,IOUT,0,IPROMP)
            IF (IMOD.EQ.0) THEN
               NSERLW = 1
               NLOW = MLOCAL - 5
               IF (NLOW.LE.0) NLOW = 1
               NLOW = 1
               IF (ISTIF(1).EQ.5) NSERLW = 0
               INCRLW = 0.07*FLOAT(NLOW) + 1.
               NLOC(2) = 0
               ICWEBL  = 0
               ITIPL   = 0
            ELSE
C BEG OCT 1996
C              IF (NLOC(2).GT.(NLOC(1)-2).AND.NLOC(2).GT.1) GO TO 451
               IF (NLOC(2).GT.(NLOC(1)-1).AND.NLOC(2).GT.1) GO TO 451
C END OCT 1996
               IF (NLOC(1).EQ.1) GO TO 451
               NSERLW = 0
               NLOW = NLOC(2)
            ENDIF
C
            IF (MARK.EQ.1) THEN
               I5I = I5(4)
               DO 464 I = 1,I5I
  464          NXVAR(I,4) = NXVARS(I)
            ENDIF
C BEG OCT 2006
      IF (NPRT.GE.1) WRITE(IFILE,'(/,/,/,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************',
     1' ************          CHAPTER 15             *****************',
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************'
      IF (NPRT.GE.0) WRITE(IFILE,'(A,I3,A)')
     1' **** CHAPTER 15: DESIGN PERTURBATION INDEX, IMOD=',IMOD,' *****'
      IF (NPRT.GE.1) WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A)')
     1 ' *************************************************************',
     1 ' CHAPTER 15 Compute bending-torsion (low-m) buckling from',
     1 '            BOSOR4-type discretized skin-stringer single',
     1 '            module model. See Section 12.2 (lower table on',
     1 '            p. 511) in [1A], for example.'
C END OCT 2006
            IF (NPRT.GE.1) WRITE(IFILE,'(/,A)')
     1'**** BEGIN SUBROUTINE LOCAL (LOW-M LOCAL BUCKLING SEARCH) ****'
C
C BEG AUG 2001
 9340       CONTINUE
            ILABEL=9340
            IF (NPRT.GE.1) WRITE(IFILE,*) 
     1               ' LABEL NO. IN STRUCT=',ILABEL
C END AUG 2001
            CALL LOCAL(1,NPRT,NLOW,FMULTB*B(2),B(1),IMOD,M3,INCRLW,
     1              YSAVE,IFILE,
     1              IW,ILOC,DS,AS,BS,DIAG,C,D,DI,X,Y,Z,NSERLW,PHIMIN,
     1              KOITER,EIG,IYLOC,INEG,
     1              IREDUC,FKNOCS,IDRW,NBLK,NGBK,NKF,
     1             -1,IMAXB,KMAXB,IPV2,IBVC,1000,IGENRL,JJJ,
     1              MLOCAL,B2(1),EIGLCS(2),NLOC(2),EIGLCS(1),NLOC(1),
     1              ITYPE,ILOW,1,THERMX,THERMS,P,KAPPA1,KAPPA2,0,CS,
     1              FNX,FNY,FNXY,RESULT,
     1              FXBEG,FXEND,FYBEG,FYEND,FXYBEG,FXYEND,FNX0,FNY0,
     1              FNXY0,RMAX,CX,RESEIG,NMAX,IABP,LENMOD,ICWEBL,
     1              TEMP(1,1),IMTEMP,WPB1,ICLOOP,
     1              FSLOC,FSGEN,I5,ITIPLZ,WRATPZ,EIGSVZ,NSAVEZ,YSAVE5,
     1              JJJTOR,W2(1),EIGITR(4),IBEAM,DELDUM,RESTOT,
     1              ISTIF(1),TX,1,NGLOB2,0,ILABEL,KLAYER(1,1))
C BEG APR 2007
            IF (IMOD.EQ.0.AND.NPRT.GE.0)
     1       WRITE(IFILE,'(A,1P,E12.4,/,A,I5)')
     1    ' Buckling load factor from SUB. LOCAL, EIGITR(4)=',EIGITR(4),
     1    ' Number of axial halfwaves between rings, NLOW=',NLOW
C23456789012345678901234567890123456789012345678901234567890123456789012
C END APR 2007
                    DELDUM = 0.
C BEG FEB 1996
            IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
            IF (NPRT.GE.0) WRITE(IFILE,*)
     1'**** END SUBROUTINE LOCAL (LOW-M LOCAL BUCKLING SEARCH) ******'
C
            IF (IMOD.EQ.0) THEN
               ICWEBL = 0
               ITIPL  = 0
C BEG OCT 2004
               IFLGL  = 0
C END OCT 2004
               MARK3  = 0
               MARK4  = 0
C              IF (NLOC(2).GT.(NLOC(1)-2).AND.NLOC(2).GT.1
C    1                                   .AND.ICLOOP.LT.2) GO TO 45
C BEG OCT 1996
C              IF (NLOC(2).GT.(NLOC(1)-2).AND.NLOC(2).GT.1) GO TO 45
               IF (NLOC(2).GT.(NLOC(1)-1).AND.NLOC(2).GT.1) GO TO 45
C END OCT 1996
               IF (NLOC(1).EQ.1) GO TO 45
C BEG DEC 1996
C              IF (ILOW.EQ.0) THEN
               IF (ILOWJJ.EQ.0) THEN
C END DEC 1996
                  CALL TRANS2(M3,YSAVE,Y)
                  IF (NPRT.GE.0) WRITE(IFILE,'(/,A)')
     1'**** BEGIN SUBROUTINE MODE (LOW-M LOCAL BUCKLING MODE SHAPE) ***'
C
C BEG OCT 1996
                  FKNOCX = FKNOCK(2)
                  FKNOCD = FKNOCK(3)
C END OCT 1996
                  CALL MODE(IFILE,NPRT,NSEGB5,I5,IW,DS,M3,Y,ISKINL,1,
     1            -1, ZPARTX,0.,CX,1,WPRES,EIGLCS(2),
     1             RMAX,ITIPL,ICWEBL,IMOD,
     1             WW2,WD2,WDD2,UU2,VV2,VP2,ZREF,NLOW,FKNOCX,
C BEG OCT 1998
C BEG JUN 2004
     1             FKNOCD,ICROWN,P,IFICT3,WDDD2,3,0,TX,1,0,
     1    INTSNG,RAD2,TY,IZSTIF,B,B2,H,W,W2,
     1    B0,B20,H0,WW0,W20,ISTIF,INTEXT,IFAY,IBEAM,IONEST,
     1    AXIAL,CIRC,ICRIP,ISEGC,WRATIO,WTIPWS,WRATTP,
     1    WRATWB,WRATCN,WRWIDE,WIDLMM,PEDG,ISOGRD,RESULT,IFLGL)
C END JUN 2004
C END OCT 1998
C
                  IF (ICLOOP.GE.2.AND.EIGLCS(2).GT.EIGLCS(1)
C BEG OCT 1996
C    1            .AND.NLOC(2).GT.(NLOC(1)-2).AND.NLOC(2).GT.1
     1            .AND.NLOC(2).GT.(NLOC(1)-1).AND.NLOC(2).GT.1
C END OCT 1996
     1            .AND.ITIPL.EQ.0) GO TO 45
                  ITIPL2 = ITIPL
C BEG DEC 1995
                  IWEBL2 = ICWEBL
C END DEC 1995
C BEG OCT 2004
                  IFLGL2 = IFLGL
C END OCT 2004
                  IF (NPRT.GE.0) WRITE(IFILE,*)
     1'**** END SUBROUTINE MODE (LOW-M LOCAL BUCKLING MODE SHAPE) *****'
C BEG JUL 1999
                  IF (IFICT3.EQ.1) THEN
                   WRITE(IFILE,*)
     1           ' *******************************************'
                   WRITE(IFILE,*)
     1           ' **** LOW-M LOCAL MODE IS SPURIOUS (FICTITIOUS) ****'
C BEG DEC 2001 (FKNOCX instead of FKNOCS)
                   IF (EIGLCS(2)*FKNOCX.LT.5.0) THEN
C END DEC 2001
                      WRITE(IFILE,'(A,/,A,/,A)')
     1              ' TO AVOID THIS DIFFICULTY RAISE THE LOWER BOUNDS',
     1              ' OF THICKNESSES IN THE PANEL SKIN. THE MODEL',
     1              ' TYPE INDEX, IQUICK, IS BEING RESET TO UNITY.'
                      IQUCHG = 1
                      IQUICK = 1
                      WRITE(IFILE,*)
     1              ' *******************************************'
                      GO TO 2
                   ENDIF
                   WRITE(IFILE,*)
     1           ' *******************************************'
                  ENDIF
C END JUL 1999
               ENDIF
C       End of (ILOWJJ.EQ.0) condition.
C              IF (ICWEBL.EQ.1) THEN
C                 IF (NLOC(2).LE.MLOCAL/2.AND.EIGLCS(2).GT.0.)
C    1              MARK3 = 1
C              ENDIF
C
C BEG DEC 1995
               IF ((IWEBL2.EQ.1.OR.ITIPL2.EQ.1)
C END DEC 1995
     1                        .AND.EIGLCS(2).GT.0.) THEN
                  IF (ISTIF(1).LT.4) THEN
                     MARK3 = 1
                  ELSE
                     IF (NLOC(2).LE.MLOCAL/2) MARK3 = 1
                  ENDIF
               ENDIF
C BEG DEC 1995
               IF (IWEBL2.EQ.0.AND.ITIPL2.EQ.0
C END DEC 1995
     1                        .AND.(EIGLCS(2)*FKNOCS).GT.1.1) MARK4=1
               IF (ISTIF(1).EQ.4.AND.ITIPL2.EQ.0
     1                        .AND.(EIGLCS(2)*FKNOCS).GT.1.1) MARK4=1
               IF (ICASE.EQ.2.AND.IFLAT.EQ.0) MARK4 = 1
C BEG OCT 1995
               IF (FSLOC.GE.0.7) MARK4 = 1
C END OCT 1995
            ENDIF
C BEG OCT 2004
C          (End of (IMOD.EQ.0) condition.)
C END OCT 2004
C BEG DEC 1995
C BEG OCT 2004
C           WRITE(8,*)' IWEBL2,ITIPL2,IFLGL2,MARK3=',
C                       IWEBL2,ITIPL2,IFLGL2,MARK3
C END OCT 2004
C           WRITE(8,*)' NLOC(1),NLOC(2)=',NLOC(1),NLOC(2)
            IF ((IWEBL2.EQ.1.OR.ITIPL2.EQ.1).AND.MARK3.EQ.1) THEN
C END DEC 1995
C
C  GENERATE CONSTRAINT CORRESPONDING TO LOW-AXIAL-WAVENUMBER TORSIONAL
C  INSTABILITY OF THE SINGLE PANEL MODULE:
C
C BEG MAR 2005
               EIGMLT = 1.0
C BEG FEB 2009
               IF (ICONSV.EQ.1) THEN
                  IF (KLAYER(1,1).NE.0) EIGMLT = 0.85
                  IF (KLAYER(1,1).NE.0.AND.ITIPL2.EQ.1) EIGMLT = 0.70
               ELSE
                  IF (KLAYER(1,1).NE.0) EIGMLT = 0.95
                  IF (KLAYER(1,1).NE.0.AND.ITIPL2.EQ.1) EIGMLT = 0.95
               ENDIF
C END FEB 2009
               IF (NPRT.GE.0.AND.EIGMLT.LT.1.0)
     1         WRITE(IFILE,'(/,A,1P,E12.4,/,A,/)')
     1' *** NOTE: Bending-torsion buckling eigvalue reduced by EIGMLT=',
     1            EIGMLT,
     1'           because there are smeared substiffeners.*******'
               EIGLCS(2) = EIGLCS(2)*EIGMLT
C23456789012345678901234567890123456789012345678901234567890123456789012
C END MAR 2005
               INUMTT = INUMTT + 1
               FSAFTY = FSGEN
C BEG FEB 2009
               IF (ICONSV.LT.1) FSAFTY = FSLOC
C END FEB 2009
               IF (ICASE.EQ.2.AND.IFLAT.EQ.0) FSAFTY = FSBSTR
               CALL CONVRF(FSAFTY,CN2)
               CALL CONVRT(NLOC(2),CN)
               IF (IMOD.EQ.0.AND.(EIGLCS(2)/FSAFTY).LT.MAXCON) THEN
                  ICAR = ICAR + 1
                  PCWORD(ICAR) = 'Bending-torsion buckling'
                  IF (ITYPE.NE.5) PCWORD(ICAR) =
     1           'Long-axial-wave bending-torsion buckling'
                  CPLOT(ICAR) = EIGLCS(2)/FSAFTY - 1.
                  IADDCC(ICAR) = 0
                  FSAFEP(ICAR) = FSAFTY
C BEG AUG 1995
                  JJJTOR = 1
                  ILOW = 0
C END AUG 1995
               ENDIF
               IF (IMOD.EQ.0.AND.(EIGLCS(2)/FSAFTY).GT.CONMAX)
     1            GO TO 440
               IF (IMOD.EQ.1.AND.IPOINC(INUMTT).EQ.0) GO TO 440
               ICONST = ICONST + 1
               IF (IMOD.EQ.0) IPOINC(INUMTT) = 1
C BEG AUG 1995
               IF (IMOD.EQ.0) THEN
                  JJJTOR = 1
                  ILOW = 0
               ENDIF
C END AUG 1995
               CONSTR(ICONST) = EIGLCS(2)/FSAFTY
               WORDB(ICONST)=
     1'Long-axial-wave bending-torsion buckling; M='//CN//';FS='//CN2
C BEG APR 2007
               IF (NPRT.GE.0) WRITE(IFILE,'(A,1P,E12.4,2X,A)')
     1       ' Margin=',CONSTR(ICONST)-1.,WORDB(ICONST)
C END APR 2007
C BEG JULY 1997
               IF (IMOD.EQ.0) THEN
                  MTORS(4) = NLOC(2)
                  ETORS(4) = EIGLCS(2)
                  WTORS(4) = WORDB(ICONST)(1:60)
               ENDIF
C END JULY 1997
C BEG AUG 1995
C23456789012345678901234567890123456789012345678901234567890123456789012
               IF (NPRT.GE.2) WRITE(IFILE,'(A,/,A,/,A,I3,A,I2,A,I2)')
     1  ' ******** THE FOLLOWING BENDING-TORSION MARGIN JUST COMPUTED:',
     1         WORDB(ICONST),
     1       ' ******** CONSTRAINT NO.',ICONST,'; LOAD SET NO.',ILOADS,
     1       '; SUBCASE NO.',ICASE
C END AUG 1995
  440          CONTINUE
               IF (ITYPE.EQ.1.AND.NPRT.GE.2)
     1          WRITE(IFILE,*)' AFTER 440 CO: IMOD,INUMTT,ICONST=',
     1                                        IMOD,INUMTT,ICONST
            ENDIF
C     End of ((IWEBL2.EQ.1.OR.ITIPL2.EQ.1).AND.MARK3.EQ.1) condition.
C BEG OCT 1996
C           POSSIBLY COMPUTE SANDWICH CORE TRANSVERSE SHEAR STRESS
C           CORRESPONDING TO THE LONG-WAVE BENDING-TORSION MODE.
            EIGTOR = EIGLCS(2)*FKNOCX
            IF (IMOD.EQ.0.AND.EIGTOR.GT.1.1.AND.W0.GT.0.0) FIQYY=1.0
            IF (FIQYY.GT.0.0) THEN
               IF (IMOD.EQ.1) THEN
                  CALL TRANS2(M3,YSAVE,Y)
                  IF (NPRT.GE.1) WRITE(IFILE,'(/,A)')
     1'**** BEGIN SUBROUTINE MODE (LOW-M LOCAL BUCKLING MODE SHAPE) ***'
                  CALL MODE(IFILE,NPRT,NSEGB5,I5,IW,DS,M3,Y,ISKDUM,1,
     1            -1, ZPARTX,0.,CX,1,WPRES,EIGLCS(2),
     1             RMAX,ITIDUM,ICWDUM,0,
     1             WW2,WD2,WDD2,UU2,VV2,VP2,ZDUM,NLOW,FKNOCX,
C BEG OCT 1998
C BEG JUN 2004
     1             FKNOCD,ICRDUM,P,IFIDUM,WDDD2,4,0,TX,1,0,
     1    INTSNG,RAD2,TY,IZSTIF,B,B2,H,W,W2,
     1    B0,B20,H0,WW0,W20,ISTIF,INTEXT,IFAY,IBEAM,IONEST,
     1    AXIAL,CIRC,ICRIP,ISEGC,WRATIO,WTIPWS,WRATTP,
     1    WRATWB,WRATCN,WRWIDE,WIDLMM,PEDG,ISOGRD,RESULT,IFLDUM)
C END JUN 2004
C END OCT 1998
                  IF (NPRT.GE.1) WRITE(IFILE,*)
     1'**** END SUBROUTINE MODE (LOW-M LOCAL BUCKLING MODE SHAPE) *****'
               ENDIF
C         End of (IMOD.EQ.1) condition.
               EIGTOR = EIGLCS(2)*FKNOCX
               DO 4420 ISEG = 1,NSEGB5
C BEG JUN 2004
                  CALL IDSEG(ISTIF(1),ISEG,NSEGB5,B20(1),W20(1),J,IFAY)
C END JUN 2004
                  IF (ISANDW(J,1).GT.1
     1                         .AND.ISANDW(J,1).LT.NLAYER(J,1)) THEN
                     W0PRD = 100.
                     IF ((EIGTOR-1.).GT.0.0.AND.W0.GT.0.0)
     1                  W0PRD = W0/(EIGTOR-1.)
                     C44PRD = CX(4,4,J)*W0PRD
                     C45PRD = (CX(4,5,J)+2.*CX(6,6,J))*W0PRD
                     C55PRD = CX(5,5,J)*W0PRD
                     FNLOC2 = FLOAT(NLOC(2))
                     PI = 3.1415927
                     FNPIOB = FNLOC2*PI/B(2)
                     I5I = I5(ISEG)
C                    WRITE(IFILE,'(A,I3,1P,2E12.4)')
C    1             ' NLOC(2),EIGTOR,FKNOCX=',NLOC(2),EIGTOR,FKNOCX
                     DO 4410 I = 1,I5I
                        QXX = ABS(C44PRD*FNPIOB**3*WW2(I,ISEG))
     1                       +ABS(C45PRD*FNPIOB*WDD2(I,ISEG))
                        QXXMAX(J,1) = MAX(QXXMAX(J,1),QXX/TX(J))
                        QYY = ABS(C45PRD*FNPIOB**2*WD2(I,ISEG))
     1                       +ABS(C55PRD*WDDD2(I,ISEG))
     1                       +ABS(CX(5,5,J)*PWDDD(I,ISEG))
                        QYYMAX(J,1) = MAX(QYYMAX(J,1),QYY/TX(J))
C                       WRITE(IFILE,'(A,3I3,/,1P,5E12.4)')
C    1         ' ISEG,J,I,QXX,QXXMAX(J,1),QYY,QYYMAX(J,1),WW2(I,ISEG)=',
C    1           ISEG,J,I,QXX,QXXMAX(J,1),QYY,QYYMAX(J,1),WW2(I,ISEG)
                        IF (NPRT.GE.1.AND.I.EQ.I5I)
     1                     WRITE(IFILE,'(A,I2,1P,2E12.4)')
     1                     ' Iseg,QXXMAX(Iseg),QYYMAX(Iseg)=',
     1                       J,QXXMAX(J,1),QYYMAX(J,1)
 4410                CONTINUE
                  ENDIF
C          End of (ISANDW(J,1).GT.1
C                      .AND.ISANDW(J,1).LT.NLAYER(J,1)) condition.
 4420          CONTINUE
            ENDIF
C     End of (FIQYY.GT.0.0) condition.
C END OCT 1996
   45       CONTINUE
C
            FSAFE = FSLOC
C BEG NOV 1994
C           XLOW = 0.5
C           XHIGH= 1.0
C           IF (WTIPWS.LE.XLOW)  FSAFE = FSLOC
C           IF (WTIPWS.GE.XHIGH) FSAFE = FSGEN
C           IF (WTIPWS.GT.XLOW.AND.WTIPWS.LT.XHIGH) THEN
C              ATIP = (FSGEN - FSLOC)/(XHIGH - XLOW)
C              BTIP = (FSGEN + FSLOC - ATIP*(XHIGH + XLOW))/2.
C              FSAFE = ABS(ATIP*WTIPWS + BTIP)
C           ENDIF
            IF (ISTIF(1).EQ.5) FSAFE = FSGEN
            IF (IBEAM.EQ.1) FSAFE = FSGEN
C BEG OCT 2004
            IF (NLOC(2).EQ.1.AND.
     1          (IWEBL2.EQ.1.OR.ITIPL2.EQ.1.OR.IFLGL2.EQ.1)) GO TO 451
            IF (IALTSN.EQ.1.AND.FKNOCX.LT.0.3
     1     .AND.IWEBL2.EQ.0.AND.ITIPL2.EQ.0.AND.IFLGL2.EQ.0) GO TO 451
C END OCT 2004
C END DEC 2001
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG DEC 2001 (FKNOCX instead of FKNOCS in the argument list)
            CALL LOCCON(1,-1,IWEBL2,INUMTT,EIG,FKNOCX,FSAFE,ISTIF,
C END DEC 2001
     1       IGENRL,EIGLCS(1),IMOD,NLOW,NLOC(2),NLOC(1),CONMAX,IPOINC,
C BEG OCT 2004
     1       CONSTR,ICONST,WORDB,0,ITIPL2,KOUBCK,2,IFLGL2)
C END OCT 2004
            IF (ITYPE.EQ.1.AND.NPRT.GE.2)
     1       WRITE(IFILE,*)' BEFORE 451 C: IMOD,INUMTT,ICONST=',
     1                                     IMOD,INUMTT,ICONST
C
  451       CONTINUE
            IF ((IMOD.EQ.0.AND.JJJ.EQ.0.AND.NPRT.GE.1).OR.NPRT.GE.2)
     1 WRITE(IFILE,*)' **** END OF LOW-AXIAL-WAVENUMBER CHECK FOR ****'
            IF ((IMOD.EQ.0.AND.JJJ.EQ.0.AND.NPRT.GE.1).OR.NPRT.GE.2)
     1 WRITE(IFILE,*)' ***************  LOCAL BUCKLING  **************'
C BEG AUG 1995
C
C  LOW-M ANALOG OF NOV. 1994 STATEMENTS ADDED ABOVE...
C  FOLLOWING CODING INSERTED TO AVOID MISSING A CRITICAL BENDING-TORSION
C  BUCKLING CONSTRAINT THAT MIGHT HAVE BEEN PREVIOUSLY OVERLOOKED
C  IN THE PREVIOUS EFFORT TO SEARCH FOR THE LOCAL BUCKLING MODE
C  WITH THE MINIMUM EIGENVALUE WITH RESPECT TO NUMBER OF AXIAL HALFWAVES:
C
C23456789012345678901234567890123456789012345678901234567890123456789012
            IF (EIGSVZ.GT.0.0.AND.NSAVEZ.GT.1.AND.NSAVEZ.NE.NLOC(1)
     1                 .AND.NSAVEZ.NE.NLOC(2)
     1                 .AND.NSAVEZ.NE.NSAVEX.AND.ITIPLZ.EQ.1) THEN
               IF (IMOD.EQ.1) THEN
                  CALL TRANS2(M3,YSAVE5,Y)
                  CALL TRANS3(M3,YSAVE5,YSAVE3)
                  IYLOC5 = 0
                  ILOW6 = 0
                  IF (NPRT.GE.0) WRITE(IFILE,'(/,A)')
     1     '** BEGIN SUB.LOCAL (LOCAL BUCKL.LOW-M BEND-TORSION MODE) **'
C BEG AUG 2001
 9350             CONTINUE
                  ILABEL=9350
                  IF (NPRT.GE.1) WRITE(IFILE,*) 
     1               ' LABEL NO. IN STRUCT=',ILABEL
C END AUG 2001
                  CALL LOCAL(1,NPRT,NSAVEZ,B(2),B(1),IMOD,M3,INCR,
     1              YSAVE3,IFILE,IW,ILOC,DS,AS,BS,DIAG,C,D,DI,X,Y,Z,0,
     1              PHIMIN,KOITER,EIG,IYLOC5,INEG,
     1              IREDUC,FKNOCK(2),IDRW,NBLK,NGBK,NKF,
     1              -1,IMAXB,KMAXB,IPV2,IBVC,1000,IGENRL,JJJ,
     1              MLOCAL,B2(1),EIGSVZ,NSAVEZ,EIGSVZ,NSAVEZ,
     1              ITYPE,ILOW6,1,THERMX,THERMS,P,KAPPA1,KAPPA2,0,CS,
     1              FNX,FNY,FNXY,RESULT,
     1              FXBEG,FXEND,FYBEG,FYEND,FXYBEG,FXYEND,FNX0,FNY0,
     1              FNXY0,RMAX,CX,RESEIG,NMAX,IABP,LENMOD,0,
     1              TEMP(1,1),IMTEMP,WPB1,ICLOOP,
     1              FSLOC,FSGEN,I5,ITIPLZ,WRATPZ,EIGSVZ,NSAVEZ,YSAVE5,
     1              JJJTOR,W2(1),EIGITR(5),IBEAM,DELDUM,RESTOT,
     1              ISTIF(1),TX,1,NGLOB2,0,ILABEL,KLAYER(1,1))
C BEG APR 2007
                  IF (IMOD.EQ.0.AND.NPRT.GE.0)
     1            WRITE(IFILE,'(A,1P,E12.4,/,A,I5)')
     1    ' Buckling load factor from SUB. LOCAL, EIGITR(5)=',EIGITR(5),
     1    ' Number of axial halfwaves between rings, NSAVEZ=',NSAVEZ
C23456789012345678901234567890123456789012345678901234567890123456789012
C END APR 2007
                    DELDUM = 0.
                  IF (NPRT.GE.0) WRITE(IFILE,*)
     1     '**  END  SUB.LOCAL (LOCAL BUCKL.LOW-M BEND-TORSION MODE) **'
               ENDIF
C        End of (IMOD.EQ.1) condition.
C
C  INTRODUCE BENDING-TORSION BUCKLING CONSTRAINT FROM BYPASSED LOW-M MODE...
C
C23456789012345678901234567890123456789012345678901234567890123456789012
               XLOW = 0.5
               XHIGH= 1.0
               IF (WRATPZ.LE.XLOW)  FSLOCZ = FSLOC
               IF (WRATPZ.GE.XHIGH) FSLOCZ = FSGEN
               IF (WRATPZ.GT.XLOW.AND.WRATPZ.LT.XHIGH) THEN
                  ATIP = (FSGEN - FSLOC)/(XHIGH - XLOW)
                  BTIP = (FSGEN + FSLOC - ATIP*(XHIGH + XLOW))/2.
                  FSLOCZ = ABS(ATIP*WRATPZ + BTIP)
               ENDIF
C BEG JAN 2007
               IF (ISTIF(1).EQ.3) FSLOCZ = FSLOC
C END JAN 2007
C BEG FEB 2002
C23456789012345678901234567890123456789012345678901234567890123456789012
               IF (NPRT.GE.0.AND.FSLOCZ.GT.FSLOC)
     1         WRITE(IFILE,'(/,A,/,A,/,A,1PE12.4,A,1PE12.4,/,A,/)')
     1 ' ********* NOTE *********** NOTE *********** NOTE ***********',
     1 ' BECAUSE OF LARGE DEFLECTION OF TIP OF THE STRINGER WEB, THE',
     1 ' FACTOR OF SAFETY FOR LOCAL BUCKLING CHANGED FROM',FSLOC,
     1 ' TO',FSLOCZ,
     1 ' ******* END NOTE ******* END NOTE ****** END NOTE *********'
C END FEB 2002
C BEG DEC 1995
               IF (IMOD.EQ.0) FSLCZS = FSLOCZ
C              IF (IMOD.EQ.1) FSLOCZ = FSLCZS
C END DEC 1995
C BEG MAR 2005
               EIGMLT = 1.0
C BEG FEB 2009
               IF (ICONSV.EQ.1) THEN
                  IF (KLAYER(1,1).NE.0) EIGMLT = 0.85
                  IF (KLAYER(1,1).NE.0.AND.ITIPLZ.EQ.1) EIGMLT = 0.70
               ELSE
                  IF (KLAYER(1,1).NE.0) EIGMLT = 0.95
                  IF (KLAYER(1,1).NE.0.AND.ITIPLZ.EQ.1) EIGMLT = 0.95
               ENDIF
C END FEB 2009
               IF (NPRT.GE.0.AND.EIGMLT.LT.1.0)
     1         WRITE(IFILE,'(/,A,1P,E12.4,/,A,/)')
     1' *** NOTE: Bending-torsion buckling eigvalue reduced by EIGMLT=',
     1            EIGMLT,
     1'           because there are smeared substiffeners.*******'
               EIGSVZ = EIGSVZ*EIGMLT
C23456789012345678901234567890123456789012345678901234567890123456789012
C END MAR 2005
               INUMTT = INUMTT + 1
               FSAFTY = FSLOCZ
               IF (ICASE.EQ.2.AND.IFLAT.EQ.0) FSAFTY = FSBSTR
               CALL CONVRF(FSAFTY,CN2)
               CALL CONVRT(NSAVEZ,CN)
               IF (IMOD.EQ.0.AND.(EIGSVZ/FSAFTY).LT.MAXCON) THEN
                  ICAR = ICAR + 1
                  PCWORD(ICAR) =
     1               'Bending-torsion buckling(bypassed low-m mode)'
                  CPLOT(ICAR) = EIGSVZ/FSAFTY - 1.
                  IADDCC(ICAR) = 0
                  FSAFEP(ICAR) = FSAFTY
                  JJJTOR = 1
                  ILOW = 0
               ENDIF
               IF (IMOD.EQ.0.AND.(EIGSVZ/FSAFTY).GT.CONMAX) GO TO 4444
               IF (IMOD.EQ.1.AND.IPOINC(INUMTT).EQ.0) GO TO 4444
               ICONST = ICONST + 1
               IF (IMOD.EQ.0) IPOINC(INUMTT) = 1
               IF (IMOD.EQ.0) THEN
                  JJJTOR = 1
                  ILOW = 0
               ENDIF
               CONSTR(ICONST) = EIGSVZ/FSAFTY
               WORDB(ICONST)=
     1           'Bending-torsion buck.(bypassed low-m mode);M='
     1           //CN//';FS='//CN2
C BEG APR 2007
               IF (NPRT.GE.0) WRITE(IFILE,'(A,1P,E12.4,2X,A)')
     1       ' Margin=',CONSTR(ICONST)-1.,WORDB(ICONST)
C END APR 2007
C BEG JULY 1997
               IF (IMOD.EQ.0) THEN
                  MTORS(5) = NSAVEZ
                  ETORS(5) = EIGSVZ
                  WTORS(5) = WORDB(ICONST)(1:60)
               ENDIF
C END JULY 1997
C BEG AUG 1995
C23456789012345678901234567890123456789012345678901234567890123456789012
               IF (NPRT.GE.2) WRITE(IFILE,'(A,/,A,/,A,I3,A,I2,A,I2)')
     1  ' ******** THE FOLLOWING BENDING-TORSION MARGIN JUST COMPUTED:',
     1         WORDB(ICONST),
     1       ' ******** CONSTRAINT NO.',ICONST,'; LOAD SET NO.',ILOADS,
     1       '; SUBCASE NO.',ICASE
C END AUG 1995
 4444          CONTINUE
               IF (ITYPE.EQ.1.AND.NPRT.GE.2)
C BEG DEC 1995
     1          WRITE(IFILE,*)' AFTER 4444 C: IMOD,INUMTT,ICONST=',
     1                                        IMOD,INUMTT,ICONST
C END DEC 1995
            ENDIF
C     End of (EIGSVZ.GT.0.0.AND.NSAVEZ.GT.1.AND.NSAVEZ.NE.NLOC(1)
C                   .AND.NSAVEZ.NE.NLOC(2)
C                   .AND.NSAVEZ.NE.NSAVEX.AND.ITIPLZ.EQ.1) condition. 
C END AUG 1995
         ENDIF
C   End of (ILOWJJ.EQ.0) condition.
      ENDIF
C End of (ILOWVE.EQ.1.OR.ISTIF(1).EQ.5) condition.
C
      FKNOCK(2) = FKNOCS
      FKNOCK(3) = FKNOCH
C
C************************************************************************
C END CALCULATION OF LOCAL BUCKLING LOAD FACTORS FROM BOSOR4-TYPE
C (DISCRETIZED) MODEL OF THE SKIN-STRINGER PANEL MODULE.
C************************************************************************
   46 CONTINUE
      IF (MARK.EQ.1) THEN
         I5I = I5(4)
         DO 465 I = 1,I5I
  465    NXVAR(I,4) = NXVARS(I)
      ENDIF
C
C***********************************************************************
C BEGIN "KOITER" THEORY FOR LOCAL POSTBUCKLING OF SKIN-STRINGER MODULE.
C***********************************************************************
C
C  INTEGRATE PRODUCTS OF MODES FOR KOITER POST-LOCAL BUCKLING
C
C BEG OCT 2006
      IF (NPRT.GE.1) WRITE(IFILE,'(/,/,/,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************',
     1' ************          CHAPTER 16             *****************',
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************'
      IF (NPRT.GE.0) WRITE(IFILE,'(A,I3,A)')
     1' **** CHAPTER 16: DESIGN PERTURBATION INDEX, IMOD=',IMOD,' *****'
      IF (NPRT.GE.1)
     1 WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1 ' *************************************************************',
     1 ' CHAPTER 16 Compute post-local buckling from the Koiter',
     1 '            theory given in Ref.[1C]. See Figs. 23, 24, and',
     1 '            Figs. 47-49 in [1A], Fig. 6 in [1C], and Fig. 4 in',
     1' Bushnell, D.',
     1' "Optimization of an axially compressed ring and stringer',
     1' stiffened cylindrical shell with a general buckling modal',
     1' imperfection", AIAA Paper 2007-2216, 48th AIAA SDM Meeting,',
     1' Honolulu, Hawaii, April 2007'
C END OCT 2006
C BEG DEC 2003
      IF (NPRT.GE.1)
     1 WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1'*** BEGIN CALCULATIONS RELATING TO THE KOITER THEORY ***',
     1'*** See Ref.[3]: Bushnell, D., "Optimization of composite,',
     1'*** stiffened, imperfect panels under combined loads for',
     1'*** service in the posbuckling regime", CMAME, vol.103,',
     1'*** pp 43-114 (1993)',
     1'** BEGIN SUBROUTINE INTMOD (INTEGRALS OF PRODUCTS OF MODES) **',
     1' SUB.INTMOD computes the quantities given on pp 58 and 59 of',
     1' the paper just cited.'
C END DEC 2003
      CALL INTMOD(IFILE,NPRT,NSEGB5,I5,DS,1,0,NPB,RMAX,
     1            WW1,WD1,WDD1,UU1,VV1,VP1,
     1            WW2,WD2,WDD2,WW3,WD3,WDD3,
     1            WW4,WD4,WDD4,WW5,WD5,WDD5,
C BEG MAY 1997
     1            WW6,WD6,WDD6,ZREF,ILONG,IHOOP,IDISCR)
C END MAY 1997
      IF (NPRT.GE.1) WRITE(IFILE,*)
     1'**** END SUBROUTINE INTMOD (INTEGRALS OF PRODUCTS OF MODES) ****'
C
      IF (IQUICK.EQ.1) GO TO 8
C BEG APR 2007 (comment out the skipping. It's not necessary).
C BEG JUN 2004
C     IF (IQUICK.EQ.0.AND.KLAYER(1,1).NE.0) THEN
C        IF (IMOD.EQ.0) THEN
C           EKOISV = EIGTRY
C           PBEIGK = 0.
C           PBEIGB = EIGTRY
C        ENDIF
C        GO TO 8
C     ENDIF
C END JUN 2004
C END APR 2007
      EIGTRY = EIGLCS(1)*FKNOCK(2)
      IF (ISWWID.EQ.1) THEN
         IF (IMOD.EQ.0) THEN
           WRITE(IFILE,*)' WIDTH-WISE WIDE-COLUMN BUCKLING IS CRITICAL'
           WRITE(IFILE,*)' SKIPPING THE POSTBUCKLING ANALYSIS.'
           WRITE(IFILE,*)' WIDTH-WISE WIDE-COL. LOAD FACTOR, WIDLAM=',
     1                   WIDLAM
           EKOISV = EIGTRY
           PBEIGK = 0.
           PBEIGB = EIGTRY
         ENDIF
C        GO TO 8
      ENDIF
C BEG JAN 1995
C BEG APR 1995
      IF (IMOD.EQ.0.AND.EIGTRY.LT.0.1*FSLOC.AND.ITYPE.EQ.1) THEN
C END APR 1995
         WRITE(IFILE,*)' MODULE MODEL LOCAL BUCKLING IS CRITICAL'
         WRITE(IFILE,*)' SKIPPING THE POSTBUCKLING ANALYSIS.'
         WRITE(IFILE,*)' LOCAL BUCKLING LOAD FACTOR, EIGTRY=',
     1                 EIGTRY
         ISWLOC = 1
         EKOISV = EIGTRY
         PBEIGK = 0.
         PBEIGB = EIGTRY
      ENDIF
C END JAN 1995
C BEG MAR 1996
      IF (IMOD.EQ.0.AND.EIGTRY.GT.100.) THEN
         WRITE(IFILE,*)
     1    ' MODULE MODEL LOCAL BUCKLING IS FAR FROM CRITICAL'
         WRITE(IFILE,*)' SKIPPING THE POSTBUCKLING ANALYSIS.'
         WRITE(IFILE,*)' LOCAL BUCKLING LOAD FACTOR, EIGTRY=',
     1                 EIGTRY
         ISSKIP = 1
         EKOISV = EIGTRY
         PBEIGK = 0.
         PBEIGB = EIGTRY
      ENDIF
C END MAR 1996
C BEG DEC 2001
C23456789012345678901234567890123456789012345678901234567890123456789012
      IF (IMOD.EQ.0.AND.IICURV.EQ.1.AND.IIKOIT.EQ.0) THEN
C BEG DEC 2003
C BEG APR 2007
         IF (NPRT.GT.-1) WRITE(IFILE,'(/,A,/,A,/,A,/A)')
C END DEC 2003
     1 ' Skipping the NONLINEAR PART of the KOITER posbuckling',
     1 ' analysis because the user indicates in the *.OPT file that',
     1 ' he/she wants to skip it and because IICURV=1 (panel skin is',
     1 ' curved in the single discretized skin-stringer module model).'
C END APR 2007
         ISSKIP = 1
         EKOISV = EIGTRY
         PBEIGK = 0.
         PBEIGB = EIGTRY
      ENDIF
C
C *******************  KOITER = 1 BRANCH **************************
C
C
      IF (IQUICK.EQ.0) THEN
C        IF (ITUTOR.EQ.1)
C    1    CALL DATUM(IFILE4,90,0,0,INT,REALL,CHARAC,IOUT,0,IPROMP)
C
         IF (IMOD.EQ.0.AND.JJJ.EQ.0.AND.ILOADS.EQ.1) THEN
           IF (NPRT.GE.1.AND.IICHAN.EQ.0) WRITE(IFILE,50) ILOADS,N
         ENDIF
   50    FORMAT(/' EXPLANATION OF FOLLOWING CALCULATIONS (LOAD SET NO.',
     1 I2,'):'/
     1'  Corresponding to M=',I3,' waves from the local buckling'/
     1'  analysis above, the distributions of Nx, Ny, and Nxy'/
     1'  in the locally imperfect and additionally deformed panel are'/
     1'  next calculated.  The maximum stress components in the'/
     1'  deformed skin as well as in the stiffener segments are also'/
     1'  computed. In addition, the tangent membrane stiffness CTAN'/
     1'  in the locally deformed skin is calculated.  CTAN is needed'/
     1'  for subsequent calculation of the load factor corres-'/
     1'  ponding to wide column panel buckling (buckling between'/
     1'  rings) and general instability.'/)
C
C BEG MAY 1997
         IF (N.EQ.0.AND.IDISCR.EQ.1) THEN
C END MAY 1997
             WRITE(IFILE,502)
C BEG FEB 2010
  502        FORMAT(/' ******* BEGIN DIAGNOSTIC MESSAGE ********'/
     1            ' ILLEGAL NUMBER OF AXIAL HALFWAVES (M=0).'/
     1            ' CHECK SIGNS OF APPLIED LOADS TO MAKE SURE'/
     1            ' THAT YOU HAVE SOME DESTABILIZING LOADS.'/
     1            ' Try setting the applied axial resultant, Nx, for'/
     1            ' this load set equal to a small value compared to'/
     1            ' the Nx that causes general or local buckling, say'/
     1            ' Nx = 0.001*Nx(buckling load) or try setting Nx to'/
     1            ' a small value compared to the maximum compressive'/
     1            ' applied axial load in any of the other load sets:'/
     1            ' Nx = 0.001*Nx(applied load in another load set)'/
     1            ' ******** END DIAGNOSTIC MESSAGE ********')
C END FEB 2010
             CALL ERREX
         ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
         IF (IMOD.EQ.0) THEN
C BEG JUNE 1995
C BEG DEC 1995
C           WRITE(IFILE,*)
C BEG OCT 1996
            IF (NPRT.GE.0.AND.JJJ.EQ.0) WRITE(IFILE,*)
C END OCT 1996
C END DEC 1995
     1      ' BEFORE POSSIBLE CHANGE: INITIAL LOCAL IMPERFECTION W0=',W0
C END JUNE 1995
C BEG OCT 1996
            IF (EIGLCS(1)*FKNOCK(2).LT.0.9.AND.IXIMPF(ILOADS).EQ.1)
     1         W0 =MIN(ABS(W0),0.10*TX(1))
C END OCT 1996
C BEG NOV 1994
            IF (WIMPL0(ILOADS).LE.0.0) THEN
               XLOW = 1.0
               XHIGH = 2.0
C              TXF1 = WIMPL0(ILOADS)/TX(1)
               TXF1 = 0.00001
               TXF2 = 0.1
               ACOEF = (TXF1 - TXF2)/(XHIGH - XLOW)
               BCOEF = (TXF1 + TXF2 - ACOEF*(XHIGH + XLOW))/2.
               XCOORD = ABS(EIGLCS(1)*FKNOCK(2))
               IF (XCOORD.LE.XLOW) TXF = 0.1
               IF (XCOORD.GE.XHIGH) TXF = 0.00001
               IF (XCOORD.GT.XLOW.AND.XCOORD.LT.XHIGH)
     1            TXF = ABS(ACOEF*XCOORD + BCOEF)
               W0 = MIN(ABS(W0),TXF*TX(1))
C BEG MAR 1996
               IF (IBEAM.EQ.1.AND.FSBSTR.LT.1.0.AND.ICWEB.EQ.1)
     1            W0 = MIN(ABS(W0),0.1*TX(JWEB))
C END MAR 1996
            ENDIF
C    End of (WIMPL0(ILOADS).LE.0.0) condition.
C END NOV 1994
            W0SET = W0
            IW0SET = 1
            WIMPL = W0
            WRATIO = 1.0
            WIPROD = W0
C           WRITE(8,*)' WIMPL0(ILOADS),W0,WIPROD=',
C    1                  WIMPL0(ILOADS),W0,WIPROD
C BEG JUNE 1995
C BEG DEC 1995
C           WRITE(IFILE,*)
C BEG OCT 1996
            IF (NPRT.GE.0.AND.JJJ.EQ.0) WRITE(IFILE,*)
     1    ' AFTER POSSIBLE CHANGE: INITIAL LOCAL IMPERFECTION W0=',W0
C           WRITE(IFILE,*)
            IF (NPRT.GE.1.AND.JJJ.EQ.0) WRITE(IFILE,*)
C END OCT 1996
C END DEC 1995
     1    ' IF W0 WAS CHANGED, SEE PANDA2.NEWS ITEM 141 FOR WHY IT WAS'
C END JUNE 1995
         ENDIF
C End of (IMOD.EQ.0) condition.
C BEG JAN 1995
         IF (IABP.EQ.0) THEN
C PRESSURE IS IN LOAD SET B...
          FNXLDA = FNX
C BEG OCT 1998
          FNYLDA = FNY + DFNYPA
C END OCT 1998
          FNXYLA = FNXY
          FNXLDB = FNX0 + FNXP0 + FNXPL0
C BEG JAN 1995
C BEG OCT 1998
          FNYLDB = FNY0 + FNYP0 + FNYPL0 + DFNYPB
C END OCT 1998
C END JAN 1995
          FNXYLB = FNXY0+ FNXYP0+ FNXYPL
          DO 51 I = 1,3
          DO 51 J = 1,5
          DO 51 K = 1,2
C BEG OCT 1998
             EPSLDB(I,J,K) = EPSFXL(I,J,K) +EPSPGL(I,J,K) +EPSPRS(I,J,K)
     1                                     +EPSBGL(I,J,K)
             RESLDB(I,J,K) = RESFXL(I,J,K) +RESPGL(I,J,K) +RESPRS(I,J,K)
     1                                     +RESBGL(I,J,K)
C END OCT 1998
   51     CONTINUE
         ELSE
C End of (IABP.EQ.0) condition.
C PRESSURE IS IN LOAD SET A...
          FNXLDA = FNX + FNXP0 + FNXPL0
C BEG OCT 1998
          FNYLDA = FNY + FNYP0 + FNYPL0 + DFNYPA
C END OCT 1998
          FNXYLA = FNXY+ FNXYP0+ FNXYPL
          FNXLDB = FNX0
          FNYLDB = FNY0 + DFNYPB
          FNXYLB = FNXY0
          DO 52 I = 1,3
          DO 52 J = 1,5
          DO 52 K = 1,2
C BEG OCT 1998
             EPSLDB(I,J,K) = EPSFXL(I,J,K) + EPSBGL(I,J,K)
             RESLDB(I,J,K) = RESFXL(I,J,K) + RESBGL(I,J,K)
C END OCT 1998
   52     CONTINUE
         ENDIF
C End of "ELSE" (IABP.EQ.0) condition.
C
         FYARG = FNYLDA
         FY0ARG= FNYLDB
C BEG JAN 1995  COMMENT OUT THE NEXT 8 STATEMENTS...
C        IF (ISTFL2.EQ.0) THEN
C          FYARG  = RESEIG(2,1,1)
C          FY0ARG = RESLDB(2,1,1)
C          IF (ISTIF(1).EQ.5) THEN
C             FYARG = FYARG + RESEIG(2,3,1)
C            FY0ARG = FY0ARG+ RESLDB(2,3,1)
C          ENDIF
C        ENDIF
C END JAN 1995
         WIPROD = WIMPL
C        WRITE(8,*)' WIMPL0(ILOADS),WIMPL,WIPROD=',
C    1               WIMPL0(ILOADS),WIMPL,WIPROD
C   MODIFIY CONSTITUTIVE MATRIX IN CASE ANY LAMINATES ARE UNBALANCED.
         NSEG1 = NSEG(1)
         DO 522 I =1,NSEG1
            CALL CSHFT2(IFILE,NPRT,I,JJJ,IMOD,
     1                  CX(1,1,I),CXNEW(1,1,I))
  522    CONTINUE
C BEG JUN 1996
C        CALL MOVER(CS,1,CSNEW,1,36)
C        IF (ISTIF(1).EQ.0.AND.ISTIF(2).EQ.0)
C    1      CALL MOVER(CXNEW(1,1,1),1,CSNEW,1,36)
C END JUN 1996
C BEG JAN 1995
C BEG DEC 2003
         IF (NPRT.GT.-1.AND.IMOD.EQ.0.AND.EIGLCS(1).LT.0.05) THEN
C END DEC 2003
          WRITE(IFILE,1346) EIGLCS(1)
C23456789012345678901234567890123456789012345678901234567890123456789012
 1346     FORMAT(/' ********** WARNING *********** WARNING ***********'/
     1  ' Local buckling load factor from discretized panel module'/
     1  ' model is very small (EIGLCS(1)=',1PE12.4,'). This run may'/
     1  ' bomb. If it does, use "CHANGE" to strengthen the structure'/
     1  ' and try again. If the structure is a multi-stringer panel,'/
     1  ' try increasing thickness first. If the structure is a beam'/
     1  ' try increasing the flange width, web height, and thickness.'/
     1  ' If this message is generated during a SUPEROPT run, check'/
     1  ' the *.OPA file to see if AUTOCHANGE made any dimensions'/
     1  ' ridiculously small. If so, first use "CHANGE" to make them'/
     1  ' much bigger and then use "DECIDE" to raise the lower bound'/
     1  ' of any dimension made ridiculously small. Check loads.'/
     1  ' ************ END WARNING ********** END WARNING ***********'/)
         ENDIF
C END JAN 1995
         CALL MOVER(CX(1,1,5), 1,CXNEW(1,1,5),1,36)
         IF (NPRT.GE.0) WRITE(IFILE,'(/,A)')
     1'***** BEGIN SUBROUTINE KOIT2 (KOITER THEORY POSTBUCKLING) ****'
         CALL KOIT2(NPRT,CS,CXNEW,CY,FNXLDA,FYARG,FNXYLA,ISTIF,
     1              NSEG,B,B2,H,W,W2,
     1              EPSLDX,ICOCUR,RESFIX,EIGTRY,NPB,MPB,AL,FSQ,CTAN,
     1              N,IMOD,JJJ,IFILE,THERMX,EPSFIX,RESEIG,EPSEIG,ZPARTY,
     1              EXMID,EYMID,EXYMID,WPB1,AL0,M0,F0,IEND,MAXSEG,
     1              NXVAR,NYVAR,NXYVAR,RESULT,FNXLDB,FY0ARG,
     1              FNXYLB,EPSLDB,RESLDB,EPSTOT,THERMY,KOITER,EPSLDF,
     1              NXFIX,NYFIX,NXYFIX,FNYLDA,FNYLDB,IDISCR,WIPROD,
     1              C11TAN,C12TAN,C22TAN,C33TAN,CMIN,FKNOCK(2),NOCONV,
     1              ILOADS,P,ILONG,IWEBL1,KOUNTM,NSERCH,ETHERM,
     1              TEMP(1,1),IMTEMP,AMPLIT,IABT,ICASE,CSN,AMPLT2,
     1              INUMTT,CONMAX,CONSTR,IPOINC,ICONST,WORDB,FSLOCT,
     1              ITIPL1,WIMPL,WRATIO,FMULTB,WDELKP,RWBTOT,RWBEIG,
     1              IBACK,IBPRE,ITIPL1,ITYPE,IBACK2,KOUBCK,IESCAP,
C BEG NOV 2003
     1              IBEAM,DELCR2,IICURV,DELFCE(3,1),IIKOIT,
     1              FNYADJ,FNYAD0)
C END NOV 2003
C BEG FEB 1996
         IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
C
         IF (IBACK.EQ.1.OR.IBACK2.EQ.1) THEN
            IF (IBACK.EQ.1) WRITE(IFILE,1002) N,N,NLOC(1)
 1002       FORMAT(/
     1' REPEAT LOCAL BUCKLING WITH DISCRETIZED SINGLE MODULE MODEL'/
     1' FOR ',I3,' AXIAL HALFWAVES BECAUSE THE CRITICAL NUMBER OF'/
     1' AXIAL HALFWAVES FOR BIFURCATION BUCKLING AS PREDICTED WITH'/
     1' THE USE OF KOITER THEORY (M =',I3,' halfwaves) IS VERY'/
     1' DIFFERENT FROM THE CRITICAL NUMBER OF AXIAL HALFWAVES'/
     1' PREDICTED FROM BOSOR4-TYPE THEORY (M =',I3,' halfwaves).'/
     1' THE DIFFERENCE IS PROBABLY CAUSED BY THE PRESENCE OF IN-PLANE'/
     1' SHEAR LOADING AND STRINGER SIDESWAY OR WEB CRIPPLING MODES.'/)
C
            IF (IBACK2.EQ.1) WRITE(IFILE,1003) N,N,NLOC(1)
 1003       FORMAT(/
     1' REPEAT LOCAL BUCKLING WITH DISCRETIZED SINGLE MODULE MODEL'/
     1' FOR ',I3,' AXIAL HALFWAVES BECAUSE THE NUMBER OF AXIAL'/
     1' HALFWAVES FOR THE POSTBUCKLED STATE PREDICTED WITH THE USE'/
     1' OF KOITER THEORY (M =',I3,' halfwaves) IS VERY DIFFERENT'/
     1' FROM THE CRITICAL NUMBER OF AXIAL HALFWAVES PREDICTED FROM'/
     1' BOSOR4-TYPE THEORY (M =',I3,' halfwaves).'/)
C
            NSRCHS = NSERCH
            NSERCH = 0
            ICWEB = 0
            ITIPL = 0
C BEG OCT 2004
            IFLGL = 0
C END OCT 2004
            IYLOC = 0
            ICLOOP = 2
            ICAR = 0
            ICONST = 0
            INUMTT = 0
            IPOINC(1) = 0
            IPOINC(2) = 0
            IPOINC(3) = 0
            GO TO 43
         ENDIF
C   End of (IBACK.EQ.1.OR.IBACK2.EQ.1) condition.
         IF (ITYPE.EQ.1.AND.NPRT.GE.2)
     1      WRITE(IFILE,*)' AFTER KOIT2:  IMOD,INUMTT,ICONST=',
     1                                    IMOD,INUMTT,ICONST
         IF (NPRT.GE.0) WRITE(IFILE,*)
     1'***** END SUBROUTINE KOIT2 (KOITER THEORY POSTBUCKLING) ******'
C
C23456789012345678901234567890123456789012345678901234567890123456789012
         IF ((IMOD.EQ.0.AND.JJJ.EQ.0.AND.FSQ.NE.0.).OR.NPRT.GE.2) THEN
C BEG OCT 2006
            IF (NPRT.GE.0) WRITE(IFILE,'(A)')
     1    ' ********** END OF NONLINEAR EQUILIBRIUM CALCS.************'
C END OCT 2006
         ENDIF
C
C BEG OCT 2006
      IF (NPRT.GE.1) WRITE(IFILE,'(/,/,/,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************',
     1' ************          CHAPTER 17             *****************',
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************'
      IF (NPRT.GE.0) WRITE(IFILE,'(A,I3,A)')
     1' **** CHAPTER 17: DESIGN PERTURBATION INDEX, IMOD=',IMOD,' *****'
      IF (NPRT.GE.1) WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1 ' *************************************************************',
     1 ' CHAPTER 17 Compute stresses in layers and at various',
     1 '            locations in skin-stringer module model, including',
     1 '            local post-buckling, if any. Compute stringer',
     1 '            popoff constraints (Figs. 5 - 7 in [1A]). Local',
     1 '            post-buckling such as that shown in Figs. 48 & 49',
     1 '            of [1A] is included. Therefore, SUBROUTINE STRTHK',
     1 '            is used.'
C END OCT 2006
         IF (NPRT.GE.1) WRITE(IFILE,'(/,A)')
     1'***** BEGIN SUBROUTINE STRTHK (POSTBUCKLING STRESSES) ******'
         CALL STRTHK(IFILE,NPB,MPB,AL,FSQ,EXMID,EYMID,EXYMID,
     1              EMAX,EMARG,EALLOW,IEND,MAXSEG,CONMAX,ICONST,CONSTR,
     1              WORDB,IADDB,IMOD,IWHERE,JJJ,FSSTR,
     1              IPOINC,INUMTT,CRACK,ICHANG,EALLST,ITYPE,
     1              IICHAN,PWDD,ITUTOR,IFILE4,IPROMP,IOUT,
     1              WIPROD,ICASE,TEMP,FMULT,EPSLDX,ETHERM,IMTEMP,
     1              IPOPX,IABT,IHOOP)
         IF (NPRT.GE.1) WRITE(IFILE,*)
     1'***** END SUBROUTINE STRTHK (POSTBUCKLING STRESSES) ********'
         IF (ITYPE.EQ.1.AND.NPRT.GE.2)
     1    WRITE(IFILE,*)' AFTER STRTHK: IMOD,INUMTT,ICONST=',
     1                                  IMOD,INUMTT,ICONST
C BEG OCT 1996
C BEG NOV 1996
C23456789012345678901234567890123456789012345678901234567890123456789012
C        IF (.NOT.PEDG.AND.ISTIF(1).EQ.0.AND.PRESS(ILOADS).NE.0.) THEN
         IF (PRESS(ILOADS).NE.0.) THEN
            QXMAX(1,1)=QXMAX(1,1) +ABS(CX(4,4,1)*(WXXXGL+WXXXGT)/TX(1))
C END NOV 1996
            QYMAX(1,1) = QYMAX(1,1) + ABS(CX(5,5,1)*WYYYGL/TX(1))
         ENDIF
C END OCT 1996
C BEG JUN 1996
C BEG OCT 1996
         IF ((IMOD.EQ.0.AND.NPRT.GE.1).OR.NPRT.GE.2) THEN
            IF (IQUICK.EQ.0) THEN
             JUPPER = 1
             IF (ABS(FSQ).GT.0.001*TX(1)) JUPPER = 2
             DO 5530 JJ = 1,JUPPER
              ISANDP = 0
              DO 5520 ISEG = 1,NSEGB5
C BEG JUN 2004
                CALL IDSEG(ISTIF(1),ISEG,NSEGB5,B20(1),W20(1),J,IFAY)
C END JUN 2004
                IF (ISANDW(J,1).GT.1.AND.ISANDW(J,1).LT.NLAYER(J,1))
     1                                                            THEN
                  IF (ISANDP.EQ.0) THEN
                   IF (JJ.EQ.1) WRITE(IFILE,'(/,A)')
     1                         ' Positive Imperfection...'
                   IF (JJ.EQ.2) WRITE(IFILE,'(/,A)')
     1                         ' Negative Imperfection...'
                   WRITE(IFILE,5503)
                  ENDIF
                  IF (ISEG.GT.1) WRITE(IFILE,*)' '
C23456789012345678901234567890123456789012345678901234567890123456789012
 5503             FORMAT('   FORCE RESULTANTS IN SANDWICH FACESHEETS',
     1          ' FROM KOITER THEORY (SUB. STRTHK)'/
     1       ' Seg. Node Top (or leftmost) facesheet 1      Bottom (or '
     1           'rightmost) facesheet 2'/
     1          ' Dseg,i   Axial, Nx   Hoop, Ny   Shear, Nxy'
     1                 '   Axial, Nx   Hoop, Ny   Shear, Nxy')
                  ISANDP = 1
                  I5I = I5(ISEG)
                  IINCR = 5
                  IF (ISEG.EQ.1) IINCR = 2
                  DO 5510 I = 1,I5I,IINCR
                   WRITE(IFILE,5506) ISEG,I,
     1              PNXF1(I,ISEG,JJ),PNYF1(I,ISEG,JJ),PNXYF1(I,ISEG,JJ),
     1              PNXF2(I,ISEG,JJ),PNYF2(I,ISEG,JJ),PNXYF2(I,ISEG,JJ)
 5506              FORMAT(I4,',',I2,1P,6E12.4)
 5510             CONTINUE
                ENDIF
 5520         CONTINUE
 5530        CONTINUE
            ENDIF
C    End of (IQUICK.EQ.0) condition.
C END OCT 1996
            ISANDP = 0
            DO 398 ILOOP = 1,1
              ISTART = 1
              IENDS   = NSEG(ILOOP)
              IF (ILOOP.EQ.2) THEN
               ISTART = 2
               IF (B2(2).EQ.0.) ISTART = 3
              ENDIF
              IF (ISTART.GT.IENDS) GO TO 398
              DO 396 ISEG = ISTART,IENDS
               IF (ISANDW(ISEG,ILOOP).LE.1.OR.
     1             ISANDW(ISEG,ILOOP).EQ.NLAYER(ISEG,ILOOP)) GO TO 396
C  The segment is a sandwich wall. Write out the face sheet force
C  resultants, FNXF1(ISEG,ILOOP), etc in the various segments.
               IF (ILOOP.EQ.1) WRD3 = ' STR'
               IF (ILOOP.EQ.1.AND.ISEG.EQ.1) WRD3 = ' SKN'
               IF (ILOOP.EQ.2) WRD3 = ' RNG'
               IF (ISANDP.EQ.0) WRITE(IFILE,394)
C23456789012345678901234567890123456789012345678901234567890123456789012
  394          FORMAT(/'   FORCE RESULTANTS IN SANDWICH FACESHEETS',
     1       ' FROM KOITER THEORY (SUB. STRTHK)'/
     1       ' ASSUMED TO BE UNIFORM OVER SKIN-STRINGER MODULE',
     1       ' SEGMENTS; USED FOR CONSTRAINTS'/
     1       ' Segment   Top (or leftmost) facesheet 1      Bottom (or '
     1        'rightmost) facesheet 2'/
     1       '  Iseg    Axial, Nx   Hoop, Ny   Shear, Nxy'
     1              '   Axial, Nx   Hoop, Ny   Shear, Nxy')
               ISANDP = 1
               WRITE(IFILE,395) WRD3,ISEG,
     1         FNXF1(ISEG,ILOOP),FNYF1(ISEG,ILOOP),FNXYF1(ISEG,ILOOP),
     1         FNXF2(ISEG,ILOOP),FNYF2(ISEG,ILOOP),FNXYF2(ISEG,ILOOP)
  395          FORMAT(A,I3,1P,6E12.4)
  396         CONTINUE
  398       CONTINUE
C BEG OCT 1996
            IF (IQUICK.EQ.0) THEN
C23456789012345678901234567890123456789012345678901234567890123456789012
             ISANDP = 0
             DO 6620 ISEG = 1,NSEGB5
C BEG JUN 2004
               CALL IDSEG(ISTIF(1),ISEG,NSEGB5,B20(1),W20(1),J,IFAY)
C END JUN 2004
               IF (ISANDW(J,1).GT.1.AND.ISANDW(J,1).LT.NLAYER(J,1)) THEN
                IF (ISANDP.EQ.0) WRITE(IFILE,6603)
                IF (ISEG.GT.1) WRITE(IFILE,*)' '
C23456789012345678901234567890123456789012345678901234567890123456789012
 6603           FORMAT(/'  TRANSVERSE SHEAR STRESSES IN SANDWICH',
     1        ' CORE FROM KOITER THEORY (SUB.STRTHK)'/
C BEG MAR 1997
     1    ' (NOTE: The following values do NOT include the prebuckling'/
     1    '      transverse shear stress distributions generated from'/
     1    '      the overall response of the panel from pressure.)'/
C BEG MAR 1997
     1       ' Seg. Node   x-z transverse shear stress   y-z transverse'
     1        ' shear stress'/
     1       ' Dseg, i          Qx(i,Dseg)/Tx(j)              Qy(i,Dseg'
     1       ' )/Tx(j)')
                ISANDP = 1
                I5I = I5(ISEG)
                DO 6610 I = 1,I5I
                  WRITE(IFILE,6606)
     1              ISEG,I,QX(I,ISEG)/TX(J),QY(I,ISEG)/TX(J)
 6606             FORMAT(I4,',',I3,1P,E23.4,E30.4)
 6610           CONTINUE
               ENDIF
 6620        CONTINUE
            ENDIF
C     End of (IQUICK.EQ.0) condition.
C
            ISANDP = 0
            DO 598 ILOOP = 1,1
              ISTART = 1
              IENDS   = NSEG(ILOOP)
              IF (ILOOP.EQ.2) THEN
                 ISTART = 2
                 IF (B2(2).EQ.0.) ISTART = 3
              ENDIF
              IF (ISTART.GT.IENDS) GO TO 598
              DO 596 ISEG = ISTART,IENDS
               IF (ISANDW(ISEG,ILOOP).LE.1.OR.
     1             ISANDW(ISEG,ILOOP).EQ.NLAYER(ISEG,ILOOP)) GO TO 596
C  The segment is a sandwich wall. Write out the deformation-induced
C  pressure tending to crush the sandwich core in the various segments
C  and the maximum transverse shear stresses, QXMAX and QYMAX, on the
C  "x" and "y" planes of the sandwich core.
               IF (ILOOP.EQ.1) WRD3 = ' STR'
               IF (ILOOP.EQ.1.AND.ISEG.EQ.1) WRD3 = ' SKN'
               IF (ILOOP.EQ.2) WRD3 = ' RNG'
               IF (ISANDP.EQ.0) WRITE(IFILE,594)
C23456789012345678901234567890123456789012345678901234567890123456789012
  594          FORMAT(/' DEFORMATION-INDUCED PRESSURE TENDING TO'/
     1       ' CRUSH THE CORE (COMPUTED IN SUB. STRTHK) AND MAXIMUM'/
     1       ' TRANSVERSE SHEAR STRESSES (COMPUTED IN SUB. STRMID).'/
C BEG MAR 1997
     1       ' (NOTE: These transverse shear stresses DO include the'/
     1       '        components generated from the overall response'/
     1       '        of the panel to normal pressure.)'/
C END MAR 1997
     1       ' ON THE "X" AND "Y" SIDES OF THE SANDWICH CORE'/
     1       '  Segment     Crushing    X-transverse   Y-transverse'/
     1       '   Iseg       pressure    shear stress   shear stress')
               ISANDP = 1
               WRITE(IFILE,595) WRD3,ISEG,CRUSH(ISEG,ILOOP),
     1                          QXMAX(ISEG,ILOOP),QYMAX(ISEG,ILOOP)
  595          FORMAT(A,I3,1P,3E15.4)
  596         CONTINUE
  598       CONTINUE
C END OCT 1996
         ENDIF
C  End of ((IMOD.EQ.0.AND.NPRT.GE.1).OR.NPRT.GE.2) condiion.
C END JUN 1996
         IF (NPRT.GE.0) WRITE(IFILE,'(/,A)')
     1'***** BEGIN SUBROUTINE STRCON (STRESSES IN RINGS) ******'
         IF (ISTIF(2).NE.0.AND.IFLAT.EQ.1)
     1   CALL STRCON(CONMAX,ISTIF,NSEG,NLAYER,LTYPE,EALLOW,MATL,ANGLE,
     1               EPS1,EPS2,EPS12,EPS10,EPS20,EPS120,
     1               B2,W2,ICONST,CONSTR,WORDB,IADDB,T,TAPE,DEGRAD,
     1               FSSTR,ETHERM,THERMX,THERMY,IPOINC,INUMTT,IMOD,
     1               EPSLOD,ZPARTX,ZPARTY,ETHRMX,ETHRMY,CRACK,ICHANG,
     1               EALLST,NPRT,NAPPL,IFILE,ITYPE,0,
     1               EPSTOT,EPSFIX,EPSEIG,IQUICK,INTEXT,ICASE,
     1               TEMP,FMULT,NNODES,IMTEMP,P,PWDD,IABT,0,1,0,3)
         IF (NPRT.GE.0) WRITE(IFILE,*)
     1'***** END   SUBROUTINE STRCON (STRESSES IN RINGS) ******'
         IF (ITYPE.EQ.1.AND.NPRT.GE.2)
     1    WRITE(IFILE,*)' AFTER STRCON: IMOD,INUMTT,ICONST=',
     1                                  IMOD,INUMTT,ICONST
         IF ((IMOD.EQ.0.AND.JJJ.EQ.0.AND.NPRT.GE.1).OR.NPRT.GE.2)
     1   WRITE(IFILE,*)' **** END OF STRESS CALCULATIONS ***'
C
C BEG DEC 1993  (LOOPING REMOVED BECAUSE IT LEADS TO ERRORS)
         IF (IMOD.EQ.0.AND.ICHANG.EQ.1.AND.IICHAN.LT.1) THEN
C        IF (IMOD.EQ.0.AND.ICHANG.EQ.1.AND.IICHAN.LT.0) THEN
C END DEC 1993
            ICHANG = 0
            IICHAN = IICHAN + 1
            IYLOC = 0
            GO TO 2
         ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG SEP 2006
C        IF ((IMOD.EQ.0.AND.JJJ.EQ.0.AND.NPRT.GE.1).OR.NPRT.GE.2) THEN
         IF ((IMOD.EQ.0.AND.JJJ.EQ.0.AND.NPRT.GE.0).OR.NPRT.GE.2) THEN
C END SEP 2006
C BEG OCT 2006
      IF (NPRT.GE.1) WRITE(IFILE,'(/,/,/,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************',
     1' ************          CHAPTER 18             *****************',
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************'
      IF (NPRT.GE.0) WRITE(IFILE,'(A,I3,A)')
     1' **** CHAPTER 18: DESIGN PERTURBATION INDEX, IMOD=',IMOD,' *****'
C BEG MAR 2011
      IF (NPRT.GE.1)
     1 WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1 ' *************************************************************',
     1 ' CHAPTER 18 Calculate the "mode jumping" margin. which is',
     1 '            identified by the following string:',
     1 '            "Hi-axial-wave post-post-buckling of module - 1".',
     1 '            Present summary of state of loaded imperfect panel',
     1 '            and give effective stiffnesses of possibly locally',
     1 '            postbuckled skin-stringer module. These effective',
     1 '            stiffnesses are used later for overall buckling',
     1 '            and inter-ring buckling. See Table 12 in the paper:'
      IF (NPRT.GE.1)
     1 WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A)')
     1' Bushnell, D.',
     1' "Optimization of an axially compressed ring and stringer',
     1' stiffened cylindrical shell with a general buckling modal',
     1' imperfection", AIAA Paper 2007-2216, 48th AIAA SDM Meeting,',
     1' Honolulu, Hawaii, April 2007'
C END MAR 2011
C END OCT 2006
          WPPMAX = WPRESG
          IF (WPPMAX.EQ.0.) WPPMAX = WPMAX
C BEG JAN 2007
          IF (NPRT.GE.1)
     1     WRITE(IFILE,53) WIMPG1,WIMPG2,WIMPG*AMPMD9,WIMPL,W0PAN,
     1    WRESID(1),WPPMAX+DELWSH,WPRESR,WLPRES,WDELKP,AMPLIT,AMPLT2,
     1    AMPLT3,ECC
   53 FORMAT(/' PANEL OVERALL & LOCAL IMPERFECTIONS AND DEFORMATION'/
     1' General out-of-roundness of cylindrical panel,WIMPG1 =',1PE12.4/
     1' General initial buckling modal imperfection amplitude=',1PE12.4/
     1' General modified imperfection amplitude, Wimp(global)=',1PE12.4/
     1' Local   initial imperfection amplitude, Wimp(local)  =',1PE12.4/
     1' Panel (inter-ring) initial imp. amplt., Wimp(panel)  =',1PE12.4/
     1' Bowing due to temperature effects,     W(residual)   =',1PE12.4/
     1' Overall (inter-ring in cyl) bowing from pressure ,Wp =',1PE12.4/
     1' Inter-ring bowing (flat panel) from pressure, WPRESR =',1PE12.4/
     1' Maximum local "pillowing" between stringers,  WLPRES =',1PE12.4/
     1' Inter-ring bowing due to postbucking effects, WDELKP =',1PE12.4/
     1' Amplitude factor for bowing except from press,AMPLIT =',1PE12.4/
     1' Amplitude factor for bowing due to pressure,  AMPLT2 =',1PE12.4/
     1' Amplitude factor for inter-ring bowing,       AMPLT3 =',1PE12.4/
     1' Eccentricity of application of axial loads,     ECC  =',1PE12.4)
C23456789012345678901234567890123456789012345678901234567890123456789012
C END JAN 2007
C BEG NOV 2009
         IF (IFLAT.EQ.0.AND.IMOD.EQ.0.AND.NPRT.GE.1) WRITE(IFILE,
     1 '(A,/,A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4)')
     1 ' Midbay normal displacements for a CURVED panel from SUB.SKIN:',
     1 ' Midbay normal displacement from Load Set A,   WMIDA =',WMIDA,
     1 ' Midbay normal displacement from Load Set B,   WMIDB =',WMIDB,
     1 ' Midbay normal displacement from temperature,  WMIDT =',WMIDT,
     1 ' Total Midbay normal displacement,            WMDTOT =',WMDTOT
C END NOV 2009
         ENDIF
C   End of ((IMOD.EQ.0.AND.JJJ.EQ.0.AND.NPRT.GE.0).OR.NPRT.GE.2) condition.
      ENDIF
C End of (IQUICK.EQ.0) condition.
C
      IF (ITYPE.EQ.3) THEN
         PBBOW(1) = WIMPG
         PBBOW(2) = WIPROD
         PBBOW(3) = WRESID(1)
C BEG NOV 1996
         PBBOW(4) = WPRESG+DELWSH
C END NOV 1996
C BEG MAR 1998
         IF (ABS(WPMAX).GT.ABS(WPRESG)) PBBOW(4) = WPMAX+DELWSH
C END MAR 1998
         PBBOW(5) = AMPLIT
         PBBOW(6) = ECC
         PBBOW(7) = LENMOD
         PBBOW(8) = AXIAL
         PBBOW(11)= WDELKP
C
         DO 54 K = 1,2
         DO 54 J = 1,5
         DO 54 I = 1,3
   54    RESULK(I,J,K) = RESULT(I,J,K)
      ENDIF
C
C
C***********************************************************************
C END "KOITER" THEORY FOR LOCAL POSTBUCKLING OF SKIN-STRINGER MODULE.
C***********************************************************************
C
C  ************************* END OF KOITER = 1 BRANCH *****************
C
      IF (NPRT.GE.3) THEN
         WRITE(IFILE,*)' ------------------------------------------' 
         WRITE(IFILE,*)' QUANTITIES THAT DETERMINE WHETHER TO DO'
         WRITE(IFILE,*)' THE POST-POST-LOCAL BUCKLING ANALYSIS:'
         WRITE(IFILE,*)' ITYPE,IBUCPP,ISTIF(1)=',ITYPE,IBUCPP,ISTIF(1)
C BEG OCT 2004
         WRITE(IFILE,*)' ITIPL1,IWEBL1,IFLGL1,ICRIP1,ICRWN1=',
     1                   ITIPL1,IWEBL1,IFLGL1,ICRIP1,ICRWN1
C END OCT 2004
         WRITE(IFILE,*)' EKOISV,FKNOCK(2)=',EKOISV,FKNOCK(2)
         WRITE(IFILE,*)' FNX,FNY=',FNX,FNY
         WRITE(IFILE,*)' JJJ,ILOADS,ICASE,IPOST(ILOADS,ICASE)=',
     1                   JJJ,ILOADS,ICASE,IPOST(ILOADS,ICASE)
         WRITE(IFILE,*)' ------------------------------------------' 
      ENDIF
C
C BEG APR 1997
C23456789012345678901234567890123456789012345678901234567890123456789012
      PBMIN = MIN(PBEIGB,PBEIGK)
C BEG DEC 2003
      IF (NPRT.GT.-1.AND.ISANDX.AND.FSLOC.LT.0.95.AND.PBMIN.GT.1.1) 
C END DEC 2003
     1 WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/)')
     1' ******* WARNING ******** WARNING ******** WARNING ********',
     1' ******* WARNING ******** WARNING ******** WARNING ********',
     1' PANEL SKIN IS SANDWICH CONSTRUCTION AND FACTOR OF SAFETY FOR',
     1' LOCAL BUCKLING IS LESS THAN UNITY. PRELIMINARY COMPUTATIONS',
     1' USE REDUCED SKIN STIFFNESS. THIS MAY LEAD TO DESIGNS THAT ARE',
     1' TOO CONSERVATIVE. YOU ARE ADVISED TO SET THE FACTOR OF SAFETY',
     1' FOR LOCAL BUCKLING TO 1.0. IN OTHER WORDS, DO NOT ALLOW',
     1' SANDWICH WALLS TO BUCKLE. IT CAN LEAD TO DIFFICULTIES!',
     1' ******* END WARNING ***** END WARNING ***** END WARNING *****',
     1' ******* END WARNING ***** END WARNING ***** END WARNING *****'
C END APR 1997
C BEG MAR 1996
      IF (IBEAM.EQ.1) GO TO 8
      IF (ISSKIP.EQ.1) GO TO 8
C END MAR 1996
C BEG JAN 1995
      IF (ISWLOC.EQ.1) GO TO 8
C END JAN 1995
      IF (ISWWID.EQ.1) GO TO 8
C BEG JUL 1999
      IF (FSLOC.GT.0.7) GO TO 8
C END JUL 1999
C
C BEG JULY 1997
C     IF (IBUCPP.EQ.1.AND.ISTIF(1).NE.5.AND.ITIPL1.EQ.0
C    1  .AND.IWEBL1.EQ.0.AND.ICRIP1.EQ.0.AND.ICRWN1.EQ.0
C    1  .AND.EKOISV.LT.0.5.AND.FKNOCK(2).GT.0.2.AND.ITYPE.LT.3
C    1  .AND.(-FNX).GT.(-FNY).AND.IPOST(ILOADS,ICASE).EQ.1) THEN
C
      IF (IBUCPP.EQ.1.AND.ISTIF(1).NE.5
C BEG AUG 1997
C    1  .AND.FKNOCK(2).GT.0.2.AND.ITYPE.LT.3
     1  .AND.FKNOCK(2).GT.0.2
     1  .AND.(-FNX).GT.(-FNY).AND.IPOST(ILOADS,ICASE).EQ.1) THEN
C
C  CHECK FOR POST-POST-LOCAL BUCKLING AT HIGH AXIAL WAVENUMBERS FOR
C  AXIAL COMPRESSION DOMINATES. THIS SECTION OF CODING IS ENTERED ONLY
C  IF THE PANEL IS OTHER THAN TRUSS-CORE SANDWICH WALL CONSTRUCTION.
C
C END AUG 1997
C
         IF (IYLOC2.EQ.1) CALL TRANS2(M3,YLOC2,Y)
         IF (IMOD.EQ.0) THEN
            NSERPP = 1
            IF (NPP(ILOADS,ICASE).EQ.0) NPP(ILOADS,ICASE) = NLOC(1)*2
            INCRPP = 0.07*FLOAT(NPP(ILOADS,ICASE)) + 1.
            NLOC(3) = 0
            ICWEBP  = 0
            ITIPP  = 0
C BEG OCT 2004
            IFLGLP  = 0
C END OCT 2004
            ILOW3 = 0
         ELSE
            NSERPP = 0
            NPP(ILOADS,ICASE) = NLOC(3)
         ENDIF
         IF (NPRT.GE.0) WRITE(IFILE,'(/,A)')
     1' *** BEGIN SUBROUTINE LOCAL (HI-M POST-POSTBUCKLING SEARCH) ***'
C BEG NOV 1997
         CALL MOVER(0.,0,RESDUM,1,30)
C END NOV 1997
C BEG AUG 2001
 9360    CONTINUE
         ILABEL=9360
         IF (NPRT.GE.1) WRITE(IFILE,*) 
     1               ' LABEL NO. IN STRUCT=',ILABEL
C END AUG 2001
         CALL LOCAL(1,NPRT,NPP(ILOADS,ICASE),FMULTB*B(2),B(1),
     1              IMOD,M3,INCRPP,YLOC2,IFILE,
     1              IW,ILOC,DS,AS,BS,DIAG,C,D,DI,X,Y,Z,NSERPP,PHIMIN,
     1              KOITER,EIG,IYLOC2,INEG,IREDUC,FKNOCK(2),
     1              IDRW,NBLK,NGBK,NKF,
     1             -2,IMAXB,KMAXB,IPV2,IBVC,1000,IGENRL,JJJ,
     1              MLOCAL,B2(1),EIGLCS(3),NLOC(3),EIGLCS(1),NLOC(1),
     1              ITYPE,ILOW3,1,THERMX,THERMS,P,KAPPA1,KAPPA2,0,CS,
     1              FNX,FNY,FNXY,RESULT,
     1              FXBEG,FXEND,FYBEG,FYEND,FXYBEG,FXYEND,FNX0,FNY0,
     1              FNXY0,RMAX,CX,RESEIG,NMAX,IABP,LENMOD,0,
     1              TEMP(1,1),IMTEMP,WPB1,1,
     1              FSLOC,FSGEN,I5,ITIPLX,WRATPX,EIGSVX,NSAVEX,YSAVE4,
     1              JJJTOR,W2(1),EIGITR(6),IBEAM,DELDUM,RESDUM,
     1              ISTIF(1),TX,1,NGLOB2,0,ILABEL,KLAYER(1,1))
C BEG APR 2007
         IF (IMOD.EQ.0.AND.NPRT.GE.0)
     1    WRITE(IFILE,'(A,1P,E12.4,/,A,I5)')
     1 ' Buckling load factor from SUB. LOCAL, EIGITR(6)=',EIGITR(6),
     1 ' Number of axial halfwaves between rings,NPP=',NPP(ILOADS,ICASE)
C23456789012345678901234567890123456789012345678901234567890123456789012
C END APR 2007
                    DELDUM = 0.
C BEG FEB 1996
         IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
         IF (NPRT.GE.0) WRITE(IFILE,*)
     1' **** END SUBROUTINE LOCAL (HI-M POST-POSTBUCKLING SEARCH) ****'
C
         IF (IMOD.EQ.0) THEN
            ICWEBP = 0
            ITIPP = 0
C BEG OCT 2004
            IFLGLP = 0
C END OCT 2004
C           IF (NLOC(3).LE.NLOC(1).OR.EIGLCS(3).LT.0.0
C    1                          .OR.(EIGLCS(3)*FKNOCK(2)).GT.2.0) THEN
C BEG AUG 1997
C           IF (EIGLCS(3).LT.0.0.OR.(EIGLCS(3)*FKNOCK(2)).GT.2.0) THEN
            IF (EIGLCS(3).LT.0.0.OR.(EIGLCS(3)*FKNOCK(2)).GT.4.0) THEN
C END AUG 1997
               IPOST(ILOADS,ICASE) = 0
               GO TO 4502
            ENDIF
            FKNDUM = 1.0
            CALL TRANS2(M3,YLOC2,Y)
            IF (NPRT.GE.0) WRITE(IFILE,'(/,A)')
     1' **** BEGIN SUBROUTINE  MODE (HI-M POST-POSTBUCKLING MODE) ****'
            CALL MODE(IFILE,NPRT,NSEGB5,I5,IW,DS,M3,Y,ISKINP,1,
     1            -2, ZPARTX,0.,CX,1,WPRES,EIGLCS(3),
     1             RMAX,ITIPP,ICWEBP,IMOD,
     1             WW3,WD3,WDD3,UU3,VV3,VP3,ZREF,NLOC(3),FKNDUM,
C BEG OCT 1998
C BEG JUN 2004
     1             FKNDUM,ICRWN3,P,IFICT4,WDDD3,5,0,TX,1,0,
     1    INTSNG,RAD2,TY,IZSTIF,B,B2,H,W,W2,
     1    B0,B20,H0,WW0,W20,ISTIF,INTEXT,IFAY,IBEAM,IONEST,
     1    AXIAL,CIRC,ICRIP,ISEGC,WRATIO,WTIPWS,WRATTP,
     1    WRATWB,WRATCN,WRWIDE,WIDLMM,PEDG,ISOGRD,RESULT,IFLGLP)
C END JUN 2004
C END OCT 1998
C
            ITIPL3 = ITIPP
            ICWEB3 = ICWEBP
            ICRIP3 = ICRIP
C BEG OCT 2004
            IFLGL3 = IFLGLP
C END OCT 2004
            IF (NPRT.GE.0) WRITE(IFILE,*)
     1' **** END SUBROUTINE  MODE (HI-M POST-POSTBUCKLING MODE) ****'
         ENDIF
C BEG JULY 1997 (COMMENT THE FOLLOWING "IF" STATEMENT OUT)
C        IF (ICWEB3.EQ.0.AND.ITIPL3.EQ.0.AND.ICRIP3.EQ.0
C    1                      .AND.ICRWN3.EQ.0) THEN
C END JULY 1997
C
C  GENERATE CONSTRAINT CORRESPONDING TO HI-AXIAL-WAVENUMBER POST-POST
C  BUCKLING OF THE PANEL SKIN BETWEEN STRINGERS:
C
            INUMTT = INUMTT + 1
            FSAFTY = 1.0
            CALL CONVRF(FSAFTY,CN2)
            CALL CONVRT(NLOC(3),CN)
            IF (IMOD.EQ.0
     1             .AND.(EIGLCS(3)*FKNOCK(2)/FSAFTY).LT.MAXCON) THEN
               ICAR = ICAR + 1
               PCWORD(ICAR) =
C BEG JULY 1997
C    1        'Hi-axial-wave post-post-buckling of skin'
     1        'Hi-axial-wave post-post-buckling of module'
C END JULY 1997
               CPLOT(ICAR) = EIGLCS(3)*FKNOCK(2)/FSAFTY - 1.
               IADDCC(ICAR) = 0
               FSAFEP(ICAR) = FSAFTY
            ENDIF
            IF (IMOD.EQ.0.AND.(EIGLCS(3)*FKNOCK(2)/FSAFTY).GT.CONMAX)
     1         GO TO 4401
            IF (IMOD.EQ.1.AND.IPOINC(INUMTT).EQ.0) GO TO 4401
            ICONST = ICONST + 1
            IF (IMOD.EQ.0) IPOINC(INUMTT) = 1
            CONSTR(ICONST) = EIGLCS(3)*FKNOCK(2)/FSAFTY
            WORDB(ICONST)=
C BEG JULY 1997
C    1'Hi-axial-wave post-post-buckling of panel skin -1;M='
     1'Hi-axial-wave post-post-buckling of module - 1;   M='
C END JULY 1997
     1//CN//';FS='//CN2
C BEG APR 2007
            IF (NPRT.GE.0) WRITE(IFILE,'(A,1P,E12.4,2X,A)')
     1    ' Margin=',CONSTR(ICONST)-1.,WORDB(ICONST)
C END APR 2007
C BEG AUG 1995
C23456789012345678901234567890123456789012345678901234567890123456789012
            IF (NPRT.GE.2) WRITE(IFILE,'(A,/,A,/,A,I3,A,I2,A,I2)')
     1  ' ******** THE HI-AXIAL-WAVE POST-POST BUCKL. MARGIN COMPUTED:',
     1      WORDB(ICONST),
     1    ' ******** CONSTRAINT NO.',ICONST,'; LOAD SET NO.',ILOADS,
     1    '; SUBCASE NO.',ICASE
C END AUG 1995
 4401       CONTINUE
C BEG JULY 1997  (COMMENT OUT THE FOLLOWING THREE LINES
C        ELSE
C           IPOST(ILOADS,ICASE) = 0
C        ENDIF
C END JULY 1997
 4502    CONTINUE
         IF (ITYPE.EQ.1.AND.NPRT.GE.2)
     1    WRITE(IFILE,*)' AFTER 4502 C: IMOD,INUMTT,ICONST=',
     1                                  IMOD,INUMTT,ICONST
      ENDIF
      IF (NPRT.GE.3) THEN
         WRITE(IFILE,*)' ------------------------------------------' 
         WRITE(IFILE,*)' QUANTITIES THAT DETERMINE WHETHER TO DO'
         WRITE(IFILE,*)' THE POST-POST-LOCAL BUCKLING ANALYSIS'
         WRITE(IFILE,*)' FOR LOW NUMBER OF AXIAL HALFWAVES(BEND-TOR):'
         WRITE(IFILE,*)' ITYPE,ISTIF(1),FSBSTR=',ITYPE,ISTIF(1),FSBSTR
         WRITE(IFILE,*)' MLOCAL,ITIPL1,ITIPL2=',MLOCAL,ITIPL1,ITIPL2
         WRITE(IFILE,*)' EKOISV,FKNOCK(2)=',EKOISV,FKNOCK(2)
         WRITE(IFILE,*)' FNX,FNY=',FNX,FNY
         WRITE(IFILE,*)' JJJ,ILOADS,ICASE,IPOSTL(ILOADS,ICASE)=',
     1                   JJJ,ILOADS,ICASE,IPOSTL(ILOADS,ICASE)
         WRITE(IFILE,*)' ------------------------------------------' 
      ENDIF
C
      IF (FSBSTR.LT.0.6666.AND.ISTIF(1).EQ.3.AND.ITIPL1.EQ.0
     1  .AND.ITIPL2.EQ.0.AND.MLOCAL.GT.0.AND.MLOCAL.LT.NLOC(1)
     1  .AND.EKOISV.LT.0.8.AND.FKNOCK(2).GT.0.4.AND.ITYPE.LT.5
     1  .AND.(-FNX).GT.(-FNY).AND.IPOSTL(ILOADS,ICASE).EQ.1) THEN
C
C  CHECK FOR POST-POST-LOCAL BUCKLING AT AXIAL WAVENUMBER MLOCAL
C  WITH REASONABLY STRONG ELEMENT OF BENDING-TORSION BEHAVIOR.
C  THIS SECTION OF CODE IS ENTERED ONLY IF:
C  1. the factor of safety FSBSTR for buckling of the stringer parts is
C     less than 0.6666,
C  2. there are stringers and the stringers are blades (ISTIF(1)=3),
C  3. the local buckling analysis for high waves does not have very
C     strong blade tip deflection,
C  4. the local buckling analysis for low waves does not have very
C     strong blade tip deflection,
C  5. the number of axial halfwaves MLOCAL of the local buckling pattern
C     as predicted by PANDA-type (closed form) theory is between zero and
C     the critical number of axial halfwaves NLOC(1) predicted from the
C     discretized single panel module model,
C  6. the local buckling load factor from Koiter theory is less than 0.8,
C  7. the analysis type is 1 or 2 or 3 or 4.
C  8. in-plane shear loading is not of overwhelming significance
C     (FKNOCK(2).gt.0.4),
C  9. the loading is dominated by axial compression, and
C 10. the switch IPOSTL(ILOADS,ICASE) for doing this has not been turned
C     off.
C
         IF (IYLOC3.EQ.1) CALL TRANS2(M3,YLOC3,Y)
         IF (IMOD.EQ.0) THEN
            NSERLL = 0
            IF (NPPL(ILOADS,ICASE).EQ.0) NPPL(ILOADS,ICASE) = MLOCAL
            INCRLL = 0.07*FLOAT(NPPL(ILOADS,ICASE)) + 1.
            NLOC(4) = 0
            ITIPPL  = 0
            ILOW4 = 0
         ELSE
            NSERLL = 0
            NPPL(ILOADS,ICASE) = NLOC(4)
         ENDIF
         IF (NPRT.GE.0) WRITE(IFILE,'(/,A)')
     1' *** BEGIN SUBROUTINE LOCAL (LO-M POST-POSTBUCKLING SEARCH) ***'
C BEG AUG 2001
 9370    CONTINUE
         ILABEL=9370
         IF (NPRT.GE.1) WRITE(IFILE,*) 
     1               ' LABEL NO. IN STRUCT=',ILABEL
C END AUG 2001
         CALL LOCAL(1,NPRT,NPPL(ILOADS,ICASE),FMULTB*B(2),B(1),
     1              IMOD,M3,INCRLL,YLOC3,IFILE,
     1              IW,ILOC,DS,AS,BS,DIAG,C,D,DI,X,Y,Z,NSERLL,PHIMIN,
     1              KOITER,EIG,IYLOC3,INEG,IREDUC,FKNOCK(2),
     1              IDRW,NBLK,NGBK,NKF,
     1             -3,IMAXB,KMAXB,IPV2,IBVC,1000,IGENRL,JJJ,
     1              MLOCAL,B2(1),EIGLCS(4),NLOC(4),EIGLCS(1),NLOC(1),
     1              ITYPE,ILOW4,1,THERMX,THERMS,P,KAPPA1,KAPPA2,0,CS,
     1              FNX,FNY,FNXY,RESULT,
     1              FXBEG,FXEND,FYBEG,FYEND,FXYBEG,FXYEND,FNX0,FNY0,
     1              FNXY0,RMAX,CX,RESEIG,NMAX,IABP,LENMOD,0,
     1              TEMP(1,1),IMTEMP,WPB1,1,
     1              FSLOC,FSGEN,I5,ITIPLX,WRATPX,EIGSVX,NSAVEX,YSAVE4,
     1              JJJTOR,W2(1),EIGITR(7),IBEAM,DELDUM,RESTOT,
     1              ISTIF(1),TX,1,NGLOB2,0,ILABEL,KLAYER(1,1))
C BEG APR 2007
         IF (IMOD.EQ.0.AND.NPRT.GE.0)
     1    WRITE(IFILE,'(A,1P,E12.4,/,A,I5)')
     1 ' Buckling load factor from SUB. LOCAL, EIGITR(7)=',EIGITR(7),
     1 ' Number of axial halfwaves between rings,NPPL(ILOADS,ICASE)=',
     1   NPPL(ILOADS,ICASE)
C23456789012345678901234567890123456789012345678901234567890123456789012
C END APR 2007
                    DELDUM = 0.
C BEG FEB 1996
         IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
         IF (NPRT.GE.0) WRITE(IFILE,*)
     1' **** END SUBROUTINE LOCAL (LO-M POST-POSTBUCKLING SEARCH) ****'
C
         IF (IMOD.EQ.0) THEN
            ITIPPL = 0
            IF (EIGLCS(4).LT.0.0.OR.(EIGLCS(4)*FKNOCK(2)).GT.2.0) THEN
               IPOSTL(ILOADS,ICASE) = 0
               GO TO 4602
            ENDIF
            FKNDUM = 1.0
            CALL TRANS2(M3,YLOC3,Y)
            IF (NPRT.GE.0) WRITE(IFILE,'(/,A)')
     1' **** BEGIN SUBROUTINE  MODE (LO-M POST-POSTBUCKLING MODE) ****'
            CALL MODE(IFILE,NPRT,NSEGB5,I5,IW,DS,M3,Y,ISKINP,1,
     1            -3, ZPARTX,0.,CX,1,WPRES,EIGLCS(4),
     1             RMAX,ITIPPL,IDUMM1,IMOD,
     1             WW4,WD4,WDD4,UU4,VV4,VP4,ZREF,NLOC(4),FKNDUM,
C BEG OCT 1998
C BEG JUN 2004
     1             FKNDUM,IDUMM2,P,IFICT5,WDDD4,6,0,TX,1,0,
     1    INTSNG,RAD2,TY,IZSTIF,B,B2,H,W,W2,
     1    B0,B20,H0,WW0,W20,ISTIF,INTEXT,IFAY,IBEAM,IONEST,
     1    AXIAL,CIRC,ICRIP,ISEGC,WRATIO,WTIPWS,WRATTP,
     1    WRATWB,WRATCN,WRWIDE,WIDLMM,PEDG,ISOGRD,RESULT,IFLGPP)
C END JUN 2004
C END OCT 1998
C
            ITIPL4 = ITIPPL
C BEG OCT 2004
            IFLGL4 = IFLGPP
C END OCT 2004
            IF (NPRT.GE.0) WRITE(IFILE,*)
     1' **** END SUBROUTINE  MODE (LO-M POST-POSTBUCKLING MODE) ****'
         ENDIF
         IF (ITIPL4.EQ.1) THEN
C
C  GENERATE CONSTRAINT CORRESPONDING TO LO-AXIAL-WAVENUMBER POST-POST
C  BUCKLING OF THE PANEL SKIN AND STRINGER TIPS:
C
C BEG MAR 2005
            EIGMLT = 1.0
C BEG FEB 2009
            IF (ICONSV.EQ.1) THEN
               IF (KLAYER(1,1).NE.0) EIGMLT = 0.70
            ELSE
               IF (KLAYER(1,1).NE.0) EIGMLT = 0.95
            ENDIF
C END FEB 2009
            IF (NPRT.GE.0.AND.EIGMLT.LT.1.0)
     1      WRITE(IFILE,'(/,A,1P,E12.4,/,A,/)')
     1' *** NOTE: Bending-torsion buckling eigvalue reduced by EIGMLT=',
     1         EIGMLT,
     1'        because there are smeared substiffeners.*******'
            EIGLCS(4) = EIGLCS(4)*EIGMLT
C23456789012345678901234567890123456789012345678901234567890123456789012
C END MAR 2005
            INUMTT = INUMTT + 1
            FSAFTY = 1.0
            IF (ICASE.EQ.2.AND.IFLAT.EQ.0) FSAFTY = FSBSTR
            CALL CONVRF(FSAFTY,CN2)
            CALL CONVRT(NLOC(4),CN)
            IF (IMOD.EQ.0
     1             .AND.(EIGLCS(4)*FKNOCK(2)/FSAFTY).LT.MAXCON) THEN
               ICAR = ICAR + 1
               PCWORD(ICAR) = 'Bending-torsion buckling'
               CPLOT(ICAR) = EIGLCS(4)*FKNOCK(2)/FSAFTY - 1.
               IADDCC(ICAR) = 0
               FSAFEP(ICAR) = FSAFTY
            ENDIF
            IF (IMOD.EQ.0.AND.(EIGLCS(4)*FKNOCK(2)/FSAFTY).GT.CONMAX)
     1         GO TO 4601
            IF (IMOD.EQ.1.AND.IPOINC(INUMTT).EQ.0) GO TO 4601
            ICONST = ICONST + 1
            IF (IMOD.EQ.0) IPOINC(INUMTT) = 1
            CONSTR(ICONST) = EIGLCS(4)*FKNOCK(2)/FSAFTY
            WORDB(ICONST)='Bending-torsion buckling; M='
     1      //CN//';FS='//CN2
C BEG APR 2007
            IF (NPRT.GE.0) WRITE(IFILE,'(A,1P,E12.4,2X,A)')
     1    ' Margin=',CONSTR(ICONST)-1.,WORDB(ICONST)
C END APR 2007
C BEG JULY 1997
            IF (IMOD.EQ.0) THEN
               MTORS(6) = NLOC(4)
               ETORS(6) = EIGLCS(4)
               WTORS(6) = WORDB(ICONST)(1:60)
            ENDIF
C END JULY 1997
C BEG AUG 1995
C23456789012345678901234567890123456789012345678901234567890123456789012
            IF (NPRT.GE.2) WRITE(IFILE,'(A,/,A,/,A,I3,A,I2,A,I2)')
     1  ' ******** THE LO-AXIAL-WAVE POST-POST BUCKL. MARGIN COMPUTED:',
     1      WORDB(ICONST),
     1    ' ******** CONSTRAINT NO.',ICONST,'; LOAD SET NO.',ILOADS,
     1    '; SUBCASE NO.',ICASE
C END AUG 1995
 4601       CONTINUE
         ELSE
            IPOSTL(ILOADS,ICASE) = 0
         ENDIF
 4602    CONTINUE
         IF (ITYPE.EQ.1.AND.NPRT.GE.2)
     1    WRITE(IFILE,*)' AFTER 4602 C: IMOD,INUMTT,ICONST=',
     1                                  IMOD,INUMTT,ICONST
      ENDIF
C
    8 CONTINUE
C
C BEG AUG 1996
      IF (ITYPE.EQ.3.AND.IQUICK.EQ.1) THEN
         PBBOW(1) = WIMPG
         PBBOW(2) = WIPROD
         PBBOW(3) = WRESID(1)
C BEG NOV 1996
         PBBOW(4) = WPRESG+DELWSH
C END NOV 1996
C BEG MAR 1998
         IF (ABS(WPMAX).GT.ABS(WPRESG)) PBBOW(4) = WPMAX+DELWSH
C END MAR 1998
         PBBOW(5) = AMPLIT
         PBBOW(6) = ECC
         PBBOW(7) = LENMOD
         PBBOW(8) = AXIAL
         PBBOW(11)= WDELKP
C
         DO 56 K = 1,2
         DO 56 J = 1,5
         DO 56 I = 1,3
   56    RESULK(I,J,K) = RESULT(I,J,K)
      ENDIF
C END AUG 1996
      IF (ILAMHI.EQ.1) THEN
C
C  INTRODUCE CONSTRAINT THAT BUCKLING WITH ONE AXIAL HALFWAVE
C  BE CRITICAL FOR RING-STIFFENED CYLINDRICAL PANELS UNDER
C  HOOP COMPRESSION THAT IS GREATER THAN 1.9*AXIAL COMPRESSION
C  AND FOR WHICH CERTAIN OTHER CONDITIONS HOLD.
C
         INUMTT = INUMTT + 1
         FSAFTY = 1.0
         CALL CONVRF(FSAFTY,CN2)
         IF (IMOD.EQ.0.AND.(CONLAM/FSAFTY).LT.MAXCON) THEN
            ICAR = ICAR + 1
            PCWORD(ICAR) = 'high-axial-wave general instability'
            CPLOT(ICAR) = CONLAM/FSAFTY - 1.
            IADDCC(ICAR) = 0
            FSAFEP(ICAR) = FSAFTY
         ENDIF
         IF (IMOD.EQ.0.AND.(CONLAM/FSAFTY).GT.CONMAX) GO TO 4800
         IF (IMOD.EQ.1.AND.IPOINC(INUMTT).EQ.0) GO TO 4800
         ICONST = ICONST + 1
         IF (IMOD.EQ.0) IPOINC(INUMTT) = 1
         CONSTR(ICONST) = CONLAM/FSAFTY
         WORDB(ICONST)=
     1   '-.05+(eig(high-axial-m) -eig(low-axial-m))/eig(high-m);FS='
     1   //CN2
C BEG APR 2007
         IF (NPRT.GE.0) WRITE(IFILE,'(A,1P,E12.4,2X,A)')
     1 ' Margin=',CONSTR(ICONST)-1.,WORDB(ICONST)
C END APR 2007
C BEG AUG 1995
C23456789012345678901234567890123456789012345678901234567890123456789012
         IF (NPRT.GE.2) WRITE(IFILE,'(A,/,A,/,A,I3,A,I2,A,I2)')
     1 ' ******** HI-AXIAL-M > LOW-AXIAL-M BUCKLING MARGIN COMPUTED:',
     1   WORDB(ICONST),
     1 ' ******** CONSTRAINT NO.',ICONST,'; LOAD SET NO.',ILOADS,
     1 '; SUBCASE NO.',ICASE
C END AUG 1995
 4800    CONTINUE
         IF (ITYPE.EQ.1.AND.NPRT.GE.2)
     1    WRITE(IFILE,*)' AFTER 4800 C: IMOD,INUMTT,ICONST=',
     1                                  IMOD,INUMTT,ICONST
      ENDIF
C BEG DEC 1994
      IF (ICASE.EQ.1.AND.ISWWID.EQ.1) THEN
C END DEC 1994
C
C  INTRODUCE WIDTH-WISE WIDE COLUMN BUCKLING CONSTRAINT
C  FOR PANEL SKIN. THE VARIABLE WIDLAM IS CALCULATED AT THE
C  BEGINNING OF THE SECTION ABOVE ON STATIC RESPONSE OF SINGLE
C  PANEL MODULE TO NORMAL PRESSURE...
C
         INUMTT = INUMTT + 1
         FSAFTY = 1.1
         IF (ICASE.EQ.2.AND.IFLAT.EQ.0) FSAFTY = FSLOC
         CALL CONVRF(FSAFTY,CN2)
         IF (IMOD.EQ.0.AND.(WIDLAM/FSAFTY).LT.MAXCON) THEN
            ICAR = ICAR + 1
            PCWORD(ICAR) = 'Width-wise wide column buckling of skin'
            CPLOT(ICAR) = WIDLAM/FSAFTY - 1.
            IADDCC(ICAR) = 0
            FSAFEP(ICAR) = FSAFTY
         ENDIF
         IF (IMOD.EQ.0.AND.(WIDLAM/FSAFTY).GT.CONMAX) GO TO 4801
         IF (IMOD.EQ.1.AND.IPOINC(INUMTT).EQ.0) GO TO 4801
         ICONST = ICONST + 1
         IF (IMOD.EQ.0) IPOINC(INUMTT) = 1
         CONSTR(ICONST) = WIDLAM/FSAFTY
         WORDB(ICONST)=
     1   'Width-wise wide column skin buckling load factor -1;FS='
     1   //CN2
C BEG APR 2007
         IF (NPRT.GE.0) WRITE(IFILE,'(A,1P,E12.4,2X,A)')
     1 ' Margin=',CONSTR(ICONST)-1.,WORDB(ICONST)
C END APR 2007
C BEG AUG 1995
C23456789012345678901234567890123456789012345678901234567890123456789012
         IF (NPRT.GE.2) WRITE(IFILE,'(A,/,A,/,A,I3,A,I2,A,I2)')
     1 ' ******* THE WIDTH-WISE WIDE COL. SKIN BUCKL. MARGIN COMPUTED:',
     1   WORDB(ICONST),
     1 ' ******* CONSTRAINT NO.',ICONST,'; LOAD SET NO.',ILOADS,
     1 '; SUBCASE NO.',ICASE
C END AUG 1995
 4801    CONTINUE
         IF (ITYPE.EQ.1.AND.NPRT.GE.2)
     1    WRITE(IFILE,*)' AFTER 4801 C: IMOD,INUMTT,ICONST=',
     1                                  IMOD,INUMTT,ICONST
      ENDIF
C
C**********************************************************************
C  BEGIN BUCKLING OF STIFFENER SEGMENTS....
C**********************************************************************
C
C**********************************************************************
C  END BUCKLING OF STIFFENER SEGMENTS....
C**********************************************************************
C
C
C**********************************************************************
C  BEGIN CALCULATION OF CONSTITUTIVE LAW CS(i,j), j=1,6, j=1,6 FOR
C  ENTIRE PANEL WITH SMEARED STRINGERS, INCLUDING VARIOUS REDUCTIONS
C  IN MEMBRANE STIFFNESS CAUSED BY LOCAL POSTBUCKLING.
C**********************************************************************
C
C BEG APR 2011
      IF (ITYPE.EQ.2) THEN
         CALL MOVER(CX,1,CXORIG,1,180)
         CALL MOVER(CY,1,CYORIG,1,180)
         CALL MOVER(CS,1,CSORIG,1,36)
      ENDIF
C END APR 2011
C     IF (ITUTOR.EQ.1.AND.IQUICK.EQ.0)
C    1 CALL DATUM(IFILE4,120,0,0,INT,REALL,CHARAC,IOUT,0,IPROMP)
      IF (ISTIF(1).EQ.5) CALL MOVER(CX,1,CXSAVE,1,144)
C
      IF (ITYPE.EQ.3) CSWID(ISTEP) = CSBEND(ISTEP)
      IF (ITYPE.EQ.3.AND.ISTIF(2).NE.0) CSWIDR(ISTEP) = CSBNDR(ISTEP)
      IF (ISTIF(1).NE.0.AND.IQUICK.EQ.0.AND.ABS(WPB1).GT.0.) THEN
         KOIT = 1
         IF (NPRT.GE.0) WRITE(IFILE,'(/,A)')
     1'*** BEGIN SUBROUTINE DEFCIJ (POST-LOCALLY BUCKLED CS(I,J)) ****'
         CALL DEFCIJ(IFILE,CX,CY,CTAN,CMIN,CS,GTX,GTY,GTS,TEFF,
     1               TBASE,IMOD,JJJ,NPRT,NNODES,TEMP,IMTEMP)
         CALL MOVER(CS,1,CSREDU,1,36)
         IF (ITYPE.EQ.3)
     1      CSWID(ISTEP) = CSREDU(4,4) - CSREDU(1,4)**2/CSREDU(1,1)
         CALL MOVER(CX(1,1,5),1,CSWIDE,1,36)
         IF (ITYPE.EQ.3.AND.ISTIF(2).NE.0)
     1      CSWIDR(ISTEP) = CSWIDE(4,4) - CSWIDE(1,4)**2/CSWIDE(1,1)
C
         IF (NPRT.GE.0) WRITE(IFILE,*)
     1'*** END   SUBROUTINE DEFCIJ (POST-LOCALLY BUCKLED CS(I,J)) ****'
C
      ENDIF
C
C**********************************************************************
C  END CALCULATION OF CONSTITUTIVE LAW CS(i,j), j=1,6, j=1,6 FOR
C  ENTIRE PANEL WITH SMEARED STRINGERS, INCLUDING VARIOUS REDUCTIONS
C  IN MEMBRANE STIFFNESS CAUSED BY LOCAL POSTBUCKLING.
C**********************************************************************
C
C
C BEG JULY 2007
      IF (NPRT.GE.1) THEN
         IF (NPRT.GE.0) WRITE(IFILE,'(A,I3,A)')
     1' ********* DESIGN PERTURBATION INDEX, IMOD=',IMOD,' *********'
C BEG JUL 2010
         IF (IQUICK.EQ.1.OR.(ISTIF(1).EQ.0.AND.ISTIF(2).EQ.0)
     1    .OR.ISTIF(1).EQ.5.OR.IDISCR.EQ.0.OR.ISOGRD.EQ.1
     1    .OR.(IGENRL.EQ.1.AND.ISTIF(2).EQ.0)) THEN
            WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' *************************************************************',
     1' CHAPTERs 19 (wide column buckling) and 20 (lateral-torsional',
     1' buckling) and "funny hat" buckling are not executed because',
     1' no discretized skin-stringer single module model is used, or',
     1' there are no stiffeners, or the configuration is truss-core',
     1' sandwich wall construction, or the wall is isogrid, or',
     1' IGENRL = 1 and ISTIF(2) = 0.'
         ENDIF
      ENDIF
C END JUL 2010
C23456789012345678901234567890123456789012345678901234567890123456789012
C END JULY 2007
      IF (IQUICK.EQ.1) GO TO 68
      IF (ISTIF(1).EQ.0.AND.ISTIF(2).EQ.0) GO TO 68
C BEG JUL 2010
C     IF (ISTIF(1).EQ.5) GO TO 68
      IF (ISTIF(1).EQ.5) GO TO 604
C END JUL 2010
C BEG MAR 1996
C     IF (FNX.GE.0.0.AND.FNY.GE.0.0) GO TO 68
      IF (IDISCR.EQ.0) GO TO 68
C END MAR 1996
      IF (IGENRL.EQ.1.AND.ISTIF(2).EQ.0) GO TO 68
      IF (ISOGRD.EQ.1) GO TO 68
C
C**********************************************************************
C BEGIN CALCULATION OF WIDE-COLUMN BUCKLING LOAD FACTOR FROM SKIN-STRINGER
C PANEL MODULE MODEL
C**********************************************************************
C
C  GET wide column panel buckling OF PANEL MODULE (N = 1 AXIAL WAVE):
C
      IF (IMOD.EQ.1) CALL TRANS2(M3,YGEN,Y)
C
      IF (IMOD.EQ.0) IYGEN = 0
      IF (IYGEN.EQ.1.AND.IMOD.EQ.0) CALL TRANS2(M3,YGEN,Y)
      IF (IMOD.EQ.0.AND.JJJ.EQ.0.AND.ILOADS.EQ.1.AND.NPRT.GE.1)
     1 WRITE(IFILE,60) ILOADS,LENMOD
   60 FORMAT(/' EXPLANATION OF FOLLOWING CALCULATION (LOAD SET NO.',
     1 I2,'):'/
     1'     Next, the load factor for wide column panel buckling is'/
     1'     computed from the discretized panel module model. The'/
     1'     analysis takes into account local deformation of the'/
     1'     skin between stringers and local deformation of the'/
     1'     stringers.'//
     1'     Clamping of the L2 edges (edges that lie in the plane of'/
     1'     the screen and parallel to it) is accounted for by doing'/
     1'     the wide column calculation for a panel that is shorter in'/
     1'     the axial direction by a factor, LENMOD =',1PE12.4,
     1' than the'/
     1'     axial dimension that you gave in your input.')
C
      AXLEN = LENMOD*AXIAL
      IF (ISTIF(2).NE.0) AXLEN = B(2)
C
      ISTORT = 0
      IF (IMOD.EQ.0) ISTORT = 1
C BEG MAR 1996
      ICTAN = 0
      IF (IBEAM.EQ.1) ICTAN = 1
C END MAR 1996
C BEG OCT 2006
      IF (NPRT.GE.1) WRITE(IFILE,'(/,/,/,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************',
     1' ************          CHAPTER 19             *****************',
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************'
      IF (NPRT.GE.0) WRITE(IFILE,'(A,I3,A)')
     1' **** CHAPTER 19: DESIGN PERTURBATION INDEX, IMOD=',IMOD,' *****'
      IF (NPRT.GE.1) WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A)')
     1 ' *************************************************************',
     1 ' CHAPTER 19 Do wide-column inter-ring buckling analysis with',
     1 '            possibly locally postbuckled skin-stringer module',
     1 '            model. (See Figs. 20c, 22c, 46d, and 67 of [1A],',
     1 '            for examples.).'
C END OCT 2006
      IF (NPRT.GE.1) WRITE(IFILE,'(/,A)')
     1'*** BEGIN SUBROUTINE BUCKLE (WIDE-COLUMN BUCKLING - MODULE) ****'
C BEG AUG 2001
 9450 CONTINUE
      ILABEL=9450
      IF (NPRT.GE.1) WRITE(IFILE,*) 
     1               ' LABEL NO. IN STRUCT=',ILABEL
C BEG NOV 2003
      IF (NPRT.GE.2) WRITE(IFILE,'(A,/,1P,4E12.4)')
     1' Skin stiffnesses, CX(1,1,1),CX(1,2,1),CX(2,2,1),CX(3,3,1)=',
     1                    CX(1,1,1),CX(1,2,1),CX(2,2,1),CX(3,3,1)
C END NOV 2003
C END AUG 2001
      CALL BUCKLE(1,IMOD,IFILE,IW,ILOC,DS,AS,BS,ISTORT,DIAG,C,D,DI,
     1      X,Y,Z,EIG,0,IYGEN,RESULT,AXLEN,M3,IDRW,
     1      NBLK,NGBK,NKF,0,IMAXB,KMAXB,IPV2,IBVC,1000,1,THERMX,
     1      THERMS,P,KAPPA1,KAPPA2,0,WPRES,IUNK,CS,
     1      FNX,FNY,FNXY,FXBEG,FXEND,FYBEG,FYEND,FXYBEG,FXYEND,
     1      FNX0,FNY0,FNXY0,R,JJJ,1,IABP,LENMOD,0,
C BEG AUG 2001
     1      TEMP(1,1),IMTEMP,WPB1,EIGITR(14),ICTAN,0.,0,0,0,ILABEL)
C END AUG 2001
      IF (NPRT.GE.0) WRITE(IFILE,'(A)')
     1'*** END SUBROUTINE BUCKLE (WIDE-COLUMN BUCKLING - MODULE) ****'
      IF (NPRT.GE.0) WRITE(IFILE,'(/,A)')
     1'*** BEGIN SUBROUTINE MODE (WIDE-COLUMN BUCKLING MODE SHAPE) ****'
C
      IF (IMOD.EQ.0) CALL MODE(IFILE,NPRT,NSEGB5,I5,IW,DS,M3,Y,ISKIN,
C BEG JUL 1999
     1                0,0,ZPARTX,NPB,CX,1,WPRES,EIG,R,ITIPW,ICWEBW,IMOD,
C END JUL 1999
     1                WW1,WD1,WDD1,UU1,VV1,VP1,ZREF,1,FKNOCK(2),
C BEG OCT 1998
C BEG JUN 2004
     1                FKNOCK(3),ICROWN,P,IFICT6,WDDD,7,0,TX,1,0,
     1    INTSNG,RAD2,TY,IZSTIF,B,B2,H,W,W2,
     1    B0,B20,H0,WW0,W20,ISTIF,INTEXT,IFAY,IBEAM,IONEST,
     1    AXIAL,CIRC,ICRIP,ISEGC,WRATIO,WTIPWS,WRATTP,
     1    WRATWB,WRATCN,WRWIDE,WIDLMM,PEDG,ISOGRD,RESULT,IFLGLW)
C END JUN 2004
C END OCT 1998
C
      IF (NPRT.GE.0) WRITE(IFILE,*)
     1'*** END SUBROUTINE MODE (WIDE-COLUMN BUCKLING MODE SHAPE) ****'
C Insert modified statements from above...
C POSSIBLY CHANGE THE "IN-PLANE SHEAR" KNOCKDOWN FACTOR FKNOCK(4)
C FOR WIDE COLUMN BUCKLING IN ORDER TO ACCOUNT FOR THE DEVELOPMENT
C OF THE DIAGONAL TENSION FIELD IN THE LOCALLY POSTBUCKLED STATE.
C It is assumed that for a fully developed diagonal tension field
C FKNOCK(4) can be set equal to unity. The variation of FKNOCK(4)
C for a partially developed diagonal tension field is assumed to
C be given by:
C              Fnew(4) = (1-k)(1 - EXP[-a(x-1)]) + k
C
C in which Fnew(4) is the new knockdown factor (replaces FKNOCK(4)),
C k is the original knockdown factor, FKNOCK(4), "a" is a constant
C (selected as "a"=0.3 as of 7 June, 1991), and x = 1/EKOISV, where
C EKOISV is the local bifurcation buckling eigenvalue calculated
C according to the Koiter theory (calculated in SUBROUTINE KOIT2).
C
      IF (IMOD.EQ.0.AND.FKNOCK(4).LT.1.0.AND.ABS(EKOISV).LT.1.0
     1             .AND.FSLOC.LT.0.7) THEN
C    1             .AND.WRWIDE.LT.0.5) THEN
         FTEMP=(1.-FKNOCK(4))*(1.-EXP(-.3*(1./EKOISV -1.)))+FKNOCK(4)
         IF (FTEMP.GT.1.0) FTEMP = 1.0
         IF (FTEMP.LT.FKNOCK(4)) FTEMP = FKNOCK(4)
C BEG DEC 1995
C23456789012345678901234567890123456789012345678901234567890123456789012
         IF (NPRT.GE.0.OR.JLAST.EQ.1) THEN
           WRITE(IFILE,*)' KNOCKDOWN FACTOR FOR INTER-RING BUCKLING'
           WRITE(IFILE,*)' HAS BEEN CHANGED FROM FKNOCK(4)=',FKNOCK(4)
           WRITE(IFILE,*)' TO A NEW VALUE,          FTEMP =',FTEMP
           WRITE(IFILE,*)' BECAUSE OF DEVELOPMENT OF A DIAGONAL TENSION'
           WRITE(IFILE,*)' FIELD, WHICH IS ACCOUNTED FOR IN SUB. KOIT2.'
         ENDIF
C END DEC 1995
         FKNOCK(4) = FTEMP
      ENDIF
C
      IF (IMOD.EQ.0.AND.JJJ.EQ.0.AND.NPRT.GE.1) THEN
                 WRITE(IFILE,61) JJJ,ILOADS,IICHAN,FKNOCK(4),AXLEN,
     1                               FNX, FNY, FNXY,FNX0,FNY0,FNXY0
         IF (IABP.EQ.0) THEN
            WRITE(IFILE,422) -P,FNXP0,FNYP0,FNXPL0,FNYPL0
         ELSE
            WRITE(IFILE,423) -P,FNXP0,FNYP0,FNXPL0,FNYPL0
         ENDIF
      ENDIF
C
   61 FORMAT(/' Wide column buckling factor from discretized model of a 
     1single panel module for'/' design iteration no.',I3,', load set no
     1.',I2,',  material iteration no.',I3,'. This load factor in-'/
     1' cludes the knockdown factor,',1PE12.4,' that accounts for the'/
     1' effect of in-plane shear loading and anisotropy [e.g. C(4,6)]'/
     1' in the panel skin.  The axial length of the wide column is'/
     1 1PE12.4,'.  Resultants are uniform and given by:'/
     1'   LOAD SET A: axial, Nx =',1PE10.2,'; circ., Ny =',1PE10.2,
     1'; in-plane shear, Nxy =',1PE10.2/
     1'   LOAD SET B: axial, Nxo=',1PE10.2,'; circ., Nyo=',1PE10.2,
     1'; in-plane shear, Nxyo=',1PE10.2,' (Not from normal pressure)')
C
      EIGPRD = FKNOCK(4)*EIG
      IF (ITIPW.EQ.1) EIGPRD = EIG
      IF (ISTIF(2).EQ.0.AND.EIGPRD.GT.EIGBOW) THEN
         IF (NPRT.GE.2) THEN
            WRITE(IFILE,'(A,1PE12.4,/,A,1PE12.4)')
     1    ' WIDE COLUMN BUCKLING (DISCRETE MODULE MODEL)=',EIGPRD,
     1    ' WIDE COLUMN BUCKLING (PANDA-TYPE MODEL     )=',EIGBOW
            WRITE(IFILE,*)
     1    ' DISCRETE MODEL BEING SET EQUAL TO PANDA-TYPE MODEL.'
         ENDIF
         EIGPRD = EIGBOW
      ENDIF
      EIGDIS(2) = EIGPRD
      IYGEN = 1
C BEG MAY 1996
C23456789012345678901234567890123456789012345678901234567890123456789012
      IF (IMOD.EQ.0.AND.IONEST.EQ.1) THEN
       WRITE(IFILE,*)' '
       WRITE(IFILE,*)' ***** NOTE ********** NOTE ********* NOTE *****'
       WRITE(IFILE,*)' THIS IS A ONE-STRINGER MODEL (NEWS ITEM 270).'
       WRITE(IFILE,*)' THEREFORE, WHAT IS CALLED HERE "WIDE COL. BUCK."'
       WRITE(IFILE,*)' OBTAINED WITH THE DISCRETIZED SINGLEMODULE MODEL'
       WRITE(IFILE,*)' IS REALLY NOT, BECAUSE SIMPLE SUPPORT ALONG THE'
       WRITE(IFILE,*)' TWO LONGITUDINAL EDGES IS STILL ENFORCED IN THIS'
       WRITE(IFILE,*)' CASE. READ PANDA2.NEWS ITEM 270 FOR DETAILS.'
       WRITE(IFILE,*)' **** END NOTE **** END NOTE ***** END NOTE *****'
      ENDIF
C END MAY 1996
      IF (IMOD.EQ.0.AND.IWIDE.EQ.0) THEN
         IPWR = 2
         IF (BLL2.GT.0.0) IPWR = B(2)/BLL2 - 1.
         IF (IPWR.LT.2) IPWR = 2
C BEG AUG 1995
         IF (IPWR.GT.10) IPWR = 10
C END AUG 1995
         CXMULT = 10.**IPWR
C23456789012345678901234567890123456789012345678901234567890123456789012
         IF (EIGPRD.LT.1.0.AND.CSWIDE(4,4).GT.(CXMULT*CSWIDE(5,5))) THEN
C BEG NOV 2003
C BEG DEC 2003
C BEG JAN 2007
C           IF (NPRT.GT.-1) WRITE(IFILE,1004) EIGPRD,FKNOCK(4),FKNOCK(4)
            IF (NPRT.GT.0) WRITE(IFILE,1004) EIGPRD,FKNOCK(4),FKNOCK(4)
C END JAN 2007
C END DEC 2003
 1004       FORMAT(/' **** WARNING ***** WARNING ***** WARNING ****'/
     1              ' WIDE COLUMN BUCKLING MAY BE CRITICAL. NOTE: THE'/
     1              ' LOAD FACTOR FOR WIDE COLUMN BUCKLING = ',1P,E12.4/
     1            ' INCLUDES THE KNOCKDOWN FACTOR, FKNOCK(4)=',1P,E12.4/
     1           ' THAT COMPENSATES FOR IN-PLANE SHEAR AND ANISOTROPY.'/
     1              ' THIS FACTOR MAY BE TOO CONSERVATIVE IN THIS RUN.'/
     1              ' IT MAY BE A GOOD IDEA BEFORE LAUNCHING THE NEXT'/
     1              ' "PANDAOPT" RUN TO TURN ON THE WIDE COLUMN'/
     1              ' BUCKLING SWITCH FOR EVERY LOAD CASE IN THE'/
     1              ' *.OPT FILE. USE YOUR JUDGMENT, AND BE CAREFUL!'/
     1              ' NOTE: The wide column buckling knockdown factor'/
     1              ' used here, that is, FKNOCK(4)=',1P,E12.4,','/
     1              ' may change significantly in a wide column'/
     1              ' model because in such a model it is derived'/
     1              ' from PANDA-type computations in which the panel'/
     1              ' is assumed to be flat rather than curved.'/
     1              ' ** END WARNING ** END WARNING ** END WARNING'/)
C END NOV 2003
C           IWIDE = 1
C           FKNOCK(8) = 1.0
C           IF (ISTIF(2).EQ.0) FKNOCK(9) = 1.0
C           GO TO 2
C END SEPT 1993
         ENDIF
      ENDIF
C BEG MAR 1996
C     IF (IWIDE.EQ.0) GO TO 62
      IF (IWIDE.EQ.0.AND.IBEAM.EQ.0) GO TO 62
      INUMTT = INUMTT + 1
C     IF (ISKIN.EQ.1.AND.ITIPW.EQ.0) GO TO 62
      IF (ISKIN.EQ.1.AND.ITIPW.EQ.0.AND.IBEAM.EQ.0) GO TO 62
C END MAR 1996
      ISKIN = 0
C     WRITE(8,1003) IMOD,IYGEN,M3,EIG,(Y(I),I=1,M3)
C1003 FORMAT(/' AFTER CALL BUCKLE, IMOD,IYGEN,M3,EIG=',3I5,1PE12.4,
C    1 ' BUCKLING MODE SHAPE, Y(I)='/(1P,10E12.4))
        IF (EIG.LE.0.0.AND.IMOD.EQ.0.AND.JJJ.EQ.0) THEN
           WRITE(IFILE,23) ABS(EIG)
   23      FORMAT(//' ***************** WARNING *********************'/
     1     ' Negative or zero eigenvalue.  This means that if the'/
     1     ' uniform resultants, N1, N2, N12, had the opposite sign'/
     1     ' buckling would occur at the load factor',1PE12.4,'.'/
     1     ' PANDA2 now assumes that you really wanted to apply loads'/
     1     ' with the opposite sign, and proceeds as if the eigenvalue'/
     1     ' were positive.  If this strategy will lead to too conser'/
     1     ' vative a design, please modify this particular load set.'/
     1     ' *******************************************************'//)
C BEG FEB 1996
C BEG FEB 1999
           CALL LOADBA(19)
C END FEB 1999
           IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
        ENDIF
        EIG = ABS(EIG)
C
C BEG JUL 1999
C     EIGCON = EIGPRD/FSPAN
      EIGCON = ABS(EIGPRD)/FSPAN
C END JUL 1999
      IF (EIGCON.LT.0.) GO TO 62
      CALL CONVRF(FSPAN,CN2)
      IF (IMOD.EQ.0.AND.EIGCON.LT.MAXCON) THEN
         ICAR = ICAR + 1
         PCWORD(ICAR) =
     1'Wide column panel buckling'
         IF (ITIPW.EQ.1) PCWORD(ICAR) =
     1                       'Wide column model: stringer sidesway'
         CPLOT(ICAR) = EIGCON - 1.
         IADDCC(ICAR) = 0
         FSAFEP(ICAR) = FSPAN
      ENDIF
      IF (IMOD.EQ.0.AND.EIGCON.GT.CONMAX) GO TO 62
      IF (IMOD.EQ.1.AND.IPOINC(INUMTT).EQ.0) GO TO 62
      ICONST = ICONST + 1
      IF (IMOD.EQ.0) IPOINC(INUMTT) = 1
      CONSTR(ICONST) = EIGCON
      WORDB(ICONST)=
     1'(Wide column panel buckling load factor)/(F.S.) -1;FS='//CN2
      IF (ITIPW.EQ.1) WORDB(ICONST) =
     1'(Wide column model: stringer sidesway load factor)/(F.S.)-1;'
     1//'FS='//CN2
      IF (ISTIF(1).NE.0.AND.(EIGCON*FSPAN).LT.1.0) ISTOP = 1
C BEG APR 2007
      IF (NPRT.GE.0) WRITE(IFILE,'(A,1P,E12.4,2X,A)')
     1 ' Margin=',CONSTR(ICONST)-1.,WORDB(ICONST)
C END APR 2007
C BEG AUG 1995
C23456789012345678901234567890123456789012345678901234567890123456789012
      IF (NPRT.GE.2) WRITE(IFILE,'(A,/,A,/,A,I3,A,I2,A,I2)')
     1 ' ******* THE WIDE COLUMN PANEL BUCKLING MARGIN JUST COMPUTED:',
     1WORDB(ICONST),
     1 ' ******* CONSTRAINT NO.',ICONST,'; LOAD SET NO.',ILOADS,
     1 '; SUBCASE NO.',ICASE
C END AUG 1995
   62 CONTINUE
C
      IF (NPRT.GE.0) WRITE(IFILE,63) EIGPRD,ISKIN,IWIDE,ITIPW
   63 FORMAT(/'  WIDE COLUMN PANEL BUCKLING LOAD FACTOR = ',7X,1PE12.4/
     1' ISKIN =',I2,'. WIDE COLUMN BUCKLING IS IGNORED IF ISKIN = 1.'/
     1' IWIDE =',I2,'. WIDE COLUMN BUCKLING IS IGNORED IF IWIDE = 0.'/
     1' ITIP  =',I2,'. MODE OF BUCKLING IS STRINGER SIDESWAY IF ITIP=1')
      IF (ISKIN.EQ.1.AND.IMOD.EQ.0.AND.NPRT.GE.0) WRITE(IFILE,64)
      IF (ITIPW.EQ.1.AND.IMOD.EQ.0.AND.NPRT.GE.0)  WRITE(IFILE,65)
   64 FORMAT(/' *****************  NOTE    NOTE     NOTE  ***********'//
     1' WIDE COLUMN BUCKLING LOAD FACTOR WILL BE IGNORED IN THIS'/
     1' DESIGN ITERATION BECAUSE THE BIFURCATION BUCKLING MODE'/
     1' CORRESPONDS TO JUST ANOTHER FORM OF LOCAL SKIN BUCKLING, WHICH'/
     1' HAS BEEN COVERED IN A PREVIOUS COMPUTATION. GENERAL BUCKLING'/
     1' WILL BE COVERED IN A PANDA-TYPE OF ANALYSIS AND PERHAPS IN'/
     1' A GLOBAL DISCRETIZED MODEL OF THE ENTIRE PANEL.'//
     1' IN THE PANDA-TYPE OF ANALYSIS REDUCED EFFECTIVE SKIN '/
     1' STIFFNESS WILL BE USED.'//
     1' ************************************************************')
C
   65 FORMAT(/' ***************** NOTE   NOTE    NOTE  *************'/
     1' WIDE COLUMN BUCKLING LOAD FACTOR '/
     1' CORRESPONDS TO SIDESWAY (ROLLING) OF THE STRINGER BY ITSELF.'/
     1' ************************************************************')
C
      IF (IMOD.EQ.0) CALL TRANS1(M3,Y,YGEN)
C
       IF ((IMOD.EQ.0.AND.JJJ.EQ.0.AND.NPRT.GE.1).OR.NPRT.GE.2)
     1 WRITE(IFILE,*)' *** END OF WIDE COLUMN BUCKLING CALCULATIONS ***'
C
C**********************************************************************
C END CALCULATION OF WIDE-COLUMN BUCKLING LOAD FACTOR FROM SKIN-STRINGER
C PANEL MODULE MODEL
C**********************************************************************
C
C BEG MAR 1996
C BEG JULY 2007
      IF (NPRT.GE.1) THEN
      IF (NPRT.GE.0) WRITE(IFILE,'(A,I3,A)')
     1' ********* DESIGN PERTURBATION INDEX, IMOD=',IMOD,' *********'
      IF (IBEAM.NE.1.AND.(ISTIF(1).GE.4.OR.ISTIF(1).LE.0))
     1   WRITE(IFILE,'(/,A,/,A,/,A,/,A)')
     1' *************************************************************',
     1' CHAPTER 20 (width-wise wide column buckling and',
     1' lateral-torsional buckling) are not executed becasue',
     1' (IBEAM.NE.1.AND.(ISTIF(1).GE.4.OR.ISTIF(1).LE.0))'
      ENDIF
C END JULY 2007
C BEG OCT 1998
C BEG JUL 2010
  604 CONTINUE
C     IF (IBEAM.EQ.1.OR.(ISTIF(1).LT.4.AND.ISTIF(1).GT.0)) THEN
      IF (IBEAM.EQ.1.OR.(ISTIF(1).NE.4.AND.ISTIF(1).GT.0)) THEN
         IF (ISTIF(1).EQ.5) GO TO 605
C END JUL 2010
C END OCT 1998
C***********************************************************************
C  BEGIN COMPUTATION OF M = ??? LATERAL-TORSIONAL BUCKLING
C  OF THE LOCALLY POST-BUCKLED BEAM OR PANEL, ACCOUNTING FOR THE WEAKENED
C  AXIAL STIFFNESS BECAUSE THE STRUCTURE IS IN ITS LOCALLY POST-BUCKLED
C  STATE:
C***********************************************************************
C BEG OCT 2006
      IF (IMOD.EQ.0.AND.JJJ.EQ.0.AND.NPRT.GE.1)
     1  WRITE(IFILE,'(/,/,/,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************',
     1' ************          CHAPTER 20             *****************',
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************'
      IF (NPRT.GE.0) WRITE(IFILE,'(A,I3,A)')
     1' **** CHAPTER 20: DESIGN PERTURBATION INDEX, IMOD=',IMOD,' *****'
      IF (IMOD.EQ.0.AND.JJJ.EQ.0.AND.NPRT.GE.1)
     1 WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A)')
     1 ' *************************************************************',
     1 ' CHAPTER 20 Compute width-wise wide column buckling and',
     1 '            lateral-torsional buckling load factors from the',
     1 '            possibly locally postbuckled skin-stringer module',
     1 '            model (inter-ring buckling modes).',
     1 '            See panda2.news Item Numbers 379 and 381 in [1L].'
C END OCT 2006
         IF (IMOD.EQ.0.AND.JJJ.EQ.0.AND.NPRT.GE.1)
C BEG JULY 1997
     1    WRITE(IFILE,601) ILOADS
C END JULY 1997
  601    FORMAT(/' EXPLANATION OF FOLLOWING CALC. (LOAD SET NO.',
     1    I2,'):'/
     1'     Next, the load factor for m=?? lateral-torsional buckling'/
     1'     is computed from the discretized panel module model. The'/
     1'     analysis takes into account local deformation of the'/
C BEG JULY 1997
     1'     panel module cross section, the redistribution of axial'/
     1'     stress resultants Nx over the discretized module cross'/
     1'     section, and the axial "softening" of a locally post-'/
     1'     buckled skin-stringer discretized module.'/)
C END JULY 1997
C
         IF (IMOD.EQ.1) CALL TRANS2(M3,YGEN2,Y)
         IF (IMOD.EQ.0) IYGEN2 = 0
         ISTRT = 0
         IF (IMOD.EQ.0) ISTRT = 1
C BEG JULY 1997
         IF (IMOD.EQ.0) DELTOR = 0.
         AXLEN2 = AXLEN
         IF (ISTIF(2).EQ.0) AXLEN2 = AXIAL
         IF (IMOD.EQ.0.AND.NPRT.GE.1) WRITE(IFILE,'(A,1PE12.4)')
C23456789012345678901234567890123456789012345678901234567890123456789012
     1 ' Effective axial length of the panel,           AXLEN2=',AXLEN2
         IF (NPRT.GE.1) WRITE(IFILE,'(A)')
     1 ' LATERAL-TORSIONAL BUCKLING: Search for critical load...'
         IF (IMOD.EQ.0) THEN
            MTOR = 0
            IF (ISTIF(1).EQ.2) MTOR = 1
            EIG = 10.E+16
            ITIPT = 0
            IKOUNT = 0
C BEG AUG 1997
            IMTOR1 = 0
C END AUG 1997
         ENDIF
 6010    CONTINUE
         IF (IMOD.EQ.0) THEN
            EIGS = EIG
            MTORSV = MTOR
C BEG OCT 1998
            IF (IKOUNT.GT.0) CALL TRANS1(M3,Y,YGEN2)
C END OCT 1998
            MTOR = MTOR + 1
            IKOUNT = IKOUNT + 1
         ENDIF
C
C BEG AUG 2001
 9460    CONTINUE
         ILABEL=9460
         IF (NPRT.GE.1) WRITE(IFILE,*) 
     1               ' LABEL NO. IN STRUCT=',ILABEL
C BEG JULY 2006
         IWRITE = 0
C END JULY 2006
C END AUG 2001
         CALL BUCKLE(MTOR,IMOD,IFILE,IW,ILOC,DS,AS,BS,ISTRT,DIAG,C,
     1      D,DI,X,Y,Z,EIG,1,IYGEN2,RESULT,AXLEN2,M3,IDRW,
     1      NBLK,NGBK,NKF,0,IMAXB,KMAXB,IPV2,IBVC,1000,1,THERMX,
     1      THERMS,P,KAPPA1,KAPPA2,0,WPRES,IUNK,CS,
     1      FNX,FNY,FNXY,FXBEG,FXEND,FYBEG,FYEND,FXYBEG,FXYEND,
     1      FNX0,FNY0,FNXY0,R,JJJ,1,IABP,LENMOD,0,
C BEG AUG 2001
C BEG JULY 2006
     1      TEMP(1,1),IMTEMP,WPB1,EIGITR(15),1,DELTOR,IWRITE,1,0,ILABEL)
C END JULY 2006
C END AUG 2001
C
         IF (NPRT.GE.0) WRITE(IFILE,'(A,I3,A,1PE12.4)')
     1 ' Number of axial halfwaves=',MTOR,'; Buckling load factor=',
     1   EIG
C
         IF (IMOD.EQ.0) THEN
            CALL MODE(IFILE,NPRT,NSEGB5,I5,IW,DS,M3,Y,ISKINT,
C BEG JUL 1999
     1               0,0,ZPARTX,NPB,CX,1,WPRES,EIG,R,ITIPT,ICWEBT,IMOD,
C END JUL 1999
     1                WW1,WD1,WDD1,UU1,VV1,VP1,ZREF,MTOR,FKNOCK(2),
C BEG OCT 1998
C BEG JUN 2004
     1                FKNOCK(3),ICRWNT,P,IFICT7,WDDD,8,0,TX,1,0,
     1    INTSNG,RAD2,TY,IZSTIF,B,B2,H,W,W2,
     1    B0,B20,H0,WW0,W20,ISTIF,INTEXT,IFAY,IBEAM,IONEST,
     1    AXIAL,CIRC,ICRIP,ISEGC,WRATIO,WTIPWS,WRATTP,
     1    WRATWB,WRATCN,WRWIDE,WIDLMM,PEDG,ISOGRD,RESULT,IFLGT)
C END JUN 2004
C END OCT 1998
C
            IF ((EIG.LT.EIGS.AND.ITIPT.EQ.1.AND.MTOR.LE.NLOC(1))
     1                                     .OR.IKOUNT.EQ.1) GO TO 6010
            EIG = EIGS
            MTOR = MTORSV
C BEG OCT 1998
            CALL TRANS2(M3,YGEN2,Y)
C END OCT 1998
C BEG AUG 1997
            IF (IMTOR1.EQ.0.AND.ISTIF(1).EQ.2.AND.MTOR.EQ.2) THEN
               IMTOR1 = 1
               MTOR = 0
               IKOUNT = 0
               ITIPT = 0
C BEG OCT 2004
               IFLGT = 0
C END OCT 2004
               EIG = 10.E+16
               GO TO 6010
            ENDIF
C END AUG 1997
         ENDIF
C End of (IMOD.EQ.0) condition.
C
C END JULY 1997
C
C BEG MAR 2005
         EIGMLT = 1.0
C BEG FEB 2009
         IF (ICONSV.EQ.1) THEN
            IF (KLAYER(1,1).NE.0) EIGMLT = 0.85
            IF (KLAYER(1,1).NE.0.AND.ITIPT.EQ.1) EIGMLT = 0.70
         ELSE
            IF (KLAYER(1,1).NE.0) EIGMLT = 0.95
            IF (KLAYER(1,1).NE.0.AND.ITIPT.EQ.1) EIGMLT = 0.95
         ENDIF
C END FEB 2009
         IF (NPRT.GE.0.AND.EIGMLT.LT.1.0)
     1   WRITE(IFILE,'(/,A,1P,E12.4,/,A,/)')
     1' *** NOTE: Lateral-torsion buckling eigvalue reduced by EIGMLT=',
     1      EIGMLT,
     1'     because there are smeared substiffeners.*******'
         EIG = EIG*EIGMLT
C23456789012345678901234567890123456789012345678901234567890123456789012
C END MAR 2005
         EIGPRD = EIG
         EIGDIS(4) = EIGPRD
         IYGEN2 = 1
         INUMTT = INUMTT + 1
C BEG JULY 1997
C        WRITE(8,1302) IMOD,IYGEN,M3,EIG,(Y(I),I=1,M3)
C1302    FORMAT(/' AFTER CALL BUCKLE, IMOD,IYGEN,M3,EIG=',3I5,1PE12.4,
C    1 ' BUCKLING MODE SHAPE, Y(I)='/(1P,10E12.4))
C END JULY 1997
         IF (EIG.LE.0.0.AND.IMOD.EQ.0.AND.JJJ.EQ.0) THEN
            WRITE(IFILE,23) ABS(EIG)
C BEG FEB 1999
            CALL LOADBA(20)
C END FEB 1999
            IF (IRESTY.EQ.1) GO TO 2222
         ENDIF
         EIG = ABS(EIG)
C BEG JUL 1999
C        EIGCON = EIGPRD/FSPAN
         EIGCON = ABS(EIGPRD)/FSPAN
C END JUL 1999
         IF (EIGCON.LT.0.) GO TO 602
         CALL CONVRF(FSPAN,CN2)
C BEG JULY 1997
         CALL CONVRT(MTOR,CN)
C END JULY 1997
         IF (IMOD.EQ.0.AND.EIGCON.LT.MAXCON) THEN
            ICAR = ICAR + 1
            IF (IBEAM.EQ.0) 
C BEG JULY 1997
     1         PCWORD(ICAR) = 'm=? lateral-torsional buckling'
C END JULY 1997
            IF (IBEAM.EQ.1) 
     1         PCWORD(ICAR) = 'Beam lateral-torsional buckling'
            CPLOT(ICAR) = EIGCON - 1.
            IADDCC(ICAR) = 0
            FSAFEP(ICAR) = FSPAN
         ENDIF
         IF (IMOD.EQ.0.AND.EIGCON.GT.CONMAX) GO TO 602
         IF (IMOD.EQ.1.AND.IPOINC(INUMTT).EQ.0) GO TO 602
         ICONST = ICONST + 1
         IF (IMOD.EQ.0) IPOINC(INUMTT) = 1
         CONSTR(ICONST) = EIGCON
C BEG JULY 1997
         IF (IBEAM.EQ.0) WORDB(ICONST)=
     1  '(m='//CN//' lateral-torsional buckling load factor)/(FS)-1;'
     1  //'FS='//CN2
C END JULY 1997
         IF (IBEAM.EQ.1) WORDB(ICONST)=
     1  '(Beam lateral-torsional buckling load factor)/(F.S.)-1;'
     1  //'FS='//CN2
C BEG APR 2007
         IF (NPRT.GE.0) WRITE(IFILE,'(A,1P,E12.4,2X,A)')
     1 ' Margin=',CONSTR(ICONST)-1.,WORDB(ICONST)
C END APR 2007
C BEG DEC 2006
C  comment out the following in order to proceed further with
C  loading in an INDIC = 3 case.
C        IF (ISTIF(1).NE.0.AND.(EIGCON*FSPAN).LT.1.0) ISTOP = 1
C END DEC 2006
C23456789012345678901234567890123456789012345678901234567890123456789012
         IF (NPRT.GE.1) WRITE(IFILE,'(A,/,A,/,A,I3,A,I2,A,I2)')
     1 ' *** THE LATERAL-TORSIONAL BUCKLING MARGIN JUST COMPUTED:',
     1   WORDB(ICONST),
     1 ' ******* CONSTRAINT NO.',ICONST,'; LOAD SET NO.',ILOADS,
     1 '; SUBCASE NO.',ICASE
  602    CONTINUE
         IF ((IMOD.EQ.0.AND.JJJ.EQ.0.AND.NPRT.GE.1).OR.NPRT.GE.2)
     1           WRITE(IFILE,603) EIGPRD
  603    FORMAT(' LATERAL-TORSIONAL BUCKLING LOAD FACTOR = ',7X,
     1   1PE12.4)
         IF (IMOD.EQ.0) CALL TRANS1(M3,Y,YGEN2)
         IF ((IMOD.EQ.0.AND.JJJ.EQ.0.AND.NPRT.GE.1).OR.NPRT.GE.2)
     1   WRITE(IFILE,*)
     1  ' *** END OF LATERAL-TORSIONAL BUCKLING CALCULATIONS ***'
C
C BEG NOV 2006
C BEG FEB 2009
C  Change ICONSV.LE.1 to ICONSV.LE.0 in the following "IF" statement.
C BEG JUL 2010
  605    CONTINUE
C        IF (IMOD.EQ.0.AND.ISTIF(1).LT.4.AND.ISTIF(1).NE.0
C    1   .AND.ICONSV.LE.0.AND.(IIKOIT.EQ.0.OR.FSLOC.GT.0.95)
C    1   .AND.ISRIDX.NE.0.AND.NXVAR(11,3).LT.0.0) IHILOC = 1 
         IF (IMOD.EQ.0.AND.ISTIF(1).NE.4.AND.ISTIF(1).NE.0
     1   .AND.ICONSV.LE.0.AND.(IIKOIT.EQ.0.OR.FSLOC.GT.0.95)
     1   .AND.ISRIDX.NE.0.AND.NXVAR(11,3).LT.0.0) IHILOC = 1
C END JUL 2010
         IF (IMOD.EQ.0.AND.IDISCR.EQ.0) IHILOC = 0
         IF (IMOD.EQ.0.AND.IQUICK.EQ.1) IHILOC = 0
C
C  Disable this new branch. It's not beneficial. (November 2006)
C  Re-enable this branch by commenting out the next statement.(Feb.2009)
C        IHILOC = 0
C END FEB 2009
C
C BEG JUL 2010
         IF (NPRT.GE.2) WRITE(IFILE,'(/,A,I5)')
     1 ' The high-m range will be explored if IHILOC=1: IHILOC=',IHILOC
C END JUL 2010
C23456789012345678901234567890123456789012345678901234567890123456789012
         IF (IHILOC.EQ.1) THEN
C  Do high-m discretized skin-stringer module search...
          IF (IMOD.EQ.0) THEN
             IF (NPRT.GE.1)
     1       WRITE(IFILE,'(/,/,/,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************',
     1' ************          CHAPTER 20b            *****************',
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************'
         IF (NPRT.GE.0) WRITE(IFILE,'(A,I3,A)')
     1' **** CHAPTER 20b: DESIGN PERTURBATION INDEX, IMOD=',IMOD,' ****'
C BEG JUL 2010
         IF (NPRT.GE.1)
     1     WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1 ' *************************************************************',
     1 ' CHAPTER 20b Compute high-m buckling of single discretized',
     1 '            skin-stringer module (same model as used in',
     1 '            CHAPTER 14 except explored in the range of high',
     1 '            numbers of axial halfwaves). See panda2.news',
     1 '            Item Numbers 682 and 754. If the wall is truss-',
     1 '            core sandwich, then the complete (low-m and hi-m)',
     1 '            range of m is explored. See panda2.news Item',
     1 '            number 819.'
C END JUL 2010
C  EXTEND THE AXIAL HALFWAVENUMBER RANGE (high-m range) 
C  FOR LOCAL BUCKLING OF DISCRETIZED SKIN-STRINGER SINGLE MODULE MODEL
C           WRITE(IFILE,'(A,1P,5E12.4)')' TX0=',(TX0(I),I=1,5)
C           WRITE(IFILE,'(A,1P,5E12.4)')' TY0=',(TY0(I),I=1,5)
C           WRITE(IFILE,'(A,1P,5E12.4)')' TXX1=',(TXX(1,I),I=1,5)
C           WRITE(IFILE,'(A,1P,5E12.4)')' TXX2=',(TXX(2,I),I=1,5)
C           WRITE(IFILE,'(A,1P,5E12.4)')' TYY1=',(TYY(1,I),I=1,5)
C           WRITE(IFILE,'(A,1P,5E12.4)')' TYY2=',(TYY(2,I),I=1,5)
            MDLOC0 = 0.07*FLOAT(NLOC(1)) + 1.
            MSTART = NLOC(1) + ABS(MDLOC0)
C BEG JUL 2010
            IF (ISTIF(1).EQ.5) MSTART = 1
            IF (ISTIF(1).EQ.5) NMINSR = MSTART
C END JUL 2010
            MHIGH1 = FLOAT(MSTART) + 5.*B(2)/H(1) + 1.
C BEG APR 2009 (comment out change. It produced fictitious modes.)
C           IF (H(1).GT.1.5*H(2).AND.B(2).LT.AXIAL/2.)
C    1      MHIGH1 = FLOAT(MSTART) + 2.*AXIAL/H(1) + 1.
C END APR 2009
            MEND = MAX(3*MSTART, MHIGH1)
            MDLOC = 0.07*FLOAT(MSTART) + 1.
            MHILOC = MSTART - MDLOC 
            EIGBEF = EIGLCS(1)
            IHIGHM = 0
            IF (NPRT.GE.2)
     1      WRITE(IFILE,'(/,A,I4,A,I4,A,/,A,1P,E12.4,/,A,I4,/,A)')
     1    ' Next, explore skin-stringer module buckling from m=',MSTART,
     1    ' to ',MEND,' axial halfwaves.',
     1    ' Minimum buckling load factor found so far, EIGBEF=',EIGBEF,
     1    ' Corresponding critical number of circ. waves, m=',NLOC(1),
     1    ' m axial halfwaves. Buckling Load Factor'
            NOTTST = 0
            KOUNT = 0
  633       CONTINUE
            KOUNT = KOUNT + 1
            MHILOC = MHILOC + MDLOC 
            MDLOC = 0.07*FLOAT(MHILOC) + 1.
            IYLOC9 = 0
 9462       CONTINUE
            ILABEL=9462
            IF (KOUNT.EQ.1.AND.NPRT.GE.1) WRITE(IFILE,*)
     1               ' LABEL NO. IN STRUCT=',ILABEL
C23456789012345678901234567890123456789012345678901234567890123456789012
C
            CALL BUCKLE(MHILOC,IMOD,IFILE,IW,ILOC,DS,AS,BS,0,DIAG,C,
     1        D,DI,X,Y,Z,EIG,1,IYLOC9,RESULT,B(2),M3,IDRW,
     1        NBLK,NGBK,NKF,0,IMAXB,KMAXB,IPV2,IBVC,1000,
     1        1,THERMX,THERMS,P,KAPPA1,KAPPA2,0,WPRES,IUNK,
     1        CS,FNX,FNY,FNXY,FXBEG,FXEND,FYBEG,FYEND,FXYBEG,FXYEND,
     1        FNX0,FNY0,FNXY0,R,JJJ,1,IABP,LENMOD,0,TEMP,IMTEMP,
     1        WPB1,EIGITR(19),0,0.,0,0,0,ILABEL)
C
            IF (EIG.LE.0.0.AND.IMOD.EQ.0.AND.JJJ.EQ.0) THEN
               WRITE(IFILE,23) ABS(EIG)
               CALL LOADBA(29)
               IF (IRESTY.EQ.1) GO TO 2222
            ENDIF
            EIG = ABS(EIG)
            CALL SHRRED(IREDUC,RESEIG(1,3,1),RESEIG(2,3,1),
     1                     RESEIG(3,3,1),TX(3),TX(3),GTX(1,3),
     1                     EIG,NPRT,IMOD,JJJ,0.,0.,0,
     1                     RESFIX(1,3,1),RESFIX(2,3,1),26)
            IF (KOUNT.EQ.1) EIGBF9 = EIG
C BEG JUL 2010
            IF (KOUNT.EQ.2.AND.EIG.LT.EIGBF9) ISTART = 2
C END JUL 2010
            IF (NOTTST.EQ.0.AND.KOUNT.GT.1.AND.EIG.GT.EIGBF9) THEN
               EIGBF9 = EIG
               ISTART = KOUNT
            ENDIF
            IF (KOUNT.GT.1.AND.EIG.LT.EIGBF9.AND.ISTART.GT.1) THEN
               NOTTST = 1
            ENDIF
            EIGHIS(KOUNT) = EIG
            NHIGST(KOUNT) = MHILOC 
            IF (NPRT.GE.2) WRITE(IFILE,'(I9,1P,E20.4)') MHILOC,EIG
            NMAXHS = MMAXHI 
            MMAXHI = MHILOC 
            EIGMIN = 10.E+21
            IF (MHILOC.LT.MEND) GO TO 633 
C
            NMAXSR = MAX(NMAXSR,NHIGST(KOUNT))
            DO 6332 I = ISTART,KOUNT
               EIGMIN = MIN(EIGHIS(I),EIGMIN)
 6332       CONTINUE
            DO 6333 I = ISTART,KOUNT
               EDIFF = ABS(EIGMIN - EIGHIS(I))/EIGMIN
               IF (EDIFF.LT.0.00001) THEN
                  NLOC(9) = NHIGST(I)
                  GO TO 6334
               ENDIF
 6333       CONTINUE
 6334       CONTINUE
C BEG JUL 2010
C           IF (NPRT.GE.2) WRITE(IFILE,'(A,/,4I6,1P,2E12.4)')
C    1    ' ISTART,KOUNT,NOTTST,NLOC(9),EIGMIN,EIGBF9=',
c    1      ISTART,KOUNT,NOTTST,NLOC(9),EIGMIN,EIGBF9
C END JUL 2010
C
            IF (NOTTST.EQ.1.AND.EIGMIN.LT.0.99*EIGBF9) IHIGHM = 1
C
            IF (IHIGHM.EQ.0.AND.NPRT.GE.2)
     1      WRITE(IFILE,'(/,A,/,A,/,A,/,A,I5)')
     1    ' No critical (minimum) eigenvalue detected in high-m range.',
     1    ' Therefore, no "hi-m" buckling margin for the discretized',
     1    ' skin-stringer single module will be recorded.',
     1    ' Maximum number of axial halfwaves, MMAXHI=',MMAXHI
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG JUL 2010
C           IF (NPRT.GE.2) WRITE(IFILE,'(A,I6,A,I6)')
C    1    ' NMINSR=',NMINSR,';    NMAXSR=',NMAXSR
C END JUL 2010
C
            IF (IHIGHM.EQ.1) THEN
               IF (NPRT.GE.2)
     1          WRITE(IFILE,'(A,A,/,A,I4,A,1P,E12.4,/,A,/,A,I4)')
     1          ' There is a new minimum eigenvalue with respect to',
     1          ' the number of axial halfwaves, n:',
     1          ' Hi-m(crit)=',NLOC(9),'; hi-m eigenvalue=',EIGMIN,
     1          ' Recompute the eigenvalue and eigenvector',
     1          ' corresponding to n(crit)=',NLOC(9)
C
               IYLOC9 = 0
C23456789012345678901234567890123456789012345678901234567890123456789012
 9463          CONTINUE
               ILABEL=9463
               IF (NPRT.GE.1) WRITE(IFILE,*) 
     1               ' LABEL NO. IN STRUCT=',ILABEL
               CALL BUCKLE(NLOC(9),IMOD,IFILE,IW,ILOC,DS,AS,BS,0,DIAG,C,
     1           D,DI,X,Y,Z,EIG,1,IYLOC9,RESULT,B(2),M3,IDRW,
     1           NBLK,NGBK,NKF,0,IMAXB,KMAXB,IPV2,IBVC,1000,
     1           1,THERMX,THERMS,P,KAPPA1,KAPPA2,0,WPRES,IUNK,
     1           CS,FNX,FNY,FNXY,FXBEG,FXEND,FYBEG,FYEND,FXYBEG,FXYEND,
     1           FNX0,FNY0,FNXY0,R,JJJ,1,IABP,LENMOD,0,TEMP,IMTEMP,
     1           WPB1,EIGITR(19),0,0.,0,0,0,ILABEL)
C
               IF (EIG.LE.0.0.AND.IMOD.EQ.0.AND.JJJ.EQ.0) THEN
                  WRITE(IFILE,23) ABS(EIG)
                  CALL LOADBA(30)
                  IF (IRESTY.EQ.1) GO TO 2222
               ENDIF
               EIG = ABS(EIG)
C
               CALL SHRRED(IREDUC,RESEIG(1,3,1),RESEIG(2,3,1),
     1                     RESEIG(3,3,1),TX(3),TX(3),GTX(1,3),
     1                     EIG,NPRT,IMOD,JJJ,0.,0.,0,
     1                     RESFIX(1,3,1),RESFIX(2,3,1),27)
C
               IF (NPRT.GE.2)
     1         WRITE(IFILE,'(I9,1P,E20.4)') NLOC(9),EIG
               CALL TRANS1(M3,Y,YLOC9)
               IYLOC9 = 1
               ITIPPL = 0
               ICWBRG = 0
               IFLGPP = 0
               FKNDUM = 1.0
               PI = 3.1415927
               FN = NLOC(9)
               NPB = (PI*FN/(2.*B(2)))**2
               CALL TRANS2(M3,YLOC9,Y)
               IF (NPRT.GE.1) WRITE(IFILE,'(/,A)')
     1' ** BEGIN SUB. MODE (SKIN-STRINGER MODULE HI-m BUCKLNG MODE) **'
               CALL MODE(IFILE,NPRT,NSEGB5,I5,IW,DS,M3,Y,ISKN11,1,0,
     1           ZPARTX,NPB,CX,1,WPRES,EIG,
     1           RMAX,ITIPPL,ICWBRG,IMOD,
     1           WW8,WD8,WDD8,UU8,VV8,VP8,ZREF,NLOC(9),FKNDUM,
     1           FKNDUM,ICRNRG,P,IFCT11,WDDD8,12,0,TX,1,0,
     1           INTSNG,RAD2,TY,IZSTIF,B,B2,H,W,W2,
     1           B0,B20,H0,WW0,W20,ISTIF,INTEXT,IFAY,IBEAM,IONEST,
     1           AXIAL,CIRC,ICRIP,ISEGC,WRATIO,WTIPWS,WRATTP,
     1           WRATWB,WRATCN,WRWIDE,WIDLMM,PEDG,ISOGRD,RESULT,IFLGPP)
C
               ITIPL8 = ITIPPL
               IWEBL8 = ICWBRG
               IFLGL8 = IFLGPP
               IF (IFCT11.NE.0) THEN
                  WRITE(IFILE,'(/,A,/,A,/,A,/,A,/)')
     1          ' ******* NOTE ******* NOTE ******* NOTE ******',
     1          ' Since the mode is FICTITIOUS, the discretized',
     1          ' skin-stringer hi-m module model will not be used.',
     1          ' ***** END NOTE *** END NOTE **** END NOTE ***'
                  MMAXHI = MMAXHS 
               ENDIF
               IF (NPRT.GE.1) WRITE(IFILE,*)
     1' **** END SUB. MODE (SKIN-STRINGER MODULE HI-m BUCKLNG MODE) **'
               IF (ITIPL8.EQ.0.AND.IWEBL8.EQ.0.AND.IFLGL8.EQ.0) THEN
C23456789012345678901234567890123456789012345678901234567890123456789012
                  WRITE(IFILE,'(/,A,/,A,/,A,/,A)')
     1    ' ******* NOTE ********** NOTE ******** NOTE *********',
     1    ' Discretized skin-stringer module hi-m buckling mode',
     1    ' involves significant deformation of the panel skin.',
     1    ' ***** END NOTE ****** END NOTE ***** END NOTE *********'
C
               ELSE
C    End of (ITIPL8.EQ.0.AND.IWEBL8.EQ.0.AND.IFLGL8.EQ.0) condition.
C
                  IF (ITIPL8.EQ.1.AND.NPRT.GE.2)
     1            WRITE(IFILE,'(/,A,/,A,/,A,/,A)')
     1    ' ******* NOTE ********** NOTE ******** NOTE *********',
     1    ' Discretized skin-stringer module hi-m buckling mode',
     1    ' involves significant sidesway of the stringer web.',
     1    ' ***** END NOTE ****** END NOTE ***** END NOTE *********'
                  IF (IWEBL8.EQ.1.AND.NPRT.GE.2)
     1            WRITE(IFILE,'(/,A,/,A,/,A,/,A)')
     1    ' ******* NOTE ********** NOTE ******** NOTE *********',
     1    ' Discretized skin-stringer module hi-m buckling mode',
     1    ' involves significant crippling of the stringer web.',
     1    ' ***** END NOTE ****** END NOTE ***** END NOTE *********'
                  IF (IFLGL8.EQ.1.AND.NPRT.GE.2)
     1            WRITE(IFILE,'(/,A,/,A,/,A,/,A)')
     1    ' ******* NOTE ********** NOTE ******** NOTE *********',
     1    ' Discretized skin-stringer module hi-m buckling mode',
     1    ' involves significant crippling of the stringer flange.',
     1    ' ***** END NOTE ****** END NOTE ***** END NOTE *********'
C
               ENDIF
C   End of "ELSE" part of
C           (ITIPL8.EQ.0.AND.IWEBL8.EQ.0.AND.IFLGL8.EQ.0) condition.
C
               EIGLCS(9) = EIG
               IF (IFCT11.EQ.0)
     1         CALL LOCCON(1,0,IWEBL8,INUMTT,EIGLCS(9),1.0,
     1         FSLOC,ISTIF,IGENRL,EIGLCS(9),IMOD,NLOC(9),NLOC(9),
     1         NLOC(9),CONMAX,IPOINC,CONSTR,ICONST,WORDB,0,ITIPL8,
     1         KOUBCK,8,IFLGL8)
C
               EIGDIS(9) = EIGLCS(9)
            ENDIF
C    End of (IHIGHM.EQ.1) condition.
C
          ENDIF
C End of (IMOD.EQ.0) condition
C
          IF (IMOD.EQ.1.AND.IHIGHM.EQ.1.AND.IFCT11.EQ.0) THEN
            CALL TRANS2(M3,YLOC9,Y)
 9464       CONTINUE
            ILABEL=9464
            IF (NPRT.GE.1) WRITE(IFILE,*) 
     1               ' LABEL NO. IN STRUCT=',ILABEL
            CALL BUCKLE(NLOC(9),IMOD,IFILE,IW,ILOC,DS,AS,BS,0,DIAG,C,
     1        D,DI,X,Y,Z,EIG,1,IYLOC9,RESULT,B(2),M3,IDRW,
     1        NBLK,NGBK,NKF,0,IMAXB,KMAXB,IPV2,IBVC,1000,
     1        1,THERMX,THERMS,P,KAPPA1,KAPPA2,0,WPRES,IUNK,
     1        CS,FNX,FNY,FNXY,FXBEG,FXEND,FYBEG,FYEND,FXYBEG,FXYEND,
     1        FNX0,FNY0,FNXY0,R,JJJ,1,IABP,LENMOD,0,TEMP,IMTEMP,
     1        WPB1,EIGITR(19),0,0.,0,0,0,ILABEL)
C
            EIG = ABS(EIG)
C
            CALL SHRRED(IREDUC,RESEIG(1,3,1),RESEIG(2,3,1),
     1                     RESEIG(3,3,1),TX(3),TX(3),GTX(1,3),
     1                     EIG,NPRT,IMOD,JJJ,0.,0.,0,
     1                     RESFIX(1,3,1),RESFIX(2,3,1),28)
C
            IF (NPRT.GE.2) WRITE(IFILE,'(A,I3,1P,E12.4)')
     1    ' skin-stringer module: hi-m axial halfwaves, eigenvalue=',
     1      NLOC(9),EIG
            CALL LOCCON(1,0,IWEBL8,INUMTT,EIG,1.0,
     1         FSLOC,ISTIF,IGENRL,EIG,IMOD,NLOC(9),NLOC(9),
     1         NLOC(9),CONMAX,IPOINC,CONSTR,ICONST,WORDB,0,ITIPL8,
     1         KOUBCK,8,IFLGL8)
C
          ENDIF
C End of (IMOD.EQ.1.AND.IHIGHM.EQ.1.AND.IFCT11.EQ.0) condition.
         ENDIF
C   End of (IHILOC.EQ.1) condition.
C
C END FEB 2009
C BEG FEB 2009
         IF (IHILOC.EQ.0) GO TO 9469
         IF (KLAYER(1,1).EQ.0.OR.ISOSUB(1,1,1).NE.0) GO TO 9469 
C
C  Do discretized skin-substringer module buckling analysis...
C
          CALL MOVER(CXX0(1,1,1),1,CXXSUB(1,1,1),1,36)
          CALL MOVER(CXX0(1,1,1),1,CXXSUB(1,1,2),1,36)
          CALL MOVER(CSUBX(1,1), 1,CXXSUB(1,1,3),1,36)
C
          IF (IMOD.EQ.0) THEN
C
             IF (NPRT.GE.1)
     1       WRITE(IFILE,'(/,/,/,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************',
     1' ************          CHAPTER 20c            *****************',
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************'
         IF (NPRT.GE.0) WRITE(IFILE,'(A,I3,A)')
     1' **** CHAPTER 20c: DESIGN PERTURBATION INDEX, IMOD=',IMOD,' ****'
         IF (NPRT.GE.1) WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A)')
     1 ' *************************************************************',
     1 ' CHAPTER 20c Compute buckling of a single discretized',
     1 '            skin-substringer module. See panda2.news Item 764.',
     1 '            The axial length of the module is equal to the',
     1 '            spacing of the subrings, and the width of the',
     1 '            module is equal to the spacing of the substringers.'
C
C  LOCAL BUCKLING OF DISCRETIZED SKIN-SUBSTRINGER SINGLE MODULE MODEL
            MSTART = 1 
            MHIGH1 = FLOAT(MSTART) + 2.*BSUBX(2)/HSUBX(1) + 1.
            MEND = MAX(3*MSTART, MHIGH1)
            IWRITE = 0
            MDLOC = 0.07*FLOAT(MSTART) + 1.
            MHILOC = MSTART - MDLOC 
            IF (NPRT.GE.2)
     1       WRITE(IFILE,'(/,A,I4,A,I4,A,/,A,1P,E12.4,/,A,1P,E12.4)')
     1    ' Find the skin-substringer module buckling from m=',MSTART,
     1    ' to ',MEND,' axial halfwaves.',
     1    ' The spacing of the subrings,    BSUBX(2)=',BSUBX(2),
     1    ' The height of the substringers, HSUBX(1)=',HSUBX(1)
            KOUNT = 0
  634       CONTINUE
            KOUNT = KOUNT + 1
            MHILOC = MHILOC + MDLOC 
            MDLOC = 0.07*FLOAT(MHILOC) + 1.
            IYLC10 = 0
 9465       CONTINUE
            ILABEL=9465
            IF (NPRT.GE.1.AND.KOUNT.EQ.1) WRITE(IFILE,*)
     1               ' LABEL NO. IN STRUCT=',ILABEL
C23456789012345678901234567890123456789012345678901234567890123456789012
C
            CALL BUCKLE(MHILOC,IMOD,IFILE,IWZ,ILOCZ,DSZ,AS,BS,0,DIAG,C,
     1        D,DI,X,Y,Z,EIG,1,IYLC10,RESULT,BSUBX(2),M3Z,IDRWZ,
     1        NBLKZ,NGBKZ,NKFZ,0,IMAXBZ,KMAXBZ,IPV2Z,IBVCZ,1000,
     1        1,THRMX0,THERMX(1,1),P,KAPPA1,KAPPA2,0,0.,IUNK,
     1        CX(1,1,1),NXVAR(1,1),NYVAR(1,1),NXYVAR(1,1),0.,0.,0.,0.,
     1        0.,0.,NXFIX(1,1),NYFIX(1,1),NXYFIX(1,1),R,JJJ,1,IABP,
     1        1.,0,TEMP,IMTEMP,0.,EIGITR(21),0,0.,IWRITE,0,0,ILABEL)
C
            IF (EIG.LE.0.0.AND.IMOD.EQ.0.AND.JJJ.EQ.0) THEN
               WRITE(IFILE,23) ABS(EIG)
               CALL LOADBA(32)
               IF (IRESTY.EQ.1) GO TO 2222
            ENDIF
C
            EIG = ABS(EIG)
            CALL SHRRED(IREDUC,NXVSUB(1,1),NYVSUB(1,1),NXYVSB(1,1),
     1         TSUB(1,1,1),TSUB(1,1,1),GTX0(1,1),
     1         EIG,NPRT,IMOD,JJJ,0.,0.,0,NXFSUB(1,1),NYFSUB(1,1),29)
C
            IF (KOUNT.LT.100) THEN
               ISTOPP = 0
               EIGSUB(KOUNT) = EIG
               NSUB(KOUNT) = MHILOC 
               MMAXSB = MHILOC
            ELSE
               ISTOPP = 1
            ENDIF
            MMINSB = 1
C
            IF (MHILOC.LT.MEND.AND.ISTOPP.EQ.0) GO TO 634 
C
            IF (NPRT.GE.1) WRITE(IFILE,'(/,A,A,I4,/,A)')
     1    ' Buckling of single module skin-substringer model.',
     1    ' KOUNT=',KOUNT,
     1    ' Axial halfwaves    Eigenvalue (buckling load factor)'
            EIGMIN = 10.E+21
            DO 635 I = 1,KOUNT
               EIGMIN = MIN(EIGMIN,EIGSUB(I))
               IF (NPRT.GE.1)
     1          WRITE(IFILE,'(I10,1P,E14.6)') NSUB(I),EIGSUB(I)
  635       CONTINUE
            DO 636 I = 1,KOUNT
               DIFF = ABS(EIGSUB(I) - EIGMIN)/EIGMIN
               IF (DIFF.LT.0.0001) THEN
                  MCRSUB = NSUB(I)
                  GO TO 637
               ENDIF
  636       CONTINUE
  637       CONTINUE
 9466       CONTINUE
            ILABEL = 9466
            IF (NPRT.GE.1) WRITE(IFILE,*)
     1            ' LABEL NO. IN STRUCT=',ILABEL
C
            IYLC10 = 0
            CALL BUCKLE(MCRSUB,IMOD,IFILE,IWZ,ILOCZ,DSZ,AS,BS,0,DIAG,C,
     1        D,DI,X,Y,Z,EIG,1,IYLC10,RESULT,BSUBX(2),M3Z,IDRWZ,
     1        NBLKZ,NGBKZ,NKFZ,0,IMAXBZ,KMAXBZ,IPV2Z,IBVCZ,1000,
     1        1,THRMX0,THERMX(1,1),P,KAPPA1,KAPPA2,0,0.,IUNK,
     1        CX(1,1,1),NXVAR(1,1),NYVAR(1,1),NXYVAR(1,1),0.,0.,0.,0.,
     1        0.,0.,NXFIX(1,1),NYFIX(1,1),NXYFIX(1,1),R,JJJ,1,IABP,
     1        1.,0,TEMP,IMTEMP,0.,EIGITR(21),0,0.,IWRITE,0,0,ILABEL)
C
            IF (EIG.LE.0.0.AND.IMOD.EQ.0.AND.JJJ.EQ.0) THEN
               WRITE(IFILE,23) ABS(EIG)
               CALL LOADBA(33)
               IF (IRESTY.EQ.1) GO TO 2222
            ENDIF
C
            EIG = ABS(EIG)
            CALL SHRRED(IREDUC,NXVSUB(1,1),NYVSUB(1,1),NXYVSB(1,1),
     1         TSUB(1,1,1),TSUB(1,1,1),GTX0(1,1),
     1         EIG,NPRT,IMOD,JJJ,0.,0.,0,NXFSUB(1,1),NYFSUB(1,1),30)
C
            CALL TRANS1(M3Z,Y,YLOC10)
            IYLC10 = 1
            EIGLCS(10) = EIG
            NLOC(10)   = MCRSUB
            IF (NPRT.GE.2)
     1        WRITE(IFILE,'(I9,1P,E20.4)') NLOC(10),EIG
C
            ITIPPL = 0
            ICWBRG = 0
            IFLGPP = 0
            FKNDUM = 1.0
            PI = 3.1415927
            FN = NLOC(10)
            NPB = (PI*FN/(2.*BSUBX(2)))**2
            IZDUM(1) = 0
            IZDUM(2) = 0
            IFAYDM(1) = 0
            IFAYDM(2) = 0
            ZPARTQ(1) = 0.
            ZPARTQ(2) = 0.
            ZPARTQ(3) = 0.5*TSKINX(1) +0.5*HSUBX(1)
            ZPARTQ(4) = 0.
            ZPARTQ(5) = 0.
            CALL MOVER(0.,0,RESLTZ,1,30)
            RESLTZ(2,1,1) = NYVSUB(1,1)
            CALL TRANS2(M3Z,YLOC10,Y)
            IF (NPRT.GE.1) WRITE(IFILE,'(/,A)')
     1' ** BEGIN SUB. MODE (SKIN-SUBSTRINGER MODULE BUCKLNG MODE) **'
C
C23456789012345678901234567890123456789012345678901234567890123456789012
            CALL MODE(IFILE,NPRT,NSEGZ,I5Z,IWZ,DSZ,M3Z,Y,ISKN12,1,0,
     1       ZPARTQ,NPB,CXXSUB,1,0.,EIG,
     1       RMAX,ITIPPL,ICWBRG,IMOD,
     1       WW8,WD8,WDD8,UU8,VV8,VP8,ZREF,NLOC(10),FKNDUM,
     1       FKNDUM,ICRNRG,P,IFCT12,WDDD8,13,0,TSKINX,1,0,
     1       INTSNG,RAD2,TSKINY,IZDUM,BSUBX,B2SUBX,HSUBX,WSUBX,W2SUBX,
     1       B0SUB,B20SUB,H0SUB,W0SUB,W20SUB,ISTFSB,INTXSB,IFAYDM,0,0,
     1       AXIAL,CIRC,ICRIP,ISEGC,WRATIO,WTIPWS,WRATTP,
     1       WRATWB,WRATCN,WRWIDE,WIDLMM,PEDG,ISOSUB(1,1,1),
     1       RESLTZ,IFLGPP)
C
            ITIPL9 = ITIPPL
            IWEBL9 = ICWBRG
            IFLGL9 = IFLGPP
            IF (IFCT12.NE.0) THEN
               WRITE(IFILE,'(/,A,/,A,/,A,/,A,/)')
     1       ' ******* NOTE ******* NOTE ******* NOTE ******',
     1       ' Since the mode is FICTITIOUS, the discretized',
     1       ' skin-substringer module model will not be used.',
     1       ' ***** END NOTE *** END NOTE **** END NOTE ***'
            ENDIF
            IF (NPRT.GE.1) WRITE(IFILE,*)
     1' **** END SUB. MODE (SKIN-SUBSTRINGER MODULE BUCKLNG MODE) **'
            IF (ITIPL9.EQ.0.AND.IWEBL9.EQ.0.AND.IFLGL9.EQ.0) THEN
C23456789012345678901234567890123456789012345678901234567890123456789012
               WRITE(IFILE,'(/,A,/,A,/,A,/,A)')
     1    ' ******* NOTE ********** NOTE ******** NOTE *********',
     1    ' Discretized skin-substringer module buckling mode',
     1    ' involves significant deformation of the panel skin.',
     1    ' ***** END NOTE ****** END NOTE ***** END NOTE *********'
C
            ELSE
C    End of (ITIPL9.EQ.0.AND.IWEBL9.EQ.0.AND.IFLGL9.EQ.0) condition.
C
               IF (ITIPL9.EQ.1.AND.NPRT.GE.2)
     1         WRITE(IFILE,'(/,A,/,A,/,A,/,A)')
     1    ' ******* NOTE ********** NOTE ******** NOTE *********',
     1    ' Discretized skin-substringer module buckling mode',
     1    ' involves significant sidesway of the substringer web.',
     1    ' ***** END NOTE ****** END NOTE ***** END NOTE *********'
               IF (IWEBL9.EQ.1.AND.NPRT.GE.2)
     1         WRITE(IFILE,'(/,A,/,A,/,A,/,A)')
     1    ' ******* NOTE ********** NOTE ******** NOTE *********',
     1    ' Discretized skin-substringer module buckling mode',
     1    ' involves significant crippling of the substringer web.',
     1    ' ***** END NOTE ****** END NOTE ***** END NOTE *********'
               IF (IFLGL9.EQ.1.AND.NPRT.GE.2)
     1         WRITE(IFILE,'(/,A,/,A,/,A,/,A)')
     1    ' ******* NOTE ********** NOTE ******** NOTE *********',
     1    ' Discretized skin-subtringer module buckling mode',
     1    ' involves significant crippling of the subtringer flange.',
     1    ' ***** END NOTE ****** END NOTE ***** END NOTE *********'
C23456789012345678901234567890123456789012345678901234567890123456789012
C
            ENDIF
C   End of "ELSE" part of
C           (ITIPL9.EQ.0.AND.IWEBL9.EQ.0.AND.IFLGL9.EQ.0) condition.
C
            IF (IFCT12.EQ.0)
     1      CALL LOCCON(1,0,IWEBL9,INUMTT,EIGLCS(10),1.0,
     1      FSLOC,ISTFSB,IGENRL,EIGLCS(10),IMOD,NLOC(10),NLOC(10),
     1      NLOC(10),CONMAX,IPOINC,CONSTR,ICONST,WORDB,0,ITIPL9,
     1      KOUBCK,9,IFLGL9)
          ENDIF
C       End of IMOD.EQ.0) condition.
C
          IF (IMOD.EQ.1.AND.IFCT12.EQ.0) THEN
            IWRITE = 0
            CALL TRANS2(M3Z,YLOC10,Y)
 9467       CONTINUE
            ILABEL=9467
            IF (NPRT.GE.1) WRITE(IFILE,*)
     1               ' LABEL NO. IN STRUCT=',ILABEL
C
C23456789012345678901234567890123456789012345678901234567890123456789012
            CALL BUCKLE(NLOC(10),IMOD,IFILE,IWZ,ILOCZ,DSZ,AS,BS,0,DIAG,
     1        C,D,DI,X,Y,Z,EIG,1,IYLC10,RESULT,BSUBX(2),M3Z,IDRWZ,
     1        NBLKZ,NGBKZ,NKFZ,0,IMAXBZ,KMAXBZ,IPV2Z,IBVCZ,1000,
     1        1,THRMX0,THERMX(1,1),P,KAPPA1,KAPPA2,0,0.,IUNK,
     1        CX(1,1,1),NXVAR(1,1),NYVAR(1,1),NXYVAR(1,1),0.,0.,0.,0.,
     1        0.,0.,NXFIX(1,1),NYFIX(1,1),NXYFIX(1,1),R,JJJ,1,IABP,
     1        1.,0,TEMP,IMTEMP,0.,EIGITR(21),0,0.,IWRITE,0,0,ILABEL)
C
            EIG = ABS(EIG)
            CALL SHRRED(IREDUC,NXVSUB(1,1),NYVSUB(1,1),NXYVSB(1,1),
     1         TSUB(1,1,1),TSUB(1,1,1),GTX0(1,1),
     1         EIG,NPRT,IMOD,JJJ,0.,0.,0,NXFSUB(1,1),NYFSUB(1,1),31)
C
            IF (NPRT.GE.2) WRITE(IFILE,'(A,I3,1P,E12.4)')
     1    ' buckling of skin-substringer module, eigenvalue=',
     1      NLOC(10),EIG
C
            CALL LOCCON(1,0,IWEBL9,INUMTT,EIG,1.0,
     1      FSLOC,ISTFSB,IGENRL,EIG,IMOD,NLOC(10),NLOC(10),
     1      NLOC(10),CONMAX,IPOINC,CONSTR,ICONST,WORDB,0,ITIPL9,
     1      KOUBCK,9,IFLGL9)
C
          ENDIF
C End of (IMOD.EQ.1.AND.IFCT12.EQ.0) condition.
 9469    CONTINUE
C END FEB 2009
C
      ENDIF
C End of (IBEAM.EQ.1.OR.(ISTIF(1).LT.4.AND.ISTIF(1).GT.0)) condition.
C
C
C
      IF (IBEAM.EQ.0.AND.ISTIF(1).EQ.4
     1              .AND.IFNHAT(ILOADS,ICASE).EQ.0) THEN
C END MAR 1996
C
C**********************************************************************
C BEGIN CALCULATION OF "FUNNY" INTER-RING BUCKLING MODE IN WHICH THE
C SKIN MIDWAY BETWEEN HAT STRINGERS IS SIMPLY SUPPORTED. BELIEVE IT OR
C NOT, THIS MODE IS SOMETIMES ASSOCIATED WITH A BUCKLING LOAD FACTOR
C THAT IS LOWER THAN THAN CORRESPONDING TO WIDE-COLUMN BUCKLING. THE
C DISCRETIZED SINGLE PANEL MODEL IS AGAIN USED.
C**********************************************************************
C
         IF (IMOD.EQ.1) CALL TRANS2(M3,YGEN2,Y)
         IF (IMOD.EQ.0) IYGEN2 = 0
         IF (IYGEN2.EQ.1.AND.IMOD.EQ.0) CALL TRANS2(M3,YGEN2,Y)
         ISTRT = 0
         IF (IMOD.EQ.0) ISTRT = 1
         IF (NPRT.GE.0) WRITE(IFILE,'(A,I3,A)')
     1' **** CHAPTER 20: DESIGN PERTURBATION INDEX, IMOD=',IMOD,' ****'
         IF (NPRT.GE.1) WRITE(IFILE,'(/,A,/,A,/,A)')
     1 ' *************************************************************',
     1 ' CHAPTER 20, special "hat" branch (funny hat buckling):',
     1 ' *** BEGIN SUBROUTINE BUCKLE (FUNNY HAT BUCKLING - MODULE) ****'
C BEG AUG 2001
 9470    CONTINUE
         ILABEL=9470
         IF (NPRT.GE.1) WRITE(IFILE,*) 
     1               ' LABEL NO. IN STRUCT=',ILABEL
C END AUG 2001
         CALL BUCKLE(1,IMOD,IFILE,IW,ILOC,DS,AS,BS,ISTRT,DIAG,C,D,DI,
     1      X,Y,Z,EIG,0,IYGEN2,RESULT,AXLEN,M3,IDRW,
     1      NBLK,NGBK,NKF,-4,IMAXB,KMAXB,IPV2,IBVC,1000,1,THERMX,
     1      THERMS,P,KAPPA1,KAPPA2,0,WPRES,IUNK,CS,
     1      FNX,FNY,FNXY,FXBEG,FXEND,FYBEG,FYEND,FXYBEG,FXYEND,
     1      FNX0,FNY0,FNXY0,R,JJJ,1,IABP,LENMOD,0,
C BEG AUG 2001
     1      TEMP(1,1),IMTEMP,WPB1,EIGITR(15),0,0.,0,0,0,ILABEL)
C END AUG 2001
         IF (NPRT.GE.0) WRITE(IFILE,*)
     1  '**** END SUBROUTINE BUCKLE (FUNNY HAT BUCKLING - MODULE) ****'
C BEG JUL 1999
         IF (NPRT.GE.0) WRITE(IFILE,'(/,A)')
     1'*** BEGIN SUBROUTINE MODE (FUNNY HAT BUCKLING MODE SHAPE) ****'
         IF (IMOD.EQ.0) THEN
            CALL MODE(IFILE,NPRT,NSEGB5,I5,IW,DS,M3,Y,ISKINT,
C BEG JUL 1999
     1             0,-4,ZPARTX,NPB,CX,1,WPRES,EIG,R,ITIPT,ICWEBT,IMOD,
C END JUL 1999
     1             WW1,WD1,WDD1,UU1,VV1,VP1,ZREF,1,FKNOCK(2),
C BEG JUN 2004
     1             FKNOCK(3),ICRWNT,P,IFICT7,WDDD,8,0,TX,1,0,
     1    INTSNG,RAD2,TY,IZSTIF,B,B2,H,W,W2,
     1    B0,B20,H0,WW0,W20,ISTIF,INTEXT,IFAY,IBEAM,IONEST,
     1    AXIAL,CIRC,ICRIP,ISEGC,WRATIO,WTIPWS,WRATTP,
     1    WRATWB,WRATCN,WRWIDE,WIDLMM,PEDG,ISOGRD,RESULT,IFLGT)
C END JUN 2004
            IF (NPRT.GE.0) WRITE(IFILE,*)
     1'**** END SUBROUTINE MODE (FUNNY HAT BUCKLING MODE SHAPE) ****'
            IF (IFICT7.EQ.1) THEN
               IFNHAT(ILOADS,ICASE) = 1
               GO TO 68
            ENDIF
         ENDIF
C        WRITE(8,7003) IMOD,IYGEN2,M3,EIG,(Y(I),I=1,M3)
C7003    FORMAT(/' AFTER CALL BUCKLE, IMOD,IYGEN2,M3,EIG=',3I5,1PE12.4,
C    1 ' BUCKLING MODE SHAPE, Y(I)='/(1P,5E12.4))
C END JUL 1999
         EIGPRD = FKNOCK(4)*EIG
         EIGDIS(4) = EIGPRD
         IF (ITYPE.EQ.1.AND.IMOD.EQ.0.AND.JJJ.GT.0
     1      .AND.EIGDIS(4).GT.1.5*EIGDIS(2).AND.EIGDIS(4).GT.1.2) THEN
            IFNHAT(ILOADS,ICASE) = 1
            WRITE(IFILE,*)' FUNNY HAT BUCKLING LOAD FACTOR IS GREATER'
            WRITE(IFILE,*)' THAN 1.5 X WIDE-COLUMN BUCKLING FACTOR.'
            WRITE(IFILE,*)' DROPPING FUNNY HAT BUCKLING CALCULATION.'
            GO TO 68
         ENDIF
         IYGEN2 = 1
         INUMTT = INUMTT + 1
C BEG FEB 1996
         IF (EIG.LE.0.0.AND.IMOD.EQ.0.AND.JJJ.EQ.0) THEN
            WRITE(IFILE,23) ABS(EIG)
C BEG FEB 1999
            CALL LOADBA(21)
C END FEB 1999
            IF (IRESTY.EQ.1) GO TO 2222
         ENDIF
C END FEB 1996
         EIG = ABS(EIG)
C BEG JUL 1999
C        EIGCON = EIGPRD/FSPAN
         EIGCON = ABS(EIGPRD)/FSPAN
C END JUL 1999
         IF (EIGCON.LT.0.) GO TO 6200
         CALL CONVRF(FSPAN,CN2)
         IF (IMOD.EQ.0.AND.EIGCON.LT.MAXCON) THEN
            ICAR = ICAR + 1
            PCWORD(ICAR) =
     1     'Funny hat buckling'
            CPLOT(ICAR) = EIGCON - 1.
            IADDCC(ICAR) = 0
            FSAFEP(ICAR) = FSPAN
         ENDIF
         IF (IMOD.EQ.0.AND.EIGCON.GT.CONMAX) GO TO 6200
         IF (IMOD.EQ.1.AND.IPOINC(INUMTT).EQ.0) GO TO 6200
         ICONST = ICONST + 1
         IF (IMOD.EQ.0) IPOINC(INUMTT) = 1
         CONSTR(ICONST) = EIGCON
         WORDB(ICONST)=
     1  '(Funny hat buckling load factor)/(F.S.) -1; FS='//CN2
         IF (ISTIF(1).NE.0.AND.(EIGCON*FSPAN).LT.1.0) ISTOP = 1
C BEG APR 2007
         IF (NPRT.GE.0) WRITE(IFILE,'(A,1P,E12.4,2X,A)')
     1 ' Margin=',CONSTR(ICONST)-1.,WORDB(ICONST)
C END APR 2007
C BEG AUG 1995
C23456789012345678901234567890123456789012345678901234567890123456789012
         IF (NPRT.GE.2) WRITE(IFILE,'(A,/,A,/,A,I3,A,I2,A,I2)')
     1 ' ******* THE "FUNNY HAT" BUCKLING MARGIN WAS JUST COMPUTED:',
     1   WORDB(ICONST),
     1 ' ******* CONSTRAINT NO.',ICONST,'; LOAD SET NO.',ILOADS,
     1 '; SUBCASE NO.',ICASE
C END AUG 1995
 6200    CONTINUE
         IF ((IMOD.EQ.0.AND.JJJ.EQ.0.AND.NPRT.GE.1).OR.NPRT.GE.2)
     1           WRITE(IFILE,6300) EIGPRD
 6300    FORMAT('  FUNNY HAT BUCKLING LOAD FACTOR = ',7X,1PE12.4)
         IF (IMOD.EQ.0) CALL TRANS1(M3,Y,YGEN2)
         IF ((IMOD.EQ.0.AND.JJJ.EQ.0.AND.NPRT.GE.1).OR.NPRT.GE.2)
     1   WRITE(IFILE,*)
     1  ' *** END OF FUNNY HAT BUCKLING CALCULATIONS ***'
      ENDIF
C End of (IBEAM.EQ.0.AND.ISTIF(1).EQ.4
C            .AND.IFNHAT(ILOADS,ICASE).EQ.0) condition. 
C
C**********************************************************************
C END CALCULATION OF FUNNY HAT BUCKLING LOAD FACTOR FROM SKIN-STRINGER
C PANEL MODULE MODEL
C**********************************************************************
C
   68 CONTINUE
         IF (ITYPE.EQ.1.AND.NPRT.GE.2)
     1    WRITE(IFILE,*)' AFTER WIDE C: IMOD,INUMTT,ICONST=',
     1                                  IMOD,INUMTT,ICONST
C
C BEG JULY 2007
      IF (NPRT.GE.1) THEN
      IF (NPRT.GE.0) WRITE(IFILE,'(A,I3,A)')
     1' ** CHAPTER 21,22: DESIGN PERTURBATION INDEX, IMOD=',IMOD,' ***'
      IF (IFLAT.NE.0.OR.ISTIF(2).GE.4.OR.ISTIF(2).EQ.0)
     1 WRITE(IFILE,'(/,A,/,A,/,A,/A,/,A)')
     1' *************************************************************',
     1' CHAPTER 21 (smeared ring knockdown factor) and',
     1' CHAPTER 22 ("skin"-ring buckling) are not executed because', 
     1' the panel is flat or there are no rings or the rings are',
     1' either hats or truss-core configuration.'
      ENDIF
C END JULY 2007
      IF (IFLAT.NE.0) GO TO 871
      IF (ISTIF(2).GE.4) GO TO 871
C BEG AUG 2005
      IF (ISTIF(2).EQ.0) GO TO 871
C END AUG 2005
C END JULY 2007
C BEG OCT 1998
C*********************************************************************
C BEGIN CALCULATION OF "SKIN"-RING BUCKLING USING DISCRETIZED MODEL
C OF INTER-RING PANEL WITH SMEARED STRINGERS AND DISCRETIZED RING
C*********************************************************************
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG OCT 2006
      IF (NPRT.GE.2) WRITE(IFILE,'(/,/,/,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************',
     1' ************          CHAPTER 21             *****************',
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************'
      IF (NPRT.GE.0) WRITE(IFILE,'(A,I3,A)')
     1' **** CHAPTER 21: DESIGN PERTURBATION INDEX, IMOD=',IMOD,' ****'
      IF (NPRT.GE.1) WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1 ' *************************************************************',
     1 ' CHAPTER 21 Compute "skin"-ring buckling load factor for',
     1 '            computing knockdown to compensate for inherent',
     1 '            unconservativeness of smeared ring models.',
     1 '            (See bottom row in Fig. 30 of Ref.[1G]. Also see',
     1 '            panda2.news Items 509, 511, 522, 532, 605, 617',
     1 '            619, 632, 633, 676.'
C END OCT 2006
C BEG DEC 2005
      IF (NPRT.GE.2) THEN
        WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' *** BEGIN "SKIN"-RING BUCKLING, DISCRETE MODULE MODEL ***',
     1' See Item No. 463 of the file, ../doc/panda2.news and Ref.[6]:',
     1' Bushnell, D., et al, "Additional buckling solutions in PANDA2"',
     1' AIAA Paper 99-1233, Proc. 40th AIAA Structures and Materials',
     1' Conference, pp 302-345 (1999) [6]. See especially pp 318-323',
     1' and Figs. 30-33. Also, read ITEMs 509, 511, 522, 605 of the',
     1' file, ..panda2/doc/panda2.news, about how PANDA2 develops a',
     1' knockdown factor to compensate for the unconservativeness of',
     1' buckling models in which the rings are smeared out.'
C23456789012345678901234567890123456789012345678901234567890123456789012
       WRITE(IFILE,
     1 '(/,A,/,A,/,A,I2,/,A,I2,/,A,I2,/,A,1P,E12.4,/,A,1P,E12.4)')
     1' Check to see if "skin"-ring discretized model is analyzed.',
     1' Whether it is or not depends on the following quantities:',
     1'  Is the panel curved (IFLAT = 0)?,              IFLAT=',IFLAT,
     1'  What is the ring cross section?,            ISTIF(2)=',
     1 ISTIF(2),
     1'  Did PANDA2 compute resultants at IXNUMB pts in SKIN?, IXNUMB=',
     1 IXNUMB,
     1'  Is the applied axial resultant in Load Set A negative,    Nx=',
     1 FNX,
     1'  Is the applied hoop  resultant in Load Set A negative,    Ny=',
     1 FNY
C23456789012345678901234567890123456789012345678901234567890123456789012
      WRITE(IFILE,'(A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4)')
     1'  Is the average hoop load in the panel skin negative,  FNYAVE=',
     1 FNYAVE,
     1'  Is the average hoop load in the ring web negative,    FCEWEB=',
     1 FCEWEB,
     1'  Is the average hoop load in the ring flange negative, FCEFLG=',
     1 FCEFLG,
     1'  Is in-plane shear load Nxy .LT. 2*SQRT(Nx**2 + Ny**2),   Nxy=',
     1 FNXY
      ENDIF
C  End of (NPRT.GE.2) condition.
C END DEC 2005
C
C BEG JULY 2007
C several "go to 871" statements moved up.
C END JULY 2007
C
C BEG AUG 2001 (moved up from below for ring-smear knockdown factor
         IF (PEDG.AND.IMOD.EQ.0.AND.ISTIF(2).NE.0.AND.ICASE.EQ.1) THEN
C BEG JUL 2007
            NVECXS = NVECX
C END JUL 2007
C  Get buckling of infinitely long, ring-stiff. cylindrical shell
C  with n = NGENNW circ. waves and symmetry imposed at bottom and top
C  of the discretized skin-smeared-stringer-ring single module model.
C BEG JUL 2007
            IKOUNT = 0
C END JUL 2007
 9480       CONTINUE
C BEG JUL 2007
            IKOUNT = IKOUNT + 1 
C END JUL 2007
            ILABEL=9480
            IF (NPRT.GE.1) WRITE(IFILE,*) 
     1               ' LABEL NO. IN STRUCT=',ILABEL
            FNGENC = PI*ABS(R)/CIRC
            IF (FNGENC.LE.1.0) FNGENC = 1.00001
            NGENNW = FLOAT(NGENQQ)*FNGENC + 0.5
            IF (NGENNW.LT.2) NGENNW = 2
C BEG FEB 2007
            NGNOLD = NGENNW
C           NGENNW = MAX(NGNOLD,NUSER(ILOADS))
C END FEB 2007
            PEXTNL = ABS(P)
            PACTUL = ABS(P)
            IF (PRESS(ILOADS).EQ.0.) PEXTNL = 1.0
            IF (NPRT.GE.0) WRITE(IFILE,'(/,A,/,A,1PE12.4,/,A,I3)')
     1     '*** Infinite cyl, external lateral pressure) **',
     1     ' Uniform external lateral pressure,      PRESS=',PEXTNL,
     1     ' Buck. circ. halfwaves from PANDA-type, NGENQQ=',NGENQQ
            IF (NPRT.GE.1) WRITE(IFILE,'(A,I3,/,A)')
     1     ' Buck. circ. halfwaves over arc=pi*r,   NGENNW=',NGENNW,
     1     ' NGENNW is used for the buckling analysis in BUCKLE.'
C
C BEG NOV 2001
            CIRCSY = CIRC
            CIRC = 3.1415927*ABS(R)
C END NOV 2001
C BEG APR 2007
            IF (NPRT.GE.0) WRITE(IFILE,'(/,A,I4,A)')
     1    ' ** BEGIN SUB. BUCKLE ("SKIN"-RING n=',NGENNW,
     1    ' GENERAL BUCKLNG MODEL) **'
C END APR 2007
            CALL BUCKLE(NGENNW,IMOD,IFILE,IWR,ILOCR,DSR,ASR,BSR,0,
     1      DIAGR,CRX,DRX,DIR,XR,YR,ZR,EIGR,1,IYLOC7,RESULT,CIRC,M3R,
     1      IDRWR,NBLKR,NGBKR,NKFR,2,IMAXBR,KMAXBR,IPV2R,IBVCR,1000,1,
     1      THERMX,THERMS,PEXTNL,KAPPA1,KAPPA2,0,WPRES,IUNK,CS,
     1      0.,FNY,FNXY,0.,0.,FYBEG,FYEND,FXYBEG,FXYEND,
     1      0.,FNY0,FNXY0,R,JJJ,1,IABP,LENMOD,0,
C BEG MAR 2005
     1      TEMP(1,1),IMTEMP,WPB1,EIGITR(17),0,DNWAVX,0,0,0,ILABEL)
C END MAR 2005
C BEG APR 2007
            IF (NPRT.GE.0) WRITE(IFILE,'(A,I4,A)')
     1    ' **  END  SUB. BUCKLE ("SKIN"-RING n=',NGENNW,
     1    ' GENERAL BUCKLNG MODEL) **'
C END APR 2007
C
            ITIPPL = 0
C BEG OCT 2004
            IFLGPP = 0
C END OCT 2004
            ICWBRG = 0
            FKNDUM = 1.0
C BEG NOV 2001
            IF (NPRT.GE.0) WRITE(IFILE,'(/,A,I4,A)')
     1    ' ** BEGIN SUB. MODE ("SKIN"-RING n=',NGENNW,
     1    ' GENERAL BUCKLNG MODE) **'
C END NOV 2001
            CALL MODE(IFILE,NPRT,NSEGR,I5R,IWR,DSR,M3R,YR,ISKN10,
     1          1,2, ZPARTY,0.,CY,1,WPRES,EIGR,
     1          RMAX,ITIPPL,ICWBRG,IMOD,
C BEG NOV 2001
     1          WW6,WD6,WDD6,UU6,VV6,VP6,ZREFRG,NGENNW,FKNSRG(2),
C END NOV 2001
     1          FKNDUM,ICRNRG,PEXTNL,IFICT9,WDDD6,10,0,TY,2,0,
     1    INTSNG,RAD2,TY,IZSTIF,B,B2,H,W,W2,
     1    B0,B20,H0,WW0,W20,ISTIF,INTEXT,IFAY,IBEAM,IONEST,
     1    AXIAL,CIRC,ICRIP,ISEGC,WRATIO,WTIPWS,WRATTP,
     1    WRATWB,WRATCN,WRWIDE,WIDLMM,PEDG,ISOGRD,RESULT,IFLGPP)
C END JUN 2004
C
            ITIPL6 = ITIPPL
            IWEBL6 = ICWBRG
C BEG OCT 2004
            IFLGL6 = IFLGPP
C END OCT 2004
C BEG NOV 2001
            IF (NPRT.GE.0) WRITE(IFILE,'(A,I4,A)')
     1    ' **** END  SUB. MODE ("SKIN"-RING n=',NGENNW,
     1    ' GENERAL BUCKLNG MODE) **'
C END NOV 2001
            WFIRST = WW6(1,1)
            ILASTQ = I5R(NSEGR)
            WLAST  = WW6(ILASTQ,NSEGR)
            IMIDQ  = I5R(2)/2 + 1
            WMIDQ  = WW6(IMIDQ,2)
C BEG FEB 2007
            I5FLG  = I5R(4)
            WFLG   = 1.0
            WFLGW  = 1.0
            IF (ISTIF(2).EQ.1.OR.ISTIF(2).EQ.2) WFLG   = WW6(I5FLG,4)
            I5FLGW = 1
            IF (ISTIF(2).EQ.1) I5FLGW = I5FLG/2 + 1
            IF (ISTIF(2).EQ.1.OR.ISTIF(2).EQ.2) WFLGW  = WW6(I5FLGW,4)
            WFLGM = MAX(ABS(WFLG),ABS(WFLGW))
            WFLGDF = ABS(ABS(WFLG) - ABS(WFLGW))/WFLGM
            WFLGK  = ABS(1.0 - WFLGDF)
            IF (NPRT.GE.0) WRITE(IFILE,
     1   '(A,I3,A,/,A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4)')
     1    ' Mode shape properties for n=',NGENNW,' circ. halfwaves:',
     1    ' Normal displacement midway between rings,   WFIRST=',WFIRST,
     1    ' Normal displacement midway between rings,    WLAST=',WLAST,
     1    ' Normal displacement in skin at web root,     WMIDQ=',WMIDQ,
     1    ' Normal displacement in ring at flange tip,    WFLG=',WFLG
            IF (NPRT.GE.0)
     1      WRITE(IFILE,'(A,1P,E12.4,/A,1P,E12.4,/A,1P,E12.4)')
     1    ' Normal displacement, ring flange at web tip, WFLGW=',WFLGW,
     1    ' Normalized difference,     ABS(WFLG-WFLGW)/WFLGMAX=',WFLGDF,
     1    ' Possible candidate for knockdown factor,     WFLGK=',WFLGK
C END FEB 2007
C BEG JUL 2007
            IF (NPRT.GE.2) WRITE(IFILE,'(A,I2,A,1P,4E12.4)')
     1    ' Eigenvalues for ',IKOUNT,' roots:  EIGRPP= ',
     1                                            (ROOTX(I),I=1,IKOUNT)
C END JUL 2007
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG OCT 2004
            IF (ITIPL6.EQ.0.AND.IWEBL6.EQ.0.AND.IFLGL6.EQ.0
     1          .AND.WFIRST*WLAST.GT.0.0.AND.
     1          ABS(WMIDQ).GT.0.05*ABS(WFIRST+WLAST).AND.
     1          WFIRST*WMIDQ.GT.0.0) THEN
C END OCT 2004
C BEG JUL 2007
C              EIGRP = EIGR
               EIGRP = ROOTX(IKOUNT)
               EIGR = EIGRP
               IF (NPRT.GE.0) WRITE(IFILE,'(/,A,I2,A)')
     1       ' Mode number ',IKOUNT,' is     a suitable ring mode.'
C END JUL 2007
C BEG NOV 2001
               IF (NPRT.GE.0)
     1       WRITE(IFILE,'(A,1P,E12.4,/,A,I4,A,/,A,/,A,1P,E12.4,A,/,A)')
     1  ' Buckling load factor BEFORE knockdown for smeared stringers=',
     1            EIGRP,
     1       ' In this n=',NGENNW,
     1       ' general buckling analysis there is no knockdown',
     1       ' for smeared stringers.',
     1       ' NOTE: The buckling load factor,',EIGR,', will not be',
     1       ' further reduced by the "shear/anisotropy" factor.'
C END NOV 2001
C
C  Next, compute buckling load factor of "ring", that is, the infinite
C        cylindrical shell with all stiffeners smeared, buckling in the
C        n=NGENNW circ. wave mode. The formula for buckling of a "ring" of
C        unit axial length under uniform external pressure, p, is:
C        p(crit) = (n**2 - 1)*EI/r**3
C        in which the bending stiffness, EI = CS55 - CS25**2/CS22,
C        where CS = integrated constitutive matrix with all stiffeners
C        smeared.
C
C BEG NOV 2001
C BEG FEB 2007
              FNARCQ = FLOAT(NGNOLD) + DNWAVX
              FNARCQ = MAX(FNARCQ,FLOAT(NGENNW))
C END FEB 2007
C END NOV 2001
              EIGRNG = 
     1        ((FNARCQ**2-1.)*(CS(5,5)-CS(2,5)**2/CS(2,2))/(ABS(R))**3)/
     1                                           PEXTNL
               IF (EIGR.GT.0.0) RNGKNK = EIGR/EIGRNG
               IF (RNGKNK.GT.1.0) RNGKNK = 1.0
               IF (RNGKNK.LE.0.) RNGKNK = 1.0
C BEG FEB 2010
               IF (FNARCQ.GT.100.0) RNGKNK = 1.0
               IF (RNGKNK.LE.0.1) RNGKNK = 0.1
C END FEB 2010
C BEG OCT 2006
C BEG FEB 2007
C              IF (ICONSV.EQ.-1) RNGKNK = 1.0
               IF (ICONSV.EQ.-1.AND.WFLGDF.LT.0.10) RNGKNK = 1.0
C END FEB 2007
C END OCT 2006
               IF (NPRT.GE.0) WRITE(IFILE,
     1  '(/,A,/,A,1P,E12.4,/,A,1P,E12.4,/,A,/,A,1P,E12.4,/,A,1P,E12.4)')
     1       ' Knockdown for smeared rings on cylindrical shell...',
     1    '  Buckling load factor for n+dn = FNARCQ=',FNARCQ,
     1    '                               from discrete model =',EIGR,
     1    '  Buckling load factor for ring with bending stiffness EI:',
     1    '                      pcrit=[(n+dn)**2-1]*EI/r**3/p=',EIGRNG,
     1    '  Knockdown factor, general buckling,   EIGR/EIGRNG=',RNGKNK
C BEG MAR 2005
C BEG JAN 2006
C              IF (RNGKNK.LT.0.7) RNGKNK = 0.7
C BEG FEB 2007
C              IF (RNGKNK.LT.0.9) RNGKNK = RNGKNK + RNGFCT*(0.9 -RNGKNK)
               IF (WFLGDF.LT.0.10.AND.RNGKNK.LT.0.9)
     1                            RNGKNK = RNGKNK + RNGFCT*(0.9 -RNGKNK)
C END FEB 2007
               IF (NPRT.GE.0) WRITE(IFILE,'(/,A,1P,E12.4,A,1P,E12.4,A)')
     1       ' Knockdown for smeared rings, RNGKNK=',RNGKNK,'(FNARCQ=',
     1         FNARCQ,')'
C END JAN 2006
C END MAR 2005
C23456789012345678901234567890123456789012345678901234567890123456789012
            ELSE
C BEG NOV 2003
               IF (NPRT.GE.0)
     1         WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,1P,E12.4,/,A)')
     1       ' ****** WARNING ******* WARNING ******** WARNING *****',
     1       ' KNOCKDOWN FACTOR FOR UNCONSERVATIVENESS OF SMEARING',
     1       ' RINGS IS NOT COMPUTED BECAUSE THE BUCKLING MODE SHAPE',
     1       ' JUST COMPUTED IS INAPPROPRIATE.',
     1       ' THE RING SMEARING KNOCKDOWN FACTOR, RNGKNK =',RNGKNK,
     1       ' **** END WARNING *** END WARNING *** END WARNING ****'
C
               IF (NPRT.GE.0.AND.(WFIRST*WLAST).LT.0.0)
     1         WRITE(IFILE,'(/,A,/,A,I3,A,/,A,/,A,/,A,/,A,/,A)')
     1       ' ****** NOTE ******** NOTE ********** NOTE ********',
     1       ' Discretized "skin"-ring module n=',NGENNW,' buckling',
     1       ' mode does not represent general instability, since the',
     1       ' normal displacement of the panel skin at one extreme',
     1       ' of the discretized module is positive whereas that at',
     1       ' the other extreme is negative.',
     1       ' **** END NOTE ***** END NOTE ****** END NOTE ******'
C
               IF (NPRT.GE.0.AND.(WFIRST*WLAST).GT.0.0) THEN
                  IF (ABS(WMIDQ).LE.0.05*ABS(WFIRST+WLAST))
     1            WRITE(IFILE,'(/,A,/,A,I3,A,/,A,/,A,/,A,/,A,/,A)')
     1       ' ****** NOTE ******** NOTE ********** NOTE ********',
     1       ' Discretized "skin"-ring module n=',NGENNW,' buckling',
     1       ' mode does not represent general instability, since the',
     1       ' normal displacement of the panel skin at the ring',
     1       ' is much smaller than the average of the normal dis-',
     1       ' placements midway between rings.',
     1       ' **** END NOTE ***** END NOTE ****** END NOTE ******'
               ENDIF
C
C END NOV 2003
               IF (ITIPL6.EQ.1.AND.NPRT.GE.0)
C BEG NOV 2001
     1            WRITE(IFILE,'(/,A,/,A,I4,A,/,A,/,A)')
     1       ' ******* NOTE ********** NOTE ******** NOTE *********',
     1       ' Discretized "skin"-ring module n=',NGENNW,
     1       ' gen. buckling mode',
C END NOV 2001
     1       ' involves significant sidesway of the ring web.',
     1       ' ***** END NOTE ****** END NOTE ***** END NOTE *********'
               IF (IWEBL6.EQ.1.AND.NPRT.GE.0)
C BEG NOV 2001
     1            WRITE(IFILE,'(/,A,/,A,I4,A,/,A,/,A)')
     1       ' ******* NOTE ********** NOTE ******** NOTE *********',
     1       ' Discretized "skin"-ring module n=',NGENNW,
     1       ' gen. buckling mode',
C END NOV 2001
     1       ' involves significant crippling of the ring web.',
     1       ' ***** END NOTE ****** END NOTE ***** END NOTE *********'
C BEG OCT 2004
               IF (IFLGL6.EQ.1.AND.NPRT.GE.0)
     1            WRITE(IFILE,'(/,A,/,A,I4,A,/,A,/,A)')
     1       ' ******* NOTE ********** NOTE ******** NOTE *********',
     1       ' Discretized "skin"-ring module n=',NGENNW,
     1       ' gen. buckling mode',
     1       ' involves significant crippling of the ring flange.',
     1       ' ***** END NOTE ****** END NOTE ***** END NOTE *********'
C END OCT 2004
C BEG JUL 2007
               IF (IKOUNT.LT.4) THEN
                  IF (NPRT.GE.0) WRITE(IFILE,'(/,A,I2,A,A)')
     1          ' Mode number ',IKOUNT,' is not a suitable ring mode.',
     1          ' Try the next higher mode.'
                  EIGONE(IKOUNT) = ROOTX(1)
                  IF (IKOUNT.GT.1) THEN
                     DIFEIG = ABS(EIGONE(1) -EIGONE(IKOUNT))/EIGONE(1)
                     IF (IMINUS.EQ.0.AND.DIFEIG.GT.0.0001) THEN
                       WRITE(IFILE,'(A,A,I2,/,A,1P,E12.4,/,A,1P,E12.4)')
     1               ' First eigenvalue changed from 1st interation.',
     1               ' Iteration no.',IKOUNT,
     1               ' First eigenvalue from 1st iteration=',EIGONE(1),
     1               ' First eigenvalue from nth iteration=',
     1                                                  EIGONE(IKOUNT)
                       WRITE(IFILE,'(A)')
     1               ' Do this iteration over again once.'
                       IKOUNT = IKOUNT - 1
                       IMINUS = 1
                     ENDIF
                  ENDIF
                  NVECX = IKOUNT + 1
                  GO TO 9480
               ENDIF
C END JUL 2007
            ENDIF
C BEG JUL 2007
C   End of IF (ITIPL6.EQ.0.AND.IWEBL6.EQ.0.AND.IFLGL6.EQ.0....) section
C END JUL 2007
C BEG NOV 2001
            IF (NPRT.GE.0) WRITE(IFILE,'(A,/,A,/,A,/)')
     1    ' END OF SECTION ON GENERATION OF KNOCKDOWN FACTOR FOR',
     1    ' COMPENSATING FOR THE UNCONSERVATIVENESS OF SMEARING RINGS',
     1    ' ---------------------------------------------------------'
            CIRC = CIRCSY
C END NOV 2001
C BEG JUL 2007
            NVECX = NVECXS
C END JUL 2007
         ENDIF
C END AUG 2001
C BEG OCT 2004
C (End of IF (PEDG.AND.IMOD.EQ.0.AND.ISTIF(2).NE.0.AND.ICASE.EQ.1) condition)
C END OCT 2004
C
      IF (IXNUMB.EQ.0) GO TO 871
      IF (FNX.GE.0.0.AND.FNY.GE.0.0.AND.FNYAVE.GE.0.0
     1              .AND.FCEWEB.GE.0.0.AND.FCEFLG.GE.0.0) GO TO 871
      FNXYNM = SQRT(FNX**2 + FNY**2)
      FNRGNM = SQRT(FCEWEB**2 + FCEFLG**2)
      IF (ABS(FNXY).GT.2.*FNXYNM.AND.FNXYNM.GT.FNRGNM) GO TO 871
C BEG NOV 2003
      IF (IMOD.EQ.1.AND.IFICT8.NE.0) GO TO 871
C END NOV 2003
C
      IF (IMOD.EQ.0) THEN
         PI = 3.1415927
         MLOCRG = MLOC81
         NLOCRG = NLOC81
         EIGRNX = EILC81
         FCIRC = CIRC/(PI*ABS(R))
         IF (ISTIF(1).EQ.0) THEN
            MLOCRG = MLOC71
            NLOCRG = NLOC71
            EIGRNX = EILC71
            FCIRC = 1.0
         ENDIF
         IF (EIGRNX.GT.10.E+15.AND.FCEFLG.LT.0.0) MLOCRG =MIN(MLOCRG,3)
         MINTRG = MLOCRG
         PRODRG = FLOAT(NLOCRG)*FCIRC
         INCRRG = PRODRG/10.
         IF (INCRRG.LT.1) INCRRG = 1
         NPRODG = PRODRG + 0.01
         NINTRG = NPRODG
         IF (NINTRG.LT.1) NINTRG = 1
      ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG DEC 1998
      IF (NPRT.GE.2) WRITE(IFILE,'(A,I2)')
     1'  Is the number of buckling axial halfwaves .LT. 4?, MINTRG=',
     1 MINTRG
C
      IF (NPRT.GE.2) WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A,A,/,A,/,A)')
     1' If ANY of the following conditions is TRUE, then "skin"-ring',
     1' buckling with discrete module model is NOT investigated:',
     1'  Panel is flat (IFLAT = 1)',
     1'  No rings or Rings are hats or truss-core (ISTIF(2)=0, 4 or 5)',
     1'  PANDA2 did not compute resultants at IXNUMB points(IXNUMB=0)',
     1'  All prebuckling loads, Nx, Ny, FNYAVE, FCEWEB, FCEFLG, are',
     1' positive',
     1'  In-plane shear load Nxy is greater than 2*SQRT(Nx**2 +Ny**2)',
     1'  Number of buckling axial halfwaves between rings .GE. 4'
C
C BEG JULY 2007
      IF (NPRT.GE.1) THEN
      IF (.NOT.PEDG.OR.MINTRG.GE.4) WRITE(IFILE,'(/,A,/,A,/,A)')
     1' CHAPTER 22 ("skin"-ring buckling) is not executed because',
     1' the panel is flat or the number of axial halfwaves in the',
     1' critical inter-ring buckling mode is greater than 3'
      ENDIF
C END JULY 2007
      IF (PEDG.AND.MINTRG.LT.4) THEN
C END DEC 1998
C BEG OCT 2006
      IF (NPRT.GE.1) WRITE(IFILE,'(/,/,/,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************',
     1' ************          CHAPTER 22             *****************',
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************'
      IF (NPRT.GE.0) WRITE(IFILE,'(A,I3,A)')
     1' **** CHAPTER 22: DESIGN PERTURBATION INDEX, IMOD=',IMOD,' ****'
      IF (NPRT.GE.1)
     1WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1 ' *************************************************************',
     1 ' CHAPTER 22 Compute "skin"-ring buckling load factors for:',
     1 '            1. medium-n inter-ring buckling mode (See',
     1 '               rightmost three mode shapes in top row of',
     1 '               Fig. 30 of Ref.[1G]),',
     1 '            2. high-n inter-ring buckling mode (See rightmost',
     1 '               mode shape in middle row of Fig. 30, Ref.[1G]),',
     1 '            3. low-n inter-ring buckling mode (See leftmost',
     1 '               mode shape in top row of Fig. 30, Ref.[1G]).'
C END OCT 2006
         IF (NPRT.GE.1) WRITE(IFILE,'(/,A)')
     1'*** BEGIN "SKIN"-RING BUCKLING, DISCRETE MODULE MODEL) **'
C
         IF (IYLOC6.EQ.1) CALL TRANS2(M3R,YLOCR,YR)
         CALL MOVER(0.,0,DELFCX,1,12)
         CALL MOVER(0.,0,DELCUR,1,3)
         DELCRC = 0.
         DELWBX(1) = 0.
         DELWBX(2) = 0.
         CALL MOVER(0.,0,DELFCR,1,12)
         DELWBR(1) = 0.
         DELWBR(2) = 0.
C BEG DEC 2003
         IF (NPRT.GE.1) WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A)')
     1'***** BEGIN SUBROUTINE STRCON (GET DELFCR,DELWBR) *****',
     1' DELFCR =changes in resultants, dNx,dNy,dNxy, in skin-ring',
     1'         module caused by growth of the initial imperfections.',
     1' DELWBR =change in axial resultant dNx in the ring web at the',
     1'         ring web root and ring web tip.'
C END DEC 2003
         CALL STRCON(CONMAX,ISTIF,NSEG,NLAYER,LTYPE,EALLOW,
     1               MATL,ANGLE,EPS1,EPS2,EPS12,EPS10,EPS20,EPS120,
     1               B2,W2,ICONST,CONSTR,WORDB,IADDB,T,TAPE,DEGRAD,
     1               FSSTR,ETHERM,THERMX,THERMY,IPOINC,INUMTT,IMOD,
     1               EPSLOD,ZPARTX,ZPARTY,ETHRMX,ETHRMY,CRACK,ICHANG,
     1               EALLST,NPRT,NAPPL,IFILE,ITYPE,IICHAN,
     1               EPSTOT,EPSFIX,EPSEIG,1,INTEXT,2,
     1               TEMP,FMULT,NNODES,IMTEMP,P,PWDD,IABT,1,1,ICASE,6)
         IF (NPRT.GE.1) WRITE(IFILE,*)
     1'******* END SUBROUTINE STRCON (GET DELFCR,DELWBR) ******'
C
C BEG OCT 1998
C23456789012345678901234567890123456789012345678901234567890123456789012
         IF (DELFCR(1,1).GT.0.0) THEN
           IF (NPRT.GE.2)
     1     WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,
     1                     A,/,A,/,A,/,A,/,A,/,A,1P,E12.4,/,A)')
     1 ' **** NOTE ********* NOTE ********* NOTE ********* NOTE **** ',
     1 ' Because of "effective width" considerations, the incremental',
     1 ' CIRCUMFERENTIAL tension in the panel skin, generated by',
     1 ' prebuckling bending of the imperfect panel, is being reset to',
     1 ' zero for the buckling computations (ONLY in Segs.1 and NSEG).',
     1 ' This is done because in the "real world" the incremental hoop',
     1 ' tension in the panel skin decays from its computed value at',
     1 ' the axial coordinate corresponding to the ring station',
     1 ' to nearly zero midway between adjacent rings. Therefore, it',
     1 ' is conservative to neglect the effect of this hoop tension',
     1 ' on the local buckling load factor computed from the discrete',
     1 ' "skin"-ring module. Hoop tension is retained in Segment 2.',
     1 '  Hoop tension before the reset to zero, dNy(1)=', DELFCR(1,1),
     1 '  Hoop tension after  the reset to zero, dNy(1)= 0.0'
           DELFCR(1,1) = 0.0
         ENDIF
C END OCT 1998
C23456789012345678901234567890123456789012345678901234567890123456789012
         IF (NPRT.GE.2) WRITE(IFILE,1334)
     1                      DELFCR(1,1),DELFCR(1,2),DELFCR(1,4),
     1                      DELFCR(2,1),DELFCR(2,2),DELFCR(2,4),
     1                      DELFCR(3,1),DELFCR(3,2),DELFCR(3,4),
     1                      DELWBR(1),DELWBR(2)
 1334    FORMAT(/
     1 ' CHANGES IN RESULTANTS USED IN THE BUCKLING ANALYSIS',/,
     1 ' OF THE "SKIN"-RING DISCRETIZED MODULE.',/,
     1 ' THE FOLLOWING RESULT FROM GROWTH OF INITIAL IMPERFECTIONS',/,
     1 ' DURING LOADING. THEY DEPEND ON THE SIGNS OF THE',/,
     1 ' IMPERFECTION AMPLITUDES....',/,
     1' Change in hoop resultant Ny in: skin, ring base, flange:',/,
     1'  DELFCR(1,1),DELFCR(1,2),DELFCR(1,4)=',1P3E12.4,/,
     1' Change in axial resultant Ny in: Seg. 1, ring base, flange:',/,
     1'  DELFCR(2,1),DELFCR(2,2),DELFCR(2,4)=',1P3E12.4,/,
     1' Change in in-plane shear Nxy in: Seg. 1, ring base, flange:',/,
     1'  DELFCR(3,1),DELFCR(3,2),DELFCR(3,4)=',1P3E12.4,/,
     1' Change in resultant Ny in ring web at: web root,   web tip:',/,
     1'  DELWBR(1), DELWBR(2)=               ',1P2E12.4)
C
         IF (NPRT.GE.0) WRITE(IFILE,'(/,A)')
C BEG AUG 2001
     1'*** BEGIN "SKIN"-RING BUCKLING, DISCRETE MODEL) **'
C END AUG 2001
C
         IPRINT = 0
C BEG NOV 1999
         IF (IMOD.EQ.0) THEN
            IF (DELWBR(2).LE.DELWBR(1)) IRNIDX = 1
            IF (ABS(DELWBR(2)).LT.0.1*ABS(RWBEIG(2)).OR.
     1          ABS(DELWBR(1)).LT.0.1*ABS(RWBEIG(1))) IRNIDX = 1
         ENDIF
C BEG AUG 2001
C  LONG SECTION FOR GENERAL BUCKLING OF INFINITE CYL. DISCRETE MODEL
C  WAS TAKEN FROM HERE, CHANGED, AND MOVED UP SO THAT THE KNOCKDOWN
C  FACTOR FOR SMEARING RINGS ON CYL. PANELS COULD BE COMPUTED
C  INDEPENDENTLY OF THE LOADS ON THE STRUCTURE.
C END AUG 2001
         IF (IMOD.EQ.0) THEN
            NSTART = NINTRG
            INCRLR = 0.07*FLOAT(NSTART) + 1.
            INCRL0 = INCRLR
            NLOC(5) = 0
            ILOW7 = 0
            NSERCR = 1
C BEG NOV 1999
C  REMOVE THREE LINES ABOUT IRNIDX AND MOVE UP.
C END NOV 1999
         ELSE
            NSTART = NLOC(5)
            NSERCR = 0
         ENDIF
C BEG AUG 2001
C BEG OCT 2004
 9485    CONTINUE
         ILABEL=9485
C END OCT 2004
         IF (NPRT.GE.1) WRITE(IFILE,*) 
     1               ' LABEL NO. IN STRUCT=',ILABEL
         IF (NPRT.GE.0) WRITE(IFILE,*)
     1'*** BEGIN SUB. LOCAL ("SKIN"-RING BUCKLING, DISCRETE MODEL) **'
C END AUG 2001
         CALL LOCAL(1,NPRT,NSTART,CIRC,B(2),IMOD,M3R,INCRLR,
     1      YLOCR,IFILE,IWR,ILOCR,DSR,ASR,BSR,DIAGR,CRX,DRX,DIR,
     1      XR,YR,ZR,NSERCR,PHIMIN,0,EIGR,
     1      IYLOC6,INEG,IREDUC,FKNSRG(1),IDRWR,NBLKR,
     1      NGBKR,NKFR,2,IMAXBR,KMAXBR,IPV2R,IBVCR,1000,IGENRL,
     1      JJJ,NINTRG,B2(2),EIGLCS(5),NLOC(5),EIGLCS(5),NLOC(5),
     1      ITYPE,ILOW7,1,THERMX,THERMS,P,
     1      KAPPA1,KAPPA2,0,CS,FNX,FNY,FNXY,RESULT,
     1      FXBEG,FXEND,FYBEG,FYEND,FXYBEG,FXYEND,FNX0,FNY0,
     1      FNXY0,R,CY,RESEIG,NMAX,IABP,LENMOD,0,
     1      TEMP(1,1),IMTEMP,WPB1,1,
     1      FSPAN,FSGEN,I5R,ITIPLQ,WRATPQ,EIGSVQ,NSAVEQ,YSAVE6,
     1      JJJTOR,W2(2),EIGITR(16),0,DELTN2,RESTOT,ISTIF(2),TY,2,
     1      NGLOB2,MINTRG,ILABEL,KLAYER(1,1))
C BEG APR 2007
         IF (IMOD.EQ.0.AND.NPRT.GE.0)
     1    WRITE(IFILE,'(A,1P,E12.4,/,A,I5)')
     1 ' Buckling load factor from SUB. LOCAL, EIGITR(16)=',EIGITR(16),
     1 ' Number of axial halfwaves between rings, NSTART=',NSTART
C23456789012345678901234567890123456789012345678901234567890123456789012
C END APR 2007
            DELDUM = 0.
         IF (IRESTY.EQ.1) GO TO 2222
         IF (NPRT.GE.0) WRITE(IFILE,*)
     1'*** END   SUB. LOCAL ("SKIN"-RING BUCKLING, DISCRETE MODEL) **'
C
         IF (IMOD.EQ.0) THEN
            EIGBEF = EIGR
            NMINRG = 1000000
            NMAXRG = 1
            DO 860 I = 1,200
               IF (NGLOB2(I).GT.0) THEN
                  NMINRG = MIN(NMINRG,NGLOB2(I))
                  NMAXRG = MAX(NMAXRG,NGLOB2(I))
               ELSE
                  GO TO 861
               ENDIF
  860       CONTINUE
  861       CONTINUE
            NMAXRG = 1.00*FLOAT(NMAXRG)
            ITIPPL = 0
            ICWBRG = 0
C BEG OCT 2004
            IFLGPP = 0
            FKNDUM = 1.0
C END OCT 2004
            CALL TRANS2(M3R,YLOCR,YR)
            IF (NPRT.GE.0) WRITE(IFILE,'(/,A)')
     1' **** BEGIN SUB. MODE ("SKIN"-RING MODULE BUCKLING MODE) ****'
            CALL MODE(IFILE,NPRT,NSEGR,I5R,IWR,DSR,M3R,YR,ISKIN9,1,
     1             2, ZPARTY,0.,CY,1,WPRES,EIGR,
     1             RMAX,ITIPPL,ICWBRG,IMOD,
     1             WW5,WD5,WDD5,UU5,VV5,VP5,ZREFRG,NLOC(5),FKNSRG(1),
C BEG JUN 2004
     1             FKNDUM,ICRNRG,P,IFICT8,WDDD5,9,0,TY,2,MINTRG,
     1    INTSNG,RAD2,TY,IZSTIF,B,B2,H,W,W2,
     1    B0,B20,H0,WW0,W20,ISTIF,INTEXT,IFAY,IBEAM,IONEST,
     1    AXIAL,CIRC,ICRIP,ISEGC,WRATIO,WTIPWS,WRATTP,
     1    WRATWB,WRATCN,WRWIDE,WIDLMM,PEDG,ISOGRD,RESULT,IFLGPP)
C END JUN 2004
C
            ITIPL5 = ITIPPL
            IWEBL5 = ICWBRG
C BEG OCT 2004
            IFLGL5 = IFLGPP
C END OCT 2004
C BEG NOV 2003
            EIGKNS(1) = 1.0
            IF (IFICT8.NE.0) THEN
               WRITE(IFILE,'(/,A,/,A,/,A,/,A,/)')
     1       ' ******* NOTE ******* NOTE ******* NOTE ******',
     1       ' Since the mode is FICTITIOUS, the discretized',
     1       ' "skin-ring" module model will not be used.',
     1       ' ***** END NOTE *** END NOTE **** END NOTE ***'
               NMINRG = 1000000
               NMAXRG = 1
               GO TO 871
            ENDIF
C END NOV 2003
            IF (NPRT.GE.0) WRITE(IFILE,*)
     1' **** END   SUB. MODE ("SKIN"-RING MODULE BUCKLING MODE) ****'
         ENDIF
C End of (IMOD.EQ.0) condition.
C BEG OCT 2004
         IF (ITIPL5.EQ.0.AND.IWEBL5.EQ.0.AND.IFLGL5.EQ.0) THEN
C END OCT 2004
            EIGRP = EIGR
            FNSTRT = NLOC(5)
            IF (ISTIF(1).NE.0)
     1         CALL EIGMOD(CIRC,FNSTRT,B(1),EIGR,ITUTOR,IFILE,
     1            CX(4,4,1),CSWIDE(4,4),FSAFE2,FNX,FNY,FNXY,1,3)
C BEG MAR 2007
            IF (NPRT.GE.0) THEN
               WRITE(IFILE,
     1       '(/,A,/,A,1P,E12.4,/A,A,/,A,1P,E12.4)')
     1       ' knockdown for smeared stringers from SUB.EIGMOD,',
     1       '                                          SMRFAC=',SMRFAC,
     1       ' knockdown for transverse shear deformation (t.s.d.)',
     1       ' from SUB.SHRRED,',
     1       '                                          SHRFAC=',SHRFAC
            ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
            IF (ISTIF(1).NE.0) EIGKNS(1) = SMRFAC 
            EIGR = EIGRP*EIGKNS(1)
C END MAR 2007
            IF (NPRT.GE.0) WRITE(IFILE,
     1        '(A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4,A,/,A,1P,E12.4)')
     1' Buckling load factor BEFORE knockdown for smeared stringers=',
     1      EIGRP,
     1' Buckling load factor AFTER  knockdown for smeared stringers=',
     1      EIGR,
     1' NOTE: The buckling load factor,',EIGR,', has not yet been',
     1' further reduced by the "shear/anisotropy" factor, FKNSRG(1)=',
     1      FKNSRG(1)
C BEG NOV 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
            IF (NPRT.GE.2) WRITE(IFILE,'(A,1P,E12.3)')
     1         ' Ratio (AFTER/BEFORE) knockdown for smeared stringers=',
     1            EIGKNS(1)
C END NOV 2003
         ELSE
C End of (ITIPL5.EQ.0.AND.IWEBL5.EQ.0.AND.IFLGL5.EQ.0) condition.
            IF (ITIPL5.EQ.1.AND.NPRT.GE.0)
     1      WRITE(IFILE,'(/,A,/,A,/,A,/,A)')
     1    ' ******* NOTE ********** NOTE ******** NOTE *********',
     1    ' Discretized "skin"-ring module buckling mode involves',
     1    ' significant sidesway of the ring web.',
     1    ' ***** END NOTE ****** END NOTE ***** END NOTE *********'
            IF (IWEBL5.EQ.1.AND.NPRT.GE.0)
     1      WRITE(IFILE,'(/,A,/,A,/,A,/,A)')
     1    ' ******* NOTE ********** NOTE ******** NOTE *********',
     1    ' Discretized "skin"-ring module buckling mode involves',
     1    ' significant crippling of the ring web.',
     1    ' ***** END NOTE ****** END NOTE ***** END NOTE *********'
C BEG OCT 2004
            IF (IFLGL5.EQ.1.AND.NPRT.GE.0)
     1      WRITE(IFILE,'(/,A,/,A,/,A,/,A)')
     1    ' ******* NOTE ********** NOTE ******** NOTE *********',
     1    ' Discretized "skin"-ring module buckling mode involves',
     1    ' significant crippling of the ring flange.',
     1    ' ***** END NOTE ****** END NOTE ***** END NOTE *********'
C END OCT 2004
         ENDIF
C End of "ELSE" part of
C         (ITIPL5.EQ.0.AND.IWEBL5.EQ.0.AND.IFLGL5.EQ.0) condition.
C BEG NOV 2003
         IF (NPRT.GE.2) WRITE(IFILE,'(A,1P,3E12.4)')
     1    ' Knockdown factors, EIGKNS(1),FKNSRG(1),FKNOCK(8)=',
     1                         EIGKNS(1),FKNSRG(1),FKNOCK(8)
C END NOV 2003
C
C23456789012345678901234567890123456789012345678901234567890123456789012
         EIGLCS(5) = EIGR
C BEG NOV 2003
         IF (IFICT8.EQ.0)
     1   CALL LOCCON(1,2,IWEBL5,INUMTT,EIGR,FKNSRG(1)*FKNOCK(8),FSPAN,
C END NOV 2003
     1            ISTIF,IGENRL,EIGLCS(5),IMOD,NSTART,NLOC(5),NLOC(5),
C BEG OCT 2004
     1            CONMAX,IPOINC,CONSTR,ICONST,WORDB,0,ITIPL5,KOUBCK,3,
     1            IFLGL5)
C END OCT 2004
C
         EIGDIS(5) = EIGR
         IF (IMOD.EQ.0) THEN
            NLOC(5) = NSTART
C           IF (NPRT.GE.2) WRITE(IFILE,'(A,I6)')' NLOC(5)=',NLOC(5)
         ENDIF
         IF (ITYPE.EQ.1.AND.NPRT.GE.2)
     1    WRITE(IFILE,*)' AFTER BUCKLE: IMOD,INUMTT,ICONST=',
     1                                  IMOD,INUMTT,ICONST
C
C BEG DEC 1998
         IF (ISTIF(2).EQ.0) GO TO 871
C END DEC 1998
         IF (IMOD.EQ.0) THEN
C  EXTEND THE CIRC. WAVENUMBER RANGE (high-n range)
            NSTART = NMAXRG + ABS(INCRL0)
C BEG JUN 2004
C           NHIGH1 = FLOAT(NSTART) + 25.*CIRC/(PI*ABS(R)) + 1
            NHIGH1 = FLOAT(NSTART) + 50.*CIRC/(PI*ABS(R)) + 1
C END JUN 2004
            NEND = MAX(3*NSTART, NHIGH1)
            INCRNC = 0.07*FLOAT(NSTART) + 1.
            NCIRC = NSTART - INCRNC
            EIGBF7 = EIGBEF
            IHIGHR = 0
            IF (NPRT.GE.0)
     1      WRITE(IFILE,'(/,A,I4,A,I4,A,/,A,1P,E12.4,/,A,I4,/,A)')
     1    ' Next, explore "skin"-ring module buckling from n=',NSTART,
     1    ' to ',NEND,' circ. waves.',
     1    ' Minimum buckling load factor found so far, EIGBEF=',EIGBEF,
     1    ' Corresponding critical number of circ. waves, n=',NLOC(5),
     1    ' n circ. waves   Buckling Load Factor'
            EIGMNH = 10.E+20
            KOUNT = 0
  862       CONTINUE
            KOUNT = KOUNT + 1
            NCIRC = NCIRC + INCRNC
            INCRNC = 0.07*FLOAT(NCIRC) + 1.
            IYLOC7 = 0
C BEG AUG 2001
 9490       CONTINUE
            ILABEL=9490
            IF (NPRT.GE.1) WRITE(IFILE,*) 
     1               ' LABEL NO. IN STRUCT=',ILABEL
C END AUG 2001
            CALL BUCKLE(NCIRC,IMOD,IFILE,IWR,ILOCR,DSR,ASR,BSR,0,
     1      DIAGR,CRX,DRX,DIR,XR,YR,ZR,EIGR,1,IYLOC7,RESULT,CIRC,M3R,
     1      IDRWR,NBLKR,NGBKR,NKFR,2,IMAXBR,KMAXBR,IPV2R,IBVCR,1000,1,
     1      THERMX,THERMS,P,KAPPA1,KAPPA2,0,WPRES,IUNK,CS,
     1      FNX,FNY,FNXY,FXBEG,FXEND,FYBEG,FYEND,FXYBEG,FXYEND,
     1      FNX0,FNY0,FNXY0,R,JJJ,1,IABP,LENMOD,0,
C BEG AUG 2001
     1      TEMP(1,1),IMTEMP,WPB1,EIGITR(17),0,DELTN2,0,0,MINTRG,ILABEL)
C23456789012345678901234567890123456789012345678901234567890123456789012
C END AUG 2001
C
            IF (EIGR.LE.0.0.AND.IMOD.EQ.0.AND.JJJ.EQ.0) THEN
               WRITE(IFILE,23) ABS(EIGR)
C BEG FEB 1999
               CALL LOADBA(22)
C END FEB 1999
               IF (IRESTY.EQ.1) GO TO 2222
            ENDIF
            EIGR = ABS(EIGR)
C
            IF (ISOGRD.EQ.0) CALL SHRRED(IREDUC,FNX,FNY,FNXY,TEFF(1),
     1      TY(1),GTX(1,5),EIGR,NPRT,IMOD,JJJ,0.,0.,0,FNX0,FNY0,32)
            IF (ISOGRD.EQ.1) CALL SHRRED(IREDUC,FNX,FNY,FNXY,TEFF(1),
     1      TEFF(1),GTX(1,5),EIGR,NPRT,IMOD,JJJ,0.,0.,0,FNX0,FNY0,33)
C
            IF (KOUNT.GT.1) EIGMNH = MIN(EIGMNH,EIGR)
            EIGHIG(KOUNT) = EIGR
            NHIGRG(KOUNT) = NCIRC
            IF (NPRT.GE.2) WRITE(IFILE,'(I9,1P,E20.4)') NCIRC,EIGR
C BEG NOV 2003
            NMAXRS = NMAXRG
C END NOV 2003
            NMAXRG = NCIRC
            EIGMIN = 10.E+21
            IF (EIGR.LT.EIGBF7) THEN
               EIGMIN = MIN(EIGR,EIGMIN)
               EIGBF7 = EIGR
               NLOC(7)   = NCIRC
               CALL TRANS1(M3R,YR,YLOCR2)
               IHIGHR = 1
            ENDIF
            IF (NCIRC.LT.NEND) GO TO 862
            IF (NCIRC.GE.NEND.AND.NCIRC.LT.20*NEND
     1                       .AND.EIGR.LT.EIGHIG(KOUNT-1)) GO TO 862
            IF (IHIGHR.EQ.1.AND.NPRT.GE.0)
     1         WRITE(IFILE,'(A,A,/,A,I4,A,1P,E12.4)')
     1          ' There is a new minimum eigenvalue with respect to',
     1          ' the number of circ. waves, n:',
     1          ' Hi-n(crit)=',NLOC(7),'; hi-n eigenvalue=',EIGBF7
            NWVMN1 = 0
            NWVMN2 = 0
            IF (IHIGHR.EQ.0) THEN
               IF (KOUNT.GT.2) THEN
                  J = 0
                  J1 = 0
                  DO 8622 I = 2,KOUNT
                    I1 = I - 1
                    IF (EIGHIG(I).LT.EIGHIG(I1)) J1 = 1
                    IF (J1.EQ.1.AND.EIGHIG(I).GT.EIGHIG(I1)
     1                   .AND.EIGHIG(I1).LT.5.0*EIGBF7) THEN
                       J = J + 1
                       J1 = 0
                       IF (J.GT.2) THEN
                          J = 2
                          GO TO 8624
                       ENDIF
                       EIGPOS(J) = EIGHIG(I1)
                       NWVPOS(J) = NHIGRG(I1)
                       GO TO 8622
                    ENDIF
                    IF (J1.EQ.1.AND.EIGHIG(I).GT.EIGHIG(I1)) J1 = 0
 8622             CONTINUE
 8624             CONTINUE
                  EIGMN1 = 10.E+20
                  IF (J.GT.0) THEN
                     IF (J.EQ.1) THEN
                         EIGMN1 = EIGPOS(1)
                         NWVMN1 = NWVPOS(1)
                     ENDIF
                     IF (J.EQ.2) THEN
                        EIGMN1 = MIN(EIGPOS(1),EIGPOS(2))
                        EDIFF = ABS(EIGMN1 - EIGPOS(1))/EIGMN1
                        IF (EDIFF.LT.0.00001) THEN
                           NWVMN1 = NWVPOS(1)
                        ELSE
                           NWVMN1 = NWVPOS(2)
                        ENDIF
                     ENDIF
                  ENDIF
               ENDIF
C      End of (KOUNT.GT.2) condition.
               EIGMN2 = 10.E+20
               DO 863 I = 1,KOUNT
                  EDIFF = ABS(EIGMNH-EIGHIG(I))/EIGMNH
                  IF (EDIFF.LT.0.00001.AND.I.GT.1) THEN
                     IF (I.EQ.2.AND.EIGHIG(1).LT.EIGHIG(2)) GO TO 864
                     NWVMN2 = NHIGRG(I)
                     EIGMN2 = EIGHIG(I)
                     GO TO 864
                  ENDIF
  863          CONTINUE
  864          CONTINUE
            ENDIF
C   End of (IHIGHR.EQ.0) condition.
            IF (NWVMN1.NE.0.OR.NWVMN2.NE.0) THEN
               EIGMIN = MIN(EIGMN1,EIGMN2)
               EDIFF = ABS(EIGMIN - EIGMN2)/EIGMN2
               IF (EDIFF.LT.0.00001) NWVMN1 = NWVMN2
               IF (NPRT.GE.2)
     1         WRITE(IFILE,'(A,A,/,A,I4,A,1P,E12.4,/,A,/,A,I4)')
     1          ' There is a minimum eigenvalue with respect to',
     1          ' the number of circ. waves, n:',
     1          ' Hi-n(crit)=',NWVMN1,'; hi-n eigenvalue=',EIGMIN,
     1          ' Therefore, recompute the eigenvalue and eigenvector',
     1          ' corresponding to n(crit)=',NWVMN1
                  IYLOC7 = 0
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG AUG 2001
 9500          CONTINUE
               ILABEL=9500
               IF (NPRT.GE.1) WRITE(IFILE,*) 
     1               ' LABEL NO. IN STRUCT=',ILABEL
C END AUG 2001
               CALL BUCKLE(NWVMN1,IMOD,IFILE,IWR,ILOCR,DSR,ASR,
     1              BSR,0,DIAGR,CRX,DRX,DIR,XR,YR,ZR,EIGR,1,IYLOC7,
     1              RESULT,CIRC,M3R,IDRWR,NBLKR,NGBKR,NKFR,2,IMAXBR,
     1              KMAXBR,IPV2R,IBVCR,1000,1,THERMX,THERMS,P,KAPPA1,
     1              KAPPA2,0,WPRES,IUNK,CS,FNX,FNY,FNXY,FXBEG,FXEND,
     1              FYBEG,FYEND,FXYBEG,FXYEND,FNX0,FNY0,FNXY0,R,JJJ,1,
     1              IABP,LENMOD,0,TEMP(1,1),IMTEMP,WPB1,EIGITR(17),0,
C BEG AUG 2001
     1              DELTN2,0,0,MINTRG,ILABEL)
C END AUG 2001
C
               IF (EIGR.LE.0.0.AND.IMOD.EQ.0.AND.JJJ.EQ.0) THEN
                  WRITE(IFILE,23) ABS(EIGR)
C BEG FEB 1999
                  CALL LOADBA(23)
C END FEB 1999
                  IF (IRESTY.EQ.1) GO TO 2222
               ENDIF
               EIGR = ABS(EIGR)
C
               IF (ISOGRD.EQ.0) 
     1         CALL SHRRED(IREDUC,FNX,FNY,FNXY,TEFF(1),TY(1),
     1         GTX(1,5),EIGR,NPRT,IMOD,JJJ,0.,0.,0,FNX0,FNY0,34)
               IF (ISOGRD.EQ.1)
     1         CALL SHRRED(IREDUC,FNX,FNY,FNXY,TEFF(1),TEFF(1),
     1         GTX(1,5),EIGR,NPRT,IMOD,JJJ,0.,0.,0,FNX0,FNY0,35)
C
               IF (NPRT.GE.2)
     1         WRITE(IFILE,'(I9,1P,E20.4)') NWVMN1,EIGR
               EIGBF7 = EIGR
               NLOC(7)   = NWVMN1
               CALL TRANS1(M3R,YR,YLOCR2)
               IHIGHR = 1
            ENDIF
C    End of (NWVMN1.NE.0.OR.NWVMN2.NE.0) condition.
            IF (NPRT.GE.2) WRITE(IFILE,'(A)')
     1    ' =================================================='
            NMAXRG = 1.00*FLOAT(NMAXRG)
C BEG JUN 2004
            IF (IHIGHR.EQ.0.AND.NPRT.GE.0)
     1      WRITE(IFILE,'(/,A,/,A,/,A,/,A,I5,/,A,1P,E12.4)')
     1    ' No critical (minimum) eigenvalue detected in high-n range.',
     1    ' Therefore, no "hi-n" buckling margin for the discretized',
     1    ' "skin"-ring single module will be recorded.',
     1    ' Maximum number of circ. waves, NMAXRG=',NMAXRG,
     1    ' Minimum eigenvalue in N-range, EIGMNH=',EIGMNH
C END JUN 2004
C23456789012345678901234567890123456789012345678901234567890123456789012
            IF (IHIGHR.EQ.1) THEN
               IYLOC7 = 1
               ITIPPL = 0
               ICWBRG = 0
C BEG OCT 2004
               IFLGPP = 0
               FKNDUM = 1.0
C END OCT 2004
               CALL TRANS2(M3R,YLOCR2,YR)
               IF (NPRT.GE.0) WRITE(IFILE,'(/,A)')
     1' ** BEGIN SUB. MODE ("SKIN"-RING MODULE HI-n BUCKLNG MODE) **'
               CALL MODE(IFILE,NPRT,NSEGR,I5R,IWR,DSR,M3R,YR,ISKN10,
     1             1,2, ZPARTY,0.,CY,1,WPRES,EIGBF7,
     1             RMAX,ITIPPL,ICWBRG,IMOD,
     1             WW6,WD6,WDD6,UU6,VV6,VP6,ZREFRG,NLOC(7),FKNSRG(2),
C BEG JUN 2004
     1             FKNDUM,ICRNRG,P,IFICT9,WDDD6,10,0,TY,2,MINTRG,
     1    INTSNG,RAD2,TY,IZSTIF,B,B2,H,W,W2,
     1    B0,B20,H0,WW0,W20,ISTIF,INTEXT,IFAY,IBEAM,IONEST,
     1    AXIAL,CIRC,ICRIP,ISEGC,WRATIO,WTIPWS,WRATTP,
     1    WRATWB,WRATCN,WRWIDE,WIDLMM,PEDG,ISOGRD,RESULT,IFLGPP)
C END JUN 2004
C
               ITIPL6 = ITIPPL
               IWEBL6 = ICWBRG
C BEG OCT 2004
               IFLGL6 = IFLGPP
C END OCT 2004
C BEG NOV 2003
               EIGKNS(2) = 1.0
               IF (IFICT9.NE.0) THEN
                  WRITE(IFILE,'(/,A,/,A,/,A,/,A,/)')
     1          ' ******* NOTE ******* NOTE ******* NOTE ******',
     1          ' Since the mode is FICTITIOUS, the discretized',
     1          ' "skin-ring" hi-n module model will not be used.',
     1          ' ***** END NOTE *** END NOTE **** END NOTE ***'
                  NMAXRG = NMAXRS
               ENDIF
C END NOV 2003
               IF (NPRT.GE.0) WRITE(IFILE,*)
     1' **** END SUB. MODE ("SKIN"-RING MODULE HI-n BUCKLNG MODE) **'
C BEG OCT 2004
               IF (ITIPL6.EQ.0.AND.IWEBL6.EQ.0.AND.IFLGL6.EQ.0) THEN
C END OCT 2004
                  EIGRP = EIGR
                  FNSTRT = NCIRC
                  IF (ISTIF(1).NE.0)
     1               CALL EIGMOD(CIRC,FNSTRT,B(1),EIGBF7,ITUTOR,IFILE,
     1                CX(4,4,1),CSWIDE(4,4),FSAFE2,FNX,FNY,FNXY,1,3)
C BEG MAR 2007
                  IF (NPRT.GE.0) THEN
                     WRITE(IFILE,
     1       '(/,A,/,A,1P,E12.4,/A,A,/,A,1P,E12.4)')
     1       ' knockdown for smeared stringers from SUB.EIGMOD,',
     1       '                                          SMRFAC=',SMRFAC,
     1       ' knockdown for transverse shear deformation (t.s.d.)',
     1       ' from SUB.SHRRED,',
     1       '                                          SHRFAC=',SHRFAC
                  ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
                  IF (ISTIF(1).NE.0) EIGKNS(2) = SMRFAC
                  EIGBF7 = EIGRP*EIGKNS(2)
C END MAR 2007
                  IF (NPRT.GE.0) WRITE(IFILE,
     1        '(A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4,A,/,A,1P,E12.4)')
     1' Buckling load factor BEFORE knockdown for smeared stringers=',
     1            EIGRP,
     1' Buckling load factor AFTER  knockdown for smeared stringers=',
     1            EIGBF7,
     1' NOTE: The buckling load factor,',EIGBF7,', has not yet been',
     1' further reduced by the "shear/anisotropy" factor, FKNSRG(2)=',
     1            FKNSRG(2)
C BEG NOV 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
                  IF (NPRT.GE.2) WRITE(IFILE,'(A,1P,E12.3)')
     1         ' Ratio (AFTER/BEFORE) knockdown for smeared stringers=',
     1            EIGKNS(2)
C END NOV 2003
               ELSE
C    End of (ITIPL6.EQ.0.AND.IWEBL6.EQ.0.AND.IFLGL6.EQ.0) condition.
                  IF (ITIPL6.EQ.1.AND.NPRT.GE.0)
     1            WRITE(IFILE,'(/,A,/,A,/,A,/,A)')
     1    ' ******* NOTE ********** NOTE ******** NOTE *********',
     1    ' Discretized "skin"-ring module hi-n buckling mode',
     1    ' involves significant sidesway of the ring web.',
     1    ' ***** END NOTE ****** END NOTE ***** END NOTE *********'
                  IF (IWEBL6.EQ.1.AND.NPRT.GE.0)
     1            WRITE(IFILE,'(/,A,/,A,/,A,/,A)')
     1    ' ******* NOTE ********** NOTE ******** NOTE *********',
     1    ' Discretized "skin"-ring module hi-n buckling mode',
     1    ' involves significant crippling of the ring web.',
     1    ' ***** END NOTE ****** END NOTE ***** END NOTE *********'
C BEG OCT 2004
                  IF (IFLGL6.EQ.1.AND.NPRT.GE.0)
     1            WRITE(IFILE,'(/,A,/,A,/,A,/,A)')
     1    ' ******* NOTE ********** NOTE ******** NOTE *********',
     1    ' Discretized "skin"-ring module hi-n buckling mode',
     1    ' involves significant crippling of the ring flange.',
     1    ' ***** END NOTE ****** END NOTE ***** END NOTE *********'
C END OCT 2004
C
               ENDIF
C   End of "ELSE" part of
C           (ITIPL6.EQ.0.AND.IWEBL6.EQ.0.AND.IFLGL6.EQ.0) condition.
C BEG NOV 2003
               IF (NPRT.GE.2) WRITE(IFILE,'(A,1P,3E12.4)')
     1    ' Knockdown factors, EIGKNS(2),FKNSRG(2),FKNOCK(8)=',
     1                         EIGKNS(2),FKNSRG(2),FKNOCK(8)
C END NOV 2003
C
               EIGLCS(7) = EIGBF7
C BEG NOV 2003
               IF (IFICT9.EQ.0)
     1         CALL LOCCON(1,2,IWEBL6,INUMTT,EIGBF7,FKNSRG(2)*FKNOCK(8),
C END NOV 2003
     1         FSPAN,ISTIF,IGENRL,EIGLCS(7),IMOD,NLOC(7),NLOC(7),
     1         NLOC(7),CONMAX,IPOINC,CONSTR,ICONST,WORDB,0,ITIPL6,
C BEG OCT 2004
     1         KOUBCK,4,IFLGL6)
C END OCT 2004
C
               EIGDIS(7) = EIGBF7
            ENDIF
C    End of (IHIGHR.EQ.1) condition.
C
C  EXTEND THE CIRC. WAVENUMBER RANGE (LOW n-RANGE)
C BEG NOV 2003
            IF (IMOD.EQ.1.AND.IFCT10.EQ.1) GO TO 871
C END NOV 2003
            NSTART = 1
            NEND = NMINRG
C BEG NOV 2003
            NMINRS = NMINRG
C END NOV 2003
            IF (NEND.GT.2) NEND = NMINRG - 1
            IF (NEND.LE.NSTART) GO TO 869
            IF (NEND.GE.100) NSTART = NEND/2
            NMINRG = NSTART
            INCRNC = 0.07*FLOAT(NSTART) + 1.
            NCIRC = NSTART - INCRNC
            EIGBF8 = EIGBEF
            ILOWER = 0
            IF (NPRT.GE.0)
     1      WRITE(IFILE,'(/,A,I4,A,I4,A,/,A)')
     1    ' Next, explore "skin"-ring module buckling from n=',NSTART,
     1    ' to ',NEND,' circ. waves.',
     1    ' n circ. waves   Buckling Load Factor'
            EIGMIN = 10.E+20
            KOUNT = 0
  865       CONTINUE
            KOUNT = KOUNT + 1
            NCIRC = NCIRC + INCRNC
            INCRNC = 0.07*FLOAT(NCIRC) + 1.
            IYLOC8 = 0
C BEG AUG 2001
 9510       CONTINUE
            ILABEL=9510
            IF (NPRT.GE.1) WRITE(IFILE,*) 
     1               ' LABEL NO. IN STRUCT=',ILABEL
C END AUG 2001
            CALL BUCKLE(NCIRC,IMOD,IFILE,IWR,ILOCR,DSR,ASR,BSR,0,
     1      DIAGR,CRX,DRX,DIR,XR,YR,ZR,EIGR,1,IYLOC8,RESULT,CIRC,M3R,
     1      IDRWR,NBLKR,NGBKR,NKFR,2,IMAXBR,KMAXBR,IPV2R,IBVCR,1000,1,
     1      THERMX,THERMS,P,KAPPA1,KAPPA2,0,WPRES,IUNK,CS,
     1      FNX,FNY,FNXY,FXBEG,FXEND,FYBEG,FYEND,FXYBEG,FXYEND,
     1      FNX0,FNY0,FNXY0,R,JJJ,1,IABP,LENMOD,0,
C BEG AUG 2001
     1      TEMP(1,1),IMTEMP,WPB1,EIGITR(18),0,DELTN2,0,0,MINTRG,
     1      ILABEL)
C END AUG 2001
C
            IF (EIGR.LE.0.0.AND.IMOD.EQ.0.AND.JJJ.EQ.0) THEN
               WRITE(IFILE,23) ABS(EIGR)
C BEG FEB 1999
               CALL LOADBA(24)
C END FEB 1999
               IF (IRESTY.EQ.1) GO TO 2222
            ENDIF
            EIGR = ABS(EIGR)
C
            IF (ISOGRD.EQ.0) CALL SHRRED(IREDUC,FNX,FNY,FNXY,TEFF(1),
     1      TY(1),GTX(1,5),EIGR,NPRT,IMOD,JJJ,0.,0.,0,FNX0,FNY0,36)
            IF (ISOGRD.EQ.1) CALL SHRRED(IREDUC,FNX,FNY,FNXY,TEFF(1),
     1      TEFF(1),GTX(1,5),EIGR,NPRT,IMOD,JJJ,0.,0.,0,FNX0,FNY0,37)
C
            IF (NCIRC.LT.NEND) EIGMIN = MIN(EIGMIN,EIGR)
            EIGLOW(KOUNT) = EIGR
            NLOWRG(KOUNT) = NCIRC
            IF (NPRT.GE.2) WRITE(IFILE,'(I9,1P,E20.4)') NCIRC,EIGR
            IF (EIGR.LT.EIGBF8) THEN
               EIGBF8 = EIGR
               NLOC(8)   = NCIRC
               CALL TRANS1(M3R,YR,YLOCR3)
               ILOWER = 1
            ENDIF
            IF (NCIRC.LT.NEND) GO TO 865
            IF (ILOWER.EQ.1.AND.NPRT.GE.0)
     1         WRITE(IFILE,'(A,A,/,A,I4,A,1P,E12.4)')
     1          ' There is a new minimum eigenvalue with respect to',
     1          ' the number of circ. waves, n:',
     1          ' Lo-n(crit)=',NLOC(8),'; Lo-n eigenvalue=',EIGBF8
            NWVMN1 = 0
            NWVMN2 = 0
            IF (ILOWER.EQ.0) THEN
               IF (KOUNT.GT.2) THEN
                  J = 0
                  J1 = 0
                  DO 866 I = 2,KOUNT
                    I1 = I - 1
                    IF (J1.EQ.0.AND.EIGLOW(I).GT.EIGLOW(I1)
     1                   .AND.EIGLOW(I1).LT.5.0*EIGBF8) THEN
                       J = J + 1
                       J1 = 1
                       IF (J.GT.2) THEN
                          J = 2
                          GO TO 8662
                       ENDIF
                       EIGPOS(J) = EIGLOW(I1)
                       NWVPOS(J) = NLOWRG(I1)
                       GO TO 866
                    ENDIF
                    IF (J1.EQ.1.AND.EIGLOW(I).LT.EIGLOW(I1)) J1 = 0
  866             CONTINUE
 8662             CONTINUE
                  EIGMN1 = 10.E+20
                  IF (J.GT.0) THEN
                     IF (J.EQ.1) THEN
                         EIGMN1 = EIGPOS(1)
                         NWVMN1 = NWVPOS(1)
                     ENDIF
                     IF (J.EQ.2) THEN
                        EIGMN1 = MIN(EIGPOS(1),EIGPOS(2))
                        EDIFF = ABS(EIGMN1 - EIGPOS(1))/EIGMN1
                        IF (EDIFF.LT.0.00001) THEN
                           NWVMN1 = NWVPOS(1)
                        ELSE
                           NWVMN1 = NWVPOS(2)
                        ENDIF
                     ENDIF
                  ENDIF
               ENDIF
C       End of (KOUNT.GT.2) condition.
               EIGMN2 = 10.E+20
               DO 867 I = 1,KOUNT
                  EDIFF = ABS(EIGMIN-EIGLOW(I))/EIGMIN
                  IF (EDIFF.LT.0.00001.AND.I.LT.KOUNT) THEN
                     KOUNT1 = KOUNT - 1
                     IF (I.EQ.KOUNT1
     1                .AND.EIGLOW(KOUNT).LT.EIGLOW(KOUNT1)) GO TO 868
                     NWVMN2 = NLOWRG(I)
                     EIGMN2 = EIGLOW(I)
                     GO TO 868
                  ENDIF
  867          CONTINUE
  868          CONTINUE
            ENDIF
C End of (ILOWER.EQ.0) condition.
            IF (NWVMN1.NE.0.OR.NWVMN2.NE.0) THEN
               EIGMIN = MIN(EIGMN1,EIGMN2)
               EDIFF = ABS(EIGMIN - EIGMN2)/EIGMN2
               IF (EDIFF.LT.0.00001) NWVMN1 = NWVMN2
               IF (NPRT.GE.0)
     1         WRITE(IFILE,'(A,A,/,A,I4,A,1P,E12.4,/,A,/,A,I4)')
     1       ' There is a minimum eigenvalue with respect to',
     1       ' the number of circ. waves, n:',
     1       ' Lo-n(crit)=',NWVMN1,'; lo-n eigenvalue=',EIGMIN,
     1       ' Therefore, recompute the eigenvalue and eigenvector',
     1       ' corresponding to n(crit)=',NWVMN1
               IYLOC8 = 0
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG AUG 2001
 9520          CONTINUE
               ILABEL=9520
               IF (NPRT.GE.1) WRITE(IFILE,*) 
     1               ' LABEL NO. IN STRUCT=',ILABEL
C END AUG 2001
               CALL BUCKLE(NWVMN1,IMOD,IFILE,IWR,ILOCR,DSR,ASR,
     1              BSR,0,DIAGR,CRX,DRX,DIR,XR,YR,ZR,EIGR,1,IYLOC8,
     1              RESULT,CIRC,M3R,IDRWR,NBLKR,NGBKR,NKFR,2,IMAXBR,
     1              KMAXBR,IPV2R,IBVCR,1000,1,THERMX,THERMS,P,KAPPA1,
     1              KAPPA2,0,WPRES,IUNK,CS,FNX,FNY,FNXY,FXBEG,FXEND,
     1              FYBEG,FYEND,FXYBEG,FXYEND,FNX0,FNY0,FNXY0,R,JJJ,1,
     1              IABP,LENMOD,0,TEMP(1,1),IMTEMP,WPB1,EIGITR(18),0,
C BEG AUG 2001
     1              DELTN2,0,0,MINTRG,ILABEL)
C END AUG 2001
C
               IF (EIGR.LE.0.0.AND.IMOD.EQ.0.AND.JJJ.EQ.0) THEN
                  WRITE(IFILE,23) ABS(EIGR)
C BEG FEB 1999
                  CALL LOADBA(25)
C END FEB 1999
                  IF (IRESTY.EQ.1) GO TO 2222
               ENDIF
               EIGR = ABS(EIGR)
C
              IF (ISOGRD.EQ.0) 
     1        CALL SHRRED(IREDUC,FNX,FNY,FNXY,TEFF(1),TY(1),
     1        GTX(1,5),EIGR,NPRT,IMOD,JJJ,0.,0.,0,FNX0,FNY0,38)
              IF (ISOGRD.EQ.1)
     1        CALL SHRRED(IREDUC,FNX,FNY,FNXY,TEFF(1),TEFF(1),
     1        GTX(1,5),EIGR,NPRT,IMOD,JJJ,0.,0.,0,FNX0,FNY0,39)
C
               IF (NPRT.GE.2)
     1         WRITE(IFILE,'(I9,1P,E20.4)') NWVMN1,EIGR
               EIGBF8 = EIGR
               NLOC(8)   = NWVMN1
               CALL TRANS1(M3R,YR,YLOCR3)
               ILOWER = 1
            ENDIF
C End of (NWVMN1.NE.0.OR.NWVMN2.NE.0) condition.
            IF (NPRT.GE.2) WRITE(IFILE,'(A)')
     1    ' =================================================='
            IF (ILOWER.EQ.0.AND.NPRT.GE.0)
     1      WRITE(IFILE,'(/,A,/,A,/,A)')
     1    ' No critical (minimum) eigenvalue detected in low-n range.',
     1    ' Therefore, no "lo-n" buckling margin for the discretized',
     1    ' "skin"-ring single module will be recorded.'
C23456789012345678901234567890123456789012345678901234567890123456789012
            IF (ILOWER.EQ.1) THEN
               IYLOC8 = 1
               ITIPPL = 0
               ICWBRG = 0
C BEG OCT 2004
               IFLGPP = 0
               FKNDUM = 1.0
C END OCT 2004
               CALL TRANS2(M3R,YLOCR3,YR)
               IF (NPRT.GE.0) WRITE(IFILE,'(/,A)')
     1' ** BEGIN SUB. MODE ("SKIN"-RING MODULE LO-n BUCKLNG MODE) **'
               CALL MODE(IFILE,NPRT,NSEGR,I5R,IWR,DSR,M3R,YR,ISKN10,
     1             1,2, ZPARTY,0.,CY,1,WPRES,EIGBF8,
     1             RMAX,ITIPPL,ICWBRG,IMOD,
     1             WW7,WD7,WDD7,UU7,VV7,VP7,ZREFRG,NLOC(8),FKNSRG(3),
C BEG JUN 2004
     1             FKNDUM,ICRNRG,P,IFCT10,WDDD7,11,0,TY,2,MINTRG,
     1    INTSNG,RAD2,TY,IZSTIF,B,B2,H,W,W2,
     1    B0,B20,H0,WW0,W20,ISTIF,INTEXT,IFAY,IBEAM,IONEST,
     1    AXIAL,CIRC,ICRIP,ISEGC,WRATIO,WTIPWS,WRATTP,
     1    WRATWB,WRATCN,WRWIDE,WIDLMM,PEDG,ISOGRD,RESULT,IFLGPP)
C END JUN 2004
C
               ITIPL7 = ITIPPL
               IWEBL7 = ICWBRG
C BEG OCT 2004
               IFLGL7 = IFLGPP
C END OCT 2004
C BEG NOV 2003
               EIGKNS(3) = 1.0
               IF (IFCT10.NE.0) THEN
                  WRITE(IFILE,'(/,A,/,A,/,A,/,A,/)')
     1          ' ******* NOTE ******* NOTE ******* NOTE ******',
     1          ' Since the mode is FICTITIOUS, the discretized',
     1          ' "skin-ring" low-n module model will not be used.',
     1          ' ***** END NOTE *** END NOTE **** END NOTE ***'
                  NMINRG = NMINRS
                  GO TO 871
               ENDIF
C END NOV 2003
               IF (NPRT.GE.1) WRITE(IFILE,*)
     1' **** END SUB. MODE ("SKIN"-RING MODULE LO-n BUCKLNG MODE) **'
C BEG OCT 2004
               IF (ITIPL7.EQ.0.AND.IWEBL7.EQ.0.AND.IFLGL7.EQ.0) THEN
                  EIGRP = EIGR
                  FNSTRT = NCIRC
                  IF (ISTIF(1).NE.0)
     1               CALL EIGMOD(CIRC,FNSTRT,B(1),EIGBF8,ITUTOR,IFILE,
     1                 CX(4,4,1),CSWIDE(4,4),FSAFE2,FNX,FNY,FNXY,1,3)
C BEG MAR 2007
                  IF (NPRT.GE.0) THEN
                     WRITE(IFILE,
     1       '(/,A,/,A,1P,E12.4,/A,A,/,A,1P,E12.4)')
     1       ' knockdown for smeared stringers from SUB.EIGMOD,',
     1       '                                          SMRFAC=',SMRFAC,
     1       ' knockdown for transverse shear deformation (t.s.d.)',
     1       ' from SUB.SHRRED,',
     1       '                                          SHRFAC=',SHRFAC
                  ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
                  IF (ISTIF(1).NE.0) EIGKNS(3) = SMRFAC
                  EIGBF8 = EIGRP*EIGKNS(3)
C END MAR 2007
                  IF (NPRT.GE.0) WRITE(IFILE,
     1        '(A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4,A,/,A,1P,E12.4)')
     1' Buckling load factor BEFORE knockdown for smeared stringers=',
     1            EIGRP,
     1' Buckling load factor AFTER  knockdown for smeared stringers=',
     1            EIGBF8,
     1' NOTE: The buckling load factor,',EIGBF8,', has not yet been',
     1' further reduced by the "shear/anisotropy" factor, FKNSRG(3)=',
     1            FKNSRG(3)
C BEG NOV 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
                  IF (NPRT.GE.2) WRITE(IFILE,'(A,1P,E12.3)')
     1         ' Ratio (AFTER/BEFORE) knockdown for smeared stringers=',
     1            EIGKNS(3)
C END NOV 2003
               ELSE
C End of (ITIPL7.EQ.0.AND.IWEBL7.EQ.0.AND.IFLGL7.EQ.0) condition.
                  IF (ITIPL7.EQ.1.AND.NPRT.GE.0)
     1            WRITE(IFILE,'(/,A,/,A,/,A,/,A)')
     1    ' ******* NOTE ********** NOTE ******** NOTE *********',
     1    ' Discretized "skin"-ring module lo-n buckling mode',
     1    ' involves significant sidesway of the ring web.',
     1    ' ***** END NOTE ****** END NOTE ***** END NOTE *********'
                  IF (IWEBL7.EQ.1.AND.NPRT.GE.0)
     1            WRITE(IFILE,'(/,A,/,A,/,A,/,A)')
     1    ' ******* NOTE ********** NOTE ******** NOTE *********',
     1    ' Discretized "skin"-ring module lo-n buckling mode',
     1    ' involves significant crippling of the ring web.',
     1    ' ***** END NOTE ****** END NOTE ***** END NOTE *********'
C BEG OCT 2004
                  IF (IFLGL7.EQ.1.AND.NPRT.GE.0)
     1            WRITE(IFILE,'(/,A,/,A,/,A,/,A)')
     1    ' ******* NOTE ********** NOTE ******** NOTE *********',
     1    ' Discretized "skin"-ring module lo-n buckling mode',
     1    ' involves significant crippling of the ring flange.',
     1    ' ***** END NOTE ****** END NOTE ***** END NOTE *********'
C END OCT 2004
C
               ENDIF
C End of "ELSE" part of 
C          (ITIPL7.EQ.0.AND.IWEBL7.EQ.0.AND.IFLGL7.EQ.0) condition.
C BEG NOV 2003
               IF (NPRT.GE.2) WRITE(IFILE,'(A,1P,3E12.4)')
     1       ' Knockdown factors, EIGKNS(3),FKNSRG(3),FKNOCK(8)=',
     1                            EIGKNS(3),FKNSRG(3),FKNOCK(8)
C END NOV 2003
C
               EIGLCS(8) = EIGBF8
C BEG NOV 2003
               IF (IFCT10.EQ.0)
     1         CALL LOCCON(1,2,IWEBL7,INUMTT,EIGBF8,FKNSRG(3)*FKNOCK(8),
C END NOV 2003
     1         FSPAN,ISTIF,IGENRL,EIGLCS(8),IMOD,NLOC(8),NLOC(8),
     1         NLOC(8),CONMAX,IPOINC,CONSTR,ICONST,WORDB,0,ITIPL7,
C BEG OCT 2004
     1         KOUBCK,5,IFLGL7)
C END OCT 2004
C
               EIGDIS(8) = EIGBF8
            ENDIF
C End of (ILOWER.EQ.1) condition.
  869       CONTINUE
         ENDIF
C End of (IMOD.EQ.0) condition
C
C BEG NOV 2003
C        IF (IMOD.EQ.1.AND.IHIGHR.EQ.1) THEN
         IF (IMOD.EQ.1.AND.IHIGHR.EQ.1.AND.IFICT9.EQ.0) THEN
C END NOV 2003
            CALL TRANS2(M3R,YLOCR2,YR)
C BEG AUG 2001
 9530       CONTINUE
            ILABEL=9530
            IF (NPRT.GE.1) WRITE(IFILE,*) 
     1               ' LABEL NO. IN STRUCT=',ILABEL
C END AUG 2001
            CALL BUCKLE(NLOC(7),IMOD,IFILE,IWR,ILOCR,DSR,ASR,BSR,0,
     1      DIAGR,CRX,DRX,DIR,XR,YR,ZR,EIGR,1,IYLOC7,RESULT,CIRC,M3R,
     1      IDRWR,NBLKR,NGBKR,NKFR,2,IMAXBR,KMAXBR,IPV2R,IBVCR,1000,1,
     1      THERMX,THERMS,P,KAPPA1,KAPPA2,0,WPRES,IUNK,CS,
     1      FNX,FNY,FNXY,FXBEG,FXEND,FYBEG,FYEND,FXYBEG,FXYEND,
     1      FNX0,FNY0,FNXY0,R,JJJ,1,IABP,LENMOD,0,
C BEG AUG 2001
     1      TEMP(1,1),IMTEMP,WPB1,EIGITR(17),0,DELTN2,0,0,MINTRG,
     1      ILABEL)
C END AUG 2001
C
            IF (EIGR.LE.0.0.AND.IMOD.EQ.0.AND.JJJ.EQ.0) THEN
               WRITE(IFILE,23) ABS(EIGR)
C BEG FEB 1999
               CALL LOADBA(26)
C END FEB 1999
               IF (IRESTY.EQ.1) GO TO 2222
            ENDIF
            EIGR = ABS(EIGR)
C
            IF (ISOGRD.EQ.0) CALL SHRRED(IREDUC,FNX,FNY,FNXY,TEFF(1),
     1      TY(1),GTX(1,5),EIGR,NPRT,IMOD,JJJ,0.,0.,0,FNX0,FNY0,40)
            IF (ISOGRD.EQ.1) CALL SHRRED(IREDUC,FNX,FNY,FNXY,TEFF(1),
     1      TEFF(1),GTX(1,5),EIGR,NPRT,IMOD,JJJ,0.,0.,0,FNX0,FNY0,41)
C
            IF (NPRT.GE.0) WRITE(IFILE,'(A,I3,1P,E12.4)')
     1    ' "skin"-ring module: hi-n circ. waves, eigenvalue=',
     1      NLOC(7),EIGR
C BEG NOV 2003
            IF (NPRT.GE.2) WRITE(IFILE,'(A,/,A,/,A)')
     1    ' EIGKNS(2) = knockdown for smeared stringers (hi-n)',
     1    ' FKNSRG(2) = knockdown for anisotropy/in-plane shear',
     1    ' FKNOCK(8) = knockdown for initial geometric imperfections'
            IF (NPRT.GE.2)
     1      WRITE(IFILE,'(A,1P,3E12.4,/,A,1P,E12.4,/,A,1P,E12.4)')
     1    ' Knockdown factors, EIGKNS(2),FKNSRG(2),FKNOCK(8)=',
     1                         EIGKNS(2),FKNSRG(2),FKNOCK(8),
     1    ' Eigenvalue before knockdown by three factors=',EIGR,
     1    ' Knockdown factor, EIGKNS(2)*FKNSRG(2)*FKNOCK(8)=',
     1                        EIGKNS(2)*FKNSRG(2)*FKNOCK(8)
            CALL LOCCON(1,2,IWEBL6,INUMTT,EIGR,
     1                                 EIGKNS(2)*FKNSRG(2)*FKNOCK(8),
C END NOV 2003
     1         FSPAN,ISTIF,IGENRL,EIGR,IMOD,NLOC(7),NLOC(7),
     1         NLOC(7),CONMAX,IPOINC,CONSTR,ICONST,WORDB,0,ITIPL6,
C BEG OCT 2004
     1         KOUBCK,4,IFLGL6)
C END OCT 2004
C
         ENDIF
C End of (IMOD.EQ.1.AND.IHIGHR.EQ.1.AND.IFICT9.EQ.0) condition.
C
C BEG NOV 2003
C        IF (IMOD.EQ.1.AND.ILOWER.EQ.1) THEN
         IF (IMOD.EQ.1.AND.ILOWER.EQ.1.AND.IFCT10.EQ.0) THEN
C END NOV 2003
            CALL TRANS2(M3R,YLOCR3,YR)
C BEG AUG 2001
 9540       CONTINUE
            ILABEL=9540
            IF (NPRT.GE.1) WRITE(IFILE,*) 
     1               ' LABEL NO. IN STRUCT=',ILABEL
C END AUG 2001
            CALL BUCKLE(NLOC(8),IMOD,IFILE,IWR,ILOCR,DSR,ASR,BSR,0,
     1      DIAGR,CRX,DRX,DIR,XR,YR,ZR,EIGR,1,IYLOC8,RESULT,CIRC,M3R,
     1      IDRWR,NBLKR,NGBKR,NKFR,2,IMAXBR,KMAXBR,IPV2R,IBVCR,1000,1,
     1      THERMX,THERMS,P,KAPPA1,KAPPA2,0,WPRES,IUNK,CS,
     1      FNX,FNY,FNXY,FXBEG,FXEND,FYBEG,FYEND,FXYBEG,FXYEND,
     1      FNX0,FNY0,FNXY0,R,JJJ,1,IABP,LENMOD,0,
C BEG AUG 2001
     1      TEMP(1,1),IMTEMP,WPB1,EIGITR(18),0,DELTN2,0,0,MINTRG,
     1      ILABEL)
C END AUG 2001
C
            IF (EIGR.LE.0.0.AND.IMOD.EQ.0.AND.JJJ.EQ.0) THEN
               WRITE(IFILE,23) ABS(EIGR)
C BEG FEB 1999
               CALL LOADBA(27)
C END FEB 1999
               IF (IRESTY.EQ.1) GO TO 2222
            ENDIF
            EIGR = ABS(EIGR)
C
            IF (ISOGRD.EQ.0) CALL SHRRED(IREDUC,FNX,FNY,FNXY,TEFF(1),
     1      TY(1),GTX(1,5),EIGR,NPRT,IMOD,JJJ,0.,0.,0,FNX0,FNY0,42)
            IF (ISOGRD.EQ.1) CALL SHRRED(IREDUC,FNX,FNY,FNXY,TEFF(1),
     1      TEFF(1),GTX(1,5),EIGR,NPRT,IMOD,JJJ,0.,0.,0,FNX0,FNY0,43)
C
            IF (NPRT.GE.0) WRITE(IFILE,'(A,I3,1P,E12.4)')
     1    ' "skin"-ring module: lo-n circ. waves, eigenvalue=',
     1      NLOC(8),EIGR
C
C BEG NOV 2003
            IF (NPRT.GE.2) WRITE(IFILE,'(A,/,A,/,A)')
     1    ' EIGKNS(3) = knockdown for smeared stringers (low-n)',
     1    ' FKNSRG(3) = knockdown for anisotropy/in-plane shear',
     1    ' FKNOCK(8) = knockdown for initial geometric imperfections'
            IF (NPRT.GE.2)
     1      WRITE(IFILE,'(A,1P,3E12.4,/,A,1P,E12.4,/,A,1P,E12.4)')
     1    ' Knockdown factors, EIGKNS(3),FKNSRG(3),FKNOCK(8)=',
     1                         EIGKNS(3),FKNSRG(3),FKNOCK(8),
     1    ' Eigenvalue before knockdown by three factors=',EIGR,
     1    ' Knockdown factor, EIGKNS(3)*FKNSRG(3)*FKNOCK(8)=',
     1                        EIGKNS(3)*FKNSRG(3)*FKNOCK(8)
            CALL LOCCON(1,2,IWEBL7,INUMTT,EIGR,
     1                                 EIGKNS(3)*FKNSRG(3)*FKNOCK(8),
C END NOV 2003
     1         FSPAN,ISTIF,IGENRL,EIGR,IMOD,NLOC(8),NLOC(8),
     1         NLOC(8),CONMAX,IPOINC,CONSTR,ICONST,WORDB,0,ITIPL7,
C BEG OCT 2004
     1         KOUBCK,5,IFLGL7)
C END OCT 2004
C
         ENDIF
C End of (IMOD.EQ.1.AND.ILOWER.EQ.1.AND.IFCT10.EQ.0) condition.
      ENDIF
C BEG OCT 2004
C  (End of the IF (PEDG.AND.MINTRG.LT.4) condition.)
C END OCT 2004
C
C*********************************************************************
C END CALCULATION OF "SKIN"-RING BUCKLING USING DISCRETIZED MODEL
C OF INTER-RING PANEL WITH SMEARED STRINGERS AND DISCRETIZED RING
C*********************************************************************
C
  871 CONTINUE
C END OCT 1998
C
C  MAX STRESS CONSTRAINTS...
C
C BEG APR 1997
C     IF (IQUICK.EQ.0.AND.ICASE.EQ.1.AND.EKOISV.LT.0.8) GO TO 69
C     IF (IQUICK.EQ.0.AND.ICASE.EQ.2.AND.IWEAK.EQ.1
C    1                              .AND.EKOISV.LT.0.8) GO TO 69
C END APR 1997
C BEG JULY 2007
      IF (NPRT.GE.1) THEN
      IF (NPRT.GE.0) WRITE(IFILE,'(A,I3,A)')
     1' ** CHAPTER 23,24: DESIGN PERTURBATION INDEX, IMOD=',IMOD,' **'
      IF (IQUICK.NE.1.AND.ICASE.NE.2.AND.
     1    (INTGEN.NE.1.AND.INTRNG.NE.1.AND.INTLOC.NE.1))
     1 WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' *************************************************************',
     1' CHAPTER 23 (IQUICK=1 stresses from SUBROUTINE STRCON) and',
     1' CHAPTER 24 (short summary of redistribution of Nx,Ny,Nxy',
     1' due to growth of initial imperfection(s)) are not executed',
     1' because:',
     1' (IQUICK.NE.1.AND.ICASE.NE.2.AND.',
     1' INTGEN.NE.1.AND.INTRNG.NE.1.AND.INTLOC.NE.1)'
      ENDIF
C END JULY 2007
C BEG JUNE 1995
C     IF (IQUICK.EQ.1.OR.
      IF (IQUICK.EQ.1.OR.ICASE.EQ.2.OR.
C END JUNE 1995
     1    (INTGEN.EQ.1.OR.INTRNG.EQ.1.OR.INTLOC.EQ.1)) THEN
C
C**********************************************************************
C  BEGIN CALCULATION OF STRESSES IN LAYERS AND SEGMENTS, IQUICK = 1
C**********************************************************************
C
C BEG OCT 2004
 9550       CONTINUE
            ILABEL=9550
            IF (NPRT.GE.1) WRITE(IFILE,*)
     1               ' LABEL NO. IN STRUCT=',ILABEL
C END OCT 2004
C        IF (ITUTOR.EQ.1)
C    1    CALL DATUM(IFILE4,110,0,0,INT,REALL,CHARAC,IOUT,0,IPROMP)
C BEG OCT 2006
      IF (NPRT.GE.1) WRITE(IFILE,'(/,/,/,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************',
     1' ************          CHAPTER 23             *****************',
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************'
      IF (NPRT.GE.0) WRITE(IFILE,'(A,I3,A)')
     1' **** CHAPTER 23: DESIGN PERTURBATION INDEX, IMOD=',IMOD,' ****'
      IF (NPRT.GE.1) WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1 ' *************************************************************',
     1 ' CHAPTER 23 Compute stresses in layers and at various',
     1 '            locations in modules for both positive and',
     1 '            negative imperfection amplitudes from SUBROUTINE',
     1 '            STRCON (local postbuckling neglected). See [1L]',
     1 '            (panda2.news) Items 36b,d,w, 41b, and Section E',
     1 '            of Table 122.6 in Item 122.'
C END OCT 2006
         IF (NPRT.GE.1) WRITE(IFILE,'(/,A)')
     1'***** BEGIN SUBROUTINE STRCON (IQUICK = 1 TYPE STRESSES) ******'
         CALL STRCON(CONMAX,ISTIF,NSEG,NLAYER,LTYPE,EALLOW,MATL,ANGLE,
     1               EPS1,EPS2,EPS12,EPS10,EPS20,EPS120,
     1               B2,W2,ICONST,CONSTR,WORDB,IADDB,T,TAPE,DEGRAD,
     1               FSSTR,ETHERM,THERMX,THERMY,IPOINC,INUMTT,IMOD,
     1               EPSLOD,ZPARTX,ZPARTY,ETHRMX,ETHRMY,CRACK,ICHANG,
     1               EALLST,NPRT,NAPPL,IFILE,ITYPE,IICHAN,
     1               EPSTOT,EPSFIX,EPSEIG,1,INTEXT,ICASE,
     1               TEMP,FMULT,NNODES,IMTEMP,P,PWDD,IABT,0,1,0,4)
         IF (NPRT.GE.1) WRITE(IFILE,*)
     1'***** END   SUBROUTINE STRCON (IQUICK = 1 TYPE STRESSES) ******'
         IF (ITYPE.EQ.1.AND.NPRT.GE.2)
     1    WRITE(IFILE,*)' AFTER STRCON: IMOD,INUMTT,ICONST=',
     1                                  IMOD,INUMTT,ICONST
C
         IF (IMOD.EQ.0) THEN
            IF (JJJ.EQ.0.AND.NPRT.GE.1)
     1 WRITE(IFILE,*)' **** END OF STRESS CALCULATIONS ***'
C BEG DEC 1993 (LOOPING REMOVED BECAUSE IT LEADS TO ERRORS)
            IF (ICHANG.EQ.1.AND.IICHAN.LT.1) THEN
C           IF (ICHANG.EQ.1.AND.IICHAN.LT.0) THEN
C END DEC 1993
               ICHANG = 0
               IICHAN = IICHAN + 1
               GO TO 2
            ENDIF
C           WRITE(8,*)' ICHANG,IICHAN=',ICHANG,IICHAN
C BEG DEC 1993  (REMOVE CALL TO STRCON AS IT GENERATES EXTRA MARGINS)
C           IF (NPRT.GE.2.AND.ITYPE.EQ.2.AND.IICHAN.GT.0)
C    1         CALL STRCON(CONMAX,ISTIF,NSEG,NLAYER,LTYPE,EALLOW,
C    1               MATL,ANGLE,EPS1,EPS2,EPS12,EPS10,EPS20,EPS120,
C    1               B2,W2,ICONST,CONSTR,WORDB,IADDB,T,TAPE,DEGRAD,
C    1               FSSTR,ETHERM,THERMX,THERMY,IPOINC,INUMTT,IMOD,
C    1               EPSLOD,ZPARTX,ZPARTY,ETHRMX,ETHRMY,CRACK,ICHANG,
C    1               EALLST,NPRT,NAPPL,IFILE,ITYPE,0,
C    1               EPSTOT,EPSFIX,EPSEIG,1,INTEXT,ICASE,
C    1               TEMP,FMULT,NNODES,IMTEMP,P,PWDD,IABT,0,1,0,5)
C END DEC 1993
C
         ENDIF
C End of (IMOD.EQ.0) condition.
C BEG JAN 1994
         IF (NPRT.GE.2) THEN
C  PRINT CHANGES IN RESULTANTS IN SKIN AND STIFFENER PARTS CAUSED BY
C  GROWTH OF INITIAL IMPERFECTIONS DURING LOADING....
C BEG OCT 2006
          WRITE(IFILE,'(/,/,/,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************',
     1' ************          CHAPTER 24             *****************',
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************'
         ENDIF
C
         IF (NPRT.GE.0) WRITE(IFILE,'(A,I3,A)')
     1' **** CHAPTER 24: DESIGN PERTURBATION INDEX, IMOD=',IMOD,' ****'
         IF (NPRT.GE.1) THEN
          WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A)')
     1 ' *************************************************************',
     1 ' CHAPTER 24 Present short summary of redistribution of stress',
     1 '            resultants, Nx, Ny, Nxy, caused by prebuckling',
     1 '            bending of an initially imperfect shell.',
     1 '            See Section 6.0 in [1K], for example.'
C END OCT 2006
          WRITE(IFILE,'(/,A,/,A,/,A,1PE12.4,/,A,1PE12.4,/,A,1PE12.4)')
     1    ' Additional resultants (Nx,Ny) in panel skin from',
     1    ' global and inter-ring bending of imperfect panel:',
     1    '            Additional axial resultant, dNx =',DELSKN(1,1,1),
     1    '            Additional  hoop resultant, dNy =',DELSKN(2,1,1),
     1    '   Additional in-plane shear resultant, dNxy=',DELSKN(3,1,1)
            IF (ISTIF(1).NE.0) THEN
               IF (ISOGRD.NE.0) THEN
            WRITE(IFILE,'(/,A,/,A,/,A,1PE12.4,/,A,1PE12.4,/,A,1PE12.4)')
     1    ' Additional axial resultants dNx along webs and flanges of',
     1' isogrid from global and inter-ring bending of imperfect panel:',
     1    '  Additional Nx at webtip of stiffener 1, dNx =',DELISO(3,1),
     1    '  Additional Nx at webtip of stiffener 2, dNx =',DELISO(3,2),
     1    '  Additional Nx at webtip of stiffener 3, dNx =',DELISO(3,3)
                 WRITE(IFILE,'(/,A,1PE12.4,/,A,1PE12.4,/,A,1PE12.4)')
     1    '  Additional Nx in flange of stiffener 1, dNx =',DELISO(4,1),
     1    '  Additional Nx in flange of stiffener 2, dNx =',DELISO(4,2),
     1    '  Additional Nx in flange of stiffener 3, dNx =',DELISO(4,3)
               ELSE
                IF (ISTIF(1).NE.5)
     1    WRITE(IFILE,'(/,A,/,A,A,/,A,1PE12.4,/,A,1PE12.4,/,A,1PE12.4)')
     1     ' Additional axial resultants dNx along webs and flanges of',
     1     ' stringers from global and inter-ring bending of imperfect',
     1     ' panel:',
     1    '     Additional Nx in  base  of stringer, dNx =',DELFCE(2,1),
     1    '     Additional Nx at webtip of stringer, dNx =',DELFCE(3,1),
     1    '     Additional Nx in flange of stringer, dNx =',DELFCE(4,1)
                IF (ISTIF(1).EQ.5)
     1    WRITE(IFILE,'(/,A,/,A,A,/,A,1PE12.4,/,A,1PE12.4,/,A,1PE12.4)')
     1     ' Additional axial resultants dNx along webs and flanges of',
     1     ' truss from global and inter-ring bending of imperfect',
     1     ' panel:',
     1    '        Additional Nx in  base  of truss, dNx =',DELFCE(1,1),
     1    '        Additional Nx at webtip of truss, dNx =',DELFCE(2,1),
     1    '        Additional Nx in flange of truss, dNx =',DELFCE(3,1)
               ENDIF
            ENDIF
C   End of (ISTIF(1).NE.0) condition.
C           IF (ICASE.EQ.2.AND.ISTIF(2).NE.0) THEN
            IF (               ISTIF(2).NE.0) THEN
          WRITE(IFILE,'(/,A,/,A,A,/,A,1PE12.4,/,A,1PE12.4,/,A,1PE12.4)')
     1     ' Additional axial resultants dNx along webs and flanges of',
     1     ' rings from global and inter-ring bending of imperfect',
     1     ' panel:',
     1    '     Additional Nx in  base  of   ring,   dNx =',DELFCE(2,2),
     1    '     Additional Nx at webtip of   ring,   dNx =',DELFCE(3,2),
     1    '     Additional Nx in flange of   ring,   dNx =',DELFCE(4,2)
            ENDIF
         ENDIF
C End of (NPRT.GE.0) condition.
C23456789012345678901234567890123456789012345678901234567890123456789012
      ENDIF
C End of (IQUICK.EQ.1.OR.ICASE.EQ.2.OR.
C        (INTGEN.EQ.1.OR.INTRNG.EQ.1.OR.INTLOC.EQ.1)) condition. 
C
C**********************************************************************
C  END CALCULATION OF STRESSES IN LAYERS AND SEGMENTS, IQUICK = 1
C**********************************************************************
C
C BEG APR 1997
   69 CONTINUE
C END APR 1997
C
C BUCKLING OF STIFFENER SEGMENTS MOVED DOWN HERE (AFTER STRCON) IN
C ORDER TO ACCOUNT FOR THE CHANGE IN PRESTRESS DISTRIBUTION IN THE
C STIFFENER PARTS DUE TO INITIAL IMPERFECTIONS IN THE BUCKLING ANALYSIS
C OF THE STIFFENER SEGMENTS. THIS SEGMENT OF CODE USED TO BE AFTER
C THE "IF (ISWID.EQ.1) THEN" STATEMENTS, WHICH FOLLOW "8 CONTINUE" ABOVE.
C**********************************************************************
C  BEGIN BUCKLING OF STIFFENER SEGMENTS....
C**********************************************************************
C
C BEG OCT 2004
 9560       CONTINUE
            ILABEL=9560
            IF (NPRT.GE.1) WRITE(IFILE,*)
     1               ' LABEL NO. IN STRUCT=',ILABEL
C END OCT 2004
C BEG OCT 2006
      IF (NPRT.GE.1) WRITE(IFILE,'(/,/,/,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************',
     1' ************          CHAPTER 25             *****************',
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************'
      IF (NPRT.GE.0) WRITE(IFILE,'(A,I3,A)')
     1' **** CHAPTER 25: DESIGN PERTURBATION INDEX, IMOD=',IMOD,' ****'
      IF (NPRT.GE.1) WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A)')
     1 ' *************************************************************',
     1 ' CHAPTER 25 Compute buckling load factors from PANDA-type',
     1 '            theory for the various segments of a stringer and',
     1 '            a ring. Typical buckling modes are displayed in',
     1 '            Figs. 5 and 6 of Ref.[1B].'
C END OCT 2006
      IF (NPRT.GE.1) WRITE(IFILE,'(/,A)')
     1  '***** BEGIN SUBROUTINE STFEIG (BUCKLING IN STIFFENERS) ******'
      CALL STFEIG(ICASE,ISTIF,B,B2,H,W,W2,CX,CY,RESEIG,RESTOT,
     1         ICONST,CONSTR,WORDB,IADDB,ISKIN,TX,TY,GTX,GTY,IREDUC,
C BEG JULY 1996
     1         CONMAX,IPOINC,INUMTT,IMOD,ICRIP1,MCRIP,NCRIP,IFILE,JJJ,
C END JULY 1996
C BEG JULY 1997
     1         RWBTOT,RWBEIG,ICASE,FSBSTR,EIGTRY,ILAMB2,ILAM34,ILAM44,
C END JULY 1997
C BEG NOV 2003
     1         0,ITRUSS,ICWEB,ICROWN,FKNOCK,IPROMP,IQUICK,WBEIG,0,
C BEG JUN 2004
C BEG DEC 2005
C BEG FEB 2006
     1         IBLADE,ABIG,BBIG,9560,ILOADS,FSLOC)
C END FEB 2006
C END DEC 2005
C END JUN 2004
C END NOV 2003
C BEG FEB 1996
      IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
      IF (NPRT.GE.0) WRITE(IFILE,*)
     1 '***** END   SUBROUTINE STFEIG (BUCKLING IN STIFFENERS) ******'
C
C BEG JULY 1997
C     IF (IQUICK.EQ.0.AND.ISOGRD.EQ.0.AND.WPB1.NE.0.) THEN
      IF (IQUICK.EQ.0.AND.ISOGRD.EQ.0.AND.WPB1.NE.0.0
     1                               .AND.ICASE.EQ.1) THEN
C END JULY 1997
C BEG DEC 2005 
 9565       CONTINUE
            ILABEL=9565
            IF (NPRT.GE.1) WRITE(IFILE,*)
     1               ' LABEL NO. IN STRUCT=',ILABEL
C END DEC 2005 
         IF (NPRT.GE.0) WRITE(IFILE,'(/,A)')
     1  '***** BEGIN SUBROUTINE STFEIG (NO POSTBUCKLING EFFECT) ******'
         CALL STFEIG(ICASE,ISTIF,B,B2,H,W,W2,CX,CY,RESEGX,RESTOT,
     1         ICONST,CONSTR,WORDB,IADDB,ISKIN,TX,TY,GTX,GTY,IREDUC,
     1         CONMAX,IPOINC,INUMTT,IMOD,ICRIP1,MCRIP,NCRIP,IFILE,JJJ,
     1         RWBTOT,RWBOLD,ICASE,FSBSTR,EIGTRY,ILMB2,ILM34,ILM44,
C BEG NOV 2003
C BEG JUN 2004
     1         0,ITRUSS,ICWEB,ICROWN,FKNOCK,IPROMP,1,WBOLD,1,IBLDUM,
C BEG DEC 2005
C BEG FEB 2006
     1         ABIG,BBIG,9565,ILOADS,FSLOC)
C END FEB 2006
C END DEC 2005
C END JUN 2004
C END NOV 2003
         IF (NPRT.GE.0) WRITE(IFILE,*)
     1  '******* END SUBROUTINE STFEIG (NO POSTBUCKLING EFFECT) ******'
         IF (IRESTY.EQ.1) GO TO 2222
      ENDIF
C End of (IQUICK.EQ.0.AND.ISOGRD.EQ.0.AND.WPB1.NE.0.0
C                               .AND.ICASE.EQ.1) condition. 
C END MAY 1997
      IF (ITYPE.EQ.1.AND.NPRT.GE.2)
     1  WRITE(IFILE,*)' AFTER STFEIG: IMOD,INUMTT,ICONST=',
     1                                IMOD,INUMTT,ICONST
      IF ((IMOD.EQ.0.AND.JJJ.EQ.0.AND.NPRT.GE.1).OR.NPRT.GE.2) THEN
        WRITE(IFILE,*)
     1 ' *** END OF STIFFENER SEGMENT BUCKLING (if any) ****'
        WRITE(IFILE,*)' '
      ENDIF
C**********************************************************************
C  END BUCKLING OF STIFFENER SEGMENTS....
C**********************************************************************
C BEG OCT 2004
 9570       CONTINUE
            ILABEL=9570
            IF (NPRT.GE.1) WRITE(IFILE,*)
     1               ' LABEL NO. IN STRUCT=',ILABEL
C END OCT 2004
C BEG JUN 1996
      IF (IMOD.EQ.0.AND.NPRT.GE.2) THEN
         ISANDP = 0
         DO 498 ILOOP = 1,2
            ISTART = 1
            IENDS   = NSEG(ILOOP)
            IF (ILOOP.EQ.2) THEN
               ISTART = 2
               IF (B2(2).EQ.0.) ISTART = 3
            ENDIF
            IF (ISTART.GT.IENDS) GO TO 498
            DO 496 ISEG = ISTART,IENDS
               IF (ISANDW(ISEG,ILOOP).LE.1.OR.
     1             ISANDW(ISEG,ILOOP).EQ.NLAYER(ISEG,ILOOP)) GO TO 496
C  The segment is a sandwich wall. Write out the face sheet force
C  resultants, FNXF1(ISEG,ILOOP), etc in the various segments.
               IF (ILOOP.EQ.1) WRD3 = ' STR'
               IF (ILOOP.EQ.1.AND.ISEG.EQ.1) WRD3 = ' SKN'
               IF (ILOOP.EQ.2) WRD3 = ' RNG'
               IF (ISANDP.EQ.0) WRITE(IFILE,494)
C23456789012345678901234567890123456789012345678901234567890123456789012
  494          FORMAT(/'       FORCE RESULTANTS IN SANDWICH FACESHEETS'
     1       ' AFTER CALL TO SUB. STRCON'/
     1       ' Segment   Top (or leftmost) facesheet 1      Bottom (or '
     1        'rightmost) facesheet 2'/
     1       '  Iseg    Axial, Nx   Hoop, Ny   Shear, Nxy'
     1              '   Axial, Nx   Hoop, Ny   Shear, Nxy')
               ISANDP = 1
               WRITE(IFILE,495) WRD3,ISEG,
     1         FNXF1(ISEG,ILOOP),FNYF1(ISEG,ILOOP),FNXYF1(ISEG,ILOOP),
     1         FNXF2(ISEG,ILOOP),FNYF2(ISEG,ILOOP),FNXYF2(ISEG,ILOOP)
  495          FORMAT(A,I3,1P,6E12.4)
  496       CONTINUE
  498    CONTINUE
      ENDIF
C End of (IMOD.EQ.0.AND.NPRT.GE.2) condition.
C END JUN 1996
C  MORE BUCKLING ANALYSIS, THIS TIME FROM THE ORIGINAL PANDA CODE...
C
C**********************************************************************
C BEGIN CALCULATION OF VARIOUS KINDS OF BUCKLING FROM PANDA-TYPE
C (CLOSED FORM) ANALYSIS
C**********************************************************************
C
         IF (ISTIF(1).EQ.5) CALL MOVER(CXSAVE,1,CX,1,144)
      IF (IMOD.EQ.0.AND.JJJ.EQ.0.AND.ILOADS.EQ.1) THEN
C        IF (ITUTOR.EQ.1)
C    1    CALL DATUM(IFILE4,130,0,0,INT,REALL,CHARAC,IOUT,0,IPROMP)
         IF (ITUTOR.EQ.1) WRITE(IFILE,70) ILOADS
         IF (ITUTOR.EQ.1) WRITE(IFILE,71)
         IF (ITUTOR.EQ.1) WRITE(IFILE,72) LENMOD
      ENDIF
C BEG DEC 1998
      IF ((IMOD.EQ.0.AND.NPRT.GE.1).OR.NPRT.GE.2) THEN
C END DEC 1998
              WRITE(IFILE,73) JJJ,ILOADS,IICHAN,FNX,FNY,FNXY,
     1                               FNX0,FNY0,FNXY0
         IF (IABP.EQ.0) THEN
            WRITE(IFILE,422) -P,FNXP0,FNYP0,FNXPL0,FNYPL0
         ELSE
            WRITE(IFILE,423) -P,FNXP0,FNYP0,FNXPL0,FNYPL0
         ENDIF
         WRITE(IFILE,74)
      ENDIF
C
   70 FORMAT(/' EXPLANATION OF FOLLOWING CALCULATIONS (LOAD SET NO.',
     1 I2,'):'/
     1'     Next, various types of buckling (general, panel, local,'/
     1'     rolling) are calculated with use of subroutines from the'/
     1'     original PANDA. See Bushnell, D., "PANDA--Interactive'/
     1'     program for minimum weight design of stiffened cylindrical'/
     1'     panels and shells", Computers and Structures, Vol. 16,'/
     1'     pp. 167-185, 1983,  and Ref. 51 therein, for details on'/
     1'     methods used. In the list below, "simp-support" means that'/
     1'     the region of the panel being considered is assumed to be'/
     1'     simply-supported along all four edges and there are no')
   71 FORMAT(
     1'     stiffeners along these edges; "local buck." indicates the'/
     1'     region being considered is that bounded by adjacent rings'/
     1'     and stringers; "smear string" indicates the region is that'/
     1'     bounded axially by adjacent rings and bounded circumferen-'/
     1'     tially by the panel longitudinal edges, with stringers'/
     1'     smeared out; "smear rings" indicates the region is that'/
     1'     bounded axially by the panel lateral edges and circum-'/
     1'     ferentially by adjacent stringers, with rings smeared'/
     1'     out in the model; "rolling with" means that both stif-'/
     1'     feners and skin participate in the buckling deflections;')
   72 FORMAT(
     1'     "rolling only" means that only the stiffener cross sec-'/
     1'     tions deform--the panel skin does not participate;  M  is'/
     1'     the number of axial half-waves in the region being consid-'/
     1'     ered;  N  is the number of circumferential half-waves in'/
     1'     the region being considered; and "slope" is the slope of'/
     1'     the nodal lines in the buckling modal pattern (non-zero'/
     1'     for panels with unbalanced laminates and panels with'/
     1'     applied in-plane shear loading).  Loading is assumed to be'/
     1'     uniform (N1, N2, N12) even if you provided for Nx varying'/
     1'     in the L2 (circumferential) direction.  Clamping is taken'/
     1'     into account by doing the analysis for a panel that is'/
     1'     shorter in the axial direction by the factor LENMOD =',
     1 1PE12.4/
     1'     than the dimension that you originally provided as input.'/)
   73 FORMAT(/' Buckling load factors from PANDA-type models for'/
     1' design iteration no.',I3,',  load set no.',I2,',  material itera
     1tion no.',I3,'.'/' These load factors include the effect of in-pla
     1ne shear loading.  M = axial half-waves; N = circ. half-waves.'/
     1' Loading is uniform, with resultants given by:'/
     1'   LOAD SET A: axial, Nx =',1PE10.2,'; circ., Ny =',1PE10.2,
     1'; in-plane shear, Nxy =',1PE10.2/
     1'   LOAD SET B: axial, Nxo=',1PE10.2,'; circ., Nyo=',1PE10.2,
     1'; in-plane shear, Nxyo=',1PE10.2,' (Not from normal pressure)')
   74 FORMAT(
     1' BEHAVIORAL  EIGENVALUE      MODEL DESCRIPTION AND BUCKLING MODE'
     1/' CONSTRAINT (load factor)')
C
      ISHORT = IQUICK
C BEG MAR 1996
C     IF (FNX.GE.0.0.AND.FNY.GE.0.0.AND.IQUICK.EQ.0) ISHORT = 1
      IF (IDISCR.EQ.0.AND.IQUICK.EQ.0) ISHORT = 1
C END MAR 1996
C
      IF (IMOD.EQ.0) THEN
         EIGLC0 = 0.
         EIGSM0 = 0.
         EIGAL0 = 0.
      ELSE
         EIGLC1 = 0.
         EIGSM1 = 0.
         EIGAL1 = 0.
      ENDIF
C BEG OCT 2006
      IF (NPRT.GE.1) WRITE(IFILE,'(/,/,/,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************',
     1' ************          CHAPTER 26             *****************',
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************'
      IF (NPRT.GE.0) WRITE(IFILE,'(A,I3,A)')
     1' **** CHAPTER 26: DESIGN PERTURBATION INDEX, IMOD=',IMOD,' ****'
      IF (NPRT.GE.1) WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1 ' *************************************************************',
     1 ' CHAPTER 26 Compute local, inter-ring, general buckling load',
     1 '            factors from PANDA-type models [1B] and from',
     1 '            "alternative" (double-trigonometric series',
     1 '            expansion) models, Ref.[1G]. Also compute',
     1 '            sandwich wall behavior [1F], if applicable.',
     1 '            Also, compute buckling load factors appropriate',
     1 '            when substiffeners are present.'
C END OCT 2006
      IF (NPRT.GE.1) WRITE(IFILE,'(/,A)')
     1'*** BEGIN SUBROUTINE BUCPAN (PANDA-TYPE BUCKLING LOADS) ****'
C BEG JAN 2002
      IF (NPRT.GE.2) WRITE(IFILE,'(/,A,I8,/)')
     1 ' Number of constraints, NCONST=',NCONST
C END JAN 2002
 9260 CONTINUE
      ILABEL=9260
      IF (NPRT.GE.1) WRITE(IFILE,*)' LABEL NO. IN STRUCT=',ILABEL
      IADDST = 1
C BEG JUN 2004
C     IF (IQUICK.EQ.0) IADDST = 0
      IF (IQUICK.EQ.0.AND.KLAYER(1,1).EQ.0) IADDST = 0
C END JUN 2004
      FNYEFF = FNY
      FNY0FF = FNY0
      IF (ISTIF(2).EQ.0) THEN
         FNYEFF = FNY + DFNYPA
         FNY0FF = FNY0 + DFNYPB
      ENDIF
C BEG FEB 2007
      IF (ITYPE.EQ.1.AND.NPRT.GE.2)
     1 WRITE(IFILE,*)' BEFORE BUCPAN: IMOD,INUMTT,ICONST=',
     1                                IMOD,INUMTT,ICONST
C END FEB 2007
      CALL BUCPAN(IFILE,IMOD,JJJ,ICONST,CONSTR,WORDB,ISTIF,IREDUC,
     1         KOITER,LENMOD,CONMAX,FSGEN,FSPAN,FSLOC,EIGGEN,0,IPOINC,
     1         INUMTT,FKNOCK,IGENRL,CSLOP,EILOCL,MLOCAL,ISKIN,
     1         MSHEAR,NSHEAR,MNOSHR,NNOSHR,ITUTOR,IWIDE,ISHORT,
     1         FNX,FNYEFF,FNXY,FNX0,FNY0FF,FNXY0,FNXP0,FNYP0,
     1         FNXYP0,FNXPL0,FNYPL0,FNXYPL,NLOCAL,ITIP,IABP,1,
     1         EPSLOD(4),RWBEIG,RWBTOT,ICASE,FSBSTR,1,TLOCAL,1,0,
C BEG NOV 2003
     1       IADDST,9260,ICD7D,ICD8D,ICD9D,0,ILOADS,MORCON,NCASES,20)
C END NOV 2003
C BEG FEB 2007
      IF (ITYPE.EQ.1.AND.NPRT.GE.2)
     1 WRITE(IFILE,*)' AFTER  BUCPAN: IMOD,INUMTT,ICONST=',
     1                                IMOD,INUMTT,ICONST
C END FEB 2007
      IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 9410
      IF (IRESTY.EQ.1) GO TO 2222
      IF (NPRT.GE.0) WRITE(IFILE,*)
     1'****  END SUBROUTINE BUCPAN (PANDA-TYPE BUCKLING LOADS) ****'
C
C  GET LOCAL BUCKLING OF TRIANGULAR SKIN BETWEEN ISOGRID STIFFENERS
      IF (ISOGRD.EQ.1) THEN
         SIDE = B(1)/0.8660254
C BEG DEC 2004
C        NDOF = 10
         NDOF = 15
C        NODEX = 15
C        NODEY = 15
         NODEX = 21
         NODEY = 21
C END DEC 2004
         IF (ITYPE.NE.1) THEN
            NDOF = 15
            NODEX= 21
            NODEY= 21
         ENDIF
         SFNXY = 1.
         IF (ABS(PNXY).GT.0.) SFNXY = PNXY/ABS(PNXY)
C BEG JUN 2004
C        PPNXY= -(PNXY+DELSKN(3,1,1)*SFNXY)
         PPNXY= -(PNXY+0.0*DELSKN(3,1,1)*SFNXY)
C END JUN 2004
         IF (ISOANG.EQ.2) THEN
C BEG JUN 2004
C           PPNX = -(PNX+DELSKN(1,1,1))
C           PPNY = -(PNY+DELSKN(2,1,1))
            PPNX = -(PNX+0.0*DELSKN(1,1,1))
            PPNY = -(PNY+0.0*DELSKN(2,1,1))
C END JUN 2004
            PSKNXP = -RSKNXP
            PSKNYP = -RSKNYP
         ELSE
C BEG JUN 2004
C           PPNX = -(PNY+DELSKN(2,1,1))
C           PPNY = -(PNX+DELSKN(1,1,1))
            PPNX = -(PNY+0.0*DELSKN(2,1,1))
            PPNY = -(PNX+0.0*DELSKN(1,1,1))
C END JUN 2004
            PSKNXP = -RSKNYP
            PSKNYP = -RSKNXP
         ENDIF
         CALL TRIANG(IFILE,0,SIDE,60.,CX(4,4,1),CX(4,5,1),CX(5,5,1),
     1               CX(4,6,1),CX(5,6,1),CX(6,6,1),PPNX,PPNY,PPNXY,
     1               PSKNXP,PSKNYP,1,NODEX,NODEY,NDOF,NPRT,ISOANG,
     1               EIGLOC,WW(1),WW(22501),WW(45001),WW(46601),
C BEG DEC 2004
     1               WW(48201),CX(4,4,3),CX(6,6,3),H(1),WBEIG(1,1,1),
     1               WBTOT(1,1,1),IEDGE)
C END DEC 2004
C BEG NOV 1997
         CALL SHRRED(IREDUC,-PPNX,-PPNY,PPNXY,TX(1),TY(1),GTX(1,1),
C BEG OCT 1996
     1               EIGLOC,0,0,0,0.,0.,1,-PSKNXP,-PSKNYP,44)
C END OCT 1996
C END NOV 1997
         IF (NPRT.GE.2.AND.IREDUC.EQ.1) WRITE(IFILE,*)
     1   ' LOCAL BUCKLING OF PANEL SKIN AFTER KNOCKDOWN FOR T.S.D.=',
     1   EIGLOC
         INUMTT = INUMTT + 1
C BEG DEC 2004
         FSAFTY = FSLOC 
C END DEC 2004
         CALL CONVRF(FSAFTY,CN2)
         IF (IMOD.EQ.0.AND.(EIGLOC/FSAFTY).LT.MAXCON) THEN
            ICAR = ICAR + 1
            PCWORD(ICAR) = 'local buckling of triangular skin'
            CPLOT(ICAR) = EIGLOC/FSAFTY - 1.
            IADDCC(ICAR) = 0
            FSAFEP(ICAR) = FSAFTY
         ENDIF
         IF (IMOD.EQ.0.AND.(EIGLOC/FSAFTY).GT.CONMAX) GO TO 76
         IF (IMOD.EQ.1.AND.IPOINC(INUMTT).EQ.0) GO TO 76
         ICONST = ICONST + 1
         IF (IMOD.EQ.0) IPOINC(INUMTT) = 1
         CONSTR(ICONST) = EIGLOC/FSAFTY
         WORDB(ICONST)=
     1   'Local triangular skin buckling load factor -1; F.S.='//CN2
C BEG APR 2007
         IF (NPRT.GE.0) WRITE(IFILE,'(A,1P,E12.4,2X,A)')
     1 ' Margin=',CONSTR(ICONST)-1.,WORDB(ICONST)
C END APR 2007
C BEG AUG 1995
C23456789012345678901234567890123456789012345678901234567890123456789012
         IF (NPRT.GE.2) WRITE(IFILE,'(A,/,A,/,A,I3,A,I2,A,I2)')
     1 ' ******* THE ISOGRID PANEL SKIN BUCKLING MARGIN WAS COMPUTED:',
     1   WORDB(ICONST),
     1 ' ******* CONSTRAINT NO.',ICONST,'; LOAD SET NO.',ILOADS,
     1 '; SUBCASE NO.',ICASE
C END AUG 1995
   76    CONTINUE
      ENDIF
C End of (ISOGRD.EQ.1) condition.
      IF (NPRT.GE.0) WRITE(IFILE,*)
     1'*** END   SUBROUTINE BUCPAN (PANDA-TYPE BUCKLING LOADS) ****'
      IF (ISTIF(1).NE.0.AND.EIGGEN.LT.1.0) ISTOP= 1
       IF ((IMOD.EQ.0.AND.JJJ.EQ.0.AND.NPRT.GE.1).OR.NPRT.GE.2)
     1 WRITE(IFILE,*)' **** END OF PANDA-TYPE (CLOSED FORM) *****'
       IF ((IMOD.EQ.0.AND.JJJ.EQ.0.AND.NPRT.GE.1).OR.NPRT.GE.2)
     1 WRITE(IFILE,*)' *** CALCS. FOR A VARIETY OF BUCKLING MODES ***'
C
C
C**********************************************************************
C END CALCULATION OF VARIOUS KINDS OF BUCKLING FROM PANDA-TYPE
C (CLOSED FORM) ANALYSIS
C**********************************************************************
         IF (ITYPE.EQ.1.AND.NPRT.GE.2)
     1    WRITE(IFILE,*)' AFTER BUCPAN: IMOD,INUMTT,ICONST=',
     1                                  IMOD,INUMTT,ICONST
C BEG APR 2009
C23456789012345678901234567890123456789012345678901234567890123456789012
      EIGCLM = 10.E+16
      IF ((ISTIF(2).EQ.1.OR.ISTIF(2).EQ.3).AND.RCOLD.LT.10.E+16
     1 .AND.INSRNG.EQ.1.AND.ILOADS.EQ.1.AND.ICASE.EQ.1) THEN
 9270   CONTINUE
        ILABEL=9270
        IF (NPRT.GE.1) WRITE(IFILE,*)' LABEL NO. IN STRUCT=',ILABEL
        IF (NPRT.GE.1)
     1      WRITE(IFILE,'(/,/,/,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************',
     1' ************         CHAPTER 26(b)           *****************',
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************'
        IF (NPRT.GE.0) WRITE(IFILE,'(A,I3,A)')
     1' **** CHAPTER 26b: DESIGN PERTURBATION INDEX, IMOD=',IMOD,' ****'
        IF (NPRT.GE.1)
     1  WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1 ' *************************************************************',
     1 ' CHAPTER 26b Compute the ring web buckling load factor and',
     1 '             circumferential wavelength from cold-bending a',
     1 '             flat "hogged out" plate into a cylindrical panel',
     1 '             with cold-bending radius RCOLD from iterations.', 
     1 '             This analysis is performed only for cylindrical',
     1 '             shells with INTERNAL rings with rectangular or',
     1 '             Tee-shaped cross sections. The entire shell must',
     1 '             be fabricated of the same isotropic material.',
     1 '             See Item No.790 in ...panda2/doc/panda2.news .'
C
        CALL COLDBD(IFILE,NPRT,IMOD,ILABEL,ILOADS,ICASE,INUMTT,ICAR,
     1   PCWORD,CPLOT,IADDCC,FSAFEP,CONMAX,IPOINC,ICONST,CONSTR,WORDB,
     1   MAXCON,ITYPE,CXCOLD,CYCOLD,CY3CLD,CXCLD0,CXCLD1,
     1   CNXVAR,CNYVAR,WAVCLD,KLAYER(1,1),ISBCLD)
C
        WFLANG(1) = W(1)
        WFLANG(2) = W(2)
        WFLNG0(1) = WW0(1)
        WFLNG0(2) = WW0(2)
        BCOLD(1)  = B(1)
        BCOLD(2)  = B(2)
        B2COLD(1) = B2(1)
        B2COLD(2) = B2(2)
        B2CLD0(1) = B20(1) 
        B2CLD0(2) = B20(2)
        IF (FLGCLD.LT.0.1) WFLANG(2) = 0.01*W(2)
        IF (FLGCLD.LT.0.1) WFLNG0(2) = 0.01*WW0(2)
C
        CIRCLD = MIN(CIRC,5.0*WAVCLD)
        EIGCLM = 10.E+16
        IF (NPRT.GE.0) WRITE(IFILE,'(/,A,/,A,/,A)')
     1' ***** BEGIN DISCRETIZED "SKIN"-RING MODULE MODEL OF    *****',
     1' *** COLD-BENDING BUCKLING OF RING (smeared stringers)    ***',
     1' ***** This is Model No. 2 of cold-bending ring buckling *****'
C
        IF (IMOD.EQ.0) THEN
C
          DO 9272 NWAVE = 1,10
C
          DUMMY = 0.
          CALL MOVER(0.,0,DUMMYA,1,1000)
          IPRINT = 0
C
          CALL ARRYS2(IFILE,IWR,ILOCR,DSR,NWAVE,ASR,BSR,R,CIRCLD,
     1       DUMMYA,0,0,0,DUMMYA,DUMMYA,DUMMYA,DUMMYA,
     1       DUMMYA,DUMMYA,DUMMY,DUMMY,DUMMY,IPRINT,1,IMOD,
     1       DUMMY,ILABEL,
     1       B,B2,B0,B20,H,H0,WFLANG,WFLNG0,W2,W20,IZSTIF,ISTIF,
     1       NSEGR,I5R,M3R,NCONDR,D1R,D2R,IFIXBR,
     1       IFXBR,ITYPER,IMAXBR,KMAXBR,ILOCBR,
     1       IRWCBR,IIWBR,IDRWR,NBLKR,NGBKR,NKFR,
     1       DUMMYA,DUMMYA,DUMMYA,DUMMYA,DUMMYA,DUMMYA,
     1       CXCOLD,1,WFOUND,ISANDW,NLAYER,IFREE,
     1       KROOTS,TX0,DUMMYA,
     1       CY3CLD,INSRNG,IFAY,TY0,CYCOLD,NPRT,DUMMY,DUMMY,
     1       0,DUMMY,DUMMY,DUMMY,DUMMY,0,PEDG,
     1       CNXVAR,CNYVAR,DUMMYA,DUMMYA,DUMMYA,DUMMYA,DUMMYA)
C
          CALL EBAND2(IFILE,0,NWAVE,ILOCR,DIAGR,ASR,BSR,CRX,DRX,DIR,
     1     XR,YR,ZR,0,M3R,NBLKR,IDRWR,NGBKR,NKFR,IMAXBR,KMAXBR,1,
     1     IPV2R,IBVCR,1000,2,1,0,-1.E-16,DUMMY,IFLGG,KTM,KROOTS)
C
C23456789012345678901234567890123456789012345678901234567890123456789012
          EIGCLD(NWAVE) = ROOTX(1)
C
          IF (NPRT.GE.0) WRITE(IFILE,'(A,1P,E12.4,A,I3,/,A,1P,E12.4,A)')
     1  ' circumferential waves over the circ.length,',CIRCLD,'=',NWAVE,
     1  ' ring cold buckling load factor from a discretized module=',
     1    EIGCLD(NWAVE),' (smeared stringers)'
C
          EIGCLM = MIN(EIGCLM,ABS(EIGCLD(NWAVE)))
C
          IF (NWAVE.GT.1) CALL TRANS3(M3R,YCOLD,YCOLDS) 
          CALL TRANS1(M3R,YR,YCOLD)
          NWAVE1 = NWAVE - 1
          IF (NWAVE.GT.1.AND.EIGCLD(NWAVE).GT.EIGCLD(NWAVE1)) GO TO 9273 
 9272     CONTINUE
 9273     CONTINUE
          EIGCLM = ABS(EIGCLD(NWAVE1))
          NCRITA = NWAVE1*CIRC/CIRCLD
          NCRIT1 = NWAVE1
          WAVLEN = CIRC/FLOAT(NCRITA)
          CALL TRANS3(M3R,YCOLDS,YCOLD1)
C
          IF (ISTIF(1).NE.0.AND.IMOD.EQ.0.AND.NPRT.GE.0) THEN
            WRITE(IFILE,'(/,A,1P,E12.4,/,A,1P,E12.4)')
     1' circumferential spacing of the stringers=                     ',
     1  B(1),
     1' circumferential half-wavelength of the critical buckling mode=',
     1  WAVLEN
          ENDIF
C
          CALL TRANS2(M3R,YCOLDS,YR)
          IF (NPRT.GE.0) WRITE(IFILE,'(/,A)')
     1' **** BEGIN SUB. MODE ("SKIN"-RING MODULE COLD BENDING 1) ****'
          CALL MODE(IFILE,NPRT,NSEGR,I5R,IWR,DSR,M3R,YR,ISKN13,1,
     1             2, ZPARTY,0.,CYCOLD,1,WPRES,EIGCLM,
     1             RMAX,ITIPPL,ICWBRG,IMOD,
     1             WW9,WD9,WDD9,UU9,VV9,VP9,ZREFRG,NWAVE1,FKNSRG(1),
     1             FKNDUM,ICRNRG,P,IFCT13,WDDD9,14,0,TY,2,1,
     1    INTSNG,RAD2,TY,IZSTIF,B,B2,H,WFLANG,W2,
     1    B0,B20,H0,WFLNG0,W20,ISTIF,INTEXT,IFAY,IBEAM,IONEST,
     1    AXIAL,CIRC,ICRIP,ISEGC,WRATIO,WTIPWS,WRATTP,
     1    WRATWB,WRATCN,WRWIDE,WIDLMM,PEDG,ISOGRD,RESULT,IFLGPP)
C
          IF (IFCT13.NE.0) THEN
             WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/)')
     1     ' ******* NOTE ******* NOTE ******* NOTE ******',
     1     ' Since the mode is FICTITIOUS, the discretized',
     1     ' "skin"-ring module cold-bending buckling model',
     1     ' will not be used.',
     1     ' ***** END NOTE *** END NOTE **** END NOTE ***'
          ENDIF
C
        ELSE
C     End of (IMOD.EQ.0) condition
C
          DUMMY = 0.
          CALL MOVER(0.,0,DUMMYA,1,1000)
          IPRINT = 0
C
          CALL ARRYS2(IFILE,IWR,ILOCR,DSR,NCRIT1,ASR,BSR,R,CIRCLD,
     1       DUMMYA,0,0,0,DUMMYA,DUMMYA,DUMMYA,DUMMYA,
     1       DUMMYA,DUMMYA,DUMMY,DUMMY,DUMMY,IPRINT,1,IMOD,
     1       DUMMY,ILABEL,
     1       B,B2,B0,B20,H,H0,WFLANG,WFLNG0,W2,W20,IZSTIF,ISTIF,
     1       NSEGR,I5R,M3R,NCONDR,D1R,D2R,IFIXBR,
     1       IFXBR,ITYPER,IMAXBR,KMAXBR,ILOCBR,
     1       IRWCBR,IIWBR,IDRWR,NBLKR,NGBKR,NKFR,
     1       DUMMYA,DUMMYA,DUMMYA,DUMMYA,DUMMYA,DUMMYA,
     1       CXCOLD,1,WFOUND,ISANDW,NLAYER,IFREE,
     1       KROOTS,TX0,DUMMYA,
     1       CY3CLD,INSRNG,IFAY,TY0,CYCOLD,NPRT,DUMMY,DUMMY,
     1       0,DUMMY,DUMMY,DUMMY,DUMMY,0,PEDG,
     1       CNXVAR,CNYVAR,DUMMYA,DUMMYA,DUMMYA,DUMMYA,DUMMYA)
C
          CALL TRANS2(M3R,YCOLD1,YR)
          CALL EBAND2(IFILE,0,NCRIT1,ILOCR,DIAGR,ASR,BSR,CRX,DRX,DIR,
     1     XR,YR,ZR,1,M3R,NBLKR,IDRWR,NGBKR,NKFR,IMAXBR,KMAXBR,1,
     1     IPV2R,IBVCR,1000,2,1,0,-1.E-16,DUMMY,IFLGG,KTM,KROOTS)
C
C23456789012345678901234567890123456789012345678901234567890123456789012
          EIGCLM = ROOTX(1)
C
          IF (NPRT.GE.2) WRITE(IFILE,'(A,1P,E12.4,A,I3,/,A,1P,E12.4,A)')
     1 ' circumferential waves over the circ.length,',CIRCLD,'=',NCRIT1,
     1  ' ring cold buckling load factor from a discretized module=',
     1    EIGCLM,' (smeared stringers)'
C
        ENDIF
C     End of IMOD condtion
C
C Constraint condition for ring cold-bending buckling (yes stringers):
        IF (IFCT13.NE.0) GO TO 9276
        INUMTT = INUMTT + 1
        FSAFTY = 1.1
        CALL CONVRF(FSAFTY,CCN2)
        CALL CONVRT(NCRITA,CCN)
        IF (IMOD.EQ.0.AND.(EIGCLM/FSAFTY).LT.MAXCON) THEN
          ICAR = ICAR + 1
          PCWORD(ICAR) =
     1   'Cold-bending ring buckling, "skin"-ring module'
          CPLOT(ICAR) = EIGCLM/FSAFTY - 1.
          IADDCC(ICAR) = 0
          FSAFEP(ICAR) = FSAFTY
        ENDIF
        IF (IMOD.EQ.0.AND.(EIGCLM/FSAFTY).GT.CONMAX) GO TO 9276 
        IF (IMOD.EQ.1.AND.IPOINC(INUMTT).EQ.0) GO TO 9276 
        ICONST = ICONST + 1
        IF (IMOD.EQ.0) IPOINC(INUMTT) = 1
        CONSTR(ICONST) = EIGCLM/FSAFTY
        WORDB(ICONST)=
     1   'Cold-bending ring buckling, "skin"-ring module; N='//CCN//
     1   ';FS='//CCN2
        IF (NPRT.GE.0) WRITE(IFILE,'(A,1P,E12.4,2X,A)')
     1 ' Margin=',CONSTR(ICONST)-1.,WORDB(ICONST)
C23456789012345678901234567890123456789012345678901234567890123456789012
        IF (NPRT.GE.2) WRITE(IFILE,'(A,/,A,/,A,I3,A,I2,A,I2)')
     1 ' *** THE FOLLOWING COLD-BENDING BUCKLING MARGIN JUST COMPUTED:',
     1   WORDB(ICONST),
     1 ' ******** CONSTRAINT NO.',ICONST,'; LOAD SET NO.',ILOADS,
     1 '; SUBCASE NO.',ICASE
 9276 CONTINUE
        IF (ITYPE.EQ.1.AND.NPRT.GE.2)
     1   WRITE(IFILE,*)' AFTER 4440 C: IMOD,INUMTT,ICONST=',
     1                                 IMOD,INUMTT,ICONST
C
        IF (NPRT.GE.0) WRITE(IFILE,'(A,/,A,/,A,/,/)')
     1' End of computation of cold-bending ring buckling load factor',
     1' in SUBROUTINE STRUCT from "skin"-ring discretized module.',
     1' ***********************************************************'
C
        IF (ISTIF(1).EQ.0) GO TO 9284
C
        CIRCLD = MIN(CIRC,10.0*WAVCLD)
        CIRCLD = MIN(CIRCLD,B(1))
        EIGCLM = 10.E+16
        IF (NPRT.GE.0) WRITE(IFILE,'(/,A,/,A,/,A)')
     1' ***** BEGIN DISCRETIZED  SKIN-RING  MODULE MODEL OF    *****',
     1' ***   COLD-BENDING BUCKLING OF RING (no stringers)     ***',
     1' ***** This is Model No. 3 of cold-bending ring buckling *****'
C
        IF (IMOD.EQ.0) THEN
C
          DO 9277 NWAVE = 1,10
C
          DUMMY = 0.
          CALL MOVER(0.,0,DUMMYA,1,1000)
          IPRINT = 0
C
          CALL ARRYS2(IFILE,IWR,ILOCR,DSR,NWAVE,ASR,BSR,R,CIRCLD,
     1       DUMMYA,0,0,0,DUMMYA,DUMMYA,DUMMYA,DUMMYA,
     1       DUMMYA,DUMMYA,DUMMY,DUMMY,DUMMY,IPRINT,1,IMOD,
     1       DUMMY,ILABEL,
     1       B,B2,B0,B20,H,H0,WFLANG,WFLNG0,W2,W20,IZSTIF,ISTIF,
     1       NSEGR,I5R,M3R,NCONDR,D1R,D2R,IFIXBR,
     1       IFXBR,ITYPER,IMAXBR,KMAXBR,ILOCBR,
     1       IRWCBR,IIWBR,IDRWR,NBLKR,NGBKR,NKFR,
     1       DUMMYA,DUMMYA,DUMMYA,DUMMYA,DUMMYA,DUMMYA,
     1       CXCLD1,1,WFOUND,ISANDW,NLAYER,IFREE,
     1       KROOTS,TX0,DUMMYA,
     1       CY3CLD,INSRNG,IFAY,TY0,CYCOLD,NPRT,DUMMY,DUMMY,
     1       0,DUMMY,DUMMY,DUMMY,DUMMY,0,PEDG,
     1       CNXVAR,CNYVAR,DUMMYA,DUMMYA,DUMMYA,DUMMYA,DUMMYA)
C
          CALL EBAND2(IFILE,0,NWAVE,ILOCR,DIAGR,ASR,BSR,CRX,DRX,DIR,
     1     XR,YR,ZR,0,M3R,NBLKR,IDRWR,NGBKR,NKFR,IMAXBR,KMAXBR,1,
     1     IPV2R,IBVCR,1000,2,1,0,-1.E-16,DUMMY,IFLGG,KTM,KROOTS)
C
C23456789012345678901234567890123456789012345678901234567890123456789012
          EIGCLD(NWAVE) = ROOTX(1)
C
          IF (NPRT.GE.0) WRITE(IFILE,'(A,1P,E12.4,A,I3,/,A,1P,E12.4,A)')
     1  ' circumferential waves over the circ.length,',CIRCLD,'=',NWAVE,
     1  ' ring cold buckling load factor from a discretized module=',
     1    EIGCLD(NWAVE),' (no stringers)'
C
          EIGCLM = MIN(EIGCLM,ABS(EIGCLD(NWAVE)))
C
          IF (NWAVE.GT.1) CALL TRANS3(M3R,YCOLD,YCOLDS)
          CALL TRANS1(M3R,YR,YCOLD)
          NWAVE1 = NWAVE - 1
          IF (NWAVE.GT.1.AND.EIGCLD(NWAVE).GT.EIGCLD(NWAVE1)) GO TO 9278
 9277     CONTINUE
 9278     CONTINUE
          EIGCLM = ABS(EIGCLD(NWAVE1))
          NCRITB = NWAVE1*CIRC/CIRCLD
          NCRIT2 = NWAVE1
          WAVLEN = CIRC/FLOAT(NCRITB)
          CALL TRANS3(M3R,YCOLDS,YCOLD2)
C
          IF (ISTIF(1).NE.0.AND.IMOD.EQ.0.AND.NPRT.GE.0) THEN
            WRITE(IFILE,'(/,A,1P,E12.4,/,A,1P,E12.4)')
     1' circumferential spacing of the stringers=                     ',
     1  B(1),
     1' circumferential half-wavelength of the critical buckling mode=',
     1  WAVLEN
          ENDIF
C
          CALL TRANS2(M3R,YCOLDS,YR)
          IF (NPRT.GE.0) WRITE(IFILE,'(/,A)')
     1' **** BEGIN SUB. MODE (SKIN-RING MODULE COLD BENDING 2) ****'
          CALL MODE(IFILE,NPRT,NSEGR,I5R,IWR,DSR,M3R,YR,ISKN14,1,
     1        2, ZPARTY,0.,CYCOLD,1,WPRES,EIGCLM,
     1        RMAX,ITIPPL,ICWBRG,IMOD,
     1        WW10,WD10,WDD10,UU10,VV10,VP10,ZREFRG,NWAVE1,FKNSRG(1),
     1        FKNDUM,ICRNRG,P,IFCT14,WDDD10,15,0,TY,2,1,
     1    INTSNG,RAD2,TY,IZSTIF,B,B2,H,WFLANG,W2,
     1    B0,B20,H0,WFLNG0,W20,ISTIF,INTEXT,IFAY,IBEAM,IONEST,
     1    AXIAL,CIRC,ICRIP,ISEGC,WRATIO,WTIPWS,WRATTP,
     1    WRATWB,WRATCN,WRWIDE,WIDLMM,PEDG,ISOGRD,RESULT,IFLGPP)
C
          IF (IFCT14.NE.0) THEN
             WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/)')
     1     ' ******* NOTE ******* NOTE ******* NOTE ******',
     1     ' Since the mode is FICTITIOUS, the discretized',
     1     ' skin-ring module cold-bending buckling model',
     1     ' will not be used.',
     1     ' ***** END NOTE *** END NOTE **** END NOTE ***'
          ENDIF
C
        ELSE
C     End of (IMOD.EQ.0) condition
C
          DUMMY = 0.
          CALL MOVER(0.,0,DUMMYA,1,1000)
          IPRINT = 0
C
          CALL ARRYS2(IFILE,IWR,ILOCR,DSR,NCRIT2,ASR,BSR,R,CIRCLD,
     1       DUMMYA,0,0,0,DUMMYA,DUMMYA,DUMMYA,DUMMYA,
     1       DUMMYA,DUMMYA,DUMMY,DUMMY,DUMMY,IPRINT,1,IMOD,
     1       DUMMY,ILABEL,
     1       B,B2,B0,B20,H,H0,WFLANG,WFLNG0,W2,W20,IZSTIF,ISTIF,
     1       NSEGR,I5R,M3R,NCONDR,D1R,D2R,IFIXBR,
     1       IFXBR,ITYPER,IMAXBR,KMAXBR,ILOCBR,
     1       IRWCBR,IIWBR,IDRWR,NBLKR,NGBKR,NKFR,
     1       DUMMYA,DUMMYA,DUMMYA,DUMMYA,DUMMYA,DUMMYA,
     1       CXCLD1,1,WFOUND,ISANDW,NLAYER,IFREE,
     1       KROOTS,TX0,DUMMYA,
     1       CY3CLD,INSRNG,IFAY,TY0,CYCOLD,NPRT,DUMMY,DUMMY,
     1       0,DUMMY,DUMMY,DUMMY,DUMMY,0,PEDG,
     1       CNXVAR,CNYVAR,DUMMYA,DUMMYA,DUMMYA,DUMMYA,DUMMYA)
C
          CALL TRANS2(M3R,YCOLD2,YR)
          CALL EBAND2(IFILE,0,NCRIT2,ILOCR,DIAGR,ASR,BSR,CRX,DRX,DIR,
     1     XR,YR,ZR,1,M3R,NBLKR,IDRWR,NGBKR,NKFR,IMAXBR,KMAXBR,1,
     1     IPV2R,IBVCR,1000,2,1,0,-1.E-16,DUMMY,IFLGG,KTM,KROOTS)
C
          IF (NPRT.GE.0) WRITE(IFILE,'(/,A)')
     1' **** BEGIN SUB. MODE (SKIN-RING MODULE COLD BENDING 2) ****'
          CALL MODE(IFILE,NPRT,NSEGR,I5R,IWR,DSR,M3R,YR,ISKN14,1,
     1        2, ZPARTY,0.,CYCOLD,1,WPRES,EIGCLM,
     1        RMAX,ITIPPL,ICWBRG,IMOD,
     1        WW10,WD10,WDD10,UU10,VV10,VP10,ZREFRG,NWAVE1,FKNSRG(1),
     1        FKNDUM,ICRNRG,P,IFCT14,WDDD10,15,0,TY,2,1,
     1    INTSNG,RAD2,TY,IZSTIF,B,B2,H,WFLANG,W2,
     1    B0,B20,H0,WFLNG0,W20,ISTIF,INTEXT,IFAY,IBEAM,IONEST,
     1    AXIAL,CIRC,ICRIP,ISEGC,WRATIO,WTIPWS,WRATTP,
     1    WRATWB,WRATCN,WRWIDE,WIDLMM,PEDG,ISOGRD,RESULT,IFLGPP)
C
C23456789012345678901234567890123456789012345678901234567890123456789012
          EIGCLM = ROOTX(1)
C
          IF (NPRT.GE.2) WRITE(IFILE,'(A,1P,E12.4,A,I3,/,A,1P,E12.4,A)')
     1 ' circumferential waves over the circ.length,',CIRCLD,'=',NCRIT2,
     1  ' ring cold buckling load factor from a discretized module=',
     1    EIGCLM,' (no stringers)'
C
        ENDIF
C     End of IMOD condition
C
C Constraint condition for ring cold-bending buckling (no stringers):
        IF (IFCT14.NE.0) GO TO 9282
        INUMTT = INUMTT + 1
        FSAFTY = 1.1
        CALL CONVRF(FSAFTY,CCN2)
        CALL CONVRT(NCRITB,CCN)
        IF (IMOD.EQ.0.AND.(EIGCLM/FSAFTY).LT.MAXCON) THEN
          ICAR = ICAR + 1
          PCWORD(ICAR) =
     1   'Cold-bending ring buckling, skin-ring module'
          CPLOT(ICAR) = EIGCLM/FSAFTY - 1.
          IADDCC(ICAR) = 0
          FSAFEP(ICAR) = FSAFTY
        ENDIF
        IF (IMOD.EQ.0.AND.(EIGCLM/FSAFTY).GT.CONMAX) GO TO 9282 
        IF (IMOD.EQ.1.AND.IPOINC(INUMTT).EQ.0) GO TO 9282 
        ICONST = ICONST + 1
        IF (IMOD.EQ.0) IPOINC(INUMTT) = 1
        CONSTR(ICONST) = EIGCLM/FSAFTY
        WORDB(ICONST)=
     1   'Cold-bending ring buckling, skin-ring module; N='//CCN//
     1   ';FS='//CCN2
        IF (NPRT.GE.0) WRITE(IFILE,'(A,1P,E12.4,2X,A)')
     1 ' Margin=',CONSTR(ICONST)-1.,WORDB(ICONST)
C23456789012345678901234567890123456789012345678901234567890123456789012
        IF (NPRT.GE.2) WRITE(IFILE,'(A,/,A,/,A,I3,A,I2,A,I2)')
     1 ' *** THE FOLLOWING COLD-BENDING BUCKLING MARGIN JUST COMPUTED:',
     1   WORDB(ICONST),
     1 ' ******** CONSTRAINT NO.',ICONST,'; LOAD SET NO.',ILOADS,
     1 '; SUBCASE NO.',ICASE
 9282   CONTINUE
        IF (ITYPE.EQ.1.AND.NPRT.GE.2)
     1   WRITE(IFILE,*)' AFTER 4440 C: IMOD,INUMTT,ICONST=',
     1                                 IMOD,INUMTT,ICONST
C
        IF (NPRT.GE.0) WRITE(IFILE,'(A,/,A,/,A,/,/)')
     1' End of computation of cold-bending ring buckling load factor',
     1' in SUBROUTINE STRUCT from skin-ring discretized module.',
     1' ***********************************************************'
C
 9284   CONTINUE
C
C  NOTE: Never managed to get this section to work. Abandoned it.
C  It's unlikely that the circumferential wavelength of the internal
C  major ring cold-bending buckling mode will be less than the spacing
C  BSUB(1,1,1) between adjacent sub-stringers. We already have the
C  solution with smeared sub-stiffeners and we have the closed-form
C  solution in which the skin does not participate. Therefore, it is
C  unlikely that the following "skin only" branch will add a critical
C  margin.
C
        IF (KLAYER(1,1).EQ.0) GO TO 9384
        GO TO 9384
C
C  There are substiffeners...
C
        CIRCLD = MIN(CIRC,10.0*WAVCLD)
        CIRCLD = MIN(CIRCLD,BSUB(1,1,1))
        BCOLD(2)  = BSUB(2,1,1)
        B2COLD(2) = 0. 
        B2CLD0(2) = 0. 
        EIGCLM = 10.E+16
        IF (NPRT.GE.0) WRITE(IFILE,'(/,A,/,A,/,A)')
     1' ***** BEGIN DISCRETIZED  SKIN-RING  MODULE MODEL OF    *****',
     1' ***   COLD-BENDING BUCKLING OF RING (skin only)          ***',
     1' ***** This is Model No. 4 of cold-bending ring buckling *****'
C
        IF (IMOD.EQ.0) THEN
C
          DO 9377 NWAVE = 1,10
C
          DUMMY = 0.
          CALL MOVER(0.,0,DUMMYA,1,1000)
          IPRINT = 0
C
          CALL ARRYS2(IFILE,IWR,ILOCR,DSR,NWAVE,ASR,BSR,R,CIRCLD,
     1       DUMMYA,0,0,0,DUMMYA,DUMMYA,DUMMYA,DUMMYA,
     1       DUMMYA,DUMMYA,DUMMY,DUMMY,DUMMY,IPRINT,1,IMOD,
     1       DUMMY,ILABEL,
     1       BCOLD,B2COLD,BCOLD0,B2CLD0,H,H0,WFLANG,WFLNG0,W2,W20,
     1       IZSTIF,ISTIF,NSEGR,I5R,M3R,NCONDR,D1R,D2R,IFIXBR,
     1       IFXBR,ITYPER,IMAXBR,KMAXBR,ILOCBR,
     1       IRWCBR,IIWBR,IDRWR,NBLKR,NGBKR,NKFR,
     1       DUMMYA,DUMMYA,DUMMYA,DUMMYA,DUMMYA,DUMMYA,
     1       CXCLD0,1,WFOUND,ISANDW,NLAYER,IFREE,
     1       KROOTS,TX0,DUMMYA,
     1       CY3CLD,INSRNG,IFAY,TY0,CYCOLD,NPRT,DUMMY,DUMMY,
     1       0,DUMMY,DUMMY,DUMMY,DUMMY,0,PEDG,
     1       CNXVAR,CNYVAR,DUMMYA,DUMMYA,DUMMYA,DUMMYA,DUMMYA)
C
          CALL EBAND2(IFILE,0,NWAVE,ILOCR,DIAGR,ASR,BSR,CRX,DRX,DIR,
     1     XR,YR,ZR,0,M3R,NBLKR,IDRWR,NGBKR,NKFR,IMAXBR,KMAXBR,1,
     1     IPV2R,IBVCR,1000,2,1,0,-1.E-16,DUMMY,IFLGG,KTM,KROOTS)
C
C23456789012345678901234567890123456789012345678901234567890123456789012
          EIGCLD(NWAVE) = ROOTX(1)
C
          IF (NPRT.GE.0) WRITE(IFILE,'(A,1P,E12.4,A,I3,/,A,1P,E12.4,A)')
     1  ' circumferential waves over the circ.length,',CIRCLD,'=',NWAVE,
     1  ' ring cold buckling load factor from a discretized module=',
     1    EIGCLD(NWAVE),' (no stringers or substiffeners)'
C
          EIGCLM = MIN(EIGCLM,ABS(EIGCLD(NWAVE)))
C
          IF (NWAVE.GT.1) CALL TRANS3(M3R,YCOLD,YCOLDS)
          CALL TRANS1(M3R,YR,YCOLD)
          NWAVE1 = NWAVE - 1
          IF (NWAVE.GT.1.AND.EIGCLD(NWAVE).GT.EIGCLD(NWAVE1)) GO TO 9378
 9377     CONTINUE
 9378     CONTINUE
          EIGCLM = ABS(EIGCLD(NWAVE1))
          NCRITE = NWAVE1*CIRC/CIRCLD
          NCRIT5 = NWAVE1
          WAVLEN = CIRC/FLOAT(NCRITE)
C
          IF (ISTFSB(1).NE.0.AND.IMOD.EQ.0.AND.NPRT.GE.0) THEN
            WRITE(IFILE,'(/,A,1P,E12.4,/,A,1P,E12.4)')
     1' circumferential spacing of the sub-stringers=',
     1  BSUB(1,1,1),
     1' circumferential half-wavelength of the critical buckling mode=',
     1  WAVLEN
C           IF (WAVLEN.LT.1.5*B(1)) THEN
C             WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A,/)')
C    1' The discretized skin-ring module model (skin with no',
C    1' stringers) is not too conservative because the circumferential',
C    1' half-wavelength of the critical cold-bending buckling mode is',
C    1' less than 1.5 times the spacing between adjacent stringers.',
C    1' Therefore, the skin can easily deform locally between adjacent',
C    1' stringers in the critical cold-bending ring web buckling mode.'
C           ELSE
C             WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A,/,A,/)')
C    1' The discretized skin-ring module model (skin with no',
C    1' stringers) may be too conservative because the circumferential',
C    1' half-wavelength of the critical cold-bending buckling mode is',
C    1' greater than 1.5 times the spacing between adjacent stringers.',
C    1' Therefore, the skin cannot easily deform locally between',
C    1' adjacent stringers in the critical cold-bending ring web',
C    1' buckling mode.'
C           ENDIF
          ENDIF
C
          CALL TRANS2(M3R,YCOLDS,YR)
          IF (NPRT.GE.0) WRITE(IFILE,'(/,A)')
     1' **** BEGIN SUB. MODE (SKIN-RING MODULE COLD BENDING 3) ****'
          CALL MODE(IFILE,NPRT,NSEGR,I5R,IWR,DSR,M3R,YR,ISKN15,1,
     1        2, ZPARTY,0.,CYCOLD,1,WPRES,EIGCLM,
     1        RMAX,ITIPPL,ICWBRG,IMOD,
     1        WW11,WD11,WDD11,UU11,VV11,VP11,ZREFRG,NWAVE1,FKNSRG(1),
     1        FKNDUM,ICRNRG,P,IFCT15,WDDD11,15,0,TY,2,1,
     1    INTSNG,RAD2,TY,IZSTIF,BCOLD,B2COLD,H,WFLANG,W2,
     1    BCOLD0,B2CLD0,H0,WFLNG0,W20,ISTIF,INTEXT,IFAY,IBEAM,IONEST,
     1    AXIAL,CIRC,ICRIP,ISEGC,WRATIO,WTIPWS,WRATTP,
     1    WRATWB,WRATCN,WRWIDE,WIDLMM,PEDG,ISOGRD,RESULT,IFLGPP)
C
          IF (IFCT15.NE.0) THEN
             WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/)')
     1     ' ******* NOTE ******* NOTE ******* NOTE ******',
     1     ' Since the mode is FICTITIOUS, the discretized',
     1     ' skinonly-ring module cold-bending buckling model',
     1     ' will not be used.',
     1     ' ***** END NOTE *** END NOTE **** END NOTE ***'
          ENDIF
C
        ELSE
C     End of (IMOD.EQ.0) condition
C
          DUMMY = 0.
          CALL MOVER(0.,0,DUMMYA,1,1000)
          IPRINT = 0
C
          CALL ARRYS2(IFILE,IWR,ILOCR,DSR,NCRIT5,ASR,BSR,R,CIRCLD,
     1       DUMMYA,0,0,0,DUMMYA,DUMMYA,DUMMYA,DUMMYA,
     1       DUMMYA,DUMMYA,DUMMY,DUMMY,DUMMY,IPRINT,1,IMOD,
     1       DUMMY,ILABEL,
     1       BCOLD,B2COLD,BCOLD0,B2CLD0,H,H0,WFLANG,WFLNG0,W2,W20,
     1       IZSTIF,ISTIF,NSEGR,I5R,M3R,NCONDR,D1R,D2R,IFIXBR,
     1       IFXBR,ITYPER,IMAXBR,KMAXBR,ILOCBR,
     1       IRWCBR,IIWBR,IDRWR,NBLKR,NGBKR,NKFR,
     1       DUMMYA,DUMMYA,DUMMYA,DUMMYA,DUMMYA,DUMMYA,
     1       CXCLD0,1,WFOUND,ISANDW,NLAYER,IFREE,
     1       KROOTS,TX0,DUMMYA,
     1       CY3CLD,INSRNG,IFAY,TY0,CYCOLD,NPRT,DUMMY,DUMMY,
     1       0,DUMMY,DUMMY,DUMMY,DUMMY,0,PEDG,
     1       CNXVAR,CNYVAR,DUMMYA,DUMMYA,DUMMYA,DUMMYA,DUMMYA)
C
          CALL EBAND2(IFILE,0,NCRIT5,ILOCR,DIAGR,ASR,BSR,CRX,DRX,DIR,
     1     XR,YR,ZR,0,M3R,NBLKR,IDRWR,NGBKR,NKFR,IMAXBR,KMAXBR,1,
     1     IPV2R,IBVCR,1000,2,1,0,-1.E-16,DUMMY,IFLGG,KTM,KROOTS)
C
C23456789012345678901234567890123456789012345678901234567890123456789012
          EIGCLM = ROOTX(1)
C
          IF (NPRT.GE.2) WRITE(IFILE,'(A,1P,E12.4,A,I3,/,A,1P,E12.4,A)')
     1 ' circumferential waves over the circ.length,',CIRCLD,'=',NCRIT2,
     1  ' ring cold buckling load factor from a discretized module=',
     1    EIGCLM,' (no stringers or substiffeners)'
C
        ENDIF
C     End of IMOD condition
C
C Constraint condition for ring cold-bending buckling (no stringers):
        IF (IFCT15.NE.0) GO TO 9282
        INUMTT = INUMTT + 1
        FSAFTY = 1.1
        CALL CONVRF(FSAFTY,CCN2)
        CALL CONVRT(NCRITE,CCN)
        IF (IMOD.EQ.0.AND.(EIGCLM/FSAFTY).LT.MAXCON) THEN
          ICAR = ICAR + 1
          PCWORD(ICAR) =
     1   'Cold-bending ring buckling, skinonly-ring module'
          CPLOT(ICAR) = EIGCLM/FSAFTY - 1.
          IADDCC(ICAR) = 0
          FSAFEP(ICAR) = FSAFTY
        ENDIF
        IF (IMOD.EQ.0.AND.(EIGCLM/FSAFTY).GT.CONMAX) GO TO 9382 
        IF (IMOD.EQ.1.AND.IPOINC(INUMTT).EQ.0) GO TO 9382 
        ICONST = ICONST + 1
        IF (IMOD.EQ.0) IPOINC(INUMTT) = 1
        CONSTR(ICONST) = EIGCLM/FSAFTY
        WORDB(ICONST)=
     1   'Cold-bending ring buckling, skinonly-ring module; N='//CCN//
     1   ';FS='//CCN2
        IF (NPRT.GE.0) WRITE(IFILE,'(A,1P,E12.4,2X,A)')
     1 ' Margin=',CONSTR(ICONST)-1.,WORDB(ICONST)
C23456789012345678901234567890123456789012345678901234567890123456789012
        IF (NPRT.GE.2) WRITE(IFILE,'(A,/,A,/,A,I3,A,I2,A,I2)')
     1 ' *** THE FOLLOWING COLD-BENDING BUCKLING MARGIN JUST COMPUTED:',
     1   WORDB(ICONST),
     1 ' ******** CONSTRAINT NO.',ICONST,'; LOAD SET NO.',ILOADS,
     1 '; SUBCASE NO.',ICASE
 9382   CONTINUE
        IF (ITYPE.EQ.1.AND.NPRT.GE.2)
     1   WRITE(IFILE,*)' AFTER 4440 C: IMOD,INUMTT,ICONST=',
     1                                 IMOD,INUMTT,ICONST
C
        IF (NPRT.GE.0) WRITE(IFILE,'(A,/,A,/,A,/,/)')
     1' End of computation of cold-bending ring buckling load factor',
     1' in SUBROUTINE STRUCT from skinonly-ring discretized module.',
     1' ***********************************************************'
C
 9384   CONTINUE
C
      ENDIF
C  End of "IF ((ISTIF(2).EQ.1.OR.ISTIF(2).EQ.3).AND.RCOLD.LT.10.E+16
C     1   .AND.ILOADS.EQ.1.AND.ICASE.EQ.1)" condition 
C
C END APR 2009
C BEG MAR 1996
C     IF (FNX.GE.0.0.AND.FNY.GE.0.0) GO TO 87
C BEG OCT 2004
C     WRITE(IFILE,'(A,2I10)')
C    1 ' in STRUCT before GO TO 87, IDISCR,IGENRL=',IDISCR,IGENRL
C     CALL EXIT
C END OCT 2004
C
      IF (IDISCR.EQ.0) GO TO 87
C BEG MAR 2007
      IF (ICASE.NE.1) GO TO 87
C END MAR 2007
C
C*********************************************************************
C BEGIN CALCULATION OF GENERAL INSTABILITY USING DISCRETIZED MODEL
C OF ENTIRE PANEL WITH SMEARED STIFFENERS
C*********************************************************************
C
C ************ IF AXIAL LOAD VARIES ACROSS PANEL CALCULATE ***********
C ************ GENERAL INSTABILITY FROM BOSOR4-TYPE OF     ***********
C ************ DISCRETE MODEL...                           ***********
C
      IF (IGENRL.EQ.1) THEN
C        IF (ITUTOR.EQ.1)
C    1    CALL DATUM(IFILE4,140,0,0,INT,REALL,CHARAC,IOUT,0,IPROMP)
         IF (IMOD.EQ.0.AND.JJJ.EQ.0.AND.NPRT.GE.1) THEN
             WRITE(IFILE,80) FXBEG,FXEND,FNY,FNXY
             IF (IABP.EQ.1) WRITE(IFILE,81) FNXP0,FNYP0,FNXPL0,FNYPL0
             WRITE(IFILE,82) FNX0,FNX0,FNY0,FNXY0
             IF (IABP.EQ.0) WRITE(IFILE,81) FNXP0,FNYP0,FNXPL0,FNYPL0
             WRITE(IFILE,83) JJJ, ILOADS, IICHAN
         ENDIF
   80 FORMAT(/' Buckling load factor from BOSOR4-type model of entire'/
     1       ' panel with smeared stiffeners and axial load that'/
     1       ' varies in the L2 (circumferential) direction.'/
     1' APPLIED LOADS IN LOAD SET A:'/
     1'   Axial load at beginning of panel edge, NXBEG=',1PE10.2/
     1'   Axial load at   end     of panel edge, NXEND=',1PE10.2/
     1'   Circumferential load (uniform),        Ny   =',1PE10.2/
     1'   In-plane shear load  (uniform),       Nxy   =',1PE10.2/)
   81 FORMAT(
     1'   Axial load from pressure (global model)Nx(p)=',1PE10.2/
     1'   Circ. load from pressure (global model)Ny(p)=',1PE10.2/
     1'   Axial load from pressure (local  model)Nx(p)=',1PE10.2/
     1'   Circ. load from pressure (local  model)Ny(p)=',1PE10.2/)
   82 FORMAT(
     1' APPLIED LOADS IN LOAD SET B:'/
     1'   Axial load at beginning of panel edge, Nxo  =',1PE10.2/
     1'   Axial load at   end     of panel edge, Nxo  =',1PE10.2/
     1'   Circumferential load (uniform),        Nyo  =',1PE10.2/
     1'   In-plane shear load  (uniform),       Nxyo  =',1PE10.2/)
   83 FORMAT(
     1' Design iteration no.',I3,',  load set no.',I2,',  material itera
     1tion no.',I3,':')
C
         NDIVID = NNOSHR
         IF (NNOSHR.EQ.0) NDIVID = 1
         NPHW= I5G(1)/NDIVID
         I5REQD = 5*NNOSHR
         IF (NPHW.LT.5) WRITE(IFILE,85) NNOSHR, I5G(1), NPHW, I5REQD
   85 FORMAT(//' ***************** WARNING **************************'/
     1' BOSOR4-TYPE DISCRETIZED MODEL WILL YIELD POORLY CONVERGED'/
     1' BUCKLING LOAD BECAUSE THERE ARE TOO FEW NODAL POINTS PER'/
     1' HALF WAVE OF THE BUCKLING PATTERN PREDICTED BY THE PANDA-TYPE'/
     1' OF ANALYSIS. THE PANDA-TYPE OF ANALYSIS PREDICTS THAT THE'/
     1' CRITICAL BUCKLING PATTERN HAS',I3,' HALF WAVES IN THE CIRCUM-'/
     1' FERENTIAL DIRECTION. THE BOSOR4-TYPE OF DISCRETE MODEL HAS',I3/
     1' NODAL POINTS IN THE CIRCUMFERENTIAL DIRECTION. HENCE, THERE'/
     1' ARE',I2,' NODAL POINTS PER HALF WAVE OF THE EXPECTED BUCKLING'/
     1' MODE. THE MINIMUM NUMBER OF NODAL POINTS/N SHOULD BE ABOUT 5.'/
     1' THE MINIMUM REQUIRED NUMBER OF NODAL POINTS IN THE BOSOR4-TYPE'/
     1' MODEL IS THEREFORE',I4/
     1' *************************************************************'/)
C
         IF (IYLOCG.EQ.1) CALL TRANS2(M3G,YLOCG,YG)
C        IF (IYLOCG.EQ.0) CALL GLOBVC(I5G(1),CIRC,NNOSHR,IWG,YG)
C        IYLOCG = 1
C
         IF (NPRT.GE.0) WRITE(IFILE,'(/,A)')
     1'*** BEGIN SUBROUTINE LOCAL (GENERAL BUCKLING, DISCRETE MODEL) **'
C
C BEG OCT 1998
         IF (IMOD.EQ.0) THEN
            NSTART = MNOSHR
            INCRG = 0.07*FLOAT(NSTART) + 1.
            NLOC(6) = 0
            ILOW8 = 0
            NSERCG = 1
         ELSE
            NSTART = NLOC(6)
C           IF (NPRT.GE.2) WRITE(IFILE,'(A,2I6)')
C    1                            ' IMOD,NLOC(6)=',IMOD,NLOC(6)
            NSERCG = 0
         ENDIF
C END OCT 1998
C BEG AUG 2001
 9390    CONTINUE
         ILABEL=9390
         IF (NPRT.GE.1) WRITE(IFILE,*) 
     1               ' LABEL NO. IN STRUCT=',ILABEL
C END AUG 2001
         CALL LOCAL(1,NPRT,NSTART,LENMOD*AXIAL,CIRC,IMOD,M3G,INCRG,
     1      YLOCG,IFILE,IWG,ILOCG,DSG,ASG,BSG,DIAGG,CG,DG,DIG,XG,YG,ZG,
     1      NSERCG,PHIMIN,0,EIGG,
     1      IYLOCG,INEG,IREDUC,FKNOCK(1),IDRWG,NBLKG,
     1      NGBKG,NKFG,1,IMAXBG,KMAXBG,IPV2G,IBVCG,3000,IGENRL,
     1      JJJ,MLOCAL,B2(1),EIGLCS(6),NLOC(6),EIGLCS(6),NLOC(6),
     1      ITYPE,ILOW8,1,THERMX,THERMS,P,
     1      KAPPA1,KAPPA2,0,CS,FNX,FNY,FNXY,RESULT,
     1      FXBEG,FXEND,FYBEG,FYEND,FXYBEG,FXYEND,FNX0,FNY0,
     1      FNXY0,R,CX,RESEIG,NMAX,IABP,LENMOD,0,
     1      TEMP(1,1),IMTEMP,WPB1,1,
     1      FSLOC,FSGEN,I5,ITIPLX,WRATPX,EIGSVX,NSAVEX,YSAVE4,
     1      JJJTOR,W2(1),EIGITR(8),IBEAM,DELDUM,RESTOT,
     1      ISTIF(1),TX,1,NGLOB2,0,ILABEL,KLAYER(1,1))
C BEG APR 2007
            IF (IMOD.EQ.0.AND.NPRT.GE.0)
     1       WRITE(IFILE,'(A,1P,E12.4,/,A,I5)')
     1    ' Buckling load factor from SUB. LOCAL, EIGITR(8)=',EIGITR(8),
     1    ' Number of axial halfwaves between rings, NSTART=',NSTART
C23456789012345678901234567890123456789012345678901234567890123456789012
C END APR 2007
            DELDUM = 0.
C BEG FEB 1996
         IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
         IF (NPRT.GE.0) WRITE(IFILE,*)
     1'*** END   SUBROUTINE LOCAL (GENERAL BUCKLING, DISCRETE MODEL) **'
C
C BEG MAR 2007
         SMRFAC = WIDKNK/SHRFAC
         IF (SMRFAC.GT.1.0) SMRFAC = 1.0
C
         CALL LOCCON(1,1,0,INUMTT,EIGG,SMRFAC*FKNOCK(1)*FKNOCK(9),FSGEN,
     1      ISTIF,IGENRL,EIGLCS(6),IMOD,NSTART,NLOC(6),NLOC(6),CONMAX,
     1      IPOINC,CONSTR,ICONST,WORDB,0,0,KOUBCK,6,0)
C END MAR 2007
C
         EIGDIS(3) = EIGG
C BEG OCT 1998
         IF (IMOD.EQ.0) THEN
            NLOC(6) = NSTART
C           IF (NPRT.GE.2) WRITE(IFILE,'(A,I6)')' NLOC(6)=',NLOC(6)
         ENDIF
C END OCT 1998
         IF (ISTIF(1).NE.0.AND.(EIGG*FSGEN).LT.1.0) ISTOP = 1
C
       IF ((IMOD.EQ.0.AND.JJJ.EQ.0.AND.NPRT.GE.1).OR.NPRT.GE.2)
     1 WRITE(IFILE,*)' *** END OF GENERAL INSTABILITY CALCS FROM A ****'
       IF ((IMOD.EQ.0.AND.JJJ.EQ.0.AND.NPRT.GE.1).OR.NPRT.GE.2)
     1 WRITE(IFILE,*)' *** DISCRETIZED MODEL OF ENTIRE PANEL WIDTH.****'
C
         IF (ITYPE.EQ.1.AND.NPRT.GE.2)
     1    WRITE(IFILE,*)' AFTER BUCKLE: IMOD,INUMTT,ICONST=',
     1                                  IMOD,INUMTT,ICONST
      ENDIF
C End of (IGENRL.EQ.1) condition.
C
C
C*********************************************************************
C END CALCULATION OF GENERAL INSTABILITY USING DISCRETIZED MODEL
C OF ENTIRE PANEL WITH SMEARED STIFFENERS
C*********************************************************************
C
   87 CONTINUE
C BEG OCT 2004
 9580 CONTINUE
      ILABEL=9580
      IF (NPRT.GE.1) WRITE(IFILE,*)
     1       ' LABEL NO. IN STRUCT=',ILABEL
C END OCT 2004
C
C
C
C  NEXT, FIND STRESS RESULTANT DISTRIBUTION, CERTAIN PANDA-TYPE
C  BUCKLING LOADS, CRIPPLING LOADS, AND STRESSES, ALL FROM A PANDA-TYPE
C  OF ANALYSIS.
C
      IF (IMOD.EQ.0) THEN
         MARK2 = 0
C   DO NOT EVER DO ANALYSIS AT PANEL ENDS IN THIS WAY. IT CAN LEAD TO
C   BAD RUNS. THE NEXT STATEMENT WILL ALWAYS CAUSE CONTROL TO GO TO 88.
C
         IF (ISTIF(1).LT.100) GO TO 88
C BEG JUL 1999  (ALL STATEMENTS TO "88 CONTINUE" ARE COMMENTED OUT.)
C        IF (ITYPE.GT.2.AND.P.NE.0.0) GO TO 88
C        IF (NCASES.EQ.2.AND.FMOM.EQ.0.) GO TO 88
C        IF (ICASE.EQ.2) GO TO 88
C        IF (ISTIF(1).EQ.0) GO TO 88
C        IF (ISTIF(1).EQ.5) GO TO 88
C        IF (FNX.GE.0.0.AND.FMOM.EQ.0.) GO TO 88
C        IF ((ABS(FNX)/FNNORM).LT.0.5.AND.FMOM.EQ.0.) GO TO 88
C        WR1 = AMPLIT*(WRESID(1) + WIMPG) + WPRESG*AMPLT2 +WDELKP
C        IF (ECC.NE.0.0.OR.WR1.LT.-TX(1)) MARK2 = 1
C        IF (FMOM.NE.0.) MARK2 = 1   
      ENDIF
C     IF (MARK2.EQ.1) THEN
C
C**********************************************************************
C BEGIN CALCULATION OF STRESS/BUCKLING AT PANEL END (STRESS/BUCKLING
C AT PANEL MIDLENGTH HAS JUST BEEN EXPLORED AND THERE IS AXIAL BOWING).
C**********************************************************************
C
C        ECCSVE = ECC
C
C        IF (IMOD.EQ.0.AND.JJJ.EQ.0.AND.NPRT.GE.1) THEN
C
C           DO 870 I = 1,ICONST
C 870       CONPRT(I) = CONSTR(I) - 1.
C           CALL MOVER(0,0,IDUMMY,1,99)
C           CALL OUTVR2(ICONST,CONPRT,WORDB,' MARGINS COMPUTED SO FAR... 
C    1                                       ',IFILE,80,1,IDUMMY,6)
C
C           IF (FMOM.EQ.0.) WRITE(IFILE,872)
C 872    FORMAT(/' **** THERE IS NEGATIVE BOWING. (THE PANEL SKIN IS'/
C    1 ' AXIALLY COMPRESSED MORE THAN THE STRINGER TIPS AT THE PANEL'/
C    1 ' MIDLENGTH) OR THERE IS NON-ZERO ECCENTRICITY OF AXIAL LOAD.'/
C    1 ' IN ORDER THAT THE STRINGER WEB AND FLANGE WILL'/
C    1 ' NOT BE UNDERDESIGNED, WE MUST NEXT CHECK FOR STRINGER'/
C    1 ' ROLLING, CRIPPLING, AND STRESS FROM AN ANALYSIS IN WHICH'/
C    1 ' AXIAL BOWING OF THE PANEL IS NEGLECTED.  THE NEGLECT OF'/
C    1 ' AXIAL BOWING SIMULATES THE CONDITIONS NEAR THE ENDS OF THE'/
C    1 ' PANEL.  NOTE THAT IN THIS PART OF THE ANALYSIS, LOCAL'/
C    1 ' BUCKLING OF THE PANEL SKIN IS ASSUMED NOT TO OCCUR: THIS'/
C    1 ' IS AN IQUICK = 1 TYPE OF ANALYSIS.  THE STRESS AND'/
C    1 ' CRIPPLING MARGINS THAT CONTAIN THE WORD "ENDS" ARE DERIVED'/
C    1 ' FROM THIS ANALYSIS, AS ARE THE STABILITY MARGINS THAT'/
C    1 ' FOLLOW THE MARGINS LABELLED "ENDS".  THE LABEL "MID."'/
C    1 ' DENOTES "MIDLENGTH" OF THE PANEL *****'//)
C
C           IF (FMOM.NE.0.) WRITE(IFILE,874) FMOM,-2.*FMOM,-2.*FMOM
C 874       FORMAT(/
C    1' THE PANEL IS CYLINDRICAL WITH RINGS AND INTERNAL STRINGERS AND'/
C    1' IS SUBJECTED TO SIGNIFICANT IN-PLANE SHEAR LOADING INTO THE'/
C    1' LOCALLY POSTBUCKLED REGIME. THEREFORE A DIAGONAL TENSION FIELD'/
C    1' DEVELOPS. THE DIAGONAL TENSION, ACTING ALONG THE CHORDS'/
C    1' BETWEEN STRINGERS, GIVES RISE TO A LINE LOAD Ny*b/R ACTING ON'/
C    1' EACH STRINGER NORMAL TO THE UNDEFORMED CYLINDRICAL SHELL. THE'/
C    1' LINE LOADS CAUSE AXIAL BENDING, WITH BENDING MOMENT/(CIRC ARC)'/
C    1' =FMOM1= +(Ny*B(1)/R)*B(2)**2/(24*B(1))=',1PE12.4,' MIDWAY'/
C    1' BETWEEN RINGS AND A MOMENT OF OPPOSITE SIGN, FMOM2= -2.*FMOM1='/
C    1  1PE12.4,' ACTING AT THE RINGS.'//' PANDA2 HAS JUST CALCULATED'/
C    1' MARGINS CORRESPONDING TO CONDITIONS MIDWAY BETWEEN RINGS. NEXT'/
C    1' PANDA2 WILL CALCULATE MARGINS CORRESPONDING TO CONDITIONS IN'/
C    1' THE PANEL SKIN AND STRINGER SEGMENTS AT THE RINGS. BOWING WILL'/
C    1' BE NEGLECTED.  THE AXIAL MOMENT, Mx = ',1PE12.4,', INDUCED AT'/
C    1' THE RINGS BY THE CHORDWISE DIAGONAL TENSION FIELD IS APPLIED'/
C    1' IN ADDITION TO THE IN-PLANE LOADS Nx, Ny, Nxy. THIS MOMENT'/
C    1' ACTS IN A DIRECTION THAT CAUSES THE SKIN TO STRETCH AXIALLY'/
C    1' AND THE TIPS OF THE INTERNAL STRINGERS TO COMPRESS AXIALLY.'/)
C        ENDIF
C
C        CALL MOVER(CX,1,CXSAVE,1,180)
C
C        IF (NPRT.GE.1) WRITE(IFILE,'(/,A)')
C    1'*** BEGIN SUBROUTINE GETCIJ (CONSTITUTIVE LAW, PANEL ENDS) *****'
C        CALL GETCIJ(INTEXT,0,IFILE,ISTIF,B,B2,H,W,W2,CX,CY,CS,
C    1            ZPARTX,ZPARTY,THERMX,THERMY,THERMS,
C    1            GTX,GTY,GTS,TEFF,CSINV,ETHRMX,ETHRMY,
C    1            ICOCUR,ETHERM,CRACK,IFILE4,IPROMP,IOUT,1,NSEG,
C    1            FSTRN,GSTRN,CSN,CSWIDE,CSREDU,TBASE,IMOD,
C    1            TEMP,FMULT,THSMRX,THSMRY,ETSMRX,ETSMRY,IBPRE,IQUICK,
C    1            NNODES,IMTEMP,FSLOC,WIMPG,P,FSGEN)
C        IF (NPRT.GE.1) WRITE(IFILE,*)
C    1'*** END   SUBROUTINE GETCIJ (CONSTITUTIVE LAW, PANEL ENDS) *****'
C
C  RESET BOWING QUANTITIES EQUAL TO ZERO, BECAUSE WE ARE AT THE
C  END OF THE PANEL...
C
C BEG JUN 1996
C        CALL MOVER(ETHERM,1,ETHRMS,1,6)
C END JUN 1996
C        CALL MOVER(0.,0,EPADUM,1,6)
C        WRDUM(1) = 0.
C        WRDUM(2) = 0.
C        WPDUM    = 0.
C        WGDUM    = 0.
C  APPLY CORRECT BENDING MOMENTS MX AND MY AT PANEL ENDS OR AT RINGS:
C        FMXEND = -2.0*FMOM
C        FMYEND = 0.0
C
C        IF (NPRT.GE.1) WRITE(IFILE,'(/,A)')
C    1'*** BEGIN SUBROUTINE FORCES (LOAD DISTRIBUTION, PANEL ENDS) ****'
C     IFX2= 1
C     IF (NPRT.LT.2) IFX2 = 0
C     CALL FORCEX(IFILE,IFX2,ITUTOR,NSEG,CX,CY,CS,FNX,FNY,FNXY,RESULT,
C    1            RESFIX,RESEIG,ISTIF,WRDUM,WBEND,ZPARTX,ZPARTY,
C    1            0.,EPSLOD,ETHERM,THERMX,THERMY,LENMOD,CSINV,
C    1            ETHRMX,ETHRMY,ICOCUR,NPRT,EPSTOT,EPSFIX,EPSEIG,
C    1            FSTRN,GSTRN,S1,S2,FNX0,FNY0,FNXY0,EPSFXL,RESFXL,
C    1            RESTOT,FNXP0,FNYP0,WPDUM,EPADUM,RESPGL,EPSPGL,
C    1            RESPRS,EPSPRS,P,FNXPL0,FNYPL0,EAVEPL,WPRES,EPSLDF,
C    1            WGDUM,WIMPL,IMOD,IABP,1.0,IWIDE,JJJ,AMPLIT,ECC,
C    1            RWBTOT,RWBEIG,1,IBOUND,IBPRE,PRELEN,ITYPE,
C    1            THSMRX,THSMRY,ETSMRX,ETSMRY,ICASE,FMXEND,FMYEND,
C BEG OCT 1998
C    1            IABT,AMPLT2,NNODES,TEMP,IMTEMP,IQUICK,ETHRMS,
C    1            RESBGL,EPSBGL,EAVEPB)
C END OCT 1998
C        IF (NPRT.GE.1) WRITE(IFILE,*)
C    1'*** END SUBROUTINE FORCES (LOAD DISTRIBUTION, PANEL ENDS) ****'
C
C        IF (IMOD.EQ.0.AND.JJJ.EQ.0.AND.NPRT.GE.1) WRITE(IFILE,873)
C 873    FORMAT(//' PREBUCKLED STRESS DISTRIBUTION NEAR PANEL ENDS:')
C        IF (NPRT.GE.1) WRITE(IFILE,'(/,A)')
C    1'*** BEGIN SUBROUTINE STRCON (STRESSES, PANEL ENDS) ****'
C        CALL STRCON(CONMAX,ISTIF,NSEG,NLAYER,LTYPE,EALLOW,MATL,ANGLE,
C    1               EPS1,EPS2,EPS12,EPS10,EPS20,EPS120,
C    1               B2,W2,ICONST,CONSTR,WORDB,IADDB,T,TAPE,DEGRAD,
C    1               FSSTR,ETHERM,THERMX,THERMY,IPOINC,INUMTT,IMOD,
C    1               EPSLOD,ZPARTX,ZPARTY,ETHRMX,ETHRMY,CRACK,ICHANG,
C    1               EALLST,NPRT,NAPPL,IFILE,ITYPE,IICHAN,
C    1               EPSTOT,EPSFIX,EPSEIG,1,INTEXT,2,
C    1               TEMP,FMULT,NNODES,IMTEMP,P,PWDD,IABT,0,1,0,7)
C        IF (NPRT.GE.1) WRITE(IFILE,*)
C    1'*** END   SUBROUTINE STRCON (STRESSES, PANEL ENDS) ****'
C        IF (ITYPE.EQ.1.AND.NPRT.GE.2)
C    1    WRITE(IFILE,*)' AFTER STRCON: IMOD,INUMTT,ICONST=',
C    1                                  IMOD,INUMTT,ICONST
C        IF (NPRT.GE.1) WRITE(IFILE,'(/,A)')
C    1'** BEGIN SUBROUTINE STFEIG (BUCKLING STIF. PARTS, PANEL ENDS) **'
C        CALL MOVER(0.,0,DELFCE,1,8)
C        CALL MOVER(0.,0,DELISO,1,12)
C        CALL STFEIG(2,ISTIF,B,B2,H,W,W2,CX,CY,RESEIG,RESTOT,
C    1         ICONST,CONSTR,WORDB,IADDB,ISKIN,TX,TY,GTX,GTY,IREDUC,
C BEG JULY 1996
C    1         CONMAX,IPOINC,INUMTT,IMOD,0,MCRIP,NCRIP,IFILE,JJJ,
C END JULY 1996
C BEG JULY 1997
C    1         RWBTOT,RWBEIG,ICASE,FSBSTR,EIGTRY,ILAMB2,ILAM34,ILAM44,
C END JULY 1997
C BEG JULY 1995
C BEG MAY 1997
C BEG JUN 2004
C    1         0,ITRUSS,ICWEB,ICROWN,FKNOCK,IPROMP,IQUICK,WBEIG,0,
C BEG FEB 2006
C    1         IBLDUM,ABIG,BBIG,9565,ILOADS,FSLOC)
C END FEB 2006
C END JUN 2004
C END MAY 1997
C END JULY 1995
C BEG FEB 1996
C        IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
C        IF (NPRT.GE.1) WRITE(IFILE,*)
C    1'** END   SUBROUTINE STFEIG (BUCKLING STIF. PARTS, PANEL ENDS) **'
C        IF (ITYPE.EQ.1.AND.NPRT.GE.2)
C    1    WRITE(IFILE,*)' AFTER STFEIG: IMOD,INUMTT,ICONST=',
C    1                                  IMOD,INUMTT,ICONST
C
C        IF (IMOD.EQ.0.AND.JJJ.EQ.0.AND.NPRT.GE.1) WRITE(IFILE,74)
C        ISHORT = IQUICK
C BEG MAR 1996
C        IF (FNX.GE.0.0.AND.FNY.GE.0.0.AND.IQUICK.EQ.0) ISHORT = 1
C        IF (IDISCR.EQ.0.AND.IQUICK.EQ.0) ISHORT = 1
C END MAR 1996
C
C        IF (NPRT.GE.1) WRITE(IFILE,'(/,A)')
C    1'** BEGIN SUBROUTINE BUCPAN (PANDA-TYPE BUCKLING, PANEL ENDS) **'
C BEG JUNE 1995
C9270    CONTINUE
C        ILABEL=9270
C        IF (NPRT.GE.1) WRITE(IFILE,*)' LABEL NO. IN STRUCT=',ILABEL
C END JUNE 1995
C        FNYEFF = FNY
C BEG OCT 1998
C        FNY0FF = FNY0
C        IF (ISTIF(2).EQ.0) THEN
C           FNYEFF = FNY + DFNYPA
C           FNY0FF = FNY0 + DFNYPB
C        ENDIF
C END OCT 1998
C        CALL BUCPAN(IFILE,IMOD,JJJ,ICONST,CONSTR,WORDB,ISTIF,IREDUC,
C    1         0,LENMOD,CONMAX,0.,FSPAN,FSLOC,EIGGEN,0,IPOINC,
C    1         INUMTT,FKNOCK,IGENRL,CSLOP,EILOCL,MLOCAL,0,
C    1         MSHEAR,NSHEAR,MNOSHR,NNOSHR,ITUTOR,IWIDE,ISHORT,
C    1         FNX,FNYEFF,FNXY,FNX0,FNY0FF,FNXY0,FNXP0,FNYP0,
C    1         FNXYP0,FNXPL0,FNYPL0,FNXYPL,NLOCAL,ITIP,IABP,2,
C    1         EPSLOD(4),RWBEIG,RWBTOT,ICASE,FSBSTR,1,TLOCAL,1,0,
C    1         1,9270,ICD7D,ICD8D,ICD9D,0,ILOADS,MORCON,NCASES,xx)
C        IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 9410
C BEG FEB 1996
C        IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
C        IF (NPRT.GE.1) WRITE(IFILE,*)
C    1'** END   SUBROUTINE BUCPAN (PANDA-TYPE BUCKLING, PANEL ENDS) **'
C        IF (ITYPE.EQ.1.AND.NPRT.GE.2)
C    1    WRITE(IFILE,*)' AFTER BUCPAN: IMOD,INUMTT,ICONST=',
C    1                                  IMOD,INUMTT,ICONST
C
C        CALL MOVER(CXSAVE,1,CX,1,180)
C        ECC = ECCSVE
C
C     ENDIF
C END JUL 1999
C
   88 CONTINUE
C
C  GENERATE CONSTRAINT CORRESPONDING TO MAX. ALLOWABLE AVERAGE AXIAL
C  STRAIN:
C
      INUMTT = INUMTT + 1
      IF (EXAVE.EQ.0.0) EXAVE = 0.000001
      EXCON = ABS(EXAVEA/EXAVE)
      FSEXAV = 1.0
      CALL CONVRF(FSEXAV,CN2)
      IF (IMOD.EQ.0.AND.EXCON.LT.MAXCON) THEN
         ICAR = ICAR + 1
         PCWORD(ICAR) =
     1'(Max. allow. ave. axial strain)/(average strain)'
         CPLOT(ICAR) = EXCON - 1.
         IADDCC(ICAR) = 0
         FSAFEP(ICAR) = FSEXAV
      ENDIF
      IF (IMOD.EQ.0.AND.EXCON.GT.CONMAX) GO TO 89
      IF (IMOD.EQ.1.AND.IPOINC(INUMTT).EQ.0) GO TO 89
      ICONST = ICONST + 1
      IF (IMOD.EQ.0) IPOINC(INUMTT) = 1
      CONSTR(ICONST) = EXCON
      WORDB(ICONST)=
     1'(Max.allowable ave.axial strain)/(ave.axial strain) -1; FS='//CN2
C BEG APR 2007
      IF (NPRT.GE.0) WRITE(IFILE,'(A,1P,E12.4,2X,A)')
     1 ' Margin=',CONSTR(ICONST)-1.,WORDB(ICONST)
C END APR 2007
C
C BEG AUG 1995
C23456789012345678901234567890123456789012345678901234567890123456789012
      IF (NPRT.GE.2) WRITE(IFILE,'(A,/,A,/,A,I3,A,I2,A,I2)')
     1 ' ******* THE MAXIMUM AVERAGE AXIAL STRAIN MARGIN WAS COMPUTED:',
     1WORDB(ICONST),
     1 ' ******* CONSTRAINT NO.',ICONST,'; LOAD SET NO.',ILOADS,
     1 '; SUBCASE NO.',ICASE
C END AUG 1995
   89 CONTINUE
         IF (ITYPE.EQ.1.AND.NPRT.GE.2)
     1    WRITE(IFILE,*)' AFTER 89 CON: IMOD,INUMTT,ICONST=',
     1                                  IMOD,INUMTT,ICONST
C
C**********************************************************************
C END CALCULATION OF STRESS/BUCKLING AT PANEL END (STRESS/BUCKLING
C AT PANEL MIDLENGTH HAS JUST BEEN EXPLORED AND THERE IS AXIAL BOWING).
C**********************************************************************
C
C
C**********************************************************************
C BEGIN CALCULATION OF MISCELLANEOUS CONSTRAINT CONDITIONS.
C**********************************************************************
C
      IF (ILOADS.EQ.1.AND.ICASE.EQ.1) THEN
C
C  GENERATE CONSTRAINT CONDITIONS CORRESPONDING TO MINIMUM AND/OR MAXIMUM
C  ALLOWABLE TOTAL THICKNESSES OF THE X-ORIENTED AND Y-ORIENTED MODULE
C  CROSS SECTIONS.
C
         CALL THKCON(1,TX,TXMIN,INUMTT,IMOD,CONMAX,IPOINC,
     1                  ICONST,WORDB,CONSTR)
         CALL THKCON(2,TX,TXMAX,INUMTT,IMOD,CONMAX,IPOINC,
     1                  ICONST,WORDB,CONSTR)
         CALL THKCON(1,TY,TYMIN,INUMTT,IMOD,CONMAX,IPOINC,
     1                  ICONST,WORDB,CONSTR)
         CALL THKCON(2,TY,TYMAX,INUMTT,IMOD,CONMAX,IPOINC,
     1                  ICONST,WORDB,CONSTR)
C
      ENDIF
C
      PWCON = P.NE.0.0.AND.IWCON.NE.0
C BEG NOV 1996
      WPRTST = WPRESG+DELWSH
C BEG MAR 1998
      IF (ABS(WPMAX).GT.ABS(WPRESG)) WPRTST = WPMAX+DELWSH
C END MAR 1998
      IF (PEDG) WPRTST = WMIDP

      IF (PWCON.AND.WPRTST.NE.0.0.AND.ICASE.EQ.1) THEN
C END NOV 1996
C
C  GENERATE CONSTRAINT CORRESPONDING TO MAXIMUM ALLOWABLE BOWING
C  DEFLECTION OF THE PANEL DUE TO UNIFORM NORMAL PRESSURE, P
C
         INUMTT = INUMTT + 1
C BEG NOV 1996
         FDENAM = AMPTP2
         IF (AMPTP2.LT.1.0) FDENAM = 1.0
         IF (PEDG) FDENAM = 1.0
C BEG DEC 1998
         WPTOT = WPRTST*FDENAM + WLPRES + WPRESR
         WPCON = ABS(WPGMAX)/ABS(WPTOT)
         IF (NPRT.GE.2) WRITE(IFILE,
     1'(A,/,A,1P,E12.4,/,A,E12.4,/,A,E12.4,/,A,E12.4,/,A,E12.4,/,
     1      A,E12.4)')
     1 ' Total normal displacement of panel under normal pressure:',
     1 '  Normal displacement from global bending, WPRTST*FDENAM=',
     1                                             WPRTST*FDENAM,
     1 '  Normal displacement from inter-ring bending,    WPRESR=',
     1                                                    WPRESR,
     1 '  Normal displacement from discretized module,    WLPRES=',
     1                                                    WLPRES,
     1 '  Total normal displacement, WPRTST*FDENAM+WLPRES+WPRESR=',
     1                                                    WPTOT,
     1 '  Maximum allowable normal displacement,          WPGMAX=',
     1                                                    WPGMAX,
     1 '  Value of displacement constraint,    ABS(WPGMAX/WPTOT)=',
     1                                                    WPCON
C END DEC 1998
C END NOV 1996
         FSTX = 1.0
         CALL CONVRF(FSTX,CN2)
         IF (IMOD.EQ.0.AND.WPCON.LT.MAXCON) THEN
            ICAR = ICAR + 1
            PCWORD(ICAR) =
C BEG NOV 1996
     1'Maximum allowable normal deflection from pressure'
C END NOV 1996
            CPLOT(ICAR) = WPCON - 1.
            IADDCC(ICAR) = 0
            FSAFEP(ICAR) = FSTX
         ENDIF
         IF (IMOD.EQ.0.AND.WPCON.GT.CONMAX) GO TO 91
         IF (IMOD.EQ.1.AND.IPOINC(INUMTT).EQ.0) GO TO 91
         ICONST = ICONST + 1
         IF (IMOD.EQ.0) IPOINC(INUMTT) = 1
         CONSTR(ICONST) = WPCON
         WORDB(ICONST)=
C BEG NOV 1996
     1'(Max. allowable normal deflection from pressure)/actual-1; FS='
     1//CN2
C BEG APR 2007
         IF (NPRT.GE.0) WRITE(IFILE,'(A,1P,E12.4,2X,A)')
     1 ' Margin=',CONSTR(ICONST)-1.,WORDB(ICONST)
C END APR 2007
C END NOV 1996
C BEG AUG 1995
C23456789012345678901234567890123456789012345678901234567890123456789012
         IF (NPRT.GE.2) WRITE(IFILE,'(A,/,A,/,A,I3,A,I2,A,I2)')
     1 ' ******* THE MAXIMUM BOWING-FROM-PRESSURE MARGIN WAS COMPUTED:',
     1   WORDB(ICONST),
     1 ' ******* CONSTRAINT NO.',ICONST,'; LOAD SET NO.',ILOADS,
     1 '; SUBCASE NO.',ICASE
C END AUG 1995
   91    CONTINUE
         IF (ITYPE.EQ.1.AND.NPRT.GE.2)
     1    WRITE(IFILE,*)' AFTER 91 CON: IMOD,INUMTT,ICONST=',
     1                                  IMOD,INUMTT,ICONST
      ENDIF
C End of (PWCON.AND.WPRTST.NE.0.0.AND.ICASE.EQ.1) condition.
C
      IF (ILOADS.EQ.1.AND.ICASE.EQ.1) THEN
C
C   CONSTRAINT CONDITIONS TO KEEP B2 (STIFFENER BASE) SMALLER THAN
C   B (STIFFENER SPACING....
C
         DO 94 ILOOP = 1,2
            ISKIP = 0
            ILET1 = 0
            ILET2 = 0
            DO 911 IVAR = 1,50
               ILET1 = INDEX(VARLEG(IVAR),'B2(STR)')
               ILET2 = INDEX(VARLEG(IVAR),'B2(RNG)')
               IF ((ILOOP.EQ.1.AND.ILET1.NE.0).OR.
     1             (ILOOP.EQ.2.AND.ILET2.NE.0)) THEN
                  IF (ILV(IVAR).EQ.1) ISKIP = 1
                  GO TO 92
               ENDIF
  911       CONTINUE
   92       CONTINUE
            IF (ISKIP.EQ.1) GO TO 94
            IF (ISTIF(ILOOP).EQ.0) GO TO 94
C BEG NOV 1995 (COMMENT OUT FOLLOWING STATEMENT)
C           IF (ISTIF(ILOOP).EQ.5) GO TO 94
C END NOV 1995
            INUMTT = INUMTT + 1
C BEG JAN 1995
C           FACTB2 = 0.5
            FACTB2 = 0.33333
C END JAN 1995
C BEG MAY 1998
C           IF (ISTIF(ILOOP).EQ.4) FACTB2 = 0.9
            IF (ISTIF(ILOOP).EQ.4) FACTB2 = 0.95
C END MAY 1998
C BEG NOV 1995
C BEG JAN 1996
            IF (ISTIF(ILOOP).EQ.5) FACTB2 = 0.45
C END JAN 1996
C END NOV 1995
            IF (ILOOP.EQ.2) FACTB2 = 1.0
            B2CON = 10E+16
            IF (B2(ILOOP).NE.0.) B2CON = FACTB2*B(ILOOP)/B2(ILOOP)
            FSTX = 1.0
            CALL CONVRF(FSTX,CN2)
            CALL CONVRF(FACTB2,CFACTB)
            IF (IMOD.EQ.0.AND.B2CON.LT.MAXCON) THEN
               ICAR = ICAR + 1
               IF (ILOOP.EQ.1) PCWORD(ICAR)=
     1           CFACTB//'*(Str. spacing, b)/(Str. base width, b2)'
               IF (ILOOP.EQ.2) PCWORD(ICAR)=
     1           CFACTB//'*(Ring spacing, b)/(Ring base width, b2)'
               CPLOT(ICAR) = B2CON - 1.
               IADDCC(ICAR) = 0
               FSAFEP(ICAR) = FSTX
            ENDIF
            IF (IMOD.EQ.0.AND.B2CON.GT.CONMAX) GO TO 93
            IF (IMOD.EQ.1.AND.IPOINC(INUMTT).EQ.0) GO TO 93
            ICONST = ICONST + 1
            IF (IMOD.EQ.0) IPOINC(INUMTT) = 1
            CONSTR(ICONST) = B2CON
            IF (ILOOP.EQ.1) WORDB(ICONST)=
     1  CFACTB//'*(Stringer spacing, b)/(Stringer base width, b2)-1;'
     1   //'FS='//CN2
            IF (ILOOP.EQ.2) WORDB(ICONST)=
     1  CFACTB//'*(Ring spacing, b)/(Ring base width, b2) -1; FS='//CN2
C BEG APR 2007
            IF (NPRT.GE.0) WRITE(IFILE,'(A,1P,E12.4,2X,A)')
     1    ' Margin=',CONSTR(ICONST)-1.,WORDB(ICONST)
C END APR 2007
C BEG AUG 1995
C23456789012345678901234567890123456789012345678901234567890123456789012
            IF (NPRT.GE.2) WRITE(IFILE,'(A,/,A,/,A,I3,A,I2,A,I2)')
     1 ' ******* THE STRINGER SPACING/STRINGER BASE MARGIN COMPUTED:',
     1      WORDB(ICONST),
     1    ' ******* CONSTRAINT NO.',ICONST,'; LOAD SET NO.',ILOADS,
     1    '; SUBCASE NO.',ICASE
C END AUG 1995
   93       CONTINUE
C BEG NOV 1995
C23456789012345678901234567890123456789012345678901234567890123456789012
            IF (ISTIF(ILOOP).EQ.5.AND.B2(ILOOP).GT.0.0) THEN
               INUMTT = INUMTT + 1
               FACTB2 = 0.2
               B2CON = B2(ILOOP)/(FACTB2*B(ILOOP))
               FSTX = 1.0
               CALL CONVRF(FSTX,CN2)
               CALL CONVRF(FACTB2,CFACTB)
               IF (IMOD.EQ.0.AND.B2CON.LT.MAXCON) THEN
                  ICAR = ICAR + 1
                  IF (ILOOP.EQ.1) PCWORD(ICAR)=
     1          '(Str. base width, b2)/('//CFACTB//'*(Str. spacing, b))'
                  IF (ILOOP.EQ.2) PCWORD(ICAR)=
     1          '(Ring base width, b2)/('//CFACTB//'*(Ring spacing, b))'
                  CPLOT(ICAR) = B2CON - 1.
                  IADDCC(ICAR) = 0
                  FSAFEP(ICAR) = FSTX
               ENDIF
               IF (IMOD.EQ.0.AND.B2CON.GT.CONMAX) GO TO 932
               IF (IMOD.EQ.1.AND.IPOINC(INUMTT).EQ.0) GO TO 932
               ICONST = ICONST + 1
               IF (IMOD.EQ.0) IPOINC(INUMTT) = 1
               CONSTR(ICONST) = B2CON
               IF (ILOOP.EQ.1) WORDB(ICONST)=
     1   '(Str. base width, b2)/('//CFACTB//'*(Str. spacing, b))-1; FS='
     1   //CN2
               IF (ILOOP.EQ.2) WORDB(ICONST)=
     1   '(Ring base width, b2)/('//CFACTB//'*(Ring spacing, b))-1; FS='
     1   //CN2
C BEG APR 2007
               IF (NPRT.GE.0) WRITE(IFILE,'(A,1P,E12.4,2X,A)')
     1       ' Margin=',CONSTR(ICONST)-1.,WORDB(ICONST)
C END APR 2007
C23456789012345678901234567890123456789012345678901234567890123456789012
            IF (NPRT.GE.2) WRITE(IFILE,'(A,/,A,/,A,I3,A,I2,A,I2)')
     1 ' ******* THE STRINGER BASE/STRINGER SPACING MARGIN COMPUTED:',
     1      WORDB(ICONST),
     1    ' ******* CONSTRAINT NO.',ICONST,'; LOAD SET NO.',ILOADS,
     1    '; SUBCASE NO.',ICASE
  932          CONTINUE
            ENDIF
C   End of (ISTIF(ILOOP).EQ.5.AND.B2(ILOOP).GT.0.0) condition.
C END NOV 1995
   94    CONTINUE
C
C
C  ESTABLISH ANY CONSTRAINTS THAT ARE INEQUALITY RELATIONSHIPS
C  AMONG THE VARIABLES IN THE ARRAY VAR(*) (THAT IS, VARIABLES THAT
C  ARE EITHER DECISION VARIABLES, LINKED VARIABLES, ESCAPE VARIABLES,
C  OR CANDIDATES FOR ANY OF THESE TYPES OF VARIABLES.
C
         IF (NPRT.GE.0.AND.NINEQ.GT.0) WRITE(IFILE,'(/,A)')
     1'** BEGIN SUBROUTINE VARCON (GEOMETRIC INEQUALITY CONSTRAINTS) **'
         IF (NINEQ.GT.0)
     1        CALL VARCON(MAXCON,WORDIQ,WORDB,CINEQ,DPWREQ,IDINEQ,
     1        NINEQ,JINEQ,IEQTYP,INUMTT,IMOD,CONMAX,IPOINC,
C BEG JAN 1997
     1        ICONST,CONSTR,VAR,PCWORD,CPLOT,ICAR,
     1        CCROSS,IDINQ1,IDINQ2,JCROSS)
C END JAN 1997
         IF (NPRT.GE.0.AND.NINEQ.GT.0) WRITE(IFILE,*)
     1'** END SUBROUTINE VARCON (GEOMETRIC INEQUALITY CONSTRAINTS) **'
      ENDIF
C End of (ILOADS.EQ.1.AND.ICASE.EQ.1) condition.
C BEG FEB 2007
C        IF (ITYPE.EQ.1.AND.NPRT.GE.2)
         IF (NPRT.GE.2)
C END FEB 2007
     1    WRITE(IFILE,*)' AFTER VARCON: IMOD,INUMTT,ICONST=',
     1                                  IMOD,INUMTT,ICONST
C
C**********************************************************************
C END CALCULATION OF MISCELLANEOUS CONSTRAINT CONDITIONS.
C**********************************************************************
C
C BEG AUG 1994
C *********************************************************************
C POSSIBLY COMPUTE PANDA-TYPE (CLOSED FORM) BUCKLING LOAD FACTORS FROM
C SANDERS THEORY (SEE PANDA2.NEWS ITEM 128) RATHER THAN DONNELL THEORY.
C *********************************************************************
C BEG JULY 1998
      IF (ISAND.EQ.0.AND.IMOD.EQ.0
C     IF ((ISAND.EQ.0.OR.IALTSN.EQ.0).AND.IMOD.EQ.0
     1               .AND.(ITYPE.EQ.1.OR.ITYPE.EQ.2)) THEN
       IF ((JLAST.EQ.1.AND.ITYPE.EQ.1).OR.ITYPE.EQ.2) THEN 
         ISNDSV = ISAND
         IALTSV = IALTSN
C BEG DEC 2003
         IF (NPRT.GT.-1.AND.ISAND.EQ.0) WRITE(IFILE,4010)
C END DEC 2003
C END JULY 1998
 4010    FORMAT(/' ********** WARNING ********** WARNING ***********'/
     1 ' PANDA-TYPE (CLOSED FORM) BUCKLING LOAD FACTORS HAVE SO FAR'/
     1 ' BEEN COMPUTED WITH USE OF DONNELL THEORY. NEXT, PANDA-TYPE'/
     1 ' BUCKLING LOAD FACTORS WILL BE COMPUTED WITH SANDERS THEORY'/
     1 ' IN ORDER TO CHECK FOR POSSIBLE NEGATIVE MARGINS. IF THERE'/
     1 ' ARE NEGATIVE MARGINS CORRESPONDING TO THE BUCKLING LOAD'/
     1 ' FACTORS FROM SANDERS THEORY, YOU MAY HAVE TO OPTIMIZE WITH'/
     1 ' USE OF THE USER-SUPPLIED INDEX, ISAND, SET TO UNITY IN THE'/
     1 ' *.OPT INPUT DATA FILE. BUCKLING LOAD FACTORS FROM SANDERS'/
     1 ' THEORY (SEE PANDA2.NEWS ITEM 128) FOLLOW.'/
     1 ' *** BEGIN SUBROUTINE BUCPAN (PANDA-TYPE BUCKLING LOADS'/
     1 ' ***                                FROM SANDERS THEORY) ***')
C BEG JULY 1998
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG DEC 2003
C        IF (NPRT.GT.-1.AND.IALTSN.EQ.0) WRITE(IFILE,4011)
C END DEC 2003
C4011    FORMAT(/' ********** WARNING ********** WARNING ***********'/
C    1 ' PANDA-TYPE (CLOSED FORM) BUCKLING LOAD FACTORS HAVE SO FAR'/
C    1 ' BEEN COMPUTED WITH USE OF THE ORIGINAL ONE-TERM RITZ THEORY'/
C    1 ' EQS. (50,57) OF COMPUTERS AND STRUCTURES VOL. 27 PP 541-563,'/
C    1 ' 1987. NEXT, THE ALTERNATIVE SOLUTION (panda2.news ITEMs 438,'/
C    1 ' 444) WILL ALSO BE USED. IF THERE IS A SIGNIFICANT DIFFERENCE'/
C    1 ' BETWEEN THE EQUIVALENT MARGINS FROM THE ORIGINAL THEORY AND'/
C    1 ' THE ALTERNATIVE THEORY, THEN OPTIMIZATION SHOULD BE CONDUCTED'/
C    1 ' WITH USE OF THE ALTERNATIVE THEORY. (BY "EQUIVALENT" MARGINS'/
C    1 ' IS MEANT MARGINS WITH ANALOGOUS PHRASING, THUS DENOTING THE'/
C    1 ' SAME TYPE OF BUCKLING EXPLORED WITH BOTH THE ORIGINAL THEORY'/
C    1 ' AND THE ALTERNATIVE THEORY. ACTUALLY, EVEN IF THERE IS NOT A'/
C    1 ' SIGNIFICANT DIFFERENCE, OPTIMIZATION SHOULD BE CONDUCTED WITH'/
C    1 ' USE OF THE ALTERNATIVE SOLUTION VIA "SUPEROPT" AT LEAST ONCE.'/
C    1 ' ********** END WARNING ************ END WARNING ************')
C23456789012345678901234567890123456789012345678901234567890123456789012
C END JULY 1998
         NPRSVE = NPRT
C BEG OCT 1998 (COMMENT OUT NEXT STATEMENT)
C        NPRT = 2
C END OCT 1998
C BEG JULY 1998
         IF (ISAND.EQ.0)  ISAND = 1
C        IF (IALTSN.EQ.0) IALTSN = 1
C END JULY 1998
C        ISHORT = 1
         ISHORT = IQUICK
C        IF (FNX.GE.0.0.AND.FNY.GE.0.0.AND.IQUICK.EQ.0) ISHORT = 1
         IF (IDISCR.EQ.0.AND.IQUICK.EQ.0) ISHORT = 1
 9280    CONTINUE
         ILABEL=9280
         IF (NPRT.GE.1) WRITE(IFILE,*)' LABEL NO. IN STRUCT=',ILABEL
         IADDST = 1
         IF (IQUICK.EQ.0) IADDST = 0
         FNYEFF = FNY
         FNY0FF = FNY0
         IF (ISTIF(2).EQ.0) THEN
            FNYEFF = FNY + DFNYPA
            FNY0FF = FNY0 + DFNYPB
         ENDIF
         CALL BUCPAN(IFILE,IMOD,JJJ,ICONST,CONSTR,WORDB,ISTIF,IREDUC,
     1         KOITER,LENMOD,CONMAX,FSGEN,FSPAN,FSLOC,EIGGEN,0,IPOINC,
     1         INUMTT,FKNOCK,IGENRL,CSLOP,EILOCL,MLOCAL,ISKIN,
     1         MSHEAR,NSHEAR,MNOSHR,NNOSHR,ITUTOR,IWIDE,ISHORT,
     1         FNX,FNYEFF,FNXY,FNX0,FNY0FF,FNXY0,FNXP0,FNYP0,
     1         FNXYP0,FNXPL0,FNYPL0,FNXYPL,NLOCAL,ITIP,IABP,1,
     1         EPSLOD(4),RWBEIG,RWBTOT,ICASE,FSBSTR,1,TLOCAL,1,0,
C BEG NOV 2003
     1     IADDST,9280,ICD7D,ICD8D,ICD9D,0,ILOADS,MORCON,NCASES,21)
C END NOV 2003
         IF (MORCON(ILOADS,ICASE).EQ.1) THEN
            NPRT = NPRSVE
            ISAND = ISNDSV
            IALTSN= IALTSV
            GO TO 9410
         ENDIF
         IF (IRESTY.EQ.1) THEN
            NPRT = NPRSVE
            ISAND = ISNDSV
            IALTSN= IALTSV
            GO TO 2222
         ENDIF
C BEG DEC 2003
         IF (NPRT.GT.-1) WRITE(IFILE,4012)
C END DEC 2003
 4012   FORMAT(' *** END SUBROUTINE BUCPAN (PANDA-TYPE BUCKLING LOADS'/
     1 ' ***                                FROM SANDERS THEORY) ***'//
     1 ' NOTE: IN THE MARGINS THAT FOLLOW'/
     1 '    "DONL" MEANS THAT THE DONNELL SHELL EQUATIONS ARE USED;'/
C BEG JUN 1996
     1 '    "SAND" MEANS THAT THE SANDERS SHELL EQUATIONS ARE USED'/
     1 '           (Please see ...panda2/doc/panda2.news ITEM 128);'/
     1 '    "Dseg" MEANS SEGMENT NUMBERING SCHEME, DISCRETIZED MODULE;'/
     1 '    "Iseg" MEANS SEGMENT NUMBERING SCHEME USED FOR INPUT DATA.'/
     1 '           (Please see ...panda2/doc/panda2.news ITEM 272);'/
C23456789012345678901234567890123456789012345678901234567890123456789012
C END JUN 1996
     1 ' *********** END WARNING *********** END WARNING ************')
         NPRT = NPRSVE
C BEG JULY 1998
         ISAND = ISNDSV
         IALTSN= IALTSV
C END JULY 1998
       ENDIF
C End of ((JLAST.EQ.1.AND.ITYPE.EQ.1).OR.ITYPE.EQ.2) condition.
      ENDIF
C End of (ISAND.EQ.0.AND.IMOD.EQ.0
C             .AND.(ITYPE.EQ.1.OR.ITYPE.EQ.2)) condition.
C END AUG 1994
C
C
C**********************************************************************
C BEGIN CALCULATION OF THE OBJECTIVE FUNCTION.
C**********************************************************************
C
 9410 CONTINUE
C     IF (ITUTOR.EQ.1)
C    1 CALL DATUM(IFILE4,150,0,0,INT,REALL,CHARAC,IOUT,0,IPROMP)
C BEG OCT 2006
      IF (NPRT.GE.1) WRITE(IFILE,'(/,/,/,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************',
     1' ************          CHAPTER 27             *****************',
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************'
      IF (NPRT.GE.0) WRITE(IFILE,'(A,I3,A)')
     1' **** CHAPTER 27: DESIGN PERTURBATION INDEX, IMOD=',IMOD,' ****'
      IF (NPRT.GE.1) WRITE(IFILE,'(/,A,/,A)')
     1 ' *************************************************************',
     1 ' CHAPTER 27 Compute the objective function (e.g. WEIGHT).'
C END OCT 2006
      IF (NPRT.GE.1) WRITE(IFILE,'(/,A)')
     1'****** BEGIN SUBROUTINE OBJECT (OBJECTIVE FUNCTION) ******'
      CALL OBJECT(ISTIF,NSEG,NLAYER,LTYPE,T,MATL,B,B2,H,W,W2,DENS,
     1          CMASS,AXIAL,CIRC,OBJ,WORDOB,ETHERM,TEFF,IOBJ,IFILE)
      IF (NPRT.GE.1) WRITE(IFILE,'(A,/,/,/)')
     1'****** END   SUBROUTINE OBJECT (OBJECTIVE FUNCTION) ******'
C
C**********************************************************************
C END CALCULATION OF THE OBJECTIVE FUNCTION.
C**********************************************************************
C
C BEG OCT 2006
      IF (NPRT.GE.1) WRITE(IFILE,'(/,/,/,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************',
     1' ************          CHAPTER 28             *****************',
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************'
      IF (NPRT.GE.0) WRITE(IFILE,'(A,I3,A)')
     1' **** CHAPTER 28: DESIGN PERTURBATION INDEX, IMOD=',IMOD,' ****'
      IF (NPRT.GE.1) WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1 ' *************************************************************',
     1 ' CHAPTER 28 Present design, loading, and margins for the',
     1 '            current load set and subcase. See Table 6 in',
     1' Bushnell, D.',
     1' "Optimization of an axially compressed ring and stringer',
     1' stiffened cylindrical shell with a general buckling modal',
     1' imperfection", AIAA Paper 2007-2216, 48th AIAA SDM Meeting,',
     1' Honolulu, Hawaii, April 2007'
C END OCT 2006
C
      NCONST = ICONST
C BEG NOV 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
      IF (NCTOT.EQ.0.AND.NCONST.EQ.0.AND.NPRT.GE.2) 
     1  WRITE(IFILE,'(A,/,A,/,A,/,7I6,/,A,2I5,1P,E12.4)')
     1' NO CRITICAL MARGINS FOR THIS CASE AND SUBCASE.',
     1' NO CRITICAL MARGINS FOR ALL CASES SO FAR.',
     1' NCTOT,IMOD,ILOADS,ICASE,NCONST,MORCON(ILOADS,ICASE),ICNBCK=',
     1  NCTOT,IMOD,ILOADS,ICASE,NCONST,MORCON(ILOADS,ICASE),ICNBCK,
     1' ICONST,ICHKRG,CONMAX=',ICONST,ICHKRG,CONMAX
      IF (IMOD.EQ.0.AND.NCTOT.EQ.0.AND.NCONST.EQ.0) THEN
         IGENX = 0
         PANMAX = CONMAX
      ENDIF
C END NOV 2003
C
C BEG OCT 1996
 2223 CONTINUE
      IF ((NCONST.GE.99.OR.MORCON(ILOADS,ICASE).EQ.1)
     1              .AND.ICNBCK.LE.4) THEN
         MORCON(ILOADS,ICASE) = 0
         ISAND = ISANDS
         CONMAX = 5./ICNBCK
         IF (ITYPE.EQ.1) CONMAX = 2. - 0.2*FLOAT(ICNBCK)
         MAXCON = CONMAX
         WRITE(IFILE,'(A,I3,A,A,1P,E12.4)')
     1 ' TOO MANY CONSTRAINTS:',ICNBCK,' TIMES THRU THIS LOOP.',
     1 ' CONMAX=',CONMAX
         ICNBCK = ICNBCK + 1
         ICAR   = 0
         ICONST = 0
         INUMTT = 0
         NCONST = 0
         GO TO 2
      ENDIF
C END OCT 1996
      KOUNT = 0
   95 CONTINUE
C BEG JULY 1995
C     IF ((NCTOT+NCONST).EQ.0.AND.ILOADS.EQ.NLOADS) THEN      (OLD)
      IF ((NCTOT+NCONST).EQ.0.AND.ILOADS.EQ.NLOADS
     1                 .AND.ICHKRG.EQ.0) THEN
C    1                 .AND.ICASE.EQ.NCASES) THEN            (OLDER)
C
C**********************************************************************
C BEGIN CALCULATION OF BUCKLING OR STRESS MARGINS IF NO MARGINS HAVE
C BEEN RECORDED FOR ALL LOAD SETS AND SUBCASES (EXCEPT ON THE LAST
C LOAD CASE, SUBCASE 2 HAS NOT YET BEEN EXPLORED).
C**********************************************************************
C
C BEG JULY 1995
C  FIRST, WE MUST EXPLORE CONSTRAINTS FOR ILOADS = NLOADS AND SUBCASE
C  2 IF THERE ARE RINGS (THAT IS, THE CONDITIONS AT THE RINGS AND RING
C  BUCKLING). WE WANT TO KNOW IF THERE ARE LOWER VALUES FOR RING
C  BUCKLING MARGINS. IF THERE ARE, THEN WE DO NOT HAVE TO RAISE
C  THE CONSTRAINT THRESHOLD.
C
         IF (IMOD.EQ.0.AND.ISTIF(2).NE.0) THEN
C BEG NOV 2003
         CALL MOVER(0.,0,DELFCE,1,8)
         CALL MOVER(0.,0,DELISO,1,12)
         CALL MOVER(0.,0,DELSKN,1,12)
         EPS10 = 0.
         EPS20 = 0.
         EPS120= 0.
         CALL MOVER(0.,0,DELFCX,1,12)
         CALL MOVER(0.,0,DELCUR,1,3)
         DELCRC = 0.
         DELWBX(1) = 0.
         DELWBX(2) = 0.
         CALL MOVER(0.,0,DELFCR,1,12)
         DELWBR(1) = 0.
         DELWBR(2) = 0.
C END NOV 2003
            IF (NPRT.GE.1) WRITE(IFILE,'(/,A)')
     1'***** BEGIN SUBROUTINE STRCON (GET DELFCE FOR RING PARTS) ******'
            CALL STRCON(CONMAX,ISTIF,NSEG,NLAYER,LTYPE,EALLOW,
     1               MATL,ANGLE,EPS1,EPS2,EPS12,EPS10,EPS20,EPS120,
     1               B2,W2,ICONST,CONSTR,WORDB,IADDB,T,TAPE,DEGRAD,
     1               FSSTR,ETHERM,THERMX,THERMY,IPOINC,INUMTT,IMOD,
     1               EPSLOD,ZPARTX,ZPARTY,ETHRMX,ETHRMY,CRACK,ICHANG,
     1               EALLST,NPRT,NAPPL,IFILE,ITYPE,IICHAN,
     1               EPSTOT,EPSFIX,EPSEIG,1,INTEXT,2,
     1               TEMP,FMULT,NNODES,IMTEMP,P,PWDD,IABT,1,1,0,8)
C23456789012345678901234567890123456789012345678901234567890123456789012
            IF (NPRT.GE.1) WRITE(IFILE,*)
     1'*****  END  SUBROUTINE STRCON (GET DELFCE FOR RING PARTS) ******'
            IF (NPRT.GE.1) WRITE(IFILE,'(/,A)')
     1'****** BEGIN SUBROUTINE BUCPAN (PANDA-TYPE BUCKLING:RING) ******'
 9285       CONTINUE
            ILABEL=9285
            IF (NPRT.GE.1) WRITE(IFILE,*)' LABEL NO. IN STRUCT=',ILABEL
            CALL BUCPAN(IFILE,IMOD,JJJ,ICONST,CONSTR,WORDB,ISTIF,IREDUC,
C BEG NOV 2003
     1        KOITER,LENMOD,PANMAX,FSGEN,FSPAN,FSLOC,EIGGEN,0,IPOINC,
C END NOV 2003
     1        INUMTT,FKNOCK,IGENRL,CSLOP,EILOCL,MLOCAL,ISKIN,
     1        MSHEAR,NSHEAR,MNOSHR,NNOSHR,ITUTOR,IWIDE,IQUICK,
     1        FNX,FNY,FNXY,FNX0,FNY0,FNXY0,FNXP0,FNYP0,
     1        FNXYP0,FNXPL0,FNYPL0,FNXYPL,NLOCAL,ITIP,IABP,1,
     1        EPSLOD(4),RWBEIG,RWBTOT,2,FSBSTR,1,TLOCAL,1,0,
C BEG NOV 2003
     1        1,9285,ICD7D,ICD8D,ICD9D,0,ILOADS,MORCON,NCASES,22)
C END NOV 2003
            IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 9410
            IF (IRESTY.EQ.1) GO TO 2222
            IF (NPRT.GE.1) WRITE(IFILE,*)
     1'****** END   SUBROUTINE BUCPAN (PANDA-TYPE BUCKLING:RING) ******'
            IF (ITYPE.EQ.1.AND.NPRT.GE.2)
     1       WRITE(IFILE,*)' AFTER BUCPAN: IMOD,INUMTT,ICONST=',
     1                                     IMOD,INUMTT,ICONST
C BEG NOV 2003
            IF (NCASES.EQ.2.AND.ICONST.GT.0) THEN
C END NOV 2003
               ICHKRG = 1
               GO TO 2
            ENDIF
         ENDIF
C  End of (IMOD.EQ.0.AND.ISTIF(2).NE.0) condition.
C
         KOUNT = KOUNT + 1
         IF (IMOD.EQ.0) WRITE(IFILE,100) CONMAX,JJJ,ILOADS,IICHAN
  100 FORMAT(//' ******* NO CONSTRAINTS LESS THAN',1PE10.2,' ********'/
     1' design iter. no.',I3,', load set',I3,', matl iteration no.',I3/
     1' We raise the threshold value for constraints and redo the'/
     1' PANDA-type of buckling analysis:')
         IF (IMOD.EQ.0) ICAR   = 0
         ICONST = 0
         INUMTT = 0
C BEG APR 1997
         IF (IMANY.EQ.0) PANMAX = CONMAX*10.**KOUNT
         IF (IMANY.NE.0) PANMAX = CONMAX + KOUNT
C END APR 1997
C BEG NOV 2003
         IF (NPRT.GE.2) WRITE(IFILE,'(A,2I5,1P,2E12.4)')
     1' IMANY,KOUNT,CONMAX,PANMAX =',IMANY,KOUNT,CONMAX,PANMAX
C END NOV 2003
         IF (NPRT.GE.1) WRITE(IFILE,'(/,A)')
     1'****** BEGIN SUBROUTINE BUCPAN (PANDA-TYPE BUCKLING) ******'
 9290    CONTINUE
         ILABEL=9290
         IF (NPRT.GE.1) WRITE(IFILE,*)' LABEL NO. IN STRUCT=',ILABEL
         FNYEFF = FNY
         FNY0FF = FNY0
         IF (ISTIF(2).EQ.0) THEN
            FNYEFF = FNY + DFNYPA
            FNY0FF = FNY0 + DFNYPB
         ENDIF
         CALL BUCPAN(IFILE,IMOD,JJJ,ICONST,CONSTR,WORDB,ISTIF,IREDUC,
     1        KOITER,LENMOD,PANMAX,FSGEN,FSPAN,FSLOC,EIGGEN,0,IPOINC,
     1        INUMTT,FKNOCK,IGENRL,CSLOP,EILOCL,MLOCAL,ISKIN,
     1        MSHEAR,NSHEAR,MNOSHR,NNOSHR,ITUTOR,IWIDE,IQUICK,
     1        FNX,FNYEFF,FNXY,FNX0,FNY0FF,FNXY0,FNXP0,FNYP0,
     1        FNXYP0,FNXPL0,FNYPL0,FNXYPL,NLOCAL,ITIP,IABP,1,
     1        EPSLOD(4),RWBEIG,RWBTOT,ICASE,FSBSTR,1,TLOCAL,1,0,
C BEG NOV 2003
     1        1,9290,ICD7D,ICD8D,ICD9D,0,ILOADS,MORCON,NCASES,23)
C END NOV 2003
         IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 9410
         IF (IRESTY.EQ.1) GO TO 2222
         IF (NPRT.GE.1) WRITE(IFILE,*)
     1'****** END   SUBROUTINE BUCPAN (PANDA-TYPE BUCKLING) ******'
         IF (ITYPE.EQ.1.AND.NPRT.GE.2)
     1    WRITE(IFILE,*)' AFTER BUCPAN: IMOD,INUMTT,ICONST=',
     1                                  IMOD,INUMTT,ICONST
C
         NCONST = ICONST
         IF ((NCTOT+NCONST).EQ.0) THEN
            IF (IMOD.EQ.0) WRITE(IFILE,110) JJJ, ILOADS, IICHAN
  110 FORMAT(//' ********** NO CONSTRAINTS FROM BUCKLING *********'/
     1' design iter. no.',I3,', load set',I3,', matl iteration no.',I3/
     1' We do a strain analysis to generate some stress constraints:')
C
            IF (IMOD.EQ.0) ICAR   = 0
            ICONST = 0
            INUMTT = 0
            ISWIT = 1
            IF (IQUICK.EQ.0) ISWIT = 2
            GO TO (120,130),ISWIT
C
  120       CONTINUE
C BEG NOV 2003
            CALL MOVER(0.,0,DELFCE,1,8)
            CALL MOVER(0.,0,DELISO,1,12)
            CALL MOVER(0.,0,DELSKN,1,12)
            EPS10 = 0.
            EPS20 = 0.
            EPS120= 0.
            CALL MOVER(0.,0,DELFCX,1,12)
            CALL MOVER(0.,0,DELCUR,1,3)
            DELCRC = 0.
            DELWBX(1) = 0.
            DELWBX(2) = 0.
            CALL MOVER(0.,0,DELFCR,1,12)
            DELWBR(1) = 0.
            DELWBR(2) = 0.
C END NOV 2003
            IF (NPRT.GE.1) WRITE(IFILE,'(/,A)')
     1'****** BEGIN SUBROUTINE STRCON (IQUICK=1 TYPE STRESSES) ******'
            CALL STRCON(PANMAX,ISTIF,NSEG,NLAYER,LTYPE,EALLOW,MATL,
     1                  ANGLE,EPS1,EPS2,EPS12,EPS10,EPS20,EPS120,
     1                  B2,W2,ICONST,CONSTR,WORDB,IADDB,T,TAPE,DEGRAD,
     1                  FSSTR,ETHERM,THERMX,THERMY,IPOINC,INUMTT,IMOD,
     1                  EPSLOD,ZPARTX,ZPARTY,ETHRMX,ETHRMY,CRACK,ICHANG,
     1                  EALLST,NPRT,NAPPL,IFILE,ITYPE,IICHAN,
     1                  EPSTOT,EPSFIX,EPSEIG,1,INTEXT,ICASE,
     1                  TEMP,FMULT,NNODES,IMTEMP,P,PWDD,IABT,0,1,0,9)
            IF (NPRT.GE.1) WRITE(IFILE,*)
     1'****** END   SUBROUTINE STRCON (IQUICK=1 TYPE STRESSES) ******'
            IF (ITYPE.EQ.1.AND.NPRT.GE.2)
     1       WRITE(IFILE,*)' AFTER STRCON: IMOD,INUMTT,ICONST=',
     1                                     IMOD,INUMTT,ICONST
C
            GO TO 140
  130       CONTINUE
            IF (NPRT.GE.1) WRITE(IFILE,'(/,A)')
     1'****** BEGIN SUBROUTINE STRTHK (IQUICK=0 TYPE STRESSES) ******'
            CALL STRTHK(IFILE,NPB,MPB,AL,FSQ,EXMID,EYMID,EXYMID,
     1              EMAX,EMARG,EALLOW,IEND,MAXSEG,PANMAX,ICONST,CONSTR,
     1              WORDB,IADDB,IMOD,IWHERE,JJJ,FSSTR,
     1              IPOINC,INUMTT,CRACK,ICHANG,EALLST,ITYPE,
     1              IICHAN,PWDD,ITUTOR,IFILE4,IPROMP,IOUT,
     1              WIPROD,ICASE,TEMP,FMULT,EPSLDX,ETHERM,IMTEMP,
     1              IPOPX,IABT,IHOOP)
            IF (NPRT.GE.1) WRITE(IFILE,*)
     1'****** END   SUBROUTINE STRTHK (IQUICK=0 TYPE STRESSES) ******'
C
            IF (ITYPE.EQ.1.AND.NPRT.GE.2)
     1       WRITE(IFILE,*)' AFTER STRTHK: IMOD,INUMTT,ICONST=',
     1                                     IMOD,INUMTT,ICONST
  140       CONTINUE
            NCONST = ICONST
         ENDIF
C  End of ((NCTOT+NCONST).EQ.0) condition.
      ENDIF
C End of ((NCTOT+NCONST).EQ.0.AND.ILOADS.EQ.NLOADS
C                               .AND.ICHKRG.EQ.0) condition.
C
      IF ((NCTOT+NCONST).EQ.0.AND.ILOADS.EQ.NLOADS
C BEG NOV 2003
     1     .AND.ICHKRG.EQ.0.AND.ICASE.EQ.NCASES) THEN
C END NOV 2003
         IF (KOUNT.GT.6) THEN
            WRITE(IFILE,150)
  150       FORMAT(/' NO ACTIVE CONSTRAINTS. PLEASE CHECK YOUR'/
     1              ' INPUT DATA CAREFULLY. IS THE LOADING CORRECT?')
            CALL ERREX
         ENDIF
         GO TO 95
      ENDIF
C
      IF (KOUNT.GT.0) THEN
         CONMAX = PANMAX
C BEG NOV 2003
         IF (NPRT.GE.2) WRITE(IFILE,'(A,2I5,1P,2E12.4)')
     1' IMANY,KOUNT,CONMAX,PANMAX =',IMANY,KOUNT,CONMAX,PANMAX
C END NOV 2003
         GO TO 2
      ENDIF
C
C**********************************************************************
C END CALCULATION OF BUCKLING OR STRESS MARGINS IF NO MARGINS HAVE
C BEEN RECORDED FOR ALL LOAD SETS AND SUBCASES.
C**********************************************************************
C
C BEG JUL 1999
      IQUICK = IQUICS
C END JUL 1999
      RETURN
      END
C
C
C BEG NOV 1995
C
C=DECK      STRIMP
      SUBROUTINE STRIMP(IFILE,IMOD,ICONST,CONSTR,WORDB,IADDB,BLL2,
     1              IFLAT,KOITER,JJJ,IREDUC,CONMAX,W0LOC,W0GLOB,WG1,WG2,
     1              ILOADS,FSGEN,FSPAN,FSLOC,FSSTR,IQUICK,IPOINC,INUMTT,
     1              EIGBOW,CRACK,EALLST,CSLOPE,ITYPE,IFILE4,IPROMP,
     1              P,IWIDE,MCRIP,NCRIP,WIMPG,WIMPL,IABP,IICURV,ICASE,
     1              THERMX,THERMY,TEMP,FMULT,IMTEMP,FSBSTR,IABT,WIMPG1,
     1              RWBTOT,RWBEIG,FKNKOI,ETHERM,EPSLOD,ETHRMX,ETHRMY,
     1              ICHANG,FKNOCK,NAPPL,EIGLCS,INTGEN,INTRNG,INTLOC,
     1              IGENRL,ISKIN,ITUTOR,ITIP,AMPITR,IICHAN,NNODES,
     1              DFNYPA,DFNYPB,EIGGGG,EILOCL,MLOCAL,NLOCAL,TLOCAL,
     1              MSHEAR,NSHEAR,MNOSHR,NNOSHR,WIDLAM,EILC82,IBEAM,
     1              MORCON,NCASES,ICUBIC,JCUBIC,IARBOC,FKNKAL,FKNMLT,
C BEG NOV 2003
     1              IDMWAV,IDNWAV,FKNSRG,EILC71,EILC81,FKNCKP,INTPRS,
C BEG MAR 2005
     1              FKNMLS,RNGKNZ)
C END MAR 2005
C END NOV 2003 
C
C  PURPOSE IS TO FIND KNOCKDOWN FACTORS FOR GEOMETRIC IMPERFECTIONS OF
C  VARIOUS TYPES: GLOBAL (PART 1); INTER-RING (PART 2); LOCAL (PART 3).
C  ALSO, FIND KNOCKDOWN FOR ANISOTROPY, ETC. THIS LONG ROUTINE USED TO
C  BE PART OF SUBROUTINE STRUCT, BUT SUBROUTINE STRUCT BECAME TO LONG
C  FOR SOME WORKSTATIONS TO COMPILE IN A ROUTINE MANNER.
C  THIS CODING WAS SEPARATED FROM SUBROUTINE STRUCT IN NOV. 1995.
C
C BEG MAR 2007
      COMMON/FCOMWX/FCOM91,FCOM9,FCOM81,FCOM8,FCOM71,FCOM7
C END MAR 2007
C BEG JAN 2007
      COMMON/WRDMDX/WRDMOD
      CHARACTER*16 WRDMOD
C END JAN 2007
C BEG APR 2000
      COMMON/IDISCX/IDISCR,FNNORM
      COMMON/AA8/EIGSS,EIGSR,KWAVES(2,4)
C END APR 2000
C BEG JUL 1999
      COMMON/EIG7ZX/EIG7Z
      COMMON/IIG7ZX/IEIG7Z
C END JUL 1999
C BEG FEB 1996
      COMMON/IRESTX/IRESTY
      COMMON/LOADS5/RESTOT(3,5,2)
C END FEB 1996
C BEG AUG 1996
      COMMON/IXIMPX/IXIMPF(5)
C END AUG 1996
C BEG JAN 2006
      COMMON/ICONSX/ICONSV
C END JAN 2006
C BEG DEC 2004
      COMMON/AXWAVX/AXLWAV(5)
C END DEC 2004
C BEG JUN 2006
      COMMON/AXLRDX/AXLRED
C END JUN 2006
C BEG JULY 2006
      COMMON/INOT4X/INOT4(4)
C END JULY 2006
C BEG JAN 2007
      COMMON/AMPMDZ/AMPMD7,AMPMD8,AMPMD9,AMPM10
C END JAN 2007
C BEG OCT 1996
      DIMENSION MORCON(5,2)
C END OCT 1996
C BEG MAR 1997
      DIMENSION ICUBIC(*),JCUBIC(*)
C END MAR 1997
C BEG APR 1998
      DIMENSION IARBOC(*)
C END APR 1998
C BEG JUN 1998
      COMMON/ALTRAT/EIGRT7,EIGRT8,EIGRT9,EIGMR7,EIGMR8,EIGMR9
C END JUN 1998
      COMMON/BOVERW/BOVRW2(2)
      COMMON/GEOM1/AXIAL,CIRC,R
      COMMON/GEOM2/B(2),B2(2),H(2),W(2),W2(2)
      COMMON/GEOM3/ISTIF(2),NLAYER(4,2),NSEG(2),INTEXT(2)
      COMMON/LAYER/MATL(90),LTYPE(99,5,2),T(90),ANGLE(90)
      COMMON/MATRN2/GTX(2,5),GTY(2,5),GTS(2),TEFF(2)
      COMMON/MATER4/TAPE(20),TMINUM(20),FAILSC(100)
      COMMON/MATER5/DEGRAD(10,5,10)
      COMMON/THICK/TX(5),TY(5)
      COMMON/MATER3/STSMAX(10),EALLOW(5,10)
      COMMON/ALLCIJ/CX(6,6,5),CY(6,6,5),CS(6,6)
      COMMON/LOADS/FNX,FNY,FNXY,RESULT(3,5,2)
      COMMON/LOADS2/FNX0,FNY0,FNXY0,RESFIX(3,5,2)
      COMMON/LOADS4/EPSEIG(3,5,2),EPSFIX(3,5,2),EPSTOT(3,5,2)
      COMMON/FNP0/FNXP0,FNYP0,FNXYP0,FNXPL0,FNYPL0,FNXYPL
      COMMON/PMD/PW(23,8),PWD(23,8),PWDD(23,8),PU(23,8),PV(23,8),
     1 PVP(23,8)
      COMMON/OUTP/NPRT
      COMMON/GNNSTB/EIGGEN,EIGLOC,EIGTST,FBOUND,LENMOD
      COMMON/BNDLAY/BLL
      COMMON/MODES2/MSKIN,NSKIN,CCCLLL,CCCSLP
      COMMON/WIDLMX/WIDLM0
      COMMON/AK9X9Y/MWAV9X,NWAV9X,CSLP9X,MWAV9Y,NWAV9Y,CSLP9Y,
     1              FMA9X,FMA9Y
      COMMON/AK8X8Y/MWAV8X,NWAV8X,CSLP8X,MWAV8Y,NWAV8Y,CSLP8Y,
     1              FMA8X,FMA8Y,CSLP8Z,MWAV8Z,NWAV8Z,FMA8Z
      COMMON/AK7X7Y/MWAV7X,NWAV7X,CSLP7X,MWAV7Y,NWAV7Y,CSLP7Y,
     1            FMA7X,FMA7Y,MWAV7Z,NWAV7Z,CSLP7Z,FMA7Z,BABSR,CSLP7Q,
     1            WIDTH7,SID7
      COMMON/IK7X7Y/NOTCM7,NOTCM8,NOTCM9
      COMMON/DELIMP/DELFCE(4,2),DELISO(4,3),DELSKN(3,2,2),DELWEB(2)
      COMMON/WIDCOL/CSWIDE(6,6)
      COMMON/REDGEN/CSREDU(6,6)
      COMMON/ZPARTS/ZPARTX(5),ZPARTY(5)
      COMMON/MNNOSH/MLOCNS,NLOCNS,MLCNS3,NLCNS3
C BEG MAY 1998
      COMMON/EBEAMX/EBEAMR,EIEFF,FSAFE2,EFFLEN,EIGBM1
C END MAY 1998
C BEG JUN 1998
C BEG JULY 1998
      COMMON/FMDKDX/FMDKD7,FMDKD8,FMDKD9,FLTSL7,FLTSL8,FLTSL9
C END JULY 1998
C END JUN 1998
      COMMON/ISKNRD/IEFFSK
      COMMON/GEOM6/IFAY(2),IMISCL(28)
C BEG MAR 1996
      COMMON/ISWWI/ISWWID,ISWLOC,ISWWIX,ISSKIP
C END MAR 1996
      COMMON/ISOGR/ISOGRD,ISOANG
      COMMON/LOADS9/RSPRS(3,5,3),ESPRS(3,5,3),RSTOT(3,5,3),RSULT(3,5,3)
      COMMON/ISKPL/ISKIPL,IRMOD,IBLL,ICD7,ICD8,ICD9
C BEG MAR 2003
      COMMON/ISKPL2/ICD71,ICD81,ICD91,ICD10
C END MAR 2003
      COMMON/RADIM2/WYYAMP,W0PAN,WYYGEN,WYYPAN,WYYLOC
C BEG DEC 2001
      COMMON/RADM13/WG1S,WYYGNS,WYYPNS,WYYLCS,RADNEW
C END DEC 2001
      COMMON/WXXP/WXX7(2),WXX8,WXX9,WYY7(2),WYY8,WYY9,WXY7(2),WXY8,WXY9,
     1            F7,F8,F9
      COMMON/WXXP2/WXX10,WYY10,WXY10
C BEG OCT 1996
      COMMON/WXXXP/WXXX7(2),WXXX8,WXXX9,WXXY7(2),WXXY8,WXXY9,
     1             WYYX7(2),WYYX8,WYYX9,WYYY7(2),WYYY8,WYYY9,
     1             WXXX10,WXXY10,WYYX10,WYYY10
C END OCT 1996
      COMMON/ITESTX/ITEST,IAMPOV(4)
C BEG NOV 1995
      COMMON/JJLAST/JLAST,IHIAXL,IFIXMW
C END NOV 1995
C BEG MAR 1998
C BEG APR 1998
C BEG JULY 1998
      COMMON/NSKPL/DNWAVE,DNWAV7,DNWAV8,DNWAV9,EIGVLX
C BEG NOV 2003
C     COMMON/ESKPL/EIGRTX(20)
      COMMON/ESKPL/EIGRTX(20),EIGRTY(20)
      COMMON/IFLTAX/IFLT8A,IFLT7A
C END JULY 1998
C END APR 1998
      COMMON/EIG789/EIG7X,EIG8X,EIG9X
C END MAR 1998
      COMMON/MSKPL/DMWAVE,DMWAV7,DMWAV8,DMWAV9
      COMMON/RADIM3/CSLP91,TLOC91,CSLOP9,TLOC9
      COMMON/RADM32/MLOC91,NLOC91,MLOC9,NLOC9
      COMMON/RADIM4/CSLP81,TLOC81,CSLOP8,TLOC8
      COMMON/RADM42/MLOC81,NLOC81,MLOC8,NLOC8
      COMMON/RADIM5/CSLP71,TLOC71,CSLOP7,TLOC7
      COMMON/RADM52/MLOC71,NLOC71,MLOC7,NLOC7
      COMMON/RADIM6/WYYAM2(4)
      COMMON/RADM62/WYYAMX(40,5,2),WYYAMY(40,5,2),WYYAMZ(40,5,2)
      COMMON/RADIM7/CSLP92,TLOC92,CSLP10,TLOC10,DNWV10,DMWV10
      COMMON/RADM72/MLOC92,NLOC92,MLOC10,NLOC10,IMLOC,ILAMHI
      COMMON/RADIM8/CSLP93,TLOC93,CONLAM,EILCSS,CONSET
      COMMON/RADM82/MLOC93,NLOC93
      COMMON/RADIM9/CSLP94,TLOC94,DMWAVA,DNWAVA
      COMMON/RADM94/FACM2X,FACM2Y,FACM2Z,FACM2W,W0SET
      COMMON/RADM92/MLOC94,NLOC94,NLOCAR,NLOCX(40,5,2)
      COMMON/RADM93/MLOCAR,MLOCX(40,5,2),IAMPLD(4),INDAMP,IW0SET
      COMMON/DELIM2/DELFCX(3,4),DELWBX(2),DELCUR(3)
      COMMON/BW2HAT/IBW2HT
      COMMON/RADM10/EPST1A,EPST2A,EPT12A
      COMMON/RADM11/INDDN(5,2),INDDM(5,2)
      COMMON/RADM12/EIG91X,EIG92X,EIG81X,EIG71X
      DIMENSION CONSTR(*),WORDB(*),IADDB(*),IPOINC(*)
C BEG OCT 1998
      DIMENSION FKNKOI(3),FKNKAL(3),IDMWAV(3),IDNWAV(3),FKNSRG(*)
C END OCT 1998
      DIMENSION RWBTOT(2),RWBEIG(2)
      DIMENSION TEMP(4,2),FMULT(20,10,4,2)
      DIMENSION EALLST(5,10)
      DIMENSION THERMX(6,5),THERMY(6,5),CRACK(99,5,2)
      DIMENSION ETHERM(6),EPSLOD(6)
      DIMENSION ETHRMX(6,5),ETHRMY(6,5)
      DIMENSION FKNOCK(10),NAPPL(3),EIGLCS(4)
      DIMENSION WYYAM3(4)
      DIMENSION AMPITR(20)
      REAL LENMOD,NAPPL
      CHARACTER*8 WRDISO
      CHARACTER*80 WORDB
C BEG NOV 2003
      DIMENSION FKNCKP(*)
      CHARACTER*37 WRDWID,WRDGEN
C END NOV 2003

C
C *********************************************************************
C  START ANALYSIS OF IMPERFECT CYLINDRICAL PANELS...
C *********************************************************************
C
C    IN THIS SECTION THE PURPOSE IS TO GET KNOCKDOWN FACTORS
C       FKNOCK(7) FOR IMPERFECTION SENSITIVITY OF LOCAL BUCKLING,
C       FKNOCK(8) FOR IMPERFECTION SENSITIVITY OF INTER-RING BUCKLING,
C       FKNOCK(9) FOR IMPERFECTION SENSITIVITY OF GENERAL BUCKLING,
C    FOR PANELS THAT ARE CURVED (CYLINDRICAL, IFLAT = 0). 
C
C    ALSO, THE PURPOSE IS TO OBTAIN CURVATURE CHANGES AND TWIST,
C    Wxx, Wyy, Wxy, CORRESPONDING TO THE OVERALL, INTER-RING, AND
C    LOCAL DEFORMATIONS OF CYLINDRICAL PANELS WHICH HAVE OVERALL
C    OUT-OF-ROUNDNESS (OVALIZATION) AND BUCKLING MODAL IMPERFECTIONS 
C    IN THE FORMS OF GENERAL, INTER-RING, AND LOCAL BUCKLING MODES
C    OF THE STIFFENED PANEL. THESE QUANTITIES ARE SIGNIFICANT BECAUSE
C    THEY AFFECT THE STRESSES IN THE PANEL AND STIFFENERS AT THE DESIGN
C    LOAD.
C
C    IN ADDITION, THE REDISTRIBUTION OF STRESS RESULTANTS, Nx, Ny, Nxy,
C    OVER THE SKIN-STRINGER AND SKIN-RING CROSS SECTIONS ARE COMPUTED.
C    THESE REDISTRIBUTIONS RESULT FROM THE OVALIZATION AND BUCKLING
C    MODAL GENERAL AND INTER-RING COMPONENTS OF IMPERFECTION. THEY ARE
C    SIGNIFICANT BECAUSE THEY AFFECT THE BUCKLING LOAD FACTORS FOR
C    LOCAL BUCKLING OF THE PANEL SKIN, STRINGER PARTS, AND RING PARTS.
C
 1004       FORMAT(/' **** WARNING ***** WARNING ***** WARNING ****'/
     1              ' WIDE COLUMN BUCKLING IS CRITICAL. THE'/
     1              ' LOAD FACTOR FOR WIDE COLUMN BUCKLING = ',1PE12.4/
     1              ' IT MAY BE A GOOD IDEA BEFORE LAUNCHING THE NEXT'/
     1              ' "PANDAOPT" RUN TO TURN ON THE WIDE COLUMN'/
     1              ' BUCKLING SWITCH FOR EVERY LOAD CASE IN THE'/
     1              ' *.OPT FILE. USE YOUR JUDGMENT, AND BE CAREFUL!'/
     1              ' ** END WARNING ** END WARNING ** END WARNING'/)
 1013          FORMAT(/
     1      ' LOCAL WIDTH-WISE WIDE COLUMN SKIN BUCKLING IS CRITICAL.'/
     1      ' THE LOCAL NONLINEAR STATIC RESPONSE OF THE PANEL MODULE'/
     1      ' TO NORMAL PRESSURE IS NOT CALCULATED IN THIS ITERATION'/
     1      ' BECAUSE IT IS LIKELY THAT NEWTON ITERATIONS WILL FAIL'/
     1      ' TO CONVERGE. INSTEAD, A WIDTH-WISE WIDE COLUMN BUCKLING'/
     1      ' CONSTRAINT CONDITION MAY BE SET UP.')
 1014       FORMAT(/' WIDTH-WISE WIDE COLUMN BUCKLING LOAD FACTOR'/
     1    ' WIDLAM =4*pi**2*EI/[abs(local hoop load)*WIDTH**2]=',
     1      1PE12.4)
 1015          FORMAT(/
     1      ' LOCAL WIDTH-WISE WIDE COLUMN SKIN BUCKLING IS CRITICAL.'/
     1      ' THE LOCAL NONLINEAR STATIC RESPONSE OF THE PANEL MODULE'/
     1      ' TO NORMAL PRESSURE IS NOT CALCULATED IN THIS ITERATION'/
     1      ' BECAUSE IT IS LIKELY THAT NEWTON ITERATIONS WILL FAIL'/
     1      ' TO CONVERGE.')
C BEG NOV 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG OCT 2006
      IF (NPRT.GE.1) WRITE(IFILE,'(/,/,/,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************',
     1' ************          CHAPTER 10             *****************',
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************'
      IF (NPRT.GE.0) WRITE(IFILE,'(A,I3,A)')
     1' **** CHAPTER 10: DESIGN PERTURBATION INDEX, IMOD=',IMOD,' ****'
      IF (NPRT.GE.0) WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A)')
     1 ' *************************************************************',
     1 ' CHAPTER 10 Compute knockdown factors and prebuckling bending',
     1 '            associated with initial general, inter-ring, local',
     1 '            buckling modal imperfections. (See Ref.[1E].',
     1 '            Also see Sections 13 and 14 and Tables 9 and 10',
     1 '            of Ref.[1K]).'
C END OCT 2006
            IF (NPRT.GE.1) WRITE(IFILE,
     1'(/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1 ' ***** ENTERING IMPERFECTION SECTION (subroutine STRIMP) *****',
     1 ' Please see the following articles for details on the theory:',
     1 '  1. D. Bushnell and W.D. Bushnell, "Approximate method..."',
     1 '     Computers & Structures, Vol. 29, No. 3, pp. 489-527, 1996',
     1 '     (The theory here is called "PANDA2" in the output below)',
     1 '  2. D. Bushnell, "Recent enhancements to PANDA2", Proceedings',
     1 '     37th AIAA SDM meeting, April 1996 (see pp 131-136)',
     1 '     (The theory here is called "ARBOCZ" in the output below)',
     1' For discussions of fractional wavenumbers, see following Items',
     1 ' in ...panda2/doc/panda2.news: 125g,367,405,412,436,449,453',
     1 ' *** There are three parts to this "IMPERFECTIONS" section:',
     1 ' ***   PART 1: general buckling (rings and stringers smeared)',
     1 ' ***   PART 2: inter-ring buckling (stringers smeared)',
     1 ' ***   PART 3: local buckling: skin buckling between stiffners',
     1 ' **  In each part both "PANDA2" and "ARBOCZ" theories are used.'
            IF (NPRT.GE.1.AND.INTPRS.EQ.1) 
     1         WRITE(IFILE,'(/,A,/,A,/,A,/,A)')
     1 ' ***** NOTE: IN THIS EXECUTION OF SUBROUTINE STRIMP, THE *****',
     1 ' *****     INTERNAL PRESSURE IS NEGLECTED. See ITEM 553  *****',
     1 ' *****     OF THE FILE ..panda2/doc/panda2.news.         *****',
     1 ' ============================================================='
C END NOV 2003
C BEG APR 2006
C23456789012345678901234567890123456789012345678901234567890123456789012
            IF (NPRT.GE.1.AND.IXIMPF(ILOADS).EQ.1) THEN
      WRITE(IFILE,'(/,A,/,A,/,A)')
     1' ******** PANDA2 is using STRATEGY (2) with respect to *******',
     1' ******** the treatment of buckling modal imperfections *******',
     1' ******** See Step1 - Step 3 and Ref.[17] for details. ********'
      WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A,/,A)') 
     1' Step 1. Use the critical buckling mode shape, (m,n,slope) =',
     1'        (axial halfwaves, circ. halfwaves, nodal line slope)',
     1'        corresponding to the PERFECT rather than the IMPERFECT',
     1'        geometry if the axial halfwavelength of the critical',
     1'        buckling mode of the IMPERFECT geometry is less than or',
     1'        equal to half the user-specified axial halfwavelength',
     1'        of the imperfection.'
C
      WRITE(IFILE,'(/,A,/,A,/,A,/,A)')
     1' Step 2. Change the amplitude of whatever imperfection results',
     1'        from Step 1 by the factor (ratio):',
     1'       (axial halfwavelength of the critical buckling mode)/',
     1'       (user-specified axial halfwavelength of the imperfection)'
C
      WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A)')
     1' Step 3. Reduce the buckling modal imperfection amplitude',
     1'        remaining after Steps 1 and 2 if it leads to an',
     1'        out-of-plane wall rotation that is greater than', 
     1'        0.1 radian.',
     1' ******* End of description of STRATEGY (2)  Ref.[17]   ********'
C23456789012345678901234567890123456789012345678901234567890123456789012
            ENDIF
C
            CSLMLT = 1.0
            FNXXXX = 0.
            IF (FNX.LT.0.0) FNXXXX = ABS(FNX)
            FNYYYY = 0.
            IF (FNY.LT.0.0) FNYYYY = ABS(FNY)
C BEG FEB 2007 (make the following statement also depend on ICONSV)
            IF (ICONSV.EQ.-1.AND.IFLAT.EQ.0.AND.FSLOC.GT.0.9.AND.
     1          ABS(FNXY).LT.2.0*SQRT(FNXXXX**2 +FNYYYY**2)) CSLMLT=0.0
C END FEB 2007
C END APR 2006
C BEG MAY 2006
C  temporary change... (commented out now)
C           CSLMLT = 0.0
C END MAY 2006
            PI = 3.1415927
            EILC72 = 0.
            EIG7W = 1.
            EIG7X = 1.
            EIG8X = 1.
            EIG9X = 1.
C BEG DEC 2001
            WYYGNS = 0.
            WYYPNS = 0.
            WYYLCS = 0.
            WG1S   = 0.
            RADNEW = R
C END DEC 2001
            WYYGEN = 0.
            WYYGNS = 0.
            WYYPAN = 0.
            WYYLOC = 0.
            IF (IMOD.EQ.0) THEN
C BEG JULY 2006
               INOT4(1) = 0
               INOT4(2) = 0
               INOT4(3) = 0
               INOT4(4) = 0
C END JULY 2006
C BEG JUN 2006
               AXLRED = 1.0
C END JUN 2006
               RATHI  = 10.
               RATLO  = 2.
               RATRES = 100.
               IF (FNY.LT.0.0) RATRES = SQRT(FNX**2 + FNXY**2)/ABS(FNY)
               WYYAM2(1) = 1.
               WYYAM2(2) = 1.
               WYYAM2(3) = 1.
               WYYAM2(4) = 1.
               WYYAM3(1) = 1.
               WYYAM3(2) = 1.
               WYYAM3(3) = 1.
               WYYAM3(4) = 1.
               NLOC10 = 0
               MLOC10 = 0
               CSLP10 = 0.
               NLC10P = 0
               MLC10P = 0
               CSL10P = 0.
               CONLAM = 0.
               CONSET = 0.05
               MLOC93 = 0
               NLOC93 = 0
               EILCSS = 0.
               CSLP93 = 0.
               TLOC93 = 10.
            ENDIF
            DNWAV7 = 0.
            DNWAV8 = 0.
            DNWAV9 = 0.
            DNWV10 = 0.
            DNWV91 = 0.
            DNWV92 = 0.
            DNWV7P = 0.
            DNWV8P = 0.
            DNWV9P = 0.
            DNW10P = 0.
            DMWAV7 = 0.
            DMWAV8 = 0.
            DMWAV9 = 0.
            DMWV10 = 0.
            DMWV91 = 0.
            DMWV92 = 0.
            DMWV7P = 0.
            DMWV8P = 0.
            DMWV9P = 0.
            DMW10P = 0.
            EILC10 = 0.
            EILC92 = 0.
            DELWB1 = 0.
            DELWEB(1) = 0.
            DELWEB(2) = 0.
            FFSLOC = FSLOC
C BEG NOV 2003
            FACNY  = 1.0
            FACNY0 = 1.0
            FACNYP = 1.0
            FACNPL = 1.0
            FNY1   = FNY
            FNY2   = FNY0
            FNY3   = FNYP0
            FNY4   = FNYPL0
            IF (INTPRS.EQ.1.AND.IFLAT.EQ.0) THEN
               IF (FNY.GT.0.0)   FACNY  = 0.
               IF (FNY0.GT.0.0)  FACNY0 = 0.
               IF (FNYP0.GT.0.0) FACNYP = 0.
               IF (FNYPL0.GT.0.) FACNPL = 0.
               FNY1 = FACNY*FNY
               FNY2 = FACNY0*FNY0
               FNY3 = FACNYP*FNYP0
               FNY4 = FACNPL*FNYPL0
            ENDIF
C END NOV 2003
C
C  IEFFSK is a user-provided index for effective stiffness of panel skin:
C         IEFFSK = 1 means use reduced effective panel skin stiffness
C                    to account for local postbuckled state or to
C                    account for the softening effect of a local
C                    initial imperfection (local waviness).
C         IEFFSK = 0 means use the actual panel skin stiffness as if
C                    the panel were perfect and not locally buckled
C                    or wavy.
C
C  FFSLOC =   factor that is used in BUCPAN. If FFSLOC is less
C             than unity, the general and panel (inter-ring with
C             smeared stringers) buckling loads are computed
C             with use of reduced effective panel skin stiffness.
C
            IF (IEFFSK.EQ.1) FFSLOC = 0.5
            IF (ISTIF(1).EQ.0.AND.ISTIF(2).EQ.0.) THEN
               IF (W0LOC.EQ.0.0.AND.WG2.NE.0.0) W0LOC = ABS(WG2)
               W0PAN = W0LOC
            ENDIF
            IF (W0LOC.EQ.0.0)  W0LOC  = 1.E-10
            IF (W0GLOB.EQ.0.0) W0GLOB = 1.E-10
            IF (W0PAN.EQ.0.0)  W0PAN  = 1.E-10
C
C *******************************************************************
C PART 1 OF IMPERFECTION SENSITIVITY AND PREBUCKLING BENDING: OVERALL
C        PREBUCKLING BENDING AND KNOCKDOWN FACTOR FOR GENERAL BUCKLING
C *******************************************************************
C
C  Next, calculate overall behavior of curved panels with rings.
C
C *******************************************************************
C  NOTE: The imperfection sensitivity is computed as if the cylindrical
C        panel were a complete cylindrical shell.
            CIRCS = CIRC
C BEG NOV 1995
            IF (IFLAT.EQ.0.AND.CIRCS.LT.ABS(R)*3.1415927)
     1         CIRC = ABS(R)*3.1415927
C END NOV 1995
C BEG NOV 2003
            CIRCSS = CIRC
C END NOV 2003
            INTGEN = 0
            IF (ISTIF(2).NE.0.AND.
     1           (W0GLOB.NE.0.0.OR.W0LOC.NE.0.0.OR.IEFFSK.NE.0)) THEN
C
C  Do this major section only if there are rings...
C
               INTGEN = 1
C BEG OCT 2006
      IF (NPRT.GE.1) WRITE(IFILE,'(/,/,/,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************',
     1' ************          CHAPTER 10.1           *****************',
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************'
      IF (NPRT.GE.0) WRITE(IFILE,'(A,I3,A)')
     1' **** CHAPTER 10.1: DESIGN PERTURBATION INDEX, IMOD=',IMOD,' ***'
      IF (NPRT.GE.0) WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A)')
     1 ' *************************************************************',
     1 ' CHAPTER 10.1 Compute knockdown factor and prebuckling bending',
     1 '              associated with GENERAL buckling modal initial',
     1 '              imperfection. (See Sectons 13 and 14 and',
     1 '              Tables 9 and 10 of [1K] for a detailed example)'
C END OCT 2006
               IF (NPRT.GE.1) WRITE(IFILE,1392)
 1392          FORMAT(/' Entering imperfection section, PART 1...'/
     1      '  General buckling of panel with rings. Rings and'/
     1      '  Stringers are smeared out.')
C BEG NOV 2003
               IF (NPRT.GE.1.AND.INTPRS.EQ.1) 
     1         WRITE(IFILE,'(/,A,/,A,/,A,/,A)')
     1 ' ***** NOTE: IN THIS EXECUTION OF SUBROUTINE STRIMP, THE *****',
     1 ' *****     INTERNAL PRESSURE IS NEGLECTED. See ITEM 553  *****',
     1 ' *****     OF THE FILE ..panda2/doc/panda2.news.         *****',
     1 ' ============================================================='
C END NOV 2003
C BEG DEC 1995
C              IF (IMOD.EQ.0.AND.IEFFSK.EQ.0
               IF ((NPRT.GE.1.OR.JLAST.EQ.1)
     1          .AND.IMOD.EQ.0.AND.IEFFSK.EQ.0
C END DEC 1995
     1          .AND.(ABS(W0LOC).GE.0.1*TX(1).OR.FSGEN.GT.1.1*FSLOC))
     1            WRITE(IFILE,'(A,/,A,/,A,/,A,/,A,/,A)')
     1       ' **** WARNING ***** WARNING ***** WARNING ****',
     1       ' YOU SHOULD CONSIDER USING THE "REDUCED SKIN STIFFNESS"',
     1       ' OPTION IN THE "MAINSETUP" INTERACTIVE SESSION,',
     1       ' ESPECIALLY IF THE GENERAL BUCKLING FACTOR OF SAFETY,',
     1       ' FSGEN, IS GREATER THAN THE LOCAL BUCKLING F.S., FSLOC.',
     1       ' **** END WARNING *** END WARNING *** END WARNING ****'
               IRMOD = 2
               WYYAMP = 0.
               WG1S = WG1
               WG1  = 0.
               IF (NPRT.GE.1) WRITE(IFILE,'(/,A)')
     1'*** BEGIN BUCPAN (IMPERF. SENSITIVITY, PERFECT PANEL) ****'
C
C  FIRST GET, FROM A PANDA-TYPE (CLOSED-FORM) ANALYSIS, THE GENERAL
C  BUCKLING LOAD FACTOR, EILC91,  AND MODE SHAPE, (MLOC91,NLOC91,CSLP91),
C  FOR THE PERFECT PANEL (WITH LOCALLY POSTBUCKLED SKIN IF THE FACTOR OF
C  SAFETY, FSLOC, IS LESS THAN UNITY).
C  MLOC91 = number of axial halfwaves in the general buckling mode
C  NLOC91 = number of circ. halfwaves in the general buckling mode
C  CSLP91 = slope  of the nodal lines in the general buckling mode
C
 9150          CONTINUE
               ILABEL=9150
               IF (NPRT.GE.1) WRITE(IFILE,*)
     1                        ' LABEL NO. IN STRIMP=',ILABEL
C BEG NOV 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
               CALL BUCPAN(IFILE,IMOD,JJJ,ICONST,CONSTR,WORDB,ISTIF,
     1              IREDUC,KOITER,LENMOD,CONMAX,FSGEN,FSPAN,FSLOC,
     1              EIGGG9,3,IPOINC,INUMTT,FKNOCK,IGENRL,CSLP91,EILC91,
     1              MLOC91,ISKIN,MSHER9,NSHER9,MNOSH9,NNOSH9,ITUTOR,
     1              IWIDE,IQUICK,FNX,FNY1,FNXY,FNX0,FNY2,FNXY0,FNXP0,
     1              FNY3,FNXYP0,FNXPL0,FNY4,FNXYPL,NLOC91,ITIP,IABP,
     1              1,EPSLOD(4),RWBEIG,RWBTOT,ICASE,FSBSTR,1,TLOC91,
     1              0,1,0,9150,ICD7D,ICD8D,ICD91,0,ILOADS,MORCON,
     1              NCASES,24)
C END NOV 2003
               IF (IRESTY.EQ.1) GO TO 2222
C BEG NOV 2003
               IF (IMOD.EQ.0) EIGRTY(13) = EIGRTX(13)
               IF (IMOD.EQ.1) EIGRTX(13) = EIGRTY(13)
C END NOV 2003
               WG1 = WG1S
C  DNWAVE = fractional circumferential halfwave in the general buck. mode
C  DMWAVE = fractional axial           halfwave in the general buck. mode
C  ICD91  = indicator for coordinate direction in which panel is longest.
               DNWV91 = DNWAVE
               DMWV91 = DMWAVE
C BEG MAR 1998
C BEG APR 1998
C BEG JULY 1998
               IF (NPRT.GE.3) WRITE(IFILE,'(A,/,(1P,5E12.4))') 
     1            ' EIGRTX(I),I=1,20)=',(EIGRTX(I),I=1,20)
               EIGVL9 = EIGVLX*EIGRTX(13)
C END JULY 1998
C END APR 1998
C END MAR 1998
C              ICD91  = ICD9
               IF (EILC91.EQ.1.) EILC91 = 0.99999
               FACIM2 = 1./(EILC91 - 1.)
               IF (FACIM2.LE.0.0.OR.FACIM2.GT.100.) FACIM2 = 100.
               IF (IMOD.EQ.0) THEN
                  FACM2Z = FACIM2
                  EIG91X = EILC91
                  FNPROD = (FLOAT(NLOC91)+DNWV91)*PI/CIRC
C                 IF (FNPROD.LT.3.5/ABS(R)) IAMPOV(IRMOD) = 1
                  IF (FNPROD.LT.100000./ABS(R)) IAMPOV(IRMOD) = 1
               ENDIF
               IF (NPRT.GE.0) WRITE(IFILE,'(A,I2,/,
     1          A,1PE12.4,A,I3,A,1PE10.3,A,I3,A,1PE10.3,A,1PE10.3,A)')
     1        ' GENERAL BUCKLING EIGENV. OF PERFECT PANEL, IMOD=',IMOD,
     1       '   EILC91(m,dm,n,dn,s)=',EILC91,'(',MLOC91,',',DMWV91,',',
     1          NLOC91,',',DNWV91,',',CSLP91,')'
C BEG APR 1998
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG JULY 1998
               IF (NPRT.GE.2.AND.EIGRTX(13).LT.1.0)
C END JULY 1998
     1         WRITE(IFILE,'(A,/,A,/,A,/,A,/,A)')
     1   ' NOTE: The eigenvalue and mode shape just printed may not be',
     1       ' the critical one for the perfect shell; It is used only',
     1       ' in the computation of the knockdown factor to account',
     1       ' for initial nonaxisymmetric initial imperfections in a',
     1       ' most conservative manner.'
C BEN APR 1998
C BEG MAR 1998
C BEG APR 1998
               IF (NPRT.GE.2) WRITE(IFILE,'(A,/,A,1P,E12.4,/,
     1         A,1PE12.4,A,I3,A,I3,A,1PE10.3,A,/,A,/,A,/,A)')
     1        ' BUCKLING LOAD FACTOR WITHOUT FRACTIONAL WAVENUMBERS',
     1        ' AND INCLUDING THE FACTOR EIGTST/EIGTS2=EIGRAT=',
     1          EIGRTX(13),
     1        '   EIGVL9(m, 0,n, 0,s)=',EIGVL9,'(',MLOC91,
     1        ',',  NLOC91,',',CSLP91,')',
     1        ' This eigenvalue is the factor EIGPAN used to',
     1        ' normalize the buckling load factors computed in',
     1        ' SUBROUTINE ARBOCZ'
C END APR 1998
C BEG APR 1998
C BEG JULY 1998
C END JULY 1998
C END APR 1998
C END MAR 1998
               EIG9X = 1.0
               EIG9Y = 1.0
               FKNKOI(1) = 1.0
C BEG JAN 1996
C              IF (IFLAT.EQ.0) THEN
               IF (IFLAT.EQ.0.AND.EILC91.LT.10.E+16) THEN
C END JAN 1996
C  Find buckling load and knockdown factor from ARBOCZ 1992 Eq.(3.61)
C    First, for the perfect shell:
                 IF (IMOD.EQ.0) THEN
                    CSLP9X = 0.
                    MWAV9X = 0.
                    NWAV9X = 0.
                    FMA9X  = 0.
                 ENDIF
                 PX1 = CIRC/B(1)
                 IF (FSLOC.GE.0.95) THEN
C BEG OCT 1998
C23456789012345678901234567890123456789012345678901234567890123456789012
                    IF (NPRT.GE.2) WRITE(IFILE,'(/,A,1P,E12.4,A)')
     1            ' General buckling: smeared stiffeners, C11=',
     1              CS(1,1),' (PERFECT PANEL)'
C END OCT 1998
                    PX2 = ABS(1. - CX(4,4,1)/CS(4,4))
                    IF (ISTIF(1).EQ.0) PX2 = 0.
C BEG JUN 1999
                    IF (NPRT.GE.1) WRITE(IFILE,'(A)')
     1                                ' Entering ARBOCZ. Label=9150'
C END JUN 1999
C BEG NOV 2003
                    CALL ARBOCZ(9150,2,IMOD,IFILE,NPRT,LENMOD*AXIAL,
     1                   CIRC,R,
     1                   EIGVL9,ITUTOR,IREDUC,TEFF(1),TEFF(2),GTS,
     1                   CS,0.,EIGVL9*FNX,EIGVL9*FNY1,EIGVL9*FNXY,
     1                   FNX0,FNY2,FNXY0,CSLP9X,MWAV9X,NWAV9X,
     1                   FMA9X,MLOC91,NLOC91,CSLP91,EIG9X,PX1,PX2,1,
     1                   ICUBIC(1),JCUBIC(1),IARBOC(1),ILOADS)
C END NOV 2003
C BEG JUN 1999
                    IF (NPRT.GE.1) WRITE(IFILE,'(A)')
     1                                ' Leaving ARBOCZ.  Label=9150'
C END JUN 1999
C BEG FEB 1996
                    IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
                    FNWAV9 = NWAV9X
C BEG OCT 1998
                    EIG9XP = EIG9X
                    IF (IMOD.EQ.0) THEN
                       CALL EIGMOD(CIRC,FNWAV9,B(1),
     1                  EIG9X,ITUTOR,IFILE,CX(4,4,1),CS(4,4),
     1                  FSAFE2,EIGVL9*FNX,EIGVL9*FNY1,EIGVL9*FNXY,0,2)
                       IF (NPRT.GE.2)
     1                    WRITE(IFILE,'(A,1P,E12.4,/,A,1P,E12.4)')
     1' Buckling load factor BEFORE knockdown for smeared stringers=',
     1  EIG9XP,
     1' Buckling load factor AFTER  knockdown for smeared stringers=',
     1  EIG9X
                    ENDIF
C END OCT 1998
                 ELSE
C BEG OCT 1998
C23456789012345678901234567890123456789012345678901234567890123456789012
                    IF (NPRT.GE.2) WRITE(IFILE,'(/,A,1P,E12.4,A)')
     1            ' General buckling: smeared stiffeners, C11=',
     1              CSREDU(1,1),' (PERFECT PANEL)'
C END OCT 1998
                    PX2 = ABS(1. - CX(4,4,1)/CSREDU(4,4))
                    IF (ISTIF(1).EQ.0) PX2 = 0.
C BEG JUN 1999
                    IF (NPRT.GE.1) WRITE(IFILE,'(A)')
     1                                ' Entering ARBOCZ. Label=9150'
C END JUN 1999
C BEG NOV 2003
                    CALL ARBOCZ(9150,2,IMOD,IFILE,NPRT,LENMOD*AXIAL,
     1                   CIRC,R,
     1                   EIGVL9,ITUTOR,IREDUC,TEFF(1),TEFF(2),GTS,
     1                   CSREDU,0.,EIGVL9*FNX,EIGVL9*FNY1,EIGVL9*FNXY,
     1                   FNX0,FNY2,FNXY0,CSLP9X,MWAV9X,NWAV9X,
     1                   FMA9X,MLOC91,NLOC91,CSLP91,EIG9X,PX1,PX2,1,
     1                   ICUBIC(1),JCUBIC(1),IARBOC(1),ILOADS)
C END NOV 2003
C BEG JUN 1999
                    IF (NPRT.GE.1) WRITE(IFILE,'(A)')
     1                                ' Leaving ARBOCZ.  Label=9150'
C END JUN 1999
C BEG FEB 1996
                    IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
                    FNWAV9 = NWAV9X
C BEG OCT 1998
                    EIG9XP = EIG9X
                    IF (IMOD.EQ.0) THEN
                       CALL EIGMOD(CIRC,FNWAV9,B(1),
     1                   EIG9X,ITUTOR,IFILE,CX(4,4,1),CSREDU(4,4),
     1                   FSAFE2,EIGVL9*FNX,EIGVL9*FNY1,EIGVL9*FNXY,0,2)
                       IF (NPRT.GE.2)
     1                    WRITE(IFILE,'(A,1P,E12.4,/,A,1P,E12.4)')
     1' Buckling load factor BEFORE knockdown for smeared stringers=',
     1  EIG9XP,
     1' Buckling load factor AFTER  knockdown for smeared stringers=',
     1  EIG9X
                    ENDIF
C END OCT 1998
                 ENDIF
C    Next, for the imperfect shell:
                 IF (IMOD.EQ.0) THEN
                    CSLP9Y = 0.
                    MWAV9Y = 0.
                    NWAV9Y = 0.
                    FMA9Y  = 0.
                 ENDIF
C BEG JUN 2006
                 WGENRL = AXLRED*(W0GLOB - WG1) + WG1
C END JUN 2006
                 IF (FFSLOC.GE.0.95) THEN
C BEG OCT 1998
C23456789012345678901234567890123456789012345678901234567890123456789012
                    IF (NPRT.GE.2) WRITE(IFILE,'(/,A,1P,E12.4,A)')
     1            ' General buckling: smeared stiffeners, C11=',
     1              CS(1,1),' (IMPERFECT PANEL)'
C END OCT 1998
C BEG JUN 1999
                    IF (NPRT.GE.1) WRITE(IFILE,'(A)')
     1                                ' Entering ARBOCZ. Label=9151'
C END JUN 1999
C BEG NOV 2003
                    CALL ARBOCZ(9151,2,IMOD,IFILE,NPRT,LENMOD*AXIAL,
     1                 CIRC,R,
     1                 EIGVL9,ITUTOR,IREDUC,TEFF(1),TEFF(2),GTS,
C BEG JUN 2006
C    1                 CS,W0GLOB,EIGVL9*FNX,EIGVL9*FNY1,EIGVL9*FNXY,
     1                 CS,WGENRL,EIGVL9*FNX,EIGVL9*FNY1,EIGVL9*FNXY,
C END JUN 2006
     1                 FNX0,FNY2,FNXY0,CSLP9Y,MWAV9Y,NWAV9Y,
     1                 FMA9Y,MLOC91,NLOC91,CSLP91,EIG9Y,PX1,PX2,1,
     1                 ICUBIC(2),JCUBIC(2),IARBOC(2),ILOADS)
C END NOV 2003
C BEG JUN 1999
                    IF (NPRT.GE.1) WRITE(IFILE,'(A)')
     1                                ' Leaving ARBOCZ.  Label=9151'
C END JUN 1999
C BEG FEB 1996
                    IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
                    FNWAV9 = NWAV9Y
C BEG OCT 1998
                    EIG9YP = EIG9Y
                    IF (IMOD.EQ.0) THEN
                       CALL EIGMOD(CIRC,FNWAV9,B(1),
     1                   EIG9Y,ITUTOR,IFILE,CX(4,4,1),CS(4,4),
     1                   FSAFE2,EIGVL9*FNX,EIGVL9*FNY1,EIGVL9*FNXY,0,2)
                       IF (NPRT.GE.2)
     1                    WRITE(IFILE,'(A,1P,E12.4,/,A,1P,E12.4)')
     1' Buckling load factor BEFORE knockdown for smeared stringers=',
     1  EIG9YP,
     1' Buckling load factor AFTER  knockdown for smeared stringers=',
     1  EIG9Y
                    ENDIF
C END OCT 1998
                 ELSE
C BEG OCT 1998
C23456789012345678901234567890123456789012345678901234567890123456789012
                    IF (NPRT.GE.2) WRITE(IFILE,'(/,A,1P,E12.4,A)')
     1            ' General buckling: smeared stiffeners, C11=',
     1              CSREDU(1,1),' (IMPERFECT PANEL)'
C END OCT 1998
C BEG JUN 1999
                    IF (NPRT.GE.1) WRITE(IFILE,'(A)')
     1                                ' Entering ARBOCZ. Label=9151'
C END JUN 1999
C BEG NOV 2003
                    CALL ARBOCZ(9151,2,IMOD,IFILE,NPRT,LENMOD*AXIAL,
     1                   CIRC,R,
     1                 EIGVL9,ITUTOR,IREDUC,TEFF(1),TEFF(2),GTS,
C BEG JUN 2006
C    1                 CSREDU,W0GLOB,EIGVL9*FNX,EIGVL9*FNY1,EIGVL9*FNXY,
     1                 CSREDU,WGENRL,EIGVL9*FNX,EIGVL9*FNY1,EIGVL9*FNXY,
C END JUN 2006
     1                 FNX0,FNY2,FNXY0,CSLP9Y,MWAV9Y,NWAV9Y,
     1                 FMA9Y,MLOC91,NLOC91,CSLP91,EIG9Y,PX1,PX2,1,
     1                 ICUBIC(2),JCUBIC(2),IARBOC(2),ILOADS)
C END NOV 2003
C BEG JUN 1999
                    IF (NPRT.GE.1) WRITE(IFILE,'(A)')
     1                                ' Leaving ARBOCZ.  Label=9151'
C END JUN 1999
C BEG FEB 1996
                    IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
                    FNWAV9 = NWAV9Y
C BEG OCT 1998
                    EIG9YP = EIG9Y
                    IF (IMOD.EQ.0) THEN
                       CALL EIGMOD(CIRC,FNWAV9,B(1),
     1                   EIG9Y,ITUTOR,IFILE,CX(4,4,1),CSREDU(4,4),
     1                   FSAFE2,EIGVL9*FNX,EIGVL9*FNY1,EIGVL9*FNXY,0,2)
                       IF (NPRT.GE.2)
     1                    WRITE(IFILE,'(A,1P,E12.4,/,A,1P,E12.4)')
     1' Buckling load factor BEFORE knockdown for smeared stringers=',
     1  EIG9YP,
     1' Buckling load factor AFTER  knockdown for smeared stringers=',
     1  EIG9Y
                    ENDIF
C END OCT 1998
                 ENDIF
C    Knockdown factor from Arbocz' implementation of Koiter Special Theory:
C BEG OCT 1998
                 IF (IMOD.EQ.0) THEN
                    FKNKAL(1) = EIG9YP/EIG9XP
                    IF (FKNKAL(1).GT.1.0) FKNKAL(1) = 1.0
                 ENDIF
C END OCT 1998
                 FKNKOI(1) = EIG9Y/EIG9X
                 IF (FKNKOI(1).GT.1.0) FKNKOI(1) = 1.0
C BEG OCT 1998
                 IF (IMOD.EQ.0) THEN
                    FKNMLT = 1.0
                    IF (FKNKAL(1).GT.FKNKOI(1))
     1                 FKNMLT = FKNKAL(1)/FKNKOI(1)
                 ENDIF
C END OCT 1998
                 MA9X = FMA9X
                 CSLPPX = CSLP9X
                 IF (ABS(CSLP9X).GT.0.0) CSLPPX = 1./CSLP9X
                 CSLPPY = CSLP9Y
                 IF (ABS(CSLP9Y).GT.0.0) CSLPPY = 1./CSLP9Y
                 IF (NPRT.GE.2) WRITE(IFILE,9152)
     1                              EIG9X,MWAV9X,NWAV9X,CSLPPX,
     1                              EIG9Y,MWAV9Y,NWAV9Y,CSLPPY,
C BEG NOV 2003 
     1                              FKNKOI(1)
C23456789012345678901234567890123456789012345678901234567890123456789012
 9152            FORMAT(/' GENERAL BUCKLING FROM 1992 ARBOCZ EQ.(3.61)'/
     1    ' RATIO (LOAD FACTOR FROM ARBOCZ)/(LOAD FACTOR FROM PANDA2):'/
     1      '  Perfect shell general buckling load(m,n,slope)=',
     1                             1PE12.4,'(',I3,',',I3,',',1PE9.2,')'/
     1      '  Imperf. shell general buckling load(m,n,slope)=',
     1                             1PE12.4,'(',I3,',',I3,',',1PE9.2,')'/
     1'  Knockdown factor from Koiter Special Theory (K.S.T.)=',1PE12.4)
C
                 IF (IMOD.EQ.0.AND.NPRT.GE.2)
     1                                  WRITE(IFILE,9153) FKNKAL(1)
 9153            FORMAT(
     1'  Knockdown from K.S.T. without the use of EIGMOD     =',1PE12.4)
C END NOV 2003
C
               ENDIF
C
C  IAMPOV = switch for whether or not the ovalization component, WG1,
C           of the initial global imperfection will be amplified by
C           the factor WYYAMP (IAMPOV=1 means yes; IAMPOV = 0 means no).
C  The logic here is that if the circumferential wavelength of the
C  critical general buckling mode, WG2, is long enough (specifically,
C  longer than that corresponding to 100000 full circumferential waves
C  over a complete 360 degree cylindrical shell), then both the modal
C  component, WG2, and the ovalization component, WG1, of the total
C  general imperfection will be amplified by the still-to-be calculated
C  factor, WYYAMP.  Otherwise, only the modal component, WG2, will be
C  so amplified.
C
               DENOM = EILC91 - 1.
               KOUNT9 = 0
               EILOC9 = 0.
 1200          CONTINUE
C
C  Begin iteration loop for general buckling of the imperfect panel.
C  The general imperfection is amplified by the factor WYYAMP, which
C  increases from iteration to iteration in this loop.
               KOUNT9 = KOUNT9 + 1
C BEG DEC 2005
C23456789012345678901234567890123456789012345678901234567890123456789012
               IF (NPRT.GE.0) THEN
                  IF (KOUNT9.EQ.1) WRITE(IFILE,'(/,/,A,/,A,/,A,/,A)')
     1' ************ ITERATION LOOP FOR IMPERFECT PANEL ***********',
     1' Begin iteration loop for general buckling of the imperfect',
     1' panel. The general imperfection is amplified by the factor',
     1' WYYAMP, which increases from iteration to iteration.'
                  WRITE(IFILE,'(/,A,I2,A)')
     1' *************** ITERATION NUMBER ',KOUNT9,' *****************'
               ENDIF
C END DEC 2005
               IF (DENOM.LT.0.33333) DENOM = .33333
               IF (IMOD.EQ.1) THEN
C  For the analysis of the perturbed design (IMOD=1), the new
C  amplification factor for the imperfection, WYYAMP, is given by:
                  WYYAMP = (WYYAM2(3)-1.)*EIG91X/EILC91 + 1.0
C  in which WYYAM2(3) is the amplification factor for the unperturbed
C  design (IMOD=0) and FACIM2 and FACM2Z are calculated above.
                  IF (WYYAMP.GT.6.0) WYYAMP = 6.0
                  IF (WYYAMP.LT.1.0) WYYAMP = 1.0
                  IF (WYYAMP.EQ.1.0.AND.WYYAM2(3).GT.3.99)
     1                                             WYYAMP=WYYAM2(3)
                  IF (NPRT.GE.2) WRITE(IFILE,'(A,1PE12.4,A,1PE12.4)')
     1             ' UNPERTURBED DESIGN WYYAM2(3)=',WYYAM2(3),
     1             ', PERTURBED DESIGN WYYAMP=',WYYAMP
                  WYYAM3(3) = WYYAMP
               ENDIF
               WYYAMS = WYYAMP
               IF (IMOD.EQ.0) IAMPLD(1) = 0
               IF (IMOD.EQ.0) THEN
                  ICONV  = 0
                  IRATTR = 1
C BEG APR 1998
C                 IF (FNX.LT.0.0.AND.NLOC91.GE.2) THEN
                  IF (FNX.LT.0.0.AND.(NLOC91.GE.2.OR.IFLAT.EQ.0)) THEN
C END APR 1998
                     IRATTR = 0
C BEG JULY 2006
C                    IF (RATRES.GE.RATHI) THEN
                     IF (RATRES.GE.RATHI.AND.INOT4(IRMOD).EQ.0) THEN
C END JULY 2006
                        IRATTR = 1
C
C  If the applied loading is predominately axial compression (Nx),
C  then set the switch IAMPLD to unity and the local imperfection
C  amplification factor WYYAMP to 4.0 and transfer to 1203. If
C  IAMPLD is unity there is no iteration for local buckling of
C  the imperfect panel.
                        IAMPLD(1) = 1
                        WYYAMP = 4.0
                        GO TO 1203
                     ENDIF
                  ENDIF
C  Calculate WYYAMP for the current, unperturbed (IMOD=0) design...
C  (The following formula for WYYAMP is for hyperbolic growth).
                  WYYAMP = 1. + 1./DENOM
                  AMPITR(KOUNT9) = WYYAMP
                  IF (KOUNT9.EQ.4) THEN
C  Get new value of WYYAMP by quadratic extrapolation. The maximum
C  value of WYYAMP permitted is 4.0.
                     Y1WYY = AMPITR(KOUNT9-2) - AMPITR(KOUNT9-1)
                     Y3WYY = AMPITR(KOUNT9)   - AMPITR(KOUNT9-1)
                     Y1Y3  = Y1WYY + Y3WYY
                     IF (Y1Y3.GE.0.) THEN
                        WYYAMP = 4.0
                     ELSE
                        WYYAMP = -0.125*(Y1WYY - Y3WYY)**2/Y1Y3
     1                                        + AMPITR(KOUNT9-1)
                        IF (WYYAMP.GT.4.0) WYYAMP = 4.0
                     ENDIF
                  ENDIF
               ENDIF
C
 1203          CONTINUE
               WYYDIF = 1.0
               IF (IMOD.EQ.0.AND.WYYAMP.GT.0.)
     1            WYYDIF = ABS(WYYAMS/WYYAMP - 1.)
               IF (WYYDIF.GT.0.01.AND.KOUNT9.LE.4) THEN
C
                  IF (NPRT.GE.1) WRITE(IFILE,'(/,A)')
     1'*** BEGIN BUCPAN (IMPERF. SENSITIVITY, IMPERFECT PANEL) ****'
C  NEXT, GET, FROM A PANDA-TYPE (CLOSED-FORM) ANALYSIS, THE GENERAL
C  BUCKLING LOAD FACTOR, EILOC9,  AND MODE SHAPE, (MLOC9,NLOC9,CSLOP9),
C  FOR THE IMPERFECT PANEL (WITH REDUCED STIFFNESS SKIN IF THE FACTOR
C  FFSLOC IS LESS THAN UNITY, WHICH IT IS IF IEFFSK = 1, see above).
C  MLOC9  = number of axial halfwaves in the general buckling mode
C           of the imperfect panel
C  NLOC9  = number of circ. halfwaves in the general buckling mode
C           of the imperfect panel
C  CSLOP9 = slope  of the nodal lines in the general buckling mode
C           of the imperfect panel
C  WYYAMP = current value of general imperfection amplification factor
C
 9160             CONTINUE
                  ILABEL=9160
                  IF (NPRT.GE.1) WRITE(IFILE,*)
     1                           ' LABEL NO. IN STRIMP=',ILABEL
C BEG NOV 2003
                  CALL BUCPAN(IFILE,IMOD,JJJ,ICONST,CONSTR,WORDB,ISTIF,
     1              IREDUC,KOITER,LENMOD,CONMAX,FSGEN,FSPAN,FFSLOC,
     1              EIGGG9,3,IPOINC,INUMTT,FKNOCK,IGENRL,CSLOP9,EILOC9,
     1              MLOC9,ISKIN,MSHER9,NSHER9,MNOSH9,NNOSH9,ITUTOR,
     1              IWIDE,IQUICK,FNX,FNY1,FNXY,FNX0,FNY2,FNXY0,FNXP0,
     1              FNY3,FNXYP0,FNXPL0,FNY4,FNXYPL,NLOC9,ITIP,IABP,
     1              1,EPSLOD(4),RWBEIG,RWBTOT,ICASE,FSBSTR,1,TLOC9,0,2,
     1              0,9160,ICD7D,ICD8D,ICD9,0,ILOADS,MORCON,NCASES,25)
C END NOV 2003
                  IF (IRESTY.EQ.1) GO TO 2222
C
                  IF (EILOC9.EQ.1.) EILOC9 = 0.99999
                  FACIM1 = 1./(EILOC9 - 1.)
                  IF (FACIM1.LE.0.0.OR.FACIM1.GT.100.) FACIM1 = 100.
C  In order to compute a new value of WYYAMP, a modified buckling load
C  factor, EILOCC, is used, as follows:
C BEG MAY 2007
                  FMULT2 = 1.0
                  IF (ICONSV.EQ.-1) FMULT2 = 10.0
                  EILOCC =(FACIM1*EILOC9 +FACIM2*FMULT2*EILC91)/
     1                                            (FACIM1+FMULT2*FACIM2)
C END MAY 2007
C BEG MAR 2005
                  EILOCC = EILOCC*RNGKNZ
C END MAR 2005
                  DENOM = EILOCC - 1.
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG MAR 2007
C                 IF (NPRT.GE.2) WRITE(IFILE,'(A,I2,/,
                  IF (NPRT.GE.0) WRITE(IFILE,'(A,I2,/,
     1            A,1PE12.4,A,I3,A,1PE10.3,A,I3,A,1PE10.3,A,1PE10.3,A)')
     1           ' GENERAL BUCKLING EIGENV. OF IMPERFECT PANEL, IMOD=',
     1             IMOD,
     1           '   EILOC9(m,dm,n,dn,s)=',EILOC9,'(',MLOC9,',',DMWAVE,
     1           ',',  NLOC9,',',DNWAVE,',',CSLOP9,')'
C                 IF (NPRT.GE.2) WRITE(IFILE,'(A,1PE12.4)')
                  IF (NPRT.GE.0) WRITE(IFILE,'(A,1PE12.4)')
     1           ' IMPERFECTION AMPLITUDE FACTOR, WYYAMP=',WYYAMP
C END MAR 2007
C BEG NOV 2003
C BEG MAR 2005
C BEG MAR 2007
C                 IF (NPRT.GE.2) WRITE(IFILE,
                  IF (NPRT.GE.0) WRITE(IFILE,
C END MAR 2007
C BEG MAY 2007
     1 '(A,A,A,1P,E12.4,/,A,/,A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4)')
     1 ' EIGEFF =RNGKNZ*(FACIM1*EILOC9 +FACIM2*FMULT2*EILC91)/',
     1 '(FACIM1+FMULT2*FACIM2)',
C    1 ' EIGEFF =RNGKNZ*(FACIM1*EILOC9 +FACIM2*EILC91)/(FACIM1+FACIM2)',
C END MAY 2007
     1             '=',EILOCC,
     1             ' in which FACIM1, FACIM2, and EILC91 are given by:',
     1             ' FACIM1=1./(EILOC9 - 1.) =',FACIM1,
     1             ' FACIM2=1./(EILC91 - 1.) =',FACIM2,
     1             ' EILC91                  =',EILC91
C BEG MAY 2007
                  IF (NPRT.GE.0) WRITE(IFILE,'(A,1P,E12.4)')
     1             ' FMULT2                  =',FMULT2
C END MAY 2007
C BEG MAR 2007
C                 IF (NPRT.GE.2) WRITE(IFILE,'(A,1P,E12.4)')
                  IF (NPRT.GE.0) WRITE(IFILE,'(A,1P,E12.4)')
C END MAR 2007
     1             ' RNGKNZ                  =',RNGKNZ
C END MAR 2005
C END NOV 2003
                  IF (IMOD.EQ.0.AND.WYYAMP.GT.0.0.AND.WYYAMP.LT.3.99
     1                  .AND.KOUNT9.LE.3.AND.IAMPLD(1).EQ.0
     1                  .AND.ICONV.EQ.0) GO TO 1200
               ENDIF
C              End of (WYYDIF.GT.0.01.AND.KOUNT9.LE.4) condition.
C
               IF (IRATTR.EQ.0.AND.IMOD.EQ.0.AND.WYYAMP.LT.3.99
     1               .AND.RATRES.GT.RATLO.AND.RATRES.LT.RATHI) THEN
                  ACOEF = (4.0 - WYYAMP)/(RATHI - RATLO)
                  BCOEF = 4.0 - ACOEF*RATHI
                  WYYAMP = ACOEF*RATRES + BCOEF
                  IF (WYYAMP.GT.4.0) WYYAMP = 4.0
                  IF (WYYAMP.LT.1.0) WYYAMP = 1.0
                  IRATTR = 1
                  ICONV = 1
C BEG DEC 2005
                  IF (NPRT.GE.2) WRITE(IFILE,'(/,A,I2,A)')
     1' ******** ONE LAST TIME: ITERATION NUMBER',KOUNT9+1,' **********'
C23456789012345678901234567890123456789012345678901234567890123456789012
C END DEC 2005
                  GO TO 1203
               ENDIF
C  End of the iteration loop for the general buckling load factor,
C  EILOC9, of the imperfect panel.
C
C  The knockdown factor for general instability, FKNOCK(9), is taken
C  to be the ratio of the buckling load factors for the imperfect and
C  perfect panels, EILOC9 and EILC91, respectively.
C
               FKNOCK(9) = EILOC9/EILC91
               IF (FKNOCK(9).GT.1.0.OR.FKNOCK(9).LE.0.) FKNOCK(9) =1.0
               IF (IMOD.EQ.0) THEN
                  WYYAM2(3) = WYYAMP
                  IF (ITYPE.EQ.1.AND.JJJ.GE.1)
     1                  WYYAMZ(JJJ,ILOADS,ICASE)=WYYAMP
               ENDIF
C
C  DNWAV9 and DMWAV9 are the fractional circumferential and axial
C  halfwaves, respectively, in the general buckling mode of the
C  imperfect panel.  By "fractional" is meant a non-integral number
C  of halfwaves.  For example, BUCPAN may compute that the critical
C  number of circumferential waves is 2.4 rather than 2 or 3. DNWAV9
C  would then be 0.4. The fractional part is determined
C  in BUCPAN by quadratic interpolation of buckling load factors
C  with use of the buckling load factors for three adjacent values,
C  n-1, n, n+1 or m-1, m, m+1 (n = 1, 2, and 3 circumferential
C  waves in the example just presented). Fractional halfwaves
C  have been introduced in this part of PANDA2 in order to smooth
C  the stress constraints for more reliable optimization.
C
C  The values of the stress constraints are strongly influenced by
C  the axial and hoop wavelengths of the buckling mode because the
C  bending stresses of the loaded, imperfect panel are proportional
C  to curvature changes, which in turn are proportional to the squares
C  of the numbers of axial and hoop halfwaves in the buckling mode.
C  Optimized designs are often characterized by buckling load factors
C  that are very close for two adjacent wavenumbers (n and n+1, for
C  example). If there are few waves in the critical buckling mode
C  (n=2 for example), an increment of unity in the wavenumber may
C  double the maximum stress in the panel. This property can lead
C  to "jumpy" values for stress constraints from design iteration to
C  iteration, with consequent lack of convergence to an optimum
C  design.  The use of fractional wavenumbers in the formulas for
C  curvature change of the loaded imperfect panel helps to overcome
C  this problem, especially when the number of halfwaves is small.
C
               DNWAV9 = DNWAVE
               DMWAV9 = DMWAVE
               DNWAVU = DNWAV9
               DMWAVU = DMWAV9
               NLOCU  = NLOC9
               MLOCU  = MLOC9
               CSLOPU = CSLOP9
C BEG MAR 2005
               IPERFT = 0
C BEG MAR 2007
               IF (IMOD.EQ.0) THEN
                 FCOM91 = FLOAT(NLOC91) + DNWV91
                 FCOM9  = FLOAT(NLOC9)  + DNWAV9
               ENDIF
C END MAR 2007
C              IF (NLOC91.GT.NLOC9) THEN
C BEG MAY 2007
C              IF (FCOM91.GT.FCOM9) THEN
               IF (FCOM91.GT.FCOM9.OR.ICONSV.EQ.-1) THEN
C END MAY 2007
                  IPERFT = 1
                  DNWAVU = DNWV91
                  DMWAVU = DMWV91
                  NLOCU  = NLOC91
                  MLOCU  = MLOC91
                  CSLOPU = CSLP91
                  ICD9   = ICD91
               ELSE
                  IF (IXIMPF(ILOADS).EQ.1.AND.MLOC91.GE.1) THEN
                    IF ((MLOC9/MLOC91).GE.2) THEN
C BEG AUG 2005
                       AXLINP = AXLWAV(ILOADS)
                       AXLTST = AXIAL/FLOAT(MLOC9)
C END AUG 2005
                       AXLRAT = ABS(AXLTST/AXLINP)
                       IF (AXLRAT.LE.0.5) THEN
                          IPERFT = 2
                          DNWAVU = DNWV91
                          DMWAVU = DMWV91
                          NLOCU  = NLOC91
                          MLOCU  = MLOC91
                          CSLOPU = CSLP91
                          ICD9   = ICD91
                       ENDIF
                    ENDIF
                  ENDIF
               ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG AUG 2005
               IF (NPRT.GE.0.AND.IPERFT.EQ.2) THEN
                 WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' *** NOTE: Although the number of circumfer. halfwaves in the',
     1'      general buckling mode of the PERFECT panel is less than',
     1'      or equal to that for the IMPERFECT panel, since the user',
     1'      has elected to allow PANDA2 to change the amplitude of',
     1'      the general buckling modal imperfection and since the',
     1'      axial wavelength of the buckling mode of the IMPERFECT',
     1'      shell is less than half that of the PERFECT shell, we use',
     1'      the PERFECT panel mode for computation of deformations',
     1'      Wxx, Wyy, Wxy in SUBROUTINE CURIMP.'
C END AUG 2005
C BEG MAR 2007
                 WRITE(IFILE,'(A,/,A)')
     1        ' ICD91, ICD9  = indicators for coordinate direction',
     1        '                in which panel is longest.'
C END MAR 2007
                 WRITE(IFILE,'(A,/,A,I3,A,1P,E10.2,A,I3,A,1P,E10.2,A,
     1                          1P,E10.2,A,I2,A)')
     1' General buckling mode for the PERFECT panel (PANDA theory):',
     1        ' (m=',MLOC91,', dm=',DMWV91,', n=',NLOC91,', dn=',
     1           DNWV91,', slope=',CSLP91,', ICD91=',ICD91,')'
                 WRITE(IFILE,'(A,/,A,I3,A,1P,E10.2,A,I3,A,1P,E10.2,A,
     1                          1P,E10.2,A,I2,A)')
     1' General buckling mode for the IMPERFECT panel (PANDA theory):',
     1        ' (m=',MLOC9,', dm=',DMWAV9,', n=',NLOC9,', dn=',
     1           DNWAV9,', slope=',CSLOP9,' ICD9=',ICD9,')'
               ENDIF
C
C23456789012345678901234567890123456789012345678901234567890123456789012
               IF (NPRT.GE.0.AND.IPERFT.EQ.1) THEN
C BEG MAY 2007
                 WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A)')
     1' *** NOTE: The number of circumfer. halfwaves in the general',
     1'           buckling mode of the PERFECT panel is greater',
     1'           than that for the IMPERFECT panel or ICONSV=-1  .',
     1'           Hence,the PERFECT panel mode is used for computation',
     1'           of deformations Wxx, Wyy, Wxy in SUBROUTINE CURIMP.'
C END MAY 2007
C BEG MAR 2007
                 WRITE(IFILE,'(A,/,A)')
     1        ' ICD91, ICD9  = indicators for coordinate direction',
     1        '                in which panel is longest.'
C END MAR 2007
                 WRITE(IFILE,'(A,/,A,I3,A,1P,E10.2,A,I3,A,1P,E10.2,A,
     1                          1P,E10.2,A,I2,A)')
     1' General buckling mode for the PERFECT panel (PANDA theory):',
     1        ' (m=',MLOC91,', dm=',DMWV91,', n=',NLOC91,', dn=',
     1           DNWV91,', slope=',CSLP91,', ICD91=',ICD91,')'
                 WRITE(IFILE,'(A,/,A,I3,A,1P,E10.2,A,I3,A,1P,E10.2,A,
     1                          1P,E10.2,A,I2,A)')
     1' General buckling mode for the IMPERFECT panel (PANDA theory):',
     1        ' (m=',MLOC9,', dm=',DMWAV9,', n=',NLOC9,', dn=',
     1           DNWAV9,', slope=',CSLOP9,' ICD9=',ICD9,')'
               ENDIF
C
C23456789012345678901234567890123456789012345678901234567890123456789012
               IF (NPRT.GE.0.AND.IPERFT.EQ.0) THEN
                 WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A)')
     1' *** NOTE: The number of circ. halfwaves in the general',
     1'           buckling mode of the PERFECT panel is less than or',
     1'           equal to that for the IMPERFECT panel. Therefore,',
     1'           the IMPERFECT panel mode is used for computation',
     1'           of deformations Wxx, Wyy, Wxy in SUBROUTINE CURIMP.'
C BEG MAR 2007
                 WRITE(IFILE,'(A,/,A)')
     1        ' ICD91, ICD9  = indicators for coordinate direction',
     1        '                in which panel is longest.'
C END MAR 2007
                 WRITE(IFILE,'(A,/,A,I3,A,1P,E10.2,A,I3,A,1P,E10.2,A,
     1                          1P,E10.2,A,I2,A)')
     1' General buckling mode for the PERFECT panel (PANDA theory):',
     1        ' (m=',MLOC91,', dm=',DMWV91,', n=',NLOC91,', dn=',
     1           DNWV91,', slope=',CSLP91,', ICD91=',ICD91,')'
                 WRITE(IFILE,'(A,/,A,I3,A,1P,E10.2,A,I3,A,1P,E10.2,A,
     1                          1P,E10.2,A,I2,A)')
     1' General buckling mode for the IMPERFECT panel (PANDA theory):',
     1        ' (m=',MLOC9,', dm=',DMWAV9,', n=',NLOC9,', dn=',
     1           DNWAV9,', slope=',CSLOP9,' ICD9=',ICD9,')'
               ENDIF
C END MAR 2005
               DNWV9P = DNWAVU
               DMWV9P = DMWAVU
               NLOC9P = NLOCU
               MLOC9P = MLOCU
               CSLP9P = CSLOPU
               FNLOC9 = FLOAT(NLOCU) +DNWAVU
               NLOCAR  = NLOCU
               DNWAVA = DNWAVU
               FMLOC9 = FLOAT(MLOCU) +DMWAVU
               MLOCAR  = MLOCU
               DMWAVA = DMWAVU
               IF (IMOD.EQ.0.AND.ITYPE.EQ.1.AND.JJJ.GE.1) THEN
C  NLOCX = number of circumferential halfwaves (integer) in the general
C          buckling mode of the perfect panel.
C  MLOCX = number of axial halfwaves (integer) in the general buckling
C          mode of the imperfect panel.
                  NLOCX(JJJ,ILOADS,ICASE)=NLOC91
                  MLOCX(JJJ,ILOADS,ICASE)=MLOCU
               ENDIF
               IF (IMOD.EQ.0.AND.ITYPE.EQ.1.AND.JJJ.GE.5) THEN
                JJJ1 = JJJ-1
                JJJ2 = JJJ-2
                JJJ3 = JJJ-3
                JJJ4 = JJJ-4
C  Next, test whether the number of circumferential halfwaves in the
C  general buckling mode oscillates from 2 to 3 from design iteration
C  to iteration.  If it does, set the switch INDDN to unity, which
C  permits negative fractional wavenumber dn if n = 3 circ. halfwaves.
C  Usually negative dn is not permitted if n = 3 because stresses may
C  thereby be underestimated (compared to values obtained from STAGS).
C  However, as described above, oscillation of n from design iteration
C  to iteration may prevent convergence to an optimum design. Introduc-
C  tion of this coding represents a compromise: the maximum stresses
C  obtained by PANDA2 may occasionally be underestimated when they are
C  computed for a mode with 2.6 rather than 3.0 circumferential half-
C  waves, for example, but at least convergence to an optimum design
C  will not be prevented by wildly oscillating stress and local
C  buckling constraints.
C
                IF (INDDN(ILOADS,ICASE).EQ.0
     1            .AND.NLOCX(JJJ, ILOADS,ICASE).LE.3
     1            .AND.NLOCX(JJJ1,ILOADS,ICASE).LE.3
     1            .AND.NLOCX(JJJ2,ILOADS,ICASE).LE.3
     1            .AND.NLOCX(JJJ3,ILOADS,ICASE).LE.3
     1            .AND.NLOCX(JJJ, ILOADS,ICASE).NE.0
     1            .AND.NLOCX(JJJ1,ILOADS,ICASE).NE.0) THEN
                 IF (NLOCX(JJJ,ILOADS,ICASE).NE.NLOCX(JJJ1,ILOADS,ICASE)
     1           .OR.NLOCX(JJJ,ILOADS,ICASE).NE.NLOCX(JJJ2,ILOADS,ICASE)
     1           .OR.NLOCX(JJJ,ILOADS,ICASE).NE.NLOCX(JJJ3,ILOADS,ICASE)
     1                                                            ) THEN
                    INDDN(ILOADS,ICASE) = 1
C23456789012345678901234567890123456789012345678901234567890123456789012
                    WRITE(IFILE,1321) (NLOCX(I,ILOADS,ICASE),I=JJJ4,JJJ)
 1321                FORMAT(/' *** WARNING *** WARNING *** WARNING ***'/
     1             ' CONVERGENCE TO AN OPTIMUM DESIGN IS DIFFICULT BE-'/
     1             ' CAUSE SOME MARGINS OSCILLATE FROM ITERATION TO'/
     1             ' ITERATION BECAUSE THE NUMBER OF CIRCUMFERENTIAL'/
     1             ' WAVES IN THE GENERAL BUCKLING MODE OSCILLATES'/
     1             ' FROM n = 2 TO n = 3 DURING DESIGN ITERATIONS:'/
     1             ' n for the last 5 iterations =',5I6/
     1             ' A SWITCH CALLED "INDDN" IS BEING TURNED ON THAT'/
     1             ' PERMITS NEGATIVE dn IF n = 3.'/
     1             ' ** END WARNING *** END WARNING *** END WARNING **')
                 ENDIF
                ENDIF
C
C  Test for oscillation of the number of axial halfwaves in the general
C  buckling mode from design iteration to iteration.  Print warning if
C  there is such oscillation.
                IF (MLOCX(JJJ, ILOADS,ICASE).EQ.1.OR.
     1              MLOCX(JJJ1,ILOADS,ICASE).EQ.1.OR.
     1              MLOCX(JJJ2,ILOADS,ICASE).EQ.1.OR.
     1              MLOCX(JJJ3,ILOADS,ICASE).EQ.1.OR.
     1              MLOCX(JJJ4,ILOADS,ICASE).EQ.1) THEN
                 IF (MLOCX(JJJ, ILOADS,ICASE).GT.1.OR.
     1               MLOCX(JJJ1,ILOADS,ICASE).GT.1.OR.
     1               MLOCX(JJJ2,ILOADS,ICASE).GT.1.OR.
     1               MLOCX(JJJ3,ILOADS,ICASE).GT.1.OR.
     1               MLOCX(JJJ4,ILOADS,ICASE).GT.1) THEN
C23456789012345678901234567890123456789012345678901234567890123456789012
                    WRITE(IFILE,1331) (MLOCX(I,ILOADS,ICASE),I=JJJ4,JJJ)
 1331                FORMAT(/' *** WARNING *** WARNING *** WARNING ***'/
     1             ' CONVERGENCE TO AN OPTIMUM DESIGN IS DIFFICULT BE-'/
     1             ' CAUSE SOME MARGINS OSCILLATE FROM ITERATION TO'/
     1             ' ITERATION BECAUSE THE NUMBER OF AXIAL HALFWAVES'/
     1             ' IN THE GENERAL BUCKLING MODE OSCILLATES FROM'/
     1             ' m = 1 TO m > 1 DURING DESIGN ITERATIONS:'/
     1             ' m for the last 5 iterations =',5I6/
     1             ' IF YOU HAVE NOT DONE SO ALREADY,'/
     1             ' YOU SHOULD ELECT TO SUPPRESS THE HIGH-AXIAL-WAVE'/
     1             ' GENERAL INSTABILITY MODE IN "MAINSETUP" BEFORE'/
     1             ' YOUR NEXT "PANDAOPT" RUN. (SEE ENTRIES 492 AND'/
     1             ' 493 IN THE PROMPT.DAT FILE FOR A DISCUSSION.)'/
     1             ' YOU MAY ALSO WANT TO INCREASE THE MAXIMUM NUMBER'/
     1             ' OF DESIGN ITERATIONS PER "PANDAOPT".  IT MAY BE A'/
     1             ' GOOD IDEA ALSO TO FIX THE RING SPACING.'/
     1             ' ** END WARNING *** END WARNING *** END WARNING **')
                 ENDIF
                ENDIF
C  Test for oscillation of the general buckling imperfection amplification
C  factor, WYYAMP, from design iteration to iteration.  Print a warning
c  if there is such oscillation.
                IF (WYYAMZ(JJJ,ILOADS,ICASE).GE.3.99
     1               .OR.WYYAMZ(JJJ1,ILOADS,ICASE).GE.3.99
     1               .OR.WYYAMZ(JJJ2,ILOADS,ICASE).GE.3.99
     1               .OR.WYYAMZ(JJJ3,ILOADS,ICASE).GE.3.99) THEN
                   IF (    (WYYAMZ(JJJ, ILOADS,ICASE).LE.3.0
     1                  .OR.WYYAMZ(JJJ1,ILOADS,ICASE).LE.3.0
     1                  .OR.WYYAMZ(JJJ2,ILOADS,ICASE).LE.3.0
     1                  .OR.WYYAMZ(JJJ3,ILOADS,ICASE).LE.3.0)
     1                 .AND.WYYAMZ(JJJ1,ILOADS,ICASE).GT.0.9999) THEN
C23456789012345678901234567890123456789012345678901234567890123456789012
                      WRITE(IFILE,1325) 
     1                   (WYYAMZ(I,ILOADS,ICASE),I=JJJ4,JJJ)
                      WRITE(IFILE,1323)
                   ENDIF
 1325           FORMAT(/' *** WARNING *** WARNING *** WARNING ***'/
     1        ' CONVERGENCE TO AN OPTIMUM DESIGN IS DIFFICULT BE-'/
     1        ' CAUSE MARGINS MAY OSCILLATE FROM ITERATION TO'/
     1        ' ITERATION BECAUSE THE IMPERFECTION AMPLIFICATION'/
     1        ' FACTOR "WYYAMP" CORRESPONDING TO GENERAL BUCKLING'/
     1        ' OSCILLATES DURING DESIGN ITERATIONS AS FOLLOWS:'/
     1        ' WYYAMP=',1P5E12.4)
 1323           FORMAT(
     1        ' SUGGESTIONS (Do one or more of the following):'/
     1        ' 1. INCREASE THE MAX. NUMBER OF DESIGN ITERATIONS.'/
     1        ' 2. IF IQUICK=1 AND THERE ARE STRINGERS RUN THE'/
     1        '    CASE WITH IQUICK = 0'/
     1        ' 3. FIX THE RING SPACING (USE "DECIDE") AND DO'/
     1        '    MULTIPLE OPTIMIZATIONS FOR SEVERAL DIFFERENT'/
     1        '    VALUES OF RING SPACING, EACH VALUE FIXED.'/
     1        ' 4. SET THE FACTOR OF SAFETY FOR GENERAL BUCKLING'/
     1        '    TO 1.5 OR GREATER AND RE-OPTIMIZE. IF YOU THEN'/
     1        '    COME TO A BETTER OPTIMUM, RESET THE FACTOR OF'/
     1        '    SAFETY TO WHATEVER YOU HAD BEFORE AND RE-OPT.'/ 
     1        ' ** END WARNING *** END WARNING *** END WARNING **')
                ENDIF
               ENDIF
               IF (NLOC91.EQ.3.AND.FNLOC9.LT.3.0
     1                        .AND.INDDN(ILOADS,ICASE).EQ.0) THEN
C  Use an integral number of circumferential halfwaves if the switch
C  INDDN is turned off and the fractional wavenumber dn is negative.
C  This logic applies only if the number of circumferential halfwaves,
C  NLOC91, in the general buckling mode of the perfect shell is 3.
                  FNLOC9 = NLOC91
                  NLOCAR  = NLOC91
                  DNWAVA = 0.
               ENDIF
               IF (MLOC91.EQ.2.AND.FMLOC9.LT.2.0) THEN
C  Use an integral number of axial halfwaves if the fractional wavenumber
C  dm is negative. This logic applies only if the number of axial
C  halfwaves, MLOC91, in the general buckling mode of the perfect shell
C  is 2.
                  FMLOC9 = MLOC91
                  MLOCAR  = MLOC91
                  DMWAVA = 0.
               ENDIF
C  Next, determine whether the user-supplied initial general buckling
C  modal imperfection component is too large and therefore should be
C  automatically reduced by the factor AMPMD9. It is assumed in PANDA2
C  that no shell will have a geometric initial imperfection that gives
C  rise to an out-of-plane rotation of the shell wall of more than 0.1
C  radian. The assumption is that such large initial imperfections
C  would be easily detected and shells with them would be refabricated.
C  The amplitude factor, AMPMD9, is therefore set here so that the
C  resulting initial general buckling modal imperfection will cause
C  out-of-plane shell rotations of 0.1 radian or less.
               FNPROD = ABS(FNLOC9)*PI/CIRC
               FMPROD = ABS(FMLOC9)*PI/(AXIAL*LENMOD)
C BEG NOV 2003
               WALRT9 = WG2*MAX(FMPROD,FNPROD)
C END NOV 2003
C BEG AUG 2005
               AMPTST = 1.0
               IF (ABS(WG2).GT.0.0.AND.FNPROD.GT.0.0
     1                               .AND.FMPROD.GT.0.0)
     1            AMPTST = ABS(0.1/WG2)*MIN(1./FMPROD,1./FNPROD)
               IF (IMOD.EQ.0.AND.NPRT.GE.0)
     1          WRITE(IFILE,'(A,1P,E12.4)')
     1        ' (0.1 radian)/(shell wall rotation), AMPTST =',AMPTST
               AMPMD9 = AMPTST
               IF (IXIMPF(ILOADS).NE.0.AND.IMOD.EQ.0
     1                                .AND.NPRT.GE.0.AND.AMPTST.LT.1.0)
     1    WRITE(IFILE,'(/,A,/,A,I3,A,/,A,/,A,/,A,1PE12.4,/,A,/,A,/)')
     1     ' ******* WARNING ******* WARNING ******* WARNING *********',
     1  ' THERE ARE MANY CIRCUMFERENTIAL HALFWAVES (NLOC91=',NLOC91,')',
     1  ' IN THE GENERAL BUCKLING MODE.  THE MAXIMUM IMPERFECTION',
     1  ' WALL ROTATION OF 0.1 RADIAN HAS BEEN EXCEEDED. THE PRESENT',
     1  ' GENERAL IMPERFECTION AMPLITUDE, Wimp(general)=',
     1    ABS(WG2),
     1  ' WILL BE REDUCED BY THE FACTOR, AMPTST, LISTED JUST ABOVE',
     1  ' ************* END WARNING *********** END WARNING **********'
C
               IF (IXIMPF(ILOADS).EQ.0.AND.IMOD.EQ.0
     1                                .AND.NPRT.GE.0.AND.AMPTST.LT.1.0)
     1   WRITE(IFILE,'(/,A,/,A,I3,A,/,A,/,A,/,A,1PE12.4,/,A,/,A,/,A,/)')
     1     ' ******* WARNING ******* WARNING ******* WARNING *********',
     1  ' THERE ARE MANY CIRCUMFERENTIAL HALFWAVES (NLOC91=',NLOC91,')',
     1  ' IN THE GENERAL BUCKLING MODE OR THE MAXIMUM IMPERFECTION',
     1  ' WALL ROTATION OF 0.1 RADIAN HAS BEEN EXCEEDED. THE PRESENT',
     1  ' GENERAL IMPERFECTION AMPLITUDE, Wimp(general)=',
     1    ABS(WG2),
     1  ' PLEASE CONSIDER REDUCING Wimp(general). YOUR DESIGN MAY',
     1  ' BE TOO CONSERVATIVE.',
     1  ' ************* END WARNING *********** END WARNING **********'
C23456789012345678901234567890123456789012345678901234567890123456789012
C END AUG 2005
               IF (AMPMD9.GT.1.0) AMPMD9 = 1.0
C BEG AUG 1996
C   Do not change initial imperfection amplitude because user says NO:
               IF (IXIMPF(ILOADS).EQ.0) AMPMD9 = 1.0
C END AUG 1996
C BEG DEC 2004
C BEG AUG 2005
               AXLINP = AXLWAV(ILOADS)
               AXLTST = AXIAL
               IF (FMLOC9.GE.1.) AXLTST = AXIAL/FMLOC9
C END AUG 2005
               AXLRAT = ABS(AXLTST/AXLINP)
               IF (AXLRAT.LT.AMPMD9) AMPMD9 = AXLRAT
               IF (AMPMD9.GT.0.9999.AND.AXLRAT.GT.1.0) AMPMD9=AXLRAT
C   Do not change initial imperfection amplitude because user says NO:
               IF (IXIMPF(ILOADS).EQ.0) AMPMD9 = 1.0
C23456789012345678901234567890123456789012345678901234567890123456789012
C END DEC 2004
C BEG MAR 2004
C BEG AUG 2005
               IF (IXIMPF(ILOADS).NE.0.AND.NPRT.GE.0
     1                            .AND.IMOD.EQ.0.AND.AXLRAT.LT.1.0)
C END AUG 2005
     1         WRITE(IFILE,'(/,A,/,A,/,A,1P,E12.4,/,A,E12.4,/,A,E12.4)')
     1    ' General imperfection amplitude is modified because the',
     1    ' critical buckling mode has a shorter axial halfwavelength',
     1    ' than that specified by the user:            AXLINP=',AXLINP, 
     1    ' Critical buckling mode axial halfwavelength,AXLTST=',AXLTST,
     1    ' Imperfection amplitude is reduced by factor,AMPMD9=',AMPMD9
C END MAR 2004
C BEG AUG 2005 
               IF (IXIMPF(ILOADS).NE.0.AND.NPRT.GE.0
     1                                .AND.IMOD.EQ.0.AND.AMPMD9.GT.1.0)
     1         WRITE(IFILE,'(/,A,/,A,/,A,1P,E12.4,/,A,E12.4,/,A,E12.4)')
     1    ' General imperfection amplitude is modified because the',
     1    ' critical buckling mode has a longer axial halfwavelength',
     1    ' than that specified by the user:            AXLINP=',AXLINP,
     1    ' Critical buckling mode axial halfwavelength,AXLTST=',AXLTST,
     1  ' Imperfection amplitude is increased by factor,AMPMD9=',AMPMD9
               IF (IXIMPF(ILOADS).NE.0.AND.AMPTST.LT.AMPMD9) THEN
                  IF (IMOD.EQ.0.AND.NPRT.GE.0)
     1            WRITE(IFILE,'(A,/,A,1P,E12.4,A,1P,E12.4)')
     1          ' The "0.1 radian" rule governs. Imperfection',
     1          ' amplitude is now reduced from ',AMPMD9,' to ',AMPTST
                  AMPMD9 = AMPTST
               ENDIF
C END AUG 2005
               FACIM3 = (ABS(1./EILOCC))**1
               IF (FACIM3.LT.1.0) FACIM3 = 1.0
C              AMWIMP = AMPMD9*FACIM3*WG2
               AMWIMP = AMPMD9*WG2
C
C  WYYGEN is the maximum circumferential curvature change (flattening)
C         caused by both the out-of-roundness (ovalization) component
C         WG1 and the buckling modal component WG2 of the overall
C         initial geometric imperfection.
C  IAMPOV is the switch for amplification of the ovalization
C         component of the general imperf. IAMPOV is discussed above.
               IF (IAMPOV(IRMOD).EQ.1)
     1               WYYGEN = WYYAMP*(AMWIMP*FNPROD**2 + WG1*4./R**2)
               IF (IAMPOV(IRMOD).EQ.0)
     1               WYYGEN = WYYAMP*AMWIMP*FNPROD**2 + WG1*4./R**2
C
C  The general (overall) curvature changes and twist, Wxx, Wyy, Wxy,
C  of the imperfect panel are computed in SUBROUTINE CURIMP. If there
C  were no ovalization and no general buckling modal initial imper-
C  fection components, WXX9, WYY9, and WXY9 would be zero. Nonzero
C  WXX9, WYY9, WXY9 generally have significant influence on the
C  behavior (and hence optimum design) of the panel because:
C  1. They give rise to significant stresses in the various segments
C     of the panel skin-stringer and skin-ring cross sections. These 
C     stresses, of course, influence the stress constraints which
C     limit the feasible design space.  In addition they influence
C     local buckling of the various segments of the stiffeners and
C     panel skin.
C  2. The change in circumferential curvature, WYYGEN, may greatly
C     reduce overall, inter-ring, and local buckling load factors
C     because the effective radius of curvature may become much
C     larger than the nominal radius of curvature over arcs of the
C     cylindrical panel where WYYGEN tends to cancel the nominal
C     curvature, 1/R(nominal).
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG MAR 2005
C              IF (NPRT.EQ.2) WRITE(IFILE,'(A,/,A,I2,A,/,A,1PE12.4,/,
C BEG MAR 2007
C              IF ((ABS(WG2).GT.0.0001.AND.IMOD.EQ.0).OR.NPRT.GE.2)
               IF (NPRT.GE.0.AND.(ABS(WG2).GT.0.0001.OR.NPRT.GE.2))
C END MAR 2007
     1          WRITE(IFILE,'(/,A,/,A,I2,A,/,A,1PE12.4,/,
C END MAR 2005
     1         A,1PE12.4,/,A,1PE12.4,/,A,I5,/,A,1PE12.4,/,
     1         A,I5,/,A,1PE12.4,/,A,1PE12.4,/,A,1PE12.4)')
     1   ' QUANTITIES USED FOR OVERALL BENDING OF IMPERFECT PANEL',
     1   ' (used for generation of WXX9,WYY9,WXY9), IMOD=',IMOD,':',
     1   '  Amplitude of overall ovalization,              WG1=',WG1,
     1   '  Amplitude of general buckling modal imperf.,AMWIMP=',AMWIMP,
     1   '  Effective load factor for general buckling, EIGEFF=',EILOCC,
     1   '  Number of  axial halfwaves in general mode,      m=',MLOCAR,
     1   '  Fractional axial halfwaves in general mode,     dm=',DMWAVA,
     1   '  Number of  circ. halfwaves in general mode,      n=',NLOCAR,
     1   '  Fractional circ. halfwaves in general mode,     dn=',DNWAVA,
     1   '  Slope of nodal lines in general bucklng mode,slope=',CSLOPU,
     1   '  Additional amplitude factor,                FACIM3=',FACIM3
C BEG AUG 2005
C BEG JAN 2007
               IF ((ABS(WG2).GT.0.0001.AND.IMOD.EQ.0).OR.NPRT.GE.0) THEN
                WMPAMP = 1./ABS(EILOCC - 1.)
                IF (NPRT.GE.0) WRITE(IFILE,'(A,1PE12.4)')
     1   '  Original imperfection is increased by 1/(EIGEFF-1)=',WMPAMP
               ENDIF
C END JAN 2007
C END AUG 2005
C
C BEG OCT 1998
               IF (IMOD.EQ.0) THEN
                  IF (DMWAVA.NE.0.) IDMWAV(1) = 1
                  IF (DNWAVA.NE.0.) IDNWAV(1) = 1
               ENDIF
C END OCT 1998
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG JUN 2004
               CALL CURIMP(R,-AMWIMP,EILOCC,MLOCAR,NLOCAR,
C              CALL CURIMP(R, AMWIMP,EILOCC,MLOCAR,NLOCAR,
C END JUN 2004
C BEG APR 2005
C    1           DMWAVA,DNWAVA,CSLOPU,AXIAL*LENMOD,CIRC,PI,ICD9,
C BEG APR 2006
     1           DMWAVA,DNWAVA,CSLOPU*CSLMLT,AXIAL*LENMOD,CIRC,PI,ICD9,
C END APR 2006
C END APR 2005
     1           WXX9,WYY9,WXY9,IRMOD,ISTIF,0,0.,FACIM3,-WG1,AXIAL,
C BEG OCT 1996
     1           IAMPOV(IRMOD),0,IFLAT,WXXX9,WXXY9,WYYX9,WYYY9)
C END OCT 1996
C BEG NOV 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG MAR 2005
C              IF (NPRT.GE.2) WRITE(IFILE,'(A,1P,3E12.4,I5)')
C BEG DEC 2005
C BEG JAN 2007
C              IF ((ABS(WG2).GT.0.0001.AND.IMOD.EQ.0).OR.NPRT.GE.2)
               IF (ABS(WG2).GT.0.0001.AND.NPRT.GE.0)
     1          WRITE(IFILE,'(/,A,/,A,A,/,A,1P,3E12.4,I5,2X,A,/,A)')
     1       ' ********* NOTE ********* NOTE ********** NOTE *********',
     1       ' Prebuckling bending and twist',
     1       ' from general imperfection growth:',
     1       '    Wxx9,Wyy9,Wxy9,ICD9=',WXX9,WYY9,WXY9,ICD9,WRDMOD,
     1       ' ******************************************************'
C END JAN 2007
C BEG JUN 2007
               IF (ICONSV.EQ.-1.AND.ABS(WG2).GT.0.0001.AND.NPRT.GE.0)
     1          WRITE(IFILE,'(A,/,A)')
     1       ' The slope of the buckling nodal lines is set to zero in',
     1       ' the computation of Wxx9,Wyy9,Wxy9 because ICONSV=-1  .'
C END JUN 2007
C END DEC 2005
C END MAR 2005
C END NOV 2003
C
C              IF (IMOD.EQ.0.AND.CONLAM.GT.(1.+2.*CONSET)) IMLOC = 1
C
C  MLOC93 is the number of axial halfwaves in the general buckling
C         mode of the imperfect panel determined from the "high MBAR"
C         branch of GENSTB. The corresponding general buckling load
C         factor is called EILCSS.  EILCSS appears below. If there is
C         no "high MBAR" buckling according to GENSTB, then MLOC93
C         will be equal to unity and IMLOC will next be set to unity,
C         meaning that no low-m load factor will be computed next and
C         therefore no constraint condition will be set up that forces
C         the high-m load factor to be at least five per cent greater
C         than the low-m load factor (CONSET = 0.05).
C
               IF (IMOD.EQ.0.AND.MLOC9.LE.1.AND.MLOC93.LE.1) IMLOC = 1
               IF (IMLOC.EQ.0) THEN
                  MLOC9T = MLOC9
                  IF (MLOC9T.LE.1) THEN
                     EILC9S = EILOC9
                     EILOC9 = EILCSS
                     MLOC9S = MLOC9
                     MLOC9  = MLOC93
                     NLOC9S = NLOC9
                     NLOC9  = NLOC93
                     WYYAMP = WYYAM2(3)
                     WYYGNS = WYYGEN
                     WYYGEN = 0.
C23456789012345678901234567890123456789012345678901234567890123456789012
                     IF (NPRT.GE.1) WRITE(IFILE,'(A,I2,/,
     1                A,1PE12.4,A,I3,A,I3,A,1PE10.3,A)')
     1       ' HI-M GENERAL BUCKLING EIGENV. OF IMPERFECT PANEL, IMOD=',
     1             IMOD,
     1           '   EILC93(m,n,slope)=',EILCSS,'(',MLOC93,',',NLOC93,
     1           ',',CSLP93,')'
                     IF (IMOD.EQ.1) THEN
C  Do general buckling for high-m mode for perturbed design for imperfect
C  panel.
                        MLOC94 = MLOC93
                        NLOC94 = NLOC93
                        CSLP94 = CSLP93
                        TLOC94 = TLOC93
                        IF (NPRT.GE.1) WRITE(IFILE,'(/,A)')
     1'*** BEGIN BUCPAN (IMPERF. SENSITIVTY, HI-M:IMPERFECT PANEL) ****'
 9170                   CONTINUE
                        ILABEL=9170
                        IF (NPRT.GE.1) WRITE(IFILE,*)
     1                               ' LABEL NO. IN STRIMP=',ILABEL
C BEG NOV 2003
                        CALL BUCPAN(IFILE,IMOD,JJJ,ICONST,CONSTR,WORDB,
     1                    ISTIF,IREDUC,KOITER,LENMOD,CONMAX,FSGEN,FSPAN,
     1                    FFSLOC,EIGGG9,3,IPOINC,INUMTT,FKNOCK,IGENRL,
     1                    CSLP94,EILC94,MLOC94,ISKIN,MSHER9,NSHER9,
     1                    MNOSH9,NNOSH9,ITUTOR,IWIDE,IQUICK,FNX,FNY1,
     1                    FNXY,FNX0,FNY2,FNXY0,FNXP0,FNY3,FNXYP0,
     1                    FNXPL0,FNY4,FNXYPL,NLOC94,ITIP,IABP,1,
     1                    EPSLOD(4),RWBEIG,RWBTOT,ICASE,FSBSTR,1,
     1                    TLOC94,0,2,0,9170,ICD7D,ICD8D,ICD94,0,ILOADS,
     1                    MORCON,NCASES,26)
C END NOV 2003
                        IF (IRESTY.EQ.1) GO TO 2222
                        EILOC9 = EILC94
C23456789012345678901234567890123456789012345678901234567890123456789012
                        IF (NPRT.GE.2) WRITE(IFILE,'(A,I2,/,
     1                      A,1PE12.4,A,I3,A,I3,A,1PE10.3,A)')
     1       ' HI-M GENERAL BUCKLING EIGENV. OF IMPERFECT PANEL, IMOD=',
     1                  IMOD,
     1             '   EILC93(m,n,slope)=',EILC94,'(',MLOC94,',',NLOC94,
     1              ',',CSLP94,')'
                     ENDIF
                     WYYGEN = WYYGNS
                  ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
C                 WRITE(IFILE,*)' MLOC9T,EILC94,EILCSS,MLOC93,NLOC93=',
C    1                            MLOC9T,EILC94,EILCSS,MLOC93,NLOC93
C
C  The logic in this segment (within the IF (IMLOC.EQ.0) THEN ... ENDIF
C  loop) is analogous to that above for IRMOD = 2. Here, we are
C  interested in the low-m general bucklling behavior. First we get the
C  low-m buckling load factor and mode shape for the perfect shell and
C  then we get the same for the imperfect shell. If ILAMHI is unity, a
C  constraint condition CONLAM is set up which forces the high-m
C  buckling load factor, EILOC9, of the imperfect panel to be at least
C  5 per cent (CONSET= 0.05) higher than the low-m buckling load factor,
C  EILC10. of the imperfect panel.
C
                  IRMOD = 4
                  WYYAMP = 0.
                  WYYGNS = WYYGEN
                  WYYGEN = 0.
                  WG1S = WG1
                  WG1  = 0.
                  IF (NPRT.GE.2) WRITE(IFILE,'(/,A)')
     1'*** BEGIN BUCPAN (LOW-M SENSITIVITY FOR GENERAL BUCKLING) ****'
C  FIRST GET, FROM A PANDA-TYPE (CLOSED-FORM) ANALYSIS, THE LOW-M GENERAL
C  BUCKLING LOAD FACTOR, EILC92,  AND MODE SHAPE, (MLOC92,NLOC92,CSLP92),
C  FOR THE PERFECT PANEL (WITH LOCALLY POSTBUCKLED SKIN IF THE FACTOR OF
C  SAFETY, FSLOC, IS LESS THAN UNITY).
C  MLOC92 = number of axial halfwaves in the general buckling mode
C  NLOC92 = number of circ. halfwaves in the general buckling mode
C  CSLP92 = slope  of the nodal lines in the general buckling mode
C  NOTE: These correspond to the low-m general buckling mode shape
C        for the perfect panel.
               IF (NPRT.GE.1) WRITE(IFILE,*)
     1'*** BEGIN BUCPAN (IMPERF.SENSITIVTY, LOW-M: PERFECT PANEL) ****'
 9180             CONTINUE
                  ILABEL=9180
                  IF (NPRT.GE.1) WRITE(IFILE,*)
     1                           ' LABEL NO. IN STRIMP=',ILABEL
C BEG NOV 2003
                  CALL BUCPAN(IFILE,IMOD,JJJ,ICONST,CONSTR,WORDB,ISTIF,
     1              IREDUC,KOITER,LENMOD,CONMAX,FSGEN,FSPAN,FSLOC,
     1              EIGGG9,3,IPOINC,INUMTT,FKNOCK,IGENRL,CSLP92,EILC92,
     1              MLOC92,ISKIN,MSHER9,NSHER9,MNOSH9,NNOSH9,ITUTOR,
     1              IWIDE,IQUICK,FNX,FNY1,FNXY,FNX0,FNY2,FNXY0,FNXP0,
     1              FNY3,FNXYP0,FNXPL0,FNY4,FNXYPL,NLOC92,ITIP,IABP,
     1              1,EPSLOD(4),RWBEIG,RWBTOT,ICASE,FSBSTR,1,TLOC92,
     1              0,1,0,9180,ICD7D,ICD8D,ICD92,0,ILOADS,MORCON,
     1              NCASES,27)
C END NOV 2003
                  IF (IRESTY.EQ.1) GO TO 2222
C                 WRITE(IFILE,*)' EILC92,MLOC92,NLOC92,DMWAVE,DNWAVE=',
C    1                            EILC92,MLOC92,NLOC92,DMWAVE,DNWAVE
                  WG1 = WG1S
C  DNWAVE = fractional circumferential halfwave in the low-m general
C           buckling mode
C  DMWAVE = fractional axial halfwave in the low-m general buckling mode
C  ICD92  = indicator for coordinate direction in which panel is longest.
                  DNWV92 = DNWAVE
                  DMWV92 = DMWAVE
C                 ICD92  = ICD9
                  IF (EILC92.EQ.1.) EILC92 = 0.99999
                  FACIM2 = 1./(EILC92 - 1.)
                  IF (FACIM2.LE.0.0.OR.FACIM2.GT.100.) FACIM2 = 100.
                  IF (IMOD.EQ.0) THEN
                     FACM2W = FACIM2
                     EIG92X = EILC92
                     FNPROD = (FLOAT(NLOC92)+DNWV92)*PI/CIRC
C                    IF (FNPROD.LT.3.5/ABS(R)) IAMPOV(IRMOD) = 1
                     IF (FNPROD.LT.100000./ABS(R)) IAMPOV(IRMOD) = 1
                  ENDIF
C  The factor IAMPOV is described above, just before the label 1200.
                  DENOM = EILC92 - 1.
C23456789012345678901234567890123456789012345678901234567890123456789012
                  IF (NPRT.GE.2) WRITE(IFILE,'(A,I2,/,
     1            A,1PE12.4,A,I3,A,1PE10.3,A,I3,A,1PE10.3,A,1PE10.3,A)')
     1        ' LOW-M GENERAL BUCKLING EIGENV. OF PERFECT PANEL, IMOD=',
     1             IMOD,
     1           '   EILC92(m,dm,n,dn,s)=',EILC92,'(',MLOC92,',',DMWAVE,
     1           ',',  NLOC92,',',DNWAVE,',',CSLP92,')'
                  KONT10 = 0
                  EILC10 = 0.
 1205             CONTINUE
C
C  Begin iteration loop for low-m general buckling of the imperfect panel.
C  The low-m general imperfection is amplified by the factor WYYAMP, which
C  increases from iteration to iteration in this loop.
                  KONT10 = KONT10 + 1
                  IF (DENOM.LT.0.33333) DENOM = .33333
                  IF (IMOD.EQ.1) THEN
C  For the analysis of the perturbed design (IMOD=1), the new
C  amplification factor for the low-m imperfection, WYYAMP, is given by:
                     WYYAMP = (WYYAM2(4)-1.)*EIG92X/EILC92 + 1.0
C  in which WYYAM2(4) is the amplification factor for the unperturbed
C  design (IMOD=0) and FACIM2 and FACM2W are calculated above.
                     IF (WYYAMP.GT.6.0) WYYAMP = 6.0
                     IF (WYYAMP.LT.1.0) WYYAMP = 1.0
                     IF (WYYAMP.EQ.1.0.AND.WYYAM2(4).GT.3.99)
     1                                              WYYAMP=WYYAM2(4)
                     WYYAM3(4) = WYYAMP
                  ENDIF
                  WYYAMS = WYYAMP
                  IF (IMOD.EQ.0) IAMPLD(4) = 0
                  IF (IMOD.EQ.0) THEN
                  ICONV  = 0
                  IRATTR = 1
                     IF (FNX.LT.0.0.AND.NLOC92.GE.2) THEN
                        IRATTR = 0
C BEG JULY 2006
C                       IF (RATRES.GE.RATHI) THEN
                        IF (RATRES.GE.RATHI.AND.INOT4(IRMOD).EQ.0) THEN
C END JULY 2006
                           IRATTR = 1
C
C  If the applied loading is predominately axial compression (Nx),
C  then set the switch IAMPLD to unity and the local imperfection
C  amplification factor WYYAMP to 4.0 and transfer to 1243. If
C  IAMPLD is unity there is no iteration for local buckling of
C  the imperfect panel.
                           IAMPLD(4) = 1
                           WYYAMP = 4.0
                           GO TO 1243
                        ENDIF
                     ENDIF
C  Calculate WYYAMP for the current, unperturbed (IMOD=0) design...
C  (The following formula for WYYAMP is for hyperbolic growth).
                     WYYAMP = 1. + 1./DENOM
                     AMPITR(KONT10) = WYYAMP
                     IF (KONT10.EQ.4) THEN
C  Get new value of WYYAMP by quadratic extrapolation. The maximum
C  value of WYYAMP permitted is 4.0.
                        Y1WYY = AMPITR(KONT10-2) - AMPITR(KONT10-1)
                        Y3WYY = AMPITR(KONT10)   - AMPITR(KONT10-1)
                        Y1Y3  = Y1WYY + Y3WYY
                        IF (Y1Y3.GE.0.) THEN
                           WYYAMP = 4.0
                        ELSE
                           WYYAMP = -0.125*(Y1WYY - Y3WYY)**2/Y1Y3
     1                                           + AMPITR(KONT10-1)
                           IF (WYYAMP.GT.4.0) WYYAMP = 4.0
                        ENDIF
                     ENDIF
                  ENDIF
 1243             CONTINUE
                  WYYDIF = 1.0
                  IF (IMOD.EQ.0.AND.WYYAMP.GT.0.0)
     1               WYYDIF = ABS(WYYAMS/WYYAMP - 1.)
                  IF (WYYDIF.GT.0.01.AND.KONT10.LE.4) THEN
C
C  NEXT, GET, FROM A PANDA-TYPE (CLOSED-FORM) ANALYSIS, THE LOW-M GENERAL
C  BUCKLING LOAD FACTOR, EILC10,  AND MODE SHAPE, (MLOC10,NLOC10,CSLP10),
C  FOR THE IMPERFECT PANEL (WITH REDUCED STIFFNESS SKIN IF THE FACTOR
C  FFSLOC IS LESS THAN UNITY, WHICH IT IS IF IEFFSK = 1, see above).
C  MLOC10 = number of axial halfwaves in the low-m general buckling mode
C           of the imperfect panel
C  NLOC10 = number of circ. halfwaves in the low-m general buckling mode
C           of the imperfect panel
C  CSLP10 = slope  of the nodal lines in the low-m general buckling mode 
C           of the imperfect panel
C  NOTE: These correspond to the low-m general buckling mode shape
C        for the imperfect panel with the current value of the
C        low-m general imperfection amplification factor, WYYAMP.
C
                   IF (NPRT.GE.1) WRITE(IFILE,'(/,A)')
     1'*** BEGIN BUCPAN (IMPERF.SENSITIVTY, LOW-M:IMPERFECT PANEL) ****'
 9190              CONTINUE
                   ILABEL=9190
                   IF (NPRT.GE.1) WRITE(IFILE,*)
     1                           ' LABEL NO. IN STRIMP=',ILABEL
C                  WRITE(IFILE,*)' after 9190 before bucpan:ICD10 =', ICD10
C BEG NOV 2003
                   CALL BUCPAN(IFILE,IMOD,JJJ,ICONST,CONSTR,WORDB,
     1             ISTIF,IREDUC,KOITER,LENMOD,CONMAX,FSGEN,FSPAN,FFSLOC,
     1             EIGGG9,3,IPOINC,INUMTT,FKNOCK,IGENRL,CSLP10,EILC10,
     1             MLOC10,ISKIN,MSHER9,NSHER9,MNOSH9,NNOSH9,ITUTOR,
     1             IWIDE,IQUICK,FNX,FNY1,FNXY,FNX0,FNY2,FNXY0,FNXP0,
     1             FNY3,FNXYP0,FNXPL0,FNY4,FNXYPL,NLOC10,ITIP,IABP,
     1             1,EPSLOD(4),RWBEIG,RWBTOT,ICASE,FSBSTR,1,TLOC10,0,2,
     1             0,9190,ICD7D,ICD8D,ICD10,0,ILOADS,MORCON,NCASES,28)
C END NOV 2003
C                  WRITE(IFILE,*)' after 9190 after bucpan: ICD10 =', ICD10
                   IF (IRESTY.EQ.1) GO TO 2222
C
C                  WRITE(IFILE,*)' EILC10,MLOC10,NLOC10,DMWAVE,DNWAVE=',
C    1                             EILC10,MLOC10,NLOC10,DMWAVE,DNWAVE
                   IF (EILC10.EQ.1.) EILC10 = 0.99999
                   FACIM1 = 1./(EILC10 - 1.)
                   IF (FACIM1.LE.0.0.OR.FACIM1.GT.100.) FACIM1 = 100.
C  In order to compute a new value of WYYAMP, a modified buckling load
C  factor, EILOCC, is used, as follows:
C BEG MAY 2007
                   FMULT2 = 1.0
                   IF (ICONSV.EQ.-1) FMULT2 = 10.0
                   EILOCC =(FACIM1*EILOC10 +FACIM2*FMULT2*EILC92)/
     1                                            (FACIM1+FMULT2*FACIM2)
C END MAY 2007
                   DENOM = EILOCC - 1.
C23456789012345678901234567890123456789012345678901234567890123456789012
                   IF (NPRT.GE.2) WRITE(IFILE,'(A,I2,/,
     1            A,1PE12.4,A,I3,A,1PE10.3,A,I3,A,1PE10.3,A,1PE10.3,A)')
     1      ' LOW-M GENERAL BUCKLING EIGENV. OF IMPERFECT PANEL, IMOD=',
     1             IMOD,
     1           '   EILC10(m,dm,n,dn,s)=',EILC10,'(',MLOC10,',',DMWAVE,
     1           ',',  NLOC10,',',DNWAVE,',',CSLP10,')'
                   IF (NPRT.GE.2) WRITE(IFILE,'(A,1PE12.4)')
     1           ' LOW-M IMPERFECTION AMPLITUDE FACTOR, WYYAMP=',WYYAMP
C BEG NOV 2003
C BEG MAY 2007
                   IF (NPRT.GE.2) WRITE(IFILE,
     1 '(A,A,A,1P,E12.4,/,A,/,A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4)')
     1 ' EIGEFF =(FACIM1*EILOC10 +FACIM2*FMULT2*EILC92)/',
     1 '(FACIM1+FMULT2*FACIM2)',
C    1 ' EIGEFF =(FACIM1*EILOC10 +FACIM2*EILC92)/(FACIM1+FACIM2)',
C END MAY 2007
     1             '=',EILOCC,
     1             ' in which FACIM1, FACIM2, and EILC92 are given by:',
     1             ' FACIM1=1./(EILC10 - 1.) =',FACIM1,
     1             ' FACIM2=1./(EILC92 - 1.) =',FACIM2,
     1             ' EILC92                  =',EILC92
C END NOV 2003
C BEG MAY 2007
                   IF (NPRT.GE.2) WRITE(IFILE,'(A,1P,E12.4)')
     1             ' FMULT2                  =',FMULT2
C END MAY 2007
C BEG FEB 2006
C  The method above for computing EIGEFF is somewhat unconservative,
C  according to results from STAGS. Therefore, we use the simpler
C  and physically more attractive formula:
C23456789012345678901234567890123456789012345678901234567890123456789012
C                  EILOCC = EILC10
C                  DENOM = EILOCC - 1.
C                  IF (NPRT.GE.2) WRITE(IFILE,'(/,A,/,A,1P,E12.4)')
C    1           ' New value of EIGEFF (STAGS comparison, FEB.2006)=',
C    1           ' EIGEFF = EILC10 =', EILOCC
C END FEB 2006
                   IF (IMOD.EQ.0.AND.WYYAMP.GT.0.0.AND.WYYAMP.LT.3.99
     1                  .AND.KONT10.LE.3.AND.IAMPLD(4).EQ.0
     1                  .AND.ICONV.EQ.0) GO TO 1205
                  ENDIF
C                 End of (WYYDIF.GT.0.01.AND.KONT10.LE.4) condition
C
                  IF (IRATTR.EQ.0.AND.IMOD.EQ.0.AND.WYYAMP.LT.3.99
     1                 .AND.RATRES.GT.RATLO.AND.RATRES.LT.RATHI) THEN
                    ACOEF = (4.0 - WYYAMP)/(RATHI - RATLO)
                    BCOEF = 4.0 - ACOEF*RATHI
                    WYYAMP = ACOEF*RATRES + BCOEF
                    IF (WYYAMP.GT.4.0) WYYAMP = 4.0
                    IF (WYYAMP.LT.1.0) WYYAMP = 1.0
                    IRATTR = 1
                    ICONV = 1
                    GO TO 1243
                  ENDIF
                  IF (NPRT.GE.1) WRITE(IFILE,*)
     1'*** END BUCPAN (LOW-M SENSITIVITY FOR IMPERFECT PANEL) ******'
                  FKNOCK(10) = EILC10/EILC92
C  FKNOCK(10) is the knockdown factor for overall buckling in the low-m mode.
                  IF (IMOD.EQ.0) THEN
                     IF (EILC10.GT.1.5*EILOC9.OR.MLOC10.GE.MLOC9) THEN
C
C  If the low-m buckling load factor EILC10 is greater than 1.5 * high-m
C  buckling load factor EILOC9, or if the the number of axial halfwaves
C  MLOC10 for the "low-m" mode is greater than or equal to that for the
C  high-m mode (MLOC9), then turn on the switch IMLOC that eliminates
C  the special behavioral constraint condition involving CONLAM.
C
                         IMLOC = 1
                         GO TO 1208
                     ENDIF
                  ENDIF
                  IF (FKNOCK(10).GT.1.0.OR.FKNOCK(10).LE.0.)
     1                FKNOCK(10) =1.0
                  IF (IMOD.EQ.0) WYYAM2(4) = WYYAMP
                  DNWV10 = DNWAVE
                  DMWV10 = DMWAVE
                  DNWAVU = DNWV10
                  DMWAVU = DMWV10
                  NLOCU  = NLOC10
                  MLOCU  = MLOC10
                  CSLOPU = CSLP10
                  IF (NLOC92.GT.NLOC10) THEN
                     DNWAVU = DNWV92
                     DMWAVU = DMWV92
                     NLOCU  = NLOC92
                     MLOCU  = MLOC92
                     CSLOPU = CSLP92
                     ICD10   = ICD92
                  ENDIF
                  DNW10P = DNWAVU
                  DMW10P = DMWAVU
                  NLC10P = NLOCU
                  MLC10P = MLOCU
                  CSL10P = CSLOPU
                  FNPROD = ABS(FLOAT(NLOCU)+DNWAVU)*PI/CIRC
                  FMPROD = ABS(FLOAT(MLOCU)+DMWAVU)*PI/(AXIAL*LENMOD)
C BEG NOV 2003    
                  WALR10 = WG2*MAX(FMPROD,FNPROD)
C END NOV 2003
C BEG AUG 2005
                  AMPTST = 1.0
                  IF (ABS(WG2).GT.0.0.AND.FNPROD.GT.0.0
     1                               .AND.FMPROD.GT.0.0)
     1            AMPTST = ABS(0.1/WG2)*MIN(1./FMPROD,1./FNPROD)
                  IF (IMOD.EQ.0.AND.NPRT.GE.0)
     1             WRITE(IFILE,'(A,1P,E12.4)')
     1         ' (0.1 radian)/(shell wall rotation), AMPTST =',AMPTST
                  AMPM10 = AMPTST
C END AUG 2005
                  IF (AMPM10.GT.1.0) AMPM10 = 1.0
C BEG AUG 1996
C   Do not change initial imperfection amplitude because user says NO:
                  IF (IXIMPF(ILOADS).EQ.0) AMPM10 = 1.0
C END AUG 1996
C  AMPM10 is analogous to AMPMD9, which is described above. AMPM10
C         applies to the low-m general buckling mode.
C BEG DEC 2004
C BEG AUG 2005
                  AXLINP = AXLWAV(ILOADS)
                  AXLTST = AXIAL
                  IF ((FLOAT(MLOCU)+DMWAVU).GE.1.)
     1                AXLTST = AXIAL/(FLOAT(MLOCU)+DMWAVU)
C END AUG 2005
                  AXLRAT = ABS(AXLTST/AXLINP)
                  IF (AXLRAT.LT.AMPM10) AMPM10 = AXLRAT
                  IF (AMPM10.GT.0.9999.AND.AXLRAT.GT.1.0) AMPM10=AXLRAT
C   Do not change initial imperfection amplitude because user says NO:
                  IF (IXIMPF(ILOADS).EQ.0) AMPM10 = 1.0
C23456789012345678901234567890123456789012345678901234567890123456789012
C END DEC 2004
C BEG MAR 2004
C BEG AUG 2005
               IF (IXIMPF(ILOADS).NE.0.AND.NPRT.GE.0
     1                              .AND.IMOD.EQ.0.AND.AXLRAT.LT.1.0)
C END AUG 2005
     1         WRITE(IFILE,'(/,A,/,A,/,A,1P,E12.4,/,A,E12.4,/,A,E12.4)')
     1    ' General imperfection amplitude is modified because the',
     1    ' critical buckling mode has a shorter axial halfwavelength',
     1    ' than that specified by the user:            AXLINP=',AXLINP,
     1    ' Critical buckling mode axial halfwavelength,AXLTST=',AXLTST,
     1    ' Imperfection amplitude is reduced by factor,AMPM10=',AMPM10
C END MAR 2004
C BEG AUG 2005
               IF (IXIMPF(ILOADS).NE.0.AND.NPRT.GE.0
     1                                .AND.IMOD.EQ.0.AND.AMPM10.GT.1.0)
     1         WRITE(IFILE,'(/,A,/,A,/,A,1P,E12.4,/,A,E12.4,/,A,E12.4)')
     1    ' General imperfection amplitude is modified because the',
     1    ' critical buckling mode has a longer axial halfwavelength',
     1    ' than that specified by the user:            AXLINP=',AXLINP,
     1    ' Critical buckling mode axial halfwavelength,AXLTST=',AXLTST,
     1  ' Imperfection amplitude is increased by factor,AMPM10=',AMPM10
               IF (IXIMPF(ILOADS).NE.0.AND.AMPTST.LT.AMPM10) THEN
                  IF (IMOD.EQ.0.AND.NPRT.GE.0)
     1            WRITE(IFILE,'(A,/,A,1P,E12.4,A,1P,E12.4)')
     1          ' The "0.1 radian" rule governs. Imperfection',
     1          ' amplitude is now reduced from ',AMPM10,' to ',AMPTST
                  AMPM10 = AMPTST
               ENDIF

C END AUG 2005
                  FACIM3 = (ABS(1./EILOCC))**1
                  IF (FACIM3.LT.1.0) FACIM3 = 1.0
C                 AMWIMP = AMPM10*FACIM3*WG2
                  AMWIMP = AMPM10*WG2
C  IAMPOV is described above (switch for amplification of ovalization
C         component WG1 of the overall initial imperfection.
C  WYYGN2 is the maximum curvature change associated with the low-m
C         general imperfection mode + ovalization.
                  IF (IAMPOV(IRMOD).EQ.1)
     1               WYYGN2 = WYYAMP*(AMWIMP*FNPROD**2 +WG1*4./R**2)
                  IF (IAMPOV(IRMOD).EQ.0)
     1               WYYGN2 = WYYAMP*AMWIMP*FNPROD**2 +WG1*4./R**2
C
C  SUBROUTINE CURIMP computes the curvature changes and twist, WXX10,
C  WYY10, WXY10, associated with the low-m general buckling mode.
C
C23456789012345678901234567890123456789012345678901234567890123456789012
               IF (NPRT.GE.0) WRITE(IFILE,'(A,/,A,I2,A,/,A,1PE12.4,/,
     1         A,1PE12.4,/,A,1PE12.4,/,A,I5,/,A,1PE12.4,/,
     1         A,I5,/,A,1PE12.4,/,A,1PE12.4,/,A,1PE12.4)')
     1  ' QUANTITIES USED FOR OVERALL LOW-M BENDING OF IMPERFECT PANEL',
     1   ' (used for generation of WXX10,WYY10,WXY10), IMOD=',IMOD,':',
     1   '  Amplitude of overall ovalization,              WG1=',WG1,
     1   '  Amplitude of general buckling modal imperf.,AMWIMP=',AMWIMP,
     1   '  Effective load factor for general buckling, EIGEFF=',EILOCC,
     1   '  Number of  axial halfwaves in general mode,      m=',MLOCU,
     1   '  Fractional axial halfwaves in general mode,     dm=',DMWAVU,
     1   '  Number of  circ. halfwaves in general mode,      n=',NLOCU,
     1   '  Fractional circ. halfwaves in general mode,     dn=',DNWAVU,
     1   '  Slope of nodal lines in general bucklng mode,slope=',CSLOPU,
     1   '  Additional amplitude factor,                FACIM3=',FACIM3
C BEG AUG 2005
               IF (NPRT.GE.0) THEN
                WMPAMP = 1./ABS(EILOCC - 1.)
                WRITE(IFILE,'(A,1PE12.4)')
     1   '  Original imperfection is increased by 1/(EIGEFF-1)=',WMPAMP
               ENDIF
C END AUG 2005
               IF (NPRT.GE.0) WRITE(IFILE,'(A,/,A)')
     1  ' THE MOST HARMFUL (LARGEST) OF (WXX9,WXX10), (WYY9,WYY10),',
     1  ' (WXY9,WXY10), ARE USED FOR THE COMPUTATION OF PANEL STRESSES'
C
C BEG JUN 2004
                  CALL CURIMP(R,-AMWIMP,EILOCC,MLOCU,NLOCU,
C                 CALL CURIMP(R, AMWIMP,EILOCC,MLOCU,NLOCU,
C END JUN 2004
C BEG APR 2005
C    1           DMWAVU,DNWAVU,CSLOPU,AXIAL*LENMOD,CIRC,PI,ICD10,
C BEG APR 2006
     1           DMWAVU,DNWAVU,CSLOPU*CSLMLT,AXIAL*LENMOD,CIRC,PI,ICD10,
C23456789012345678901234567890123456789012345678901234567890123456789012
C END APR 2006
C END APR 2005
     1               WXX10,WYY10,WXY10,IRMOD,ISTIF,0,0.,FACIM3,-WG1,
C BEG OCT 1996
     1               AXIAL,IAMPOV(IRMOD),0,IFLAT,
     1               WXXX10,WXXY10,WYYX10,WYYY10)
C END OCT 1996
C
                  WYYGEN = WYYGN2
                  IF (WYYGNS.NE.0.0) WYYGEN =
     1                MAX(ABS(WYYGNS),ABS(WYYGN2))*WYYGNS/ABS(WYYGNS)
                  IF (ICASE.EQ.1.AND.IMOD.EQ.0) THEN
C BEG NOV 2003
                     IF (FNY1.LT.0.0.AND.FNX.LT.0.0) THEN
                        FNXFNY = SQRT(FNX**2 + FNY1**2)
                        IF (FNXFNY.GT.10.*ABS(FNXY)
     1                   .AND.ABS(FNY1).GT.1.9*ABS(FNX)) THEN
C END NOV 2003
                           IF (AMPM10.GT.0.3) THEN
C  If the loading is predominantly hoop compression and if the user
C  has elected in MAINSETUP to suppress high-m general buckling (IHIAXL=1)
C  and if the initial general buckling modal imperfection amplitude is
C  not too large, turn on the switch ILAMHI that activates the special
C  CONLAM constraint (keeps high-m overall buckling at least 5 per cent
C  higher than low-m overall buckling).
                              IF (IHIAXL.EQ.1) ILAMHI = 1
                           ENDIF
                        ENDIF
                     ENDIF
                  ENDIF
C  The "no-high-m general buckling" constraint is CONLAM and the
C  associated margin is CONLAM - 1.0.  CONSET always equals 0.05.
C  EILOC9 is the buckling load factor for the high-m overall mode and
C  EILC10 is the buckling load factor for the low-m  overall mode.
C
                  IF (ILAMHI.EQ.1) CONLAM=1.0-CONSET
     1                                       +(EILOC9-EILC10)/EILOC9
 1208             CONTINUE
                  IF (MLOC9T.LE.1) THEN
                     EILOC9 = EILC9S
                     MLOC9  = MLOC9S
                     NLOC9  = NLOC9S
                  ENDIF
               ENDIF
               IF (WYYGEN.EQ.0.0) WYYGEN = WYYGNS
C
C  FIND SHEARING RESULTANTS IN THE PLANES OF STRINGER WEBS AND RING WEBS
C  CAUSED BY OVERALL BENDING DUE TO INITIAL GENERAL IMPERFECTION.
C
C    FIRST, SHEARING IN STRINGER WEBS: It is associated with overall
C    axial bending of the entire panel caused by amplification of
C    the ovalization plus buckling modal general initial imperfection
C    components. It is assumed here that the transverse shear load
C    Qx = dMx/dx (lb/in), and that dMx/dx = Cs(bend)*Wxx, where
C    Cs(bend) is the overall axial beam bending stiffness,
C         Cs(bend) = Cs(4,4) - Cs(1,4)**2/Cs(1,1)
C    where Cs is the 6x6 constitutive matrix for the panel with both
C    stringers and rings smeared out. It is further assumed that all
C    of the transverse shear load Qx is carried by the webs of the
C    stringers and that the in-plane shear resultant Nxy in each web
C    is constant over the width (height) of the web, that is:
C            Qx = Nxy*h/(ring spacing).
C
               IF (ISTIF(1).NE.0) THEN
                  FWEBS = 1.
                  IF (ISTIF(1).EQ.4.OR.ISTIF(1).EQ.5) FWEBS = 2.
                  CBND = CS(4,4)-CS(1,4)**2/CS(1,1)
                  FAC1 = B(1)/(FWEBS*H(1))
                  FMPROD = FLOAT(MLOCAR)*PI/(AXIAL*LENMOD)
                  FAC2 = 1.0
                  IF (CS(4,6).NE.0.) FAC2 = CS(4,6)/ABS(CS(4,6))
                  DELWB1 = FAC1*CBND*FMPROD*ABS(WXX9)*FAC2
               ENDIF
C
C    NEXT, SHEARING IN THE RING WEBS: It is associated with overall
C    hoop bending of the entire panel caused by amplification of
C    the ovalization plus buckling modal general initial imperfection
C    components. It is assumed here that the transverse shear load
C    Qy = dMy/dy (lb/in), and that dMy/dy = Cs(bend)*Wyyy, where
C    Cs(bend) is the overall circumferential beam bending stiffness,
C         Cs(bend) = Cs(5,5) - Cs(2,5)**2/Cs(2,2)
C    where Cs is the 6x6 constitutive matrix for the panel with both
C    stringers and rings smeared out. It is further assumed that all
C    of the transverse shear load Qy is carried by the webs of the
C    rings and that the in-plane shear resultant Nxy in each web
C    is constant over the width (height) of the web, that is:
C            Qy = Nxy*h/(stringer spacing).
C
               FWEBS = 1.
               IF (ISTIF(2).EQ.4.OR.ISTIF(2).EQ.5) FWEBS = 2.
               CBND = CS(5,5)-CS(2,5)**2/CS(2,2)
               FAC1 = B(2)/(FWEBS*H(2))
               FNPROD = FLOAT(NLOCAR)*PI/CIRC
               FAC2 = 1.0
               IF (CS(5,6).NE.0.) FAC2 = CS(5,6)/ABS(CS(5,6))
               DELWEB(2) = FAC1*CBND*FNPROD*ABS(WYY9)*FAC2
            ENDIF
            CIRC = CIRCS
C
C *******************************************************************
C PART 2 OF IMPERFECTION SENSITIVITY AND PREBUCKLING BENDING: INTER-RING
C        PREBUCKLING BENDING AND KNOCKDOWN FACTOR FOR INTER-RING BUCKLING
C *******************************************************************
C
C  Next, calculate inter-ring (between rings) behavior of curved panels
C  with stringers, or overall behavior of panels without rings and with
C  stringers.
C
C *******************************************************************
C
C  NOTE: The imperfection sensitivity is computed as if the cylindrical
C        panel were a complete cylindrical shell.
            CIRCS = CIRC
C BEG NOV 1995
            IF (IFLAT.EQ.0.AND.CIRCS.LT.ABS(R)*3.1415927)
     1         CIRC = ABS(R)*3.1415927
C END NOV 1995
C BEG NOV 2003
            CIRCSS = CIRC
C END NOV 2003
            INTRNG = 0
            IF (ISTIF(1).NE.0.AND.
     1           (W0GLOB.NE.0.0.OR.W0PAN.NE.0.0.OR.W0LOC.NE.0.0)) THEN
C
C  This major section is entered only if there are stringers....
C
C BEG FEB 1997
               XLNG = B(2)
               IF (ISTIF(2).EQ.0) XLNG = LENMOD*B(2)
C END FEB 1997
C BEG OCT 2006
      IF (NPRT.GE.1) WRITE(IFILE,'(/,/,/,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************',
     1' ************          CHAPTER 10.2           *****************',
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************'
      IF (NPRT.GE.0) WRITE(IFILE,'(A,I3,A)')
     1' **** CHAPTER 10.2: DESIGN PERTURBATION INDEX, IMOD=',IMOD,' ***'
      IF (NPRT.GE.0) WRITE(IFILE,'(/,A,/,A,/,A,/,A)')
     1 ' *************************************************************',
     1 ' CHAPTER 10.2 Compute knockdown factor and prebuckling bending',
     1 '              associated with INTER-RING buckling modal',
     1 '              initial imperfection.'
C END OCT 2006
               IF (NPRT.GE.1) WRITE(IFILE,1393)
 1393          FORMAT(/' Entering imperfection section, PART 2...'/
     1      '  Inter-ring buckling of panel with stringers.'/
     1      '  Stringers are smeared out.')
C BEG NOV 2003
               IF (NPRT.GE.1.AND.INTPRS.EQ.1) 
     1         WRITE(IFILE,'(/,A,/,A,/,A,/,A)')
     1 ' ***** NOTE: IN THIS EXECUTION OF SUBROUTINE STRIMP, THE *****',
     1 ' *****     INTERNAL PRESSURE IS NEGLECTED. See ITEM 553  *****',
     1 ' *****     OF THE FILE ..panda2/doc/panda2.news.         *****',
     1 ' ============================================================='
C END NOV 2003
               NOTCM8 = 1
               INTRNG = 1
               IF (ISTIF(2).EQ.0.AND.IMOD.EQ.0.AND.IEFFSK.EQ.0
     1          .AND.(ABS(W0LOC).GE.0.1*TX(1).OR.FSGEN.GT.1.1*FSLOC))
     1            WRITE(IFILE,'(A,/,A,/,A,/,A,/,A,/,A)')
     1       ' **** WARNING ***** WARNING ***** WARNING ****',
     1       ' YOU SHOULD CONSIDER USING THE "REDUCED SKIN STIFFNESS"',
     1       ' OPTION IN THE "MAINSETUP" INTERACTIVE SESSION,',
     1       ' ESPECIALLY IF THE GENERAL BUCKLING FACTOR OF SAFETY,',
     1       ' FSGEN, IS GREATER THAN THE LOCAL BUCKLING F.S., FSLOC.',
     1       ' **** END WARNING *** END WARNING *** END WARNING ****'
C BEG DEC 2003
               IF (NPRT.GE.1) WRITE(IFILE,'(/,A,/,A,/,A,/,A)')
     1'***** BEGIN SUBROUTINE STRCON (GET DELSKN FOR SS.BUCK.) ******',
     1' DELSKN = change in stress resultants, dNx,dNy,dNxy, in the',
     1'          various segments of the skin-stringer module due to',
     1'          prebuckling bending of the imperfect panel or shell.'
C END DEC 2003
C  The buckling load factor for the part of the curved panel between
C  rings depends on overall bending of the curved panel in which the
C  rings participate in the bending. One source of this dependency
C  is the reduction in curvature caused by the overall and inter-ring
C  imperfection components and their amplification under the design
C  load:  panels with less curvature buckle at lower loads than those
C  with more. The other source of the dependency is the generation of
C  prebuckling stress resultants, especially of hoop compression in
C  the panel skin. If the rings are internal, then the maximum hoop
C  compression develops in the panel skin at the same location as the
C  curvature of the deformed panel is minimum.
C
C  In the following call to STRCON are calculated the additional compressive
C  stress resultants, Nx, Ny, Nxy, in the panel skin (DELSKN) generated
C  by growth of the overall initial imperfection components when the panel
C  is subjected to the design load combination. If there are no rings,
C  no additional stress resultants will be generated here.
C
               CALL STRCON(CONMAX,ISTIF,NSEG,NLAYER,LTYPE,EALLOW,
     1               MATL,ANGLE,EPS1,EPS2,EPS12,EPS10,EPS20,EPS120,
     1               B2,W2,ICONST,CONSTR,WORDB,IADDB,T,TAPE,DEGRAD,
     1               FSSTR,ETHERM,THERMX,THERMY,IPOINC,INUMTT,IMOD,
     1               EPSLOD,ZPARTX,ZPARTY,ETHRMX,ETHRMY,CRACK,ICHANG,
     1               EALLST,NPRT,NAPPL,IFILE,ITYPE,IICHAN,
     1               EPSTOT,EPSFIX,EPSEIG,1,INTEXT,ICASE,
     1               TEMP,FMULT,NNODES,IMTEMP,P,PWDD,IABT,1,1,0,10)
               IF (NPRT.GE.2.AND.ISTIF(2).NE.0)
     1               WRITE(IFILE,'(A,/,A,/,A,1PE12.4,/,A,1PE12.4)')
     1             ' Additional resultants (Nx,Ny) in panel skin from',
     1             ' global bending of imperfect panel:',
     1             '   Additional axial resultant, dNx =',DELSKN(1,1,1),
     1             '   Additional  hoop resultant, dNy =',DELSKN(2,1,1)
               IF (NPRT.GE.1) WRITE(IFILE,*)
     1'*****  END  SUBROUTINE STRCON (GET DELSKN FOR SS.BUCK.) ******'
               IRMOD = 3
               IPRELM = 5
               IF (ISTIF(2).EQ.0) THEN
                  IRMOD  = 2
                  IPRELM = 3
               ENDIF
               WYYAMP = 0.
               WYYGNS = WYYGEN
               WYYGEN = 0.
               WG1S = WG1
               WG1  = 0.
C
               IF (IMOD.EQ.0.AND.IQUICK.EQ.1.AND.IWIDE.EQ.0) THEN
C
C  The purpose here is to compute the wide-column buckling load
C  factor even though the user has indicated in MAINSETUP that he/she
C  does not want wide-column buckling to constrain the design (IWIDE=0).
C  If the load factor for wide-column buckling is less than unity,
C  PANDA2 prints out a warning in the *.OPM file urging the user
C  to consider changing IWIDE from 0 to 1 in future PANDAOPT runs.
C
                  IWIDEX = 1
                  IPWR = 2
                  IF (BLL2.GT.0.0) IPWR = B(2)/BLL2 - 1.
                  IF (IPWR.LT.2) IPWR = 2
                  IF (IPWR.GT.10) IPWR = 10
                  CXMULT = 10.**IPWR
                  IF (CSWIDE(4,4).GT.(CXMULT*CSWIDE(5,5))) THEN
                     IF (NPRT.GE.1) WRITE(IFILE,'(/,A)')
     1'*** BEGIN BUCPAN (WIDE COLUMN CHECK FOR SMEARED STRINGERS) ***'
 9200                CONTINUE
                     ILABEL=9200
                     IF (NPRT.GE.1) WRITE(IFILE,*)
     1                            ' LABEL NO. IN STRIMP=',ILABEL
C BEG NOV 2003
C BEG DEC 2003
C                    FNYEFF = FNY*FACNY
C                    FNY0FF = FNY0*FACNY0
                     FNYEFF = (FNY +DFNYPA)*FACNY
                     FNY0FF = (FNY0+DFNYPB)*FACNY0
C END DEC 2003
                     IF (INTPRS.EQ.1) THEN
                        IF (ISTIF(2).EQ.0) THEN
                           FNYEFF = FNY + DFNYPA
                           IF (FNYEFF.GT.0.) FNYEFF = 0.
                           FNY0FF = FNY0 + DFNYPB
                           IF (FNY0FF.GT.0.) FNY0FF = 0.
                        ENDIF
                        HOOPSV = RESULT(2,1,1)
                        RESFXS = RESTOT(2,1,1)
                        IF (RESFXS.GT.0.) THEN
                            RESULT(2,1,1) = RESULT(2,1,1)-RESTOT(2,1,1)
                            RESTOT(2,1,1) = 0.
                        ENDIF
                        RSKINY = RESULT(2,1,1)
                        RSKNYF = RESTOT(2,1,1)
                        PPNY   = RSKINY - RSKNYF
                        IF (PPNY.GT.0.) THEN
                           RESULT(2,1,1) = 0.
                           RESTOT(2,1,1) = 0.
                        ENDIF
                        IF (RSKNYF.GT.0.) RESTOT(2,1,1) = 0.
                     ENDIF
                     CALL BUCPAN(IFILE,IMOD,JJJ,ICONST,CONSTR,WORDB,
     1                ISTIF,IREDUC,KOITER,LENMOD,CONMAX,FSGEN,FSPAN,
     1                FSLOC,EIGGG8,IPRELM,IPOINC,INUMTT,FKNOCK,IGENRL,
     1                CSLP81,EILC81,MLOC81,ISKIN,MSHER8,NSHER8,MNOSH8,
     1                NNOSH8,ITUTOR,IWIDEX,IQUICK,FNX,FNYEFF,FNXY,FNX0,
     1                FNY0FF,FNXY0,FNXP0,FNY3,FNXYP0,FNXPL0,FNY4,
     1                FNXYPL,NLOC81,ITIP,IABP,1,EPSLOD(4),RWBEIG,
     1                RWBTOT,ICASE,FSBSTR,1,TLOC81,
     1                0,3,0,9200,ICD7D,ICD8D,ICD9D,0,ILOADS,MORCON,
     1                NCASES,29)
                     IF (INTPRS.EQ.1) THEN
                        RESULT(2,1,1) = HOOPSV
                        RESTOT(2,1,1) = RESFXS
                     ENDIF
C END NOV 2003
                     IF (IRESTY.EQ.1) GO TO 2222
C BEG DEC 2003
                     IF (NPRT.GT.-1.AND.EILC81.LT.1.0)
     1                                   WRITE(IFILE,1004) EILC81
C END DEC 2003
                     IF (NPRT.GE.1) WRITE(IFILE,*)
     1'***  END  BUCPAN (WIDE COLUMN CHECK FOR SMEARED STRINGERS) ***'
                  ENDIF
               ENDIF
C
               IF (NPRT.GE.1) WRITE(IFILE,'(A,/,A,/,A,/,A)')
     1'*** BEGIN BUCPAN (IMPERF. SENSITIVITY FOR "PERFECT" PANEL) ***',
     1' (The effect of resultant redistribution, dNx, dNy, to panel',
     1'  skin caused by overall bending is included here, but the',
     1'  change in radius of curvature dR is not. dR is included later)'
C23456789012345678901234567890123456789012345678901234567890123456789012
C
C  NEXT GET, FROM A PANDA-TYPE (CLOSED-FORM) ANALYSIS, THE INTER-RING
C  BUCKLING LOAD FACTOR, EILC81,  AND MODE SHAPE, (MLOC81,NLOC81,CSLP81),
C  FOR THE PANEL (WITH LOCALLY POSTBUCKLED SKIN IF THE FACTOR OF SAFETY,
C  FSLOC, IS LESS THAN UNITY). THE EFFECT OF STRESS REDISTRIBUTION OVER
C  THE CROSS SECTION CAUSED BY THE OVERALL IMPERFECTION COMPONENTS IS
C  INCLUDED, BUT THE EFFECT OF CURVATURE CHANGE DUE TO IMPERFECTIONS
C  IS NOT INCLUDED.
C  MLOC81 = number of axial halfwaves in the INTER-RING buckling mode
C  NLOC81 = number of circ. halfwaves in the INTER-RING buckling mode
C  CSLP81 = slope  of the nodal lines in the INTER-RING buckling mode
C
 9210          CONTINUE
               ILABEL=9210
               IF (NPRT.GE.1) WRITE(IFILE,*)
     1                       ' LABEL NO. IN STRIMP=',ILABEL
C BEG NOV 2003
C BEG DEC 2003
C              FNYEFF = FNY*FACNY
C              FNY0FF = FNY0*FACNY0
               FNYEFF = (FNY +DFNYPA)*FACNY
               FNY0FF = (FNY0+DFNYPB)*FACNY0
C END DEC 2003
               IF (INTPRS.EQ.1) THEN
                  IF (ISTIF(2).EQ.0) THEN
                      FNYEFF = FNY + DFNYPA
                      IF (FNYEFF.GT.0.) FNYEFF = 0.
                      FNY0FF = FNY0 + DFNYPB
                      IF (FNY0FF.GT.0.) FNY0FF = 0.
                  ENDIF
                  HOOPSV = RESULT(2,1,1)
                  DELSKV = DELSKN(2,1,1)
                  RESFXS = RESTOT(2,1,1)
                  IF (RESFXS.GT.0.) THEN
                      RESULT(2,1,1) = RESULT(2,1,1) - RESTOT(2,1,1)
                      RESTOT(2,1,1) = 0.
                  ENDIF
                  RSKINY = RESULT(2,1,1) + DELSKN(2,1,1)
                  RSKNYF = RESTOT(2,1,1)
                  PPNY   = RSKINY - RSKNYF
                  IF (PPNY.GT.0.) THEN
                     RESULT(2,1,1) = 0.
                     DELSKN(2,1,1) = 0.
                     RESTOT(2,1,1) = 0.
                  ENDIF
               ENDIF
               CALL BUCPAN(IFILE,IMOD,JJJ,ICONST,CONSTR,WORDB,ISTIF,
     1           IREDUC,KOITER,LENMOD,CONMAX,FSGEN,FSPAN,FSLOC,EIGGG8,
     1              IPRELM,IPOINC,INUMTT,FKNOCK,IGENRL,CSLP81,EILC81,
     1              MLOC81,ISKIN,MSHER8,NSHER8,MNOSH8,NNOSH8,ITUTOR,
     1              IWIDE,IQUICK,FNX,FNYEFF,FNXY,FNX0,FNY0FF,FNXY0,
     1              FNXP0,FNY3,FNXYP0,FNXPL0,FNY4,FNXYPL,NLOC81,
     1              ITIP,IABP,1,EPSLOD(4),RWBEIG,RWBTOT,ICASE,FSBSTR,
     1              1,TLOC81,1,1,1,9210,ICD7D,ICD81,ICD81,0,ILOADS,
     1              MORCON,NCASES,30)
               IF (INTPRS.EQ.1) THEN
                  RESULT(2,1,1) = HOOPSV
                  DELSKN(2,1,1) = DELSKV
                  RESTOT(2,1,1) = RESFXS
               ENDIF
C END NOV 2003
               IF (IRESTY.EQ.1) GO TO 2222
C BEG NOV 2003
               IF (IMOD.EQ.0) EIGRTY(3) = EIGRTX(3)
               IF (IMOD.EQ.1) EIGRTX(3) = EIGRTY(3)
C END NOV 2003
C
               WG1 = WG1S
C  DNWAVE = fractional circumferential halfwave in the inter-ring buck. mode
C  DMWAVE = fractional axial           halfwave in the inter-ring buck. mode
C  ICD81  = indicator for coordinate direction in which inter-ring portion
C           of the panel is longest.
               DNWV81 = DNWAVE
               DMWV81 = DMWAVE
C BEG MAR 1998
C BEG APR 1998
C BEG JULY 1998
               IF (NPRT.GE.3) WRITE(IFILE,'(A,/,(1P,5E12.4))') 
     1            ' EIGRTX(I),I=1,20)=',(EIGRTX(I),I=1,20)
               IF (IPRELM.EQ.5) INDEIG = 3
               IF (IPRELM.EQ.3) INDEIG = 13
               EIGVL8 = EIGVLX*EIGRTX(INDEIG)
C END JULY 1998
C END APR 1998
C END MAR 1998
               IF (EILC81.EQ.1.) EILC81 = 0.99999
               FACIM2 = 1./(EILC81 - 1.)
               IF (FACIM2.LE.0.0.OR.FACIM2.GT.100.) FACIM2 = 100.
C  IAMPOV = switch for whether or not the ovalization component, WG1,
C           of the initial global imperfection will be amplified by
C           the factor WYYAMP (IAMPOV=1 means yes; IAMPOV = 0 means no).
C           See the discussion above the label 1200 for more details.
               IF (IMOD.EQ.0) THEN
                  FACM2Y = FACIM2
                  EIG81X = EILC81
                  FNPROD = (FLOAT(NLOC81)+DNWV81)*PI/CIRC
C BEG MAR 1996
                  IF (IBEAM.EQ.1) FNPROD = 1.E-10
C END MAR 1996
C                 IF (FNPROD.LT.3.5/ABS(R)) IAMPOV(IRMOD) = 1
                  IF (FNPROD.LT.100000./ABS(R)) IAMPOV(IRMOD) = 1
               ENDIF
               DENOM = EILC81 - 1.
C23456789012345678901234567890123456789012345678901234567890123456789012
               IF (NPRT.GE.0) WRITE(IFILE,'(A,I2,/,
     1         A,1PE12.4,A,I3,A,1PE10.3,A,I3,A,1PE10.3,A,1PE10.3,A)')
     1        ' INTER-RING BUCKLING EIGENV. OF "PERFECT" PANEL, IMOD=',
     1             IMOD,
     1        '   EILC81(m,dm,n,dn,s)=',EILC81,'(',MLOC81,',',DMWAVE,
     1        ',',  NLOC81,',',DNWAVE,',',CSLP81,')'
C BEG APR 1998
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG JULY 1998
               IF (NPRT.GE.2.AND.EIGRTX(INDEIG).LT.1.0)
C END JULY 1998
     1         WRITE(IFILE,'(A,/,A,/,A,/,A,/,A)')
     1   ' NOTE: The eigenvalue and mode shape just printed may not be',
     1       ' the critical one for the perfect shell; It is used only',
     1       ' in the computation of the knockdown factor to account',
     1       ' for initial nonaxisymmetric initial imperfections in a',
     1       ' most conservative manner.'
C BEN APR 1998
C BEG MAR 1998
C BEG APR 1998
               IF (NPRT.GE.2) WRITE(IFILE,'(A,/,A,1P,E12.4,/,
     1         A,1PE12.4,A,I3,A,I3,A,1PE10.3,A,/,A,/,A,/,A)')
     1        ' BUCKLING LOAD FACTOR WITHOUT FRACTIONAL WAVENUMBERS',
     1        ' AND INCLUDING THE FACTOR EIGTST/EIGTS2=EIGRAT=',
     1          EIGRTX(INDEIG),
     1        '   EIGVL8(m, 0,n, 0,s)=',EIGVL8,'(',MLOC81,
     1        ',',  NLOC81,',',CSLP81,')',
     1        ' This eigenvalue is the factor EIGPAN used to',
     1        ' normalize the buckling load factors computed in',
     1        ' SUBROUTINE ARBOCZ'
C END APR 1998
C BEG APR 1998
C BEG JULY 1998
C END JULY 1998
C END APR 1998
C END MAR 1998
               EIG8X = 1.0
               EIG8Y = 1.0
               FKNKOI(2) = 1.0
C              IF (IWIDE.EQ.0.AND.IFLAT.EQ.0) THEN
C BEG JAN 1996
C              IF (IFLAT.EQ.0) THEN
C BEG MAR 1997
C              IF (IFLAT.EQ.0.AND.EILC81.LT.10.E+16) THEN
               IF (IWIDE.EQ.0.AND.IFLAT.EQ.0.AND.EILC81.LT.10.E+16) THEN
C END MAR 1997
C END JAN 1996
                 NOTCM8 = 0
                 INDX = 3
                 IF (ISTIF(2).EQ.0) INDX = 2
C BEG MAR 2007
                 ICNTRL = 1
                 IF (ISTIF(2).EQ.0) ICNTRL = 0
C END MAR 2007
C  Find buckling load and knockdown factor from ARBOCZ 1992 Eq.(3.61).
C    First, for the perfect shell (including hoop stress redistribution):
C23456789012345678901234567890123456789012345678901234567890123456789012
                 RSKINY =  RESULT(2,1,1) + DELSKN(2,1,1)
                 RSKNYF =  RESTOT(2,1,1)
                 FNYEFF    =  EIGVL8*(RSKINY - RSKNYF)
C BEG NOV 2003
                 IF (INTPRS.EQ.1.AND.FNYEFF.GT.0.) FNYEFF = 0.
                 FNY0FF    = FNY0*FACNY0 + DFNYPB
                 IF (INTPRS.EQ.1.AND.FNY0FF.GT.0.) FNY0FF = 0.
C END NOV 2003
                 IF (ISOGRD.EQ.1.OR.ISTIF(1).EQ.5)
     1              FNYEFF = EIGVL8*(FNY + DFNYPA)
C BEG NOV 2003
                 IF (INTPRS.EQ.1.AND.FNYEFF.GT.0.) FNYEFF = 0.
C END NOV 2003
                 IF (IMOD.EQ.0) THEN
                    CSLP8X = 0.
                    MWAV8X = 0.
                    NWAV8X = 0.
                    FMA8X  = 0.
                 ENDIF
                 PX1 = CIRC/B(1)
                 TXX = TX(1)
                 IF (ISOGRD.EQ.1) TXX = TEFF(1)
                 IF (ISTIF(1).EQ.5) TXX = TEFF(2)
                 RRR = R
                 IF (IWIDE.EQ.1) RRR = 100.*R
C23456789012345678901234567890123456789012345678901234567890123456789012
                 IF (FSLOC.GE.0.95) THEN
C BEG OCT 1998
                    IF (NPRT.GE.2) WRITE(IFILE,'(/,A,1P,E12.4,A)')
     1            ' Inter-ring buckling: smeared stringers, C11=',
     1              CX(1,1,5),' (PERFECT PANEL)'
C END OCT 1998
                    PX2 = ABS(1. - CX(4,4,1)/CX(4,4,5))
C BEG JUN 1999
                    IF (NPRT.GE.1) WRITE(IFILE,'(A)')
     1                                ' Entering ARBOCZ. Label=9210'
C END JUN 1999
C BEG NOV 2003
                    CALL ARBOCZ(9210,INDX,IMOD,IFILE,NPRT,XLNG,CIRC,RRR,
     1                  EIGVL8,ITUTOR,IREDUC,TEFF(1),TXX,GTX(1,5),
     1                  CX(1,1,5),0.,EIGVL8*FNX,FNYEFF,EIGVL8*FNXY,
     1                  FNX0,FNY0FF,FNXY0,CSLP8X,MWAV8X,NWAV8X,
     1                  FMA8X,MLOC81,NLOC81,CSLP81,EIG8X,PX1,PX2,1,
     1                  ICUBIC(3),JCUBIC(3),IARBOC(3),ILOADS)
C END NOV 2003
C BEG JUN 1999
                    IF (NPRT.GE.1) WRITE(IFILE,'(A)')
     1                                ' Leaving ARBOCZ.  Label=9210'
C END JUN 1999
C BEG FEB 1996
                    IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
                    FNWAV8 = NWAV8X
C BEG OCT 1998
                    EIG8XP = EIG8X
                    IF (IMOD.EQ.0) THEN
                       CALL EIGMOD(CIRC,FNWAV8,B(1),
     1                   EIG8X,ITUTOR,IFILE,CX(4,4,1),CX(4,4,5),
     1                   FSAFE2,EIGVL8*FNX,FNYEFF,EIGVL8*FNXY,
     1                   ICNTRL,INDX)
                       IF (NPRT.GE.2)
     1                    WRITE(IFILE,'(A,1P,E12.4,/,A,1P,E12.4)')
     1' Buckling load factor BEFORE knockdown for smeared stringers=',
     1  EIG8XP,
     1' Buckling load factor AFTER  knockdown for smeared stringers=',
     1  EIG8X
                    ENDIF
C END OCT 1998
                 ELSE
C BEG OCT 1998
                    IF (NPRT.GE.2) WRITE(IFILE,'(/,A,1P,E12.4,A)')
     1            ' Inter-ring buckling: smeared stringers, C11=',
     1              CSWIDE(1,1),' (PERFECT PANEL)'
C END OCT 1998
                    PX2 = ABS(1. - CX(4,4,1)/CSWIDE(4,4))
C BEG JUN 1999
                    IF (NPRT.GE.1) WRITE(IFILE,'(A)')
     1                                ' Entering ARBOCZ. Label=9210'
C END JUN 1999
C BEG NOV 2003
                    CALL ARBOCZ(9210,INDX,IMOD,IFILE,NPRT,XLNG,CIRC,RRR,
     1                  EIGVL8,ITUTOR,IREDUC,TEFF(1),TXX,GTX(1,5),
     1                  CSWIDE,0.,EIGVL8*FNX,FNYEFF,EIGVL8*FNXY,
     1                  FNX0,FNY0FF,FNXY0,CSLP8X,MWAV8X,NWAV8X,
     1                  FMA8X,MLOC81,NLOC81,CSLP81,EIG8X,PX1,PX2,1,
     1                  ICUBIC(3),JCUBIC(3),IARBOC(3),ILOADS)
C END NOV 2003
C BEG JUN 1999
                    IF (NPRT.GE.1) WRITE(IFILE,'(A)')
     1                                ' Leaving ARBOCZ. Label=9210'
C END JUN 1999
C BEG FEB 1996
                    IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
                    FNWAV8 = NWAV8X
C BEG OCT 1998
                    EIG8XP = EIG8X
                    IF (IMOD.EQ.0) THEN
                       CALL EIGMOD(CIRC,FNWAV8,B(1),
     1                   EIG8X,ITUTOR,IFILE,CX(4,4,1),CSWIDE(4,4),
     1                   FSAFE2,EIGVL8*FNX,FNYEFF,EIGVL8*FNXY,
     1                   ICNTRL,INDX)
                       IF (NPRT.GE.2)
     1                    WRITE(IFILE,'(A,1P,E12.4,/,A,1P,E12.4)')
     1' Buckling load factor BEFORE knockdown for smeared stringers=',
     1  EIG8XP,
     1' Buckling load factor AFTER  knockdown for smeared stringers=',
     1  EIG8X
                    ENDIF
C END OCT 1998
                 ENDIF
C BEG NOV 2003
C                IF (NPRT.GE.2) WRITE(IFILE,'(A,I2,A,I2)')
C    1         ' IFLT8A = ',IFLT8A,'   IMOD =',IMOD
                 IF (IFLT8A.EQ.0.OR.IMOD.EQ.0) THEN
C END NOV 2003
C    Next, for the imperfect shell:
                   IF (IMOD.EQ.0) THEN
                     CSLP8Y = 0.
                     MWAV8Y = 0.
                     NWAV8Y = 0.
                     FMA8Y  = 0.
                   ENDIF
                   CURMOD = ABS(1./R) - ABS(WYY9)
                   IF (CURMOD.GT.0.) RMOD = (1./CURMOD)*R/ABS(R)
                   RRR = RMOD
C BEG NOV 2003
C                  IF (IWIDE.EQ.1.OR.CURMOD.LE.0.) RRR = 100.*R
                   IF (IWIDE.EQ.1.OR.CURMOD.LE.0.) THEN
                      RRR = 100.*R
                      IF (CIRCS.LT.CIRC) CIRC = CIRCS
                   ENDIF
C END NOV 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
                   IF (FFSLOC.GE.0.95) THEN
C BEG OCT 1998
                    IF (NPRT.GE.2) WRITE(IFILE,'(/,A,1P,E12.4,A)')
     1            ' Inter-ring buckling: smeared stringers, C11=',
     1              CX(1,1,5),' (IMPERFECT PANEL)'
C END OCT 1998
C BEG JUN 1999
                    IF (NPRT.GE.1) WRITE(IFILE,'(A)')
     1                                ' Entering ARBOCZ. Label=9211'
C END JUN 1999
C BEG NOV 2003
                    CALL ARBOCZ(9211,INDX,IMOD,IFILE,NPRT,XLNG,CIRC,RRR,
     1                EIGVL8,ITUTOR,IREDUC,TEFF(1),TXX,GTX(1,5),
     1                CX(1,1,5),W0PAN,EIGVL8*FNX,FNYEFF,EIGVL8*FNXY,
     1                FNX0,FNY0FF,FNXY0,CSLP8Y,MWAV8Y,NWAV8Y,
     1                FMA8Y,MLOC81,NLOC81,CSLP81,EIG8Y,PX1,PX2,1,
     1                ICUBIC(4),JCUBIC(4),IARBOC(4),ILOADS)
C END NOV 2003
C BEG JUN 1999
                    IF (NPRT.GE.1) WRITE(IFILE,'(A)')
     1                                ' Leaving ARBOCZ.  Label=9211'
C END JUN 1999
C BEG FEB 1996
                    IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
                    FNWAV8 = NWAV8Y
C BEG OCT 1998
                    EIG8YP = EIG8Y
                    IF (IMOD.EQ.0) THEN
                       CALL EIGMOD(CIRC,FNWAV8,B(1),
     1                   EIG8Y,ITUTOR,IFILE,CX(4,4,1),CX(4,4,5),
     1                   FSAFE2,EIGVL8*FNX,FNYEFF,EIGVL8*FNXY,
     1                   ICNTRL,INDX)
                       IF (NPRT.GE.2)
     1                    WRITE(IFILE,'(A,1P,E12.4,/,A,1P,E12.4)')
     1' Buckling load factor BEFORE knockdown for smeared stringers=',
     1  EIG8YP,
     1' Buckling load factor AFTER  knockdown for smeared stringers=',
     1  EIG8Y
                    ENDIF
C END OCT 1998
                   ELSE
C BEG OCT 1998
                    IF (NPRT.GE.2) WRITE(IFILE,'(/,A,1P,E12.4,A)')
     1            ' Inter-ring buckling: smeared stringers, C11=',
     1              CSWIDE(1,1),' (IMPERFECT PANEL)'
C END OCT 1998
C BEG JUN 1999
                    IF (NPRT.GE.1) WRITE(IFILE,'(A)')
     1                                ' Entering ARBOCZ. Label=9211'
C END JUN 1999
C BEG NOV 2003
                    CALL ARBOCZ(9211,INDX,IMOD,IFILE,NPRT,XLNG,CIRC,RRR,
     1                EIGVL8,ITUTOR,IREDUC,TEFF(1),TXX,GTX(1,5),
     1                CSWIDE,W0PAN,EIGVL8*FNX,FNYEFF,EIGVL8*FNXY,
     1                FNX0,FNY0FF,FNXY0,CSLP8Y,MWAV8Y,NWAV8Y,
     1                FMA8Y,MLOC81,NLOC81,CSLP81,EIG8Y,PX1,PX2,1,
     1                ICUBIC(4),JCUBIC(4),IARBOC(4),ILOADS)
C END NOV 2003
C BEG JUN 1999
                    IF (NPRT.GE.1) WRITE(IFILE,'(A)')
     1                                ' Leaving ARBOCZ.  Label=9211'
C END JUN 1999
C BEG FEB 1996
                    IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
                    FNWAV8 = NWAV8Y
C BEG OCT 1998
                    EIG8YP = EIG8Y
                    IF (IMOD.EQ.0) THEN
                       CALL EIGMOD(CIRC,FNWAV8,B(1),
     1                   EIG8Y,ITUTOR,IFILE,CX(4,4,1),CSWIDE(4,4),
     1                   FSAFE2,EIGVL8*FNX,FNYEFF,EIGVL8*FNXY,
     1                   ICNTRL,INDX)
                       IF (NPRT.GE.2)
     1                    WRITE(IFILE,'(A,1P,E12.4,/,A,1P,E12.4)')
     1' Buckling load factor BEFORE knockdown for smeared stringers=',
     1  EIG8YP,
     1' Buckling load factor AFTER  knockdown for smeared stringers=',
     1  EIG8Y
                    ENDIF
C END OCT 1998
                   ENDIF
C
                   EIG8Z = EIG8Y
C BEG NOV 2003
                 ENDIF
                 IF (IMOD.EQ.1.AND.IFLT8A.EQ.1) THEN
                    EIG8Y = 0.
                    EIG8Z = 0.
                 ENDIF
C END NOV 2003
                 IF (IWIDE.EQ.0) THEN
C    Next, check buckling load for flat panel between rings. This
C    is needed because buckling of the imperfect panel cannot be at a
C    lower load factor than buckling of the flat panel...
                    IF (IMOD.EQ.0) THEN
                       CSLP8Z = 0.
                       MWAV8Z = 0.
                       NWAV8Z = 0.
                       FMA8Z = 0.
                    ENDIF
                    RRR = 100.*R
C BEG NOV 2003
                    IF (CIRCS.LT.CIRC) CIRC = CIRCS
C END NOV 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
                    IF (FFSLOC.GE.0.95) THEN
C BEG OCT 1998
                       IF (NPRT.GE.2) WRITE(IFILE,'(/,A,1P,E12.4,A)')
     1               ' Inter-ring buckling: smeared stringers, C11=',
     1                 CX(1,1,5),' ("FLAT" PANEL)'
C END OCT 1998
C BEG JUN 1999
                       IF (NPRT.GE.1) WRITE(IFILE,'(A)')
     1                                ' Entering ARBOCZ. Label=9210'
C END JUN 1999
C BEG NOV 2003
                       CALL ARBOCZ(9210,INDX,IMOD,IFILE,NPRT,XLNG,CIRC,
     1                  RRR,EIGVL8,ITUTOR,IREDUC,TEFF(1),TXX,GTX(1,5),
     1                  CX(1,1,5),0.,EIGVL8*FNX,FNYEFF,EIGVL8*FNXY,
     1                  FNX0,FNY0FF,FNXY0,CSLP8Z,MWAV8Z,NWAV8Z,
     1                  FMA8Z,MLOC81,NLOC81,CSLP81,EIG8Z,PX1,PX2,1,
     1                  ICUBIC(5),JCUBIC(5),IARBOC(5),ILOADS)
C END NOV 2003
C BEG JUN 1999
                       IF (NPRT.GE.1) WRITE(IFILE,'(A)')
     1                                ' Leaving ARBOCZ.  Label=9210'
C END JUN 1999
C BEG FEB 1996
                       IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
                       FNWAV8 = NWAV8Z
C BEG OCT 1998
                       EIG8ZP = EIG8Z
                       IF (IMOD.EQ.0) THEN
                         CALL EIGMOD(CIRC,FNWAV8,B(1),
     1                   EIG8Z,ITUTOR,IFILE,CX(4,4,1),CX(4,4,5),
     1                   FSAFE2,EIGVL8*FNX,FNYEFF,EIGVL8*FNXY,
     1                   ICNTRL,INDX)
                          IF (NPRT.GE.2)
     1                       WRITE(IFILE,'(A,1P,E12.4,/,A,1P,E12.4)')
     1' Buckling load factor BEFORE knockdown for smeared stringers=',
     1  EIG8ZP,
     1' Buckling load factor AFTER  knockdown for smeared stringers=',
     1  EIG8Z
                       ENDIF
C END OCT 1998
                    ELSE
C BEG OCT 1998
                       IF (NPRT.GE.2) WRITE(IFILE,'(/,A,1P,E12.4,A)')
     1               ' Inter-ring buckling: smeared stringers, C11=',
     1                 CSWIDE(1,1),' ("FLAT" PANEL)'
C END OCT 1998
C BEG JUN 1999
                       IF (NPRT.GE.1) WRITE(IFILE,'(A)')
     1                                ' Entering ARBOCZ. Label=9210'
C END JUN 1999
C BEG NOV 2003
                       CALL ARBOCZ(9210,INDX,IMOD,IFILE,NPRT,XLNG,CIRC,
     1                  RRR,EIGVL8,ITUTOR,IREDUC,TEFF(1),TXX,GTX(1,5),
     1                  CSWIDE,0.,EIGVL8*FNX,FNYEFF,EIGVL8*FNXY,
     1                  FNX0,FNY0FF,FNXY0,CSLP8Z,MWAV8Z,NWAV8Z,
     1                  FMA8Z,MLOC81,NLOC81,CSLP81,EIG8Z,PX1,PX2,1,
     1                  ICUBIC(5),JCUBIC(5),IARBOC(5),ILOADS)
C END NOV 2003
C BEG JUN 1999
                       IF (NPRT.GE.1) WRITE(IFILE,'(A)')
     1                                ' Leaving ARBOCZ.  Label=9210'
C END JUN 1999
C BEG FEB 1996
                       IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
                       FNWAV8 = NWAV8Z
C BEG OCT 1998
                       EIG8ZP = EIG8Z
                       IF (IMOD.EQ.0) THEN
                         CALL EIGMOD(CIRC,FNWAV8,B(1),
     1                   EIG8Z,ITUTOR,IFILE,CX(4,4,1),CSWIDE(4,4),
     1                   FSAFE2,EIGVL8*FNX,FNYEFF,EIGVL8*FNXY,
     1                   ICNTRL,INDX)
                          IF (NPRT.GE.2)
     1                       WRITE(IFILE,'(A,1P,E12.4,/,A,1P,E12.4)')
     1' Buckling load factor BEFORE knockdown for smeared stromgers=',
     1  EIG8ZP,
     1' Buckling load factor AFTER  knockdown for smeared stringers=',
     1  EIG8Z
                       ENDIF
C END OCT 1998
                    ENDIF
                    IF (NPRT.GE.2)
     1                 WRITE(IFILE,1478) EIG8X,EIG8Y,EIG8Z
 1478               FORMAT(/' INTER-RING BUCKLING LOAD FACTORS FROM'/
     1               '  THE ARBOCZ EQUATIONS FOR THE FOLLOWING PANELS:'/
     1                   '   CURVED  PERFECT  PANEL: EIG8X=',1PE12.4/
     1                   '   CURVED IMPERFECT PANEL: EIG8Y=',1PE12.4/
     1                   '    FLAT   PERFECT  PANEL: EIG8Z=',1PE12.4/
     1              ' THE ARBOCZ KNOCKDOWN FACTOR IS COMPUTED WITH USE'/
     1              ' OF THE MAXIMUM OF EIG8Y AND EIG8Z.')
                    IF (EIG8Z.GT.EIG8Y) THEN
C BEG NOV 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
                       IF (IMOD.EQ.0) IFLT8A = 1
                       IF (IMOD.EQ.0.AND.NPRT.GE.2)
     1                    WRITE(IFILE,'(A,I2)')
     1                 ' "FLAT" eigenvalue > "curved", IFLT8A=',IFLT8A
C END NOV 2003
                       EIG8Y  = EIG8Z
                       CSLP8Y = CSLP8Z
                       MWAV8Y = MWAV8Z
                       NWAV8Y = NWAV8Z
                       FMA8Y  = FMA8Z
C BEG OCT 1998
                       EIG8YP = EIG8ZP
C END OCT 1998
                    ENDIF
                 ENDIF
C
C    Knockdown factor from Arbocz' implementation of Koiter Special Theory:
C BEG OCT 1998
                 IF (IMOD.EQ.0) THEN
                    FKNKAL(2) = EIG8YP/EIG8XP
                    IF (FKNKAL(2).GT.1.0) FKNKAL(2) = 1.0
                 ENDIF
C END OCT 1998
                 FKNKOI(2) = EIG8Y/EIG8X
                 IF (FKNKOI(2).GT.1.0) FKNKOI(2) = 1.0
C BEG NOV 2003
                 IF (IMOD.EQ.0) THEN
                    FKNMLS = 1.0
                    IF (FKNKAL(2).GT.FKNKOI(2))
     1                 FKNMLS = FKNKAL(2)/FKNKOI(2)
                 ENDIF
C END NOV 2003
C BEG OCT 1998
                 IF (ISTIF(2).EQ.0) THEN
                    FKNKOI(1) = FKNKOI(2)
                    FKNKAL(1) = FKNKAL(2)
                    IF (IMOD.EQ.0) THEN
                       FKNMLT = 1.0
                       IF (FKNKAL(1).GT.FKNKOI(1))
     1                    FKNMLT = FKNKAL(1)/FKNKOI(1)
C BEG NOV 2003
                       FKNMLS = 1.0
C END NOV 2003
                    ENDIF
                 ENDIF
C END OCT 1998
                 MA8X = FMA8X
                 CSLPPX = CSLP8X
                 IF (ABS(CSLP8X).GT.0.0) CSLPPX = 1./CSLP8X
                 CSLPPY = CSLP8Y
                 IF (ABS(CSLP8Y).GT.0.0) CSLPPY = 1./CSLP8Y
                 IF (NPRT.GE.2) WRITE(IFILE,9212)
     1                              EIG8X,MWAV8X,NWAV8X,CSLPPX,
     1                              EIG8Y,MWAV8Y,NWAV8Y,CSLPPY,
C BEG NOV 2003 
     1                              FKNKOI(2)
C23456789012345678901234567890123456789012345678901234567890123456789012
 9212         FORMAT(/' INTER-RING BUCKLING FROM 1992 ARBOCZ EQ.(3.61)'/
     1    ' RATIO (LOAD FACTOR FROM ARBOCZ)/(LOAD FACTOR FROM PANDA2):'/
     1      '  Perfect shell inter-ring buck. load(m,n,slope)=',
     1                             1PE12.4,'(',I3,',',I3,',',1PE9.2,')'/
     1      '  Imperf. shell inter-ring buck. load(m,n,slope)=',
     1                             1PE12.4,'(',I3,',',I3,',',1PE9.2,')'/
     1'  Knockdown factor from Koiter Special Theory (K.S.T.)=',1PE12.4)
C
              IF (IMOD.EQ.0.AND.NPRT.GE.2)
     1                                  WRITE(IFILE,9213) FKNKAL(2)
 9213            FORMAT(
     1'  Knockdown from K.S.T. without the use of EIGMOD     =',1PE12.4)
C END NOV 2003
C
               ENDIF
C BEG NOV 2003
               CIRC = CIRCSS
C END NOV 2003
C
               WYYGEN = WYYGNS
               KOUNT8 = 0
               WYYAMP = 0.
               EILOC8 = 0.
 1210          CONTINUE
C
C  Begin iteration loop for inter-ring buckling of the imperfect panel.
C  The inter-ring imperfection is amplified by the factor WYYAMP, which
C  increases from iteration to iteration in this loop.
               KOUNT8 = KOUNT8 + 1
C BEG DEC 2005
C23456789012345678901234567890123456789012345678901234567890123456789012
               IF (NPRT.GE.0) THEN
                  IF (KOUNT8.EQ.1) WRITE(IFILE,'(/,/,A,/,A,/,A,/,A)')
     1' ************ ITERATION LOOP FOR IMPERFECT PANEL ***********',
     1' Begin iteration loop for inter-ring buckling of the imperfect',
     1' panel. The inter-ring imperfection is amplified by the factor',
     1' WYYAMP, which increases from iteration to iteration.'
                  WRITE(IFILE,'(/,A,I2,A)')
     1' *************** ITERATION NUMBER ',KOUNT8,' *****************'
               ENDIF
C END DEC 2005
               IF (DENOM.LT.0.33333) DENOM = .33333
               IF (IMOD.EQ.1) THEN
C  For the analysis of the perturbed design (IMOD=1), the new
C  amplification factor for the inter-ring imperfection, WYYAMP, is given by:
                  WYYAMP = (WYYAM2(2)-1.)*EIG81X/EILC81 + 1.0
C  in which WYYAM2(2) is the amplification factor for the unperturbed
C  design (IMOD=0) and FACIM2 and FACM2Y are calculated above.
                  IF (WYYAMP.GT.6.0) WYYAMP = 6.0
                  IF (WYYAMP.LT.1.0) WYYAMP = 1.0
                  IF (WYYAMP.EQ.1.0.AND.WYYAM2(2).GT.3.99)
     1                                             WYYAMP=WYYAM2(2)
                  IF (NPRT.GE.2) WRITE(IFILE,'(A,1PE12.4,A,1PE12.4)')
     1             ' UNPERTURBED DESIGN WYYAM2(2)=',WYYAM2(2),
     1             ', PERTURBED DESIGN WYYAMP=',WYYAMP
                  WYYAM3(2) = WYYAMP
               ENDIF
               WYYAMS = WYYAMP
               IF (IMOD.EQ.0) IAMPLD(2) = 0
               IF (IMOD.EQ.0) THEN
                  ICONV  = 0
                  IRATTR = 1
C BEG APR 1998
C                 IF (FNX.LT.0.0.AND.NLOC81.GE.2) THEN
                  IF (FNX.LT.0.0.AND.(NLOC81.GE.2.OR.IFLAT.EQ.0)) THEN
C END APR 1998
                     IRATTR = 0
C BEG JULY 2006
C                    IF (RATRES.GE.RATHI) THEN
                     IF (RATRES.GE.RATHI.AND.INOT4(IRMOD).EQ.0) THEN
C END JULY 2006
                        IRATTR = 1
C
C  If the applied loading is predominately axial compression (Nx),
C  then set the switch IAMPLD to unity and the local imperfection
C  amplification factor WYYAMP to 4.0 and transfer to 1213. If
C  IAMPLD is unity there is no iteration for local buckling of
C  the imperfect panel.
                        IAMPLD(2) = 1
                        WYYAMP = 4.0
                        GO TO 1213
                     ENDIF
                  ENDIF
C  Calculate WYYAMP for the current, unperturbed (IMOD=0) design...
C  (The following formula for WYYAMP is for hyperbolic growth).
                  WYYAMP = 1. + 1./DENOM
                  AMPITR(KOUNT8) = WYYAMP
                  IF (KOUNT8.EQ.4) THEN
C  Get new value of WYYAMP by quadratic extrapolation. The maximum
C  value of WYYAMP permitted is 4.0.
                     Y1WYY = AMPITR(KOUNT8-2) - AMPITR(KOUNT8-1)
                     Y3WYY = AMPITR(KOUNT8)   - AMPITR(KOUNT8-1)
                     Y1Y3  = Y1WYY + Y3WYY
                     IF (Y1Y3.GE.0.) THEN
                        WYYAMP = 4.0
                     ELSE
                        WYYAMP = -0.125*(Y1WYY - Y3WYY)**2/Y1Y3
     1                                        + AMPITR(KOUNT8-1)
                        IF (WYYAMP.GT.4.0) WYYAMP = 4.0
                     ENDIF
                  ENDIF
               ENDIF
 1213          CONTINUE
               WYYDIF = 1.0
               IF (IMOD.EQ.0) WYYDIF = ABS(WYYAMS/WYYAMP - 1.)
               IF (WYYDIF.GT.0.01.AND.KOUNT8.LE.4) THEN
C
                  IF (NPRT.GE.1) WRITE(IFILE,'(/,A)')
     1'*** BEGIN BUCPAN (IMPERF. SENSITIVITY FOR IMPERFECT PANEL) ***'
C  NEXT, GET, FROM A PANDA-TYPE (CLOSED-FORM) ANALYSIS, THE INTER-RING
C  BUCKLING LOAD FACTOR, EILOC8,  AND MODE SHAPE, (MLOC8,NLOC8,CSLOP8),
C  FOR THE IMPERFECT PANEL (WITH REDUCED STIFFNESS SKIN IF THE FACTOR
C  FFSLOC IS LESS THAN UNITY, WHICH IT IS IF IEFFSK = 1, see above).
C  MLOC8  = number of axial halfwaves in the inter-ring buckling mode
C           of the imperfect panel
C  NLOC8  = number of circ. halfwaves in the inter-ring buckling mode
C           of the imperfect panel
C  CSLOP8 = slope  of the nodal lines in the inter-ring buckling mode
C           of the imperfect panel
C  WYYAMP = current value of inter-ring imperfection amplification factor
C
 9220             CONTINUE
                  ILABEL=9220
                  IF (NPRT.GE.1) WRITE(IFILE,*)
     1                         ' LABEL NO. IN STRIMP=',ILABEL
C BEG NOV 2003
C BEG DEC 2003
C                 FNYEFF = FNY*FACNY
C                 FNY0FF = FNY0*FACNY0
                  FNYEFF = (FNY +DFNYPA)*FACNY
                  FNY0FF = (FNY0+DFNYPB)*FACNY0
C END DEC 2003
                  IF (INTPRS.EQ.1) THEN
                     IF (ISTIF(2).EQ.0) THEN
                        FNYEFF = FNY + DFNYPA
                        IF (FNYEFF.GT.0.) FNYEFF = 0.
                        FNY0FF = FNY0 + DFNYPB
                        IF (FNY0FF.GT.0.) FNY0FF = 0.
                     ENDIF
                     HOOPSV = RESULT(2,1,1)
                     DELSKV = DELSKN(2,1,1)
                     RESFXS = RESTOT(2,1,1)
                     IF (RESFXS.GT.0.) THEN
                         RESULT(2,1,1) = RESULT(2,1,1) - RESTOT(2,1,1)
                         RESTOT(2,1,1) = 0.
                     ENDIF
                     RSKINY = RESULT(2,1,1) + DELSKN(2,1,1)
                     RSKNYF = RESTOT(2,1,1)
                     PPNY   = RSKINY - RSKNYF
                     IF (PPNY.GT.0.) THEN
                        RESULT(2,1,1) = 0.
                        DELSKN(2,1,1) = 0.
                        RESTOT(2,1,1) = 0.
                     ENDIF
                  ENDIF
                  CALL BUCPAN(IFILE,IMOD,JJJ,ICONST,CONSTR,WORDB,ISTIF,
     1             IREDUC,KOITER,LENMOD,CONMAX,FSGEN,FSPAN,FFSLOC,
     1             EIGGG8,IPRELM,IPOINC,INUMTT,FKNOCK,IGENRL,CSLOP8,
     1             EILOC8,MLOC8,ISKIN,MSHER8,NSHER8,MNOSH8,NNOSH8,
     1             ITUTOR,IWIDE,IQUICK,FNX,FNYEFF,FNXY,FNX0,FNY0FF,
     1             FNXY0,FNXP0,FNY3,FNXYP0,FNXPL0,FNY4,FNXYPL,NLOC8,
     1             ITIP,IABP,1,EPSLOD(4),RWBEIG,RWBTOT,ICASE,FSBSTR,1,
     1             TLOC8,1,2,1,9220,ICD7D,ICD8,ICD8,0,ILOADS,MORCON,
     1             NCASES,31)
                  IF (INTPRS.EQ.1) THEN
                     RESULT(2,1,1) = HOOPSV
                     DELSKN(2,1,1) = DELSKV
                     RESTOT(2,1,1) = RESFXS
                  ENDIF
C END NOV 2003
                  IF (IRESTY.EQ.1) GO TO 2222
C
                  IF (EILOC8.EQ.1.) EILOC8 = 0.99999
                  FACIM1 = 1./(EILOC8 - 1.)
                  IF (FACIM1.LE.0.0.OR.FACIM1.GT.100.) FACIM1 = 100.
C  In order to compute a new value of WYYAMP, a modified buckling load
C  factor, EILOCC, is used, as follows:
C BEG MAY 2007
                  FMULT2 = 1.0
                  IF (ICONSV.EQ.-1) FMULT2 = 10.0
                  EILOCC =(FACIM1*EILOC8 +FACIM2*FMULT2*EILC81)/
     1                                            (FACIM1+FMULT2*FACIM2)
C END MAY 2007
                  DENOM = EILOCC - 1.
C23456789012345678901234567890123456789012345678901234567890123456789012
                  IF (NPRT.GE.0) WRITE(IFILE,'(A,I2,/,
     1            A,1PE12.4,A,I3,A,1PE10.3,A,I3,A,1PE10.3,A,1PE10.3,A)')
     1         ' INTER-RING BUCKLING EIGENV. OF IMPERFECT PANEL, IMOD=',
     1             IMOD,
     1           '   EILOC8(m,dm,n,dn,s)=',EILOC8,'(',MLOC8,',',DMWAVE,
     1           ',',  NLOC8,',',DNWAVE,',',CSLOP8,')'
                  IF (NPRT.GE.0) WRITE(IFILE,'(A,1PE12.4)')
     1      ' INTER-RING IMPERFECTION AMPLITUDE FACTOR, WYYAMP=',WYYAMP
C BEG NOV 2003
C BEG MAR 2007
C                 IF (NPRT.GE.2) WRITE(IFILE,
                  IF (NPRT.GE.0) WRITE(IFILE,
C END MAR 2007
C BEG MAY 2007
     1 '(A,A,A,1P,E12.4,/,A,/,A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4)')
     1 ' EIGEFF =FACIM1*EILOC8 +FACIM2*FMULT2*EILC81)/',
     1 '(FACIM1+FMULT2*FACIM2)',
C    1 ' EIGEFF =(FACIM1*EILOC8 +FACIM2*EILC81)/(FACIM1+FACIM2)',
C END MAY 2007
     1             '=',EILOCC,
     1             ' in which FACIM1, FACIM2, and EILC81 are given by:',
     1             ' FACIM1=1./(EILOC8 - 1.) =',FACIM1,
     1             ' FACIM2=1./(EILC81 - 1.) =',FACIM2,
     1             ' EILC81                  =',EILC81
C END NOV 2003
C BEG FEB 2006
C BEG MAY 2007
                  IF (NPRT.GE.0) WRITE(IFILE,'(A,1P,E12.4)')
     1             ' FMULT2                  =',FMULT2
C END MAY 2007
C  The method above for computing EIGEFF is somewhat unconservative,
C  according to results from STAGS. Therefore, we use the simpler
C  and physically more attractive formula:
C23456789012345678901234567890123456789012345678901234567890123456789012
C                 EILOCC = EILOC8
C                 DENOM = EILOCC - 1.
C                 IF (NPRT.GE.2) WRITE(IFILE,'(/,A,/,A,1P,E12.4)')
C    1          ' New value of EIGEFF (STAGS comparison, FEB.2006)=',
C    1          ' EIGEFF = EILOC8 =', EILOCC
C END FEB 2006
                  IF (IMOD.EQ.0.AND.WYYAMP.GT.0.0.AND.WYYAMP.LT.3.99
     1                  .AND.KOUNT8.LE.3.AND.IAMPLD(2).EQ.0
     1                  .AND.ICONV.EQ.0) GO TO 1210
               ENDIF
C              End of (WYYDIF.GT.0.01.AND.KOUNT8.LE.4) condition.
C
               IF (IRATTR.EQ.0.AND.IMOD.EQ.0.AND.WYYAMP.LT.3.99
     1               .AND.RATRES.GT.RATLO.AND.RATRES.LT.RATHI) THEN
                  ACOEF = (4.0 - WYYAMP)/(RATHI - RATLO)
                  BCOEF = 4.0 - ACOEF*RATHI
                  WYYAMP = ACOEF*RATRES + BCOEF
                  IF (WYYAMP.GT.4.0) WYYAMP = 4.0
                  IF (WYYAMP.LT.1.0) WYYAMP = 1.0
                  IRATTR = 1
                  ICONV = 1
C BEG DEC 2005
                  IF (NPRT.GE.2) WRITE(IFILE,'(/,A,I2,A)')
     1' ******** ONE LAST TIME: ITERATION NUMBER',KOUNT8+1,' **********'
C23456789012345678901234567890123456789012345678901234567890123456789012
C END DEC 2005
                  GO TO 1213
               ENDIF
C  End of the iteration loop for the inter-ring buckling load factor,
C  EILOC8, of the imperfect panel.
               IF (NPRT.GE.1) WRITE(IFILE,*)
     1'*** END BUCPAN (IMPERF. SENSITIVITY FOR SMEARED STRINGERS) *****'
               CALL MOVER(0.,0,DELFCE,1,8)
               CALL MOVER(0.,0,DELISO,1,12)
               CALL MOVER(0.,0,DELSKN,1,12)
C  The knockdown factor for inter-ring instability, FKNOCK(8), is taken
C  to be the ratio of the buckling load factors for the imperfect and
C  "perfect" panels, EILOC8 and EILC81, respectively. ( NOTE: EILC81 is
C  computed accounting for the redistribution of stress resultants over
C  the cross section of skin and stiffeners caused by bending in the
C  overall imperfection mode. Therefore, EILC81 does not represent the
C  buckling load of the perfect panel because part of the effect of
C  imperfections is included in its computation). EIGC81 is computed
C  neglecting the effect of curvature change in the portion of the panel
C  between adjacent rings. Therefore, the knockdown factor, FKNOCK(8),
C  accounts only for the effect of geometric imperfection, not redistribution
C  of the stress resultants. However, the effect of both redistribution
C  of stress resultants and geometric imperfection is accounted for
C  in the PANDA2 analysis because the knockdown factor FKNOCK(8) is
C  applied later to a local buckling load factor in which the effect
C  of redistribution of stress resultants over the skin-stiffener
C  cross section(s) has already been accounted for.
C
               FKNOCK(8) = EILOC8/EILC81
               IF (FKNOCK(8).GT.1.0.OR.FKNOCK(8).LE.0.) FKNOCK(8) =1.0
               IF (IMOD.EQ.0) THEN
                  WYYAM2(2) = WYYAMP
                  IF (ITYPE.EQ.1.AND.JJJ.GE.1)
     1                  WYYAMY(JJJ,ILOADS,ICASE)=WYYAMP
               ENDIF
C
C  DNWAV8 and DMWAV8 are the fractional circumferential and axial
C  halfwaves, respectively, in the inter-ring buckling mode of the
C  imperfect panel.  By "fractional" is meant a non-integral number...
C  (see section on general buckling for explanation).
               DNWAV8 = DNWAVE
               DMWAV8 = DMWAVE
               DNWAVU = DNWAV8
               DMWAVU = DMWAV8
               NLOCU  = NLOC8
               MLOCU  = MLOC8
               CSLOPU = CSLOP8
C BEG MAR 2005
               IPERFT = 0
C BEG MAR 2007
               IF (IMOD.EQ.0) THEN
                 FCOM81 = FLOAT(NLOC81) + DNWV81
                 FCOM8  = FLOAT(NLOC8)  + DNWAV8
               ENDIF
C              IF (NLOC81.GT.NLOC8) THEN
C BEG MAY 2007
C              IF (FCOM81.GT.FCOM8) THEN
               IF (FCOM81.GT.FCOM8.OR.ICONSV.EQ.-1) THEN
C END MAY 2007
C END MAR 2007
                  IPERFT = 1
                  DNWAVU = DNWV81
                  DMWAVU = DMWV81
                  NLOCU  = NLOC81
                  MLOCU  = MLOC81
                  CSLOPU = CSLP81
                  ICD8   = ICD81
               ELSE
                  IF (IXIMPF(ILOADS).EQ.1.AND.MLOC81.GE.1) THEN
                    IF ((MLOC8/MLOC81).GE.2) THEN
C BEG AUG 2005
                       AXLINP = AXLWAV(ILOADS)
                       AXLTST = AXIAL/FLOAT(MLOC8)
C END AUG 2005
                       AXLRAT = ABS(AXLTST/AXLINP)
                       IF (AXLRAT.LE.0.5) THEN
                          IPERFT = 2
                          DNWAVU = DNWV81
                          DMWAVU = DMWV81
                          NLOCU  = NLOC81
                          MLOCU  = MLOC81
                          CSLOPU = CSLP81
                          ICD8   = ICD81
                       ENDIF
                    ENDIF
                  ENDIF
               ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG AUG 2005
               IF (NPRT.GE.0.AND.IPERFT.EQ.2) THEN
                 WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' *** NOTE: Although the number of circumfer. halfwaves in the',
     1'     inter-ring buckling mode of the PERFECT panel is less than',
     1'      or equal to that for the IMPERFECT panel, since the user',
     1'      has elected to allow PANDA2 to change the amplitude of',
     1'      the inter-ring buckling modal imperfection and since the',
     1'      axial wavelength of the buckling mode of the IMPERFECT',
     1'      shell is less than half that of the PERFECT shell, we use',
     1'      the PERFECT panel mode for computation of deformations',
     1'      Wxx, Wyy, Wxy in SUBROUTINE CURIMP.'
C END AUG 2005
C BEG MAR 2007
                 WRITE(IFILE,'(A,/,A,/,A)')
     1        ' ICD81, ICD8  = indicators for coordinate direction',
     1        '                in which the inter-ring portion of the',
     1        '                panel is longest.'
C END MAR 2007
                 WRITE(IFILE,'(A,/,A,I3,A,1P,E10.2,A,I3,A,1P,E10.2,A,
     1                          1P,E10.2,A,I2,A)')
     1' Inter-ring buckling mode for the PERFECT panel (PANDA theory):',
     1        ' (m=',MLOC81,', dm=',DMWV81,', n=',NLOC81,', dn=',
     1           DNWV81,', slope=',CSLP81,', ICD81=',ICD81,')'
                 WRITE(IFILE,'(A,/,A,I3,A,1P,E10.2,A,I3,A,1P,E10.2,A,
     1                          1P,E10.2,A,I2,A)')
     1' Inter-ring buckling mode for IMPERFECT panel (PANDA theory):',
     1        ' (m=',MLOC8,', dm=',DMWAV8,', n=',NLOC8,', dn=',
     1           DNWAV8,', slope=',CSLOP8,' ICD8=',ICD8,')'
               ENDIF
C
C23456789012345678901234567890123456789012345678901234567890123456789012
               IF (NPRT.GE.0.AND.IPERFT.EQ.1) THEN
C BEG MAY 2007
                 WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A)')
     1' *** NOTE: The number of circumfer. halfwaves in the inter-ring',
     1'           buckling mode of the PERFECT panel is greater',
     1'           than that for the IMPERFECT panel or ICONSV=-1  .',
     1'           Hence,the PERFECT panel mode is used for computation',
     1'           of deformations Wxx, Wyy, Wxy in SUBROUTINE CURIMP.'
C END MAY 2007
C BEG MAR 2007
                 WRITE(IFILE,'(A,/,A,/,A)')
     1        ' ICD81, ICD8  = indicators for coordinate direction',
     1        '                in which the inter-ring portion of the',
     1        '                panel is longest.'
C END MAR 2007
                 WRITE(IFILE,'(A,/,A,I3,A,1P,E10.2,A,I3,A,1P,E10.2,A,
     1                          1P,E10.2,A,I2,A)')
     1' Inter-ring buckling mode for the PERFECT panel (PANDA theory):',
     1        ' (m=',MLOC81,', dm=',DMWV81,', n=',NLOC81,', dn=',
     1           DNWV81,', slope=',CSLP81,', ICD81=',ICD81,')'
                 WRITE(IFILE,'(A,/,A,I3,A,1P,E10.2,A,I3,A,1P,E10.2,A,
     1                          1P,E10.2,A,I2,A)')
     1' Inter-ring buckling mode for IMPERFECT panel (PANDA theory):',
     1        ' (m=',MLOC8,', dm=',DMWAV8,', n=',NLOC8,', dn=',
     1           DNWAV8,', slope=',CSLOP8,' ICD8=',ICD8,')'
               ENDIF
C
C23456789012345678901234567890123456789012345678901234567890123456789012
               IF (NPRT.GE.0.AND.IPERFT.EQ.0) THEN
                 WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A)')
     1' *** NOTE: The number of circ. halfwaves in the inter-ring',
     1'           buckling mode of the PERFECT panel is less than or',
     1'           equal to that for the IMPERFECT panel. Therefore,',
     1'           the IMPERFECT panel mode is used for computation',
     1'           of deformations Wxx, Wyy, Wxy in SUBROUTINE CURIMP.'
C BEG MAR 2007
                 WRITE(IFILE,'(A,/,A,/,A)')
     1        ' ICD81, ICD8  = indicators for coordinate direction',
     1        '                in which the inter-ring portion of the',
     1        '                panel is longest.'
C END MAR 2007
                 WRITE(IFILE,'(A,/,A,I3,A,1P,E10.2,A,I3,A,1P,E10.2,A,
     1                          1P,E10.2,A,I2,A)')
     1' Inter-ring buckling mode for the PERFECT panel (PANDA theory):',
     1        ' (m=',MLOC81,', dm=',DMWV81,', n=',NLOC81,', dn=',
     1           DNWV81,', slope=',CSLP81,', ICD81=',ICD81,')'
                 WRITE(IFILE,'(A,/,A,I3,A,1P,E10.2,A,I3,A,1P,E10.2,A,
     1                          1P,E10.2,A,I2,A)')
     1' Inter-ring buckling mode for IMPERFECT panel (PANDA theory):',
     1        ' (m=',MLOC8,', dm=',DMWAV8,', n=',NLOC8,', dn=',
     1           DNWAV8,', slope=',CSLOP8,' ICD8=',ICD8,')'
               ENDIF
C END MAR 2005
               DNWV8P = DNWAVU
               DMWV8P = DMWAVU
               NLOC8P = NLOCU
               MLOC8P = MLOCU
               CSLP8P = CSLOPU
               IF (IRMOD.EQ.2) WIMPX = -WG2
               IF (IRMOD.EQ.3) WIMPX = -W0PAN
               FNPROD = ABS(FLOAT(NLOCU)+DNWAVU)*PI/CIRC
C BEG MAR 1996
               IF (IBEAM.EQ.1) FNPROD = 1.E-10
C END MAR 1996
               FMPROD = ABS(FLOAT(MLOCU)+DMWAVU)*PI/(B(2)-W2(2))
C  Next, determine whether the user-supplied initial inter-ring buckling
C  modal imperfection component is too large and therefore should be
C  automatically reduced by the factor AMPMD8. It is assumed in PANDA2
C  that no shell will have a geometric initial imperfection that gives
C  rise to an out-of-plane rotation of the shell wall of more than 0.1
C  radian. The assumption is that such large initial imperfections
C  would be easily detected and shells with them would be refabricated.
C  The amplitude factor, AMPMD8, is therefore set here so that the
C  resulting initial inter-ring buckling modal imperfection will cause
C  out-of-plane shell rotations of 0.1 radian or less.
C BEG NOV 2003
               WALRT8 = WIMPX*MAX(FMPROD,FNPROD)
C END NOV 2003
C BEG AUG 2005
               AMPTST = 1.0
               IF (ABS(WIMPX).GT.0.0.AND.FNPROD.GT.0.0
     1                               .AND.FMPROD.GT.0.0)
     1            AMPTST = ABS(0.1/WIMPX)*MIN(1./FMPROD,1./FNPROD)
               IF (IMOD.EQ.0.AND.NPRT.GE.0)
     1          WRITE(IFILE,'(/,A,1P,E12.4)')
     1        ' (0.1 radian)/(shell wall rotation), AMPTST =',AMPTST
               AMPMD8 = AMPTST
               IF (IXIMPF(ILOADS).NE.0.AND.IMOD.EQ.0
     1                                .AND.NPRT.GE.0.AND.AMPTST.LT.1.0)
     1    WRITE(IFILE,'(/,A,/,A,I3,A,/,A,/,A,/,A,1PE12.4,/,A,/,A,/)')
     1     ' ******* WARNING ******* WARNING ******* WARNING *********',
     1  ' THERE ARE MANY CIRCUMFERENTIAL HALFWAVES (NLOC81=',NLOC81,')',
     1  ' IN THE INTER-RING BUCKLING MODE.  THE MAXIMUM IMPERFECTION',
     1  ' WALL ROTATION OF 0.1 RADIAN HAS BEEN EXCEEDED. THE PRESENT',
     1  ' INTER-RING IMPERFECTION AMPLITUDE, Wimp(inter-ring)=',
     1    ABS(WIMPX),
     1  ' WILL BE REDUCED BY THE FACTOR, AMPTST, LISTED JUST ABOVE',
     1  ' ************* END WARNING *********** END WARNING **********'
C23456789012345678901234567890123456789012345678901234567890123456789012
C END AUG 2005
               IF (AMPMD8.GT.1.0) AMPMD8 = 1.0
C BEG AUG 1996
C   Do not change initial imperfection amplitude because user says NO:
               IF (IXIMPF(ILOADS).EQ.0) AMPMD8 = 1.0
C END AUG 1996
C BEG DEC 2004
C BEG AUG 2005 (comment out "if (intgen)...")
C              IF (INTGEN.EQ.0) THEN
C END AUG 2005
                  FMLOC8 = FLOAT(MLOCU)+DMWAVU
C BEG AUG 2005
                  AXLINP = B(2) 
                  IF (INTGEN.EQ.0) AXLINP = AXLWAV(ILOADS)
                  AXLTST = B(2) 
                  IF (FMLOC8.GE.1.) AXLTST = B(2)/FMLOC8
C END AUG 2005
                  AXLRAT = ABS(AXLTST/AXLINP)
                  IF (AXLRAT.LT.AMPMD8) AMPMD8 = AXLRAT
                  IF (AMPMD8.GT.0.9999.AND.AXLRAT.GT.1.0) AMPMD8=AXLRAT
C   Do not change initial imperfection amplitude because user says NO:
                  IF (IXIMPF(ILOADS).EQ.0) AMPMD8 = 1.0
C BEG AUG 2005
C              ENDIF  (comment out ENDIF)
C END AUG 2005
C23456789012345678901234567890123456789012345678901234567890123456789012
C END DEC 2004
C BEG MAR 2004
C BEG AUG 2005
               IF (IXIMPF(ILOADS).NE.0.AND.NPRT.GE.0
     1                                .AND.IMOD.EQ.0.AND.AXLRAT.LT.1.0)
C END AUG 2005
     1         WRITE(IFILE,'(/,A,/,A,/,A,1P,E12.4,/,A,E12.4,/,A,E12.4)')
     1    ' Inter-ring imperfection amplitude is modified because the',
     1    ' critical buckling mode has a shorter axial halfwavelength',
     1    ' than that specified by the user:            AXLINP=',AXLINP,
     1    ' Critical buckling mode axial halfwavelength,AXLTST=',AXLTST,
     1    ' Imperfection amplitude is reduced by factor,AMPMD8=',AMPMD8
C END MAR 2004
C BEG AUG 2005
               IF (IXIMPF(ILOADS).NE.0.AND.NPRT.GE.0
     1                                .AND.IMOD.EQ.0.AND.AMPMD8.GT.1.0)
     1         WRITE(IFILE,'(/,A,/,A,/,A,1P,E12.4,/,A,E12.4,/,A,E12.4)')
     1    ' Inter-ring imperfection amplitude is modified because the',
     1    ' critical buckling mode has a longer axial halfwavelength',
     1    ' than that specified by the user:            AXLINP=',AXLINP,
     1    ' Critical buckling mode axial halfwavelength,AXLTST=',AXLTST,
     1  ' Imperfection amplitude is increased by factor,AMPMD8=',AMPMD8
               IF (IXIMPF(ILOADS).NE.0.AND.AMPTST.LT.AMPMD8) THEN
                  IF (IMOD.EQ.0.AND.NPRT.GE.0)
     1            WRITE(IFILE,'(A,/,A,1P,E12.4,A,1P,E12.4)')
     1          ' The "0.1 radian" rule governs. Imperfection',
     1          ' amplitude is now reduced from ',AMPMD8,' to ',AMPTST
                  AMPMD8 = AMPTST
               ENDIF

C END AUG 2005
               FACIM3 = (ABS(1./EILOCC))**1
               IF (FACIM3.LT.1.0) FACIM3 = 1.0
C              AMWIMP = AMPMD8*FACIM3*WIMPX
               AMWIMP = AMPMD8*WIMPX
C BEG DEC 2001
               IF (WYYGNS.NE.0.0) THEN
                  WYYPAN =
     1               ABS(WYYAMP*AMWIMP*FNPROD**2)*(WYYGNS/ABS(WYYGNS))
               ELSE
                  IF (WIMPX.NE.0.0) THEN
                     WYYPAN =
     1                      WYYAMP*AMWIMP*FNPROD**2*(WIMPX/ABS(WIMPX))
                  ELSE
                     WYYPAN = WYYAMP*AMWIMP*FNPROD**2
                  ENDIF
               ENDIF
               WGARG = WG1
               IF (ISTIF(2).NE.0) WGARG = 0.
C BEG DEC 1995
C              IF (IMOD.EQ.0) THEN
               IF ((NPRT.GE.1.OR.JLAST.EQ.1).AND.IMOD.EQ.0) THEN
C END DEC 1995
                FNCYL = ABS(NLOC81*PI*ABS(R)/CIRC)
                NCYL  = FNCYL
C BEG JULY 1997
                IF (IFLAT.EQ.1) NCYL = 1
C END JULY 1997
C BEG DEC 2003
C BEG AUG 2005
                IF (IXIMPF(ILOADS).EQ.0.AND.NPRT.GT.-1.AND.
C END AUG 2005
     1     ((ABS(WIMPX).GT.(TX(1)/5.).AND.NCYL.GE.10).OR.AMPMD8.LT.1.0))
C END DEC 2003
     1   WRITE(IFILE,'(/,A,/,A,I3,A,/,A,/,A,/,A,1PE12.4,/,A,/,A,/,A,/)')
     1     ' ******* WARNING ******* WARNING ******* WARNING *********',
     1  ' THERE ARE MANY CIRCUMFERENTIAL HALFWAVES (NLOC81=',NLOC81,')',
     1  ' IN THE INTER-RING BUCKLING MODE OR THE MAXIMUM IMPERFECTION',
     1  ' WALL ROTATION OF 0.1 RADIAN HAS BEEN EXCEEDED. THE PRESENT',
     1  ' INTER-RING IMPERFECTION AMPLITUDE, Wimp(inter-ring)=',
     1    ABS(WIMPX),
     1  ' PLEASE CONSIDER REDUCING Wimp(inter-ring). YOUR DESIGN MAY',
     1  ' BE TOO CONSERVATIVE.',
     1  ' ************* END WARNING *********** END WARNING **********'
               ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
C
C  The inter-ring curvature changes and twist, Wxx, Wyy, Wxy,
C  of the imperfect panel are computed in SUBROUTINE CURIMP.
C  If there were no inter-ring buckling modal imperfection,
C  WXX8, WYY8, WXY8 would be zero. See above, in the section on
C  general buckling, for further explanation.
C
C23456789012345678901234567890123456789012345678901234567890123456789012
               IF (NPRT.GE.0) WRITE(IFILE,'(A,/,A,I2,A,/,A,1PE12.4,/,
     1         A,1PE12.4,/,A,1PE12.4,/,A,I5,/,A,1PE12.4,/,
     1         A,I5,/,A,1PE12.4,/,A,1PE12.4,/,A,1PE12.4)')
     1  ' QUANTITIES USED FOR INTER-RING BENDING OF IMPERFECT PANEL',
     1   ' (used for generation of WXX8,WYY8,WXY8), IMOD=',IMOD,':',
     1   '  Amplitude of overall ovalization,              WG1=',WGARG,
     1   '  Amplitude of inter-ring buckling modal imp.,AMWIMP=',AMWIMP,
     1   '  Effective load factor for inter-ring buck., EIGEFF=',EILOCC,
     1   '  Number of  axial halfwaves in inter-ring mode,   m=',MLOCU,
     1   '  Fractional axial halfwaves in inter-ring mode,  dm=',DMWAVU,
     1   '  Number of  circ. halfwaves in inter-ring mode,   n=',NLOCU,
     1   '  Fractional circ. halfwaves in inter-ring mode,  dn=',DNWAVU,
     1   '  Slope of nodal lines in inter-ring buck.mode,slope=',CSLOPU,
     1   '  Additional amplitude factor,                FACIM3=',FACIM3
C BEG AUG 2005
               IF (NPRT.GE.0) THEN
                WMPAMP = 1./ABS(EILOCC - 1.)
                WRITE(IFILE,'(A,1PE12.4)')
     1   '  Original imperfection is increased by 1/(EIGEFF-1)=',WMPAMP
               ENDIF
C END AUG 2005
C
               AXEFF = B(2)-W2(2)
               IF (ISTIF(2).EQ.0) AXEFF = AXIAL*LENMOD
C BEG OCT 1998
               IF (IMOD.EQ.0) THEN
                  IF (DMWAVU.NE.0.) IDMWAV(2) = 1
                  IF (DNWAVU.NE.0.) IDNWAV(2) = 1
               ENDIF
C END OCT 1998
C BEG MAR 1996
               IF (IBEAM.EQ.0)
     1          CALL CURIMP(R,AMWIMP,EILOCC,MLOCU,NLOCU,DMWAVU,
C BEG APR 2005
C    1                   DNWAVU,CSLOPU,AXEFF,CIRC,PI,ICD8,
C BEG APR 2006
     1                   DNWAVU,CSLOPU*CSLMLT,AXEFF,CIRC,PI,ICD8,
C END APR 2006
C END APR 2005
     1                   WXX8,WYY8,WXY8,IRMOD,ISTIF,0,0.,FACIM3,
C BEG OCT 1996
     1                   WGARG,AXIAL,IAMPOV(IRMOD),0,IFLAT,
     1                   WXXX8,WXXY8,WYYX8,WYYY8)
C BEG NOV 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG DEC 2005
               IF (NPRT.GE.0)
     1          WRITE(IFILE,'(/,A,/,A,A,/,A,1P,3E12.4,I5,/,A)')
     1       ' ********* NOTE ********* NOTE ********** NOTE *********',
     1       ' Prebuckling bending and twist',
     1       ' from inter-ring imperfection growth:',
     1       '    Wxx8,Wyy8,Wxy8,ICD8=',WXX8,WYY8,WXY8,ICD8,
     1       ' ******************************************************'
C END DEC 2005
C BEG JUN 2007
               IF (ICONSV.EQ.-1.AND.NPRT.GE.0)
     1          WRITE(IFILE,'(A,/,A)')
     1       ' The slope of the buckling nodal lines is set to zero in',
     1       ' the computation of Wxx8,Wyy8,Wxy8 because ICONSV=-1  .'
C END JUN 2007
C END NOV 2003
C END OCT 1996
               IF (IBEAM.EQ.1)
     1          CALL CURIMP(R,AMWIMP,EILOCC,MLOCU,0,DMWAVU,
C BEG APR 2005
C    1                   0.,CSLOPU,AXEFF,CIRC,PI,ICD8,
C BEG APR 2006
     1                   0.,CSLOPU*CSLMLT,AXEFF,CIRC,PI,ICD8,
C END APR 2006
C END APR 2005
     1                   WXX8,WYY8,WXY8,IRMOD,ISTIF,0,0.,FACIM3,
C BEG OCT 1996
     1                   WGARG,AXIAL,IAMPOV(IRMOD),0,IFLAT,
     1                   WXXX8,WXXY8,WYYX8,WYYY8)
C END OCT 1996
C END MAR 1996
C
               IF (IMOD.EQ.0.AND.ITYPE.EQ.1.AND.JJJ.GE.5) THEN
                JJJ1 = JJJ-1
                JJJ2 = JJJ-2
                JJJ3 = JJJ-3
                JJJ4 = JJJ-4
C  Test for oscillation of the inter-ring buckling modal imperfection
C  amplification factor, WYYAMP, from design iteration to iteration. 
C  Print a warning if there is such oscillation.
                IF (WYYAMY(JJJ,ILOADS,ICASE).GE.3.99
     1               .OR.WYYAMY(JJJ1,ILOADS,ICASE).GE.3.99
     1               .OR.WYYAMY(JJJ2,ILOADS,ICASE).GE.3.99
     1               .OR.WYYAMY(JJJ3,ILOADS,ICASE).GE.3.99) THEN
                   IF (    (WYYAMY(JJJ, ILOADS,ICASE).LE.3.0
     1                  .OR.WYYAMY(JJJ1,ILOADS,ICASE).LE.3.0
     1                  .OR.WYYAMY(JJJ2,ILOADS,ICASE).LE.3.0
     1                  .OR.WYYAMY(JJJ3,ILOADS,ICASE).LE.3.0) 
     1                 .AND.WYYAMY(JJJ1,ILOADS,ICASE).GT.0.9999) THEN
C23456789012345678901234567890123456789012345678901234567890123456789012
                      IF (ISTIF(2).NE.0) THEN
                         WRITE(IFILE,1326)
     1                        (WYYAMY(I,ILOADS,ICASE),I=JJJ4,JJJ)
                         WRITE(IFILE,1327)
                      ENDIF
                      IF (ISTIF(2).EQ.0) THEN
                         WRITE(IFILE,1325)
     1                        (WYYAMY(I,ILOADS,ICASE),I=JJJ4,JJJ)
                         WRITE(IFILE,1328)
                      ENDIF
                   ENDIF
 1326           FORMAT(/' *** WARNING *** WARNING *** WARNING ***'/
     1        ' CONVERGENCE TO AN OPTIMUM DESIGN IS DIFFICULT BE-'/
     1        ' CAUSE MARGINS MAY OSCILLATE FROM ITERATION TO'/
     1        ' ITERATION BECAUSE THE IMPERFECTION AMPLIFICATION'/
     1        ' FACTOR "WYYAMP" CORRESPONDING TO INTER-RING BUCKLING'/
     1        ' OSCILLATES DURING DESIGN ITERATIONS AS FOLLOWS:'/
     1        ' WYYAMP=',1P5E12.4)
 1327           FORMAT(
     1        ' SUGGESTIONS (Do one or more of the following):'/
     1        ' 1. INCREASE THE MAX. NUMBER OF DESIGN ITERATIONS.'/
     1        ' 2. IF IQUICK=1 RUN THE CASE WITH IQUICK = 0'/
     1        ' 3. FIX THE STRINGER SPACING (USE "DECIDE") AND DO'/
     1        '    MULTIPLE OPTIMIZATIONS FOR SEVERAL DIFFERENT'/
     1        '    VALUES OF STRINGER SPACING, EACH VALUE FIXED.'/
     1        ' 4. TURN ON THE "WIDE-COLUMN" BUCKLING MODEL FOR'/
     1        '    THIS LOAD CASE IF IT IS NOT ALREADY ON.'/
     1        ' 5. SET THE FACTOR OF SAFETY FOR INTER-RING BUCKLING'/
     1        '    TO 1.5 OR GREATER AND RE-OPTIMIZE. IF YOU THEN'/
     1        '    COME TO A BETTER OPTIMUM, RESET THE FACTOR OF'/
     1        '    SAFETY TO WHATEVER YOU HAD BEFORE AND RE-OPT.'/ 
     1        ' ** END WARNING *** END WARNING *** END WARNING **')
C
 1328           FORMAT(
     1        ' SUGGESTIONS (Do one or more of the following):'/
     1        ' 1. INCREASE THE MAX. NUMBER OF DESIGN ITERATIONS.'/
     1        ' 2. IF IQUICK=1 RUN THE CASE WITH IQUICK = 0'/
     1        ' 3. FIX THE STRINGER SPACING (USE "DECIDE") AND DO'/
     1        '    MULTIPLE OPTIMIZATIONS FOR SEVERAL DIFFERENT'/
     1        '    VALUES OF STRINGER SPACING, EACH VALUE FIXED.'/
     1        ' 4. TURN ON THE "WIDE-COLUMN" BUCKLING MODEL FOR'/
     1        '    THIS LOAD CASE IF IT IS NOT ALREADY ON.'/
     1        ' 5. SET THE FACTOR OF SAFETY FOR GENERAL BUCKLING'/
     1        '    TO 1.5 OR GREATER AND RE-OPTIMIZE. IF YOU THEN'/
     1        '    COME TO A BETTER OPTIMUM, RESET THE FACTOR OF'/
     1        '    SAFETY TO WHATEVER YOU HAD BEFORE AND RE-OPT.'/ 
     1        ' ** END WARNING *** END WARNING *** END WARNING **')
                ENDIF
               ENDIF
C
C    ADDITIONAL SHEARING IN STRINGER WEBS: It is associated with inter-
C    ring axial bending of the panel caused by amplification of
C    the inter-ring buckling modal initial imperfection component.
C    It is assumed here that the transverse shear load
C    Qx = dMx/dx (lb/in), and that dMx/dx = Cx(bend)*Wxxx, where
C    Cx(bend) is the inter-ring axial beam bending stiffness,
C         Cx(bend) = Cx(4,4,5) - Cx(1,4,5)**2/Cx(1,1,5)
C    where Cx is the 6x6 constitutive matrix for the panel with no rings
C    and stringers smeared out. It is further assumed that all
C    of the transverse shear load Qx is carried by the webs of the
C    stringers and that the in-plane shear resultant Nxy in each web
C    is constant over the width (height) of the web, that is:
C            Qx = Nxy*h/(ring spacing).
C
               IF (ISTIF(1).NE.0) THEN
                  FWEBS = 1.
                  IF (ISTIF(1).EQ.4.OR.ISTIF(1).EQ.5) FWEBS = 2.
                  CBND = CX(4,4,5)-CX(1,4,5)**2/CX(1,1,5)
                  FAC1 = B(1)/(FWEBS*H(1))
                  AXLONG = B(2)
                  IF (ISTIF(2).EQ.0) AXLONG = AXIAL*LENMOD
                  FMPROD = (FLOAT(MLOCU)+DMWAVU)*PI/AXLONG
                  FAC2 = 1.0
                  IF (CX(4,6,5).NE.0.) FAC2 = CX(4,6,5)/ABS(CX(4,6,5))
                  DELWEB(1) = DELWB1 +FAC1*CBND*FMPROD*ABS(WXX8)*FAC2
               ENDIF
            ENDIF
C
            CIRC = CIRCS
C
            IF (IMOD.EQ.0.AND.(ISTIF(1).NE.0.OR.ISTIF(2).NE.0)) THEN
C
C   GET KNOCKDOWN FACTOR(S) FOR BUCKLING OF STRINGER AND RING WEBS TO
C   ACCOUNT FOR THE IN-PLANE SHEAR DEVELOPED DUE TO THE GROWTH OF THE
C   INITIAL GENERAL AND INTER-RING BUCKLING MODAL IMPERFECTIONS DURING
C   LOADING...
C
               IF (NPRT.GE.1) WRITE(IFILE,'(/,A)')
     1'***** BEGIN SUBROUTINE STRCON (GET DELFCE FOR WEB SHEAR) ****'
C     First, get the incremental axial stress resultants DELFCE in the
C     ring and stringer webs caused by inter-ring and overall axial
C     bending of the imperfect panel.
C
               CALL STRCON(CONMAX,ISTIF,NSEG,NLAYER,LTYPE,EALLOW,
     1               MATL,ANGLE,EPS1,EPS2,EPS12,EPS10,EPS20,EPS120,
     1               B2,W2,ICONST,CONSTR,WORDB,IADDB,T,TAPE,DEGRAD,
     1               FSSTR,ETHERM,THERMX,THERMY,IPOINC,INUMTT,IMOD,
     1               EPSLOD,ZPARTX,ZPARTY,ETHRMX,ETHRMY,CRACK,ICHANG,
     1               EALLST,NPRT,NAPPL,IFILE,ITYPE,IICHAN,
     1               EPSTOT,EPSFIX,EPSEIG,1,INTEXT,ICASE,
     1               TEMP,FMULT,NNODES,IMTEMP,P,PWDD,IABT,1,1,0,11)
               IF (NPRT.GE.1) WRITE(IFILE,*)
     1'*****  END  SUBROUTINE STRCON (GET DELFCE FOR WEB SHEAR) ****'
C              WRITE(8,*)' DELFCE(1,1),DELFCE(2,1),DELFCE(3,1)=',
C    1                     DELFCE(1,1),DELFCE(2,1),DELFCE(3,1)
C              WRITE(8,*)' DELFCE(1,2),DELFCE(2,2),DELFCE(3,2)=',
C    1                     DELFCE(1,2),DELFCE(2,2),DELFCE(3,2)
C
C23456789012345678901234567890123456789012345678901234567890123456789012
               IF (NPRT.GE.1) WRITE(IFILE,'(/,A)')
     1'*** BEGIN BUCPAN (GET KNOCKDOWN FACTS. FOR SHEARING OF WEBS) ***'
C      Next, get the buckling load factors of the ring and stringer webs
C      with and without the in-plane web shear components,  DELWEB(1)
C      and DELWEB(2) computed above, and including the total axial
C      resultants, Nx(stringer web) and Nx(ring web) from the applied
C      loading as well as the bending along stiffener axis that is generated
C      by amplification of the general and inter-ring initial imperfection
C      components.  Knockdown factors, FKNOCK(5) and FKNOCK(6), for the
C      effects of in-plane shear loading Nxy of the stringer and ring
C      webs are generated from the ratios of buckling load factors with
C      and without the in-plane shear component of the loading of the
C      ring and stringer webs. These knockdown factors,FKNOCK(5) and
C      FKNOCK(6), are used later in STFEIG.
C
               IRMSVE = IRMOD
               IRMOD = 0
 9230          CONTINUE
               ILABEL=9230
               IF (NPRT.GE.1) WRITE(IFILE,*)
     1                      ' LABEL NO. IN STRIMP=',ILABEL
               CALL BUCPAN(IFILE,IMOD,JJJ,ICONST,CONSTR,WORDB,ISTIF,
     1           IREDUC,KOITER,LENMOD,CONMAX,FSGEN,FSPAN,FSLOC,
     1           EIGGG8,6,IPOINC,INUMTT,FKNOCK,IGENRL,CSLP11,
     1           EILC11,MLOC11,ISKIN,MSHER8,NSHER8,MNOSH8,NNOSH8,
     1           ITUTOR,IWIDE,IQUICK,FNX,FNY,FNXY,FNX0,FNY0,FNXY0,
     1           FNXP0,FNYP0,FNXYP0,FNXPL0,FNYPL0,FNXYPL,NLOC11,ITIP,
     1           IABP,1,EPSLOD(4),RWBEIG,RWBTOT,ICASE,FSBSTR,1,
     1           TLOC11,1,4,1,9230,ICD7D,ICD8D,ICD9D,0,ILOADS,MORCON,
C BEG NOV 2003
     1           NCASES,32)
C END NOV 2003
               IF (IRESTY.EQ.1) GO TO 2222
               IRMOD = IRMSVE
               IF (NPRT.GE.1) WRITE(IFILE,*)
     1'*** END BUCPAN (GET KNOCKDOWN FACTORS FOR SHEARING OF WEBS) ***'
               CALL MOVER(0.,0,DELFCE,1,8)
               CALL MOVER(0.,0,DELISO,1,12)
               CALL MOVER(0.,0,DELSKN,1,12)
            ENDIF
C
C *******************************************************************
C PART 3 OF IMPERFECTION SENSITIVITY AND PREBUCKLING BENDING: LOCAL
C        PREBUCKLING BENDING AND KNOCKDOWN FACTOR FOR LOCAL BUCKLING
C        OF STIFFENED PANELS OR OVERALL BUCKLING OF UNSTIFFENED PANELS.
C *********************************************************************
C
C  Next, calculate local behavior of curved panels with stiffeners
C  (behavior of the part of the panel between adjacent rings and
C  adjacent stringers) or overall behavior of unstiffened curved panels.
C
C *******************************************************************
C  NOTE: If there are no stringers, the imperfection sensitivity is computed
C        as if the cylindrical panel were a complete cylindrical shell.
            CIRCS = CIRC
            BSAVEX = B(1)
C BEG MAY 1998  (COMMENT OUT THIS LITTLE SECTION. USE THE ACTUAL CIRC. ARC.)
C           IF (IFLAT.EQ.0.AND.ISTIF(1).EQ.0) THEN
C BEG NOV 1995
C              IF (CIRCS.LT.ABS(R)*3.1415927) CIRC = ABS(R)*3.1415927
C END NOV 1995
C              B(1) = CIRC
C           ENDIF
C END MAY 1998
            IF (IMOD.EQ.0) NOTCM7 = 1
            INTLOC = 0
C           IF (IQUICK.EQ.1.AND.ISTIF(1).NE.5.AND.ISOGRD.EQ.0
C    1                     .AND.(W0LOC.NE.0.0.OR.WYYGEN.NE.0.0)) THEN
            IF (                ISTIF(1).NE.5.AND.ISOGRD.EQ.0
     1     .AND.(W0PAN.NE.0.0.OR.W0LOC.NE.0.0
     1                       .OR.WYYGEN.NE.0.0.OR.WIMPG1.NE.0.0)) THEN
C
C  This major section is entered only if IQUICK = 1 and the panel (old)
C  This major section is entered only if                the panel (new)
C  is neither truss-core or isogrid configurations.
C BEG OCT 2006
      IF (NPRT.GE.1) WRITE(IFILE,'(/,/,/,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************',
     1' ************          CHAPTER 10.3           *****************',
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************'
      IF (NPRT.GE.0) WRITE(IFILE,'(A,I3,A)')
     1' **** CHAPTER 10.3: DESIGN PERTURBATION INDEX, IMOD=',IMOD,' ***'
      IF (NPRT.GE.0) WRITE(IFILE,'(/,A,/,A,/,A,/,A)')
     1 ' *************************************************************',
     1 ' CHAPTER 10.3 Compute knockdown factor and prebuckling bending',
     1 '              associated with LOCAL buckling modal initial',
     1 '              imperfection.'
C END OCT 2006
               IF (NPRT.GE.1) WRITE(IFILE,1394)
 1394          FORMAT(/' Entering imperfection section, PART 3...'/
     1      '  Local buckling of panel between stringers and rings.'/
     1      '  General buckling if there are no stiffeners.')
C BEG NOV 2003
               IF (NPRT.GE.1.AND.INTPRS.EQ.1) 
     1         WRITE(IFILE,'(/,A,/,A,/,A,/,A)')
     1 ' ***** NOTE: IN THIS EXECUTION OF SUBROUTINE STRIMP, THE *****',
     1 ' *****     INTERNAL PRESSURE IS NEGLECTED. See ITEM 553  *****',
     1 ' *****     OF THE FILE ..panda2/doc/panda2.news.         *****',
     1 ' ============================================================='
C END NOV 2003
               INTLOC = 1
               IF (ISTIF(1).NE.0.OR.ISTIF(2).NE.0) THEN
C BEG DEC 2003
                  IF (NPRT.GE.1) WRITE(IFILE,'(/,A,/,A,/,A,/,A)')
     1'***** BEGIN SUBROUTINE STRCON (GET DELSKN FOR LOC.BUCK.) ******',
     1' DELSKN = change in stress resultants, dNx,dNy,dNxy, in the',
     1'          various segments of the skin-stringer module due to',
     1'          prebuckling bending of the imperfect panel or shell.'
C END DEC 2003
C
C  The buckling load factor for the part of the curved panel between
C  stiffeners (between adjacent rings and stringers) depends on:
C
C    1. overall bending of the curved panel in which the rings and
C       stringers participate in the bending, and
C    2. inter-ring bending of the curved panel in which the stringers
C       participate in the bending.
C
C  One source of this dependency of buckling load factor is the
C  reduction in local curvature. Panel skin segments with less
C  curvature buckle at lower loads than those with more. The other
C  source of dependency is the generation of axial, hoop, and
C  in-plane shear prebuckling stress resultants corresponding to
C  the amplification of the initial imperfections as the design
C  load is applied to the structure.  In the following
C  call to STRCON are calculated the additional compressive and
C  in-plane shear stress resultants in the panel skin (DELSKN) generated
C  by growth of the overall and inter-ring initial imperfection
C  components when the panel is loaded by the design load combination.
C
                  CALL STRCON(CONMAX,ISTIF,NSEG,NLAYER,LTYPE,EALLOW,
     1               MATL,ANGLE,EPS1,EPS2,EPS12,EPS10,EPS20,EPS120,
     1               B2,W2,ICONST,CONSTR,WORDB,IADDB,T,TAPE,DEGRAD,
     1               FSSTR,ETHERM,THERMX,THERMY,IPOINC,INUMTT,IMOD,
     1               EPSLOD,ZPARTX,ZPARTY,ETHRMX,ETHRMY,CRACK,ICHANG,
     1               EALLST,NPRT,NAPPL,IFILE,ITYPE,IICHAN,
     1               EPSTOT,EPSFIX,EPSEIG,1,INTEXT,ICASE,
     1               TEMP,FMULT,NNODES,IMTEMP,P,PWDD,IABT,1,1,0,12)
                  IF (NPRT.GE.2)
     1               WRITE(IFILE,'(A,/,A,/,A,1PE12.4,/,A,1PE12.4)')
     1             ' Additional resultants (Nx,Ny) in panel skin from',
     1             ' global and inter-ring bending of imperfect panel:',
     1             '   Additional axial resultant, dNx =',DELSKN(1,1,1),
     1             '   Additional  hoop resultant, dNy =',DELSKN(2,1,1)
C23456789012345678901234567890123456789012345678901234567890123456789012
                  IF (NPRT.GE.1) WRITE(IFILE,*)
     1'*****  END  SUBROUTINE STRCON (GET DELSKN FOR LOC.BUCK.) ******'
               ENDIF
               IRMOD = 1
               IPRELM = 4
               IF (ISTIF(1).EQ.0.AND.ISTIF(2).EQ.0) IPRELM = 3
               EILC72 = 0.
               IF (IMOD.EQ.0) EILC72 = EILOCL
               WYYAMP = 0.
C BEG DEC 2001
               WYYPNS = WYYPAN
C END DEC 2001
               WYYGNS = WYYGEN
               WYYGEN = 0.
C BEG JUN 2004
               WYYPAN = 0.
C END JUN 2004
               WG1S = WG1
               WG1  = 0.
               IF (NPRT.GE.1) WRITE(IFILE,'(A,/,A,/,A,/,A,/,A)')
     1'*** BEGIN BUCPAN (IMPERF. SENSITIVITY FOR "PERFECT" PANEL) ***',
     1'   (The effect of resultant redistribution, dNx, dNy, to panel',
     1'    skin caused by overall bending and inter-ring bending',
     1'    is included here, but the change in radius of curvature dR',
     1'    is not. dR is included later.)'
C              WRITE(8,*)' IMOD,NLOC71,MLOC71,ICD7,TLOC71,CSLP71=',
C    1                     IMOD,NLOC71,MLOC71,ICD7,TLOC71,CSLP71
C
C  NEXT GET, FROM A PANDA-TYPE (CLOSED-FORM) ANALYSIS, THE LOCAL
C  BUCKLING LOAD FACTOR, EILC71,  AND MODE SHAPE, (MLOC71,NLOC71,CSLP71),
C  FOR THE PANEL. THE EFFECT OF STRESS REDISTRIBUTION OVER THE
C  CROSS SECTION CAUSED BY OVERALL AND INTER-RING IMPERFECTIONS IS
C  INCLUDED, BUT THE EFFECT OF CURVATURE CHANGE DUE TO IMPERFECTIONS
C  IS NOT INCLUDED.
C  MLOC71 = number of axial halfwaves in the LOCAL buckling mode
C  NLOC71 = number of circ. halfwaves in the LOCAL buckling mode
C  CSLP71 = slope  of the nodal lines in the LOCAL buckling mode
C
 9240    CONTINUE
         ILABEL=9240
         IF (NPRT.GE.1) WRITE(IFILE,*)' LABEL NO. IN STRIMP=',ILABEL
C BEG NOV 2003
C BEG DEC 2003
C              FNYEFF = FNY*FACNY
C              FNY0FF = FNY0*FACNY0
               FNYEFF = (FNY +DFNYPA)*FACNY
               FNY0FF = (FNY0+DFNYPB)*FACNY0
C END DEC 2003
               IF (INTPRS.EQ.1) THEN
                  IF (ISTIF(2).EQ.0) THEN
                     FNYEFF = FNY + DFNYPA
                     IF (FNYEFF.GT.0.) FNYEFF = 0.
                     FNY0FF = FNY0 + DFNYPB
                     IF (FNY0FF.GT.0.) FNY0FF = 0.
                  ENDIF
                  HOOPSV = RESULT(2,1,1)
                  DELSKV = DELSKN(2,1,1)
                  RESFXS = RESTOT(2,1,1)
                  IF (RESFXS.GT.0.) THEN
                      RESULT(2,1,1) = RESULT(2,1,1) - RESTOT(2,1,1)
                      RESTOT(2,1,1) = 0.
                  ENDIF
                  RSKINY = RESULT(2,1,1) + DELSKN(2,1,1)
                  RSKNYF = RESTOT(2,1,1)
                  PPNY   = RSKINY - RSKNYF
                  IF (PPNY.GT.0.) THEN
                     RESULT(2,1,1) = 0.
                     DELSKN(2,1,1) = 0.
                     RESTOT(2,1,1) = 0.
                  ENDIF
               ENDIF
               CALL BUCPAN(IFILE,IMOD,JJJ,ICONST,CONSTR,WORDB,ISTIF,
     1           IREDUC,KOITER,LENMOD,CONMAX,FSGEN,FSPAN,FSLOC,EIGGG7,
     1           IPRELM,IPOINC,INUMTT,FKNOCK,IGENRL,CSLP71,EILC71,
     1           MLOC71,ISKIN,MSHER7,NSHER7,MNOSH7,NNOSH7,ITUTOR,
     1           IWIDE,IQUICK,FNX,FNYEFF,FNXY,FNX0,FNY0FF,FNXY0,FNXP0,
     1           FNY3,FNXYP0,FNXPL0,FNY4,FNXYPL,NLOC71,ITIP,IABP,
     1           1,EPSLOD(4),RWBEIG,RWBTOT,ICASE,FSBSTR,1,TLOC71,
     1           1,1,1,9240,ICD71,ICD8D,ICD71,0,ILOADS,MORCON,
     1           NCASES,33)
               IF (INTPRS.EQ.1) THEN
                  RESULT(2,1,1) = HOOPSV
                  DELSKN(2,1,1) = DELSKV
                  RESTOT(2,1,1) = RESFXS
               ENDIF
C END NOV 2003
               IF (IRESTY.EQ.1) GO TO 2222
C BEG NOV 2003
               IF (IMOD.EQ.0) EIGRTY(1) = EIGRTX(1)
               IF (IMOD.EQ.1) EIGRTX(1) = EIGRTY(1)
C END NOV 2003
C
C              WRITE(8,*)' IMOD,NLOC71,MLOC71,ICD71,TLOC71,CSLP71=',
C    1                     IMOD,NLOC71,MLOC71,ICD71,TLOC71,CSLP71
               WG1 = WG1S
C  DNWAVE = fractional circumferential halfwave in the local buck. mode
C  DMWAVE = fractional axial           halfwave in the local buck. mode
C  ICD71  = indicator for coordinate direction in which local portion
C           of the panel is longest.
               B1EFF = B(1) - W2(1)
               IF (ISTIF(1).EQ.4.AND.IBW2HT.EQ.1) B1EFF = W2(1)
               DNWV71 = DNWAVE
               DMWV71 = DMWAVE
C BEG MAR 1998
C BEG APR 1998
C BEG JULY 1998
               IF (NPRT.GE.3) WRITE(IFILE,'(A,/,(1P,5E12.4))') 
     1            ' EIGRTX(I),I=1,20)=',(EIGRTX(I),I=1,20)
               IF (IPRELM.EQ.4) INDEIG = 1
               IF (IPRELM.EQ.3) INDEIG = 13
               EIGVL7 = EIGVLX*EIGRTX(INDEIG)
C END JULY 1998
C END APR 1998
C END MAR 1998
C              ICD71  = ICD7
               IF (EILC71.EQ.1.) EILC71 = 0.99999
               FACIM2 = 1./(EILC71 - 1.)
               IF (FACIM2.LE.0.0.OR.FACIM2.GT.100.) FACIM2 = 100.
C  IAMPOV = switch for whether or not the ovalization component, WG1,
C           of the initial global imperfection will be amplified by
C           the factor WYYAMP (IAMPOV=1 means yes; IAMPOV = 0 means no).
C           See the discussion above the label 1200 for more details.
               IF (IMOD.EQ.0) THEN
                  FACM2X = FACIM2
                  EIG71X = EILC71
                  FNPROD = (FLOAT(NLOC71)+DNWV71)*PI/B1EFF
C                 IF (FNPROD.LT.3.5/ABS(R)) IAMPOV(IRMOD) = 1
                  IF (FNPROD.LT.100000./ABS(R)) IAMPOV(IRMOD) = 1
               ENDIF
               DENOM = EILC71 - 1.
C23456789012345678901234567890123456789012345678901234567890123456789012
               IF (NPRT.GE.0) WRITE(IFILE,'(A,I2,/,
     1         A,1PE12.4,A,I3,A,1PE10.3,A,I3,A,1PE10.3,A,1PE10.3,A)')
     1        ' LOCAL BUCKLING EIGENV. OF "PERFECT" PANEL, IMOD=',
     1             IMOD,
     1        '   EILC71(m,dm,n,dn,s)=',EILC71,'(',MLOC71,',',DMWAVE,
     1        ',',  NLOC71,',',DNWAVE,',',CSLP71,')'
C BEG APR 1998
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG JULY 1998
               IF (NPRT.GE.2.AND.EIGRTX(INDEIG).LT.1.0)
C END JULY 1998
     1         WRITE(IFILE,'(A,/,A,/,A,/,A,/,A)')
     1   ' NOTE: The eigenvalue and mode shape just printed may not be',
     1       ' the critical one for the perfect shell; It is used only',
     1       ' in the computation of the knockdown factor to account',
     1       ' for initial nonaxisymmetric initial imperfections in a',
     1       ' most conservative manner.'
C BEN APR 1998
C BEG MAR 1998
C BEG APR 1998
               IF (NPRT.GE.2) WRITE(IFILE,'(A,/,A,1P,E12.4,/,
     1         A,1PE12.4,A,I3,A,I3,A,1PE10.3,A,/,A,/,A,/,A)')
     1        ' BUCKLING LOAD FACTOR WITHOUT FRACTIONAL WAVENUMBERS',
     1        ' AND INCLUDING THE FACTOR EIGTST/EIGTS2=EIGRAT=',
     1          EIGRTX(INDEIG),
     1        '   EIGVL7(m, 0,n, 0,s)=',EIGVL7,'(',MLOC71,
     1        ',',  NLOC71,',',CSLP71,')',
     1        ' This eigenvalue is the factor EIGPAN used to',
     1        ' normalize the buckling load factors computed in',
     1        ' SUBROUTINE ARBOCZ'
C END APR 1998
C BEG APR 1998
C BEG JULY 1998
C END JULY 1998
C END APR 1998
C END MAR 1998
               EIG7X = 1.0
               EIG7Y = 1.0
               FKNKOI(3) = 1.0
               RRR = R
               IF (BOVRW2(1).LE.3.0) RRR = 100.*R

               IF (IMOD.EQ.0) THEN
C                 BABSR = B(1)/ABS(0.5*RRR)
                  BABSR = 10.
C BEG APR 1998
C                 IF (TLOC71.GT.0.) BABSR = 1./TLOC71
                  IF (TLOC71.GT.0.) BABSR = 50./TLOC71
C END APR 1998
                  CSLP7Q= ABS(CSLP71)
C                 WRITE(8,*)' BABSR,TLOC71,CSLP7Q=',BABSR,TLOC71,CSLP7Q
               ENDIF
C BEG JAN 1996
C              IF (IFLAT.EQ.0) THEN
               IF (IFLAT.EQ.0.AND.EILC71.LT.10.E+16) THEN
C END JAN 1996
                  WIDTHH = B(1)-W2(1)
                  ID = 1
                  ID2= 1
                  IF (IMOD.EQ.1.AND.ISTIF(1).EQ.4) THEN
                     WIDTHH = WIDTH7
                     ID     = SID7
                     ID2    = SID7
                  ENDIF
                  RSKINX =  RESULT(1,ID,1) + DELSKN(1,ID,1)
                  RSKINY =  RESULT(2,ID,1) + DELSKN(2,ID,1)
C BEG JUL 1999
C                 RSKNXF =  RESFIX(1,ID,1)
C                 RSKNYF =  RESFIX(2,ID,1)
                  RSKNXF =  RESTOT(1,ID,1)
                  RSKNYF =  RESTOT(2,ID,1)
C END JUL 1999
                  PPNX   =  RSKINX - RSKNXF
                  PPNY   =  RSKINY - RSKNYF
C BEG NOV 2003
                  IF (INTPRS.EQ.1) THEN
                     IF (PPNY.GT.0.) PPNY = 0.
                     IF (RSKNYF.GT.0.) RSKNYF = 0.
                  ENDIF
C END NOV 2003
C BEG JUL 1999
C                 WRITE(8,'(A,1P,2E12.4)')
C    1' RESULT(1,ID,1),DELSKN(1,ID,1)=',RESULT(1,ID,1),DELSKN(1,ID,1)
C                 WRITE(8,'(A,1P,2E12.4)')
C    1' RESULT(2,ID,1),DELSKN(2,ID,1)=',RESULT(2,ID,1),DELSKN(2,ID,1)
C                 WRITE(8,'(A,1P,2E12.4)')
C    1' RESTOT(1,ID,1),RESTOT(2,ID,1)=',RESTOT(1,ID,1),RESTOT(2,ID,1)
C END JUL 1999
                  ISHEAR = 0  
                  IBAL = 0
                  ISLOPE = 0
                  IF (BABSR.GT.1.0.OR.ABS(CSLP7Q).GT.0.03) THEN
                     ANORM = SQRT(PPNX**2 +PPNY**2)
                     IF (ABS(FNXY).GT.0.01*ANORM) ISHEAR = 1    
                     IF (ABS(FNXY0).GT.0.01*ANORM) ISHEAR = 1
                     IF (ABS(CX(1,3,ID)).GT.0.05*CX(1,1,ID)) IBAL = 1  
                     IF (ABS(CX(2,3,ID)).GT.0.05*CX(2,2,ID)) IBAL = 1  
                     IF (ABS(CX(3,4,ID)).GT.0.05*CX(4,4,ID)) IBAL = 1  
                     IF (ABS(CX(3,5,ID)).GT.0.05*CX(5,5,ID)) IBAL = 1  
                     IF (ABS(CX(1,6,ID)).GT.0.05*CX(6,6,ID)) IBAL = 1  
                     IF (ABS(CX(2,6,ID)).GT.0.05*CX(6,6,ID)) IBAL = 1  
                     SC4466 = SQRT(CX(4,4,ID)*CX(6,6,ID))
                     SC5566 = SQRT(CX(5,5,ID)*CX(6,6,ID))
C BEG JULY 1998
C                    IF (ABS(CX(4,6,ID)).GT.0.05*SC4466
C    1                   .AND.ABS(CX(5,6,ID)).GT.0.05*SC5566) IBAL = 1  
                     IF (ABS(CX(4,6,ID)).GT.0.05*SC4466
     1                   .OR.ABS(CX(5,6,ID)).GT.0.05*SC5566) IBAL = 1  
C END JULY 1998
                     IF (ISHEAR.EQ.0.AND.PPNX.GT.0.0
     1                             .AND.PPNY.GT.0.0) IBAL = 0
                     IF (ISHEAR.EQ.1.OR.IBAL.EQ.1) ISLOPE = 1
                  ENDIF
C
C                 WRITE(8,*)' BABSR,ISTIF(1),IBAL,ISHEAR=',
C    1                        BABSR,ISTIF(1),IBAL,ISHEAR
C                 WRITE(8,*)' FNXY,PPNX,PPNY=',FNXY,PPNX,PPNY
                  IF (BABSR.GT.1.0.OR.(IBAL.EQ.0.AND.ISHEAR.EQ.0)) THEN
                   IF (IMOD.EQ.0) NOTCM7 = 0
                   IF (NOTCM7.EQ.0) THEN
                    INDX = 1
                    IF (ISTIF(1).EQ.0.AND.ISTIF(2).EQ.0) INDX = 2

C  Find buckling load and knockdown factor from ARBOCZ 1992 Eq.(3.61).
C    First, for the perfect shell (including stress redistribution):
                    IF (IMOD.EQ.0) THEN
                       CSLP7X = 0.
                       MWAV7X = 0.
                       NWAV7X = 0.
                       FMA7X  = 0.
                    ENDIF
                    PX1 = 1.0
                    PX2 = 0.0
C BEG OCT 1998
                    IF (NPRT.GE.2) WRITE(IFILE,'(/,A,1P,E12.4,A)')
     1            ' Local buckling: C11=',
     1              CX(1,1,ID),' (PERFECT PANEL)'
C END OCT 1998
C BEG JAN 1999      
                    IF (NPRT.GE.2)
C BEG JUL 1999
C    1              WRITE(IFILE,'(A,1P,E12.4,/,A,1P,3E12.4)')
     1              WRITE(IFILE,'(A,1P,E12.4)')
     1            ' Eigenvalue from PANDA-type theory, EIGVL7=',EIGVL7
C    1            ' Prebuckling resultants, PPNX,PPNY,FNXY=',
C    1                                      PPNX,PPNY,FNXY
C END JUL 1999
C END JAN 1999
C BEG JUN 1999
                    IF (NPRT.GE.1) WRITE(IFILE,'(A)')
     1                                ' Entering ARBOCZ. Label=9240'
C END JUN 1999
C23456789012345678901234567890123456789012345678901234567890123456789012
                    CALL ARBOCZ(9240,INDX,IMOD,IFILE,NPRT,B(2),
     1                WIDTHH,RRR,
C BEG MAR 1998
     1                EIGVL7,ITUTOR,IREDUC,TX(ID),TX(ID),GTX(1,ID),
     1                CX(1,1,ID),0.,EIGVL7*PPNX,EIGVL7*PPNY,EIGVL7*FNXY,
C END MAR 1998
     1                RSKNXF,RSKNYF,FNXY0,CSLP7X,MWAV7X,NWAV7X,FMA7X,
C BEG MAR 1997
     1                MLOC71,NLOC71,CSLP71,EIG7X,PX1,PX2,ISLOPE,
C BEG APR 1998
     1                ICUBIC(6),JCUBIC(6),IARBOC(6),ILOADS)
C END APR 1998
C END MAR 1997
C BEG JUN 1999
                    IF (NPRT.GE.1) WRITE(IFILE,'(A)')
     1                                ' Leaving ARBOCZ.  Label=9240'
C END JUN 1999
C BEG FEB 1996
                    IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
                    IF (IMOD.EQ.0.AND.ISTIF(1).EQ.4) THEN
                      SID7 = ID
                      WIDTH7 = WIDTHH
                      ID = 2
                      IF (IFAY(1).EQ.1) ID = 1
                      RSKINX =  RESULT(1,ID,1) + DELSKN(1,ID,1)
                      RSKINY =  RESULT(2,ID,1) + DELSKN(2,ID,1)
C BEG JUL 1999
C                     RSKNX2 =  RESFIX(1,ID,1)
C                     RSKNY2 =  RESFIX(2,ID,1)
                      RSKNX2 =  RESTOT(1,ID,1)
                      RSKNY2 =  RESTOT(2,ID,1)
C END JUL 1999
                      PPNX2  =  RSKINX - RSKNX2
                      PPNY2  =  RSKINY - RSKNY2
C BEG NOV 2003
                      IF (INTPRS.EQ.1) THEN
                         IF (PPNY2.GT.0.) PPNY2 = 0.
                         IF (RSKNY2.GT.0.) RSKNY2 = 0.
                      ENDIF
C END NOV 2003
                      ISHEAR = 0  
                      IBAL = 0    
                      ISLOP2 = 0
                      IF (BABSR.GT.1.0.OR.ABS(CSLP7Q).GT.0.03) THEN
                        ANORM = SQRT(PPNX2**2 +PPNY2**2)
                        IF (ABS(FNXY).GT.0.01*ANORM) ISHEAR = 1    
                        IF (ABS(FNXY0).GT.0.01*ANORM) ISHEAR = 1
                        IF (ABS(CX(1,3,ID)).GT.0.05*CX(1,1,ID)) IBAL = 1  
                        IF (ABS(CX(2,3,ID)).GT.0.05*CX(2,2,ID)) IBAL = 1  
                        IF (ABS(CX(3,4,ID)).GT.0.05*CX(4,4,ID)) IBAL = 1  
                        IF (ABS(CX(3,5,ID)).GT.0.05*CX(5,5,ID)) IBAL = 1  
                        IF (ABS(CX(1,6,ID)).GT.0.05*CX(6,6,ID)) IBAL = 1  
                        IF (ABS(CX(2,6,ID)).GT.0.05*CX(6,6,ID)) IBAL = 1  
                        SC4466 = SQRT(CX(4,4,ID)*CX(6,6,ID))
                        SC5566 = SQRT(CX(5,5,ID)*CX(6,6,ID))
C BEG JULY 1998
C                       IF (ABS(CX(4,6,ID)).GT.0.05*SC4466
C    1                   .AND.ABS(CX(5,6,ID)).GT.0.05*SC5566) IBAL = 1  
                        IF (ABS(CX(4,6,ID)).GT.0.05*SC4466
     1                   .OR.ABS(CX(5,6,ID)).GT.0.05*SC5566) IBAL = 1  
C END JULY 1998
                        IF (ISHEAR.EQ.0.AND.PPNX2.GT.0.0
     1                             .AND.PPNY2.GT.0.0) IBAL = 0
                        IF (ISHEAR.EQ.1.OR.IBAL.EQ.1) ISLOP2 = 1
                      ENDIF
C BEG OCT 1998
                      IF (NPRT.GE.2) WRITE(IFILE,'(/,A,1P,E12.4,A)')
     1              ' Local buckling: C11=',
     1                CX(1,1,ID),' (PERFECT PANEL)'
C END OCT 1998
C BEG JUN 1999
                      IF (NPRT.GE.1) WRITE(IFILE,'(A)')
     1                                ' Entering ARBOCZ. Label=9240'
C END JUN 1999
                      CALL ARBOCZ(9240,INDX,IMOD,IFILE,NPRT,B(2),
     1                W2(1),RRR,
     1                EIGVL7,ITUTOR,IREDUC,TX(ID),TX(ID),GTX(1,ID),
     1              CX(1,1,ID),0.,EIGVL7*PPNX2,EIGVL7*PPNY2,EIGVL7*FNXY,
     1                RSKNX2,RSKNY2,FNXY0,CSLP7W,MWAV7W,NWAV7W,FMA7W,
C BEG MAR 1997
     1                MLOC71,NLOC71,CSLP71,EIG7W,PX1,PX2,ISLOP2,
C BEG APR 1998
     1                ICUBIC(7),JCUBIC(7),IARBOC(7),ILOADS)
C END APR 1998
C END MAR 1997
C BEG JUN 1999
                      IF (NPRT.GE.1) WRITE(IFILE,'(A)')
     1                                ' Leaving ARBOCZ.  Label=9240'
C END JUN 1999
C BEG FEB 1996
                      IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
                      IF (EIG7W.LT.EIG7X) THEN
                         EIG7X  = EIG7W
                         CSLP7X = CSLP7W
                         MWAV7X = MWAV7W
                         NWAV7X = NWAV7W
                         FMA7X  = FMA7W
                         WIDTH7 = W2(1)
                         WIDTHH = W2(1)
                         SID7   = ID
                         ID2    = ID
                         PPNX   = PPNX2
                         PPNY   = PPNY2
                         RSKNXF = RSKNX2
                         RSKNYF = RSKNY2
                         ISLOPE = ISLOP2
                      ENDIF
                    ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
                    IF (IMOD.EQ.0) THEN
C BEG MAY 1998
C BEG MAR 1997
C BEG APR 1998
C                      IF ((ISTIF(1).NE.0.AND.EIG7X.LT.0.90).OR.
C                      IF ((ISTIF(1).NE.0.AND.EIG7X.LT.0.50).OR.
C END MAR 1997
C BEG MAR 1998
C    1                          (ISTIF(1).EQ.0.AND.EIG7X.LT.0.70)) THEN
C    1   (B(1)/ABS(R).LT.1.5.AND.ISTIF(1).EQ.0.AND.EIG7X.LT.0.70)
C    1                                         .OR.EIG7X.LT.0.50) THEN
C END MAR 1998
                       IF (EIG7X.LT.0.50) THEN
C END MAY 1998
                         IF (NPRT.GE.2) WRITE(IFILE,1479) EIG7X
 1479                    FORMAT(/' ARBOCZ THEORY IS NOT SUITABLE FOR'/
     1                 ' LOCAL BUCKLING. EIG7X=',1PE12.4,'.  ARBOCZ'/
     1                 ' KNOCKDOWN FOR LOCAL BUCKLING NOT COMPUTED')
C BEG MAR 1997
                         IF (NPRT.GE.2.AND.ISTIF(1).NE.0)
     1                      WRITE(IFILE,1480)
C END MAR 1997
 1480                    FORMAT(
C BEG MAR 1997
     1                 ' BECAUSE THE LOCAL PANEL SKIN BETWEEN RINGS'/
     1                 ' MAY BE TOO SHALLOW; PREDICTIONS FOR LOCAL'/
     1                 ' BUCKLING FROM PANDA2 THEORY AND ARBOCZ'/
     1                 ' THEORY DIFFER CONSIDERABLY IN THIS CASE.')
C END MAR 1997
                         NOTCM7 = 1
                         EIG7X = 1.0
                         GO TO 9243
                       ENDIF
                    ENDIF
C BEG JUL 1999
                    EIG7Z = 0.0
                    IF (IMOD.EQ.0) IEIG7Z = 0
                    IF (ISTIF(1).NE.0) THEN
C    Next, check buckling load for flat panel between stringers. This
C    is needed because buckling of the imperfect panel cannot be at a
C    lower load factor than buckling of the flat panel...
                       IF (IMOD.EQ.0) THEN
                          CSLP7Z = 0.
                          MWAV7Z = 0.
                          NWAV7Z = 0.
                          FMA7Z = 0.
                       ENDIF
                       IF (IMOD.EQ.0.OR.IEIG7Z.EQ.1) THEN
                         RRR = 100.*R
C23456789012345678901234567890123456789012345678901234567890123456789012
                         IF (NPRT.GE.2) WRITE(IFILE,'(/,A,1P,E12.4,A)')
     1                 ' Local buckling: C11=',
     1                      CX(1,1,ID2),' ("FLAT" PANEL)'
                         IF (NPRT.GE.1) WRITE(IFILE,'(A)')
     1                                ' Entering ARBOCZ. Label=9241'
                         CALL ARBOCZ(9241,INDX,IMOD,IFILE,NPRT,B(2),
     1                   WIDTHH,RRR,EIGVL7,ITUTOR,IREDUC,TX(ID2),
     1                   TX(ID2),GTX(1,ID2),CX(1,1,ID2),0.,EIGVL7*PPNX,
     1                   EIGVL7*PPNY,EIGVL7*FNXY,RSKNXF,RSKNYF,FNXY0,
     1                   CSLP7Z,MWAV7Z,NWAV7Z,FMA7Z,MLOC71,NLOC71,
     1                   CSLP71,EIG7Z,PX1,PX2,ISLOPE,ICUBIC(9),
     1                   JCUBIC(9),IARBOC(9),ILOADS)
                         IF (NPRT.GE.1) WRITE(IFILE,'(A)')
     1                                ' Leaving ARBOCZ.  Label=9241'
                         IF (IRESTY.EQ.1) GO TO 2222
                         IF (IMOD.EQ.1.AND.IEIG7Z.EQ.1) THEN
                           EIG7Y  = EIG7Z
                           CSLP7Y = CSLP7Z
                           MWAV7Y = MWAV7Z
                           NWAV7Y = NWAV7Z
                           FMA7Y  = FMA7Z
                         ENDIF
                       ENDIF
                    ENDIF
C END JUL 1999
C    Next, for the imperfect shell:
                    IF (IMOD.EQ.0) THEN
                       CSLP7Y = 0.
                       MWAV7Y = 0.
                       NWAV7Y = 0.
                       FMA7Y  = 0.
                    ENDIF
                    IF (IMOD.EQ.0.OR.IEIG7Z.EQ.0) THEN
                      CURMOD = ABS(1./R) - ABS(WYY9) - ABS(WYY8)
                      IF (CURMOD.GT.0.) RMOD = (1./CURMOD)*R/ABS(R)
                      RRR = RMOD
                      IF (CURMOD.LE.0.) RRR = 100.*R
                      IF (BOVRW2(1).LE.3.0) RRR = 100.*R
C23456789012345678901234567890123456789012345678901234567890123456789012
                      IF (NPRT.GE.2) WRITE(IFILE,'(/,A,1P,E12.4,A)')
     1              ' Local buckling: C11=',
     1                CX(1,1,ID2),' (IMPERFECT PANEL)'
                      IF (NPRT.GE.1) WRITE(IFILE,'(A)')
     1                                ' Entering ARBOCZ. Label=9242'
                      CALL ARBOCZ(9242,INDX,IMOD,IFILE,NPRT,B(2),
     1                WIDTHH,RRR,EIGVL7,ITUTOR,IREDUC,TX(ID2),TX(ID2),
     1                GTX(1,ID2),CX(1,1,ID2),W0LOC,EIGVL7*PPNX,
     1                EIGVL7*PPNY,EIGVL7*FNXY,RSKNXF,RSKNYF,FNXY0,
     1                CSLP7Y,MWAV7Y,NWAV7Y,FMA7Y,
     1                MLOC71,NLOC71,CSLP71,EIG7Y,PX1,PX2,ISLOPE,
     1                ICUBIC(8),JCUBIC(8),IARBOC(8),ILOADS)
                      IF (NPRT.GE.1) WRITE(IFILE,'(A)')
     1                                ' Leaving ARBOCZ.  Label=9242'
                      IF (IRESTY.EQ.1) GO TO 2222
                      IF (IMOD.EQ.0.AND.IEIG7Z.EQ.1) THEN
                          EIG7Y  = EIG7Z
                          CSLP7Y = CSLP7Z
                          MWAV7Y = MWAV7Z
                          NWAV7Y = NWAV7Z
                          FMA7Y  = FMA7Z
                      ENDIF
                    ENDIF
C   "FLAT" PANEL COMPUTATIONS MOVED UP AHEAD OF CURVED, IMPERFECT
                    IF (ISTIF(1).NE.0) THEN
                       IF (IMOD.EQ.0.AND.NPRT.GE.2)
C END JUL 1999
     1                    WRITE(IFILE,1470) EIG7X,EIG7Y,EIG7Z
 1470                  FORMAT(/' LOCAL BUCKLING LOAD FACTORS FROM THE'/
     1                   '  ARBOCZ EQUATIONS FOR THE FOLLOWING PANELS:'/
     1                      '   CURVED  PERFECT  PANEL: EIG7X=',1PE12.4/
     1                      '   CURVED IMPERFECT PANEL: EIG7Y=',1PE12.4/
     1                      '    FLAT   PERFECT  PANEL: EIG7Z=',1PE12.4/
     1              ' THE ARBOCZ KNOCKDOWN FACTOR IS COMPUTED WITH USE'/
     1              ' OF THE MAXIMUM OF EIG7Y AND EIG7Z.')
C BEG JUL 1999
                       IF (IMOD.EQ.0.AND.EIG7Z.GE.EIG7Y) THEN
C END JUL 1999
                          EIG7Y  = EIG7Z
                          CSLP7Y = CSLP7Z
                          MWAV7Y = MWAV7Z
                          NWAV7Y = NWAV7Z
                          FMA7Y  = FMA7Z
C BEG JUL 1999
                          IEIG7Z = 1
C END JUL 1999
                       ENDIF
                    ENDIF
C    Knockdown factor from Arbocz' implementation of Koiter Special Theory:
                    FKNKOI(3) = EIG7Y/EIG7X
                    IF (FKNKOI(3).GT.1.0) FKNKOI(3) = 1.0
                    IF (ISTIF(1).EQ.0) FKNKOI(2) = FKNKOI(3)
                    IF (ISTIF(2).EQ.0) FKNKOI(1) = FKNKOI(2)
                    MA7X = FMA7X
                    CSLPPX = CSLP7X
                    IF (ABS(CSLP7X).GT.0.0.AND.TLOC71.LT.1.0)
     1                 CSLPPX = 1./CSLP7X
                    CSLPPY = CSLP7Y
                    IF (ABS(CSLP7Y).GT.0.0.AND.TLOC71.LT.1.0)
     1                 CSLPPY = 1./CSLP7Y
                    IF (NPRT.GE.2) WRITE(IFILE,9242)
     1                              EIG7X,MWAV7X,NWAV7X,CSLPPX,
     1                              EIG7Y,MWAV7Y,NWAV7Y,CSLPPY,
     1                              FKNKOI(3)
C23456789012345678901234567890123456789012345678901234567890123456789012
 9242         FORMAT(/' LOCAL BUCKLING FROM 1992 ARBOCZ EQ.(3.61)'/
     1    ' RATIO (LOAD FACTOR FROM ARBOCZ)/(LOAD FACTOR FROM PANDA2):'/
     1      '  Perfect shell  local  buckling load(m,n,slope)=',
     1                             1PE12.4,'(',I3,',',I3,',',1PE9.2,')'/
     1      '  Imperf. shell  local  buckling load(m,n,slope)=',
     1                             1PE12.4,'(',I3,',',I3,',',1PE9.2,')'/
     1      '  Knockdown factor from Koiter Special Theory   =',1PE12.4)
C
 9243               CONTINUE
                   ENDIF
                  ENDIF
               ENDIF
C
               IF (NPRT.GE.2) WRITE(IFILE,'(A,1PE12.4)')
     1        ' LOCAL IMPERFECTION AMPLITUDE FACTOR, WYYAMP=',WYYAMP
               WYYGEN = WYYGNS
C BEG JUN 2004
               WYYPAN = WYYPNS
C END JUN 2004
               KOUNT7 = 0
               WYYAMP = 0.
               EILOC7 = 0.
 1220          CONTINUE
C
C  Begin iteration loop for local buckling of the imperfect panel.
C  The local imperfection is amplified by the factor WYYAMP, which
C  increases from iteration to iteration in this loop.
               KOUNT7 = KOUNT7 + 1
C BEG DEC 2005
C23456789012345678901234567890123456789012345678901234567890123456789012
               IF (NPRT.GE.0) THEN
                  IF (KOUNT7.EQ.1) WRITE(IFILE,'(/,/,A,/,A,/,A,/,A)')
     1' ************ ITERATION LOOP FOR IMPERFECT PANEL ***********',
     1' Begin iteration loop for local buckling of the imperfect',
     1' panel. The local imperfection is amplified by the factor',
     1' WYYAMP, which increases from iteration to iteration.'
                  WRITE(IFILE,'(/,A,I2,A)')
     1' *************** ITERATION NUMBER ',KOUNT7,' *****************'
               ENDIF
C END DEC 2005
               IF (DENOM.LT.0.33333) DENOM = .33333
               IF (IMOD.EQ.1) THEN
C  For the analysis of the perturbed design (IMOD=1), the new
C  amplification factor for the imperfection, WYYAMP, is given by:
C                 WYYAMP = WYYAM2(1)*FACIM2/FACM2X
C                 WYYAMP = WYYAM2(1)*EIG71X/EILC71
                  WYYAMP = (WYYAM2(1)-1.)*EIG71X/EILC71 + 1.0
C  in which WYYAM2(1) is the amplification factor for the unperturbed
C  design (IMOD=0) and FACIM2 and FACM2X are calculated above.
                  IF (WYYAMP.GT.6.0) WYYAMP = 6.0
                  IF (WYYAMP.LT.1.0) WYYAMP = 1.0
                  IF (WYYAMP.EQ.1.0.AND.WYYAM2(1).GT.3.99)
     1                                             WYYAMP=WYYAM2(1)
                  IF (NPRT.GE.2) WRITE(IFILE,'(A,1PE12.4,A,1PE12.4)')
     1             ' UNPERTURBED DESIGN WYYAM2(1)=',WYYAM2(1),
     1             ', PERTURBED DESIGN WYYAMP=',WYYAMP
                  WYYAM3(1) = WYYAMP
               ENDIF
               WYYAMS = WYYAMP
               IF (IMOD.EQ.0) IAMPLD(3) = 0
               IF (IMOD.EQ.0.AND.W0LOC.NE.0.) THEN
C  The following logic is followed only for the unperturbed design
C  (IMOD=0) and only if the panel is imperfect...
                  ICONV  = 0
                  IRATTR = 1
C BEG APR 1998
C                 IF (FNX.LT.0.0.AND.NLOC71.GE.2) THEN
                  IF (FNX.LT.0.0.AND.(NLOC71.GE.2.OR.IFLAT.EQ.0)) THEN
C END APR 1998
                     IRATTR = 0
C BEG JULY 2006
C                    IF (RATRES.GE.RATHI) THEN
                     IF (RATRES.GE.RATHI.AND.INOT4(IRMOD).EQ.0) THEN
C END JULY 2006
                        IRATTR = 1
C
C  If the applied loading is predominately axial compression (Nx),
C  then set the switch IAMPLD to unity and the local imperfection
C  amplification factor WYYAMP to 4.0 and transfer to 1223. If
C  IAMPLD is unity there is no iteration for local buckling of
C  the imperfect panel.
                        IAMPLD(3) = 1
                        WYYAMP = 4.0
                        GO TO 1223
                     ENDIF
                  ENDIF
C  Calculate WYYAMP for the current, unperturbed (IMOD=0) design...
C  (The following formula for WYYAMP is for hyperbolic growth).
                  WYYAMP = 1. + 1./DENOM
                  AMPITR(KOUNT7) = WYYAMP
                  IF (KOUNT7.EQ.4) THEN
C  Get new value of WYYAMP by quadratic extrapolation. The maximum
C  value of WYYAMP permitted is 4.0.
                     Y1WYY = AMPITR(KOUNT7-2) - AMPITR(KOUNT7-1)
                     Y3WYY = AMPITR(KOUNT7)   - AMPITR(KOUNT7-1)
                     Y1Y3  = Y1WYY + Y3WYY
                     IF (Y1Y3.GE.0.) THEN
                        WYYAMP = 4.0
                     ELSE
                        WYYAMP = -0.125*(Y1WYY - Y3WYY)**2/Y1Y3
     1                                        + AMPITR(KOUNT7-1)
                        IF (WYYAMP.GT.4.0) WYYAMP = 4.0
                     ENDIF
                  ENDIF
C
                  IF ((ISTIF(1).NE.0.OR.ISTIF(2).NE.0).AND.
     1                  (NLOC71.EQ.1.OR.MLOC71.EQ.1)) THEN
C
C  This "IF" block implements an alternative and often less
C  conservative way of computing the amplification factor WYYAMP
C  of the local initial imperfection. It is entered only if there
C  is at least one set of stiffeners and if there is only one half-
C  wave in the buckling mode in at least one of the coordinate
C  directions. The philosophy here is to take advantage of the
C  fact that when a stiffened panel with locally imperfect skin
C  is loaded, as the applied load is increased, internal loading
C  of the skin is shed to the stiffeners. In other words, with
C  increasing applied load, an ever greater proportion of the applied
C  load is borne by the stiffeners as the amplitude of the local
C  imperfection in the skin increases. Because of this load shedding
C  from the skin to the stiffeners, the amplitude of the local
C  imperfection grows more slowly with increasing applied load
C  than hyperbolically when the applied load approaches and exceeds
C  the local buckling load. (The hyperbolic growth is given by
C
C                 WYYAMP = 1. + 1/(LAMBDA-1)            (1)
C
C  where LAMBDA is an effective buckling load factor, EILOCC, which
C  is computed below).
C
C  The following algorithm is based on the assumption that the
C  panel skin is inextensional. Therefore, all of the applied
C  membrane strain (for example,  end shortening in the case of
C  an axially compressed axially stiffened cylindrical panel) is
C  "absorbed" in the panel skin by out-of-plane rotation, dw/dx
C  and dw/dy (Wx, Wy). Whereas the extensional strain-displacement
C  relations of the locally imperfect panel are given by:
C
C           ex = Ux      + Wx(0)*Wx + 0.5*(Wx)**2
C           ey = Vy +W/R + Wy(0)*Wy + 0.5*(Wy)**2       (2)
C          exy = Vx +Uy  + Wx(0)*Wy + Wy(0)*Wx + Wx*Wy
C
C  it is assumed (ONLY for the purpose of calculating the alternative
C  amplification factor here)  that
C
C           ex =           Wx(0)*Wx + 0.5*(Wx)**2
C           ey =           Wy(0)*Wy + 0.5*(Wy)**2       (3)
C          exy =           Wx(0)*Wy + Wy(0)*Wx + Wx*Wy
C
C  Furthermore, the local strain components, ex, ey, exy, are
C  identified with the average applied in-plane strain components
C  ETOT1, ETOT2, ETOT12, respectively, and the out-of-plane
C  rotation components of the panel skin, Wx and Wy, are assumed
C  to be given by k*Wx(0) and k*Wy(0), where Wx(0) and Wy(0) are
C  the rotation components corresponding to the initial local imperfection.
C  These assumptions and substitutions into Eq. (3) lead to
C  three alternative values for k, as follows:
C
C    from Eq. (3a):   k(1) = -1 + SQRT[1+2*ABS(ETOT1)/Wx(0)**2]
C    from Eq. (3b):   k(2) = -1 + SQRT[1+2*ABS(ETOT2)/Wy(0)**2]     (4)
C    from Eq. (3c):   k(3) = -1 + SQRT[1+ ABS(ETOT12)/(Wx(0)*Wy(0)]
C
C  The largest of the three k(i) is chosen. It is called k(crit).
C  The alternative amplification factor WYYMP2 is given by:
C
C              WYYMP2 = 1 + k(crit)                      (5)
C
C  The final amplification factor, WYYAMP, is chosen as the minimum
C  of that given by Eq. (5) and the original "hyperbolic" value
C  given by Eq. (1). The quantity k(crit) is called FAMP in the
C  following code:
C
                     IF (KOUNT7.EQ.1) THEN
                        NLOC7 = NLOC71
                        MLOC7 = MLOC71
                     ENDIF
                     ETOT1 = ABS(EPSTOT(1,1,1) - ABS(EPST1A))
                     ETOT2 = ABS(EPSTOT(2,1,1) - ABS(EPST2A))
                     ETOT12= ABS(EPSTOT(3,1,1)) + ABS(EPT12A)
                     FNPROD = ABS(FLOAT(NLOC7)+DNWAVE)*PI/B1EFF
                     FMPROD = ABS(FLOAT(MLOC7)+DMWAVE)*PI/(B(2)-W2(2))
C
C  Next, determine whether the user-supplied initial local buckling
C  modal imperfection component is too large and therefore should be
C  automatically reduced by the factor AMPMD7. It is assumed in PANDA2
C  that no shell will have a geometric initial imperfection that gives
C  rise to an out-of-plane rotation of the shell wall of more than 0.1
C  radian. The assumption is that such large initial local imperfections
C  would be easily detected and shells with them would be refabricated.
C  The amplitude factor, AMPMD7, is therefore set here so that the
C  resulting initial local buckling modal imperfection will cause
C  out-of-plane shell rotations of 0.1 radian or less.
C BEG NOV 2003
                     WALRT7 = W0LOC*MAX(FMPROD,FNPROD)
C END NOV 2003
C BEG AUG 2005
C23456789012345678901234567890123456789012345678901234567890123456789012
                     AMPTST = 1.0
                     IF (ABS(W0LOC).GT.0.0.AND.FNPROD.GT.0.0
     1                                     .AND.FMPROD.GT.0.0)
     1               AMPTST = ABS(0.1/W0LOC)*MIN(1./FMPROD,1./FNPROD)
                     IF (IMOD.EQ.0.AND.NPRT.GE.0)
     1                WRITE(IFILE,'(A,1P,E12.4)')
     1            ' (0.1 radian)/(shell wall rotation), AMPTST =',AMPTST
                     AMPMD7 = AMPTST
                     IF (IXIMPF(ILOADS).NE.0.AND.IMOD.EQ.0
     1                                .AND.NPRT.GE.0.AND.AMPTST.LT.1.0)
     1    WRITE(IFILE,'(/,A,/,A,I3,A,/,A,/,A,/,A,1PE12.4,/,A,/,A,/)')
     1     ' ******* WARNING ******* WARNING ******* WARNING *********',
     1  ' THERE ARE MANY CIRCUMFERENTIAL HALFWAVES (NLOC71=',NLOC71,')',
     1  ' IN THE LOCAL BUCKLING MODE.  THE MAXIMUM IMPERFECTION',
     1  ' WALL ROTATION OF 0.1 RADIAN HAS BEEN EXCEEDED. THE PRESENT',
     1  ' LOCAL IMPERFECTION AMPLITUDE, Wimp(local)=',
     1    ABS(W0LOC),
     1  ' WILL BE REDUCED BY THE FACTOR, AMPTST, LISTED JUST ABOVE',
     1  ' ************* END WARNING *********** END WARNING **********'
C23456789012345678901234567890123456789012345678901234567890123456789012
C END AUG 2005
                     IF (AMPMD7.GT.1.0) AMPMD7 = 1.0
C BEG AUG 1996
C   Do not change initial imperfection amplitude because user says NO:
                     IF (IXIMPF(ILOADS).EQ.0) AMPMD7 = 1.0
C END AUG 1996
C BEG DEC 2004
C BEG AUG 2005  (comment out "if (intgen...")
C                    IF (INTGEN.EQ.0.AND.INTRNG.EQ.0) THEN
C END AUG 2005
                        FMLOC7 = FLOAT(MLOC7)+DMWAVE
C BEG AUG 2005
                        AXLINP = B(2) 
                        IF (INTGEN.EQ.0.AND.INTRNG.EQ.0)
     1                             AXLINP = AXLWAV(ILOADS)

                        AXLTST = B(2) 
C BEG JUN 2006
                        IF (ISTIF(1).EQ.0.AND.FMLOC7.GE.1.)
     1                             AXLTST = B(2)/FMLOC7
C END JUN 2006
C END AUG 2005
                        AXLRAT = ABS(AXLTST/AXLINP)
                        IF (AXLRAT.LT.AMPMD7) AMPMD7 = AXLRAT
                        IF (AMPMD7.GT.0.9999.AND.AXLRAT.GT.1.0)
     1                      AMPMD7=AXLRAT
C   Do not change initial imperfection amplitude because user says NO:
                        IF (IXIMPF(ILOADS).EQ.0) AMPMD7 = 1.0
C BEG AUG 2005  (comment out ENDIF)
C                    ENDIF
C END AUG 2005
C END DEC 2004
C BEG MAR 2004
C BEG AUG 2005
                     IF (IXIMPF(ILOADS).NE.0.AND.NPRT.GE.0
     1                                .AND.IMOD.EQ.0.AND.AXLRAT.LT.1.0)
C END AUG 2005
     1         WRITE(IFILE,'(/,A,/,A,/,A,1P,E12.4,/,A,E12.4,/,A,E12.4)')
     1    ' Local imperfection amplitude is modified because the',
     1    ' critical buckling mode has a shorter axial halfwavelength',
     1    ' than that specified by the user:            AXLINP=',AXLINP,
     1    ' Critical buckling mode axial halfwavelength,AXLTST=',AXLTST,
     1    ' Imperfection amplitude is reduced by factor,AMPMD7=',AMPMD7
C END MAR 2004
C BEG AUG 2005
                     IF (IXIMPF(ILOADS).NE.0.AND.NPRT.GE.0
     1                        .AND.IMOD.EQ.0.AND.AMPMD7.GT.1.0)
     1         WRITE(IFILE,'(/,A,/,A,/,A,1P,E12.4,/,A,E12.4,/,A,E12.4)')
     1    ' Local imperfection amplitude is modified because the',
     1    ' critical buckling mode has a longer axial halfwavelength',
     1    ' than that specified by the user:            AXLINP=',AXLINP,
     1    ' Critical buckling mode axial halfwavelength,AXLTST=',AXLTST,
     1  ' Imperfection amplitude is increased by factor,AMPMD7=',AMPMD7
               IF (IXIMPF(ILOADS).NE.0.AND.AMPTST.LT.AMPMD7) THEN
                  IF (IMOD.EQ.0.AND.NPRT.GE.0)
     1            WRITE(IFILE,'(A,/,A,1P,E12.4,A,1P,E12.4)')
     1          ' The "0.1 radian" rule governs. Imperfection',
     1          ' amplitude is now reduced from ',AMPMD7,' to ',AMPTST
                  AMPMD7 = AMPTST
               ENDIF
C END AUG 2005
                     FACIM3 = (ABS(1./EILC71))**1
                     IF (FACIM3.LT.1.0) FACIM3 = 1.0
C                    AMWIMP = AMPMD7*FACIM3*W0LOC
                     AMWIMP = AMPMD7*W0LOC
C BEG DEC 1995
C                    IF (KOUNT7.EQ.1.AND.IMOD.EQ.0) THEN
                     IF ((NPRT.GE.1.OR.JLAST.EQ.1)
     1              .AND.KOUNT7.EQ.1.AND.IMOD.EQ.0) THEN
C END DEC 1995
                      FNCYL = ABS(NLOC71*PI*ABS(R)/B1EFF)
                      NCYL  = FNCYL
                      IF ((ABS(W0LOC).GT.(TX(1)/5.).AND.NCYL.GE.10)
     1                   .OR.AMPMD7.LT.1.0) THEN
                        HALFWV = PI*ABS(R)/FNCYL
C BEG AUG 2005
                        IF (IXIMPF(ILOADS).EQ.0)
     1                   WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,
     1                   A,1PE12.4,/,A,1PE12.4,/,A,/,A,/,A,/)')
C END AUG 2005
     1  ' ******** WARNING ******** WARNING ******** WARNING *********',
     1  ' THE CIRCUMFERENTIAL HALFWAVELENGTH OF THE LOCAL IMPERFECTION',
     1  ' Wimp(local), WHICH HAS THE SAME FORM AS THE LOCAL BUCKLING',
     1  ' MODE, IS SHORT, WHILE ITS AMPLITUDE IS RATHER HIGH:',
     1  '   Circumferential halfwavelength of Wimp(local),   Wlength=',
     1      HALFWV,
     1  '   Present amplitude of the local imperfection, Wimp(local)=',
     1      ABS(W0LOC),
     1  ' PLEASE CONSIDER REDUCING Wimp(local). YOUR DESIGN MAY BE TOO',
     1  ' CONSERVATIVE.',
     1  ' ************* END WARNING *********** END WARNING **********'
                      ENDIF
                     ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
                     WXLOC2 = (AMWIMP*FMPROD)**2
                     WYLOC2 = (AMWIMP*FNPROD)**2
                     WXYLC2 = FNPROD*FMPROD*(AMWIMP)**2
                     FAMP1  = -1. +SQRT(1.+2.*ETOT1/WXLOC2)
                     FAMP2  = -1. +SQRT(1.+2.*ETOT2/WYLOC2)
                     FAMP3  = -1. +SQRT(1.+  ETOT12/WXYLC2)
                     FAMP   = MAX(FAMP1,FAMP2)
                     FAMP   = MAX(FAMP3,FAMP)
                     WYYMP2 = 1. + FAMP
C BEG AUG 1996
C  This new section was added to treat more accurately rather badly damaged
C  ring-stiffened cylindrical shells, that is, ring-stiffened cylindrical
C  shells with very large initial local imperfections. The object here is
C  to compute a third amplification factor, WYYMP3, and to use it instead
C  of WYYMP2 if it is bigger than WYYMP2.  WYYMP2 is very close to unity
C  (WYYMP2 = 1.02, something like that) if there is a very large local
C  buckling modal imperfection, say more than a couple of thicknesses
C  for a modal imperfection with more than ten circumferential waves
C  around the complete (360 deg) cylindrical shell. The alternative to
C  WYYMP2, called WYYMP3 in the following code segment, is computed only
C  if there are rings but no stringers, only if the axial load is
C  compressive, and only if this is the first time through this loop.
C  The thinking here is as follows:
C
C   1. With a large-amplitude, high-circumferential-wavenumber, local
C      buckling modal imperfection, amplification of the mode occurs mostly
C      because of the axial component of loading only. The hoop component
C      of loading is absorbed by the rings rather than by the panel skin.
C      Hence, growth of the many-wave local buckling modal imperfection can
C      only occur because adjacent rings get closer together under the axial
C      component of loading; there are no stringers to absorb this axial
C      load.
C
C   2. The local buckling modal amplification factor, WYYMP3, grows
C      hyperbolically. Analogous to WYYAMP in Eq. (1) above, WYYMP3
C      is given by
C
C                 WYYMP3 = 1. + 1/(LAMBDA-1)                      (6)
C
C      in which LAMBDA now represents the local buckling load factor of
C      the locally imperfect shell with only the axial component of loading
C      applied.
C
C   3. PANDA2 uses as the amplification factor for the local buckling
C      modal imperfection the following:
C
C                WYYAMP = MAX(MIN(WYYAMP,WYYMP2), WYYMP3)         (7)
C
C      in which the WYYAMP on the right-hand side of Eq.(7) is that
C      computed from Eq. (1) (Hyperbolic growth with ALL loads applied),
C      and WYYMP2 is computed from Eq. (5).
C
C   4. WYYMP3 is computed for a locally imperfect inter-ring bay in which
C      the amplification of the local buckling modal imperfection is given
C      by the minimum of (WYYAMP,WYYMP2) obtained in the first pass through
C      this loop.
C
                     IF (KOUNT7.EQ.1) WYYMP3 = 0.
                     IDOIT = 0
                     IF (ISTIF(1).NE.0.AND.ISTIF(2).EQ.0) IDOIT=1
                     IF (ISTIF(1).EQ.0.AND.ISTIF(2).NE.0) IDOIT=2
                     IF (IDOIT.EQ.0.OR.IDOIT.EQ.1) GO TO 9249
                     IF (FNX.GE.0.0) GO TO 9249
                     IF (KOUNT7.GT.1) GO TO 9249
                     HOOPSV = RESULT(2,1,1)
                     RESULT(2,1,1) = 0.
                     WYYMPS = WYYAMP
                     WYYAMP = MIN(WYYMP2,WYYAMP)
 9244                CONTINUE
                     ILABEL = 9244 + KOUNT7
                     IF (NPRT.GE.1) WRITE(IFILE,9245) KOUNT7,ILABEL
C23456789012345678901234567890123456789012345678901234567890123456789012
 9245                FORMAT(/
     1      ' PARTIAL LOADING PERFECT LOCAL BUCKLING, ITERATION NO.',
     1        I2,', LABEL NO.=',I4)
C BEG NOV 2003
                     IF (INTPRS.EQ.1) THEN
                        RESFXS = RESTOT(2,1,1)
                        IF (RESFXS.GT.0.) THEN
                            RESTOT(2,1,1) = 0.
                        ENDIF
                        RSKINY = RESULT(2,1,1)
                        RSKNYF = RESTOT(2,1,1)
                        PPNY   = RSKINY - RSKNYF
                        IF (PPNY.GT.0.) RESTOT(2,1,1) = 0. 
                     ENDIF
                     CALL BUCPAN(IFILE,IMOD,JJJ,ICONST,CONSTR,WORDB,
     1              ISTIF,IREDUC,KOITER,LENMOD,CONMAX,FSGEN,FSPAN,FSLOC,
     1              EIGGX7,IPRELM,IPOINC,INUMTT,FKNOCK,IGENRL,CSLOX7,
     1              EILOX7,MLOX7,ISKIN,MSHEX7,NSHEX7,MNOSX7,NNOSX7,
     1              ITUTOR,IWIDE,IQUICK,FNX,FNYEFF,FNXYUS,FNX0,FNY0FF,
     1              FNXY0,FNXP0,FNYP0,FNXYP0,FNXPL0,FNYPL0,FNXYPL,NLOX7,
     1              ITIP,IABP,1,EPSLOD(4),RWBEIG,RWBTOT,ICASE,FSBSTR,1,
     1              TLOX7,0,1,0,ILABEL,ICX7,ICX8D,ICX7,0,ILOADS,MORCON,
     1              NCASES,34)
                     IF (INTPRS.EQ.1) RESTOT(2,1,1) = RESFXS
C END NOV 2003
                     WYYAMP = WYYMPS
                     RESULT(2,1,1) = HOOPSV
                     IF (IRESTY.EQ.1) GO TO 2222
C
C                    WRITE(8,*)' IMOD,NLOX7,MLOX7,ICX7,TLOX7,CSLOX7=',
C    1                           IMOD,NLOX7,MLOX7,ICX7,TLOX7,CSLOX7
                     IF (EILOX7.EQ.1.) EILOX7 = 0.99999
                     WYYMP3 = 1. + 1./(EILOX7 - 1.)
                     IF (WYYMP3.LE.1.0.OR.WYYMP3.GT.4.) WYYMP3 = 4.
                     IF (NPRT.GE.1) WRITE(IFILE,'(A,I2,/,A,1PE12.4,A,I3,
     1                           A,1PE10.3,A,I3,A,1PE10.3,A,1PE10.3,A)')
     1             ' AXIAL BUCKLING EIGENV. OF IMPERFECT PANEL, IMOD=',
     1               IMOD,
     1           '   EILOX7(m,dm,n,dn,s)=',EILOX7,'(',MLOX7,',',DMWAVE,
     1              ',',  NLOX7,',',DNWAVE,',',CSLOX7,')'
                     IF (NPRT.GE.1) WRITE(IFILE,'(A,1PE12.4)')
     1             ' AXIAL LOADING IMPERF. AMPLITUDE FACTOR, WYYMP3=',
     1               WYYMP3
C
 9249                CONTINUE
C END AUG 1996
                     INDAMP = 1
                     IF (WYYMP2.LT.WYYAMP.OR.WYYAMP.GE.4.0) INDAMP = 2
C BEG AUG 1996
                     IF (WYYMP3.GT.WYYMP2.AND.WYYMP2.LT.WYYAMP) INDAMP=3
                     WYYAMP = MIN(WYYAMP,WYYMP2)
                     WYYAMP = MAX(WYYAMP,WYYMP3)
C END AUG 1996
C                    WRITE(8,*)' FAMP1,FAMP2,FAMP3=',FAMP1,FAMP2,FAMP3
C                    WRITE(8,*)' MLOC7,NLOC7,WYYAMP=',MLOC7,NLOC7,WYYAMP
C                    WRITE(8,*)' EPST1A,EPST2A,EPT12A=',
C    1                           EPST1A,EPST2A,EPT12A
C23456789012345678901234567890123456789012345678901234567890123456789012
                  ENDIF
               ENDIF
C   End of the "If (IMOD.EQ.0.AND.W0LOC.NE.0.0)" block.
 1223          CONTINUE
               WYYDIF = 1.0
               IF (IMOD.EQ.0.AND.WYYAMP.NE.0.)
     1            WYYDIF = ABS(WYYAMS/WYYAMP - 1.)
               IF (WYYDIF.GT.0.01.AND.KOUNT7.LE.4) THEN
C                 WRITE(8,*)' IMOD,NLOC7,MLOC7,ICD7,TLOC7,CSLOP7=',
C    1                        IMOD,NLOC7,MLOC7,ICD7,TLOC7,CSLOP7
C
                  IF (NPRT.GE.1) WRITE(IFILE,'(/,A)')
     1'**** BEGIN BUCPAN (IMPERF. SENSITIVITY FOR IMPERFECT PANEL) ****'
C23456789012345678901234567890123456789012345678901234567890123456789012
C  NEXT, GET, FROM A PANDA-TYPE (CLOSED-FORM) ANALYSIS, THE LOCAL
C  BUCKLING LOAD FACTOR, EILOC7,  AND MODE SHAPE, (MLOC7,NLOC7,CSLOP7),
C  FOR THE IMPERFECT PANEL.
C  MLOC7  = number of axial halfwaves in the local buckling mode
C           of the imperfect panel
C  NLOC7  = number of circ. halfwaves in the local buckling mode
C           of the imperfect panel
C  CSLOP7 = slope  of the nodal lines in the local buckling mode
C           of the imperfect panel
C  WYYAMP = current value of local imperfection amplification factor
C
 9250             CONTINUE
                  ILABEL = 9250 + KOUNT7
                  IF (NPRT.GE.1) WRITE(IFILE,9252) KOUNT7,ILABEL
 9252             FORMAT(/
     1 ' IMPERFECT LOCAL BUCKLING, ITERATION NO.', I2,', LABEL NO.=',I4)
C BEG NOV 2003
                  IF (INTPRS.EQ.1) THEN
                     HOOPSV = RESULT(2,1,1)
                     DELSKV = DELSKN(2,1,1)
                     RESFXS = RESTOT(2,1,1)
                     IF (RESFXS.GT.0.) THEN
                         RESULT(2,1,1) = RESULT(2,1,1) - RESTOT(2,1,1)
                         RESTOT(2,1,1) = 0.
                     ENDIF
                     RSKINY = RESULT(2,1,1) + DELSKN(2,1,1)
                     RSKNYF = RESTOT(2,1,1)
                     PPNY   = RSKINY - RSKNYF
                     IF (PPNY.GT.0.) THEN
                        RESULT(2,1,1) = 0.
                        DELSKN(2,1,1) = 0.
                        RESTOT(2,1,1) = 0.
                     ENDIF
                  ENDIF
                  CALL BUCPAN(IFILE,IMOD,JJJ,ICONST,CONSTR,WORDB,ISTIF,
     1             IREDUC,KOITER,LENMOD,CONMAX,FSGEN,FSPAN,FSLOC,
     1             EIGGG7,IPRELM,IPOINC,INUMTT,FKNOCK,IGENRL,CSLOP7,
     1             EILOC7,MLOC7,ISKIN,MSHER7,NSHER7,MNOSH7,NNOSH7,
     1             ITUTOR,IWIDE,IQUICK,FNX,FNYEFF,FNXY,FNX0,FNY0FF,
     1             FNXY0,FNXP0,FNY3,FNXYP0,FNXPL0,FNY4,FNXYPL,NLOC7,
     1             ITIP,IABP,1,EPSLOD(4),RWBEIG,RWBTOT,ICASE,FSBSTR,1,
     1             TLOC7,1,2,1,ILABEL,ICD7,ICD8D,ICD7,0,ILOADS,MORCON,
     1             NCASES,35)
                  IF (INTPRS.EQ.1) THEN
                     RESULT(2,1,1) = HOOPSV
                     DELSKN(2,1,1) = DELSKV
                     RESTOT(2,1,1) = RESFXS
                  ENDIF
C END NOV 2003
                  IF (IRESTY.EQ.1) GO TO 2222
C
C                 WRITE(8,*)' IMOD,NLOC7,MLOC7,ICD7,TLOC7,CSLOP7=',
C    1                        IMOD,NLOC7,MLOC7,ICD7,TLOC7,CSLOP7
                  IF (EILOC7.EQ.1.) EILOC7 = 0.99999
                  FACIM1 = 1./(EILOC7 - 1.)
                  IF (FACIM1.LE.0.0.OR.FACIM1.GT.100.) FACIM1 = 100.
C  In order to compute a new value of WYYAMP, a modified buckling load
C  factor, EILOCC, is used, as follows:
C BEG MAY 2007
                  FMULT2 = 1.0
                  IF (ICONSV.EQ.-1) FMULT2 = 10.0
                  EILOCC =(FACIM1*EILOC7 +FACIM2*FMULT2*EILC71)/
     1                                            (FACIM1+FMULT2*FACIM2)
C END MAY 2007
                  DENOM = EILOCC - 1.
C23456789012345678901234567890123456789012345678901234567890123456789012
                  IF (NPRT.GE.0) WRITE(IFILE,'(A,I2,/,
     1            A,1PE12.4,A,I3,A,1PE10.3,A,I3,A,1PE10.3,A,1PE10.3,A)')
     1           ' LOCAL BUCKLING EIGENV. OF IMPERFECT PANEL, IMOD=',
     1             IMOD,
     1           '   EILOC7(m,dm,n,dn,s)=',EILOC7,'(',MLOC7,',',DMWAVE,
     1           ',',  NLOC7,',',DNWAVE,',',CSLOP7,')'
                  IF (NPRT.GE.0) WRITE(IFILE,'(A,1PE12.4)')
     1           ' LOCAL IMPERFECTION AMPLITUDE FACTOR, WYYAMP=',WYYAMP
C BEG NOV 2003
C BEG MAR 2007
C                 IF (NPRT.GE.2) WRITE(IFILE,
                  IF (NPRT.GE.0) WRITE(IFILE,
C END MAR 2007
C BEG MAY 2007
     1 '(A,A,A,1P,E12.4,/,A,/,A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4)')
     1 ' EIGEFF =(FACIM1*EILOC7 +FACIM2*FMULT2*EILC71)/',
     1 '(FACIM1+FMULT2*FACIM2)',
C    1 ' EIGEFF =(FACIM1*EILOC7 +FACIM2*EILC71)/(FACIM1+FACIM2)',
C END MAY 2007
     1             '=',EILOCC,
     1             ' in which FACIM1, FACIM2, and EILC71 are given by:',
     1             ' FACIM1=1./(EILOC7 - 1.) =',FACIM1,
     1             ' FACIM2=1./(EILC71 - 1.) =',FACIM2,
     1             ' EILC71                  =',EILC71
C END NOV 2003
C BEG MAY 2007
                  IF (NPRT.GE.0) WRITE(IFILE,'(A,1P,E12.4)')
     1             ' FMULT2                  =',FMULT2
C END MAY 2007
C BEG FEB 2006
C  The method above for computing EIGEFF is somewhat unconservative,
C  according to results from STAGS. Therefore, we use the simpler
C  and physically more attractive formula:
C23456789012345678901234567890123456789012345678901234567890123456789012
C                 EILOCC = EILOC7
C                 DENOM = EILOCC - 1.
C                 IF (NPRT.GE.2) WRITE(IFILE,'(/,A,/,A,1P,E12.4)')
C    1          ' New value of EIGEFF (STAGS comparison, FEB.2006)=',
C    1          ' EIGEFF = EILOC7 =', EILOCC
C END FEB 2006
                  IF (IMOD.EQ.0.AND.WYYAMP.GT.0.0.AND.WYYAMP.LT.3.99
     1                  .AND.KOUNT7.LE.3.AND.IAMPLD(3).EQ.0
     1                  .AND.ICONV.EQ.0) GO TO 1220
               ENDIF
C              End of (WYYDIF.GT.0.01.AND.KOUNT7.LE.4) condition
C
               IF (IRATTR.EQ.0.AND.IMOD.EQ.0.AND.WYYAMP.LT.3.99
     1               .AND.RATRES.GT.RATLO.AND.RATRES.LT.RATHI) THEN
                  ACOEF = (4.0 - WYYAMP)/(RATHI - RATLO)
                  BCOEF = 4.0 - ACOEF*RATHI
                  WYYAMP = ACOEF*RATRES + BCOEF
                  IF (WYYAMP.GT.4.0) WYYAMP = 4.0
                  IF (WYYAMP.LT.1.0) WYYAMP = 1.0
                  IRATTR = 1
                  ICONV = 1
C BEG DEC 2005
                  IF (NPRT.GE.2) WRITE(IFILE,'(/,A,I2,A)')
     1' ******** ONE LAST TIME: ITERATION NUMBER',KOUNT7+1,' **********'
C23456789012345678901234567890123456789012345678901234567890123456789012
C END DEC 2005
                  GO TO 1223
               ENDIF
C  End of the iteration loop for the local buckling load factor,
C  EILOC7, of the imperfect panel.
               IF (NPRT.GE.1) WRITE(IFILE,*)
     1'**** END BUCPAN (IMPERF. SENSITIVITY FOR LOCAL BUCKLING) *******'
               CALL MOVER(0.,0,DELFCE,1,8)
               CALL MOVER(0.,0,DELISO,1,12)
               CALL MOVER(0.,0,DELSKN,1,12)
C  The knockdown factor for local instability, FKNOCK(7), is taken
C  to be the ratio of the local buckling load factors for the imperfect and
C  "perfect" panels, EILOC7 and EILC71, respectively. ( NOTE: EILC71 is
C  computed accounting for the redistribution of stress resultants over
C  the cross section of skin and stiffeners caused by bending in the
C  overall and inter-ring imperfection modes. Therefore, EILC71 does
C  not represent the buckling load of the perfect panel because part
C  of the effect of imperfections is included in its computation).
C  EIGC71 is computed neglecting the effect of curvature change in the
C  panel skin. Therefore, the knockdown factor, FKNOCK(7), accounts
C  only for the effect of local geometric imperfection, not redistribution
C  of the stress resultants. However, the effect of both redistribution
C  of stress resultants and geometric imperfection is accounted for
C  in the PANDA2 analysis because the knockdown factor FKNOCK(7) is
C  applied later to a local buckling load factor in which the effect
C  of redistribution of stress resultants over the skin-stiffener
C  cross section(s) has already been accounted for.
C
               FKNOCK(7) = EILOC7/EILC71
               IF (FKNOCK(7).GT.1.0.OR.FKNOCK(7).LE.0.) FKNOCK(7) =1.0
               IF (IMOD.EQ.0) THEN
                  WYYAM2(1) = WYYAMP
                  IF (ITYPE.EQ.1.AND.JJJ.GE.1)
     1                  WYYAMX(JJJ,ILOADS,ICASE)=WYYAMP
               ENDIF
C
C  DNWAV7 and DMWAV7 are the fractional circumferential and axial
C  halfwaves, respectively, in the local buckling mode of the
C  imperfect panel.  By "fractional" is meant a non-integral number...
C  (see section on general buckling for explanation).
               DNWAV7 = DNWAVE
               DMWAV7 = DMWAVE
               DNWAVU = DNWAV7
               DMWAVU = DMWAV7
               NLOCU  = NLOC7
               MLOCU  = MLOC7
               CSLOPU = CSLOP7
C BEG MAR 2005
               IPERFT = 0
C BEG MAR 2007
               IF (IMOD.EQ.0) THEN
                 FCOM71 = FLOAT(NLOC71) + DNWV71
                 FCOM7  = FLOAT(NLOC7)  + DNWAV7
               ENDIF
C              IF (NLOC71.GT.NLOC7) THEN
C BEG MAY 2007
C              IF (FCOM71.GT.FCOM7) THEN
               IF (FCOM71.GT.FCOM7.OR.ICONSV.EQ.-1) THEN
C END MAY 2007
C END MAR 2007
                  IPERFT = 1
                  DNWAVU = DNWV71
                  DMWAVU = DMWV71
                  NLOCU  = NLOC71
                  MLOCU  = MLOC71
                  CSLOPU = CSLP71
                  ICD7   = ICD71
               ELSE
                  IF (IXIMPF(ILOADS).EQ.1.AND.MLOC71.GE.1) THEN
                    IF ((MLOC7/MLOC71).GE.2) THEN
C BEG AUG 2005
                       AXLINP = AXLWAV(ILOADS)
                       AXLTST = AXIAL/FLOAT(MLOC7)
C END AUG 2005
                       AXLRAT = ABS(AXLTST/AXLINP)
                       IF (AXLRAT.LE.0.5) THEN
                          IPERFT = 2
                          DNWAVU = DNWV71
                          DMWAVU = DMWV71
                          NLOCU  = NLOC71
                          MLOCU  = MLOC71
                          CSLOPU = CSLP71
                          ICD7   = ICD71
                       ENDIF
                    ENDIF
                  ENDIF
               ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG AUG 2005
               IF (NPRT.GE.0.AND.IPERFT.EQ.2) THEN
                 WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' *** NOTE: Although the number of circumfer. halfwaves in the',
     1'      local buckling mode of the PERFECT panel is less than',
     1'      or equal to that for the IMPERFECT panel, since the user',
     1'      has elected to allow PANDA2 to change the amplitude of',
     1'      the local buckling modal imperfection and since the',
     1'      axial wavelength of the buckling mode of the IMPERFECT',
     1'      shell is less than half that of the PERFECT shell, we use',
     1'      the PERFECT panel mode for computation of deformations',
     1'      Wxx, Wyy, Wxy in SUBROUTINE CURIMP.'
C END AUG 2005
C BEG MAR 2007
                 WRITE(IFILE,'(A,/,A,/,A)')
     1        ' ICD71, ICD7  = indicators for coordinate direction',
     1        '                in which the "local" portion of the',
     1        '                panel is longest.'
C END MAR 2007
                 WRITE(IFILE,'(A,/,A,I3,A,1P,E10.2,A,I3,A,1P,E10.2,A,
     1                          1P,E10.2,A,I2,A)')
     1' Local buckling mode for the PERFECT panel (PANDA theory):',
     1        ' (m=',MLOC71,', dm=',DMWV71,', n=',NLOC71,', dn=',
     1           DNWV71,', slope=',CSLP71,', ICD71=',ICD71,')'
                 WRITE(IFILE,'(A,/,A,I3,A,1P,E10.2,A,I3,A,1P,E10.2,A,
     1                          1P,E10.2,A,I2,A)')
     1' Local buckling mode for IMPERFECT panel (PANDA theory):',
     1        ' (m=',MLOC7,', dm=',DMWAV7,', n=',NLOC7,', dn=',
     1           DNWAV7,', slope=',CSLOP7,' ICD7=',ICD7,')'
               ENDIF
C
C23456789012345678901234567890123456789012345678901234567890123456789012
               IF (NPRT.GE.0.AND.IPERFT.EQ.1) THEN
C BEG MAY 2007
                 WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A)')
     1' *** NOTE: The number of circumfer. halfwaves in the local',
     1'           buckling mode of the PERFECT panel is greater',
     1'           than that for the IMPERFECT panel or ICONSV=-1  .',
     1'           Hence,the PERFECT panel mode is used for computation',
     1'           of deformations Wxx, Wyy, Wxy in SUBROUTINE CURIMP.'
C END MAY 2007
C BEG MAR 2007
                 WRITE(IFILE,'(A,/,A,/,A)')
     1        ' ICD71, ICD7  = indicators for coordinate direction',
     1        '                in which the "local" portion of the',
     1        '                panel is longest.'
C END MAR 2007
                 WRITE(IFILE,'(A,/,A,I3,A,1P,E10.2,A,I3,A,1P,E10.2,A,
     1                          1P,E10.2,A,I2,A)')
     1' Local buckling mode for the PERFECT panel (PANDA theory):',
     1        ' (m=',MLOC71,', dm=',DMWV71,', n=',NLOC71,', dn=',
     1           DNWV71,', slope=',CSLP71,', ICD71=',ICD71,')'
                 WRITE(IFILE,'(A,/,A,I3,A,1P,E10.2,A,I3,A,1P,E10.2,A,
     1                          1P,E10.2,A,I2,A)')
     1' Local buckling mode for IMPERFECT panel (PANDA theory):',
     1        ' (m=',MLOC7,', dm=',DMWAV7,', n=',NLOC7,', dn=',
     1           DNWAV7,', slope=',CSLOP7,' ICD7=',ICD7,')'
               ENDIF
C
C23456789012345678901234567890123456789012345678901234567890123456789012
               IF (NPRT.GE.0.AND.IPERFT.EQ.0) THEN
                 WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A)')
     1' *** NOTE: The number of circ. halfwaves in the local',
     1'           buckling mode of the PERFECT panel is less than or',
     1'           equal to that for the IMPERFECT panel. Therefore,',
     1'           the IMPERFECT panel mode is used for computation',
     1'           of deformations Wxx, Wyy, Wxy in SUBROUTINE CURIMP.'
C BEG MAR 2007
                 WRITE(IFILE,'(A,/,A,/,A)')
     1        ' ICD71, ICD7  = indicators for coordinate direction',
     1        '                in which the "local" portion of the',
     1        '                panel is longest.'
C END MAR 2007
                 WRITE(IFILE,'(A,/,A,I3,A,1P,E10.2,A,I3,A,1P,E10.2,A,
     1                          1P,E10.2,A,I2,A)')
     1' Local buckling mode for the PERFECT panel (PANDA theory):',
     1        ' (m=',MLOC71,', dm=',DMWV71,', n=',NLOC71,', dn=',
     1           DNWV71,', slope=',CSLP71,', ICD71=',ICD71,')'
                 WRITE(IFILE,'(A,/,A,I3,A,1P,E10.2,A,I3,A,1P,E10.2,A,
     1                          1P,E10.2,A,I2,A)')
     1' Inter-ring buckling mode for IMPERFECT panel (PANDA theory):',
     1        ' (m=',MLOC7,', dm=',DMWAV7,', n=',NLOC7,', dn=',
     1           DNWAV7,', slope=',CSLOP7,' ICD7=',ICD7,')'
               ENDIF
C END MAR 2005
               DNWV7P = DNWAVU
               DMWV7P = DMWAVU
               NLOC7P = NLOCU
               MLOC7P = MLOCU
               CSLP7P = CSLOPU
C              IF (IPRELM.EQ.3) ICD7 = ICD9
               FNPROD = ABS(FLOAT(NLOCU)+DNWAVU)*PI/B1EFF
               FMPROD = ABS(FLOAT(MLOCU)+DMWAVU)*PI/(B(2)-W2(2))
C BEG NOV 2003
               WALRT7 = W0LOC*MAX(FMPROD,FNPROD)
C END NOV 2003
C  AMPMD7 is established as described above.
C BEG AUG 2005
               AMPTST = 1.0
               IF (ABS(W0LOC).GT.0.0.AND.FNPROD.GT.0.0
     1                               .AND.FMPROD.GT.0.0)
     1         AMPTST = ABS(0.1/W0LOC)*MIN(1./FMPROD,1./FNPROD)
               IF (IMOD.EQ.0.AND.NPRT.GE.0)
     1          WRITE(IFILE,'(A,1P,E12.4)')
     1       ' (0.1 radian)/(shell wall rotation), AMPTST =',AMPTST
               AMPMD7 = AMPTST
               IF (IXIMPF(ILOADS).NE.0.AND.IMOD.EQ.0
     1                                .AND.NPRT.GE.0.AND.AMPTST.LT.1.0)
     1    WRITE(IFILE,'(/,A,/,A,I3,A,/,A,/,A,/,A,1PE12.4,/,A,/,A,/)')
     1     ' ******* WARNING ******* WARNING ******* WARNING *********',
     1  ' THERE ARE MANY CIRCUMFERENTIAL HALFWAVES (NLOC71=',NLOC71,')',
     1  ' IN THE LOCAL BUCKLING MODE.  THE MAXIMUM IMPERFECTION',
     1  ' WALL ROTATION OF 0.1 RADIAN HAS BEEN EXCEEDED. THE PRESENT',
     1  ' LOCAL IMPERFECTION AMPLITUDE, Wimp(local)=',
     1    ABS(W0LOC),
     1  ' WILL BE REDUCED BY THE FACTOR, AMPTST, LISTED JUST ABOVE',
     1  ' ************* END WARNING *********** END WARNING **********'
C23456789012345678901234567890123456789012345678901234567890123456789012
C END AUG 2005
               IF (AMPMD7.GT.1.0) AMPMD7 = 1.0
C BEG AUG 1996
C   Do not change initial imperfection amplitude because user says NO:
               IF (IXIMPF(ILOADS).EQ.0) AMPMD7 = 1.0
C END AUG 1996
C BEG DEC 2004
C BEG AUG 2005 (comment out "if (intgen...")
C              IF (INTGEN.EQ.0.AND.INTRNG.EQ.0) THEN
C END AUG 2005
                  FMLOC7 = FLOAT(MLOCU)+DMWAVU 
C BEG AUG 2005
                  AXLINP = B(2) 
                  IF (INTGEN.EQ.0.AND.INTRNG.EQ.0) 
     1                             AXLINP = AXLWAV(ILOADS)
                  AXLTST = B(2) 
C BEG JUN 2006
                  IF (ISTIF(1).EQ.0.AND.FMLOC7.GE.1.)
     1                              AXLTST = B(2)/FMLOC7
C END JUN 2006
C END AUG 2005
                  AXLRAT = ABS(AXLTST/AXLINP)
                  IF (AXLRAT.LT.AMPMD7) AMPMD7 = AXLRAT
                  IF (AMPMD7.GT.0.9999.AND.AXLRAT.GT.1.0)
     1                AMPMD7=AXLRAT
C   Do not change initial imperfection amplitude because user says NO:
                  IF (IXIMPF(ILOADS).EQ.0) AMPMD7 = 1.0
C BEG AUG 2005  (comment out ENDIF)
C              ENDIF
C END AUG 2005
C END DEC 2004
C BEG MAR 2004
C BEG AUG 2005
               IF (IXIMPF(ILOADS).NE.0.AND.NPRT.GE.0
     1                            .AND.IMOD.EQ.0.AND.AMPMD7.LT.0.999)
C END AUG 2005
     1         WRITE(IFILE,'(/,A,/,A,/,A,1P,E12.4,/,A,E12.4,/,A,E12.4)')
     1    ' Local imperfection amplitude is modified because the',
     1    ' critical buckling mode has a shorter axial halfwavelength',
     1    ' than that specified by the user:            AXLINP=',AXLINP,
     1    ' Critical buckling mode axial halfwavelength,AXLTST=',AXLTST,
     1    ' Imperfection amplitude is reduced by factor,AMPMD7=',AMPMD7
C END MAR 2004
C BEG AUG 2005
               IF (IXIMPF(ILOADS).NE.0.AND.NPRT.GE.0
     1                                .AND.IMOD.EQ.0.AND.AMPMD7.GT.1.0)
     1         WRITE(IFILE,'(/,A,/,A,/,A,1P,E12.4,/,A,E12.4,/,A,E12.4)')
     1    ' Local imperfection amplitude is modified because the',
     1    ' critical buckling mode has a longer axial halfwavelength',
     1    ' than that specified by the user:            AXLINP=',AXLINP,
     1    ' Critical buckling mode axial halfwavelength,AXLTST=',AXLTST,
     1  ' Imperfection amplitude is increased by factor,AMPMD7=',AMPMD7
               IF (IXIMPF(ILOADS).NE.0.AND.AMPTST.LT.AMPMD7) THEN
                  IF (IMOD.EQ.0.AND.NPRT.GE.0)
     1            WRITE(IFILE,'(A,/,A,1P,E12.4,A,1P,E12.4)')
     1          ' The "0.1 radian" rule governs. Imperfection',
     1          ' amplitude is now reduced from ',AMPMD7,' to ',AMPTST
                  AMPMD7 = AMPTST
               ENDIF
C END AUG 2005
               FACIM3 = (ABS(1./EILOCC))**1
               IF (FACIM3.LT.1.0) FACIM3 = 1.0
C              AMWIMP = AMPMD7*FACIM3*W0LOC
               AMWIMP = AMPMD7*W0LOC
               WYYLOC = WYYAMP*AMWIMP*FNPROD**2
C BEG DEC 2001
               WYYLCS = WYYLOC
C END DEC 2001
C              FAMP = 20.
               FAMP = WYYAMP - 1.
C23456789012345678901234567890123456789012345678901234567890123456789012
C              IF (W0LOC.NE.0.0.AND.IAMPLD(3).EQ.0.AND.
C    1                          (ISTIF(1).NE.0.OR.ISTIF(2).NE.0)) THEN
C                 ETOT1 = ABS(EPSTOT(1,1,1) - ABS(EPST1A))
C                 ETOT2 = ABS(EPSTOT(2,1,1) - ABS(EPST2A))C
C                 ETOT12= ABS(EPSTOT(3,1,1)) + ABS(EPT12A)
C                 WXLOC2 = (AMWIMP*FMPROD)**2
C                 WYLOC2 = (AMWIMP*FNPROD)**2
C                 WXYLC2 = FNPROD*FMPROD*(AMWIMP)**2
C                 FAMP1  = -1. +SQRT(1.+2.*ETOT1/WXLOC2)
C                 FAMP2  = -1. +SQRT(1.+2.*ETOT2/WYLOC2)
C                 FAMP3  = -1. +SQRT(1.+  ETOT12/WXYLC2)
C                 FAMP   = MAX(FAMP1,FAMP2)
C                 FAMP   = MAX(FAMP3,FAMP)
C              ENDIF
               WGARG = WG1
               IF (ISTIF(1).NE.0.OR.ISTIF(2).NE.0) WGARG = 0.
C
C  The local curvature changes and twist, Wxx, Wyy, Wxy,
C  of the imperfect panel are computed in SUBROUTINE CURIMP. If there
C  were no local buckling modal imperfection, then the quantities,
C  WXX7, WYY7, WXY7 would be zero. See above, in the section on
C  general buckling, for further explanation. In the special case
C  of buckling of the panel skin there are two sets of Wxx7, Wyy7, Wxy7:
C  Wxx7(1), Wyy7(1), Wxy7(1) correspond to sin variation (at peak sin = 1.0)
C  Wxx7(2), Wyy7(2), Wxy7(2) correspond to cos variation (at peak cos = 1.0).
C
C23456789012345678901234567890123456789012345678901234567890123456789012
               IF (NPRT.GE.0) WRITE(IFILE,'(A,/,A,I2,A,/,A,1PE12.4,/,
     1         A,1PE12.4,/,A,1PE12.4,/,A,I5,/,A,1PE12.4,/,
     1         A,I5,/,A,1PE12.4,/,A,1PE12.4,/,A,1PE12.4)')
     1   ' QUANTITIES USED FOR LOCAL BENDING OF IMPERFECT PANEL',
     1   ' (used for generation of WXX7,WYY7,WXY7), IMOD=',IMOD,':',
     1   '  Amplitude of overall ovalization,              WG1=',WGARG,
     1   '  Amplitude of  local  buckling modal imperf.,AMWIMP=',AMWIMP,
     1   '  Effective load factor for  local  buckling, EIGEFF=',EILOCC,
     1   '  Number of  axial halfwaves in  local  mode,      m=',MLOCU,
     1   '  Fractional axial halfwaves in  local  mode,     dm=',DMWAVU,
     1   '  Number of  circ. halfwaves in  local  mode,      n=',NLOCU,
     1   '  Fractional circ. halfwaves in  local  mode,     dn=',DNWAVU,
     1   '  Slope of nodal lines in local buckling mode, slope=',CSLOPU,
     1   '  Additional amplitude factor,                FACIM3=',FACIM3
C BEG AUG 2005
               IF (NPRT.GE.0) THEN
                WMPAMP = 1./ABS(EILOCC - 1.)
                WRITE(IFILE,'(A,1PE12.4)')
     1   '  Original imperfection is increased by 1/(EIGEFF-1)=',WMPAMP
               ENDIF
C END AUG 2005
C
C BEG OCT 1998
               IF (IMOD.EQ.0) THEN
                  IF (DMWAVU.NE.0.) IDMWAV(3) = 1
                  IF (DNWAVU.NE.0.) IDNWAV(3) = 1
               ENDIF
C END OCT 1998
               CALL CURIMP(R,AMWIMP,EILOCC,MLOCU,NLOCU,DMWAVU,
C BEG APR 2005
C    1              DNWAVU,CSLOPU,B(2)-W2(2),B1EFF,PI,ICD7,
C BEG APR 2006
     1              DNWAVU,CSLOPU*CSLMLT,B(2)-W2(2),B1EFF,PI,ICD7,
C END APR 2006
C END APR 2005
     1              WXX7(1),WYY7(1),WXY7(1),IRMOD,ISTIF,1,FAMP,FACIM3,
C BEG OCT 1996
     1              WGARG,AXIAL,IAMPOV(IRMOD),1,IFLAT,
     1              WXXX7(1),WXXY7(1),WYYX7(1),WYYY7(1))
C END OCT 1996
C BEG NOV 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG DEC 2005
               IF (NPRT.GE.0)
     1          WRITE(IFILE,'(/,A,/,A,A,/,A,1P,3E12.4,I5,/,A)')
     1       ' ********* NOTE ********* NOTE ********** NOTE *********',
     1       ' Prebuckling bending and twist',
     1       ' from local imperfection growth:',
     1       '  Wxx7(1),Wyy7(1),Wxy7(1),ICD7=',
     1          WXX7(1),WYY7(1),WXY7(1),ICD7,
     1       ' ******************************************************'
C END DEC 2005
C BEG JUN 2007
               IF (ICONSV.EQ.-1.AND.NPRT.GE.0)
     1          WRITE(IFILE,'(A,/,A)')
     1       ' The slope of the buckling nodal lines is set to zero in',
     1       ' the computation of Wxx7,Wyy7,Wxy7 because ICONSV=-1  .'
C END JUN 2007
C END NOV 2003
C
               CALL CURIMP(R,AMWIMP,EILOCC,MLOCU,NLOCU,DMWAVU,
C BEG APR 2005
C    1              DNWAVU,CSLOPU,B(2)-W2(2),B1EFF,PI,ICD7,
C BEG APR 2006
     1              DNWAVU,CSLOPU*CSLMLT,B(2)-W2(2),B1EFF,PI,ICD7,
C END APR 2006
C END APR 2005
     1              WXX7(2),WYY7(2),WXY7(2),IRMOD,ISTIF,1,FAMP,FACIM3,
C BEG OCT 1996
     1              WGARG,AXIAL,IAMPOV(IRMOD),2,IFLAT,
     1              WXXX7(2),WXXY7(2),WYYX7(2),WYYY7(2))
C END OCT 1996
C BEG NOV 2003
               IF (NPRT.GE.2) WRITE(IFILE,'(A,1P,3E12.4,I5)')
     1      ' Local imperfection growth: Wxx7(2),Wyy7(2),Wxy7(2),ICD7=',
     1                                   WXX7(2),WYY7(2),WXY7(2),ICD7
C END NOV 2003
C
                  IF (IMOD.EQ.0.AND.ITYPE.EQ.1.AND.JJJ.GE.5) THEN
                     JJJ1 = JJJ-1
                     JJJ2 = JJJ-2
                     JJJ3 = JJJ-3
                     JJJ4 = JJJ-4
C  Test for oscillation of the imperfection amplification factor, WYYAMP,
C  from design iteration to iteration.  Print a warning if there is such
C  oscillation.
                     IF (WYYAMX(JJJ, ILOADS,ICASE).GE.3.99
     1               .OR.WYYAMX(JJJ1,ILOADS,ICASE).GE.3.99
     1               .OR.WYYAMX(JJJ2,ILOADS,ICASE).GE.3.99
     1               .OR.WYYAMX(JJJ3,ILOADS,ICASE).GE.3.99) THEN
                        IF ((WYYAMX(JJJ, ILOADS,ICASE).LE.3.0
     1                   .OR.WYYAMX(JJJ1,ILOADS,ICASE).LE.3.0
     1                   .OR.WYYAMX(JJJ2,ILOADS,ICASE).LE.3.0
     1                   .OR.WYYAMX(JJJ3,ILOADS,ICASE).LE.3.0)
     1                  .AND.WYYAMX(JJJ1,ILOADS,ICASE).GT.0.9999)
C23456789012345678901234567890123456789012345678901234567890123456789012
     1                     WRITE(IFILE,1322) 
     1                        (WYYAMX(I,ILOADS,ICASE),I=JJJ4,JJJ)
 1322                FORMAT(/' *** WARNING *** WARNING *** WARNING ***'/
     1             ' CONVERGENCE TO AN OPTIMUM DESIGN IS DIFFICULT BE-'/
     1             ' CAUSE MARGINS MAY OSCILLATE FROM ITERATION TO'/
     1             ' ITERATION BECAUSE THE IMPERFECTION AMPLIFICATION'/
     1             ' FACTOR "WYYAMP" CORRESPONDING TO LOCAL BUCKLING'/
     1             ' OSCILLATES DURING DESIGN ITERATIONS AS FOLLOWS:'/
     1             ' WYYAMP=',1P5E12.4/
     1             ' SUGGESTIONS (Do ONE of the following):'/
     1             ' 1. INCREASE THE MAX. NUMBER OF DESIGN ITERATIONS.'/
     1             ' 2. IF IQUICK=1 AND THERE ARE STRINGERS RUN THE'/
     1             '    CASE WITH IQUICK = 0'/
     1             ' 3. FIX THE STIFFNER SPACING (USE "DECIDE") AND DO'/
     1             '    MULTIPLE OPTIMIZATIONS FOR SEVERAL DIFFERENT'/
     1             '    VALUES OF STIFFNER SPACING, EACH VALUE FIXED.'/
     1             ' 4. SET THE FACTORS OF SAFETY FOR BUCKLING'/
     1             '    TO 1.5 OR GREATER AND RE-OPTIMIZE. IF YOU THEN'/
     1             '    COME TO A BETTER OPTIMUM, RESET THE FACTORS OF'/
     1             '    SAFETY TO WHATEVER YOU HAD BEFORE AND RE-OPT.'/ 
     1             ' ** END WARNING *** END WARNING *** END WARNING **')
C                       IAMPLD(3) = 1
C                       WYYAMP = 4.0
C                       WYYAMP = 0.5*(WYYAMX(JJJ1,ILOADS,ICASE)
C    1                               +WYYAMX(JJJ2,ILOADS,ICASE))
                     ENDIF
                  ENDIF
            ENDIF
            CIRC = CIRCS
            B(1) = BSAVEX
C
C  Fill data appropriately if there are no rings and/or no stringers...
            IF (INTRNG.EQ.0) THEN
C    There are no stringers...
               FKNOCK(8) = FKNOCK(7)
               FKNKOI(2) = FKNKOI(3)
               ICD8 = ICD7
               MLOC8 = MLOC7
               NLOC8 = NLOC7
C BEG NOV 2003
               MLOC81= MLOC71
               NLOC81= NLOC71
C END NOV 2003
               DNWAV8= DNWAV7
               DMWAV8= DMWAV7
               CSLOP8= CSLOP7
               MLOC8P= MLOC7P
               NLOC8P= NLOC7P
               DNWV8P= DNWV7P
               DMWV8P= DMWV7P
               CSLP8P= CSLP7P
               EILOC8= EILOC7
               EILC81= EILC71
               EIG8X = EIG7X
               EILC82= EILC72
               WXX8  = WXX7(1)
               WYY8  = WYY7(1)
               WXY8  = WXY7(1)
C BEG OCT 1996
               WXXX8 = WXXX7(1)
               WXXY8 = WXXY7(1)
               WYYX8 = WYYX7(1)
               WYYY8 = WYYY7(1)
C END OCT 1996
               WYYAM2(2) = WYYAM2(1)
               WYYAM3(2) = WYYAM3(1)
               AMPMD8 = AMPMD7
C BEG NOV 2003
               WALRT8 = WALRT7
C END NOV 2003
            ENDIF
            IF (INTGEN.EQ.0) THEN
C    There are no rings...
               FKNOCK(9) = FKNOCK(8)
               FKNOCK(10)= FKNOCK(8)
               FKNKOI(1) = FKNKOI(2)
C BEG OCT 1998
               FKNKAL(1) = FKNKAL(2)
C END OCT 1998
               ICD9 = ICD8
               MLOC9 = MLOC8
               NLOC9 = NLOC8
C BEG NOV 2003
               MLOC91= MLOC81
               NLOC91= NLOC81
C END NOV 2003
               NLOC10= NLOC8
               MLOC10= MLOC8
               IF (JJJ.GE.1) NLOCX(JJJ,ILOADS,ICASE)=NLOC81
               IF (JJJ.GE.1) MLOCX(JJJ,ILOADS,ICASE)=MLOC81
               DNWAV9= DNWAV8
               DNWV10= DNWAV8
               NLOCAR= NLOC8
               DNWAVA= DNWAV8
               DMWAV9= DMWAV8
               DMWV10= DMWAV8
               MLOCAR= MLOC8
               DMWAVA= DMWAV8
               CSLOP9= CSLOP8
               CSLP10= CSLOP8
               MLOC9P= MLOC8P
               NLOC9P= NLOC8P
               DNWV9P= DNWV8P
               DMWV9P= DMWV8P
               CSLP9P= CSLP8P
               MLC10P= MLOC8P
               NLC10P= NLOC8P
               DNW10P= DNWV8P
               DMW10P= DMWV8P
               CSL10P= CSLP8P
               EILC82= EILC81
               EILOC9= EILOC8
               EILC10= EILOC9
               EILC91= EILC81
               EIG9X = EIG8X
               EILC92= EILC91
               WXX9  = WXX8
               WYY9  = WYY8
               WXY9  = WXY8
               WXX10 = WXX8
               WYY10 = WYY8
               WXY10 = WXY8
C BEG OCT 1996
               WXXX9 = WXXX8
               WXXY9 = WXXY8
               WYYX9 = WYYX8
               WYYY9 = WYYY8
               WXXX10= WXXX8
               WXXY10= WXXY8
               WYYX10= WYYX8
               WYYY10= WYYY8
C END OCT 1996
               WYYAM2(3) = WYYAM2(2)
               WYYAM2(4) = WYYAM2(2)
               WYYAM3(3) = WYYAM3(2)
               WYYAM3(4) = WYYAM3(2)
               AMPMD9= AMPMD8
C BEG NOV 2003
               WALRT9= WALRT8
C END NOV 2003
            ENDIF
            IRMOD = 0
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG JUN 2004
            SMALLX = 0.0001*SQRT(WXX7(1)**2 +WXX8**2 +WXX9**2)
            SMALLY = 0.0001*SQRT(WYY7(1)**2 +WYY8**2 +WYY9**2)
            SMALXY = 0.0001*SQRT(WXY7(1)**2+WXY7(2)**2+WXY8**2+WXY9**2)
            IF (ABS(WXX7(1)).LT.SMALLX) WXX7(1) = 0.0
            IF (ABS(WXX8).LT.SMALLX) WXX8 = 0.0
            IF (ABS(WXX9).LT.SMALLX) WXX9 = 0.0
            IF (ABS(WYY7(1)).LT.SMALLY) WYY7(1) = 0.0
            IF (ABS(WYY8).LT.SMALLY) WYY8 = 0.0
            IF (ABS(WYY9).LT.SMALLY) WYY9 = 0.0
            IF (ABS(WXY7(1)).LT.SMALXY) WXY7(1) = 0.0
            IF (ABS(WXY7(2)).LT.SMALXY) WXY7(2) = 0.0
            IF (ABS(WXY8).LT.SMALXY) WXY8 = 0.0
            IF (ABS(WXY9).LT.SMALXY) WXY9 = 0.0
            IF (WXX7(1).EQ.0.0.AND.WYY7(1).EQ.0.0.AND.WXY7(2).EQ.0.0)
     1         ICD7 = 0
            IF (WXX8.EQ.0.0.AND.WYY8.EQ.0.0.AND.WXY8.EQ.0.0) ICD8 = 0
            IF (WXX9.EQ.0.0.AND.WYY9.EQ.0.0.AND.WXY9.EQ.0.0) ICD9 = 0
C END JUN 2004
C BEG DEC 1995
C        IF (INTGEN.EQ.1.OR.INTRNG.EQ.1.OR.INTLOC.EQ.1) THEN
         IF (NPRT.GE.0.AND.
     1      (INTGEN.EQ.1.OR.INTRNG.EQ.1.OR.INTLOC.EQ.1)) THEN
C END DEC 1995
C BEG MAY 1997
            IF ((IMOD.EQ.0.AND.(NPRT.GE.1.OR.JLAST.EQ.1))
C END MAY 1997
     1                  .OR.(ITYPE.EQ.1.AND.NPRT.GE.2)) THEN
                    AMPMDX = 1.0
C BEG NOV 2003
                    WALRTX = WG1*MAX(2.*PI/CIRC,PI/(AXIAL*LENMOD)) 
C END NOV 2003
                    AMPOVL = 1.0
                    IF (IMOD.EQ.0) THEN
                       IF (IAMPOV(1).EQ.1.OR.IAMPOV(2).EQ.1.OR.
     1                     IAMPOV(3).EQ.1.OR.IAMPOV(4).EQ.1) 
     1                     AMPOVL=WYYAM2(3)
C BEG OCT 2006
      IF (NPRT.GE.1) WRITE(IFILE,'(/,/,/,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************',
     1' ************          CHAPTER 10.4           *****************',
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************'
      IF (NPRT.GE.0) WRITE(IFILE,'(A,I3,A)')
     1' **** CHAPTER 10.4: DESIGN PERTURBATION INDEX, IMOD=',IMOD,' ***'
      IF (NPRT.GE.0) WRITE(IFILE,'(/,A,/,A,/,A)')
     1 ' *************************************************************',
     1 ' CHAPTER 10.4 Present a summary of imperfection sensitivity',
     1 '              results. (See Section 13 and Table 9 of [1K])'
         WRITE(IFILE,'(/,A)')
     1 ' ******* SUMMARY OF IMPERFECTION SENSITIVITY RESULTS *********'
C END OCT 2006
C BEG NOV 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
                       WRITE(IFILE,1316) W0LOC,WALRT7,AMPMD7,WYYAM2(1),
     1                                   W0PAN,WALRT8,AMPMD8,WYYAM2(2),
     1                                     WG1,WALRTX,AMPMDX,AMPOVL,
     1                                     WG2,WALRT9,AMPMD9,WYYAM2(3),
     1                                     WG2,WALRT9,AMPMD9,WYYAM2(4)
                    ELSE
                       IF (IAMPOV(1).EQ.1.OR.IAMPOV(2).EQ.1.OR.
     1                     IAMPOV(3).EQ.1.OR.IAMPOV(4).EQ.1) 
     1                     AMPOVL=WYYAM3(3)
                       WRITE(IFILE,1316) W0LOC,WALRT7,AMPMD7,WYYAM3(1),
     1                                   W0PAN,WALRT8,AMPMD8,WYYAM3(2),
     1                                     WG1,WALRTX,AMPMDX,AMPOVL,
     1                                     WG2,WALRT9,AMPMD9,WYYAM3(3),
     1                                     WG2,WALRT9,AMPMD9,WYYAM3(4)
C END NOV 2003
                    ENDIF
                    IF (INTLOC.NE.0) THEN
C BEG APR 1998
                       IF (IQUICK.EQ.1) THEN
                         WRITE(IFILE,1319) EILC72,EILC71,EILOC7,
     1                                     EILC82,EILC81,EILOC8,
     1                                     EILC91,EILC91,EILOC9,
     1                                     EILC92,EILC92,EILC10,INDAMP
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG MAR 2003
                         IF (IMOD.EQ.0.AND.EILC71.GT.EILC72)
C END MAR 2003
     1              WRITE(IFILE,'(/,A,1P,E12.4,A,1P,E12.4,/,A,/,A,/,A)')
     1' The eigenvalue, EILC71=',EILC71,' is greater than EILC72=',
     1  EILC72,
     1' because EILC72 is the critical one for the perfect shell,',
     1' whereas EILC71 is chosen because it corresponds to the most',
     1' harmful initial nonaxisymmetric imperfection shape.'
C BEG MAR 2003
                         IF (IMOD.EQ.0.AND.EILC81.GT.EILC82)
C END MAR 2003
     1              WRITE(IFILE,'(/,A,1P,E12.4,A,1P,E12.4,/,A,/,A,/,A)')
     1' The eigenvalue, EILC81=',EILC81,' is greater than EILC82=',
     1  EILC82,
     1' because EILC82 is the critical one for the perfect shell,',
     1' whereas EILC81 is chosen because it corresponds to the most',
     1' harmful initial nonaxisymmetric imperfection shape.'
                       ENDIF
                       IF (IQUICK.EQ.0) THEN
                         WRITE(IFILE,1334)        EILC71,EILOC7,
     1                                     EILC82,EILC81,EILOC8,
     1                                     EILC91,EILC91,EILOC9,
     1                                     EILC92,EILC92,EILC10,INDAMP
C BEG MAR 2003
                         IF (IMOD.EQ.0.AND.EILC81.GT.EILC82)
C END MAR 2003
     1              WRITE(IFILE,'(/,A,1P,E12.4,A,1P,E12.4,/,A,/,A,/,A)')
     1' The eigenvalue, EILC81=',EILC81,' is greater than EILC82=',
     1  EILC82,
     1' because EILC82 is the critical one for the perfect shell,',
     1' whereas EILC81 is chosen because it corresponds to the most',
     1' harmful initial nonaxisymmetric imperfection shape.'
                       ENDIF
                    ENDIF
                    IF (INTLOC.EQ.0) THEN
C23456789012345678901234567890123456789012345678901234567890123456789012
                      IF (INTRNG.NE.0) THEN
                         WRITE(IFILE,1330)
     1                                  EILC82,EILC81,EILOC8,
     1                                  EILC91,EILC91,EILOC9,
     1                                  EILC92,EILC92,EILC10
C BEG MAR 2003
                         IF (IMOD.EQ.0.AND.EILC81.GT.EILC82)
C END MAR 2003
     1              WRITE(IFILE,'(/,A,1P,E12.4,A,1P,E12.4,/,A,/,A,/,A)')
     1' The eigenvalue, EILC81=',EILC81,' is greater than EILC82=',
     1  EILC82,
     1' because EILC82 is the critical one for the perfect shell,',
     1' whereas EILC81 is chosen because it corresponds to the most',
     1' harmful initial nonaxisymmetric imperfection shape.'
                      ENDIF
C END APR 1998
                      IF (INTRNG.EQ.0)
     1                   WRITE(IFILE,1332)
     1                                  EILC91,EILC91,EILOC9,
     1                                  EILC92,EILC92,EILC10
                    ENDIF
                    IF (IFLAT.EQ.0.AND.CIRC.LT.0.9*3.14159*ABS(R))
     1                 WRITE(IFILE,1338)
C23456789012345678901234567890123456789012345678901234567890123456789012
 1338               FORMAT(/
     1            ' **************************************************'/
     1            ' NOTE: The overall imperfection and the inter-ring'/
     1            ' imperfection sensitivities are computed as if the'/
     1            ' panel were a half cylinder (spanning 180 deg.)'/
     1            ' This is done to help avoid unconservative designs.'/
     1            ' Ignore the number of circumferential halfwaves'/
     1            ' printed just below if the panel is shallower than'/
     1            ' 180 deg.'
     1            ' **************************************************')
                    WRITE(IFILE,1317)
                    WRITE(IFILE,1329)
     1               FKNOCK(7),MLOC7P,NLOC7P,DMWV7P,DNWV7P,CSLP7P,ICD7,
     1               WXX7(1),WYY7(1),WXY7(1),WXX7(2),WYY7(2),WXY7(2),
     1               FKNOCK(8),MLOC8P,NLOC8P,DMWV8P,DNWV8P,CSLP8P,ICD8,
     1               WXX8,WYY8,WXY8,
     1               FKNOCK(9),MLOC9P,NLOC9P,DMWV9P,DNWV9P,CSLP9P,ICD9,
     1               WXX9,WYY9,WXY9,
     1              FKNOCK(10),MLC10P,NLC10P,DMW10P,DNW10P,CSL10P,ICD10,
     1               WXX10,WYY10,WXY10
            ENDIF
         ENDIF
C BEG DEC 1995
C        IF (IMOD.EQ.0.AND.WYYGEN.EQ.0.0.AND.ISTIF(2).NE.0) THEN
         IF ((NPRT.GE.1.OR.JLAST.EQ.1).AND.
     1       IMOD.EQ.0.AND.WYYGEN.EQ.0.0.AND.ISTIF(2).NE.0) THEN
C END DEC 1995
C BEG DEC 2003
          IF (NPRT.GT.-1) WRITE(IFILE,
     1    '(/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,
     1                  /,A,/,A,/,A,/,A)')
C END DEC 2003
     1 ' ******** WARNING ******* WARNING ******** WARNING ********',
     1 ' THE PANEL IS CURVED, HAS RINGS, YET HAS NO OVERALL IMPERFEC-',
     1 ' TION. OVERALL IMPERFECTIONS (OUT-OF-ROUNDNESS AND/OR BUCKLING',
     1 ' MODAL IMPERFECTION) GIVE RISE TO CONSIDERABLE ADDITIONAL HOOP',
     1 ' COMPRESSION IN THE RING WEBS AND OUTSTANDING FLANGES, AS WELL',
     1 ' AS IN THE PANEL SKIN. PLEASE NOTE THAT, EVEN THOUGH YOU MAY',
     1 ' HAVE SET THE APPLIED LOAD TO A VALUE HIGHER THAN THE DESIGN',
     1 ' ULTIMATE LOAD BY A FACTOR EQUAL TO THE INVERSE OF A TYPICAL',
     1 ' KNOCKDOWN FACTOR, OR YOU MAY HAVE SET A RATHER HIGH FACTOR OF',
     1 ' SAFETY FOR GENERAL INSTABILITY, YOUR DESIGN MAY BE UNCONSER-',
     1 ' VATIVE.  PLEASE REDESIGN WITH USE OF REASONABLE AMPLITUDE(S)',
     1 ' FOR OUT-OF-ROUNDNESS AND/OR GENERAL BUCKLING MODAL IMPERFECT-',
     1 ' TION. YOU MAY COMPENSATE BY REDUCING THE FACTOR OF SAFETY',
     1 ' AND/OR THE APPLIED LOAD (AS LONG AS THE APPLIED LOAD REMAINS',
     1 ' AT LEAST AS LARGE AS THE ULTIMATE LOAD)',
     1 ' ****** END WARNING **** END WARNING *****END WARNING ********'
         ENDIF
         IF (IFLAT.EQ.0) THEN
C BEG DEC 1995
C         IF (NPRT.GE.2.OR.IMOD.EQ.0) THEN
          IF (NPRT.GE.0             ) THEN
C END DEC 1995
               WRITE(IFILE,1477)
            IF (NOTCM7.EQ.0.AND.NOTCM8.EQ.0)
     1         WRITE(IFILE,1471) EIG7X,EIG8X,EIG9X
            IF (NOTCM7.EQ.1.AND.NOTCM8.EQ.0)
     1         WRITE(IFILE,1474)       EIG8X,EIG9X
            IF (NOTCM7.EQ.0.AND.NOTCM8.EQ.1)
     1         WRITE(IFILE,1475) EIG7X,      EIG9X
            IF (NOTCM7.EQ.1.AND.NOTCM8.EQ.1)
     1         WRITE(IFILE,1476)             EIG9X
 1477       FORMAT(/
     1    ' =========================================================='/
     1    ' BUCKLING LOAD FACTORS AND IMPERFECTION SENSITIVITY SUMMARY'/
     1    ' ----------------------------------------------------------'/
     1    '                          LOCAL     INTER-RING      GENERAL'/
     1    '                        BUCKLING     BUCKLING      BUCKLING'/
     1    ' RATIOS OF BUCKLING LOADS FROM ARBOCZ THEORY TO THOSE FROM'/
     1    ' PANDA2 THEORY FOR THE PERFECT STRUCTURE:')
 1471       FORMAT('    (ARBOCZ/PANDA2):',1P3E13.4/
     1    ' ----------------------------------------------------------')
 1474       FORMAT('    (ARBOCZ/PANDA2):','  NOT COMPUTED',1P2E13.4/
     1    '  Local buckling load and knockdown factor are not computed'/
     1    '  from the ARBOCZ theory because the ARBOCZ theory does not'/
     1    '  apply when the stringers are closely spaced.'/
     1    ' ----------------------------------------------------------')
 1475       FORMAT('    (ARBOCZ/PANDA2):',1PE14.4,'  NOT COMPUTED',
     1                                                          1PE13.4/
     1    '  Inter-ring buckling and knockdown factor are not computed'/
     1    '  from the ARBOCZ theory because wide column option is on.'/
     1    ' ----------------------------------------------------------')
 1476       FORMAT('    (ARBOCZ/PANDA2):','  NOT COMPUTED',
     1                                         '  NOT COMPUTED',1PE13.4/
     1    '  Local buckling load and knockdown factor are not computed'/
     1    '  from the ARBOCZ theory because the ARBOCZ theory does not'/
     1    '  apply when the stringers are closely spaced.'//
     1    '  Inter-ring buckling and knockdown factor are not computed'/
     1    '  from the ARBOCZ theory because wide column option is on.'/
     1    ' ----------------------------------------------------------')
            WRITE(IFILE,1472) FKNOCK(7),FKNOCK(8),FKNOCK(9),
     1                        FKNKOI(3),FKNKOI(2),FKNKOI(1)
C23456789012345678901234567890123456789012345678901234567890123456789012
 1472       FORMAT(
     1    ' KNOCKDOWN FACTORS FOR IMPERFECTIONS DERIVED FROM'/
     1    ' PANDA2 THEORY VS THOSE FROM ARBOCZ 1992 UPDATE OF KOITERs'/
     1    ' 1963 SPECIAL THEORY:'/
     1    ' FROM PANDA2 THEORY:',1P3E13.4/
     1    ' FROM ARBOCZ THEORY:',1P3E13.4/
     1    ' THE GOVERNING KNOCKDOWN FACTOR FOR EACH TYPE OF BUCKLING'/
     1    ' (LOCAL, INTER-RING, GENERAL) IS SET EQUAL TO THE MINIMUM'/
     1    ' KNOCKDOWN FACTOR FOR THAT TYPE OF BUCKLING, REDUCED'/
     1    ' FURTHER BY THE RATIO (ARBOCZ/PANDA2) FOR THE PERFECT PANEL'/
     1    ' IF THE RATIO (ARBOCZ/PANDA2) IS LESS THAN UNITY:')
          ENDIF
         ENDIF
         IF (IFLAT.EQ.0) THEN
C BEG JAN 2006 ("MIN" statements commented out)
            IF (ICONSV.EQ.1) FKNOCK(7) = MIN(FKNOCK(7),FKNKOI(3))
            IF (IMOD.EQ.0.AND.FKNOCK(9).LT.FKNKOI(1)) FKNMLT = 1.0
            IF (ICONSV.EQ.1) FKNOCK(9) = MIN(FKNOCK(9),FKNKOI(1))
            IF (IMOD.EQ.0.AND.FKNOCK(9)*FKNMLT.GE.1.0) FKNMLT = 1.0
            IF (IMOD.EQ.0.AND.FKNOCK(8).LT.FKNKOI(2)) FKNMLS = 1.0
            IF (ICONSV.EQ.1) FKNOCK(8) = MIN(FKNOCK(8),FKNKOI(2))
            IF (IMOD.EQ.0.AND.FKNOCK(8)*FKNMLS.GE.1.0) FKNMLS = 1.0
C23456789012345678901234567890123456789012345678901234567890123456789012
C END JAN 2006
C BEG JUN 1998
            IF (IMOD.EQ.0) THEN
               FMDKD7 = 1.0
               FMDKD8 = 1.0
               FMDKD9 = 1.0
C BEG JULY 1998
               FLTSL7 = 0.
               FLTSL8 = 0.
               FLTSL9 = 0.
C END JULY 1998
               IF (EIG7X.LT.0.90.AND.B(1)/ABS(R).LE.1.0) THEN
                 FMDKD7 = 0.90/EIG7X
                 IF (NPRT.GE.0)
     1           WRITE(IFILE,'(/,A,/,A,1P,E12.4,/,A,/,A,/,A,/,A,/)')
     1         ' The ratio, (ARBOCZ/PANDA2), for local buckling of the',
     1         ' perfect panel is being increased by the factor',FMDKD7,
     1         ' because the panel between stringers is fairly shallow',
     1    ' and therefore the ARBOCZ theory is not strictly applicable',
     1         ' to this portion of the structure. Overly conservative',
     1         ' results may thereby be avoided.'
                 IF (EIG8X.EQ.EIG7X) FMDKD8 = FMDKD7
                 IF (EIG9X.EQ.EIG7X) FMDKD9 = FMDKD7
               ENDIF
            ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG JAN 2006 (arbocz commented out; FMDKD7,FMDKD8,FMDKD9 set to 1.0)
            IF (ICONSV.EQ.1) THEN
               IF (EIG7X.LT.1.0) FKNOCK(7) = FKNOCK(7)*EIG7X*FMDKD7
               IF (EIG8X.LT.1.0) FKNOCK(8) = FKNOCK(8)*EIG8X*FMDKD8
               IF (EIG9X.LT.1.0) FKNOCK(9) = FKNOCK(9)*EIG9X*FMDKD9
            ELSE
C  following three lines added, jan 2006
               FMDKD7 = 1.0
               FMDKD8 = 1.0
               FMDKD9 = 1.0
C BEG JAN 2007 (we also have to set EIG7X, EIG8X, EIG9X to unity!)
               EIG7X = 1.0
               EIG8X = 1.0
               EIG9X = 1.0
C END JAN 2007
            ENDIF
C END JAN 2006
C END JUN 1998
C BEG MAR 2007
            IF (NPRT.GE.0) WRITE(IFILE,'(A,I2,/)')
     1    ' The ARBOCZ theory is used only if ICONSV=1. ICONSV=',ICONSV
C23456789012345678901234567890123456789012345678901234567890123456789012
C            IF (NPRT.GE.0)
C    1       WRITE(IFILE,'(/,A,/,A,1P,E12.4,A,1P,E12.4,A,1P,E12.4)')
C    1     ' Knockdown factors for local, inter-ring, general buckling',
C    1     ' local=',FKNOCK(7),'; inter-ring=',FKNOCK(8),
C    1     '; general=',FKNOCK(9)
C END MAR 2007
C BEG DEC 1995
C           IF (NPRT.GE.2.OR.IMOD.EQ.0)
            IF (NPRT.GE.0             )
C END DEC 1995
C BEG NOV 2003 
     1         WRITE(IFILE,1473) FKNOCK(7),FKNOCK(8),FKNOCK(9),
     1              FKNOCK(9),FKNMLT,FKNOCK(8),FKNMLS
 1473          FORMAT(' USED NOW IN PANDA2:',1P3E13.4,/,
     1/,  ' FACTOR APPLIED TO ',1PE12.4,' FOR ALTERNATIVE SOLUTION FOR',
     1/,  ' GENERAL    BUCKLING WITH DISCRETE STIFFENERS, FKNMLT=',
     1    1P,E12.4,
     1/,  ' FACTOR APPLIED TO ',1PE12.4,' FOR ALTERNATIVE SOLUTION FOR',
     1/,  ' INTER-RING BUCKLING WITH DISCRETE STIFFENERS, FKNMLS=',
     1    1P,E12.4,
     1/,/,' ***NOTE*** IF THERE IS INTERNAL PRESSURE THESE KNOCKDOWN',
     1/,  '            FACTORS MAY BE CHANGED AS NOTED BELOW.',
     1/,  ' ==========================================================')
C END NOV 2003
         ENDIF
C     ENDIF
C BEG NOV 2003
      IF (INTPRS.EQ.1) THEN
         FKNCKP(7) = FKNOCK(7)
         FKNCKP(8) = FKNOCK(8)
         FKNCKP(9) = FKNOCK(9)
         FKNCKP(10)= FKNOCK(10)
         RETURN
      ENDIF
C END NOV 2003
C END OF (IFLAT.EQ.0) BRACKET
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG NOV 2003
 1316    FORMAT(/' LOCAL AND GLOBAL IMPERFECTION AMPLITUDES,'/
     1 ' AMPLITUDE MODIFIERS THAT KEEP MAX. WALL ROTATION GENERATED'/
     1 ' BY THE MODAL IMPERFECTION COMPONENT LESS THAT 0.1 RADIAN,'/
     1 ' AND AMPLIFICATION FACTORS TO ACCOUNT FOR GROWTH OF THE'/
     1 ' INITIAL IMPERFECTIONS DURING LOADING:'/
     1 '                     USER-PROVIDED  SHELL WALL    AMPLITUDE   ',
     1 ' AMPLIFICATION'/
     1 '                     IMPERFECTION    ROTATION     MODIFIER    ',
     1 ' FACTOR WYYAMP'/
     1 '                       AMPLITUDE    WALRTi(rad)    AMPMDi     ',
     1 ' FROM LOADING'/
     1 ' local imperfection ', 1P4E13.4/
     1 ' inter-ring imperf. ', 1P4E13.4/
     1 ' gen. out-of-round. ', 1P4E13.4/
     1 ' gen. modal imperf. ', 1P4E13.4/
     1 ' low-m genrl. modal ', 1P4E13.4/)
C END NOV 2003
 1319    FORMAT(
     1 ' BUCKLING LOAD FACTORS OF PERFECT AND IMPERFECT GEOMETRIES.'/
     1 ' NOTE: IN THIS SHORT SECTION, THE PANEL IS MODELLED AS IF IT'/
     1 '       WERE A COMPLETE CYLINDRICAL SHELL (PANEL THAT SUBTENDS'/
     1 '       180 DEGREES OF CIRCUMFERENCE).:'/
     1 '                    PERFECT PANEL,   PERFECT PANEL,  IMPERFECT'/
     1 '                   ORIGINAL STRESS   REDISTRIBUTION    PANEL'/
     1 '                     DISTRIBUTION    OF PREBUCKLING'/
     1 '                                       RESULTANTS'/
     1 ' local buckling    ', 1P3E14.4/
     1 ' inter-ring bucklng', 1P3E14.4/
     1 ' general buckling  ', 1P3E14.4/
     1 ' low-m general buck', 1P3E14.4//
C BEG AUG 1996
     1' growth of local imperfection is'/
     1'  (1=hyperbolic; 2=nonhyperbolic; 3=axial loading hyperbolic):'
     1  ,I2)
C END AUG 1996
C23456789012345678901234567890123456789012345678901234567890123456789012
 1334    FORMAT(
     1 ' BUCKLING LOAD FACTORS OF PERFECT AND IMPERFECT GEOMETRIES.'/
     1 ' NOTE: IN THIS SHORT SECTION, THE PANEL IS MODELLED AS IF IT'/
     1 '       WERE A COMPLETE CYLINDRICAL SHELL (PANEL THAT SUBTENDS'/
     1 '       180 DEGREES OF CIRCUMFERENCE).:'/
     1 '                    PERFECT PANEL,   PERFECT PANEL,  IMPERFECT'/
     1 '                   ORIGINAL STRESS   REDISTRIBUTION    PANEL'/
     1 '                     DISTRIBUTION    OF PREBUCKLING'/
     1 '                                       RESULTANTS'/
     1 ' local buckling        not computed',1PE12.4,1PE14.4/
     1 ' inter-ring bucklng', 1P3E14.4/
     1 ' general buckling  ', 1P3E14.4/
     1 ' low-m general buck', 1P3E14.4//
     1' growth of local imperfection is (1=hyperbolic; 2=nonhyper):',I2)
C23456789012345678901234567890123456789012345678901234567890123456789012
 1330    FORMAT(
     1 ' BUCKLING LOAD FACTORS OF PERFECT AND IMPERFECT GEOMETRIES.'/
     1 ' NOTE: IN THIS SHORT SECTION, THE PANEL IS MODELLED AS IF IT'/
     1 '       WERE A COMPLETE CYLINDRICAL SHELL (PANEL THAT SUBTENDS'/
     1 '       180 DEGREES OF CIRCUMFERENCE).:'/
     1 '                    PERFECT PANEL,   PERFECT PANEL,  IMPERFECT'/
     1 '                   ORIGINAL STRESS   REDISTRIBUTION    PANEL'/
     1 '                     DISTRIBUTION    OF PREBUCKLING'/
     1 '                                       RESULTANTS'/
     1 ' inter-ring bucklng', 1P3E14.4/
     1 ' general buckling  ', 1P3E14.4/
     1 ' low-m general buck', 1P3E14.4)
C23456789012345678901234567890123456789012345678901234567890123456789012
 1332    FORMAT(
     1 ' BUCKLING LOAD FACTORS OF PERFECT AND IMPERFECT GEOMETRIES.'/
     1 ' NOTE: IN THIS SHORT SECTION, THE PANEL IS MODELLED AS IF IT'/
     1 '       WERE A COMPLETE CYLINDRICAL SHELL (PANEL THAT SUBTENDS'/
     1 '       180 DEGREES OF CIRCUMFERENCE).:'/
     1 '                    PERFECT PANEL,   PERFECT PANEL,  IMPERFECT'/
     1 '                   ORIGINAL STRESS   REDISTRIBUTION    PANEL'/
     1 '                     DISTRIBUTION    OF PREBUCKLING'/
     1 '                                       RESULTANTS'/
     1 ' general buckling  ', 1P3E14.4/
     1 ' low-m general buck', 1P3E14.4)
C23456789012345678901234567890123456789012345678901234567890123456789012
 1317    FORMAT(/' KNOCKDOWN FACTORS FOR IMPERFECT GEOMETRY:'/
     1        '  KNOCKDOWN FACTORS k AND MODE SHAPES (M,N,SLOPE,i) k',
     1        ' (axial, circ., daxial, dcirc., slope, type)')
C BEG JUN 2004
 1329    FORMAT(
     1       '    Knockdown factor for local instability=  ',1PE9.2,
     1    '(m=',I3,',n=',I3,',dm=',0PF6.3,',dn=',0PF6.3,
     1                                    ',s=',0PF7.2,',icd=',I1,')'/
     1     ' Local changes in curv.,twist, Wxx1,Wyy1,Wxy1=',1P,3E10.2/
     1     ' Local changes in curv.,twist, Wxx2,Wyy2,Wxy2=',1P,3E10.2//
     1      '    Knockdown factor for inter-ring buckling=',1PE9.2,
     1    '(m=',I3,',n=',I3,',dm=',0PF6.3,',dn=',0PF6.3,
     1                                    ',s=',0PF7.2,',icd=',I1,')'/
     1     '    Bay changes in curv.,twist, Wxx,Wyy,Wxy=  ',1P,3E10.2//
     1      '    Knockdown factor for general instability=',1PE9.2,
     1    '(m=',I3,',n=',I3,',dm=',0PF6.3,',dn=',0PF6.3,
     1                                    ',s=',0PF7.2,',icd=',I1,')'/
     1     '    Genrl changes in curv.,twist, Wxx,Wyy,Wxy=',1P,3E10.2//
     1   '    Knockdown factor for low-m general instability=',1PE9.2,
     1    '(m=',I3,',n=',I3,',dm=',0PF6.3,',dn=',0PF6.3,
     1                                    ',s=',0PF7.2,',icd=',I1,')'/
     1     '    Genrl changes in curv.,twist, Wxx,Wyy,Wxy=',1P,3E10.2)
C END JUN 2004
C23456789012345678901234567890123456789012345678901234567890123456789012
      IF (IMLOC.EQ.0) THEN
         IF (ABS(WXX10).GT.ABS(WXX9)) WXX9 = WXX10
         IF (ABS(WYY10).GT.ABS(WYY9)) WYY9 = WYY10
         IF (ABS(WXY10).GT.ABS(WXY9)) THEN
            WXY9 = WXY10
            CSLOP9 = CSLP10
            ICD9   = ICD10
         ENDIF
C BEG OCT 1996
         IF (ABS(WXXX10).GT.ABS(WXXX9)) WXXX9 = WXXX10
         IF (ABS(WXXY10).GT.ABS(WXXY9)) WXXY9 = WXXY10
         IF (ABS(WYYX10).GT.ABS(WYYX9)) WYYX9 = WYYX10
         IF (ABS(WYYY10).GT.ABS(WYYY9)) WYYY9 = WYYY10
C END OCT 1996
         IF (FKNOCK(10).LT.FKNOCK(9)) FKNOCK(9)=FKNOCK(10)
      ENDIF
      IF (IQUICK.EQ.0.AND.IMOD.EQ.0.AND.EIGGGG.LT.0.3) THEN
         WRITE(IFILE,1345) EIGGGG
C23456789012345678901234567890123456789012345678901234567890123456789012
 1345    FORMAT(/' *********** WARNING *********** WARNING ***********'/
     1 ' Preliminary estimate of general buckling load factor is much'/
     1 ' less than unity (EIGGGG=',1PE12.4,'). This run may bomb. If'/
     1 ' it does, use "CHANGE" to greatly strengthen the structure and'/
     1 ' try again. Try increasing thicknesses first. Check loads.'/
     1 ' ************* END WARNING ********** END WARNING ***********'/)
      ENDIF
C
C***********************************************************************
C BEGIN CALCULATION OF "KNOCKDOWN" FACTORS TO ACCOUNT FOR IN-PLANE SHEAR
C LOADING AND ANISOTROPY IN BOSOR4-TYPE (IQUICK = 0) MODELS. Also,
C compute width-wise wide column buckling including growth of initial
C imperfection amplitudes due to applied loading.
C***********************************************************************
C
C BEG JULY 2007
      IF (NPRT.GE.0) THEN
      IF (NPRT.GE.0) WRITE(IFILE,'(A,I3,A)')
     1' **** CHAPTER 11: DESIGN PERTURBATION INDEX, IMOD=',IMOD,' ****'
      IF (ISTIF(1).EQ.0.AND.ISTIF(2).EQ.0) WRITE(IFILE,'(/,A,/,A)')
     1 ' *************************************************************',
     1 ' CHAPTER 11 is not executed because the panel is unstiffened.'
      ENDIF
C END JULY 2007
      IF (ISTIF(1).NE.0.OR.ISTIF(2).NE.0) THEN
C BEG OCT 2006
      IF (NPRT.GE.1) WRITE(IFILE,'(/,/,/,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************',
     1' ************          CHAPTER 11             *****************',
     1' **************************************************************',
     1' **************************************************************',
     1' **************************************************************'
      IF (NPRT.GE.0) WRITE(IFILE,'(A,I3,A)')
     1' **** CHAPTER 11: DESIGN PERTURBATION INDEX, IMOD=',IMOD,' ****'
      IF (NPRT.GE.0)
     1  WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1 ' *************************************************************',
     1 ' CHAPTER 11 Get change in stress resultants, Nx, Ny, Nxy in',
     1 '            various segments of the skin-stringer module',
     1 '            during prebuckling bending of the imperfect shell.',
     1 '            Also, do PANDA-type [1B] local, inter-ring, gen-',
     1 '            eral buckling analyses and PANDA-type stringer web',
     1 '            and ring web buckling analyses to get knockdown',
     1 '            factors to compensate for the lack of in-plane',
     1 '            shear Nxy loading and anisotropy in discretized',
     1 '            BOSOR4-type models. (See Section 11 in [1A])'
C END OCT 2006
C BEG DEC 2003
         IF (NPRT.GE.1) WRITE(IFILE,'(/,A,/,A,/,A,/,A)')
     1'***** BEGIN SUBROUTINE STRCON (GET DELSKN FOR LOC.BUCK.) *****',
     1' DELSKN = change in stress resultants, dNx,dNy,dNxy, in the',
     1'          various segments of the skin-stringer module due to',
     1'          prebuckling bending of the imperfect panel or shell.'
C END DEC 2003
         CALL STRCON(CONMAX,ISTIF,NSEG,NLAYER,LTYPE,EALLOW,
     1               MATL,ANGLE,EPS1,EPS2,EPS12,EPS10,EPS20,EPS120,
     1               B2,W2,ICONST,CONSTR,WORDB,IADDB,T,TAPE,DEGRAD,
     1               FSSTR,ETHERM,THERMX,THERMY,IPOINC,INUMTT,IMOD,
     1               EPSLOD,ZPARTX,ZPARTY,ETHRMX,ETHRMY,CRACK,ICHANG,
     1               EALLST,NPRT,NAPPL,IFILE,ITYPE,IICHAN,
     1               EPSTOT,EPSFIX,EPSEIG,1,INTEXT,ICASE,
     1               TEMP,FMULT,NNODES,IMTEMP,P,PWDD,IABT,1,1,0,13)
C23456789012345678901234567890123456789012345678901234567890123456789012
         IF (NPRT.GE.1) WRITE(IFILE,*)
     1'*****  END  SUBROUTINE STRCON (GET DELSKN FOR LOC.BUCK.) ******'
      ENDIF
C
      IF (IMOD.EQ.0) THEN
C BEG NOV 2003
         IF (NPRT.GE.1) WRITE(IFILE,
     1'(/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1'*** BEGIN SUBROUTINE BUCPAN (KNOCKDOWN PANDA-TYPE BUCKLING) ***',
     1'**** The purpose of the following BUCPAN execution is to find:',
     1'*** LOCAL BUCKLING (buckling of skin between stiffeners):',
     1'**** a.with in-plane shear Nxy and anisotropic effects included',
     1'**** b.without in-plane shear Nxy and anisotropic effects',
     1'*** INTER-RING BUCKLING (stringers smeared out):',
     1'**** a.with in-plane shear Nxy and anisotropic effects included',
     1'**** b.without in-plane shear Nxy and anisotropic effects',
     1'*** GENERAL INSTABILITY (rings and stringers smeared out):',
     1'**** a.with in-plane shear Nxy and anisotropic effects included',
     1'**** b.without in-plane shear Nxy and anisotropic effects',
     1'*** THE PURPOSE IS TO FIND KNOCKDOWN FACTORS TO COMPENSATE',
     1'*** FOR THE ABSENCE OF IN-PLANE SHEAR AND ANISOTROPY IN BOSOR4-',
     1'*** TYPE MODELS (DISCRETIZED MODULE MODELS).'
         IF (NPRT.GE.1) WRITE(IFILE,'(A,/,A)')
     1'*** NOTE: This set of calculations DOES include the effect',
     1'***       of initial geometric buckling modal imperfections.'
C23456789012345678901234567890123456789012345678901234567890123456789012
C END NOV 2003
 9255    CONTINUE
         ILABEL=9255
         IF (NPRT.GE.1) WRITE(IFILE,*) ' LABEL NO. IN STRIMP=',ILABEL
         FNYEFF = FNY
         FNY0FF = FNY0
         IF (ISTIF(2).EQ.0) THEN
            FNYEFF = FNY + DFNYPA
            FNY0FF = FNY0 + DFNYPB
         ENDIF
         IF (ISTIF(1).NE.5)
     1   CALL BUCPAN(IFILE,IMOD,JJJ,ICONST,CONSTR,WORDB,ISTIF,IREDUC,
     1           KOITER,LENMOD,CONMAX,FSGEN,FSPAN,FSLOC,EIGGGG,2,IPOINC,
     1           INUMTT,FKNOCK,IGENRL,CSLOPE,EILOCL,MLOCAL,ISKIN,
     1           MSHEAR,NSHEAR,MNOSHR,NNOSHR,ITUTOR,IWIDE,IQUICK,
     1           FNX,FNYEFF,FNXY,FNX0,FNY0FF,FNXY0,FNXP0,
     1           FNYP0,FNXYP0,FNXPL0,FNYPL0,FNXYPL,NLOCAL,ITIP,
     1           IABP,1,EPSLOD(4),RWBEIG,RWBTOT,ICASE,FSBSTR,1,TLOCAL,
C BEG NOV 2003
     1          1,0,1,9255,ICD7D,ICD8D,ICD9D,0,ILOADS,MORCON,NCASES,36)
C END NOV 2003
C
         IF (ISTIF(1).EQ.5) THEN
         CALL BUCPAN(IFILE,IMOD,JJJ,ICONST,CONSTR,WORDB,ISTIF,IREDUC,
     1           KOITER,LENMOD,CONMAX,FSGEN,FSPAN,FSLOC,EIGGGG,2,IPOINC,
     1           INUMTT,FKNOCK,IGENRL,CSLOPE,EILOCL,MLOCAL,ISKIN,
     1           MSHEAR,NSHEAR,MNOSHR,NNOSHR,ITUTOR,IWIDE,IQUICK,
     1           FNX,FNYEFF,FNXY,FNX0,FNY0FF,FNXY0,FNXP0,
     1           FNYP0,FNXYP0,FNXPL0,FNYPL0,FNXYPL,NLOCAL,ITIP,
     1           IABP,1,EPSLOD(4),RWBEIG,RWBTOT,ICASE,FSBSTR,1,TLOCAL,
C BEG NOV 2003
     1          0,0,0,9255,ICD7D,ICD8D,ICD9D,1,ILOADS,MORCON,NCASES,37)
C END NOV 2003
         IF (IRESTY.EQ.1) GO TO 2222
         ENDIF
         IF (NPRT.GE.1) WRITE(IFILE,*)
     1'**** END SUBROUTINE BUCPAN (KNOCKDOWN PANDA-TYPE BUCKL.) *******'
C
         IF (EIGGGG.EQ.0) EIGGGG = EIGBOW
         IF (IMOD.EQ.0.AND.ISTIF(1).NE.0) EILC82 = EIGSS
C BEG MAR 1996
C        FNNORM = SQRT(FNX**2 + FNY**2 + FNXY**2)
C END MAR 1996
         IF (FNNORM.EQ.0.) THEN
           EIGLCS(1) = EILOCL
           N = 1
         ENDIF
C
C BEG NOV 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
         IF (NPRT.GE.2)
     1    WRITE(IFILE,'(/,A,I5,A,/,A,1P,2E12.4,/,A,1P,2E12.4)')
     1  ' Label No. in STRIMP=',ILABEL,': Modifiers for knockdowns...',
     1  '  General Instability, FKNOCK(1), EIGRT9 =',FKNOCK(1),EIGRT9,
     1  '  Local Buckling,      FKNOCK(2), EIGRT7 =',FKNOCK(2),EIGRT7
C END NOV 2003
C BEG JUN 1998
         FKNOCK(1) = FKNOCK(1)*EIGRT9
         FKNOCK(2) = FKNOCK(2)*EIGRT7
C END JUN 1998
         MCRIP = MSKIN
         NCRIP = NSKIN
         IF (ABS(CSLOPE).LT.0.01.OR.ABS(CSLOPE).GT.10.) CSLOPE = 0.
         FKNOCK(2) = MIN(FKNOCK(2),FKNOCK(3))
         IF (FKNOCK(2).EQ.FKNOCK(3).AND.FKNOCK(2).LT.1.0) THEN
            MLOCNS = MLCNS3
            NLOCNS = NLCNS3
         ENDIF
         IF (ISTIF(1).EQ.0.AND.ISTIF(2).EQ.0) FKNOCK(2)=FKNOCK(1)
         IF (ISTIF(2).EQ.0) FKNOCK(4)=FKNOCK(1)
         IF (ISTIF(1).EQ.0.AND.ISTIF(2).NE.0) FKNOCK(4)=FKNOCK(2)
         CALL EQUFCE(ISTIF,B,B2,H,W,W2,RESULT,RSULT,NAPPL)
         IF (ISOGRD.EQ.1) FKNOCK(2) = 1.0
      ENDIF
C
      IF (ISTIF(1).NE.0.AND.ISOGRD.EQ.0.AND.ISKIPL.EQ.0) THEN
         RSTST1 = RESULT(2,1,1) + DELFCX(2,1)
         RESTST = RSTST1
         IF (ISTIF(1).EQ.5) THEN
            RSTST2 = RESULT(2,3,1) + DELFCX(2,3)
            RESTST = MIN(RSTST1,RSTST2)
         ENDIF
         IF (ISWWID.EQ.1.OR.RESTST.LT.0.0) THEN
            PI = 3.1415927
            WIDTH = B(1)
C BEG NOV 1995
            IF (ISTIF(1).EQ.5) WIDTH = B(1) - B2(1)
C END NOV 1995
            IF (ISTIF(1).EQ.4) WIDTH = B(1) - B2(1)
            EICOL = CX(5,5,1) - CX(2,5,1)**2/CX(2,2,1)
            WIDLAM = 1000000.
C           IF (ISTIF(1).NE.0.AND.WIDTH.LT.0.5*(B(2)-B2(2))
            IF (ISTIF(1).NE.0.AND.WIDTH.LT.0.2*(B(2)-B2(2))
     1                       .AND.RSTST1.LT.0.0.AND.WIDTH.GT.0.0)
     1            WIDLAM = 4.0*PI*PI*EICOL/(-RSTST1*WIDTH**2)
C BEG JULY 1996
            IF (ISWWID.EQ.1.AND.WIDTH.GT.0.0.AND.RSTST1.LT.0.)
C END JULY 1996
     1         WIDLAM = 4.0*PI*PI*EICOL/(-RSTST1*WIDTH**2)
            IF (WIDLAM.LT.0.0) WIDLAM = 1000000.
            IF (ISTIF(1).EQ.5) THEN
               EICOL2 = CX(5,5,3) - CX(2,5,3)**2/CX(2,2,3)
C BEG JULY 1996
               WIDLM2 = 1000000.
               IF (WIDTH.GT.0.0.AND.RSTST2.LT.0.0)
     1           WIDLM2 = 4.0*PI*PI*EICOL2/(-RSTST2*WIDTH**2)
C END JULY 1996
               IF (WIDLM2.GT.0.)
     1            WIDLAM = MIN(WIDLAM,WIDLM2)
            ENDIF
            IF (ISTIF(1).EQ.4) THEN
               ID = 2
               IF (IFAY(1).EQ.1) ID = 1
               EICOL2 = CX(5,5,ID) - CX(2,5,ID)**2/CX(2,2,ID)
C BEG JULY 1996
               WIDLM2 = 1000000.
               RESTXX = RESULT(2,ID,1)+DELFCX(2,1)
               IF (W2(1).GT.0.0.AND.RESTXX.LT.0.0)
     1           WIDLM2 = 4.0*PI*PI*EICOL2/(-RESTXX*W2(1)**2)
C END JULY 1996
               IF (WIDLM2.GT.0.) WIDLAM = MIN(WIDLAM,WIDLM2)
            ENDIF
            IF (IMOD.EQ.0) WIDLM0 = ABS(WIDLAM)
            IF (IMOD.EQ.0.AND.WIDLAM.LT.1.1.AND.WIDLAM.GT.0.0) THEN
               ISWWID = 1
C BEG DEC 2003
               IF (NPRT.GT.-1.AND.ICASE.EQ.1) WRITE(IFILE,1013)
               IF (NPRT.GT.-1.AND.ICASE.EQ.2) WRITE(IFILE,1015)
C END DEC 2003
               IF (WIDLAM.LT.10000.) WRITE(IFILE,1014) WIDLAM
            ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
            IF (NPRT.GE.2.AND.WIDLAM.LT.10000.) WRITE(IFILE,1014) WIDLAM
         ENDIF
      ENDIF
C BEG JAN 2007
C     IF ((IMOD.EQ.0.AND.JJJ.EQ.0.AND.NPRT.GE.1).OR.JLAST.EQ.1) THEN
      IF ((IMOD.EQ.0.AND.JJJ.EQ.0.AND.NPRT.GE.0).OR.JLAST.EQ.1) THEN
C END JAN 2007
C BEG DEC 1995
C BEG MAR 1997
C           IF (NPRT.GE.1.AND.IWIDE.EQ.0)
            IF (NPRT.GE.1.AND.(IWIDE.EQ.0.OR.ISTIF(2).NE.0))
C END MAR 1997
     1         WRITE(IFILE,13) EIGGGG,MSHEAR,NSHEAR,MNOSHR,NNOSHR
C BEG MAR 1997
C           IF (NPRT.GE.1.AND.IWIDE.EQ.1)
            IF (NPRT.GE.1.AND.IWIDE.EQ.1.AND.ISTIF(2).EQ.0)
C END MAR 1997
     1         WRITE(IFILE,1324) EIGGGG,MSHEAR,NSHEAR,MNOSHR,NNOSHR
            IF (NPRT.GE.1.AND.
     1          IQUICK.EQ.0.AND.ISTIF(1).NE.0.AND.ISOGRD.EQ.0)
     1         WRITE(IFILE,1312) EILOCL
            IF (NPRT.GE.1.AND.
     1         (ISTIF(1).EQ.0.OR.IQUICK.EQ.1).AND.ISOGRD.EQ.0)
     1          WRITE(IFILE,1313) EILOCL
            IF (NPRT.GE.1.AND.ISOGRD.EQ.0) THEN
               RPRINT = R
C              IF (IWIDE.EQ.1) RPRINT = 10000.*SQRT(AXIAL**2 +CIRC**2)
               IF (IQUICK.EQ.0.AND.ISTIF(1).NE.0.AND.ISOGRD.EQ.0)
     1            RPRINT = 10000.*SQRT(AXIAL**2 +CIRC**2)
               WRITE(IFILE,1314) MLOCAL,NLOCAL,CSLOPE,RPRINT
            ENDIF
C END DEC 1995
            IF (IMOD.EQ.0.AND.ITYPE.EQ.1.AND.JJJ.GE.5) THEN
               JJJ1 = JJJ-1
               JJJ2 = JJJ-2
               JJJ3 = JJJ-3
               JJJ4 = JJJ-4
               IF (NLOCX(JJJ, ILOADS,ICASE).LE.3
     1        .AND.NLOCX(JJJ1,ILOADS,ICASE).LE.3
     1        .AND.NLOCX(JJJ2,ILOADS,ICASE).LE.3
     1        .AND.NLOCX(JJJ3,ILOADS,ICASE).LE.3
     1        .AND.NLOCX(JJJ, ILOADS,ICASE).NE.0
     1        .AND.NLOCX(JJJ1,ILOADS,ICASE).NE.0) THEN
                IF (NLOCX(JJJ,ILOADS,ICASE).NE.NLOCX(JJJ1,ILOADS,ICASE)
     1          .OR.NLOCX(JJJ,ILOADS,ICASE).NE.NLOCX(JJJ2,ILOADS,ICASE)
     1          .OR.NLOCX(JJJ,ILOADS,ICASE).NE.NLOCX(JJJ3,ILOADS,ICASE)
     1                                                            ) THEN
C23456789012345678901234567890123456789012345678901234567890123456789012
                  WRITE(IFILE,1318) (NLOCX(I,ILOADS,ICASE),I=JJJ4,JJJ)
 1318             FORMAT(/' *** WARNING *** WARNING *** WARNING ***'/
     1          ' CONVERGENCE TO AN OPTIMUM DESIGN MAY BE DIFFICULT'/
     1          ' BECAUSE SOME MARGINS MAY OSCILLATE FROM ITERATION TO'/
     1          ' ITERATION SINCE THE NUMBER OF CIRCUMFERENTIAL WAVES'/
     1          ' IN THE GENERAL INSTABILITY BUCKLING MODE OSCILLATES'/
     1          ' FROM n = 2 TO n = 3 DURING DESIGN ITERATIONS:'/
     1          ' NOTE: n for the last 5 iterations =',5I6/
     1          ' SET THE MAXIMUM NO. OF ITERATIONS TO 15 OR MORE IF'/
     1          ' YOU HAVE NOT ALREADY DONE SO, AND "PANDAOPT" AGAIN.'/
     1          ' *** END WARNING *** END WARNING *** END WARNING ***')
                ENDIF
               ENDIF
C
               IF (MLOCX(JJJ, ILOADS,ICASE).LE.3
     1        .AND.MLOCX(JJJ1,ILOADS,ICASE).LE.3
     1        .AND.MLOCX(JJJ2,ILOADS,ICASE).LE.3
     1        .AND.MLOCX(JJJ3,ILOADS,ICASE).LE.3
     1        .AND.MLOCX(JJJ, ILOADS,ICASE).NE.0
     1        .AND.MLOCX(JJJ1,ILOADS,ICASE).NE.0) THEN
                IF (MLOCX(JJJ,ILOADS,ICASE).NE.MLOCX(JJJ1,ILOADS,ICASE)
     1          .OR.MLOCX(JJJ,ILOADS,ICASE).NE.MLOCX(JJJ2,ILOADS,ICASE)
     1          .OR.MLOCX(JJJ,ILOADS,ICASE).NE.MLOCX(JJJ3,ILOADS,ICASE)
     1                                                            ) THEN
C23456789012345678901234567890123456789012345678901234567890123456789012
                  WRITE(IFILE,1320) (MLOCX(I,ILOADS,ICASE),I=JJJ4,JJJ)
 1320             FORMAT(/' *** WARNING *** WARNING *** WARNING ***'/
     1          ' CONVERGENCE TO AN OPTIMUM DESIGN MAY BE DIFFICULT'/
     1          ' BECAUSE SOME MARGINS MAY OSCILLATE FROM ITERATION TO'/
     1          ' ITERATION SINCE THE NUMBER OF AXIAL HALF-WAVES'/
     1          ' IN THE GENERAL INSTABILITY BUCKLING MODE OSCILLATES'/
     1          ' FROM m = 2 TO m = 3 DURING DESIGN ITERATIONS:'/
     1          ' NOTE: m for the last 5 iterations =',5I6/
     1          ' SET THE MAXIMUM NO. OF ITERATIONS TO 15 OR MORE IF'/
     1          ' YOU HAVE NOT ALREADY DONE SO, AND "PANDAOPT" AGAIN.'/
     1          ' *** END WARNING *** END WARNING *** END WARNING ***')
                ENDIF
               ENDIF
            ENDIF
            IF (ITYPE.EQ.1.AND.JLAST.EQ.1.AND.NPRT.LT.1) GO TO 1309
C BEG DEC 1995
            IF (NPRT.GE.1.AND.ISOGRD.EQ.0) WRITE(IFILE,1311)
C BEG JAN 2007
C           IF (NPRT.GE.1.AND.ISTIF(1).NE.0) WRITE(IFILE,1315)
C BEG JUN 2007
            IF (NPRT.GE.0) WRITE(IFILE,1315)
C END JUN 2007
C END JAN 2007
            WRDISO = 'stringer'
            IF (ISOGRD.EQ.1) WRDISO = ' isogrid'
C BEG NOV 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
            WRDGEN =          '                                     '
            WRDWID =          '                                     '
C           WRDWID =          ' (not used in this run since IWIDE=0)'
            IF (IWIDE.EQ.1)
     1       WRDWID=          ' (used for wide column buckling calc)'
            IF (ISTIF(2).EQ.0) WRDGEN = WRDWID
C BEG JAN 2007
C           IF (NPRT.GE.1) WRITE(IFILE,131)
            IF (NPRT.GE.0) WRITE(IFILE,131)
C END JAN 2007
     1        FKNOCK(1),WRDGEN,FKNOCK(2),FKNOCK(3),FKNOCK(4),WRDWID,
     1        WRDISO,FKNOCK(5),FKNOCK(6)
C END NOV 2003
            IF (NPRT.GE.1.AND.ISOGRD.EQ.0) WRITE(IFILE,132)
     1        (RESULT(1,I,1),I=1,4),NAPPL(1),FNX+FNX0+FNXP0+FNXPL0,
     1        (RESULT(2,I,1),I=1,4),NAPPL(2),FNY+FNY0+FNYP0+FNYPL0,
     1        (RESULT(3,I,1),I=1,4),NAPPL(3),FNXY+FNXY0+FNXYPL,
     1       CX(1,1,1),CX(2,2,1),CX(3,3,1),CX(4,4,1),CX(5,5,1),CX(6,6,1)
C END DEC 1995
 1309       CONTINUE
      ENDIF
   13   FORMAT(//' Preliminary general buckling (from PANDA)= ',1PE12.4/
     1' (axial,circ.) waves with    shear and with anisotropic C(i,j)=('
     1,I4,',',I4,')'/
     1' (axial,circ.) waves without shear and without anisotrc C(i,j)=('
     1,I4,',',I4,')')
 1324   FORMAT(//' Wide column general buckling (from PANDA)= ',1PE12.4/
     1' (axial,circ.) waves with    shear and with anisotropic C(i,j)=('
     1,I4,',',I4,')'/
     1' (axial,circ.) waves without shear and without anisotrc C(i,j)=('
     1,I4,',',I4,')')
 1312   FORMAT(
     1' Preliminary local buckling (from PANDA: flat skin!) = ',1PE12.4)
 1313   FORMAT(
     1' Preliminary local buckling (from PANDA)             = ',1PE12.4)
 1314   FORMAT(
     1' Number of (axial,circ.) waves,    (MLOC,NLOC) =(',I3,',',I3,')'/
     1' Slope of the local buckling nodal lines,      CSLOPE=',1PE12.4/
     1' Radius of curvature, R, used for preliminary'/
     1'    local buckling load factor from PANDA,         R =',1PE12.4/)
 1311   FORMAT(
     1      ' Above local buckling load and mode may include rolling'/
     1' of the stringers. This model is used for the calculation of'/
     1' the knockdown factor given below to account for the effect of'/
     1' in-plane shear and anisotropy [e.g.C(4,6)] on local buckling.'/
     1' In-plane shear and anisotropy are not directly accounted for'/
     1' in any of the BOSOR4-type of discretized models. In order to'/
     1' compensate for this error, knockdown factors are established'/
     1' as given below for various types of buckling. These knockdowns'/
     1' account for:'/
     1    '  1. the effect of in-plane shear, and'/
     1    '  2. anisotropy [e.g. C(4,6), C(5,6)] in the panel skin.')
C BEG JAN 2007
C1315   FORMAT(
C    1' NOTE: THE LOCAL INSTABILITY AND UNDER-HAT-CRIPPLING KNOCKDOWN'/
C    1'       FACTORS LISTED BELOW ARE CALCULATED FROM MODELS IN WHICH'/
C    1'       THE PANEL SKIN IS ASSUMED TO BE FLAT!'/)
 1315   FORMAT(/
     1' In-plane shear and anisotropy are not directly accounted for'/
     1' in any of the BOSOR4-type of discretized models. In order to'/
     1' compensate for this error, knockdown factors are established'/
     1' as given below for various types of buckling. These knockdowns'/
     1' account for:'/
     1    '  1. the effect of in-plane shear, and'/
     1    '  2. anisotropy [e.g. C(4,6), C(5,6)] in the panel skin.')
C END JAN 2007
C BEG NOV 2003
  131   FORMAT(
     1' Knockdown factors from PANDA-type analysis are as follows:'/
     1  '    Knockdown factor for general instability= ',1PE12.4,A,/
     1  '    Knockdown factor for local instability=   ',1PE12.4,/
     1  '    Knockdown factor (under hat crippling)=   ',1PE12.4,/
     1  '    Knockdown factor for inter-ring buckling= ',1PE12.4,A,/
     1  '    Knockdown factor for ',  A, ' web bucklng=',1PE12.4,/
     1  '    Knockdown factor for   ring   web bucklng=',1PE12.4,/
     1' Please note that the purpose of these knockdown factors is NOT'/
     1' to compensate for initial imperfections.  You can account for'/
     1' initial imperfections by assigning amplitudes of local, inter-'/
     1' ring, and general imperfections in the forms of the local,'/
     1' inter-ring and general buckling modes. And/or you can use'/
     1' appropriate factors of safety (different for different'/
     1' buckling modes) to compensate for initial imperfections.'/)
C END NOV 2003
C
  132 FORMAT(
     1         ' Resultants in prebuckled panel module segments: SEG. 1  
     1     SEG. 2     SEG. 3     SEG.4     Nave(calc.)  Nave(given)'/
     1        '                  Axial resultant,   Nx =   ',1P,6E12.4/
     1        '        Circumferential resultant,   Ny =   ',1P,6E12.4/
     1        '         In-plane shear resultant,  Nxy =   ',1P,6E12.4//
     1        ' Constitutive terms, C(i,i), i=1,6, in skin=',1P,6E12.4)
C23456789012345678901234567890123456789012345678901234567890123456789012
C
C     IF (NLOCAL.GT.1.AND.IQUICK.EQ.0) THEN
C           WRITE(IFILE,1333) NLOCAL
C1333       FORMAT(//' ****** WARNING  WARNING  WARNING ******'/
C    1' THERE IS MORE THAN ONE HALF WAVE BETWEEN STRINGERS IN THE'/
C    1' LOCAL BUCKLING MODE, ACCORDING TO A PANDA-TYPE OF ANALYSIS.'/
C    1' PANDA PREDICTS NLOCAL = ',I3,'  HALF-WAVES BETWEEN STRINGERS.'/
C    1' THEREFORE, THE DISCRETIZED MODEL FOR LOCAL BUCKLING WILL NOT'/
C    1' BE USED FOR THIS CASE, NOR CAN KOITER POST-LOCAL-BUCKLING'/
C    1' THEORY BE USED. IF YOU WISH TO DO LOCAL POST BUCKLING ANALYSIS'/
C    1' YOU MUST CHANGE THE GEOMETRY EITHER BY INCREASING THE SKIN'/
C    1' BENDING STIFFNESS IN THE HOOP DIRECTION, OR BY PUTTING THE'/
C    1' STRINGERS CLOSER TOGETHER, OR BOTH.'/
C    1' ************ END WARNING    END WARNING   END WARNING *******'/)
C           IF (KOITER.EQ.1) CALL EXIT
C     ENDIF
C
      IF (EIGBOW.LT.0.0.OR.EILOCL.LT.0.) THEN
         WRITE(IFILE,15)
   15    FORMAT(//' ************* NEGATIVE BUCKLING LOAD(S) **********'/
     1' CHECK FOR THE FOLLOWING:'/
     1'   1. Are the signs of your applied loads correct?'/
     1'   2. Do you have a Load Set B that is more than large enough'/
     1'      to cause buckling by itself? (If you suspect that the'/
     1'      pressure is causing this trouble, run again with the'/
     1'      pressure in Load Set A instead of in Load Set B.)'/
     1'   3. Can you possibly put the tensile applied load components'/
     1'      in Load Set B rather than in Load Set A?'/
     1' CHANGE LOADS AND TRY AGAIN.'/' *************************'/)
C BEG FEB 1996
C BEG FEB 1999
         CALL LOADBA(28)
C END FEB 1999
         IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
C
         CALL ERREX
C
      ENDIF
C BEG OCT 1998
      FKNSRG(1) = FKNOCK(4)
      FKNSRG(2) = FKNOCK(4)
      FKNSRG(3) = FKNOCK(4)
C END OCT 1998
C
C***********************************************************************
C END CALCULATION OF "KNOCKDOWN" FACTORS TO ACCOUNT FOR IN-PLANE SHEAR
C LOADING AND ANISOTROPY IN BOSOR4-TYPE (IQUICK = 0) MODELS
C***********************************************************************
C
C
C BEG JAN 1991  (COMMENT OUT THE FOLLOWING. INAPPROPRIATE WITH BENDING)
C     IF (IQUICK.EQ.0) THEN
C       IF (ITYPE.EQ.1.AND.P.EQ.0.0.AND.IMOD.EQ.0.AND.EILOCL.GT.5) THEN
C          IQUICK = 1
C          WRITE(IFILE,*)' HIGH LOCAL BUCKLING LOAD FACTOR. REVERTING'
C          WRITE(IFILE,*)' TO QUICK ANALYSIS TYPE (IQUICK=1).'
C       ENDIF
C     ENDIF
C END JAN 1991
C
C BEG FEB 1996
 2222 CONTINUE
C END FEB 1996
      RETURN
      END
C
C END NOV 1995
C
C
C=DECK      CURIMP
      SUBROUTINE CURIMP(R,WIMP,EIGIMP,M,N,DMWAVE,DNWAVE,S,A,B,PI,ICD,
     1                  WXXIMP,WYYIMP,WXYIMP,IRMOD,ISTIF,ILOCAL,FAMP,
C BEG JULY 1995
C BEG OCT 1996
     1                  FACIM3,WGARG,AXIAL,IAMPOV,ITRIG,IFLAT,
     1                  WXXXIP,WXXYIP,WYYXIP,WYYYIP)
C END OCT 1996
C END JULY 1995
C
C  FIND THE CURVATURE CHANGES, WXXIMP AND WYYIMP, AND THE TWIST, WXYIMP,
C  GENERATED FROM AMPLIFICATION OF THE IMPERFECTION DURING LOADING.
C
C BEG NOV 2003
      COMMON/OUTP/NPRT
C END NOV 2003
      DIMENSION ISTIF(2)
      AMP0 = 20.
      AMP = AMP0
      IF ((EIGIMP-1.).GT.(1./AMP0)) AMP = 1./(EIGIMP-1.)
C BEG JUN 2004
C     IF (ILOCAL.EQ.1) AMP = MIN(AMP,FAMP)
      IF (ILOCAL.EQ.1.AND.ISTIF(1).NE.0) AMP = MIN(AMP,FAMP)
C END JUN 2004
      WAMP = WIMP*AMP*FACIM3**1
C BEG JULY 1995
      THETA = 0.0
C     IF (IFLAT.EQ.0) THEN
C        THETA = 0.5*B/ABS(R)
C        WCOMP = 2.*ABS(R)*(1. - COS(THETA))
C        IF (ABS(WIMP*AMP).GT.WCOMP)
C    1         WAMP = WCOMP*FACIM3**1*WAMP/ABS(WAMP)
C     ENDIF
C END JULY 1995
      FM = (FLOAT(M)+DMWAVE)*PI/A
      FN = (FLOAT(N)+DNWAVE)*PI/B
      FM2 = FM*FM
      FN2 = FN*FN
      WXXIMP = 0.
      WYYIMP = 0.
      WXYIMP = 0.
C BEG OCT 1996
      WXXXIP = 0.
      WXXYIP = 0.
      WYYXIP = 0.
      WYYYIP = 0.
C END OCT 1996
C     WRITE(8,*)' EIGIMP,PI,WIMP,AMP,M,N,A,B,DMWAVE,DNWAVE,FACIM3=',
C    1            EIGIMP,PI,WIMP,AMP,M,N,A,B,DMWAVE,DNWAVE,FACIM3
C     WRITE(8,*)' ICD,WAMP,WCOMP,THETA=',ICD,WAMP,WCOMP,THETA
C BEG NOV 2003
      IF (NPRT.GE.2)
     1 WRITE(8,'(A,A,1P,E12.4,A,/,A,1P,E12.4,/,A,1P,E12.4)')
     1' Amplitude of prebuckling bending due to loading, WAMP=',
C BEG MAR 2009 (print out -WAMP instead of WAMP)
     1'WIMP/(EIGEFF-1.)=',-WAMP,' in which',
     1' WIMP = Amplitude of initial buckling modal imperfection=',
     1  -WIMP,
C END MAR 2009
     1' EIGEFF = effective buckling load factor=                ',
     1  EIGIMP
C END NOV 2003
      IF (ICD.EQ.1) THEN
C PANEL LONG IN X-DIRECTION
C BEG OCT 1996
         IF (ITRIG.EQ.0.OR.ITRIG.EQ.1) THEN
            WXXIMP = WAMP*FM2
            WXXXIP = WAMP*FM2*FM
         ENDIF
         IF (ITRIG.EQ.2) THEN
            WXXIMP = 0.0
            WXXXIP = 0.0
         ENDIF
         EYA = FN2 + FM2*S**2
         EYB = 2.*FN*FM*S
         EYAQ = EYA*(-FM*S) + EYB*(-FN)
         EYBQ = EYA*FN + EYB*(FM*S)
         EYAQQ = EYA*FM
         EYBQQ = EYB*(-FM)
         IF (ITRIG.EQ.0) THEN
            EYAEYB = SQRT(EYA**2 + EYB**2)
            WYYIMP = WAMP*EYAEYB
            EYAEYB = SQRT(EYAQ**2 + EYBQ**2)
            WYYYIP = WAMP*EYAEYB
            EYAEYB = SQRT(EYAQQ**2 + EYBQQ**2)
            WYYXIP = WAMP*EYAEYB
         ELSE
            IF (ITRIG.EQ.1) THEN
               WYYIMP = WAMP*EYA
               WYYYIP = WAMP*EYAQ
               WYYXIP = WAMP*EYAQQ
            ENDIF
            IF (ITRIG.EQ.2) THEN
               WYYIMP = WAMP*EYB
               WYYYIP = WAMP*EYBQ
               WYYXIP = WAMP*EYBQQ
            ENDIF
         ENDIF
C        WRITE(8,*)' ITRIG,EYA,EYB,EYAEYB,WXXIMP,WYYIMP,WXYIMP=',
C    1               ITRIG,EYA,EYB,EYAEYB,WXXIMP,WYYIMP,WXYIMP
         EYA = FM2*S
         EYB = FM*FN
         EYAQ = EYA*(-FM)
         EYBQ = EYB*FM
         IF (ITRIG.EQ.0) THEN
            EYAEYB = SQRT(EYA**2 + EYB**2)
            WXYIMP = WAMP*EYAEYB
            EYAEYB = SQRT(EYAQ**2 + EYBQ**2)
            WXXYIP = WAMP*EYAEYB
         ELSE
            IF (ITRIG.EQ.1) THEN
               WXYIMP = WAMP*EYA
               WXXYIP = WAMP*EYAQ
            ENDIF
            IF (ITRIG.EQ.2) THEN
               WXYIMP = WAMP*EYB
               WXXYIP = WAMP*EYBQ
            ENDIF
         ENDIF
C END OCT 1996
C        WRITE(8,*)' ITRIG,EYA,EYB,EYAEYB,WXYIMP=',
C    1               ITRIG,EYA,EYB,EYAEYB,WXYIMP
      ENDIF
      IF (ICD.EQ.2) THEN
         SI = 0.
         IF (S.NE.0.) SI = 1./S
C BEG OCT 1996
         IF (ITRIG.EQ.0.OR.ITRIG.EQ.1) THEN
            WYYIMP = WAMP*FN2
            WYYYIP = WAMP*FN2*FN
         ENDIF
         IF (ITRIG.EQ.2) THEN
            WYYIMP = 0.0
            WYYYIP = 0.0
         ENDIF
         EYA = FM2 + FN2*SI**2
         EYB = 2.*FM*FN*SI
         EYAQ = EYA*(-FN*SI) + EYB*(-FM)
         EYBQ = EYA*FM + EYB*FN*SI
         EYAQQ = EYA*FN
         EYBQQ = EYB*(-FN)
         IF (ITRIG.EQ.0) THEN
            EYAEYB = SQRT(EYA**2 + EYB**2)
            WXXIMP = WAMP*EYAEYB
            EYAEYB = SQRT(EYAQ**2 + EYBQ**2)
            WXXXIP = WAMP*EYAEYB
            EYAEYB = SQRT(EYAQQ**2 + EYBQQ**2)
            WXXYIP = WAMP*EYAEYB
         ELSE
            IF (ITRIG.EQ.1) THEN
               WXXIMP = WAMP*EYA
               WXXXIP = WAMP*EYAQ
               WXXYIP = WAMP*EYAQQ
            ENDIF
            IF (ITRIG.EQ.2) THEN
               WXXIMP = WAMP*EYB
               WXXXIP = WAMP*EYBQ
               WXXYIP = WAMP*EYBQQ
            ENDIF
         ENDIF
C        WRITE(8,*)' ITRIG,EYA,EYB,EYAEYB,WXXIMP,WYYIMP,WXYIMP=',
C    1               ITRIG,EYA,EYB,EYAEYB,WXXIMP,WYYIMP,WXYIMP
         EYA = FN2*SI
         EYB = FN*FM
         EYAQ = EYA*(-FN)
         EYBQ = EYB*FN
         IF (ITRIG.EQ.0) THEN
            EYAEYB = SQRT(EYA**2 + EYB**2)
            WXYIMP = WAMP*EYAEYB
            EYAEYB = SQRT(EYAQ**2 + EYBQ**2)
            WYYXIP = WAMP*EYAEYB
         ELSE
            IF (ITRIG.EQ.1) THEN
               WXYIMP = WAMP*EYA
               WYYXIP = WAMP*EYAQ
            ENDIF
            IF (ITRIG.EQ.2) THEN
               WXYIMP = WAMP*EYB
               WYYXIP = WAMP*EYBQ
            ENDIF
         ENDIF
C END OCT 1996
C        WRITE(8,*)' ITRIG,EYA,EYB,EYAEYB,WXYIMP=',
C    1               ITRIG,EYA,EYB,EYAEYB,WXYIMP
      ENDIF
C ADD IN THE OUT-OF-ROUNDNESS
      IF (IAMPOV.EQ.1) AWG1 = WGARG*AMP*FACIM3**1
      IF (IAMPOV.EQ.0) AWG1 = 0.0
C BEG MAR 2007 (the out-of-roundness is now assumed to be prismatic)
C     DELWXX = AWG1*(PI/AXIAL)**2
      DELWXX = 0.
C END MAR 2007
      DELWYY = AWG1*(2./R)**2
C BEG OCT 1996
C BEG MAR 1997
C BEG MAR 2007 (the out-of-roundness is now assumed to be prismatic)
C     DLWXXX = AWG1*(PI/AXIAL)**3
      DLWXXX = 0.0
C END MAR 2007
      DLWYYY = AWG1*(2./R)**3
C END MAR 1997
C     WRITE(8,*)' WGARG,AWG1,DELWXX,DELWYY=',WGARG,AWG1,DELWXX,DELWYY
      IF (WAMP.NE.0.) THEN
         WXXIMP = WXXIMP + ABS(DELWXX)*WAMP/ABS(WAMP)
         WYYIMP = WYYIMP + ABS(DELWYY)*WAMP/ABS(WAMP)
         WXXXIP = WXXXIP + ABS(DLWXXX)*WAMP/ABS(WAMP)
         WYYYIP = WYYYIP + ABS(DLWYYY)*WAMP/ABS(WAMP)
      ELSE
         WXXIMP = DELWXX
         WYYIMP = DELWYY
         WXXXIP = DLWXXX
         WYYYIP = DLWYYY
      ENDIF
C END OCT 1996
C     WRITE(8,*)' ITRIG,WXXIMP,WYYIMP,WXYIMP=',
C    1            ITRIG,WXXIMP,WYYIMP,WXYIMP
      RETURN
      END
C
C
C
C=DECK      CURGRD
      SUBROUTINE CURGRD(EIG0,EIG1,FACT)
C
C  PURPOSE IS TO CALCULATE FACTOR, FACT, FOR GENERATING PERTURBED
C  IMPERFECTION CURVATURES AND TWIST.
C
      REAL NUM
      NUM = EIG0 - 1.
      DEN = EIG1 - 1.
      IF (NUM.GE.0.0) THEN
C        FACT = 1.33
         FACT = 4.00
         IF (DEN.GT.0.) THEN
            FACT = NUM/DEN
C           IF (FACT.GT.1.33) FACT = 1.33
C           IF (FACT.LT.0.75) FACT = 0.75
            IF (FACT.GT.4.00) FACT = 4.00
            IF (FACT.LT.0.25) FACT = 0.25
         ENDIF
      ELSE
         IF (NUM.LT.-0.5) THEN
            FACT = 0.75
            IF (DEN.LT.NUM) FACT = 1.33
            RETURN
         ENDIF
         IF (NUM.LT.-0.125) THEN
            FACT = 0.50
            IF (DEN.LT.NUM) FACT = 2.00
            RETURN
         ENDIF
         FACT = 0.25
         IF (DEN.LT.NUM) FACT = 4.00
      ENDIF
      RETURN
      END
C
C
C
C=DECK      CSHFT2
      SUBROUTINE CSHFT2(IFILE,NPRT,ISEG,JJJ,IMOD,C,CNEW)
C
C  PURPOSE IS TO DERIVE CNEW(I,J) FOR KOITER BRANCH. IT IS ASSUMED
C  THAT AXIAL BENDING OCCURS ABOUT AXIAL NEUTRAL PLANE, HOOP BENDING
C  OCCURS ABOUT HOOP NEUTRAL PLANE, AND TWISTING OCCURS ABOUT NEUTRAL
C  PLANE FOR IN-PLANE SHEARING AND TWISTING.
C
C  INPUT...
C
C    C = OLD CONSTITUTIVE MATRIX
C
C  OUTPUT...
C
C    CNEW = NEW CONSTITUTIVE MATRIX
C
      DIMENSION C(6,6),CNEW(6,6)
C
C    MEMBRANE STIFFNESSES ARE UNCHANGED...
      DO 10 I = 1,3
      DO 10 J = 1,3
         CNEW(I,J) = C(I,J)
   10 CONTINUE
C
      D14 = -C(1,4)/C(1,1)
      D25 = -C(2,5)/C(2,2)
      D36 = -C(3,6)/C(3,3)
      DAVE1= 0.5*(D14 + D25)
      DAVE2= 0.5*(D14 + D36)
      DAVE3= 0.5*(D25 + D36)
C
      CNEW(1,4) = 0.0
      CNEW(4,1) = 0.0
      CNEW(1,5) = C(1,5) + DAVE1*C(1,2)
      CNEW(5,1) = CNEW(1,5)
      CNEW(1,6) = C(1,6) + DAVE2*C(1,3)
      CNEW(6,1) = CNEW(1,6)
C
      CNEW(2,4) = C(2,4) + DAVE1*C(1,2)
      CNEW(4,2) = CNEW(2,4)
      CNEW(2,5) = 0.0
      CNEW(5,2) = 0.0
      CNEW(2,6) = C(2,6) + DAVE3*C(2,3)
      CNEW(6,2) = CNEW(2,6)
C
      CNEW(3,4) = C(3,4) + DAVE2*C(1,3)
      CNEW(4,3) = CNEW(3,4)
      CNEW(3,5) = C(3,5) + DAVE3*C(2,3)
      CNEW(5,3) = CNEW(3,5)
      CNEW(3,6) = 0.0
      CNEW(6,3) = 0.0
C
      CNEW(4,4) = C(4,4) + 2.*D14*C(1,4) + D14*D14*C(1,1)
      CNEW(4,5) = C(4,5) + DAVE1*(C(2,4)+C(1,5)) + DAVE1*DAVE1*C(1,2)
      CNEW(5,4) = CNEW(4,5)
      CNEW(4,6) = C(4,6) + DAVE2*(C(1,6)+C(3,4)) + DAVE2*DAVE2*C(1,3)
      CNEW(6,4) = CNEW(4,6)
C
      CNEW(5,5) = C(5,5) + 2.*D25*C(2,5) + D25*D25*C(2,2)
      CNEW(5,6) = C(5,6) + DAVE3*(C(2,6)+C(3,5)) + DAVE3*DAVE3*C(2,3)
      CNEW(6,5) = CNEW(5,6)
C
      CNEW(6,6) = C(6,6) + 2.*D36*C(3,6) + D36*D36*C(3,3)
C
      IF (IMOD.EQ.0.AND.JJJ.EQ.0.AND.NPRT.GE.2) THEN
         CD44 = ABS(C(4,4) - CNEW(4,4))/C(4,4)
         CD55 = ABS(C(5,5) - CNEW(5,5))/C(5,5)
         CD66 = ABS(C(6,6) - CNEW(6,6))/C(6,6)
         IF (CD44.GT.0.05.OR.CD55.GT.0.05.OR.CD66.GT.0.05) THEN
            WRITE(IFILE,20) ISEG
   20       FORMAT(/
     1    ' MODIFIED CONSTITUTIVE STIFFNESS FOR PANEL MODULE SEG.',I2/)
            WRITE(IFILE,30) ((CNEW(I,J),J=1,6),I=1,6)
   30       FORMAT(1P,6E12.4)
            WRITE(IFILE,'(A)')' '
         ENDIF
      ENDIF
C
      RETURN
      END
C
C
C
C=DECK      VARCON
      SUBROUTINE VARCON(MAXCON,WORDIQ,WORDM,CINEQ,DPWREQ,IDINEQ,
     1      NINEQ,JINEQ,IEQTYP,INUMTT,IMOD,CONMAX,IPOINC,
C BEG JAN 1997
     1      ICONST,CONSTR,VAR,PCWORD,CPLOT,ICAR,
     1      CCROSS,IDINQ1,IDINQ2,JCROSS)
C END JAN 1997
C
C  PURPOSE IS TO RECONSTRUCT A CONSTRAINT CONDITION THAT CORRESPONDS
C  TO AN INEQUALITY CONSTRAINT INVOLVING ALL OF THE VARIABLES THAT
C  CAN BE CANDIDATES FOR DECISION VARIABLES.
C
C BEG APR 2007
      COMMON/OUTP/NPRT
C END APR 2007
C BEG JUN 2004
      COMMON/CONNRX/CONNRM(20)
C END JUN 2004
      COMMON/FSAFEB/FSAFEP(99)
      DIMENSION WORDIQ(*),WORDM(*),IPOINC(*),CONSTR(*)
C BEG JULY 1995  10s were 5s in the following line
      DIMENSION CINEQ(10,20),DPWREQ(10,20),IDINEQ(10,20)
C END JULY 1995
      DIMENSION JINEQ(*),IEQTYP(*),VAR(*),PCWORD(*),CPLOT(*)
C BEG JAN 1997
      DIMENSION CCROSS(10,20),IDINQ1(10,20),IDINQ2(10,20),JCROSS(*)
C END JAN 1997
      CHARACTER*80 WORDIQ,WORDM,PCWORD
      REAL MAXCON
C
      DO 500 KOUNT = 1,NINEQ
         JTERMS = JINEQ(KOUNT)
         CON = 0.
C        WRITE(8,*)' KOUNT,NINEQ,JTERMS,IEQTYP(KOUNT),CINEQ(1,KOUNT)=',
C    1               KOUNT,NINEQ,JTERMS,IEQTYP(KOUNT),CINEQ(1,KOUNT)
C BEG JUN 2004
         IF (IMOD.EQ.0) THEN
            CONNRM(KOUNT) = 1.0
            IF (CINEQ(1,KOUNT).NE.1.0) GO TO 51
            DO 50 JJ = 2,JTERMS
               IVAR = IDINEQ(JJ,KOUNT)
               PWR = DPWREQ(JJ,KOUNT)
               NPWR = NINT(PWR)
               IF (NPWR.NE.1) THEN
	          CONNRM(KOUNT) = 1.0
                  GO TO 51
               ENDIF
               CONNRM(KOUNT) = MAX(CONNRM(KOUNT),ABS(VAR(IVAR)))
   50       CONTINUE
   51    CONTINUE
         ENDIF
C END JUN 2004
         DO 100 JJ = 1,JTERMS
            IF (JJ.EQ.1) THEN
               CON = CINEQ(1,KOUNT)
               GO TO 100
            ENDIF
            IVAR = IDINEQ(JJ,KOUNT)
            CEQ = CINEQ(JJ,KOUNT)
            PWR = DPWREQ(JJ,KOUNT)
C           WRITE(8,*)' KOUNT,JJ,IVAR,CEQ,PWR=',KOUNT,JJ,IVAR,CEQ,PWR
            NPWR = NINT(PWR)
C BEG JUN 2004
            CON = CON +CEQ*VAR(IVAR)**NPWR/CONNRM(KOUNT)
C END JUN 2004
  100    CONTINUE
C BEG JAN 1997
         JTERMS = JCROSS(KOUNT)
         IF (JTERMS.EQ.0) GO TO 175
         DO 150 JJ = 1,JTERMS
            IVAR = IDINQ1(JJ,KOUNT)
            JVAR = IDINQ2(JJ,KOUNT)
            CEQ  = CCROSS(JJ,KOUNT)
C BEG JUN 2004
            CON  = CON + CEQ*VAR(IVAR)*VAR(JVAR)/CONNRM(KOUNT)
C END JUN 2004
  150    CONTINUE
  175    CONTINUE
C END JAN 1997
C
         INDX = IEQTYP(KOUNT)
C
         INUMTT = INUMTT + 1
         CALL BLANKX(WORDIQ(KOUNT),IENDP)
         IF (IMOD.EQ.0) THEN
            CONTST = CON
            IF (INDX.EQ.2) CONTST = 2. - CON
         ENDIF
         IF (IMOD.EQ.0.AND.CONTST.LT.MAXCON) THEN
            ICAR   = ICAR   + 1
            FSAFEP(ICAR) = 1.0
            IF (INDX.EQ.1) THEN
               PCWORD(ICAR) = WORDIQ(KOUNT)(5:IENDP)//'-1'
               CPLOT(ICAR) = CON - 1.
            ELSE
               PCWORD(ICAR) = '1-['//WORDIQ(KOUNT)(5:IENDP)//']'
               CPLOT(ICAR) = 1. - CON
            ENDIF
         ENDIF
         IF (INDX.EQ.1.AND.IMOD.EQ.0.AND.CON.GT.CONMAX) GO TO 200
         IF (INDX.EQ.2.AND.IMOD.EQ.0.AND.(2.-CON).GT.CONMAX) GO TO 200
         IF (IMOD.EQ.1.AND.IPOINC(INUMTT).EQ.0) GO TO 200
         ICONST = ICONST + 1
         IF (IMOD.EQ.0) IPOINC(INUMTT) = 1
         IF (INDX.EQ.1) THEN
            WORDM(ICONST) = WORDIQ(KOUNT)(5:IENDP)//'-1'
            CONSTR(ICONST) = CON
         ELSE
            WORDM(ICONST) = '1-['//WORDIQ(KOUNT)(5:IENDP)//']'
            CONSTR(ICONST) = 2. - CON
         ENDIF
C BEG APR 2007
         IF (NPRT.GE.0) WRITE(8,'(A,1P,E12.4,2X,A)')
     1 ' Margin=',CONSTR(ICONST)-1.,WORDM(ICONST)
C END APR 2007
  200    CONTINUE
  500    CONTINUE
      RETURN
      END
C
C
C
C   SUBROUTINE SKIN IS FROM PANDA. ACCOUNT FOR "HUNGRY HORSE" EFFECT
C   DUE TO LOCAL BENDING BETWEEN RINGS, NOT ACCOUNTED FOR HERETOFOR
C   IN PANDA2...
C
C=DECK      SKIN  
      SUBROUTINE SKIN(CS,C,NX0,NY0,WMID,WXXMID,WRING,WXXRNG,R,A0,
     1                IMOD,IFILE,NPRT,P,ISTIF,IBPRE,AXIAL,DSURF,
     1                ICASE,EAVEP,WPRESG,WDDPRS,FNXP0,FNYP0,
     1                HRING,WIDTH,WXXFLN,INTEXT,POPRNG,IABP,ITYPE,
     1                ISOGRD,HISO,WISO,ISTISO,CISO,POPISO,JJJ,
     1                ISTF2,WFLNG,CS22,DFNYP0,
     1                WMIDS,WRINGS,WXXMDS,WXXRGS,WCALCS,THS1,TH25,
     1                SHEARX,XMAX,SHEARY,YMAX,ETHRMX,ETHERM,ITHERM,
     1                ISANDX,WXXXMX,WXXXMS,XMAXQ,DFNYPM,MCASL1,MCASS1,
     1                FNYYP,FXXXP,IXNUMB,FNYAVE,INYAVE,
     1                THEWEB,THEFLG,FCEWEB,FCEFLG,EPSRNG,THRMY3,
     1                FCXWEB,FCYWEB,ETHAVY,
C BEG NOV 2003
     1                CY3,CBASRG,CWEBRG,CFLGRG,B2RING,IXNMB0,DETH2,
     1                RNGSPA)
C END NOV 2003
C     
C     PURPOSE IS TO FIND THE HOOP STRESS RESULTANT AND HOOP STRAIN AT   
C     THE MIDBAY OF THE CYLINDRICAL PANEL.
C     THE EQUATIONS OF JONES AND HENNEMANN (1978 SDM PROC. P 372) 
C     ARE USED. ALSO, SEE THE PAPER BY ALMROTH ("Influence of edge
C     conditions on the stability of axially compressed cyl. shells",
C     AIAA J. Vol. 4, No. 1, p 134, 1966.
C     
      DOUBLE PRECISION FNBAR,FK2
      DOUBLE PRECISION S1,SH2,C1,CH2,SCH,CSH,SSH,CCH,A11,A12,A21,A22
      DOUBLE PRECISION A1,A2,AL1,AL2,DEN,ASUM,ADIF,A1A2,WXX1,WXX2,ARAT
      DOUBLE PRECISION SSHINT,CCHINT,S2,SH22,C2,CH22,A112,A122,FK
      DOUBLE PRECISION S2SH2I,C2CH2I,SCSHCH,S2CH2I,C2SH2I,EA,F1RING
      DOUBLE PRECISION CC1,CC2,CC3,CC4,CC5,CC6,CC7,CC8,CC9,C12C11,PLOAD
C BEG FEB 1997
      DOUBLE PRECISION CC10,CC11
C END FEB 1997
      DOUBLE PRECISION Q1,Q2,DEL,F1,F2,F3,A02,FI1,FI2,CCH2,SSH2,FI3
      DOUBLE PRECISION FI4,FI5,FI6,EE1,EE2,G,H,COFMEM,COFRHS,COFBND
      DOUBLE PRECISION COFLHS,RHS
C BEG OCT 1998
      DIMENSION C(6,6),CS(6,6),EAVEP(6),CFLGRG(6,6),CWEBRG(6,6)
      DIMENSION THEWEB(*),THEFLG(*),CY3(6,6,11),THRMY3(6,11),THS1(*)
      DIMENSION FCXWEB(*),FCYWEB(*),CBASRG(6,6)
      COMMON/INTRGX/INTRNG
      COMMON/WEBTH2/TSMRX3(6,11),TSMRY3(6,11),ESMRX3(6,11),ESMRY3(6,11)
C END OCT 1998
C BEG JAN 2006
      COMMON/RNGKNY/RNGKNZ,RNGFCT,ICHLNG
C END JAN 2006
C BEG JAN 1995
C   TWO LABELLED COMMON BLOCKS REMOVED: /CYLWXX/ AND /SHRWEB/
C   ELEMENTS IN THEM NOW APPEAR IN THE ARGUMENT LIST OF "SKIN".
      DIMENSION ETHERM(*)
C END JAN 1995
      COMMON/IWEAKX/IWEAK
      DIMENSION CISO(6,6)
      DIMENSION FNYYP(*),FXXXP(*)
      REAL NX0,NY0,KAPPA1,KAPPA2
C BEG NOV 1996
      LOGICAL ISANDX
C END NOV 1996
C   
C BEG JAN 1999
C BEG NOV 2003 (following two commented out, moved lower down.)
C     WDPAVE = 0.
C     WXXAVE = 0.
C END NOV 2003
C END JAN 1999
C BEG DEC 1998
      FITHRM = ITHERM
      FMULT = 1.0
      IF (R.LT.0.) FMULT = -1.0
      IF (INTRNG.EQ.1) FMULT = -FMULT
C END DEC 1998
C BEG JAN 1995
      IF (ITHERM.EQ.1.AND.IBPRE.EQ.2) RETURN
C END JAN 1995  
      RNGSPA = A0
      IF (IMOD.EQ.0) WCALCS = 0.
C BEG MAR 1997
C   "IF (IMOD.EQ.1.AND.WCALCS..." GROUP MOVED DOWN
C END MAR 1997
C
C     INVERT THE MEMBRANE PART OF THE CS MATRIX... (ORTHOTROPIC ONLY)
C
      DEL = CS(1,1)*CS(2,2) - CS(1,2)**2
      S12 = 0.
      S22 = 0.
      CS1CS3 = 0.1*SQRT(CS(1,1)*CS(3,3))
      CS2CS3 = 0.1*SQRT(CS(2,2)*CS(3,3))
      IF (DEL.GT.0.0.AND.ABS(CS(1,3)).LT.CS1CS3
     1              .AND.ABS(CS(2,3)).LT.CS2CS3) THEN
         S12 = - CS(1,2)/DEL   
         S22 = CS(1,1)/DEL
      ENDIF
C BEG DEC 2003
      IF (NPRT.GT.-1.AND.S12.EQ.0.0.AND.S22.EQ.0.0) WRITE(IFILE,203)
  203    FORMAT(/' *** WARNING *** WARNING **** WARNING ***'/
     1 ' INADMISSIBLE MATERIAL FOR CALCULATION OF AVERAGE HOOP STRAIN'/
     1 ' IN SUBROUTINE SKIN. CHECK YOUR INPUT IN "BEGIN" AND "DECIDE"'/
     1 ' VERY CAREFULLY. DO YOU HAVE ANY NEGATIVE THICKNESSES OR DO'/
     1 ' YOU HAVE SIGNIFICANT COUPLING TERMS C(1,3), C(2,3) IN THE'/
     1 ' INTEGRATED CONSTITUTIVE LAW FOR THE PANEL WALL? THIS MESSAGE'/
     1 ' IS TRIGGERED MOST COMMONLY IN THE CASE OF AN ANGLE-PLY'/
     1 ' LAMINATE WITH SIGNIFICANT C(1,3) and C(2,3) TERMS. COMPUTA-'/
     1 ' TIONS PROCEED AS USUAL. SOLUTION IS APPROXIMATE.'/
     1 ' *** END WARNING **** END WARNING **** END WARNING ***'/)
C END DEC 2003
C
C  FIND AVERAGE HOOP STRAIN FOR BOTH RINGS AND STRINGERS SMEARED OUT...
C
C BEG OCT 1998
      E0Y = S12*NX0 + S22*NY0 + FITHRM*ETHERM(2)
C END OCT 1998
C BEG NOV 2003
      WXXAVE = 0.0
      WDPAVE = E0Y*R 
      WDPAVS = WDPAVE
      FNYAVE = C(1,2)*(NX0 - C(1,2)*E0Y)/C(1,1) +C(2,2)*E0Y
C END NOV 2003
C BEG DEC 1998
      IF (NPRT.GE.2) WRITE(IFILE,
C BEG JUN 1999
     1'(A,I2,/,A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4,/,
     1  A,1P,E12.4)')
     1' Entering SUB. SKIN (get prebuckling behavior), IMOD=',IMOD,
     1'  Normal pressure,                     P=',P,
C END JUN 1999
     1'  Axial resultant,                    Nx=',NX0,
     1'  Hoop  resultant,                    Ny=',NY0,
     1'  Average hoop strain,               E0Y=',E0Y,
     1'  Average hoop thermal strain, ETHERM(2)=',ETHERM(2)
C BEG NOV 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
      IF (NPRT.GE.2) WRITE(IFILE,
     1'(A,1P,E12.4,/,A,I3,/,A,I3,/,A,1P,E12.4,/,A,1P,E12.4)')
     1'  Value of computation control,   WCALCS=',WCALCS,
     1'  Prebuckling b.c. indicator,     IBPRE =',IBPRE,
     1'  Ring stiffener indicator,     ISTIF(2)=',ISTIF,
     1'  Average Nyo, membrane theory,  FNYAVE =',FNYAVE,
     1'  Average normal displacement,   WDPAVE =',WDPAVE
C END NOV 2003
      IF (ITHERM.EQ.1.AND.E0Y.EQ.0.0.AND.ETHERM(2).NE.0.0) E0Y=1.E-08
C END DEC 1998
      WMID = E0Y*R
      WRING= WMID
      WXXMID = 0.
      WXXRNG = 0.
C BEG NOV 1996
      WXXXMX = 0.
C END NOV 1996
C BEG MAR 1997 (FOLLOWING MOVED DOWN FROM ABOVE)
C     WRITE(8,'(A,/,1P,6E12.4)')
C    1' E0Y,S12,NX0,S22,NY0,WMID=',E0Y,S12,NX0,S22,NY0,WMID
      IF (IMOD.EQ.1.AND.WCALCS.GT.0.) THEN
         GO TO 100
      ENDIF
C END MAR 1997
      IF (IMOD.EQ.0) THEN
         WMIDS = WMID
         WRINGS= WRING
         WXXMDS= WXXMID
         WXXRGS= WXXRNG
C BEG NOV 1996
         WXXXMS= WXXXMX
C END NOV 1996
      ENDIF
C BEG DEC 1998
      IF (E0Y.EQ.0.0.AND.(IMOD.EQ.0.OR.WCALCS.GT.0.0)) THEN
         CALL SKIN2(IMOD,WMID,WRING,WXXMID,WXXRNG,WXXXMX,WCALCS,
     1                 WMIDS,WRINGS,WXXMDS,WXXRGS,WXXXMS)
         IF (IMOD.EQ.0.OR.NPRT.GE.2) THEN
C END DEC 1998
C BEG DEC 2003
C BEG SEP 2006
            IF (NPRT.GE.2) WRITE(IFILE,5)
C END SEP 2006
C END DEC 2003
    5       FORMAT(/
     1      ' OVERALL AVERAGE HOOP STRAIN, E0Y = 0.'/
     1      ' NO CALCULATION OF WMID,WRING,WXXMID,WXXRNG')
C BEG DEC 2003
C BEG SEP 2006
            IF (NPRT.GE.2) WRITE(IFILE,7) WMID,WRING,WXXMID,WXXRNG
C END SEP 2006
C END DEC 2003
    7       FORMAT(' WMID,WRING,WXXMID,WXXRNG=',1P,4E12.4)
         ENDIF
         GO TO 100
      ENDIF
C
C     NEXT, CALCULATE THE BOUNDARY LAYER LENGTH FOR THE PORTION
C     OF THE CYLINDRICAL SHELL BETWEEN RINGS...
      C44N = ABS(C(4,4)-C(1,4)**2/C(1,1))
      CHOOP = (C(2,2)-C(1,2)**2/C(1,1))/R**2
C BEG FEB 1997
      C14N = 0.0
      C24N = C(2,4) - C(1,2)*C(1,4)/C(1,1)
      C15N = C24N
C END FEB 1997
      THEFF = SQRT(C44N*12./C(2,2))
      BLL = 2.73*SQRT(ABS(R)*THEFF)
      IF (BLL.LT.(A0/5.)) RNGSPA = 5.*BLL
C BEG NOV 2003
      REMAIN = A0 - RNGSPA
      IF (REMAIN.LT.0.0) REMAIN = 0.
C BEG JAN 2006
C  Compute adjustment RNGFCT to smeared ring knockdown factor
      IF (IMOD.EQ.0) THEN
         RNGRAT = BLL/A0
         RNGFCT = RNGRAT - 1.
         IF (RNGRAT.LE.1.0) RNGFCT = 0.0
         IF (RNGRAT.GE.2.0) RNGFCT = 1.0 
      ENDIF
C END JAN 2006
C BEG DEC 1998
      IF ((BLL.GT.(10000.*A0).OR.(BLL.LT.(A0/5.).AND.ISTIF.EQ.0))
     1                     .AND.(IMOD.EQ.0.OR.WCALCS.GT.0.0)) THEN
         CALL SKIN2(IMOD,WMID,WRING,WXXMID,WXXRNG,WXXXMX,WCALCS,
     1                 WMIDS,WRINGS,WXXMDS,WXXRGS,WXXXMS)
         IF (IMOD.EQ.0.OR.NPRT.GE.2) THEN
C END DEC 1998
C BEG DEC 2003
            IF (NPRT.GT.-1) WRITE(IFILE,20)
C END DEC 2003
   20       FORMAT(/
     1      ' BOUNDARY LAYER LENGTH (BLL) OUT OF RANGE.'/
     1      ' NO CALCULATION OF WMID,WRING,WXXMID,WXXRNG')
C BEG DEC 2003
            IF (NPRT.GT.-1) WRITE(IFILE,7) WMID,WRING,WXXMID,WXXRNG
C END DEC 2003
         ENDIF
         GO TO 100
      ENDIF
C     
C     NOW CALCULATE THE COEFFICIENTS OF THE PREBUCKLING 4TH-ORDER 
C     DIFFERENTIAL EQUATION   
C     
C                  A*W,XXXX   +   B*W,XX   +   D*W   +   E   =   0
C     
C     THESE APPEAR IN EQ (7) FROM JONES $ HENNEMANN PAPER (1978 SDM)    
C     NOTE... X IS ZERO AT THE MIDBAY.    
C     
      A = C(4,4) - C(1,4)**2/C(1,1) 
C BEG FEB 1997
C     B = -NX0 + 2.*(C(1,2)*C(1,4) -C(1,1)*C(1,5))/(C(1,1)*R)     
      B = -NX0 - 2.*(C(1,2)*C14N   -C(1,1)*C15N  )/(C(1,1)*R)
C END FEB 1997
      D = (C(2,2) - C(1,2)**2/C(1,1))/R**2
C     
C     JONES ANDHENNEMANN USE S AND T, WHERE THE COMPLEMENTARY PART
C     OF THE SOLUTION TO THE DIFFERENTIAL EQUATION IS OBTAINED FROM     
C     
C              W,XXXX   +   4.*S*W,XX   +   4.*T**2*W   =   0     
C     
C     S AND T ARE GIVEN BY... 
C     
      S = B/(4.*A)
      T = SQRT(D/A)/2.  
C     
C     THE PARTICULAR SOLUTION GIVEN BY JONES AND HENNEMANN IS...  
C     
      WP0 = -(C(1,2)*NX0 -C(1,1)*NY0)*R/(C(1,1)*C(2,2) -C(1,2)**2)
C BEG DEC 1998
      IF (WP0.EQ.0.0) WP0 = 1.E-20
C END DEC 1998
C
C     WE MUST SUBTRACT OFF THE RADIAL DISPLACEMENT FROM THE SMEARED     
C     MODEL, WSMEAR = E0Y*R...
C
C BEG NOV 2003
C     IF (ISTIF.NE.0.AND.IBPRE.EQ.2) WP0 = E0Y*R
C END NOV 2003
C BEG OCT 1998
      WP = WP0 - E0Y*R
C END OCT 1998
C     WRITE(8,'(A,/,1P,5E12.4)') ' WP0,WP,NX0,NY0,R=',WP0,WP,NX0,NY0,R
      IF (ABS(WP).LT.0.000001*ABS(WP0)) WP = 0.000001*WP0
C BEG DEC 1998
      IF (ISTIF.NE.0.AND.(IMOD.EQ.0.OR.WCALCS.GT.0.0)
     1              .AND.ABS(E0Y*R).GT.0.99*ABS(WP0)) THEN
         CALL SKIN2(IMOD,WMID,WRING,WXXMID,WXXRNG,WXXXMX,WCALCS,
     1                 WMIDS,WRINGS,WXXMDS,WXXRGS,WXXXMS)
         IF (IMOD.EQ.0.OR.NPRT.GE.2) THEN
C END DEC 1998
C BEG NOV 2003
           IF (IBPRE.LE.2) THEN
            IF (NPRT.GT.-1) WRITE(IFILE,30)
   30       FORMAT(/
     1      ' RINGS ARE VERY WEAK.'/
     1      ' NO CALCULATION OF WMID,WRING,WXXMID,WXXRNG')
           ELSE
            IF (NPRT.GT.-1) WRITE(IFILE,31)
   31       FORMAT(/
     1      ' USER SELECTED PREBUCKLING MEMBRANE THEORY.'/
     1      ' NO CALCULATION OF WMID,WRING,WXXMID,WXXRNG')
           ENDIF
C END NOV 2003
            IF (NPRT.GT.-1) WRITE(IFILE,7) WMID,WRING,WXXMID,WXXRNG
C BEG OCT 1998 (COMMENT OUT IWEAK = 1)
C           IF (IMOD.EQ.0.AND.(ITYPE.EQ.1.OR.ITYPE.EQ.2)) IWEAK = 1
C END OCT 1998
         ENDIF
         GO TO 100
      ENDIF
C     
C     JONES A HENNEMANN A ALMROTH GIVE FOR A CLAMPED OR A SIMPLY- 
C     SUPPORTED CYLINDER THE FOLLOWING EXPRESSION FOR NORMAL DISPLACE.. 
C     
C     W =WP[1 +F1*SIN(A1*X)*SINH(A2*X) +F2*COS(A1*X)*COSH(A2*X)] +E0Y*R
C
C     The portion of structure being considered in this subroutine is
C     half a bay between rings, including half the ring stiffness at
C     the end at x = A0/2  (A0 is the ring spacing).
C
C     WE MUST SOLVE FOR THE UNKNOWNS F1 AND F2.  IT IS ASSUMED THAT THE
C     SLOPE OF THE DEFORMED SHELL (Wx) = 0 at the ring stations. This
C     condition gives F2 = -F1*A21/A22, which is substituted in the
C     expression just given for the normal displacement distribution w.
C     Then we find F1 from minimization of the total potential.
C
C     The total potential consists of the strain energy of the shell,
C     the strain energy of the ring, and the work done by the
C     pressure, P.
C     
C     The strain energy of the shell is assumed to be
C
C     U(shell) = 2*pi*r*(1/2)*
C               INTEGRAL(0 to A0/2)[C22*w**2/r**2 +C44N*w,xx**2]dx
C
C     in which r is the radius of the cyl. shell, C22 is the hoop
C     stiffness of the bay between rings, w is the normal displacement,
C     C44N is the axial bending stiffness of the bay between rings
C     (calculated with the reference surface at the neutral plane for
C     axial bending), and w,xx is the axial curvature change during
C     deformation.
C
C     The strain energy of half of the ring is assumed to be
C
C     U(ring) = 2*pi*r*(1/2)*(EA/2)*w(ring)**2/r**2
C
C     in which EA is the ring hoop stiffness and w(ring) is the
C     normal displacement w evaluated at the ring station, x = A0/2.
C
C     The work done by the normal pressure during the axisymmetric
C     prebuckling deflections of the ring-stiffened cylindrical shell
C     is given by
C
C     W(pressure) = 2*pi*r*INTEGRAL(0 to A0/2)[p*w]dx
C
C     in which p is the applied pressure.
C
C     The problem is solved by minimizing the total potential,
C 
C     U(total) = U(shell) + U(ring) - W(pressure)
C
C     with respect to the undetermined coefficient F1.
C
      TPS = T + S 
      IF (TPS.LE.0.0) THEN
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG DEC 2003
         IF (NPRT.GT.-1.AND.(IMOD.EQ.0.OR.NPRT.GE.2)) WRITE(IFILE,39)
C END DEC 2003
   39    FORMAT(/' ***** WARNING ***** WARNING ***** WARNING *****',/,
     1 ' The loading may exceed the axisymmetric collapse load of',/,
     1 ' the cylindrical shell between adjacent rings. Therefore,',/,
     1 ' the prebuckling solution may not be valid. This problem',/,
     1 ' will probably correct itself during optimization cycles.',/,
     1 ' However the stress and buckling margins for the current',/,
     1 ' (probably unfeasible) design may not be accurate.',/,
     1 ' ***** END WARNING **** END WARNING **** END WARNING *****'/)
         TPS = 0.01*T
         IF (IMOD.EQ.0.OR.NPRT.GE.2) THEN
            IF (NPRT.GT.-1) WRITE(IFILE,40)
   40       FORMAT(/' T+S IS NEGATIVE. T+S IS NOW SET TO 0.01*T.'/)
         ENDIF
      ENDIF
      A1 = SQRT(TPS)    
      TMS = T - S 
      IF (TMS.LE.0.) THEN
         IF (NPRT.GT.-1.AND.IMOD.EQ.0) WRITE(IFILE,39)
         TMS = 0.01*T
         IF (IMOD.EQ.0.OR.NPRT.GE.2) THEN
            IF (NPRT.GT.-1) WRITE(IFILE,50)
   50       FORMAT(/' T-S IS NEGATIVE. T-S IS NOW SET TO 0.01*T.'/)
         ENDIF
      ENDIF
      A2 = SQRT(TMS)    
      A02 = RNGSPA/2. 
      AL1 = A1*A02
      AL2 = A2*A02
C     WRITE(8,'(A,/,1P,5E12.4)')' A1,A2,A02,AL1,AL2=',A1,A2,A02,AL1,AL2
C BEG DEC 1998
      IF (ABS(AL2).GT.100.0.AND.(IMOD.EQ.0.OR.WCALCS.GT.0.0)) THEN
         CALL SKIN2(IMOD,WMID,WRING,WXXMID,WXXRNG,WXXXMX,WCALCS,
     1                 WMIDS,WRINGS,WXXMDS,WXXRGS,WXXXMS)
         IF (IMOD.EQ.0.OR.NPRT.GE.2) THEN
C END DEC 1998
            IF (NPRT.GT.-1) WRITE(IFILE,60)
   60       FORMAT(/
     1      ' AL2 = SQRT(T-S)*A0/2 IS LARGER THAN 100.'/
     1      ' NO CALCULATION OF WMID,WRING,WXXMID,WXXRNG')
            IF (NPRT.GT.-1) WRITE(IFILE,7) WMID,WRING,WXXMID,WXXRNG
         ENDIF
         GO TO 100
      ENDIF
      S1 = SIN(AL1)     
      SH2 = SINH(AL2)
C BEG DEC 1998
      IF (SH2.GT.10.E+10.AND.(IMOD.EQ.0.OR.WCALCS.GT.0.0)) THEN
         CALL SKIN2(IMOD,WMID,WRING,WXXMID,WXXRNG,WXXXMX,WCALCS,
     1                 WMIDS,WRINGS,WXXMDS,WXXRGS,WXXXMS)
         IF (IMOD.EQ.0.OR.NPRT.GE.2) THEN
C END DEC 1998
            IF (NPRT.GT.-1) WRITE(IFILE,70)
   70       FORMAT(/
     1      ' SH2 = SINH(AL2) IS LARGER THAN 10.E+10.'/
     1      ' NO CALCULATION OF WMID,WRING,WXXMID,WXXRNG')
            IF (NPRT.GT.-1) WRITE(IFILE,7) WMID,WRING,WXXMID,WXXRNG
         ENDIF
         GO TO 100
      ENDIF
      C1 = COS(AL1)     
      CH2 = COSH(AL2)   
C     WRITE(8,'(A,/,1P,4E12.4)')' SH2,CH2,S1,C1=',SH2,CH2,S1,C1
C BEG DEC 1998
      IF (CH2.GT.10.E+10.AND.(IMOD.EQ.0.OR.WCALCS.GT.0.0)) THEN
         CALL SKIN2(IMOD,WMID,WRING,WXXMID,WXXRNG,WXXXMX,WCALCS,
     1                 WMIDS,WRINGS,WXXMDS,WXXRGS,WXXXMS)
         IF (IMOD.EQ.0.OR.NPRT.GE.2) THEN
C END DEC 1998
            IF (NPRT.GT.-1) WRITE(IFILE,80)
   80       FORMAT(/
     1      ' CH2 = COSH(AL2) IS LARGER THAN 10.E+10.'/
     1      ' NO CALCULATION OF WMID,WRING,WXXMID,WXXRNG')
            IF(NPRT.GT.-1) WRITE(IFILE,7) WMID,WRING,WXXMID,WXXRNG
         ENDIF
         GO TO 100
      ENDIF
      SCH = S1*CH2
      CSH = C1*SH2
      SSH = S1*SH2
      CCH = C1*CH2
      A11 = A2*SCH - A1*CSH
C     A11 = SSH
      A12 = A2*CSH + A1*SCH
C     A12 = CCH
      A21 = A2*SCH + A1*CSH   
      A22 = A2*CSH - A1*SCH   
C     
      DEN = A11*A22 - A12*A21 
      ASUM = A1*A1 + A2*A2
      ADIF = A2*A2 - A1*A1
      A1A2 = 2.*A1*A2
      WXX1 = ADIF*SSH +A1A2*CCH
      WXX2 = ADIF*CCH -A1A2*SSH
      ARAT = A21/A22
C BEG OCT 1998  (following statement is commented out)
C     IF (IBPRE.EQ.0.AND.ISTIF.EQ.0) ARAT = WXX1/WXX2
C END OCT 1998
C
C  NEXT, GET INTEGRALS OF PRODUCTS OF SINA1X*SINHA2X, ETC...
C  THE AIM IS TO MINIMIZE ENERGY WITH RESPECT TO F1 IN ORDER TO
C  DETERMINE THE NORMAL DEFLECTION AT THE RING STATION.
C
      SSHINT = A11/ASUM
      CCHINT = A12/ASUM
      S2 = SIN(2.*AL1)
      SH22= SINH(2.*AL2)
      C2 = COS(2.*AL1)
      CH22= COSH(2.*AL2)
      A112 = A2*S2*CH22 - A1*C2*SH22
      A122 = A2*C2*SH22 + A1*S2*CH22
      S2SH2I = 0.125*(-RNGSPA +S2/A1 +SH22/A2 -A122/ASUM)
      C2CH2I = 0.125*( RNGSPA +S2/A1 +SH22/A2 +A122/ASUM)
      SCSHCH = 0.125*A112/ASUM
      S2CH2I = 0.125*( RNGSPA -S2/A1 +SH22/A2 -A122/ASUM)
      C2SH2I = 0.125*(-RNGSPA -S2/A1 +SH22/A2 +A122/ASUM)
C
      FK = SSH -ARAT*CCH
      CC1 = WP0/WP
      CC2 = ADIF +2.*A1*A2*ARAT
      CC3 = 2.*A1*A2 -ADIF*ARAT
C     CC4 = CC1*(SSHINT -ARAT*CCHINT)
      CC4 =      SSHINT -ARAT*CCHINT
      CC5 = S2SH2I -2.*ARAT*SCSHCH +ARAT*ARAT*C2CH2I
      CC6 = CC2*CC2*S2SH2I + 2.*CC2*CC3*SCSHCH + CC3*CC3*C2CH2I
      CC7 = A2 + A1*ARAT
      CC8 = A1 - A2*ARAT
      CC9 = CC7*CC7*S2CH2I + 2.*CC7*CC8*SCSHCH + CC8*CC8*C2SH2I
C BEG FEB 1997
      CC10 = (CC2*S2SH2I +(CC3-CC2*ARAT)*SCSHCH -CC3*ARAT*C2CH2I)/R
      CC11 = (CC2*SSHINT + CC3*CCHINT)/R
C END FEB 1997
C
C  NEXT, EVALUATE TERMS IN SHELL STRAIN ENERGY EXPRESSION...
C
C  FIRST, THE TERMS MULTIPLIED BY F1:
C     F1SHEL = CHOOP*CC5 + C44N*CC6 + NX0*CC9
C  NEXT, THE NON-HOMOGENEOUS TERM:
C     SHRHS  = CHOOP*CC4
C  WORK DONE BY APPLIED NORMAL PRESSURE...
C     PRHS   = -P*(SSHINT -ARAT*CCHINT)/WP
C  NEXT, EVALUATE TERMS IN RING STRAIN ENERGY EXPRESSION...
C     
C  FIRST, FIND THE RING HOOP STIFFNESS EA:
C BEG DEC 1998
C     EA = (CS22 - C(2,2))*A0
      EABASE = 0.
      EAWEBR = 0.
      EAFLGE = 0.
      EA = 0.
      IF (ISTIF.NE.0) THEN
         EABASE = (CBASRG(1,1) - CBASRG(1,2)**2/CBASRG(2,2))*B2RING
         EAWEBR = (CWEBRG(1,1) - CWEBRG(1,2)**2/CWEBRG(2,2))*HRING
         IF (ISTIF.NE.3)
     1      EAFLGE = (CFLGRG(1,1) - CFLGRG(1,2)**2/CFLGRG(2,2))*WIDTH
         EA = EABASE + EAWEBR + EAFLGE - C(2,2)*B2RING
      ENDIF
C END DEC 1998
C BEG NOV 2003
C     IF (IBPRE.EQ.2) EA = 0.
C END NOC 2003
      EARNG = EA
C BEG OCT 1998
C     IF (ISTIF.EQ.0.AND.IBPRE.EQ.1)     EA = 10.E+05*C(2,2)*A0
      IF (ISTIF.EQ.0.AND.IBPRE.NE.2)     EA = 10.E+05*C(2,2)*A0
C END OCT 1998
C  NEXT, THE TERMS MULTIPLIED BY F1:
      F1RING = 0.5*EA*FK*FK/R**2
C  NEXT, THE NON-HOMOGENEOUS TERM:
C     RGRHS  = 0.5*EA*CC1*FK/R**2
C
C  THE SOLUTION (VALUE OF F1):
C     F1 = -(SHRHS + RGRHS + PRHS)/(F1SHEL + F1RING)
C
C  NEW FORMULATION (13 MAY 1992): UNKNOWN F3 IS INTRODUCED, AND THE
C  NORMAL DISPLACEMENT W IS GIVEN BY:
C    w = WP0*(F1*sin(a1*x)*sinh(a2*x) +F2*cos(a1*x)*cosh(a2*x) + F3)
C  F2 is determined from the requirement that the slope or curvature
C  be zero at x = L/2 (ring location). F1 and F3 are found by
C  minimization of the total potential with respect to F1 and F3.
C  The two simultaneous linear equations that result from the minimization
C  of the total potential are:
C
C     A11*F1 + A12*F3 = Q1
C     A12*F1 + A22*F3 = Q2
C
C  in which
C
C BEG FEB 1997
C     A11 = CHOOP*CC5 +C44N*CC6 +NX0*CC9 +F1RING
C     A12 = CHOOP*CC4 + 0.5*EA*FK/R**2
      A11 = CHOOP*CC5 +C44N*CC6 +NX0*CC9 +F1RING +2.*C24N*CC10
      A12 = CHOOP*CC4 + 0.5*EA*FK/R**2 + 2.*C24N*CC11
C END FEB 1997
      A22 = CHOOP*0.5*RNGSPA + 0.5*EA/R**2
      C12C11 = C(1,2)/C(1,1)
      PLOAD = P - C12C11*NX0/R
      Q1  = CC4*PLOAD/WP0
      Q2  = 0.5*RNGSPA*PLOAD/WP0
C
      DEL = A11*A22 - A12*A12
      F1  = (A22*Q1 - A12*Q2)/DEL
      F3  = (A11*Q2 - A12*Q1)/DEL
      F2 = -F1*ARAT
C
C BEG OCT 1998
      WMID = WP0*(F3 +F2) + FITHRM*ETHERM(2)*R
C END OCT 1998
C BEG NOV 2003
      IF (ISTIF.NE.0.AND.IBPRE.EQ.2) WMID = WDPAVS
C END NOV 2003
C BEG FEB 1997
C23456789012345678901234567890123456789012345678901234567890123456789012
C     WRITE(8,'(A,1P,4E12.4)') ' WMID,F3,F2,WP0=',WMID,F3,F2,WP0
C BEG AUG 1998
C     IF (ITHERM.EQ.0.AND.NPRT.GE.2) THEN
C     IF (ITHERM.EQ.0              ) THEN
C BEG OCT 1998
        IXNUMB = 26
C BEG JAN 1999
        ISTART = 1
C                    Remove "IF ((A0-RNGSPA).GT.0.0) THEN" block
C                    from here and move it down.
C END JAN 1999
C END OCT 1998
        DX = 0.5*RNGSPA/FLOAT(IXNUMB-1)
        X = -DX
C BEG JAN 1999
        IF ((A0-RNGSPA).GT.0.0) THEN
           IXNUMB = 27
           ISTART = 2
           FXXXP(1) = 0.0
        ENDIF
        IF (IMOD.EQ.0) IXNMB0 = IXNUMB
C END JAN 1999
        IF (NPRT.GE.2) THEN
        WRITE(IFILE,'(/,A,A)')' PREBUCKLING STATE IN CYLINDRICAL PANEL',
     1'. X=0 CORRESPONDS TO MIDBAY'
        WRITE(IFILE,'(A,/,A,/,A)')
     1'       AXIAL       NORMAL    MERIDIONAL    AXIAL       HOOP',
     1'    COORDINATE  DISPLACEMENT CURVATURE   RESULTANT   RESULTANT',
     1' I       X          WDISP      WXXDSP       FNXX       FNYY'
        ENDIF
        FNYAVE = 0.
C BEG NOV 2003
        WDPAVE = 0.
        WXXAVE = 0.
C END NOV 2003
C BEG JAN 1999
        DO 85 I = ISTART,IXNUMB
C END JAN 1999
           X = X + DX
           SA1X = SIN(A1*X)
           CA1X = COS(A1*X)
           SHA2X = SINH(A2*X)
           CHA2X = COSH(A2*X)
C BEG OCT 1998
           WDISP = WP0*(F1*SA1X*SHA2X +F2*CA1X*CHA2X +F3)
     1                + FITHRM*ETHERM(2)*R
           WXXDSP= WP0*F1*(CC2*SA1X*SHA2X + CC3*CA1X*CHA2X)
C BEG NOV 2003
           IF (ISTIF.NE.0.AND.IBPRE.EQ.2) THEN
              WDISP = WDPAVS
              WXXDSP = 0.0
           ENDIF
           IF (I.EQ.ISTART) THEN
              WDISP1 = WDISP
              WXXDS1 = WXXDSP
           ENDIF
C END NOV 2003
           EPS2 = WDISP/R
           EPS1 = (NX0 -C(1,2)*EPS2 -C(1,4)*WXXDSP 
     1                                         +FITHRM*THS1(1))/C(1,1)
           FNXX = C(1,1)*EPS1 + C(1,2)*EPS2 + C(1,4)*WXXDSP
     1                                         -FITHRM*THS1(1)
           FNYY = C(1,2)*EPS1 + C(2,2)*EPS2 + C(2,4)*WXXDSP
     1                                         -FITHRM*THS1(2)
C END OCT 1998
C BEG JAN 1999
           FNYYP(I) = FNYY
           FXXXP(I) = 0.5*(A0 - RNGSPA) + X
           WDPAVE = WDPAVE + WDISP
           WXXAVE = WXXAVE + WXXDSP
           FNYAVE = FNYAVE + FNYY
           IF (NPRT.GE.2) WRITE(IFILE,'(I3,1P,5E12.4)')
     1                     I,FXXXP(I),WDISP,WXXDSP,FNXX,FNYY
   85   CONTINUE
        IF (ISTART.EQ.2) FNYYP(1) = FNYYP(2)
        FNYAVE = FNYAVE/FLOAT(IXNUMB-ISTART+1)
        WDPAVE = WDPAVE/FLOAT(IXNUMB-ISTART+1)
        WXXAVE = WXXAVE/FLOAT(IXNUMB-ISTART+1)
C END JAN 1999
C BEG NOV 2003
        IF (REMAIN.GT.0.) THEN
           FNEWAV = (FNYYP(1)*REMAIN + FNYAVE*(A0-REMAIN))/A0
           FNYAVE = FNEWAV
           WNEWAV = (WDISP1*REMAIN   + WDPAVE*(A0-REMAIN))/A0
           WDPAVE = WNEWAV
           WXNEWV = (WXXDS1*REMAIN   + WXXAVE*(A0-REMAIN))/A0
           WXXAVE = WXNEWV
        ENDIF
        IF (NPRT.GE.2)
     1   WRITE(IFILE,
     1  '(/,A,1P,E12.4,A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4)')
     1  ' Average Ny over x-integration interval (XL=', 0.5*RNGSPA,
     1  '): Ny(ave)=',FNYAVE,
     1  ' Average normal displacement over x-integration interval=',
     1   WDPAVE,
     1  ' Average axial curvature change over x-integration int. =',
     1   WXXAVE
C END NOV 2003
        IF (INYAVE.EQ.1.OR.(IMOD.EQ.0.AND.RNGSPA.LT.0.999*A0)) THEN
           FNYAVE = 0.
           IF (NPRT.GE.2) WRITE(IFILE,'(A,/,A,/,A)')
     1   ' Ny(ave) will be reset to the value of Ny midway between',
     1   ' rings because the distance between rings is more than 5',
     1   ' times the axial bending "boundary layer" length.'
           IF (IMOD.EQ.0) INYAVE = 1
        ENDIF
C     ENDIF
C END FEB 1997
C BEG DEC 1998  (many commented statements removed)
C BEG OCT 1998
      WRING = WP0*(F3 +F1*S1*SH2 +F2*C1*CH2) + FITHRM*ETHERM(2)*R
C END OCT 1998
C END DEC 1998
      WXXMID = WP0*(F1*2.*A1*A2  +  F2*ADIF)
      WXXRNG = WP0*(F1*WXX1 + F2*WXX2)
C BEG NOV 1996
      WXXXMX = 0.
      IF (ISANDX) THEN
C  get axisymmetric prebuckling axial transverse shear deformation w,xxx,
C  which is needed for computation of sandwich core transverse shear stress.
         AAA = F1*ADIF - F2*A1A2
         BBB = F1*A1A2 + F2*ADIF
         COEF1 = AAA*A2 - BBB*A1
         COEF2 = AAA*A1 + BBB*A2
         IF (IMOD.EQ.0) THEN
            WXXX = 0.
            SA02 = A02
            XLONG = MIN(SA02,(BLL/3.))
            DX = XLONG/20.
            XCOORD = A02
            DO 95  I = 1,10
               XCOORD = XCOORD - DX
               A1X = A1*XCOORD
               A2X = A2*XCOORD
               S1CH2 = SIN(A1X)*COSH(A2X)
               C1SH2 = COS(A1X)*SINH(A2X)
               WXXXS = WXXX
               WXXX = ABS(WP0*(COEF1*S1CH2 + COEF2*C1SH2))
C BEG FEB 2010
C              IF (NPRT.GE.2) WRITE(IFILE,'(A,/,I3,1P,5E12.4)')
C    1       ' In SUBROUTINE SKIN: I,XCOORD,WXXX,WXXXS,WXXXMX,DX=',
C    1                             I,XCOORD,WXXX,WXXXS,WXXXMX,DX
C END FEB 2010
               IF (WXXX.LT.WXXXS) THEN
                  XMAXQ = XCOORD + DX
                  GO TO 96
               ENDIF
               WXXXMX = MAX(WXXXMX,WXXX)
   95       CONTINUE
   96       CONTINUE
C BEG FEB 2010
C           IF (NPRT.GE.2) WRITE(IFILE,'(A,1P,3E12.4)')
C    1    ' In SUBROUTINE SKIN: XMAXQ,WXXX,WXXXMX=',
C    1                          XMAXQ,WXXX,WXXXMX
C END FEB 2010
         ELSE
            A1X = A1*XMAXQ
            A2X = A2*XMAXQ
            S1CH2 = SIN(A1X)*COSH(A2X)
            C1SH2 = COS(A1X)*SINH(A2X)
            WXXXMX = ABS(WP0*(COEF1*S1CH2 + COEF2*C1SH2))
         ENDIF
      ENDIF
C END NOV 1996
C BEG NOV 2003
      IF (ISTIF.NE.0.AND.IBPRE.EQ.2) THEN
         WRING = E0Y*R
         WXXMID = 0.
         WXXRNG = 0.
         WXXXMX = 0.
      ENDIF
C END NOV 2003
C
  100 CONTINUE
C
      IF (NPRT.GE.2) WRITE(IFILE,'(A,1P,E12.4)')
     1'  Value of computation control,   WCALCS=',WCALCS
      IF (IMOD.EQ.0) THEN
         WMIDS = WMID
         WRINGS= WRING
         WXXMDS= WXXMID
         WXXRGS= WXXRNG
C BEG NOV 1996
         WXXXMS= WXXXMX
C END NOV 1996
      ENDIF
C
      KAPPA2 = 0.
      IF (ICASE.EQ.1) KAPPA1 = WXXMID
      IF (ICASE.EQ.2) KAPPA1 = WXXRNG
      IF (A0.LE.BLL)    FACT = 1.0
      IF (A0.GE.2.*BLL) FACT = 0.0
      IF (A0.GT.BLL.AND.A0.LT.2.*BLL) FACT = 2.0 - A0/BLL
      WPRESG = (WMID - WRING)*FACT
      DEN = C(1,1)*C(2,2) - C(1,2)*C(1,2)
      F1  = -C(1,4)*KAPPA1 - C(1,5)*KAPPA2
      F2  = -C(2,4)*KAPPA1 - C(2,5)*KAPPA2
      E1AVE = (C(2,2)*F1 - C(1,2)*F2)/DEN
      E2AVE = (C(1,1)*F2 - C(1,2)*F1)/DEN
C   TRANSFER TO PANEL SKIN FROM THE NEUTRAL PLANE...
      EAVEP(1) = E1AVE +DSURF*KAPPA1
      EAVEP(2) = E2AVE +DSURF*KAPPA2
      EAVEP(3) = 0.
      EAVEP(4) = KAPPA1
      EAVEP(5) = KAPPA2
      EAVEP(6) = 0.
      FNXP0    = 0.
      FNYP0    = 0.
      WDDPRS   = EAVEP(4)
      IF (ICASE.EQ.2.AND.ISTIF.EQ.0) THEN
         FNBAR = 0.
         FK2 = 0.
         CALL WEBSHR(IFILE,FNBAR,0.,0.,0.,FK2,0)
         SHEARX = SHEARX*FACT
      ELSE
         SHEARX = 0.
      ENDIF
C
C  ADJUST STRAINS AND RESULTANTS FOR RING-STIFFENED CYLINDRICAL SHELLS...
C
      WAVE = E0Y*R
C     IF (ISTIF.NE.0) THEN
         IF (ICASE.EQ.1) THEN
            WLOCAL = WMID
            WXXLOC = WXXMID
         ELSE
            WLOCAL = WRING
            WXXLOC = WXXRNG
         ENDIF
C BEG JAN 1999
C BEG JUL 2003
C        IF (ICASE.EQ.1) THEN
         IF (ICASE.EQ.1.OR.WCALCS.GT.0.0) THEN
C END JUL 2003
C BEG NOV 2003
            WDPAVS = WDPAVE
C END NOV 2003
            WDPAVE = WLOCAL
            WXXAVE = WXXLOC
         ENDIF
C END JAN 1999
C BEG JUN 1998
         WLOCLS = WLOCAL
         IF (ICASE.EQ.2) THEN
            BUKLN1 = A0
            BUKLN2 = A0
            IF (MCASL1.GT.0) BUKLN1 = A0/FLOAT(MCASL1)
            IF (MCASS1.GT.0) BUKLN2 = A0/FLOAT(MCASS1)
            BUKLEN = MIN(BUKLN1,BUKLN2)
            IF (BUKLEN.GT.1.0*BLL) THEN
               WLOCAL = WMID
               WXXLOC = WXXMID
            ENDIF
            IF (BUKLEN.LE.1.0*BLL.AND.BUKLEN.GE.0.3*BLL) THEN
               ACOEF = (WMID - WRING)/((1.0-0.3)*BLL)
               BCOEF = WRING
               WLOCAL = ACOEF*(BUKLEN-0.3*BLL) + BCOEF
               ACOEF = (WXXMID - WXXRNG)/((1.0-0.3)*BLL)
               BCOEF = WXXRNG
               WXXLOC = ACOEF*(BUKLEN-0.3*BLL) + BCOEF
            ENDIF
C           WRITE(IFILE,'(A,/,2I4,1P,5E12.4)')
C    1    ' IN "SKIN": MCASL1,MCASS1,BUKLEN,BLL,WMID,WRING,WLOCAL=',
C    1                 MCASL1,MCASS1,BUKLEN,BLL,WMID,WRING,WLOCAL
         ENDIF
C END JUN 1998
C BEG OCT 1998
C        IF (ITHERM.EQ.0) THEN
C BEG JAN 1999
C           DEPSY = (WLOCAL - WAVE)/R
C           DEPSX = -(C(1,2)*DEPSY + C(1,4)*WXXLOC)/C(1,1)
            DEPSY = (WDPAVE - WAVE)/R
            DEPSX = -(C(1,2)*DEPSY + C(1,4)*WXXAVE)/C(1,1)
C END JAN 1999
C        ELSE
C           IF (ICASE.EQ.1) THEN
C              IF (ISTF2.EQ.0) DEPSY = WMID/R
C              IF (ISTF2.NE.0) DEPSY = ETHERM(2) + WMID/R
C           ENDIF
C           IF (ICASE.EQ.2) THEN
C              IF (ISTF2.NE.0) WRING = ETHERM(2)*R
C              DEPSY = WRING/R
C           ENDIF
C           DEPSX = (THERMS - C(1,2)*DEPSY - C(1,4)*WXXLOC)/C(1,1)
C           WPRESG = (WMID - WRING)*FACT
C        ENDIF
C END OCT 1998
C BEG JUN 1996
C        WRITE(8,*)' DEPSX,DEPSY,WMID,R=',DEPSX,DEPSY,WMID,R
C END JUN 1996
C BEG OCT 1998
         EAVEP(1) = DEPSX
         EAVEP(2) = DEPSY
         IF (ITHERM.EQ.1) THEN
            DEN = C(1,1)*C(2,2) - C(1,2)**2
C BEG JAN 1999
C           RHS1 = C(2,2)*(THS1(1) - C(1,4)*WXXLOC)
C    1            -C(1,2)*(THS1(2) - C(2,4)*WXXLOC) -C(1,2)*FNYAVE
C           RHS2 = C(1,1)*(THS1(2) - C(2,4)*WXXLOC) +C(1,1)*FNYAVE
C    1            -C(1,2)*(THS1(1) - C(1,4)*WXXLOC)
            RHS1 = C(2,2)*(THS1(1) - C(1,4)*WXXAVE)
     1            -C(1,2)*(THS1(2) - C(2,4)*WXXAVE) -C(1,2)*FNYAVE
            RHS2 = C(1,1)*(THS1(2) - C(2,4)*WXXAVE) +C(1,1)*FNYAVE
     1            -C(1,2)*(THS1(1) - C(1,4)*WXXAVE)
C END JAN 1999
            EAVEP(1) = RHS1/DEN
            EAVEP(2) = RHS2/DEN
         ENDIF
C BEG JAN 1999
C        DFNYP0 = C(1,2)*DEPSX + C(2,2)*DEPSY + C(2,4)*WXXLOC
         DFNYP0 = C(1,2)*DEPSX + C(2,2)*DEPSY + C(2,4)*WXXAVE
C END JAN 1999
C        IF (ITHERM.EQ.1)
C    1      DFNYP0 = C(1,2)*EAVEP(1) + C(2,2)*EAVEP(2) + C(2,4)*WXXLOC
         IF (ITHERM.EQ.1) DFNYP0 = 0.
C END OCT 1998
C END JAN 1995
         IF (ICASE.EQ.1.AND.IMOD.EQ.0.AND.ITHERM.NE.0) DFNYPM = DFNYP0
         IF (ICASE.EQ.2.AND.ITHERM.NE.0) THEN
            IF (BUKLEN.GT.1.0*BLL) THEN
               DFNYP0 = DFNYPM
            ENDIF
            IF (BUKLEN.LE.1.0*BLL.AND.BUKLEN.GE.0.3*BLL) THEN
               ACOEF = (DFNYPM - DFNYP0)/((1.0-0.3)*BLL)
               BCOEF = DFNYP0
               DFNYP0 = ACOEF*(BUKLEN-0.3*BLL) + BCOEF
            ENDIF
         ENDIF
C BEG NOV 2003
         IF (ITHERM.EQ.0.AND.INYAVE.EQ.0) THEN
            DFNYP1 = FNYAVE-NY0
            IF (ICASE.EQ.1.AND.DFNYP1.LT.DFNYP0) THEN
               WDPAVE = WDPAVS
               DEPSY = (WDPAVE - WAVE)/R
               DEPSX = -(C(1,2)*DEPSY + C(1,4)*WXXAVE)/C(1,1)
               EAVEP(1) = DEPSX
               EAVEP(2) = DEPSY
               DFNYP0 = C(1,2)*DEPSX + C(2,2)*DEPSY + C(2,4)*WXXAVE
            ENDIF
         ENDIF
C END NOV 2003
C END JUN 1998
C        EPSY = WLOCAL/R
C        EPSX = -(C(1,2)*EPSY + C(1,4)*WXXLOC)/C(1,1)
C        FNYP0 = C(1,2)*EPSX + C(2,2)*EPSY + C(2,4)*WXXLOC
C     ENDIF
      IF (ISOGRD.EQ.1) THEN
         RISOGR = ABS(R) + HISO
         IF ((-R).LT.0.) RISOGR = ABS(R) - HISO
         EAISO = 0.
         IF (ISTISO.EQ.1.OR.ISTISO.EQ.2)
     1     EAISO = WISO*(CISO(1,1)-CISO(1,2)**2/CISO(2,2))
C BEG JUN 1998
         POPS = EAISO*(WLOCLS/R)
C END JUN 1998
         IF (RISOGR.GE.ABS(R)) POPISO = -POPS/ABS(R)
         IF (RISOGR.LT.ABS(R)) POPISO =  POPS/ABS(R)
      ENDIF
C BEG DEC 1998
      EAWEB = 0.
      RADIUS = R+FMULT*0.5*HRING
C BEG FEB 1999
      EPHOOP = WRING/RADIUS + DETH2
     1                      + FMULT*FITHRM*ETHAVY*.5*HRING/RADIUS
C     WRITE(8,'(/,A,/,1P,6E12.4)')
C    1' EPHOOP,  WRING,  DETH2,  ETHAVY,  THEWEB(1),  THEWEB(2)=',
C    1  EPHOOP,WRING,DETH2,ETHAVY,THEWEB(1),THEWEB(2)
C END FEB 1999
      IF (CWEBRG(2,2).GT.0.)
     1   EAWEB = CWEBRG(1,1) - CWEBRG(1,2)**2/CWEBRG(2,2)
      FCEWEB= EAWEB*EPHOOP
      IF (ITHERM.EQ.1.AND.CWEBRG(1,1).GT.0.) THEN
         EPSWEB = (THEWEB(1) - CWEBRG(1,2)*EPHOOP)/CWEBRG(1,1)
         FCEWEB = CWEBRG(1,2)*EPSWEB +CWEBRG(2,2)*EPHOOP - THEWEB(2)
      ENDIF
      DELRAD = FMULT*HRING/10.
      RADIUS = R - DELRAD
      DEHOOP = 0.0
C23456789012345678901234567890123456789012345678901234567890123456789012
      DO 90 I = 1,11
         FIM = I-1
         RADIUS = RADIUS + DELRAD
C BEG FEB 1999
         EPHOOP = WRING/RADIUS + DETH2 + DEHOOP/RADIUS
C END FEB 1999
         DEHOOP = DEHOOP + FITHRM*DELRAD*ESMRY3(2,I)
         FCXWEB(I) = FCEWEB
         IF (CY3(2,2,I).GT.0.) THEN
            EAWEB = CY3(1,1,I) - CY3(1,2,I)**2/CY3(2,2,I)
            FCXWEB(I) = EAWEB*EPHOOP
            IF (ITHERM.EQ.1.AND.CY3(1,1,I).GT.0.) THEN
C BEG FEB 1999
               EPSWEB = (TSMRY3(1,I) - CY3(1,2,I)*EPHOOP)/CY3(1,1,I)
               FCXWEB(I) = CY3(1,2,I)*EPSWEB +CY3(2,2,I)*EPHOOP
     1                                                  - TSMRY3(2,I)
C END FEB 1999
            ENDIF
         ENDIF
  90  CONTINUE
C
      EAFLNG = 0.
      RADIUS = R + FMULT*HRING
C BEG FEB 1999
      EPHOOP = WRING/RADIUS + DETH2
     1                      + FMULT*FITHRM*ETHAVY*HRING/RADIUS
C END FEB 1999
      IF (CFLGRG(2,2).GT.0.)
     1   EAFLNG= CFLGRG(1,1) - CFLGRG(1,2)**2/CFLGRG(2,2)
      FCEFLG= EAFLNG*EPHOOP
      IF (ITHERM.EQ.1.AND.CFLGRG(1,1).GT.0.) THEN
         EPSFLG = (THEFLG(1) - CFLGRG(1,2)*EPHOOP)/CFLGRG(1,1)
         FCEFLG = CFLGRG(1,2)*EPSFLG +CFLGRG(2,2)*EPHOOP - THEFLG(2)
      ENDIF
C
      FACTRG = 1.
      IF (INTRNG.EQ.0) FACTRG = -1.
      ENDFCE = FACTRG*FCEFLG*WIDTH/ABS(R)
      BEGFCE = FACTRG*(FCEFLG*WIDTH + FCEWEB*HRING)/ABS(R)
      DIFFCE = (BEGFCE - ENDFCE)/10.
      FCYWEB(1) = BEGFCE
      FCYWEB(11) = ENDFCE
      DO 902 I = 2,10
         I1 = I - 1
         FCYWEB(I) = FCYWEB(I1) - DIFFCE
  902 CONTINUE
C
      EPSRNG= WRING/R
      IF (NPRT.GE.2) THEN
         WRITE(IFILE,'(A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4)')
     1 '  Hoop resultant in web of ring,            FCEWEB =',FCEWEB,
     1 '  Hoop resultant in flange of ring,         FCEFLG =',FCEFLG,
     1 '  Hoop strain in web and flange of ring,    EPSRNG =',EPSRNG
         WRITE(IFILE,'(A,/,(1P,6E12.4))')
     1 '  Hoop resultant at each node in ring web, (FCXWEB(i),i=1,11)=',
     1   (FCXWEB(I),I=1,11)
         WRITE(IFILE,'(A,A,/,(1P,6E12.4))')
     1 '  Meridional resultant at each node in ring web,',
     1 ' (FCYWEB(i),i=1,11)=', (FCYWEB(I),I=1,11)
C END DEC 1998
C BEG JAN 1995
C23456789012345678901234567890123456789012345678901234567890123456789012
        IF (ITHERM.EQ.1) THEN
         WRITE(IFILE,195)
  195    FORMAT(/' PREBUCKLING DEFORMATION FROM TEMPERATURE...'/
     1'  The axisymmetric thermal distortion is predicted by treating'/
     1'  the thermal loading as an equivalent normal pressure. It is'/
     1'  assumed that there is no overall axial thermal load, that is,'/
     1'  the cylindrical panel is free to expand axially. Here we are'/
     1'  interested only in the differential hoop expansion between'/
     1'  the midbay station and the "at rings" or edge station.'/
     1'  The equivalent thermal hoop resultant, Ny is given by:'/
     1'     Ny = (C22 - C12**2/C11)*(ETHRMX(2,5) - ETHERM(2))'/
     1'  in which Cij are the constitutive coefficients of the panel'/
     1'  with only the stringers smeared out, ETHRMX(2,5) is the'/
     1'  thermal hoop strain with only the stringers smeared out, and'/
     1'  ETHERM(2) is the thermal hoop strain with both stringers and'/
     1'  rings smeared out. If no rings, then ETHERM(2) is zero here.'/
     1'  NOTE: ETHERM(2) is computed with use of an axial length of'/
     1'        panel skin equal to 0.75*BLL +K*B2(2), in which BLL is'/
     1'        the "boundary layer" length of skin+stringers only.'/
     1'  The equivalent thermal normal pressure is   p = Ny/R')
         IF (IABP.EQ.1) THEN
          WRITE(IFILE,196) ICASE,-R,A0,ETHRMX,ETHERM(2),NX0,NY0,WMID,
     1                  WRING,WAVE,WXXMID,WXXRNG,EA,-P,DFNYP0,POPISO
         ELSE
          WRITE(IFILE,197) ICASE,-R,A0,ETHRMX,ETHERM(2),NX0,NY0,WMID,
     1                  WRING,WAVE,WXXMID,WXXRNG,EA,-P,DFNYP0,POPISO
         ENDIF
  196 FORMAT(/
     1' ADDL THERMAL DEFORMATION OF CYLINDRICAL SHELL BETWEEN RINGS:'/
     1'  Subcase number                             ICASE =',I5/
     1'  Radius of cylindrical shell                    R =',1PE12.4/
     1'  Ring spacing,                               B(2) =',1PE12.4/
     1'  Hoop thermal strain with infinite ring spacing   =',1PE12.4/
     1'  Hoop thermal strain with all stiffeners smeared  =',1PE12.4/
     1'  Equivalent thermal Axial resultant,Nx(Loadset A) =',1PE12.4/
     1'  Equivalent thermal hoop  resultant,Ny(Loadset A) =',1PE12.4/
     1'  Addl normal thermal displacement at midbay, WMID =',1PE12.4/
     1'  Addl normal thermal displacement at rings, WRING =',1PE12.4/
     1'  Average normal displacement, Wave =-EPSILON(y)*R =',1PE12.4/
     l'  Meridional thermal curvature at midbay,   WXXMID =',1PE12.4/
     1'  Meridional thermal curvature at rings,    WXXRNG =',1PE12.4/
     1'  Hoop stiffness EA of ring,              EA(ring) =',1PE12.4/
     1'  Equivalent thermal normal pressure, P(Loadset A) =',1PE12.4/
     1'  Thermal hoop resultant,                NYTHERMAL =',1PE12.4/
     1'  Transverse thermal resultant,isogrid web, POPIST =',1PE12.4)
  197 FORMAT(/
     1' ADDL THERMAL DEFORMATION OF CYLINDRICAL SHELL BETWEEN RINGS:'/
     1'  Subcase number                             ICASE =',I5/
     1'  Radius of cylindrical shell                    R =',1PE12.4/
     1'  Ring spacing,                               B(2) =',1PE12.4/
     1'  Hoop thermal strain with infinite ring spacing   =',1PE12.4/
     1'  Hoop thermal strain with all stiffeners smeared  =',1PE12.4/
     1'  Equivalent thermal Axial resultant,Nx(Loadset B) =',1PE12.4/
     1'  Equivalent thermal hoop  resultant,Ny(Loadset B) =',1PE12.4/
     1'  Addl normal thermal displacement at midbay, WMID =',1PE12.4/
     1'  Addl normal thermal displacement at rings, WRING =',1PE12.4/
     1'  Average normal displacement, Wave =-EPSILON(y)*R =',1PE12.4/
     l'  Meridional thermal curvature at midbay,   WXXMID =',1PE12.4/
     1'  Meridional thermal curvature at rings,    WXXRNG =',1PE12.4/
     1'  Hoop stiffness EA of ring,              EA(ring) =',1PE12.4/
     1'  Equivalent thermal normal pressure, P(Loadset B) =',1PE12.4/
     1'  Thermal hoop resultant,                NYTHERMAL =',1PE12.4/
     1'  Transverse thermal resultant,isogrid web, POPIST =',1PE12.4)
        ELSE
         IF (IABP.EQ.1) THEN
          WRITE(IFILE,200) ICASE,-R,A0,NX0,NY0,WMID,WRING,WAVE,
     1                    WXXMID,WXXRNG,BLL,EA,-P,SHEARX,DFNYP0,POPISO
         ELSE
          WRITE(IFILE,201) ICASE,-R,A0,NX0,NY0,WMID,WRING,WAVE,
     1                    WXXMID,WXXRNG,BLL,EA,-P,SHEARX,DFNYP0,POPISO
         ENDIF
        ENDIF
C END JAN 1995
  200 FORMAT(/
     1' PREBUCKLING DEFORMATION OF CYLINDRICAL SHELL BETWEEN RINGS:'/
     1'  Subcase number                             ICASE =',I5/
     1'  Radius of cylindrical shell                    R =',1PE12.4/
     1'  Ring spacing,                               B(2) =',1PE12.4/
     1'  Axial resultant,                   Nx(Loadset A) =',1PE12.4/
     1'  Hoop  resultant,                   Ny(Loadset A) =',1PE12.4/
     1'  Normal displacement at midbay,              WMID =',1PE12.4/
     1'  Normal displacement at rings,              WRING =',1PE12.4/
     1'  Average normal displacement, Wave =-EPSILON(y)*R =',1PE12.4/
     l'  Meridional curvature change at midbay,    WXXMID =',1PE12.4/
     1'  Meridional curvature change at rings,     WXXRNG =',1PE12.4/
     1'  Axial boundary layer length,                 BLL =',1PE12.4/
     1'  Hoop stiffness EA of ring,              EA(ring) =',1PE12.4/
     1'  Applied normal pressure,            P(Loadset A) =',1PE12.4/
     1'  Shear in web of stringer,                 SHEARX =',1PE12.4/
     1'  Correction to hoop resultant,             DFNYP0 =',1PE12.4/
     1'  Transverse resultant in isogrid web,      POPISO =',1PE12.4)
  201 FORMAT(/
     1' PREBUCKLING DEFORMATION OF CYLINDRICAL SHELL BETWEEN RINGS:'/
     1'  Subcase number                             ICASE =',I5/
     1'  Radius of cylindrical shell                    R =',1PE12.4/
     1'  Ring spacing,                               B(2) =',1PE12.4/
     1'  Axial resultant,                   Nx(Loadset B) =',1PE12.4/
     1'  Hoop  resultant,                   Ny(Loadset B) =',1PE12.4/
     1'  Normal displacement at midbay,              WMID =',1PE12.4/
     1'  Normal displacement at rings,              WRING =',1PE12.4/
     1'  Average normal displacement, Wave =-EPSILON(y)*R =',1PE12.4/
     l'  Meridional curvature change at midbay,    WXXMID =',1PE12.4/
     1'  Meridional curvature change at rings,     WXXRNG =',1PE12.4/
     1'  Axial boundary layer length,                 BLL =',1PE12.4/
     1'  Hoop stiffness EA of ring,              EA(ring) =',1PE12.4/
     1'  Applied normal pressure,            P(Loadset B) =',1PE12.4/
     1'  Shear in web of stringer,                 SHEARX =',1PE12.4/
     1'  Correction to hoop resultant,             DFNYP0 =',1PE12.4/
     1'  Transverse resultant in isogrid web,      POPISO =',1PE12.4)
        IF (ISANDX) WRITE(IFILE,97) WXXXMX
C BEG FEB 2010
C23456789012345678901234567890123456789012345678901234567890123456789012
   97   FORMAT(
     1'  Axisymmetric transverse shear deformation,WXXXMX =',1PE12.4,/,
     1'  The L-direction sandwich core shear margin is based on this',/,
     1'  maximum third derivative of normal displacement w for BOTH',/,
     1'  midbay margins (Subcase 1) and "at ring" margins (Subcase 2).')
C END FEB 2010
      ENDIF
C BEG DEC 2003
      IF (IBPRE.NE.2.AND.ISTIF.EQ.0.AND.IMOD.EQ.0.AND.JJJ.EQ.0.AND.
     1 NPRT.GT.-1.AND.ITHERM.EQ.0.AND.ABS(DFNYP0).GT.0.5*ABS(NY0))
C END DEC 2003
     1   WRITE(IFILE,202) DFNYP0,BLL,A0,NY0
  202 FORMAT(/' *** NOTICE **** NOTICE **** NOTICE **** NOTICE ***'/
     1' THE MODIFICATION OF THE HOOP RESULTANT INDUCED BY RADIAL'/
     1' CONSTRAINT ALONG THE CURVED BOUNDARIES MAY SIGNIFICANTLY'/
     1' AFFECT THE BEHAVIOR OF THE PANEL. THE LONGER THE AXIAL'/
     1' BOUNDARY LAYER LENGTH, THE MORE SIGNIFICANT IS THE EFFECT.'/
     1' *** MODIFICATION OF HOOP RESULTANT, DFNYP0 ='1PE12.4' ***'/
     1' *** AXIAL "BOUNDARY LAYER" LENGTH , BLL    ='1PE12.4' ***'/
     1' *** LENGTH OF PANEL OR RING SPACING, B(2)  ='1PE12.4' ***'/
     1' *** ORIGINAL INTER-RING HOOP RESULTANT, Ny ='1PE12.4' ***'/
     1' IN ACTUAL STRUCTURES THIS EFFECT IS LIKELY TO BE MORE'/
     1' SIGNIFICANT WITH DEEP CYLINDRICAL PANELS THAN WITH SHALLOW'/
     1' CYLINDRICAL PANELS. IF YOUR PANEL IS SHALLOW AND THERE ARE'/
     1' NO RINGS, YOU MAY WANT TO SET THE PREBUCKLING BOUNDARY'/
     1' CONDITION TO "MEMBRANE" (IBPRE = 2 IN "BEGIN"). HOWEVER,'/
     1' IF YOU DO THIS, AND THERE IS SIGNIFICANT AXIAL COMPRESSION'/
     1' COMPARED TO HOOP COMPRESSION, YOU MAY END UP WITH AN'/
     1' UNCONSERVATIVE DESIGN.'/
     1' ***** END NOTICE **** END NOTICE **** END NOTICE *****'/)
C
      POPRNG = 0.
      WXXFLN = 0.
C     IF (ICASE.EQ.2.AND.ISTIF.EQ.1.AND.AXIAL.GT.1.2*A0) THEN
C BEG JAN 1995
C BEG OCT 1998
C     IF (ICASE.EQ.2.AND.ISTF2.EQ.1                    ) THEN
      IF (               ISTF2.EQ.1                    ) THEN
C END OCT 1998
C
C  NEXT, FIND LOCAL CURVATURE CHANGE IN RING FLANGE OF TEE-SHAPED
C  RING AT THE JUNCTION OF THE RING WEB AND RING OUTSTANDING FLANGE.
C  THE RING FLANGE IS TREATED AS A SHORT CYLINDRICAL SHELL WITH AN
C  IMPOSED RADIAL DISPLACEMENT, WRING, AT ITS MIDLENGTH.  THIS
C  IMPOSED RADIAL DISPLACEMENT CAUSES A LOCAL MERIDIONAL CHANGE
C  IN CURVATURE W,XX OF THE RING FLANGE. THE BENDING STRESSES FROM
C  THIS CAN BE SIGNIFICANT, ESPECIALLY FOR COMPOSITE MATERIALS.
C  The method is similar to that just completed for the panel skin:
C  The axisymmetric normal displacement in the ring flange is written
C  in the form:
C
C    w = F1*sin(a1*x)*sinh(a2*x) + F2*cos(a1*x)*cosh(a2*x)
C       +F3*sin(a1*x)*cosh(a2*x) + F4*cos(a1*x)*sinh(a2*x) + F5
C
C  in which x is the coordinate measured along the generator of
C  the short cylinder which the ring flange is (x is the coordinate
C  direction normal to the ring web. x = 0 at the intersection of
C  the ring web and the ring flange, and x = WIDTH/2 at the curved
C  edge of the ring flange. (WIDTH = width of the ring flange.
C
C  At x = 0, w = WIDTH and the slope w,x is zero.  At x = WIDTH,
C  the curvature change w,xx is zero and the transverse shear Qx
C  (w,xxx in this case) is zero. These four edge conditions are
C  used to express F2, F3, F4, and F5 in terms of F1.
C  Then F1 is determined by minimization of the strain energy
C  in the flange which has an imposed normal displacement w = WIDTH
C  at x = 0.  The strain energy in the ring flange, which is treated
C  now as a very short cylindrical shell of radius r = R + HRING
C  if the rings are external and r = R - HRING if the rings are
C  internal, can be written in the form:
C
C   U = 2*pi*r*0.5*integral{(C22star/r**2)*w**2 + C44*w,xx**2}dx
C                 0 to WIDTH
C
C  There is no work done by external forces.  The undetermined
C  coefficient F1 is calculated from the equilibrium condition
C  dU/dF1 = 0, which leads to a single nonhomogeneous linear
C  algebraic equation after the integration over x has been performed.
C
C  The analysis proceeds in a manner analogous to that for the panel
C  skin.  We are simply analyzing a different cylindrical shell with
C  different boundary conditions and material properties.
C
         RRING = ABS(R) + HRING
         IF (INTEXT.EQ.0.AND.(-R).LT.0.0) RRING = ABS(R) - HRING
         IF (INTEXT.EQ.1.AND.(-R).GT.0.0) RRING = ABS(R) - HRING
         C44 = CFLGRG(5,5)
         C14 = CFLGRG(2,5)
         C15 = CFLGRG(2,4)
         C12 = CFLGRG(1,2)
         C11 = CFLGRG(2,2)
         C22 = CFLGRG(1,1)
         C22S= C22 - C12**2/C11
C
         A = C44 - C14**2/C11
         B = 0.0
         D = C22S/RRING**2
         CHOOP = D
         S = B/(4.*A)
         T = SQRT(D/A)/2.
         A1 = SQRT(T+S)
         A2 = SQRT(T-S)
         A02 = WIDTH/2.
         AL1 = A1*A02
         AL2 = A2*A02
         S1 = SIN(AL1)     
         SH2 = SINH(AL2)   
         C1 = COS(AL1)     
         CH2 = COSH(AL2)   
         SCH = S1*CH2
         CSH = C1*SH2
         SSH = S1*SH2
         CCH = C1*CH2
         A11 = A2*SCH - A1*CSH
         A12 = A2*CSH + A1*SCH
         ASUM = A1*A1 + A2*A2
         ADIF = A2*A2 - A1*A1
         A1A2 = 2.*A1*A2
         WXX1 = ADIF*SSH +A1A2*CCH
         WXX2 = ADIF*CCH -A1A2*SSH
         ARAT = WXX1/WXX2
C
         SSHINT = A11/ASUM
         CCHINT = A12/ASUM
         S2 = SIN(2.*AL1)
         SH22= SINH(2.*AL2)
         C2 = COS(2.*AL1)
         CH22= COSH(2.*AL2)
         A112 = A2*S2*CH22 - A1*C2*SH22
         A122 = A2*C2*SH22 + A1*S2*CH22
         S2SH2I = 0.125*(-A02 +S2/A1 +SH22/A2 -A122/ASUM)
         C2CH2I = 0.125*( A02 +S2/A1 +SH22/A2 +A122/ASUM)
         SCSHCH = 0.125*A112/ASUM
         S2CH2I = 0.125*( A02 -S2/A1 +SH22/A2 -A122/ASUM)
         C2SH2I = 0.125*(-A02 -S2/A1 +SH22/A2 +A122/ASUM)
C  additional integrals required
         FI1 = 0.5*(SSH - CCH + 1.)/A1
         FI2 = 0.5*(SSH + CCH - 1.)/A1
         CCH2 = C2*CH22
         SSH2 = S2*SH22
         FI3 = 0.125*( CH22 -1. -(CCH2 +SSH2 -1.)/2.)/A1
         FI4 = 0.125*(-C2   +1. +(SSH2 -CCH2 +1.)/2.)/A1
         FI5 = 0.125*( C2   -1. +(SSH2 -CCH2 +1.)/2.)/A1
         FI6 = 0.125*( CH22 -1. +(CCH2 +SSH2 -1.)/2.)/A1
C
         EE1 = -CCH/(SCH+CSH)
         EE2 =  SSH/(SCH+CSH)
         G  = (CSH -SCH +2.*CCH*EE1)/(SCH +CSH -2.*CCH*EE2)
         H  = EE1 + EE2*G
C
         COFMEM = S2SH2I +2.*(G*SCSHCH +H*FI3 -H*FI5 -G*SSHINT)
     1       +G*G*C2CH2I +2.*(H*G*FI4 -H*G*FI6 -G*G*CCHINT)
     1       +H*H*S2CH2I +2.*(-H*H*SCSHCH -G*H*FI1)
     1       +H*H*C2SH2I +2.*G*H*FI2 +G*G*WIDTH/2.
C BEG JAN 1995
         WMULT = WRING
         IF (ITHERM.EQ.1) WMULT = WFLNG
         COFRHS = WMULT*(SSHINT +G*CCHINT +H*FI1 -H*FI2 -G*WIDTH/2.)
C END JAN 1995
         COFBND = G*G*S2SH2I -2.*(G*SCSHCH +G*H*FI3 +G*H*FI5)
     1               +C2CH2I +2.*(H*FI4 +H*FI6)
     1          +H*H*(S2CH2I +2.*SCSHCH + C2SH2I)
         COFLHS = CHOOP*COFMEM + 4.*A1**4*C44*COFBND
         RHS = -CHOOP*COFRHS
         F1 = RHS/COFLHS
         WXXFLN = 2.*A1**2*F1
C BEG JAN 1995
         POPR = EARNG*(WMULT/R)
C END JAN 1995
         IF (RRING.GE.ABS(R)) POPRNG = -POPR/ABS(R)
         IF (RRING.LT.ABS(R)) POPRNG = POPR/ABS(R)
C BEG JAN 1995
         IF (NPRT.GE.2.AND.IMOD.EQ.0) WRITE(IFILE,300)
     1         WMULT,WXXFLN,POPRNG
C23456789012345678901234567890123456789012345678901234567890123456789012
  300    FORMAT(/' LOCAL AXIALCURVATURE OF THE RING OUTSTANDING FLANGE'/
     1 ' DUE TO IMPOSED RADIAL DISPLACEMENT AT THE RINGWEB-SKIN JOINT:'/
     1 '  Imposed radial displacement,      WRING OR WFLNG =',1PE12.4/
     1 '  Local axial curvature at web-flange joint WXXFLN =',1PE12.4/
     1 '  Widthwise force(e.g. lb/in)'/
     1 '   at the root of the web in the ring,      POPRNG =',1PE12.4/)
C END JAN 1995
      ENDIF
C
      RETURN
      END   
C
C
C
C=DECK      SKIN2
C BEG DEC 1998
      SUBROUTINE SKIN2(IMOD,WMID,WRING,WXXMID,WXXRNG,WXXXMX,WCALCS,
     1                 WMIDS,WRINGS,WXXMDS,WXXRGS,WXXXMS)
C END DEC 1998
C
C  PURPOSE IS TO ESTABLISH VARIABLES IN EXTROADINARY CASES...
C
         IF (IMOD.EQ.0) THEN
            WMIDS = WMID
            WRINGS = WRING
            WXXMDS = WXXMID
            WXXRGS = WXXRNG
            WCALCS = 1.
C BEG NOV 1996
            WXXXMS = WXXXMX
C END NOV 1996
         ELSE
C BEG MAR 1997
            WMID  = 1.0*WMIDS
            WRING = 1.0*WRINGS
            WXXMID= 1.0*WXXMDS
            WXXRNG= 1.0*WXXRGS
C BEG NOV 1996
            WXXXMX= 1.0*WXXXMS
C END NOV 1996
C END MAR 1997
         ENDIF
      RETURN
      END
C     
C     
C BEG DEC 1998
C=DECK      BEAMBD
      SUBROUTINE BEAMBD(IFILE,WPRESG,WDDPRS,AXLEN,EAVEP,
     1 FNX,FNX0,FNXP0,FNYP0,NPRT,P,DSURF,CS,CSREDU,NXAVEP,ICASE,
     1 EBEAMR,EIEFF,EIEFFR,EIGBM1,EIEFFX,SHEARX,SHEARY,XMAX,YMAX,
     1 IWEB,B,H,CX)
C
C  Purpose is to get beam bending between rings under
C  uniform external pressure.
C
      DOUBLE PRECISION FNBAR,FK2
      DIMENSION EAVEP(6),CS(6,6),CSREDU(6,6),CX(6,6,5)
      REAL NXAVEP,KAPPA1,KAPPA2
C
C     CLAMPED PREBUCKLING BRANCH; 
C        MOVABLE EDGES; BENDING ABOUT NEUTRAL AXIS;
C        PANEL ASSUMED TO BE FLAT; NO TRANSVERSE FORCE Ny DEVELOPED.

      NXAVEP = 0.
      E1AVE  = 0.
      E2AVE  = 0.
      FREDU = CSREDU(4,4) - CSREDU(1,4)**2/CSREDU(1,1)
      EIEFF1 = CS(4,4)
      IF (FREDU.GT.0.0.AND.FREDU.LT.CS(4,4)) EIEFF1 = FREDU
      IF (EIEFF.GT.0.0.AND.(EIEFF*EIEFFR).LT.EIEFF1)
     1                                EIEFF1 = EIEFF*EIEFFR
      WPRESG = -P*EIEFFX*AXLEN**4/(EIEFF1*384.)
      KAPPA2 = 0.
      IF (ICASE.EQ.1) KAPPA1 =  P*AXLEN**2/(EIEFF1*24.)
      IF (ICASE.EQ.2) KAPPA1 = -P*AXLEN**2/(EIEFF1*12.)
C
C  UNTIL NOW THE LINEAR BEAM BENDING THEORY (ROARK TABLE 3) DID NOT
C  ACCOUNT FOR THE PRESENCE OF AXIAL COMPRESSION, IF ANY. THIS SECTION
C  CORRECTS THAT OVERSIGHT.  FORMULAS FROM REF. [1] ARE USED.
C  [1] Roark, R. J. and Young, W. C., FORMULAS FOR STRESS AND STRAIN, 5th
C  Edition, McGraw-Hill, 1975. Table 10, p. 158, Formulas 2d.
C
      FNXTOT = (FNX + FNX0)*EBEAMR
      IF (FNXTOT.LT.0.0.AND.EIGBM1.LT.1000.) THEN
         FK = SQRT(-FNXTOT/EIEFF1)
         ARG= FK*AXLEN/2.
         SARG = SIN(ARG)
         TARG = TAN(ARG)
         TARG2 = TAN(ARG/2.)
         IF (ARG.GE.3.1415927) THEN
            SARG = .0000001*ARG
            TARG = -SARG
            TARG2= 10000000.*ARG
         ENDIF
         IF (ICASE.EQ.1) THEN
            FK1 =  P*(ARG/SARG - 1.)/(EIEFF1*FK**2)
         ELSE
            FK1 = -P*(1. - ARG/TARG)/(EIEFF1*FK**2)
         ENDIF
         WPRMID=EIEFFX*P*AXLEN*(TARG2-ARG/2.)/(2.*FK*FNXTOT)
         IF (ABS(FK1).GT.ABS(KAPPA1)) THEN
            KAPPA1 = FK1
            WPRESG = WPRMID
         ENDIF
      ENDIF
      IF (NPRT.GE.2) WRITE(IFILE,*)
     1' Effective overall panel axial bending stiffness=',EIEFF1
C     WRITE(8,'(A,1P,2E12.4)')' AXLEN,B(2)=',AXLEN,B(2)
C     WRITE(8,'(A,1P,2E12.4)')' KAPPA1,WPRESG=',KAPPA1,WPRESG
C
      DEN = CS(1,1)*CS(2,2) - CS(1,2)*CS(1,2)
      F1  = - CS(1,4)*KAPPA1 - CS(1,5)*KAPPA2
      F2  = - CS(2,4)*KAPPA1 - CS(2,5)*KAPPA2
      E1AVE = (CS(2,2)*F1 - CS(1,2)*F2)/DEN
      E2AVE = (CS(1,1)*F2 - CS(1,2)*F1)/DEN
      EAVEP(1)       =  E1AVE
      EAVEP(2)       =  E2AVE
      EAVEP(3) = 0.
      EAVEP(4) = KAPPA1
      EAVEP(5) = KAPPA2
      EAVEP(6) = 0.
      FNXP0    = 0.
      FNYP0    = 0.
      WDDPRS   = EAVEP(4)
      FNBAR = 0.
      FK2   = 0.
      IF (ICASE.EQ.2) THEN
         SHEARY = 0.
         SHEARX = 0.
         XMAX = 0.
         YMAX = 0.
         IF (H.EQ.0.) GO TO 10
         SHEARX =  -P*AXLEN*B/(2.*H)
         IF (CX(4,6,IWEB).GE.0.) THEN
            IF (SHEARX.GE.0.) GO TO 10
            XMAX = AXLEN - XMAX
            SHEARX = ABS(SHEARX)
         ELSE
            IF (SHEARX.LE.0.) GO TO 10
            XMAX = AXLEN - XMAX
            SHEARX = -ABS(SHEARX)
         ENDIF
   10    CONTINUE
      ENDIF
C
      IF (NPRT.GE.2)
     1WRITE(IFILE,9) P,FNXP0,FNYP0,NXAVEP,(EAVEP(I),I=1,6),
     1               SHEARX,XMAX,SHEARY,YMAX
    9 FORMAT(/' "Sample" Nx(p), Ny(p), ex(p), ey(p), kx(p), ky(p)'/
     1' Inter-ring panel with smeared stringers. Normal pressure, p=',
     1 1PE12.4/
     1' Axial stress resultant            Nx(p) =             ',1PE12.4/
     1' Circumferential stress resultant, Ny(p) =             ',1PE12.4/
     1' Average axial stress resultant,Nxave(p) =             ',1PE12.4/
     1' Axial reference surface strain,   ex(p) =             ',1PE12.4/
     1' Circ. reference surface strain,   ey(p) =             ',1PE12.4/
     1' In-plane shearing strain,        exy(p) =             ',1PE12.4/
     1' Axial change in curvature,        kx(p) =             ',1PE12.4/
     1' Circumferential change in curv.,  ky(p) =             ',1PE12.4/
     1' Twist                            kxy(p) =             ',1PE12.4/
     1/' Maximum in-plane shear force resultant in the stiffener webs:'/
     1' Max. in-plane shear resultant in the stringer,SHEARX= ',1PE12.4/
     1' Axial coord. of the maximum stringer web shear      = ',1PE12.4/
     1' Max. in-plane shear resultant in the ring,    SHEARY= ',1PE12.4/
     1' Transverse coordinate of the maximum ring web shear = ',1PE12.4)
C
      IF (NPRT.GE.2) WRITE(IFILE,'(/,A,/,A,1P,E12.4,/,A,1P,E12.4,/)')
     1' Distance from neutral plane for axial bending to skin',
     1'                           reference surface,    DSURF=',DSURF,
     1' Bowing amplitude midway between rings,         WPRESR=',WPRESG
C
      RETURN
      END
C END DEC 1998
C
C
C
C BEG APR 2009
C=DECK      COLDBD
      SUBROUTINE COLDBD(IFILE,NPRT,IMOD,ILABEL,ILOADS,ICASE,INUMTT,
     1 ICAR,PCWORD,CPLOT,IADDCC,FSAFEP,CONMAX,IPOINC,ICONST,CONSTR,
     1 WORDB,MAXCON,ITYPE,CXCOLD,CYCOLD,CY3CLD,CXCLD0,CXCLD1,
     1 CNXVAR,CNYVAR,WAVLEN,KLAYER,ISUB)
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C
C This subroutine is entered only if the rings are internal, have
C rectangular or Tee-shaped cross section, and if a stress-strain
C curve has been provided for material type 1 . If the fabricated
C shell has Tee-shaped rings but the outstanding flange was welded
C on after the cold-bending process, then the outstanding flange is
C present in the model but it's stiffness is reduced by a very
C small factor, FMULT, and its prebuckling compression is zero.
C
C PURPOSE IS TO CONSTRUCT A CONSTRAINT CONDITION FOR
C BUCKLING OF AN INTERNAL RING WITH A RECTANGULAR OR TEE-SHAPED 
C CROSS SECTION UNDER THE COLD-BENDING PROCESS.
C NOTE: No faying flange (ring base of width B2(RNG) thicker than
C       the panel skin) is accounted for in this model.
C
C Input data:
C   IFILE  = write out to file, IFILE
C   NPRT   = index for printing verbosity
C   IMOD   = 0 for current design; 1 for perturbed design
C   ILABEL = statement label in SUBROUTINE STRUCT where
C            SUBROUTINE COLDBD is called.
C   ILOADS = load set number
C   ICASE  = load subcase number (1 or 2)
C   FSAFEP = factors of safety associated with design constraints 
C   ITYPE  = 1 for optimization, 2 for analysis of "fixed" design
C   SIM, EIM = coordinates of the material stress-strain curve
C   RCOLD  = minimum radius of curvature in the cold-bending process
C   FN1WEB = stress resultant in the ring web in the x-direction
C            (FN1WEB = 0 should probably be used as of this writing).
C   FLGCLD = 0.0 = outstanding flange not included in the cold
C                  bending process
C            1.0 = outstanding flange is included in the cold
C                  bending process
C   B      = ring spacing
C   H      = ring web height
C   WFLANG = width of outstanding ring flange
C   TSKIN  = thickness of shell skin
C   TWEB   = thickness of ring web
C   TFLANG = thickness of ring flange
C   EELAST = elastic modulus
C   KLAYER = 1 there are substiffeners
C            0 there are no substiffeners
C
C Important data:
C   BUCKLE = load factor for buckling of the ring under cold bending.
C   WAVLEN = wavelength of the critical buckling mode, hoop direction
C
C Output data:
C   INUMTT,ICAR,PCWORD,CPLOT,IADDCC,CONMAX,IPOINC,ICONST,CONSTR,
C   WORDB,MAXCON  = quantities related to the design constraint
C                   from the "closed-form" solution.
C   CXCOLD(i,j,5) = integrated constitutive matrices for the
C                   cold-bent state for the skin-stringer module for
C                   CXCOLD(i,j,1) = skin with smeared substiffeners
C                   CXCOLD(i,j,2) = skin + stringer faying flange 
C                                   + smeared substiffeners
C                   CXCOLD(i,j,3) = stringer web
C                   CXCOLD(i,j,4) = stringer outstanding flange
C                   CXCOLD(i,j,5) = skin with smeared major stringers
C                                   and smeared substiffeners
C
C   CYCOLD(i,j,5) = integrated constitutive matrices for the
C                   cold-bent state for the "skin"-ring module for
C                   CYCOLD(i,j,1) = skin with smeared substiffeners
C                   CYCOLD(i,j,2) = CYCOLD(i,j,1) (no ring fay-flange)
C                   CYCOLD(i,j,3) = ring web
C                   CYCOLD(i,j,4) = ring outstanding flange
C                   CYCOLD(i,j,5) = skin with smeared major rings
C                                   and smeared substiffeners.
C
C   CY3CLD(i,j,k) = integrated constitutive matrices for the
C                   cold-bent state for the ring web at k points
C                   along the web from root to tip, including the
C                   ring web root and the ring web tip.
C
C   CXCLD0(i,j,5) = same as CXCOLD(i,j,5) except that CXCLD0(i,j,1)
C                   and CXCLD0(i,j,5) are for the panel skin alone,
C                   no stringers and no substringers or subrings.
C
C   CXCLD1(i,j,5) = same as CXCLD1(i,j,1)
C
C   CNXVAR(i,j)   = meridional resultant for nodal point i, segment j
C                   in the "skin"-ring module
C   CNYVAR(i,j)   = hoop resultant for nodal point i, segment j
C                   in the "skin"-ring module
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C
C First, we must find the prebuckled state. Then we can
C determine the stability stiffness and load-geometric matrices.
C
C We assume here that the stringers have no effect on the
C process, since they do not bend under the cold-bending process.
C Also, we assume that the height, H, of the web is small compared
C to the radius, RCOLD.
C
C We use a skin-ring module as our geometry. This module has
C three parts:
C Part 1 =shell skin of axial length equal to the ring spacing b
C Part 2 =internal ring web of height h
C Part 3 =outstanding flange of the ring of width w.
C NOTE: It is assumed here that there is no thickened ring base.
C
C The geometry is:
C
C                                               t(skin)
C                                                | | |  |
C               The T-ring is INTERNAL           |   |  |
C                                                | | |  |
C   t(flange)                                    |   |  |
C |  | | |                                       | | |  |
C |  |   |                                       |   |  |
C |  | | |                                       | | |  |
C |  |   |                                       |   |  |
C |  | | |                                       | | |  |
C |  |   |      t(web)--\                        |   |  |
C |  | | |              |                        | | |  |
C |  | --|---------------------------------------|-- |  |
C w  | |- - - - - - - - - - - - - - - - x<-------|-- |  b
C |  | --|---------------------------------------|-- |  |
C |  | | |              ^                        | | |  |
C |  |   |                                       |   |  |
C |  | |<------------------h-------------------->| | |  |
C |  |   |                                       |   |  |
C |  | | |                                       | | |  |
C |  |   |                          |<-----d-----|-- |  |
C |  | | |                                       | | |  |
C                                                |   |  |
C                                                | | |  |
C                                                |   |  |
C                                                | | |  |
C
C Cold bending puts the flange of width w in hoop compresion.
C
C
C PREBUCKLING BEHAVIOR
C
C It is assumed that the elastic-plastic material is
C isotropic and has the same stress-strain curve in
C tension and compression.
C
C The theory used in this subroutine is taken from the paper,
C
C Bushnell, David, "Theoretical basis of the panda computer
C program for preliminary design of stiffened panels under combined
C in-plane loads", Computers & Structures, Vol. 27, No. 4,
C pp. 541-563, 1987.
C
C For example, Eqs.(1-3) below are Eqs.(33,34) on p. 550 of that
C paper. The formulas for the instantaneous stiffnesses used here
C are Eqs.(42-45) on p. 551 of that paper.
C
C This subroutine is based on J2 deformation theory. As of this
C writing, we assume that the stress generated during the cold-
C bending process is uniaxial: only hoop stress exists. Therefore,
C we assume that the stress at any point in the skin-ring module
C cross section is given by E x (hoop strain), in which E is
C
C the hoop plastic modulus:
C
C  E = E22;       E22 = a/del;       del = a**2 - b**2      (1)
C
C in which
C
C  a =(1 + 2g/3)/E(elastic);     b = -(nu +g/3)/E(elastic)  (2)
C
C and
C
C  g = 1.5*(E(elastic)/Es - 1).   (Es = the secant modulus) (3)
C
C The hoop strain, call it e, is assumed to vary linearly over
C the skin-ring module from the middle surface of the internal
C ring flange to the middle surface of the shell skin. For
C simplicity, it is assumed that the hoop strain is uniform in
C the ring flange and in the shell skin and equal to the values
C at the middle surfaces of those parts. The hoop strain is
C uniform over the thickness of the ring web but varies linearly
C over the height of the ring web.
C
C As the flat, hogged out plate is bent into a cylindrical form
C the neutral axis for circumferential bending, located the
C distance "d" from the skin middle surface as indicated
C in the sketch above, shifts as plastic flow occurs
C over growing portions of the skin-ring module cross
C section with increasing circumferential bending. Therefore, 
C even though we are using deformation theory, we must simulate
C the cold-bending process incrementally. Iterations will be
C needed for each bending increment because we do not know at the
C start of increment i exactly where the neutral axis is for that
C increment. For the first iteration at cold-bending increment i
C we assume that the neutral axis is at the same location as it was
C at the end of increment i - 1. That assumption yields an initial 
C estimate of the distribution of plastic modulus over the
C skin-ring cross section. From this initial estimate we compute
C a new location d of the neutral axis. That new value of d leads
C to a new and better estimate of the distribution of plastic
C modulus, etc. Iterations continue until d no longer changes
C a significant amount from that obtained in the previous
C iteration. 
C
C The location, d,  of the neutral axis is computed from:
C
C d = {E(flange)*A(flange)*[h+t(skin)/2] +t(web)*int[E(web)xdx]}/
C     {E(skin)*A(skin) +E(flange)A(flange) +t(web)*int[E(web)dx]}  (4)
C
C in which d = distance from the shell skin middle surface to
c the location of the neutral axis for circumferential bending.
C E(flange), E(web), and E(skin) are the plastic moduli of the
C flange, web, and shell skin, respectively. A(flange) and
C A(skin) are the areas of the flange and skin cross sections, that
C is, A(flange) = t(flange)*w(flange) and A(skin) = t(skin)*b(ring),
C in which w(flange) is the width of the flange, b(ring) is the
C spacing between adjacent rings, and t(flange) and t(skin) are
C the flange and skin thicknesses, respectively. "int[ ]" means
C "integral", and the radial coordinate, x, is measured from
C the shell skin middle surface and increases radially inward,
C as is shown in the sketch above.
C
C Simpson's rule is used to perform the integrations.
C
C Once we have this new estimate of the location of the neutral
C axis, we can compute the distribution of incremental hoop strain
C from the ith cold-bending increment. At each location in the
C skin-ring module cross section the total hoop strain is given
C by the sum of the total strain from the previous converged cold-
C bending increment plus the incremental strain. From the new hoop
C strains we know where we are on the uniaxial stress-strain
C curve and therefore we can compute new values for the plastic
C moduli, E(flange), E(web), and E(skin), From Eqs. (1 - 3).
C
C The total hoop strain for the ith cold-bending increment is
C given by:
C          e(total)(i) = e(total)(i-1) -(x-d)*kappa(i)     (5)
C in which
C          kappa(i) = 1/R(i) - 1/R(i-1)                    (6)
C
C where R(i) is the known radius of curvature at the neutral axis
C at the ith cold-bending increment and R(i-1) is the known radius
C of curvature at the neutral axis at the (i-1)st cold-bending
C increment. We use e(total)(i) to obtain the stress, sigma, from
C the known stress-strain curve. The secant modulus, Es, which
C appears in Eq.(3), is simply given by
C
C         Es = sigma/ABS[e(total)(i)]                      (7)
C 
C Given Es we compute g in Eq.(3). Then we compute the plastic
C modulus E from Eq.(1) and (2). We have a value of E for every
C value of x. The value of the plastic modulus E corresponding
C to the flange is E[x = h+t(skin)/2]. The value of the plastic
C modulus E corresponding to the skin is E(x=0).
C
C We keep iterating at the ith cold-bending increment until the
C position of the neutral axis d no longer changes. Then we go
C to the next cold-bending increment. We keep adding cold-bending
C increments until we reach Ro, the smallest radius of curvature
C used in the cold-bending process. Note that this radius may be
C significantly smaller than R, the design radius of the
C cylindrical shell attained after springback from the smaller
C radius, Ro.
C
C We have the stress-strain "curve" as a table of (stress,strain)
C pairs. It is assumed that these tabular points are connected
C by straight line segments.
C
C We compute the properties at NX points along the x-axis from
C x = 0 to x = h + t(skin)/2. 
C
C We start with the assumption that the location of d is given
C by the value obtained assuming that no plastic flow has occurred.
C Assuming that the same material is used for the entire structure,
C we have, from Eq.(4):
C
C  d(elastic) = {A(flange)*[h+t(skin)/2] + A(web)*[h+t(skin)]/2}/
C                {A(skin) + A(web) + A(flange)}                   (5)
C
C The minimum radius to which the originally flat, "hogged out",
C plate is bent, called "RCOLD" here, is determined iteratively.
C We keep iterating until the radius after elastic spring-back is
C within 5 per cent of the design radius, RCYL. RCYL is the input
C datum that the PANDA2 user gives in response to the prompt,
C
C  Radius of curvature (cyl. rad.) in the plane of screen, R
C
C Once RCOLD has been determined all the elastic-plastic stiffnesses,
C E11, E12, E22, G12 and the 6 x 6 matrices of integrated constitutive
C coefficients, CXCOLD(i,j,k), CYCOLD(i,j,k), CY3CLD(i,j,ix), and
C CXCLD0(i,j,k), and the prebuckling elastic-plastic stress resultants,
C CNXVAR(i,k) and CNYVAR(i,k) can be determined. These quantities are
C defined above. They are to be used in the discretized "skin"-ring
C single module model and in the discretized skin-ring single module
C model, for which critical buckling load factors are determined later
C in SUBROUTINE STRUCT.
C
C At this point in the calculations, the "closed-form" buckling solution
C can be obtained. The critical buckling load factor from this model is
C called "BUCKLE" and the circumferential wavelength of the critical
C buckling mode is called "WAVLEN". The length, WAVLEN, is used later
C to determine the circumferential length of the discretized "skin"-ring
C and skin-ring module models.
C
C Notice that sometimes we refer to the "skin"-ring module model and
C other times we refer to the skin-ring module model. The two models
C are topologically identical. "skin" means "skin+smeared stringers".
C The string, skin, without the quotes means "panel skin without
C smeared stiffeners".
C
C23456789012345678901234567890123456789012345678901234567890123456789012
      DIMENSION XCOORD(100),FMPROD(100),RHIST(20)
      DIMENSION ETOTAL(100),EPLAST(100),FHOOP(100),SIGMA(100)
      DIMENSION EPROD(100),EIM(20),SIM(20),ETOTL2(100),EIGVAL(100)
      DIMENSION E11(100),E12(100),E22(100),G12(100),ASTF(3,3),BSTF(3,3)
      DIMENSION A11(100),A12(100),A13(100),A22(100),A23(100),A33(100)
      DIMENSION B11(100),B12(100),B13(100),B22(100),B23(100),B33(100)
      DIMENSION EIGALT(10),WORKSP(10),EVECT(50),ASTFD(3,3),BSTFD(3,3)
      DIMENSION PCWORD(*),CPLOT(*),IADDCC(*),IPOINC(*),CONSTR(*)
      DIMENSION WORDB(*),FSAFEP(*),ZCOORD(100),ETOTLZ(100)
      DIMENSION CXCOLD(6,6,5),CYCOLD(6,6,5),CY3CLD(6,6,11),CXCLD0(6,6,5)
      DIMENSION CNXVAR(23,8),CNYVAR(23,8),CXCLD1(6,6,5)
      DOUBLE PRECISION ASTFD,BSTFD,EIGALT,WORKSP,EVECT
      DOUBLE PRECISION CONST,CLIN,CQUAD,CCUBIK
      COMMON/GEOM1/AXIAL,CIRC,RCYL
      COMMON/GEOM2/BBB(2),B2(2),HH(2),WW(2),W2(2)
      COMMON/GEOM3/ISTIF(2),NLAYER(4,2),NSEG(2),INTEXT(2)
      COMMON/LAYER/MATL(90),LTYPE(99,5,2),TT(90),ANGLE(90)
      COMMON/MATER1/E1(20),E2(20),GGG(20),FFNU(20),DENS(20)
      COMMON/COLBND/FLGCLD,FN1WEB,RCOLD
      COMMON/RCLDSX/RCLDSV
      COMMON/NCRITX/NCRIT1,NCRIT2,NCRIT3,NCRITA,NCRITB,NCRITC
      COMMON/NCRITY/NCRIT4,NCRITD,NCRIT5,NCRITE
      COMMON/MATER2/STRAIN(20,20),STRESS(20,20)
      COMMON/THICK/TX(5),TY(5)
      COMMON/ALLCIJ/CX(6,6,5),CY(6,6,5),CS(6,6)
      COMMON/CSKINX/CSKIN(6,6),TSKINX(5),TSKINY(5)
      COMMON/GEOM2S/BSUBX(2),B2SUBX(2),HSUBX(2),WSUBX(2),W2SUBX(2)
      COMMON/SUBSTX/TSUB(2,4,2),HSUB(2,4,2),THSUB(2,4,2),BSUB(2,4,2)
      COMMON/GEOM3S/ISTFSB(2),NLAYSB(4,2),NSEGSB(2),INTXSB(2)
      COMMON/ALLSUB/CXXSUB(6,6,5)
      CHARACTER*3 CCN
      CHARACTER*7 CCN2
      CHARACTER*80 PCWORD,WORDB
      REAL MAXCON
C
      IF (NPRT.GE.0) WRITE(IFILE,'(/,A,/,A,/,A)')
     1'*** BEGIN SUBROUTINE COLDBD (COLD-BENDING RING BUCKLING) ****',
     1' See Item No. 790 of the file, ...panda2/doc/panda2.news',
     1' Buckling from COLDBD ("closed-form" solution) is Model no. 1'
C
      IF (RCOLD.GT.10.E+16) THEN
         WRITE(IFILE,'(A,/,A,/,A,/,A,1P,E12.4)')
     1 ' SUBROUTINE COLDBD is used only if the shell is fabricated',
     1 ' by cold-bending a "hogged out" flat plate into a cylindrical',
     1 ' panel. In that case the cold-bending radius, RCOLD, must be',
     1 ' less than 10.E+16. Your value of RCOLD=',RCOLD
         CALL ERREX
      ENDIF
C
      IF (ISTIF(2).NE.1.AND.ISTIF(2).NE.3) THEN
         WRITE(IFILE,'(A,/,A,/,A,/,A,I2)')
     1 ' The ring cross section is neither Tee-shaped nor rectangular.',
     1 ' You are allowed to simulate cold-bending only for "T" and "R"',
     1 ' ring cross sections. Therefore, ISTIF(2) must be either',
     1 ' 1 or 3. In your case, ISTIF(2) =',ISTIF(2)
         CALL ERREX
      ENDIF
      H = HH(2)
      WFLANG = 0.
      IF (ISTIF(2).EQ.1.AND.FLGCLD.GT.0.1) WFLANG = WW(2)
      B = BBB(2)
C
      NLAY = NLAYER(1,2)
      IF (NLAY.GT.1) THEN
         WRITE(IFILE,'(A,I2)')
     1 ' Only one layer is allowed in the skin. NLAY=',NLAY
         CALL ERREX
      ENDIF
      K = LTYPE(1,1,1)
      TSKIN = TT(K)
      M = MATL(1)
C     WRITE(IFILE,'(A,/,2I6,1P,4E12.4)')
C    1' K,M,TSKIN,E1(M),E2(M),GGG(M)=',K,M,TSKIN,E1(M),E2(M),GGG(M)
      FN1 = FN1WEB
      EAXIAL = E1(M)
      EINPUT = E2(M)
      GELAST = GGG(M)
C
      CALL MOVER(STRAIN(1,M),1,EIM,1,20)
      CALL MOVER(STRESS(1,M),1,SIM,1,20)
C     WRITE(IFILE,'(A,/,1P,6E12.4)')
C    1' EIM(1),SIM(1),EIM(2),SIM(2),EIM(3),SIM(3)=',
C    1  EIM(1),SIM(1),EIM(2),SIM(2),EIM(3),SIM(3)
      NSS = 20
      DO 10 I = 2,20
         IF (SIM(I).LT.0.000001) THEN
            NSS = I - 1
            GO TO 11
         ENDIF
   10 CONTINUE
   11 CONTINUE
C
      DIFF = ABS(EAXIAL - EINPUT)/EAXIAL
      IF (DIFF.GT.0.01) THEN
         WRITE(IFILE,'(A,/,A,/,A,1P,2E12.4,/,A)')
     1 ' You are allowed to simulate cold bending only for an',
     1 ' isotropic material. In your case E1 is not equal to E2.',
     1 ' In your case: E1, E2 =', E1,E2,
     1 ' Please correct your input data.'
         CALL ERREX
      ENDIF
C
      EELAST = SIM(2)/EIM(2)
      DIFF = ABS(EINPUT - EELAST)/EINPUT
      IF (DIFF.GT.0.01) THEN
         WRITE(IFILE,'(A,/,A,/,A,1P,2E12.4,/,A)')
     1 ' The second point on your stress-strain curve does not',
     1 ' match your elastic modulus, EINPUT, for this material:',
     1 ' EINPUT, SIM(2)/EIM(2) =',EINPUT,SIM(2)/EIM(2),
     1 ' Please correct either EINPUT or the stress-strain curve.'
C23456789012345678901234567890123456789012345678901234567890123456789012
         CALL ERREX
      ENDIF
C
      FNU    = FFNU(M)
C
      GINPUT = EINPUT/(2.*(1.+FNU))
      DIFF = ABS(GELAST - GINPUT)/EAXIAL
      IF (DIFF.GT.0.01) THEN
         WRITE(IFILE,'(A,/,A,/,A,1P,3E12.4,/,A)')
     1 ' You are allowed to simulate cold bending only for an',
     1 ' isotropic material. In your case the shear modulus, G,',
     1 ' is not equal to E2/[2.(1+nu)]. Your G,E2,nu=',G,E2,FNU,
     1 ' Please correct your input data.'
         CALL ERREX
      ENDIF
C
      NLAY = NLAYER(3,2)
      IF (NLAY.GT.1) THEN
         WRITE(IFILE,'(A,I2)')
     1 ' Only one layer is allowed in the web. NLAY=',NLAY
         CALL ERREX
      ENDIF
      K = LTYPE(1,3,2)
      M = MATL(1)
      EWEB = E2(M)
      DIFF = ABS(EINPUT - EWEB)/EINPUT
      IF (DIFF.GT.0.01) THEN
         WRITE(IFILE,'(A,/,A,/,A,1P,2E12.4,/,A)')
     1 ' The elastic modulus of the ring web must be the same as that',
     1 ' for the panel skin in order to simulate cold-bending.',
     1 ' In your case the moduli for skin and web are:',
     1 ' EINPUT,EWEB=',EINPUT,EWEB,
     1 ' Please correct your input data.'
         CALL ERREX
      ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
C     TWEB = TT(K)
      TWEB = TY(3)
C     WRITE(IFILE,'(A,/,2I6,1P,4E12.4)')
C    1' NSS,K,TWEB,E1(M),E2(M),GGG(M)=',NSS,K,TWEB,E1(M),E2(M),GGG(M)
C
      TFLANG = 0.
      IF (ISTIF(2).EQ.1.AND.FLGCLD.GT.0.1) THEN
       NLAY = NLAYER(4,2)
       IF (NLAY.GT.1) THEN
         WRITE(IFILE,'(A,I2)')
     1 ' Only one layer is allowed in the outstanding flange.NLAY=',NLAY
         CALL ERREX
       ENDIF
       K = LTYPE(1,4,2)
       M = MATL(1)
       EFLANG = E2(M)
       DIFF = ABS(EINPUT - EFLANG)/EINPUT
       IF (DIFF.GT.0.01) THEN
         WRITE(IFILE,'(A,/,A,/,A,1P,2E12.4,/,A)')
     1 ' The elastic modulus of the ring flange must be the same as',
     1 ' that for the panel skin in order to simulate cold-bending.',
     1 ' In your case the moduli for skin and flange are:',
     1 ' EINPUT,EFLANG=',EINPUT,EFLANG,
     1 ' Please correct your input data.'
         CALL ERREX
       ENDIF
C      TFLANG = TT(K)
       TFLANG = TY(4)
C      WRITE(IFILE,'(A,/,2I6,1P,4E12.4)')
C    1' K,M,TFLANG,E1(M),E2(M),GGG(M)=',K,M,TFLANG,E1(M),E2(M),GGG(M)
      ENDIF
C
      AFLANG= WFLANG*TFLANG
      AWEB  = H*TWEB
      ASKIN = B*TSKIN
      ISUB = 0
      IF (KLAYER.GT.0.AND.ISTFSB(2).NE.0) THEN
         ASKIN =ASKIN + HSUB(2,1,1)*TSUB(2,1,1)*BSUB(2,1,1)/B
         IF (INTEXT(1).EQ.1.AND.INTXSB(2).EQ.0) ISUB = 1
         IF (INTEXT(1).EQ.0.AND.INTXSB(2).EQ.1) ISUB = 1
         IF (NPRT.EQ.2) THEN
            IF (ISUB.EQ.0) WRITE(IFILE,'(A)')
     1    ' Sub-rings are external. Hence, no cold-bending buckling.'
            IF (ISUB.NE.0) WRITE(IFILE,'(A)')
     1    ' Sub-rings are internal. Hence, yes cold-bending buckling.'
         ENDIF
C  If ISUB = 1 the sub-ring is internal.
      ENDIF
      ATOTAL = AFLANG + AWEB + ASKIN
C23456789012345678901234567890123456789012345678901234567890123456789012
C DELAST = location of the reference surface for elastic material.
C
      DELAST =(AFLANG*(H+TSKIN/2.) +AWEB*(H+TSKIN+TSKIN**2/(4.*H))/2.)/
     1                                                           ATOTAL
      IF (NPRT.GE.2) WRITE(IFILE,'(A,1P,E12.4)')
     1' Location of neutral axis for elastic material, DELAST=',DELAST
      D = DELAST
      NBEND = 2 
      NX = 11
C
C  NOTE: NX must be the same as the number of nodal points used
C        in the discretized "skin"-ring and skin-ring module models.
C
      DX = (H + TSKIN/2.)/FLOAT(NX - 1)
      IBACK = 0
      IF (IMOD.EQ.0) THEN
C
C  Starting value for the cold-bending radius before springback: RCOLD
C
         RCOLD = 2.*ABS(RCYL)/3.
      ELSE
C
C  RCLDSV is the converged cold-bending radius, RCOLD, for the current
C         design, that is, the design when IMOD = 0
C
         RCOLD = RCLDSV
      ENDIF
      KOUNT = 0
   15 CONTINUE
C
C  Beginning of the convergence loop for cold-bending radius,
C  RCOLD
C
      KOUNT = KOUNT + 1
      RHIST(IKOUNT) = RCOLD
      DO 20 IX = 1,NX
         ETOTL2(IX) = 0.
   20 CONTINUE
      CURTOT = 1./RCOLD
      DCURV  = CURTOT/FLOAT(NBEND - 1)
C
      DO 500 IBEND = 2,NBEND
         IF (NPRT.GE.2) WRITE(IFILE,'(/,A,I4)') ' IBEND=',IBEND
         ITER = 0
   30    CONTINUE
C
C  Beginning of the convergence loop for the location, d, of
C  the neutral axis for circumferential bending. "d" is the
C  radial distance from the panel skin middle surface to the
C  location of this neutral axis. d is D in this subroutine.
C
         ITER = ITER + 1
         X = -DX
C
C  IX is the nodal point number on the ring web middle surface.
C  in this model the ring web is assumed to extend from the
C  middle surface of the shell skin to the middle surface of
C  the ring outstanding flange.
C
         DO 200 IX = 1,NX
            X = X + DX
            ETOTAL(IX) = ETOTL2(IX) -(X-D)*DCURV
C
C  ETOTAL(IX) is the hoop strain at x = (IX-1)*DX
C  Given ETOTAL, find SIG2  (NSS = number of points in ss curve,
C                             including the origin.)
            DO 50 I = 2,NSS
               IF (ABS(ETOTAL(IX)).LT.EIM(I)) THEN
                  II = I
                  II1 = II - 1
                  GO TO 51
               ENDIF
   50       CONTINUE
   51       CONTINUE
            SIDIFF = SIM(II) - SIM(II1)
            EIDIFF = EIM(II) - EIM(II1)
C  SIG2 is the uniaxial stress corresponding to the strain, ETOTAL(IX)
C  We obtain SIG2 from the strss-strain curve.
            SIG2 =SIM(II1) +SIDIFF*(ABS(ETOTAL(IX)) -EIM(II1))/EIDIFF
C23456789012345678901234567890123456789012345678901234567890123456789012
C  The secant modulus is ES:
            ES = SIG2/ABS(ETOTAL(IX))
            EELAST = SIM(2)/EIM(2)
C
C NOTE: The first non-zero point on your stress-strain curve MUST agree
C       with the elastic modulus of the isotropic material, that is,
C       EELAST must equal to Young's modulus, E. (called EINPUT here).
C
C The quantities, g, aa, bb, del,EPLAST, are from Eqs.(34) and (33) of
C the paper;
C Bushnell, David, "Theoretical basis of the panda computer
C program for preliminary design of stiffened panels under combined
C in-plane loads", Computers & Structures, Vol. 27, No. 4,
C pp. 541-563, 1987.
C EPLAST(IX) is the hoop plastic modulus at the IXth nodal point in the
C ring web.
            g = 1.5*(EELAST/ES - 1.0)
            aa = (1.0 + 2.*g/3.)/EELAST
            bb = (FNU +g/3.)/EELAST
            del = aa**2 - bb**2
            EPLAST(IX) = aa/del
            EPROD(IX) = EPLAST(IX)*X
C           WRITE(IFILE,'(A,I3,/,(1P,5E12.4))')
C    1 ' IX,ETOTAL(IX),ES,X,g,aa,bb,del,EPLAST(IX),EPROD(IX)=',IX,
C    1      ETOTAL(IX),ES,X,g,aa,bb,del,EPLAST(IX),EPROD(IX)
C
  200    CONTINUE
C
C  Numerical integration of int[E(web)dx]
         CALL SIMPSN(IFILE,NX,DX,EPLAST,EPINT)
C  Numerical integration of int[E(web)xdx]
         CALL SIMPSN(IFILE,NX,DX,EPROD,EPXINT)
C
C        WRITE(IFILE,'(A,I3,1P,3E12.4)')
C    1 ' NX,DX,EPINT,EPXINT=',NX,DX,EPINT,EPXINT
C
         DPAST = D
C
C  D = location of the neutral axis including plasticity.
C
         D = (EPLAST(NX)*AFLANG*(H+TSKIN/2.) +TWEB*EPXINT)/
     1       (EPLAST(1)*ASKIN +EPLAST(NX)*AFLANG +TWEB*EPINT)
         IF (NPRT.GE.2) WRITE(IFILE,'(A,I3,A,1P,E12.4)')
     1 ' Iteration=',ITER,' Location of neutral axis, d=',D
         DIFF = ABS((D - DPAST)/D)
         IF (ITER.GT.30) THEN
            WRITE(IFILE,'(A)')
     1    ' No convergence of the location d of the neutral axis.'
            CALL ERREX 
         ENDIF
         IF (ITER.LT.2) GO TO 30
         IF (DIFF.GT.0.01) GO TO 30
C
C  Location, D, of the neutral axis for circumferential elastic-
C  plastic bending has converged.
C
  250    CONTINUE
         DO 300 IX = 1,NX
            ETOTL2(IX) = ETOTAL(IX)
  300    CONTINUE
  500 CONTINUE
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C
C  The following "instantaneous" moduli are needed for
C  the buckling analysis:
C  E11 instantaneous modulus in the plane of the web in
C      the x-direction
C  E12 instantaneous "Poisson-type" modulus
C  E22 instantaneous modulus in the plane of the web in
C      the y-drection (circumferential direction)
C  G   in-plane shear modulus
C
C  First, find the instantaneous moduli for the web:
C
      SIG12 = 0.
      SIG1 = FN1/TWEB
C
      DO 600 IX = 1,NX
         XCOORD(IX) = DX*FLOAT(IX - 1)
         DO 550 I = 2,NSS
            IF (ABS(ETOTAL(IX)).LT.EIM(I)) THEN
               II = I
               II1 = II - 1
               GO TO 551
            ENDIF
  550    CONTINUE
  551    CONTINUE
         SIDIFF = SIM(II) - SIM(II1)
         EIDIFF = EIM(II) - EIM(II1)
         SIG2 =SIM(II1) +SIDIFF*(ABS(ETOTAL(IX)) -EIM(II1))/EIDIFF
         ES = SIG2/ABS(ETOTAL(IX))
         ETT = SIDIFF/EIDIFF
         CALL SMOOTH(NSS,ABS(ETOTAL(IX)),II,EIM,SIM,EIM,ETT)
         ET = ETT
C
C  ET is the tangent modulus. The same "smoothing" technique for ET
C  is used here as that used in the original PANDA computer program
C  (1987 paper, "Theoretical basis..." cited above). SUBROUTINE
C  SMOOTH was taken from the PANDA software.
C
         FMULT = 1.0
         IF (ETOTAL(IX).LT.0.) FMULT = -1.0
         SIG2 = FMULT*SIG2
         SIGMA(IX) = SIG2
C
C  SIGMA(IX) is the hoop stress at nodal point IX in the ring web.
C
C  NOTE: Since the material of panel skin, ring web, and ring
C  outstanding flange is the same, and since the ring web is
C  assumed to extend from the middle surface of the panel skin
C  to the middle surface of the outstanding ring flange, the
C  stress, SIGMA(1), is the stress in the panel skin (assumed
C  to be uniform in the axial direction), and the stress, SIGMA(NX),
C  is the stress in the outstanding flange of the ring (assumed
C  to be uniform along the width of the flange). The axial
C  stress in the panel skin and ring outstanding flange is assumed to
C  remain zero during the cold-bending process. It is assumed that
C  the hoop stress does not vary through the thickness of the
C  panel skin or through the thickness of the ring outstanding flange.
C  The assumption of uniform hoop stress through the thickness of
C  the panel "skin" is a questionable assumption in the case of a
C  panel skin reinforced by sub-rings. Can one really assume that
C  the hoop stress during cold bending is uniform over the panel
C  skin as well as over the height of the sub-rings? Only for very
C  stubby sub-rings! None-the-less, that is the assumption we
C  make here.
C
C  FHOOP(IX) is the hoop resultant in the ring web at nodal point IX
C
         FHOOP(IX) = SIG2*TWEB
C  SBAR is the "effective" (VonMises) stress:
         SBAR = SQRT(SIG1*SIG1 + SIG2*SIG2 - SIG1*SIG2 + 3.*SIG12**2)
C
C The quantities, gprime, g, s1, s2, aa, bb, del, E11, E12, E22, G12,
C are from Eqs.(45), (44), (43), and (42) of the paper:
C Bushnell, David, "Theoretical basis of the panda computer
C program for preliminary design of stiffened panels under combined
C in-plane loads", Computers & Structures, Vol. 27, No. 4,
C pp. 541-563, 1987.
C These are the "instantaneous" quantities used in the stability
C equations:

         gprime = 2.25*EELAST*(1./ET - 1./ES)/SBAR**2
         g = 1.5*(EELAST/ES - 1.0)
         s1 = (2.*SIG1 -SIG2)/3.
         s2 = (2.*SIG2 -SIG1)/3.
         aa = (1.+2.*g/3. +gprime*s2**2)/EELAST
         bb = (FNU +g/3. -gprime*s1*s2)/EELAST
         cc = (1.+2.*g/3. +gprime*s1**2)/EELAST
         del= aa*cc - bb**2
         E11(IX) = aa/del
         E12(IX) = bb/del
         E22(IX) = cc/del
         G12(IX) = GELAST*(1.+FNU)/(1.+FNU +g +2.*gprime*SIG12**2)
         FMPROD(IX) = FHOOP(IX)*(D-XCOORD(IX))
  600 CONTINUE
C end of the loop over IX, the number of nodal points on the ring web.
C
      CALL SIMPSN(IFILE,NX,DX,FHOOP,FWEB)
      CALL SIMPSN(IFILE,NX,DX,FMPROD,FMWEB)
C
C23456789012345678901234567890123456789012345678901234567890123456789012
      FCESKN = SIGMA(1)*TSKIN*B
      FCEFLG = SIGMA(NX)*TFLANG*WFLANG
      FORCE = FWEB + FCESKN + FCEFLG 
      FMOMNT= FMWEB + FCESKN*D + FCEFLG*(D-XCOORD(NX))
C
C  get curvature change, CURBCK, due to spring-back
C  assumption: the sping-back process is entirely elastic.
C
C  First, compute the elastic bending stiffness of a single module
C  about the neutral axis for elastic bending:
      FMULT = 1
      IF (FLGCLD.LT.0.1.OR.ISTIF(2).NE.1) FMULT = 0.00001
C
C  NOTE: FMULT is very small if the ring outstanding flange is
C        welded to the web tip AFTER completion of cold-bending.
C
C  EICLD is the circumferential bending stiffness, "EI".
C
      EICLD =       EELAST*TSKIN**3*B/12.
     1             +EELAST*(H+TSKIN/2.)**3*TWEB/12.
     1       +FMULT*EELAST*TFLANG**3*WFLANG/12.
     1             +EELAST*TSKIN*B*DELAST**2
     1             +EELAST*H*TWEB*((H+TSKIN/2.)/2.-DELAST)**2
     1       +FMULT*EELAST*WFLANG*TFLANG*(H+TSKIN/2.-DELAST)**2
C
      ARCYL = ABS(RCYL)
      ARCOLD = ABS(RCOLD)
C
C  CURBCK is the curvatue change due to elastic spring-back.
C
C     CURBCK = ABS((FMOMNT/B)/C55N)
      CURBCK = ABS(FMOMNT/EICLD)
      CUREND = 1./ARCOLD - CURBCK
      RADEND = 1./CUREND
C
C  RADEND is the radius of the cold-bent panel after elastic
C  spring-back.
C
      FACTR = 0.5
C  NOTE: with FACTR = 1.0 the process often did not converge.
      DIFF = (RADEND - ARCYL)/RADEND
      IF (NPRT.GE.2) WRITE(IFILE,'(A,I3,1P4E12.4)')
     1' KOUNT,RCOLD,RADEND,ARCYL,DIFF=', KOUNT,RCOLD,RADEND,ARCYL,DIFF
      IF (IBACK.EQ.0.AND.KOUNT.LT.10.AND.EELAST/SIM(2).GT.10.0
     1 .AND.ABS(DIFF).GT.0.05) THEN
         IF (DIFF.LT.0.0) RCOLD = MIN((1.-FACTR*DIFF)*ARCOLD,ARCYL)
         IF (DIFF.GT.0.0) RCOLD = (1.-FACTR*DIFF)*ARCOLD
C      Iterate again to obtain a better value of RCOLD...
         GO TO 15
      ENDIF
C
C  Either RCOLD converged or KOUNT reached its maximum value, 10:
C
      IF (KOUNT.EQ.10) THEN
         WRITE(IFILE,'(/,A,/,A,/,A,/,1P,(5E12.4),/,A)')
     1' ****************** CONVERGENCE FAILURE ******************',
     1' Cold-bending radius, RCOLD, fails to converge. Run abort.',
     1' History of RCOLD =',(RHIST(I),I=1,KOUNT),
     1' *********************************************************'
         CALL ERREX
      ENDIF
C
C   We now have a satisfactory value for the cold-bending
C   radius, RCOLD, before elastic springback.
C   Iterations for RCOLD have converged to within 5 per cent,
C   which means that the radius after elastic spring-back is
C   within 5 per cent of the design radius, ABS(RCYL). (ABS(RCYL)
C   is an input datum provided by the PANDA2 user).
C
      IF (IBACK.EQ.0) THEN
C
C   In our determination of RCOLD we used the smallest possible
C   value of NBEND: NBEND = 2 (cold bending from flat to RCOLD in
C   just one step). Now we increase NBEND from 2 to 3 and recompute
C   the elastic-plastic properties, E11(IX), E12(IX), E22(IX),
C   G12(IX), SIGMA(IX), and FHOOP(IX), IX = 1,NX, at RCOLD
C   a bit more accurately. NOTE: We do not iterate on RCOLD in this
C   step. We first save RCOLD (RCLDSV) for use with the perturbed
C   design (when IMOD = 1).
C
         IF (IMOD.EQ.0) RCLDSV = RCOLD
         NBEND = 3
         IBACK = 1
         GO TO 15
      ENDIF
C
      IF (NPRT.GE.2) THEN
       WRITE(IFILE,'(/,A,I3,/,A)')
     1' Number of points on stress-strain curve, NSS =',NSS,
     1'   STRAIN       STRESS'
       DO 610 I = 1,NSS
         WRITE(IFILE,'(1P,2E12.4)') EIM(I),SIM(I)
  610  CONTINUE
       WRITE(IFILE,'(/,A,1P,E12.4,/,A,1P,E12.4)')
     1' ring spacing,          B(RNG)=                   ',B,
     1' skin thickness,         TSKIN=                   ',TSKIN
       WRITE(IFILE,'(A,1P,E12.4,/,A,1P,E12.4)')
     1' ring web height,       H(RNG)=                   ',H,
     1' ring web thickness,      TWEB=                   ',TWEB
       WRITE(IFILE,'(A,1P,E12.4,/,A,1P,E12.4)')
     1' ring flange width,     W(RNG)=                   ',WFLANG,
     1' ring flange thickness, TFLANG=                   ',TFLANG
       WRITE(IFILE,'(A,1P,E12.4,/,A,1P,E12.4)')
     1' cold-bending radius,    RCOLD=                   ',RCOLD,
     1' radius after springback,RADEND=                  ',RADEND
       WRITE(IFILE,'(A,1P,E12.4,/,A,1P,E12.4)')
     1' design radius of cylinder,RCYL=                  ',ABS(RCYL),
     1' At R =RCOLD: location d of the ring neutral axis=',D
       WRITE(IFILE,'(/,A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4)')
     1' ring web hoop force,     FWEB=                   ',FWEB,
     1' skin hoop force, SIGMA(1)*TSKIN*B=               ',FCESKN,
     1' flange hoop force, SIGMA(NX)*TFLANG*W(RNG)=      ',FCEFLG
       WRITE(IFILE,'(/,A,1P,E12.4,/,A,1P,E12.4)')
     1' force  integrated over the ring cross section=   ',FORCE,
     1' moment integrated over the ring cross section=   ',FMOMNT
C23456789012345678901234567890123456789012345678901234567890123456789012
C
C Print out stress and strain distribution over the ring module cross
C section and compute the bending moment that creates this distribution.
C
       WRITE(IFILE,'(/,A,I3,A,/(1P,5E12.4))')
     1' x-coordinates for ',NX,' radial locations along the ring web:',
     1 (XCOORD(I), I=1,NX)
       WRITE(IFILE,'(/,A,I3,A,/(1P,5E12.4))')
     1' hoop strain for ',NX,' radial locations along the ring web:',
     1 (ETOTAL(I), I=1,NX)
       WRITE(IFILE,'(/,A,I3,A,/(1P,5E12.4))')
     1' hoop stress for ',NX,' radial locations along the ring web:',
     1 (SIGMA(I), I=1,NX)
       WRITE(IFILE,'(/,A,I3,A,/(1P,5E12.4))')
     1' hoop resultant for ',NX,' radial locations along the ring web:',
     1 (FHOOP(I), I=1,NX)
       WRITE(IFILE,'(/,A,1P,E12.4,/,A,1P,E12.4)')
     1' uniform hoop resultant in the shell skin=',SIGMA(1)*TSKIN,
     1' uniform hoop resultant in the outstanding flange=',
     1  SIGMA(NX)*TFLANG
      ENDIF
C
C  Next, obtain the C(i,j) and the CNXVAR and CNYVAR for the
C  converged cold-bent state:
C
      CALL MOVER(CX,1,CXCOLD,1,180)
      CALL MOVER(CX,1,CXCLD1,1,180)
      CALL MOVER(CX(1,1,1),1,CXCLD1(1,1,5),1,36)
      CALL MOVER(CY,1,CYCOLD,1,180)
      CALL MOVER(CX,1,CXCLD0,1,180)
      CALL MOVER(CSKIN,1,CXCLD0(1,1,1),1,36)
      CALL MOVER(CSKIN,1,CXCLD0(1,1,5),1,36)
C
      E22LIN = EELAST/(1.-FNU**2)
      E11LIN = E22LIN
      E12LIN = FNU*E22LIN
      IF (NPRT.GE.2) WRITE(IFILE,'(/,A,1P,3E12.4)')
     1' E11LIN, E12LIN, E22LIN=',E11LIN, E12LIN, E22LIN
C
C  First, do the ring web:
      DO 700 IX = 1,NX
         CALL MOVER(CY(1,1,3),1,CY3CLD(1,1,IX),1,36)
         DIFF = ABS(E22LIN - E22(IX))/E22LIN
C  If the cold-bending process remains entirely elastic, DIFF=0.0
         IF (NPRT.GE.2)
     1   WRITE(IFILE,'(A,I3,1P,E12.4)')' Ring Web: IX,DIFF=',IX,DIFF
         IF (DIFF.GT.0.05) THEN
            CY3CLD(1,1,IX) = E11(IX)*CY(1,1,3)/E11LIN
            CY3CLD(1,2,IX) = E12(IX)*CY(1,2,3)/E12LIN
            CY3CLD(2,1,IX) = CY3CLD(1,2,IX)
            CY3CLD(2,2,IX) = E22(IX)*CY(2,2,3)/E22LIN
            CY3CLD(3,3,IX) = G12(IX)*CY(3,3,3)/GELAST
            CY3CLD(4,4,IX) = E11(IX)*CY(4,4,3)/E11LIN
            CY3CLD(4,5,IX) = E12(IX)*CY(4,5,3)/E12LIN
            CY3CLD(5,4,IX) = CY3CLD(4,5,IX)
            CY3CLD(5,5,IX) = E22(IX)*CY(5,5,3)/E22LIN
            CY3CLD(6,6,IX) = G12(IX)*CY(6,6,3)/GELAST
         ENDIF
         CNXVAR(IX,3)   = FN1
         CNYVAR(IX,3)   = FHOOP(IX)
  700 CONTINUE
C end of the loop over IX, the nodal points along the ring web.
C
C  Next, do the shell skin and ring outstanding flange:
C
C First, do the shell skin:
C NOTE: We assume that the elastic-plastic moduli in the
C       skin are the same as those at Node Point 1 in the
C       ring web.
      DIFF = ABS(E22LIN - E22(1))/E22LIN
C  If the cold-bending process remains entirely elastic, DIFF=0.0
      IF (NPRT.GE.2)
     1 WRITE(IFILE,'(A,1P,E12.4)')' Shell skin: DIFF=',DIFF
      IF (DIFF.GT.0.05) THEN
         CXCOLD(1,1,1) = E11(1)*CX(1,1,1)/E11LIN
         CXCOLD(1,2,1) = E12(1)*CX(1,2,1)/E12LIN
         CXCOLD(2,1,1) = CXCOLD(1,2,1)
         CXCOLD(2,2,1) = E22(1)*CX(2,2,1)/E22LIN
         CXCOLD(3,3,1) = G12(1)*CX(3,3,1)/GELAST
         CXCOLD(4,4,1) = E11(1)*CX(4,4,1)/E11LIN
         CXCOLD(4,5,1) = E12(1)*CX(4,5,1)/E12LIN
         CXCOLD(5,4,1) = CXCOLD(4,5,1)
         CXCOLD(5,5,1) = E22(1)*CX(5,5,1)/E22LIN
         CXCOLD(6,6,1) = G12(1)*CX(6,6,1)/GELAST
         CXCOLD(1,1,5) = E11(1)*CX(1,1,5)/E11LIN
         CXCOLD(1,2,5) = E12(1)*CX(1,2,5)/E12LIN
         CXCOLD(2,1,5) = CXCOLD(1,2,5)
         CXCOLD(2,2,5) = E22(1)*CX(2,2,5)/E22LIN
         CXCOLD(3,3,5) = G12(1)*CX(3,3,5)/GELAST
         CXCOLD(4,4,5) = E11(1)*CX(4,4,5)/E11LIN
         CXCOLD(4,5,5) = E12(1)*CX(4,5,5)/E12LIN
         CXCOLD(5,4,5) = CXCOLD(4,5,5)
         CXCOLD(5,5,5) = E22(1)*CX(5,5,5)/E22LIN
         CXCOLD(6,6,5) = G12(1)*CX(6,6,5)/GELAST
         CALL MOVER(CXCOLD(1,1,1),1,CXCLD1(1,1,1),1,36)
         CALL MOVER(CXCLD1(1,1,1),1,CXCLD1(1,1,5),1,36)
C
C  CSKIN(i,j) are the integrated constitutive quantities
C  for the panel skin without any smeared stiffeners or
C  sub-stiffeners. As of this writing, the stiffness
C  matrix, CXCLD0(i,j) is not used anywhere to compute
C  ring buckling under the cold-bending process.
C
         CXCLD0(1,1,1) = E11(1)*CSKIN(1,1)/E11LIN
         CXCLD0(1,2,1) = E12(1)*CSKIN(1,2)/E12LIN
         CXCLD0(2,1,1) = CXCLD0(1,2,1)
         CXCLD0(2,2,1) = E22(1)*CSKIN(2,2)/E22LIN
         CXCLD0(3,3,1) = G12(1)*CSKIN(3,3)/GELAST
         CXCLD0(4,4,1) = E11(1)*CSKIN(4,4)/E11LIN
         CXCLD0(4,5,1) = E12(1)*CSKIN(4,5)/E12LIN
         CXCLD0(5,4,1) = CXCLD0(4,5,1)
         CXCLD0(5,5,1) = E22(1)*CSKIN(5,5)/E22LIN
         CXCLD0(6,6,1) = G12(1)*CSKIN(6,6)/GELAST
         CXCLD0(1,1,5) = E11(1)*CSKIN(1,1)/E11LIN
         CXCLD0(1,2,5) = E12(1)*CSKIN(1,2)/E12LIN
         CXCLD0(2,1,5) = CXCLD0(1,2,5)
         CXCLD0(2,2,5) = E22(1)*CSKIN(2,2)/E22LIN
         CXCLD0(3,3,5) = G12(1)*CSKIN(3,3)/GELAST
         CXCLD0(4,4,5) = E11(1)*CSKIN(4,4)/E11LIN
         CXCLD0(4,5,5) = E12(1)*CSKIN(4,5)/E12LIN
         CXCLD0(5,4,5) = CXCLD0(4,5,5)
         CXCLD0(5,5,5) = E22(1)*CSKIN(5,5)/E22LIN
         CXCLD0(6,6,5) = G12(1)*CSKIN(6,6)/GELAST
      ENDIF
C   end of (DIFF.GT.0.05) condition
C
      NSEGX = 4
      IF (ISTIF(2).EQ.1) NSEGX = 5
C
C NOTE: If there are sub-rings SIGMA(1)*TSKIN is a conservative
C value for CNYVAR because it leaves out the hoop tension in the
C subrings. Therefore, in this model there is less hoop tension
C than there would be in the actual structure with subrings.
C
      CALL MOVER(SIGMA(1)*TSKIN,0,CNYVAR(1,1),1,23)
      CALL MOVER(SIGMA(1)*TSKIN,0,CNYVAR(1,2),1,23)
      CALL MOVER(SIGMA(1)*TSKIN,0,CNYVAR(1,NSEGX),1,23)
      CALL MOVER(0.,0,CNXVAR(1,1),1,23)
      CALL MOVER(0.,0,CNXVAR(1,2),1,23)
      CALL MOVER(0.,0,CNXVAR(1,NSEGX),1,23)
C
C   ISTIF(2) = 1 means the ring is Tee shaped. NOTE:
C   no faying flange is accounted for in this application!
C
      IF (ISTIF(2).NE.1) GO TO 730
C
C Next, do the ring outstanding flange of the Tee-shaped ring:
      FMULT = 1.0
      IF (FLGCLD.LT.0.1) THEN
         FMULT = 0.00001
         DO 720 I = 1,6
         DO 710 J = 1,6
            CYCOLD(I,J,4) = FMULT*CYCOLD(I,J,4)
  710    CONTINUE
  720    CONTINUE
      ENDIF
C
      DIFF = ABS(E22LIN - E22(NX))/E22LIN
C  If the cold-bending process remains entirely elastic, DIFF=0.0
      IF (NPRT.GE.2) WRITE(IFILE,'(A,I3,1P,E12.4)')
     1' Ring outstanding flange: NX,DIFF=',NX,DIFF
C
C NOTE: We assume that the elastic-plastic moduli in the outstanding
C       ring flange are the same as those at Node Point NX in the
C       ring web.
C
      IF (DIFF.GT.0.05) THEN
         CYCOLD(1,1,4) = FMULT*E11(NX)*CY(1,1,4)/E11LIN
         CYCOLD(1,2,4) = FMULT*E12(NX)*CY(1,2,4)/E12LIN
         CYCOLD(2,1,4) = CYCOLD(1,2,4)
         CYCOLD(2,2,4) = FMULT*E22(NX)*CY(2,2,4)/E22LIN
         CYCOLD(3,3,4) = FMULT*G12(NX)*CY(3,3,4)/GELAST
         CYCOLD(4,4,4) = FMULT*E11(NX)*CY(4,4,4)/E11LIN
         CYCOLD(4,5,4) = FMULT*E12(NX)*CY(4,5,4)/E12LIN
         CYCOLD(5,4,4) = CYCOLD(4,5,4)
         CYCOLD(5,5,4) = FMULT*E22(NX)*CY(5,5,4)/E22LIN
         CYCOLD(6,6,4) = FMULT*G12(NX)*CY(6,6,4)/GELAST
      ENDIF
      CALL MOVER(SIGMA(1)*TFLANG,0,CNYVAR(1,4),1,23)
      IF (FLGCLD.LT.0.1) CALL MOVER(0.,0,CNYVAR(1,4),1,23)
      CALL MOVER(0.,0,CNXVAR(1,4),1,23)
C
  730 CONTINUE
C
C     CALL OUTCIJ(15,1,IFILE,CXCOLD(1,1,1),TXDUM,ETHDUM)
C     CALL OUTCIJ(15,1,IFILE,CXCOLD(1,1,2),TXDUM,ETHDUM)
C     CALL OUTCIJ(15,1,IFILE,CXCOLD(1,1,3),TXDUM,ETHDUM)
C     CALL OUTCIJ(15,1,IFILE,CXCOLD(1,1,4),TXDUM,ETHDUM)
C     CALL OUTCIJ(15,1,IFILE,CXCOLD(1,1,5),TXDUM,ETHDUM)
C
C     CALL OUTCIJ(15,1,IFILE,CYCOLD(1,1,1),TXDUM,ETHDUM)
C     CALL OUTCIJ(15,1,IFILE,CYCOLD(1,1,2),TXDUM,ETHDUM)
C     CALL OUTCIJ(15,1,IFILE,CYCOLD(1,1,3),TXDUM,ETHDUM)
C     CALL OUTCIJ(15,1,IFILE,CYCOLD(1,1,4),TXDUM,ETHDUM)
C     CALL OUTCIJ(15,1,IFILE,CYCOLD(1,1,5),TXDUM,ETHDUM)
C
C     WRITE(IFILE,'(/,A,/,(1P,6E12.4))')
C    1' (CNXVAR(i,1),i=1,11)=', (CNXVAR(I,1),I=1,11)
C     WRITE(IFILE,'(A,/,(1P,6E12.4))')
C    1' (CNXVAR(i,2),i=1,11)=', (CNXVAR(I,2),I=1,11)
C     WRITE(IFILE,'(A,/,(1P,6E12.4))')
C    1' (CNXVAR(i,3),i=1,11)=', (CNXVAR(I,3),I=1,11)
C     WRITE(IFILE,'(A,/,(1P,6E12.4))')
C    1' (CNXVAR(i,4),i=1,11)=', (CNXVAR(I,4),I=1,11)
C     WRITE(IFILE,'(A,/,(1P,6E12.4))')
C    1' (CNXVAR(i,5),i=1,11)=', (CNXVAR(I,5),I=1,11)
C
C     WRITE(IFILE,'(/,A,/,(1P,6E12.4))')
C    1' (CNYVAR(i,1),i=1,11)=', (CNYVAR(I,1),I=1,11)
C     WRITE(IFILE,'(A,/,(1P,6E12.4))')
C    1' (CNYVAR(i,2),i=1,11)=', (CNYVAR(I,2),I=1,11)
C     WRITE(IFILE,'(A,/,(1P,6E12.4))')
C    1' (CNYVAR(i,3),i=1,11)=', (CNYVAR(I,3),I=1,11)
C     WRITE(IFILE,'(A,/,(1P,6E12.4))')
C    1' (CNYVAR(i,4),i=1,11)=', (CNYVAR(I,4),I=1,11)
C     WRITE(IFILE,'(A,/,(1P,6E12.4))')
C    1' (CNYVAR(i,5),i=1,11)=', (CNYVAR(I,5),I=1,11)
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C
C
C STABILITY EQUATIONS FOR THE "CLOSED FORM" SOLUTION
C
C Find the elements of the stiffness and load-geometric matrices
C before integration over the web height corresponding
C to the assumed buckling modal displacement in the ring web.
C The buckling modal displacement in the ring web is assumed to
C be:
C  w = [a3*H**3*S**2*(S -3.) +a4*H**4*S**2*(S**2 -6.)
C                 +a5*H**5*S**2*(S**3 -10.)]*sin(N*pi*y/L)   (8)
C
C in which w is the normal displacement (rolling) of the web,
C H is the height of the web, and s = x/H, with x being the
C coordinate in the plane of the web from the web root (x=0) to the
C web tip (x = h). L is the length of the web in the circumferential
C coordinate direction, y. N is the number of circumferential
C half waves over the circumferential length, L.
C
C It is assumed that the panel skin experiences no out-of-plane
C deformation in the buckling mode. Only the web and the outstanding
C flange, if any, participate in the buckling mode.
C
C a3, a4, a5 are undetermined coefficients with the following units:
C  a3 has units 1/in**2;  a4 has units 1/in**3;  a5 has units 1/in**4
C
C NOTE: The assumed displacement pattern, Eq. (8), was originally planned
C for a ring that has no outstanding flange. In that case the curvature
C w,xx at the web tip should be zero because the web tip is free, Indeed,
C w,xx is zero at the web tip even if there exists an outstanding flange.
C Therefore, Eq.(8) may be a poor choice for a ring buckling mode. The
C prediction of buckling may be either unconservative or conservative when
C an outstanding flange exists. (NOTE: This dilemma does not exist in
C the case of the discretized "skin"-ring and skin-ring single module
C models processed later in SUBROUTINE STRUCT. Therefore, the PANDA2 user
C does not have to worry about generating unconservative designs.)
C
C Also, the analysis is based on the assumption that the loading of the
C web is uniaxial: loading only in the hoop direction (y direction). If
C there is a significant FN1 (in-plane loading of the web normal to the
C shell skin surface), the theory used here may be inadequate.
C
C The cold-bending ring web buckling problem is an eigenvalue problem
C of the following form:
C
C              {[A] - lambda x [B]}q = 0.                    (9)
C
C in which [A] is the 3 x 3 stiffness matrix and [B] is the 3 x 3
C load-geometric matrix. The system of rank 3 represented by Eq.(9)
C is obtained by minimizing the total potential energy, U - W, with
C respect to the undetermined coefficients, a3, a4, and a5, in Eq.(8).
C
C It is assumed that the web buckling mode can be captured by only
C normal deflections w that vary along the s-coordinate as given in
C Eq.(8) and that vary in the circumferential direction y trigonometrically
C as sin(n*pi*y/l). The strain energy of buckling is given by
C
C (H/2)*int[C(4,4)*w,ss^2 +2C(4,5)*w,ss*w,yy 
C                          +C(5,5)*w,yy^2 +4C6,6)*w,sy^2]dyds  (10)
C
C in which w,ss, w,sy, w,yy represent second partial derivatives of w with
C respect to the coordinate directions s and y, and the C(i,j) are the
C bending stiffnesses of the cold-bent ring web..
C
C The work done by the prebuckling resultants, N1 and N2, during the
C buckling displacements w is given by
C
C (H/2)*int[N1*w,s^2 + N2*w,y^2)]dyds                          (11)
C
C Minimization of U - W with respect to the undetermined coefficients
C a3, a4, a5 yields the coefficients A(i,j) and B(i,j) listed below.
C
c Integration over s is performed by Simpson's rule (in SUBROUTINE
C SIMPSN, which is used elsewhere in PANDA2 and which is located in
C the util.src library).
C
      PI = 3.1415927
      FL = CIRC 
      DS = 1./FLOAT(NX-1)
C
C In the following several statements we compute a
C circumferential length of ring, FL, that usually
C represents only a small part of the entire shell.
C We do this so that we don't have to search over
C a large quantity of wave numbers to find the critical
C cold-bending ring web buckling mode.
C
      NWVMAX = FL/H
      IF (NWVMAX.GT.10) THEN
         FL = 10.*CIRC/FLOAT(NWVMAX)
      ENDIF
      NWVMAX = FL/H
      IF (NWVMAX.GT.10) THEN
         FL = 10.*FL/FLOAT(NWVMAX)
      ENDIF
      NWVMAX = 2.*FL/H
C
      BUCKLE = 10.E+16
C
      IF (IMOD.EQ.0) THEN
         NBEG = 1
         NEND = NWVMAX
      ELSE
C
C For the perturbed design (IMOD = 1) we use only the critical
C number of circumferential halfwaves, NCRIT3, determined for
C the unperturbed (current) design.
C
         NBEG = NCRIT3
         NEND = NCRIT3
      ENDIF
C
      DO 1000 NWAVE = NBEG,NEND 
C
       FN = NWAVE
       S = -DS
C
       DO 800 IX = 1,NX 
C
C Some frequently used combinations:
C
         C44 = E11(IX)*TWEB**3/12.
         C45 = E12(IX)*TWEB**3/12.
         C55 = E22(IX)*TWEB**3/12.
         C66 = G12(IX)*TWEB**3/12.
         FN2 = FHOOP(IX)
         S = S + DS
         C  = FN*PI/FL
         S1 =  H*6.*(S - 1.)      
         S3 =  C**2*H**3*S**2*(S - 3.)
         S36 = C*H**2*S*(3.*S - 6.)
         S21 = H*12.*H*(S**2 - 1.)
         S26 = C**2*H**3*S**2*H*(S**2 - 6.)
         S31 = H*20.*H**2*(S**3 - 1.)
         S310= C**2*H**3*S**2*H**2*(S**3 - 10.)
         S320= C*H**2*S*H**2*(5.*S**3 - 20.)
         S212= C*H**2*S*H*(4.*S**2 - 12.)
C
         A11(IX) = S1*S1*C44 +S3*S1*C45 +S1*S3*C45 +S3*S3*C55
     1                                                +S36*S36*4.*C66
         A12(IX) = S1*S21*C44 +S3*S21*C45 +S1*S26*C45 +S3*S26*C55
     1                                                +S36*S212*4.*C66
         A13(IX) = S1*S31*C44 +S3*S31*C45 +S1*S310*C45 +S3*S310*C55
     1                                                +S36*S320*4.*C66
C
         A22(IX) = S21*S21*C44 +S26*S21*C45 +S21*S26*C45 +S26*S26*C55
     1                                               +S212*S212*4.*C66
         A23(IX) = S21*S31*C44 +S26*S31*C45 +S21*S310*C45 +S26*S310*C55
     1                                               +S212*S320*4.*C66
C
         A33(IX) = S31*S31*C44 +S310*S31*C45 + S31*S310*C45 +S310*S310*C55
     1                                               +S320*S320*4.*C66
C
         B11(IX) = S3*S3*FN2/C**2 + S36*S36*FN1/C**2
         B12(IX) = S3*S26*FN2/C**2 +S36*S212*FN1/C**2
         B13(IX) = S3*S310*FN2/C**2 +S36*S320*FN1/C**2
C
         B22(IX) = S26*S26*FN2/C**2 +S212*S212*FN1/C**2
         B23(IX) = S26*S310*FN2/C**2 +S212*S320*FN1/C**2
C
         B33(IX) = S310*S310*FN2/C**2 +S320*S320*FN1/C**2
C
  800 CONTINUE
C  end of the loop over IX
C
C The Aij and Bij have yet to be integrated over the height of the web.
C
C   Next, integrate the Aij and Bij using Simpson's rule:
C
      CALL SIMPSN(IFILE,NX,DS,A11,ASTF(1,1))
      CALL SIMPSN(IFILE,NX,DS,A12,ASTF(1,2))
      CALL SIMPSN(IFILE,NX,DS,A13,ASTF(1,3))
      CALL SIMPSN(IFILE,NX,DS,A22,ASTF(2,2))
      CALL SIMPSN(IFILE,NX,DS,A23,ASTF(2,3))
      CALL SIMPSN(IFILE,NX,DS,A33,ASTF(3,3))
C
      CALL SIMPSN(IFILE,NX,DS,B11,BSTF(1,1))
      CALL SIMPSN(IFILE,NX,DS,B12,BSTF(1,2))
      CALL SIMPSN(IFILE,NX,DS,B13,BSTF(1,3))
      CALL SIMPSN(IFILE,NX,DS,B22,BSTF(2,2))
      CALL SIMPSN(IFILE,NX,DS,B23,BSTF(2,3))
      CALL SIMPSN(IFILE,NX,DS,B33,BSTF(3,3))
C
      IF (ISTIF(2).EQ.1) THEN
C
C  Next, find the contributions of the outstanding flange, if any, to
C  the stiffness and load-geometric matrices. Note that the following
C  quantities INCLUDE integration over the width of the outstanding
C  ring flange. We can do the integration in "closed form" because it
C  is assumed that the prebuckled state of the outstanding flange is
C  uniform both along the width of the flange and through the thickness
C  of the flange.
C
C  The following formulas are based on the assumption that the flange
C  cross section does not deform in the buckling mode. The flange
C  centroid experiences a rotation equal to dw/dx of the web at the
C  tip of the web and an axial displacement equal to w of the web at
C  the tip of the web.
C
C
C  The following "instantaneous" moduli are needed for
C  the buckling analysis:
C  E11 instantaneous modulus in the plane of the flange in
C      the vertical direction (along the flange width) 
C  E12 instantaneous "Poisson-type" modulus
C  E22 instantaneous modulus in the plane of the flange in
C      the y-drection (circumferential direction)
C  G   in-plane shear modulus
C
C  First, find the instantaneous moduli for the flange:
C
         SIG12 = 0.
         SIG1 =  0. 
         DO 750 I = 2,NSS
            IF (ABS(ETOTAL(NX)).LT.EIM(I)) THEN
               II = I
               II1 = II - 1
               GO TO 751
            ENDIF
  750    CONTINUE
  751    CONTINUE
         SIDIFF = SIM(II) - SIM(II1)
         EIDIFF = EIM(II) - EIM(II1)
         SIG2 =SIM(II1) +SIDIFF*(ABS(ETOTAL(NX)) -EIM(II1))/EIDIFF
         FMULT = 1.0
         IF (ETOTAL(NX).LT.0.) FMULT = -1.0
         FN2F = FMULT*SIG2*TFLANG
         ES = SIG2/ABS(ETOTAL(NX))
         ETT = SIDIFF/EIDIFF
         CALL SMOOTH(NSS,ETOTAL(NX),II,EIM,SIM,EIM,ETT)
         ET = ETT
         SBAR = SQRT(SIG1*SIG1 + SIG2*SIG2 - SIG1*SIG2 + 3.*SIG12**2)
         gprime = 2.25*EELAST*(1./ET - 1./ES)/SBAR**2
         g = 1.5*(EELAST/ES - 1.0)
         s1 = (2.*SIG1 -SIG2)/3.
         s2 = (2.*SIG2 -SIG1)/3.
         aa = (1.+2.*g/3. +gprime*s2**2)/EELAST
         bb = (FNU +g/3. -gprime*s1*s2)/EELAST
         cc = (1.+2.*g/3. +gprime*s1**2)/EELAST
         del= aa*cc - bb**2
C        E11 = aa/del
C        E12 = bb/del
         E22(NX) = cc/del
C        G12 = GELAST*(1.+FNU)/(1.+FNU +g +2.*gprime*SIG12**2)
C        C44 = E11*TFLANG**3/12.
C        C45 = E12*TFLANG**3/12.
C        C55 = E22*TFLANG**3/12.
C        C66 = G12*TFLANG**3/12.
         EI  = E22(NX)*TFLANG*WFLANG**3/12.
C
C  Frequently used quantities:
C
         WF   = WFLANG
         RWEB = RCOLD
         S3   = -C**2*H**3*2.
         S26  = -C**2*H**3*H*5.
         S36  = -H**2*3.
         S212 = -H**2*H*8.
         S310 = -C**2*H**3*H**2*9.
         S320 = -H**2*H**2*15.
C
         ASTF(1,1) = ASTF(1,1) + S3*S3*EI +S36*S36*EI/RWEB**2
         ASTF(1,2) = ASTF(1,2) + S3*S26*EI + S36*S212*EI/RWEB**2
         ASTF(1,3) = ASTF(1,3) + S3*S310*EI + S36*S320*EI/RWEB**2
C
         ASTF(2,2) = ASTF(2,2) + S26*S26*EI + S212*S212*EI/RWEB**2
         ASTF(2,3) = ASTF(2,3) + S26*S310*EI + S212*S320*EI/RWEB**2
C
         ASTF(3,3) = ASTF(3,3) + S310*S310*EI + S320*S320*EI/RWEB**2
C
         BSTF(1,1) = BSTF(1,1) 
     1     + S3*S3*FN2F*WF/C**2 + C**2*S36*S36*FN2F*WF**3/12.
         BSTF(1,2) = BSTF(1,2) 
     1     + S3*S26*FN2F*WF/C**2 + C**2*S36*S212*FN2F*WF**3/12.
         BSTF(1,3) = BSTF(1,3) 
     1     + S3*S310*FN2F*WF/C**2 + C**2*S36*S320*FN2F*WF**3/12.
C
         BSTF(2,2) = BSTF(2,2) 
     1     + S26*S26*FN2F*WF/C**2 + C**2*S212*S212*FN2F*WF**3/12.
         BSTF(2,3) = BSTF(2,3) 
     1     + S26*S310*FN2F*WF/C**2 + C**2*S212*S320*FN2F*WF**3/12.
C
         BSTF(3,3) = BSTF(3,3) 
     1     + S310*S310*FN2F*WF/C**2 + C**2*S320*S320*FN2F*WF**3/12.
      ENDIF
C
      ASTFD(1,1) = ASTF(1,1)
      ASTFD(1,2) = ASTF(1,2)
      ASTFD(1,3) = ASTF(1,3)
      ASTFD(2,2) = ASTF(2,2)
      ASTFD(2,3) = ASTF(2,3)
      ASTFD(3,3) = ASTF(3,3)
C
      BSTFD(1,1) = BSTF(1,1)
      BSTFD(1,2) = BSTF(1,2)
      BSTFD(1,3) = BSTF(1,3)
      BSTFD(2,2) = BSTF(2,2)
      BSTFD(2,3) = BSTF(2,3)
      BSTFD(3,3) = BSTF(3,3)
C
      ASTFD(2,1) = ASTFD(1,2)
      ASTFD(3,1) = ASTFD(1,3)
      ASTFD(3,2) = ASTFD(2,3)

      BSTFD(2,1) = BSTFD(1,2)
      BSTFD(3,1) = BSTFD(1,3)
      BSTFD(3,2) = BSTFD(2,3)
C
C The cold-bending ring web buckling problem is an eigenvalue problem
C of the following form:
C
C              {[A] - lambda*[B]}q = 0.                    (9)
C
C in which [A] is the 3 x 3 stiffness matrix and [B] is the 3 x 3
C load-geometric matrix. A cubic equation in the eigenvalue, lambda,
C is obtained by setting the determinate of the matrix [A -lambda*B]
C equal to zero:
C
C CCUBIK*lambda**3 +CQUAD*lambda**2 +CLIN*lambda +CONST = 0  (12)
C
C Next, we set up the coefficients:
C
C CONST = constant term
C CLIN  = term linear in lambda
C CQUAD = term quadratic in lambda
C CCUBIK= term cubic in lambda
C
C of the cubic equation for lambda, the ring web buckling
C load factor (eigenvalue).
C
      CALL CUBICC(ASTFD(1,1),ASTFD(1,2),ASTFD(1,3),ASTFD(2,2),
     1            ASTFD(2,3),ASTFD(3,3),
     1            BSTFD(1,1),BSTFD(1,2),BSTFD(1,3),BSTFD(2,2),
     1            BSTFD(2,3),BSTFD(3,3),
     1            CONST,CLIN,CQUAD,CCUBIK)
C
C The cubic equation is solved for lambda in SUBROUTINE CUBIC.
C NOTE: SUBROUTINE CUBIC (in the util.src library) is also used
C for solving for web buckling in WEBBUK in the buckle.src
C library and for solving Arbocz' Eq.(361) in the bucpan1.src
C library. Here the output from SUBROUTINE CUBIC is the lowest
C positive eigenvalue, EIGVAL(NWAVE), in which NWAVE is the number
C of circumferential half-waves over the web length, FL .
C
      CALL CUBIC(CONST,CLIN,CQUAD,CCUBIK,EIGVAL(NWAVE),
     1           IMOD,ICUBIC,JCUBIC,1,1,0)
C
      IF (NPRT.GE.2) WRITE(IFILE,'(A,I3,1P,E12.4)')
     1 ' From "CUBIC": NWAVE, EIGVAL(NWAVE)=',NWAVE, EIGVAL(NWAVE)
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C
C  Here's what we tried before we decided to use SUBROUTINE CUBIC:
C
C  Next, solve for the three eigenvalues. Use SUBROUTINE GSEIG,
C  which is also used for extracting eigenvalues for the alternative
C  (double trig. series) buckling solution in PANDA2. This eigensystem
C  is much, much smaller than that for the alternative buckling
C  solution in PANDA2. Here we have only three roots (system
C  rank = 3, that is, MNTOT = 3).
C
C  Use generalized Jacobi iteration for current design computations...
C
C     MNTOT = 3
C     CALL GSEIG (MNTOT, ASTFD, BSTFD, EIGALT, EVECT, WORKSP, IPRINT)
C     IF (MNTOT.LT.0) THEN
C        WRITE(IFILE,'(A,/,A,I4,/,A)')
C    1 ' ***** WARNING ********** WARNING ********* WARNING *****',
C    1 ' SUB. GSEIG FAILED TO OBTAIN EIGENVALUE: MNTOT=',MNTOT,
C    1 ' ***** WARNING ********** WARNING ********* WARNING *****'
C
C     The lowest positive eigenvalue from SUBROUTINE GSEIG always
C     agreed with that from SUBROUTINE CUBIC, that is, when GSEIG
C     did not fail because of complex eigenvalues. The failure of
C     GSEIG caused run abortion during SUPEROPT runs, which is
C     annoying to the PANDA2 user. That is why we decide to use
C     SUBROUTINE CUBIC instead of SUBROUTINE GSEIG.
C
      BUCKLE = MIN(EIGVAL(NWAVE),BUCKLE)
C
      NWAVE1 = NWAVE-1
      IF (NWAVE.GT.1.AND.EIGVAL(NWAVE).GT.EIGVAL(NWAVE1)) GO TO 1050
C
 1000 CONTINUE
 1050 CONTINUE
C
      IF (IMOD.EQ.0) THEN
         DO 1100 NWAVE = NBEG,NEND
            DIFF = ABS(BUCKLE - EIGVAL(NWAVE))/ABS(BUCKLE)
            IF (DIFF.LT.0.0001) THEN
               NCRIT3 = NWAVE
               GO TO 1200
            ENDIF
 1100    CONTINUE
 1200    CONTINUE
      ENDIF
C
      WAVLEN = FL/FLOAT(NCRIT3)
      IF (NPRT.GE.0) WRITE(IFILE,'(/,A,1P,E12.4,A,1P,E12.4,A,I5)')
     1' BUCKLE=',BUCKLE, ' WAVLEN=',WAVLEN, ' NCRIT3=',NCRIT3
C23456789012345678901234567890123456789012345678901234567890123456789012
      IF (IMOD.EQ.0) NCRITC = CIRC/WAVLEN
      IF (NPRT.GE.2) WRITE(IFILE,'(A,1P,E12.4,/,A,I5)')
     1' circumferential length of web used for buckling analysis, FL=',
     1 FL,
     1' number of circumferential halfwaves over the length CIRC=',
     1 NCRITC
C
      IF (ISTIF(1).NE.0.AND.IMOD.EQ.0.AND.NPRT.GE.0) THEN
        WRITE(IFILE,'(/,A,1P,E12.4,/,A,1P,E12.4)')
     1' circumferential spacing of the stringers=                     ',
     1  BBB(1),
     1' circumferential half-wavelength of the critical buckling mode=',
     1  WAVLEN
      ENDIF
C
C Constraint condition...
      INUMTT = INUMTT + 1
      FSAFTY = 1.1 
      CALL CONVRF(FSAFTY,CCN2)
      CALL CONVRT(NCRITC,CCN)
      IF (IMOD.EQ.0.AND.(BUCKLE/FSAFTY).LT.MAXCON) THEN
         ICAR = ICAR + 1
         PCWORD(ICAR) =
     1  'Cold-bending ring buckling, closed form soln'
         CPLOT(ICAR) = BUCKLE/FSAFTY - 1.
         IADDCC(ICAR) = 0
         FSAFEP(ICAR) = FSAFTY
      ENDIF
      IF (IMOD.EQ.0.AND.(BUCKLE/FSAFTY).GT.CONMAX) GO TO 1300 
      IF (IMOD.EQ.1.AND.IPOINC(INUMTT).EQ.0) GO TO 1300
      ICONST = ICONST + 1
      IF (IMOD.EQ.0) IPOINC(INUMTT) = 1
      CONSTR(ICONST) = BUCKLE/FSAFTY
      WORDB(ICONST)=
     1'Cold-bending ring buckling, closed form soln; N='//CCN//
     1';FS='//CCN2
      IF (NPRT.GE.0) WRITE(IFILE,'(A,1P,E12.4,2X,A)')
     1 ' Margin=',CONSTR(ICONST)-1.,WORDB(ICONST)
C23456789012345678901234567890123456789012345678901234567890123456789012
      IF (NPRT.GE.2) WRITE(IFILE,'(A,/,A,/,A,I3,A,I2,A,I2)')
     1 ' *** THE FOLLOWING COLD-BENDING BUCKLING MARGIN JUST COMPUTED:',
     1   WORDB(ICONST),
     1 ' ******** CONSTRAINT NO.',ICONST,'; LOAD SET NO.',ILOADS,
     1 '; SUBCASE NO.',ICASE
 1300 CONTINUE
      IF (ITYPE.EQ.1.AND.NPRT.GE.2)
     1 WRITE(IFILE,*)' AFTER 4440 C: IMOD,INUMTT,ICONST=',
     1                               IMOD,INUMTT,ICONST
C
      IF (NPRT.GE.0) WRITE(IFILE,'(A,/,A,/,A,/,/)')
     1' End of computation of cold-bending ring buckling load factor',
     1' in SUBROUTINE COLDBD.',
     1' ***********************************************************'
C
C   Next, find out if the sub-ring buckles under cold bending
C
C   ISUB = 0 means either that there is no sub-ring or the
C            sub-ring is external and therefore experiences no
C            destabilizing hoop compression during cold bending.
C
      IF (ISUB.EQ.0) GO TO 3000
C
      NZ = NX
      DZ = (HSUB(2,1,1) +TSKIN/2.)/FLOAT(NZ-1)
      Z = -DZ
      DO 1400 IZ = 1,NZ
         Z = Z + DZ
         DO 1350 I = 1,NX
            IF (Z.LT.XCOORD(I)) THEN
               II = I
               II1 = I - 1
               GO TO 1351
            ENDIF
            IF (Z.GE.XCOORD(NX)) ETOTLZ(IZ) = ETOTAL(I)
 1350    CONTINUE
         GO TO 1400
 1351    CONTINUE
         EDIFF = ETOTAL(II) - ETOTAL(II1)
         XDIFF = DX
         ETOTLZ(IZ) = ETOTAL(II1) +EDIFF*(Z - XCOORD(II1))/XDIFF 
 1400 CONTINUE
C
C  First, find the instantaneous moduli for the web:
C
      SIG12 = 0.
      SIG1 =  0. 
C
      DO 1600 IZ = 1,NZ
         ZCOORD(IZ) = DZ*FLOAT(IZ - 1)
         DO 1550 I = 2,NSS
            IF (ABS(ETOTLZ(IZ)).LT.EIM(I)) THEN
               II = I
               II1 = II - 1
               GO TO 1551
            ENDIF
 1550    CONTINUE
 1551    CONTINUE
         SIDIFF = SIM(II) - SIM(II1)
         EIDIFF = EIM(II) - EIM(II1)
         SIG2 =SIM(II1) +SIDIFF*(ABS(ETOTLZ(IZ)) -EIM(II1))/EIDIFF
         ES = SIG2/ABS(ETOTLZ(IZ))
         ETT = SIDIFF/EIDIFF
         CALL SMOOTH(NSS,ABS(ETOTLZ(IZ)),II,EIM,SIM,EIM,ETT)
         ET = ETT
         FMULT = 1.0
         IF (ETOTLZ(IZ).LT.0.) FMULT = -1.0
         SIG2 = FMULT*SIG2
         SIGMA(IZ) = SIG2
         FHOOP(IZ) = SIG2*TSUB(2,1,1)
         SBAR = SQRT(SIG1*SIG1 + SIG2*SIG2 - SIG1*SIG2 + 3.*SIG12**2)
         gprime = 2.25*EELAST*(1./ET - 1./ES)/SBAR**2
         g = 1.5*(EELAST/ES - 1.0)
         s1 = (2.*SIG1 -SIG2)/3.
         s2 = (2.*SIG2 -SIG1)/3.
         aa = (1.+2.*g/3. +gprime*s2**2)/EELAST
         bb = (FNU +g/3. -gprime*s1*s2)/EELAST
         cc = (1.+2.*g/3. +gprime*s1**2)/EELAST
         del= aa*cc - bb**2
         E11(IZ) = aa/del
         E12(IZ) = bb/del
         E22(IZ) = cc/del
         G12(IZ) = GELAST*(1.+FNU)/(1.+FNU +g +2.*gprime*SIG12**2)
         FMPROD(IZ) = FHOOP(IZ)*(D-ZCOORD(IZ))
 1600 CONTINUE
C
      CALL SIMPSN(IFILE,NZ,DZ,FHOOP,FWEB)
      CALL SIMPSN(IFILE,NZ,DZ,FMPROD,FMWEB)
C
C23456789012345678901234567890123456789012345678901234567890123456789012
      IF (NPRT.GE.2) THEN
       WRITE(IFILE,'(/,A,1P,E12.4,/,A,1P,E12.4)')
     1' sub-ring spacing,       BSUB=                    ',BSUB(2,1,1),
     1' skin thickness,         TSKIN=                   ',TSKIN
       WRITE(IFILE,'(A,1P,E12.4,/,A,1P,E12.4)')
     1' sub-ring web height,    HSUB(2,1,1)=             ',HSUB(2,1,1),
     1' sub-ring web thickness, TSUB(2,1,1)=             ',TSUB(2,1,1)
       WRITE(IFILE,'(A,1P,E12.4,/,A,1P,E12.4)')
     1' cold-bending radius,    RCOLD=                   ',RCOLD,
     1' radius after springback,RADEND=                  ',RADEND
       WRITE(IFILE,'(A,1P,E12.4,/,A,1P,E12.4)')
     1' design radius of cylinder,RCYL=                  ',ABS(RCYL),
     1' At R =RCOLD: location d of the ring neutral axis=',D
       WRITE(IFILE,'(/,A,1P,E12.4)')
     1' sub-ring web hoop force,  FWEB=                  ',FWEB
C23456789012345678901234567890123456789012345678901234567890123456789012
C
C Print out stress and strain distribution over the ring module cross
C section and compute the bending moment that creates this distribution.
C
       WRITE(IFILE,'(/,A,I3,A,/(1P,5E12.4))')
     1' z-coords. for ',NZ,' radial locations along the subring web:',
     1 (ZCOORD(I), I=1,NZ)
       WRITE(IFILE,'(/,A,I3,A,/(1P,5E12.4))')
     1' hoop strain for ',NZ,' radial locations along the subring web:',
     1 (ETOTLZ(I), I=1,NZ)
       WRITE(IFILE,'(/,A,I3,A,/(1P,5E12.4))')
     1' hoop stress for ',NZ,' radial locations along the subring web:',
     1 (SIGMA(I), I=1,NZ)
       WRITE(IFILE,'(/,A,I3,A,A,/(1P,5E12.4))')
     1' hoop resultant for ',NZ,' radial locations along the subring',
     1' web:', (FHOOP(I), I=1,NZ)
      ENDIF
C
C STABILITY EQUATIONS FOR THE "CLOSED FORM" SOLUTION
C
      PI = 3.1415927
      FL = CIRC 
      DS = 1./FLOAT(NZ-1)
      H  = HSUB(2,1,1)
      TWEB = TSUB(2,1,1)
      FN1 = 0.
C
      NWVMAX = FL/H
      IF (NWVMAX.GT.10) THEN
         FL = 10.*CIRC/FLOAT(NWVMAX)
      ENDIF
      NWVMAX = FL/H
      IF (NWVMAX.GT.10) THEN
         FL = 10.*FL/FLOAT(NWVMAX)
      ENDIF
      NWVMAX = 2.*FL/H
C
      BUCKLE = 10.E+16
C
      IF (IMOD.EQ.0) THEN
         NBEG = 1
         NEND = NWVMAX
      ELSE
C
         NBEG = NCRIT4
         NEND = NCRIT4
      ENDIF
C
      DO 2000 NWAVE = NBEG,NEND 
C
       FN = NWAVE
       S = -DS
C
       DO 1800 IZ = 1,NZ 
C
C Some frequently used combinations:
C
         C44 = E11(IZ)*TWEB**3/12.
         C45 = E12(IZ)*TWEB**3/12.
         C55 = E22(IZ)*TWEB**3/12.
         C66 = G12(IZ)*TWEB**3/12.
         FN2 = FHOOP(IZ)
         S = S + DS
         C  = FN*PI/FL
         S1 =  H*6.*(S - 1.)      
         S3 =  C**2*H**3*S**2*(S - 3.)
         S36 = C*H**2*S*(3.*S - 6.)
         S21 = H*12.*H*(S**2 - 1.)
         S26 = C**2*H**3*S**2*H*(S**2 - 6.)
         S31 = H*20.*H**2*(S**3 - 1.)
         S310= C**2*H**3*S**2*H**2*(S**3 - 10.)
         S320= C*H**2*S*H**2*(5.*S**3 - 20.)
         S212= C*H**2*S*H*(4.*S**2 - 12.)
C
         A11(IZ) = S1*S1*C44 +S3*S1*C45 +S1*S3*C45 +S3*S3*C55
     1                                                +S36*S36*4.*C66
         A12(IZ) = S1*S21*C44 +S3*S21*C45 +S1*S26*C45 +S3*S26*C55
     1                                                +S36*S212*4.*C66
         A13(IZ) = S1*S31*C44 +S3*S31*C45 +S1*S310*C45 +S3*S310*C55
     1                                                +S36*S320*4.*C66
C
         A22(IZ) = S21*S21*C44 +S26*S21*C45 +S21*S26*C45 +S26*S26*C55
     1                                               +S212*S212*4.*C66
         A23(IZ) = S21*S31*C44 +S26*S31*C45 +S21*S310*C45 +S26*S310*C55
     1                                               +S212*S320*4.*C66
C
         A33(IZ) = S31*S31*C44 +S310*S31*C45 + S31*S310*C45 +S310*S310*C55
     1                                               +S320*S320*4.*C66
C
         B11(IZ) = S3*S3*FN2/C**2 + S36*S36*FN1/C**2
         B12(IZ) = S3*S26*FN2/C**2 +S36*S212*FN1/C**2
         B13(IZ) = S3*S310*FN2/C**2 +S36*S320*FN1/C**2
C
         B22(IZ) = S26*S26*FN2/C**2 +S212*S212*FN1/C**2
         B23(IZ) = S26*S310*FN2/C**2 +S212*S320*FN1/C**2
C
         B33(IZ) = S310*S310*FN2/C**2 +S320*S320*FN1/C**2
C
 1800 CONTINUE
C  end of the loop over IZ
C
C The Aij and Bij have yet to be integrated over the height of the web.
C
C   Next, integrate the Aij and Bij using Simpson's rule:
C
      CALL SIMPSN(IFILE,NZ,DS,A11,ASTF(1,1))
      CALL SIMPSN(IFILE,NZ,DS,A12,ASTF(1,2))
      CALL SIMPSN(IFILE,NZ,DS,A13,ASTF(1,3))
      CALL SIMPSN(IFILE,NZ,DS,A22,ASTF(2,2))
      CALL SIMPSN(IFILE,NZ,DS,A23,ASTF(2,3))
      CALL SIMPSN(IFILE,NZ,DS,A33,ASTF(3,3))
C
      CALL SIMPSN(IFILE,NZ,DS,B11,BSTF(1,1))
      CALL SIMPSN(IFILE,NZ,DS,B12,BSTF(1,2))
      CALL SIMPSN(IFILE,NZ,DS,B13,BSTF(1,3))
      CALL SIMPSN(IFILE,NZ,DS,B22,BSTF(2,2))
      CALL SIMPSN(IFILE,NZ,DS,B23,BSTF(2,3))
      CALL SIMPSN(IFILE,NZ,DS,B33,BSTF(3,3))
C
      ASTFD(1,1) = ASTF(1,1)
      ASTFD(1,2) = ASTF(1,2)
      ASTFD(1,3) = ASTF(1,3)
      ASTFD(2,2) = ASTF(2,2)
      ASTFD(2,3) = ASTF(2,3)
      ASTFD(3,3) = ASTF(3,3)
C
      BSTFD(1,1) = BSTF(1,1)
      BSTFD(1,2) = BSTF(1,2)
      BSTFD(1,3) = BSTF(1,3)
      BSTFD(2,2) = BSTF(2,2)
      BSTFD(2,3) = BSTF(2,3)
      BSTFD(3,3) = BSTF(3,3)
C
      ASTFD(2,1) = ASTFD(1,2)
      ASTFD(3,1) = ASTFD(1,3)
      ASTFD(3,2) = ASTFD(2,3)

      BSTFD(2,1) = BSTFD(1,2)
      BSTFD(3,1) = BSTFD(1,3)
      BSTFD(3,2) = BSTFD(2,3)
C
      CALL CUBICC(ASTFD(1,1),ASTFD(1,2),ASTFD(1,3),ASTFD(2,2),
     1            ASTFD(2,3),ASTFD(3,3),
     1            BSTFD(1,1),BSTFD(1,2),BSTFD(1,3),BSTFD(2,2),
     1            BSTFD(2,3),BSTFD(3,3),
     1            CONST,CLIN,CQUAD,CCUBIK)
C
      CALL CUBIC(CONST,CLIN,CQUAD,CCUBIK,EIGVAL(NWAVE),
     1           IMOD,ICUBIC,JCUBIC,1,1,0)
C
      IF (NPRT.GE.2) WRITE(IFILE,'(A,I3,1P,E12.4)')
     1 ' From "CUBIC": NWAVE, EIGVAL(NWAVE)=',NWAVE, EIGVAL(NWAVE)
C
      BUCKLE = MIN(EIGVAL(NWAVE),BUCKLE)
C
      NWAVE1 = NWAVE-1
      IF (NWAVE.GT.1.AND.EIGVAL(NWAVE).GT.EIGVAL(NWAVE1)) GO TO 2050
C
 2000 CONTINUE
 2050 CONTINUE
C
      IF (IMOD.EQ.0) THEN
         DO 2100 NWAVE = NBEG,NEND
            DIFF = ABS(BUCKLE - EIGVAL(NWAVE))/ABS(BUCKLE)
            IF (DIFF.LT.0.0001) THEN
               NCRIT4 = NWAVE
               GO TO 2200
            ENDIF
 2100    CONTINUE
 2200    CONTINUE
      ENDIF
C
      WAVLN2 = FL/FLOAT(NCRIT4)
      IF (NPRT.GE.0) WRITE(IFILE,'(/,A,1P,E12.4,A,1P,E12.4,A,I5)')
     1' BUCKLE=',BUCKLE, ' WAVLN2=',WAVLN2, ' NCRIT4=',NCRIT4
C23456789012345678901234567890123456789012345678901234567890123456789012
      IF (IMOD.EQ.0) NCRITD = CIRC/WAVLN2
      IF (NPRT.GE.2) WRITE(IFILE,'(A,1P,E12.4,/,A,I5)')
     1' circumferential length of web used for buckling analysis, FL=',
     1 FL,
     1' number of circumferential halfwaves over the length CIRC=',
     1 NCRITD
C
      IF (ISTIF(1).NE.0.AND.IMOD.EQ.0.AND.NPRT.GE.0) THEN
        WRITE(IFILE,'(/,A,1P,E12.4,/,A,1P,E12.4)')
     1' circumferential spacing of the stringers=                     ',
     1  BBB(1),
     1' circumferential half-wavelength of the critical buckling mode=',
     1  WAVLN2
      ENDIF
C
C Constraint condition...
      INUMTT = INUMTT + 1
      FSAFTY = 1.1 
      CALL CONVRF(FSAFTY,CCN2)
      CALL CONVRT(NCRITD,CCN)
      IF (IMOD.EQ.0.AND.(BUCKLE/FSAFTY).LT.MAXCON) THEN
         ICAR = ICAR + 1
         PCWORD(ICAR) =
     1  'Cold-bending subring buckling, closed form soln'
         CPLOT(ICAR) = BUCKLE/FSAFTY - 1.
         IADDCC(ICAR) = 0
         FSAFEP(ICAR) = FSAFTY
      ENDIF
      IF (IMOD.EQ.0.AND.(BUCKLE/FSAFTY).GT.CONMAX) GO TO 2300 
      IF (IMOD.EQ.1.AND.IPOINC(INUMTT).EQ.0) GO TO 2300
      ICONST = ICONST + 1
      IF (IMOD.EQ.0) IPOINC(INUMTT) = 1
      CONSTR(ICONST) = BUCKLE/FSAFTY
      WORDB(ICONST)=
     1'Cold-bending subring buckling, closed form soln; N='//CCN//
     1';FS='//CCN2
      IF (NPRT.GE.0) WRITE(IFILE,'(A,1P,E12.4,2X,A)')
     1 ' Margin=',CONSTR(ICONST)-1.,WORDB(ICONST)
C23456789012345678901234567890123456789012345678901234567890123456789012
      IF (NPRT.GE.2) WRITE(IFILE,'(A,/,A,/,A,I3,A,I2,A,I2)')
     1 ' *** THE FOLLOWING COLD-BENDING BUCKLING MARGIN JUST COMPUTED:',
     1   WORDB(ICONST),
     1 ' ******** CONSTRAINT NO.',ICONST,'; LOAD SET NO.',ILOADS,
     1 '; SUBCASE NO.',ICASE
 2300 CONTINUE
      IF (ITYPE.EQ.1.AND.NPRT.GE.2)
     1 WRITE(IFILE,*)' AFTER 4440 C: IMOD,INUMTT,ICONST=',
     1                               IMOD,INUMTT,ICONST
C
      IF (NPRT.GE.0) WRITE(IFILE,'(A,/,A,/,A,/,/)')
     1' End of computation of cold-bending subring bucklng load factor',
     1' in SUBROUTINE COLDBD.',
     1' ***********************************************************'
C
 3000 CONTINUE
C23456789012345678901234567890123456789012345678901234567890123456789012
C
      RETURN
      END
C
C
C
C=DECK      SMOOTH
      SUBROUTINE SMOOTH(NP,EBAR,JJ,ETOT,SIG,EPS,ET)   
C     
C     PURPOSE IS TO SMOOTH THE TANGENT MODULUS IN THE NEIGHBORHOOD OF A 
C     CORNER IN THE STRESS-STRAIN CURVE...
C     
      DIMENSION ETOT(20),SIG(20),EPS(20)  
C     
      JJ1 = JJ - 1
      IF (JJ1.LE.1) RETURN    
      IF (JJ.GE.(NP-1)) RETURN
      EJ = ETOT(JJ)     
      EJ1 = ETOT(JJ1)   
      DTOT = EJ - EJ1   
      ELOC = EBAR - EJ1 
      ETMID = ET  
      JJM = JJ1 - 1     
      ETM = (SIG(JJ1) -SIG(JJM))/(EPS(JJ1) -EPS(JJM)) 
C     
      JJP = JJ + 1
      ETP = (SIG(JJP) -SIG(JJ))/(EPS(JJP) -EPS(JJ))   
C     
      EMINUS = (ETM + ETMID)/2.     
      IF (JJ.EQ.3) EMINUS = ETM     
      EPLUS = (ETP + ETMID)/2.
      IF (JJ.EQ.(NP-2)) EPLUS = ETP 
C     
      A1 = 1. -ELOC/DTOT
      A2 = ELOC/DTOT    
      ET = A1*EMINUS + A2*EPLUS     
C     
 1000 CONTINUE
C
      RETURN
      END   
C
C
C
C=DECK      CUBICC
      SUBROUTINE CUBICC(a11,a12,a13,a22,a23,a33,
     1                  b11,b12,b13,b22,b23,b33,
     1                  CONST,CLIN,CQUAD,CCUBIK)
C
C  Purpose is to get the coefficients,
C  CONST,CLIN,CQUAD,CCUBIK
C  of the cubic equation for the eigenvalues
C  of the cold-bending ring buckling problem.
C  The cubic equation is:
C   determinant = 0
C
C  Input:
C   a11,a12,a13,a22,a23,a33 = strain energy coefficients
C   b11,b12,b13,b22,b23,b33 = "work done" coefficients
C
C  Output:
C   CONST,CLIN,CQUAD,CCUBIK = coefficients of cubic equation
C
      DOUBLE PRECISION a11,a12,a13,a22,a23,a33
      DOUBLE PRECISION b11,b12,b13,b22,b23,b33
      DOUBLE PRECISION CONST,CLIN,CQUAD,CCUBIK
C   
      CONST = a33*(a11*a22 -a12**2) +a23*(a12*a13 -a11*a23)
     1                              +a13*(a12*a23 -a13*a22)
C
      CLIN  = a33*(b11*a22 +b22*a11 -2.*a12*b12)
     1       +b33*(a11*a22 -a12**2)
     1       +a23*(b12*a13 +b13*a12 -b11*a23 -b23*a11)
     1       +b23*(a12*a13 -a11*a23)
     1       +a13*(b12*a23 +b23*a12 -a13*b22 -a22*b13)
     1       +b13*(a12*a23 -a13*a22)
C
      CQUAD = a33*(b11*b22 -b12**2)
     1       +b33*(a11*b22 +a22*b11 -2.*a12*b12)
     1       +a23*(b12*b13 -b11*b23)
     1       +b23*(b12*a13 +a12*b13 -b11*a23 -a11*b23)
     1       +a13*(b12*b23 -b13*b22)
     1       +b13*(b12*a23 +a12*b23 -b13*a22 -a13*b22)
C
      CCUBIK= b33*(b11*b22 -b12**2) +b23*(b12*b13 -b11*b23)
     1                              +b13*(b12*b23 -b13*b22)
C
      RETURN
      END
