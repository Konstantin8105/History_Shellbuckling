C=DECK      STRTHK
      SUBROUTINE STRTHK(IFILE,NPB,MPB,AL,FSQ,EX0,EY0,EXY0,
     1                EMAX,EMARG,EALLOW,IEND,MAXSEG,FMAX,ICONST,CONSTR,
     1                WORDB,IADDB,IMOD,IWHERE,JJJ,FSSTR,
     1                IPOINC,INUMTT,CRACK,ICHANG,EALLST,ITYPE,
     1                IICHAN,PWDD,ITUTOR,IFILE4,IPROMP,IOUT,
     1                W0,ICASE,TEMP,FMULT,EPSLOD,ETHERM,IMTEMP,
     1                IPOPX,IABT,IHOOP)
C
C  PURPOSE IS TO COMPUTE STRAINS THRU THE THICKNESS. STRAINS ARE NEEDED
C  AT ALL MATERIAL INTERFACES.
C
C BEG JUN 2004
      CHARACTER*11 WRDSUB
      DIMENSION SUBMAX(20,2),SUBCON(20,2),TXDUM(6),ETHDUM(6)
      COMMON/SUBSTX/TSUB(2,4,2),HSUB(2,4,2),THSUB(2,4,2),
     1              BSUB(2,4,2)
      COMMON/ISBSTF/KLAYER(4,2),NSURF(2,4,2),NB2(2,4,2),
     1              ISOSUB(2,4,2),ISOTYP(2,4,2),MATSUB(2,4,2)
      COMMON/SUBSPC/SPCNG(2,4,2),CX0(6,6,5),CY0(6,6,5),
     1    THRMX0(6,5),THRMY0(6,5),TCURX0(6,5),TCURY0(6,5),
     1    TX0(5),TY0(5),GTX0(2,5),GTY0(2,5),TXX(2,5),TYY(2,5),
     1    GTSSUB(2,5)
C END JUN 2004
      COMMON/MODAL1/W(23,8),WD(23,8),WDD(23,8),U(23,8),V(23,8),
     1             VD(23,8)
      COMMON/PBMODE/WVAR(23,8),WDVAR(23,8),WDDVAR(23,8)
      DIMENSION EX0(23,8),EY0(23,8),EXY0(23,8),PWDD(23,8)
      DIMENSION EMAX(5,10),EMARG(6,10),EALLOW(5,10),CS(2,99)
      DIMENSION EPOP(10),EPOPC(10),SPOP(4),EPO1C(10)
      DIMENSION EALLST(5,10),IPOINC(*),ISGPOP(8)
      DIMENSION CONSTR(*),WORDB(*),IADDB(*),CRACK(99,5,2)
      COMMON/THICK/TX(5),TY(5)
      COMMON/GEOM2/B(2),B2(2),H(2),WW(2),W2(2)
      COMMON/GEOM3/ISTIF(2),NLAYER(4,2),NSEG(2),INTEXT(2)
C BEG JULY 1996
      COMMON/GEOM0/B0(2),B20(2),H0(2),WW0(2),W20(2)
C END JULY 1996
C BEG APR 1996
      COMMON/GEOM6/IFAY(2),ITRTOT,IRESET,NLOADS,NSTEPS,WMAXXX,NCROSS,
     1       NOPLOT,KMAX,ILAYPL,XMAX,XMIN,YMAX,YMIN,N3DPLT,NOBJ,NSTRNS,
     1       NPLTST,NABSCI,IDIAG,ITRALL,IFAYT(2),IBEAM,IMISCL(5)
      COMMON/ALLCIJ/CX(6,6,5),CY(6,6,5),CSX(6,6)
C END APR 1996
C BEG JUN 1996 (SANDWICH)
      COMMON/XSANDW/ISANDW(4,2),ICORE(4,2)
C        "F1" signifies "face sheet 1" (top or leftmost face sheet)
C        "F2" signifies "face sheet 2" (bottom or rightmost face sheet)
C  membrane loads in the face sheets...
      COMMON/USANDW/FNXF1(4,2),FNXF2(4,2),FNYF1(4,2),FNYF2(4,2),
     1              FNXYF1(4,2),FNXYF2(4,2)
      DIMENSION FNXLAY(90,2),FNYLAY(90,2),FNXYLA(90,2)
      DIMENSION FNXTOT(2),FNYTOT(2),FNXYTT(2)
C BEG OCT 1996
      COMMON/UNBALX/UNBAL(4,2),DBEND1(4,2),DBEND2(4,2)
C   core crushing pressure from curvatures: CRUSH(j,k)
C           j = module Iseg number (1 or 2 or 3 or 4)
C           k = 1 means skin-stringer module; 2 means ring module
      COMMON/PCRUSH/CRUSH(4,2)
      COMMON/MATER8/BNDOVR(5,10)
      COMMON/MATER9/ICAND(20)
      COMMON/NSANDW/PNXF1(11,8,2),PNYF1(11,8,2),PNXYF1(11,8,2),
     1              PNXF2(11,8,2),PNYF2(11,8,2),PNXYF2(11,8,2)
      DIMENSION SIGXX(23,2,2),SIGYY(23,2,2),SIGXY(23,2,2)
      DIMENSION SIGCON(5,20),SIGMIN(5,20)
C END OCT 1996
C END JUN 1996
C BEG MAY 1997
      COMMON/IZSTIX/IZSTIF(2)
C END MAY 1997
      COMMON/LAYER/MATL(90),LTYPE(99,5,2),T(90),ANGLE(90)
      COMMON/MATER1/EE1(20),EE2(20),G(20),FNU(20),DENS(20)
      COMMON/MATERT/ALPHA1(20),ALPHA2(20),CURETP(20),ICOCUR(2)
      COMMON/MATER4/TAPE(20),TMINUM(20),FAILSC(100)
      COMMON/MATER5/DEGRAD(10,5,10)
      COMMON/MATER6/SIGLUE(20)
      COMMON/MATER7/ISOMAT(20),ISOEFF(20)
C BEG MAR 1995
      COMMON/TMATL2/PARMAT(20,10),TEMPJ(10,20,10),FTEMPJ(10,20,10)
      DIMENSION FACTOR(20,10)
C END MAR 1995
      COMMON/SEGS/NSEGB5,M2,I5(95),I2,I2G
      COMMON/OUTP/NPRT
      COMMON/LOADS/FNX,FNY,FNXY,RESULT(3,5,2)
      COMMON/FMAXPP/MAXCON
      COMMON/WORDS5/PCWORD(99)
      COMMON/PLOTCD/ICAR,IADDCC(99),CPLOT(99)
      COMMON/FSAFEB/FSAFEP(99)
      COMMON/ATRNGS/ATRING
      LOGICAL ATRING
      CHARACTER*80 PCWORD
      DIMENSION POSI(6,10),POSIP(6,10),TEMP(4,2),FMULT(20,10,4,2)
      DIMENSION POSTST(6,10),EREDUC(5,10),EPSLOD(6),ETHERM(6)
      CHARACTER*51 POSI,POSTST
      CHARACTER*38 POSIP
      REAL MAXCON
      CHARACTER*51 POS
      CHARACTER*38 POSP
      CHARACTER*9 CNP
      CHARACTER*80 WORD(6,10)
      CHARACTER*4 WROTIP
      CHARACTER*15 MODE(7)
      CHARACTER*80 WORDB
      CHARACTER*2 CJ
      CHARACTER*7 CN2
      CHARACTER*4 CNN
      DATA DTR /.017453293/
      COMMON/SEGSLP/MSLOPE(8)
      REAL MSLOPE
      COMMON/PPEXY/PEX(23,8,2),PEY(23,8,2),PEXY(23,8,2)
      COMMON/PPE45/PEX45(23,8,2),PEY45(23,8,2),PEXY45(23,8,2)
      REAL NPB,MPB,MPBS
      LOGICAL ILOG1,ILOG2,ILOG3
C
      WROTIP ='    '
      IF (ITYPE.EQ.3) CALL MOVER(0.,0,PEX,1,1104)
      CALL MOVER(0.,0,EMAX,1,50)
      CALL MOVER(0.,0,EPOP,1,10)
      CALL MOVER(0.,0,EPOPC,1,10)
      CALL MOVER(0.,0,EPO1C,1,10)
C BEG OCT 1996
      CALL MOVER(0.,0,CRUSH,1,8)
      CALL MOVER(10.E+16,0,SIGMIN,1,100)
C END OCT 1996
C BEG JUN 2004
      CALL MOVER(0.,0,SUBMAX,1,40)
      CALL MOVER(10.E+16,0,SUBCON,1,40)
C END JUN 2004
      ISGPOP(1) = 0
      ISGPOP(2) = 0
      ISPOP     = 0
      IF (IMOD.EQ.0) IPOPX     = 0
      MMAX = 0
      CNN = 'MID.'
      IF (ICASE.EQ.2) CNN = 'ENDS'
      IF (ICASE.EQ.2.AND.ATRING) CNN = 'RNGS'
      CNP = 'MIDLENGTH'
      IF (ICASE.EQ.2) CNP = 'PANEL END'
      IF (ICASE.EQ.2.AND.ATRING) CNP = 'AT RINGS '
      IF (ITYPE.EQ.2.AND.IICHAN.EQ.0.AND.NPRT.GE.1) THEN
         MODE(1) = ' 0 deg. tension'
         MODE(2) = ' 0 deg. comp.  '
         MODE(3) = '90 deg. tension'
         MODE(4) = '90 deg. comp.  '
         MODE(5) = ' in-plane shear'
         MODE(6) = '  no failure   '
         MODE(7) = 'von-mises yield'
         CALL PICTS(IFILE,ISTIF(1),INTEXT(1),B2(1),W2(1),1,IFAY(1))
         WRITE(IFILE,24)
   24    FORMAT(/' Start calculation of stresses in the panel module dep
     1icted above...'/
C BEG JUN 1996
     1' (Segment numbering below refers to the **BOTTOMMOST** of the ske
     1tches above.)')
C END JUN 1996
C        IF (ITUTOR.EQ.1) THEN
C           REWIND IFILE4
C           CALL DATUM(IFILE4,115,0,0,INT,REALL,CHARAC,IOUT,0,IPROMP)
C        ENDIF
         WRITE(IFILE,26)
   26    FORMAT(/' STRESSES AT CRITICAL NODES IN SEGMENTS OF MODULE...'/
     1' BUCK.  LOCATION  IN  PANEL   WINDING   IN-PLANE STRESSES IN MATL
     1 COORDS.  MODE OF   TRANSVERSE CRACKING  ALLOWABLE  MATERIAL'/
     1' MODE  SEG. NODE LAYER    Z    ANGLE     SIG1        SIG2        
     1SIG12     FAILURE  (1.0 means inactive)   STRESS      TYPE')
C BEG NOV 2009
         IF (ISOMAT(1).EQ.1.AND.ISOEFF(1).EQ.1) WRITE(IFILE,2690)
 2690    FORMAT(/
     1' -----------------------------  OR ----------------------------'/
     1'    '/
     1' STRESSES AT CRITICAL NODES IN SEGMENTS OF MODULE...'/
     1' BUCK.  LOCATION  IN  PANEL   WINDING   IN-PLANE STRESSES IN MATL
     1 COORDS.  MODE OF       VON MISES        ALLOWABLE  MATERIAL'/
     1' MODE  SEG. NODE LAYER    Z    ANGLE     SIG1        SIG2
     1SIG12     FAILURE    EFFECTIVE STRESS     STRESS      TYPE')
C END NOV 2009
      ENDIF
C
      IF (MAXSEG.GT.1) ISGPOP(1) = MAXSEG + 1
      IF (ISTIF(1).EQ.4) ISGPOP(2) = MAXSEG + 3
      IFLANG = 4
      IF (ISTIF(1).EQ.0) IFLANG = 1
      IF (ISTIF(1).EQ.3) IFLANG = 3
      IF (MAXSEG.EQ.3) IFLANG = 5
      FIABT = 1 - IABT
      IWEB = 3
      IF (ISTIF(1).EQ.5) THEN
         MAXSEG = 1
         ISGPOP(1) = 2
         ISGPOP(2) = 4
         IWEB = 2
         IFLANG = 3
      ENDIF
      IWEBM = IWEB - 1
      IWEBP = IWEB + 1
C
C BEG JUN 2004
      MATLXM = 0.
C END JUN 2004
      DO 300 ISEG = 1,NSEGB5
C
      ILOG1 = ISTIF(1).EQ.1.OR.ISTIF(1).EQ.2
      ILOG2 = ISTIF(1).GE.4.AND.ISEG.EQ.(MAXSEG+3)
C BEG JULY 1996
C BEG JUN 2004
      CALL IDSEG(ISTIF(1),ISEG,NSEGB5,B20(1),W20(1),J,IFAY)
C END JUN 2004
C END JULY 1996
      MPBS = MPB*MSLOPE(ISEG)
      ALS  = AL
      WXXPGL = EPSLOD(4) + FIABT*ETHERM(4)
      WYYPGL = EPSLOD(5) + FIABT*ETHERM(5)
C BEG JUN 1996
C23456789012345678901234567890123456789012345678901234567890123456789012
C     WRITE(8,*)' EPSLOD(4),EPSLOD(5),FIABT=',EPSLOD(4),EPSLOD(5),FIABT
C     WRITE(8,*)' ETHERM(4),ETHERM(5)=',ETHERM(4),ETHERM(5)
C     WRITE(8,*)' WXXPGL,WYYPGL=',WXXPGL,WYYPGL
C END JUN 1996
C BEG MAY 1997
      IF (IZSTIF(1).EQ.1.AND.J.EQ.2) THEN
         MPBS = 0.
         ALS  = 0.
      ENDIF
C END MAY 1997
      IF (ISTIF(1).NE.5) ILOG3 = J.GT.2
      IF (ISTIF(1).EQ.5) ILOG3 = J.EQ.2
      IF (ILOG3) THEN
         IF (ISTIF(1).NE.5) THEN
            MPBS = 0.
            ALS  = 0.
         ENDIF
         IF (J.NE.4) WXXPGL = 0.
         WYYPGL = 0.
      ENDIF
C
      IGO = 1
      IF (ISTIF(1).EQ.5) IGO = 0
      IF (ISEG.EQ.2.AND.MAXSEG.EQ.3) IGO = 0
      IF (ISEG.GT.IFLANG) IGO = 0
      IMAX = I5(ISEG)
      IF (ISTIF(1).NE.5.AND.ISEG.EQ.MAXSEG.AND.ISTIF(1).GT.0)
     1 IMAX = I5(ISEG)/2 + 1
C BEG MAY 1997
      IF (IZSTIF(1).EQ.1.AND.ISEG.EQ.MAXSEG) IMAX = I5(ISEG)
C END MAY 1997
      ITEST = IMAX
      IF (ISPOP.NE.0.AND.ISEG.EQ.ISGPOP(ISPOP)) THEN
         ITEST = 1
         IF (ISGPOP(ISPOP).GT.4) THEN
            ITEST = I5(ISEG)
         ENDIF
      ENDIF
      I5I = I5(ISEG)
      ISTEP = I5(ISEG)/2
      IF (ISEG.EQ.1) ISTEP = 2
C BEG NOV 2009
      IF (ISTIF(1).EQ.1.OR.ISTIF(1).EQ.2.OR.ISTIF(1).EQ.3) THEN
        ISEGM = J
        NLAY = NLAYER(ISEGM,1)
C       IF (NLAY.EQ.1.AND.IZSTIF(1).EQ.0.AND.ISEG.EQ.2) ISTEP=1
      ENDIF
C END NOV 2009
C
C BEG APR 1996
      ITWICE = 0
      IF (ISTIF(1).EQ.5.AND.IFAYT(1).EQ.1
     1                 .AND.(ISEG.EQ.5.OR.ISEG.EQ.6)) ITWICE = 1
      ITWICP = ITWICE + 1
C END APR 1996
      DO 200 I = 1,I5I,ISTEP
      POPSP = 0.
      POPSM = 0.
      POPCP = 0.
      POPCM = 0.
      IPOP = 0
      IF (J.EQ.IWEB) THEN
C BEG MAR 1995
         DTEMP = TEMP(IWEBM,1) - TEMP(IWEBP,1)
         FDEN = I5I - 1
         FNUM = I - 1
         IF (ISEG.LE.IWEBP) TLOCAL = TEMP(IWEBM,1) - DTEMP*FNUM/FDEN
         IF (ISEG.GT.IWEBP) TLOCAL = TEMP(IWEBP,1) + DTEMP*FNUM/FDEN
C END MAR 1995
         IF (I.EQ.1.AND.ISEG.NE.(MAXSEG+3)) THEN
            IPOP = I
            ISPOP = ISPOP + 1
            IMESSG = 1
            GO TO 30
         ENDIF
         IF (I.EQ.I5(ISEG).AND.(ILOG1.OR.ILOG2)) THEN
            IPOP = I
            ISPOP = ISPOP + 1
            IMESSG = 2
            IF (ILOG2) IMESSG = 1
         ENDIF
   30    CONTINUE
      ENDIF
C
      ISEGM = J
      NLAY = NLAYER(ISEGM,1)
C BEG JUN 1996
C BEG JUN 2004
      Z = -TX0(ISEGM)/2. - UNBAL(ISEGM,1)
C END JUN 2004
C END JUN 1996
C BEG APR 1996
C BEG JUN 2004
      IF (ITWICP.EQ.2) Z = -0.5*(TX0(ISEGM) + TX0(2))
C END JUN 2004
C END APR 1996
      E1 = EX0(I,ISEG)
      E2 = EY0(I,ISEG)
      E12=EXY0(I,ISEG)
      WPB=WVAR(I,ISEG)
      W0PB = W0*W(I,ISEG)
      WDPB=WDVAR(I,ISEG)
      W0DPB = W0*WD(I,ISEG)
      WDDPB=WDDVAR(I,ISEG)
      W0DDPB= W0*WDD(I,ISEG)
      PWDDI=PWDD(I,ISEG)
C     WRITE(8,*)' I,ISEG,J,Z,E1,E2,E12,WPB,W0PB,WDPB,W0DPB,WDDPB,W0DDPB,
C    1            PWDDI=',
C    1            I,ISEG,J,Z,E1,E2,E12,WPB,W0PB,WDPB,W0DPB,WDDPB,W0DDPB,
C    1            PWDDI
      IF (ISTIF(1).LT.4.AND.ISTIF(1).NE.0) THEN
C BEG MAY 1997
         IF (IZSTIF(1).EQ.0.AND.ISEG.EQ.2.AND.I.EQ.(I5(ISEG)/2+1)) THEN
C END MAY 1997
C           Purpose here is to account for abrupt change in curvature in
C           the y-direction due to the stringer web intersecting the
C           stringer base, generating a line moment there.
            WDD4 = WDDVAR(I-1,ISEG)
            WDD4M= WDDVAR(I-2,ISEG)
            DWDD = WDD4 - WDD4M
            WDD4 = WDD4 + DWDD
            WDDADD = SIGN(WDD4,PWDDI)
            WDDPB = WDDPB + WDDADD
C BEG NOV 2009
C           WDD4M2 = WDDVAR(I-3,ISEG)
C           DWDD2 = WDD4M - WDD4M2
C           DDWDD = DWDD - DWDD2
C           WDDPB = WDDPB + DDWDD
C23456789012345678901234567890123456789012345678901234567890123456789012
            IF (ITYPE.EQ.2.AND.IICHAN.EQ.0.AND.NPRT.GE.2)
     1       WRITE(IFILE,
     1      '(A,/,A,/,A,I2,A,I2,/,A,I2,A,1P,E12.4,/,A,A,/,A,1P,3E12.4)')
     1       ' Change local hoop curvature in panel skin at web root',
     1       ' in order to avoid unconservative hoop bending strain:',
     1       ' discretized module segment',ISEG,', nodal point',I,
     1       ' curvature change now used at nodal point',I,
     1       ': WDDPB =',WDDPB,
     1       ' post-local-buckling curvatures at the previous',
     1       ' three nodal points:',
     1       ' WDDVAR(I-1,2),WDDVAR(I-2,2),WDDVAR(I-3,2) =',
     1         WDDVAR(I-1,2),WDDVAR(I-2,2),WDDVAR(I-3,2)
C END NOV 2009
         ENDIF
      ENDIF
C
C     WRITE(8,*)' MAXSTR REGION IN STRTHK...'
C     WRITE(8,*)' STRTHK BEFORE LAYER LOOP..ISEG,J,I,E1,E2,E12=',
C    1                                      ISEG,J,I,E1,E2,E12
C
C BEG MAR 1995
      TTOT = 0.
C END MAR 1995
C BEG APR 1996
C BEG OCT 1996
      ILLX = 0
      IF (ISANDW(J,1).GT.1.AND.ISANDW(J,1).LT.NLAY) ILLX = 1
      DO 105 LLX = 1,ITWICP
      IF (LLX.EQ.2) ILLX = 0
C END OCT 1996
      IF (LLX.EQ.2) NLAY = NLAYER(2,1)
C BEG JUN 1996
      IF (ISANDW(J,1).GT.1.AND.ISANDW(J,1).LT.NLAY) THEN
         CALL MOVER(0.,0,FNXLAY,1,180)
         CALL MOVER(0.,0,FNYLAY,1,180)
         CALL MOVER(0.,0,FNXYLA,1,180)
      ENDIF
C END JUN 1996
      DO 100 L = 1,NLAY
      CALL MOVER(0.,0,SPOP,1,4)
      K = LTYPE(L,ISEGM,1)
      IF (LLX.EQ.1) LTOT = L
      IF (LLX.EQ.2) THEN
         LTOT = L + NLAYER(ISEGM,1)
         K = LTYPE(L,2,1)
         E12 = 0.
         E2 = -E1*CX(1,2,2)/CX(1,1,2)
      ENDIF
C END APR 1996
      M = MATL(K)
      ICRACK = 0
      IF (TAPE(M).GT.0.0) ICRACK = 1
C BEG MAR 1995
      IF (IMTEMP.NE.0.AND.ISTIF(1).NE.5.AND.ISEGM.LE.IWEBM
     1               .AND.TEMP(2,1).NE.TEMP(1,1).AND.T(K).NE.0.) THEN
         ZDEEP = TTOT
         ACOEF = (TEMP(1,1) - TEMP(2,1))/TX(ISEGM)
         BCOEF = TEMP(2,1)
         TLOCAL = ACOEF*ZDEEP + BCOEF
         DO 23 INPROP = 1,15
            CALL PROPNO(ISOMAT(M),ISOEFF(M),INPROP,IPROP)
            CALL INTERP(IFILE,10,TEMPJ(1,IPROP,M),FTEMPJ(1,IPROP,M),
     1                  TLOCAL,FACTOR(INPROP,M))
C           WRITE(8,*)' M,IPROP,TEMPJ(1,IPROP,M),TEMPJ(2,IPROP,M)=',
C    1                  M,IPROP,TEMPJ(1,IPROP,M),TEMPJ(2,IPROP,M)
C           WRITE(8,*)' M,IPROP,FTEMPJ(1,IPROP,M),FTEMPJ(2,IPROP,M)=',
C    1                  M,IPROP,FTEMPJ(1,IPROP,M),FTEMPJ(2,IPROP,M)
C           WRITE(8,*)' INODE,INPROP,IPROP,M,TLOCAL,FACTOR(INPROP,M)=',
C    1                  INODE,INPROP,IPROP,M,TLOCAL,FACTOR(INPROP,M)
   23    CONTINUE
      ELSE
         IF (ISEGM.NE.IWEB) TLOCAL = TEMP(ISEGM,1)
         CALL MOVER(FMULT(1,M,ISEGM,1),1,FACTOR(1,M),1,20)
      ENDIF
C
      IF (IMTEMP.NE.0.AND.ISEGM.EQ.IWEB
     1       .AND.TEMP(IWEBM,1).NE.TEMP(IWEBP,1).AND.T(K).NE.0.) THEN
         DO 21 INPROP = 1,15
            CALL PROPNO(ISOMAT(M),ISOEFF(M),INPROP,IPROP)
            CALL INTERP(IFILE,10,TEMPJ(1,IPROP,M),FTEMPJ(1,IPROP,M),
     1                  TLOCAL,FACTOR(INPROP,M))
C           WRITE(8,*)' M,IPROP,TEMPJ(1,IPROP,M),TEMPJ(2,IPROP,M)=',
C    1                  M,IPROP,TEMPJ(1,IPROP,M),TEMPJ(2,IPROP,M)
C           WRITE(8,*)' M,IPROP,FTEMPJ(1,IPROP,M),FTEMPJ(2,IPROP,M)=',
C    1                  M,IPROP,FTEMPJ(1,IPROP,M),FTEMPJ(2,IPROP,M)
C           WRITE(8,*)' INODE,INPROP,IPROP,M,TLOCAL,FACTOR(INPROP,M)=',
C    1                  INODE,INPROP,IPROP,M,TLOCAL,FACTOR(INPROP,M)
   21    CONTINUE
      ENDIF
C END MAR 1995
C BEG MAR 1995
      E1MOD = EE1(M)*FACTOR(1,M)
      E2MOD = EE2(M)*FACTOR(2,M)
      GMOD  =   G(M)*FACTOR(3,M)
      FUMOD = FNU(M)*FACTOR(4,M)
      A1T = ALPHA1(M)*FACTOR(7,M)*(-CURETP(M)+TLOCAL)
      A2T = ALPHA2(M)*FACTOR(8,M)*(-CURETP(M)+TLOCAL)
      EREDUC(1,M) = EALLOW(1,M)*FACTOR( 9,M)
      EREDUC(2,M) = EALLOW(2,M)*FACTOR(10,M)
      EREDUC(3,M) = EALLOW(3,M)*FACTOR(11,M)
      EREDUC(4,M) = EALLOW(4,M)*FACTOR(12,M)
      EREDUC(5,M) = EALLOW(5,M)*FACTOR(13,M)
      SIGLU1      = SIGLUE(1)*FACTOR(15,M)
C END MAR 1995
      MMAX = MAX(M,MMAX)
      CALL NEWMAX(M,K,T,TAPE,DEGRAD,EREDUC,EALLST(1,M))
C     WRITE(8,*)' ISEG,J,I,L,K,M,E1MOD,E2MOD,GMOD,FUMOD,A1T,A2T=',
C    1            ISEG,J,I,L,K,M,E1MOD,E2MOD,GMOD,FUMOD,A1T,A2T
      IF (I.EQ.1) THEN
         ARG = ANGLE(K)*DTR
         CS(1,L) = COS(ARG)
         CS(2,L) = SIN(ARG)
      ENDIF
      IF (L.GT.1) THEN
C BEG OCT 1996
         ILLX = 0
C END OCT 1996
         L1 = L - 1
         K1 = LTYPE(L1,ISEGM,1)
C BEG APR 1996
         IF (LLX.EQ.1) LTOT1 = L1
         IF (LLX.EQ.2) THEN
            LTOT1 = L1 + NLAYER(ISEGM,1)
            K1 = LTYPE(L1,2,1)
            E12 = 0.
            E2 = -E1*CX(1,2,2)/CX(1,1,2)
         ENDIF
C END APR 1996
         M1 = MATL(K1)
         ICRAC1 = 0
         IF (TAPE(M1).GT.0.0) ICRAC1 = 1
C BEG MAR 1995
         IF (IMTEMP.NE.0.AND.ISTIF(1).NE.5.AND.ISEGM.LE.IWEBM
     1         .AND.TEMP(2,1).NE.TEMP(1,1).AND.T(K1).NE.0.) THEN
C BEG JUN 1996
C           ZDEEP = TTOT + T(K1)
            ZDEEP = TTOT
C END JUN 1996
            ACOEF = (TEMP(1,1) - TEMP(2,1))/TX(ISEGM)
            BCOEF = TEMP(2,1)
            TLOCAL = ACOEF*ZDEEP + BCOEF
            DO 25 INPROP = 1,15
               CALL PROPNO(ISOMAT(M1),ISOEFF(M1),INPROP,IPROP)
               CALL INTERP(IFILE,10,TEMPJ(1,IPROP,M1),
     1                     FTEMPJ(1,IPROP,M1),TLOCAL,FACTOR(INPROP,M1))
C         WRITE(8,*)' M1,IPROP,TEMPJ(1,IPROP,M1),TEMPJ(2,IPROP,M1)=',
C    1                M1,IPROP,TEMPJ(1,IPROP,M1),TEMPJ(2,IPROP,M1)
C         WRITE(8,*)' M1,IPROP,FTEMPJ(1,IPROP,M1),FTEMPJ(2,IPROP,M1)=',
C    1                M1,IPROP,FTEMPJ(1,IPROP,M1),FTEMPJ(2,IPROP,M1)
C         WRITE(8,*)' INODE,INPROP,IPROP,M1,TLOCAL,FACTOR(INPROP,M1)=',
C    1                INODE,INPROP,IPROP,M1,TLOCAL,FACTOR(INPROP,M1)
   25    CONTINUE
         ELSE
            IF (ISEGM.NE.IWEB) TLOCAL = TEMP(ISEGM,1)
            CALL MOVER(FMULT(1,M1,ISEGM,1),1,FACTOR(1,M1),1,20)
         ENDIF
C
         IF (IMTEMP.NE.0.AND.ISEGM.EQ.IWEB
     1       .AND.TEMP(IWEBM,1).NE.TEMP(IWEBP,1).AND.T(K1).NE.0.) THEN
            DO 28 INPROP = 1,15
               CALL PROPNO(ISOMAT(M1),ISOEFF(M1),INPROP,IPROP)
               CALL INTERP(IFILE,10,TEMPJ(1,IPROP,M1),
     1                     FTEMPJ(1,IPROP,M1),TLOCAL,FACTOR(INPROP,M1))
C           WRITE(8,*)' M1,IPROP,TEMPJ(1,IPROP,M1),TEMPJ(2,IPROP,M1)=',
C    1                  M1,IPROP,TEMPJ(1,IPROP,M1),TEMPJ(2,IPROP,M1)
C23456789012345678901234567890123456789012345678901234567890123456789012
C          WRITE(8,*)' M1,IPROP,FTEMPJ(1,IPROP,M1),FTEMPJ(2,IPROP,M1)=',
C    1                  M1,IPROP,FTEMPJ(1,IPROP,M1),FTEMPJ(2,IPROP,M1)
C          WRITE(8,*)' INODE,INPROP,IPROP,M1,TLOCAL,FACTOR(INPROP,M1)=',
C    1                  INODE,INPROP,IPROP,M1,TLOCAL,FACTOR(INPROP,M1)
   28       CONTINUE
         ENDIF
C END MAR 1995
C BEG MAR 1995
         E1MOD1 = EE1(M1)*FACTOR(1,M1)
         E2MOD1 = EE2(M1)*FACTOR(2,M1)
         GMOD1  =   G(M1)*FACTOR(3,M1)
         FUMOD1 = FNU(M1)*FACTOR(4,M1)
         A1T1= ALPHA1(M1)*FACTOR(7,M1)*(-CURETP(M1)+TLOCAL)
         A2T1= ALPHA2(M1)*FACTOR(8,M1)*(-CURETP(M1)+TLOCAL)
         EREDUC(1,M1) = EALLOW(1,M1)*FACTOR( 9,M1)
         EREDUC(2,M1) = EALLOW(2,M1)*FACTOR(10,M1)
         EREDUC(3,M1) = EALLOW(3,M1)*FACTOR(11,M1)
         EREDUC(4,M1) = EALLOW(4,M1)*FACTOR(12,M1)
         EREDUC(5,M1) = EALLOW(5,M1)*FACTOR(13,M1)
         SIGLU1       = SIGLUE(1)*FACTOR(15,M1)
C END MAR 1995
         CALL NEWMAX(M1,K1,T,TAPE,DEGRAD,EREDUC,EALLST(1,M1))
      ENDIF
C
      CALL GETEPS(I,ISEG,Z,EX,EY,EXY,E1,E2,E12,WPB,WDPB,WDDPB,PWDDI,
     1       NPB,MPBS,ALS,FSQ,1.,J,WXXPGL,WYYPGL,W0PB,W0DPB,W0DDPB,
C BEG DEC 1995
C BEG OCT 1996
     1       IHOOP,L,ILLX,CRUSH(J,1))
C END OCT 1996
C END DEC 1995
C BEG APR 1996
      IF (ITYPE.EQ.3.AND.L.EQ.1.AND.LLX.EQ.1) THEN
C END APR 1996
         PEX(I,ISEG,1) = EX
         PEY(I,ISEG,1) = EY
         PEXY(I,ISEG,1)= EXY
         CALL ROTATE(.707,.707,EX,EY,EXY,
     1   PEX45(I,ISEG,1),PEY45(I,ISEG,1),PEXY45(I,ISEG,1))
      ENDIF
C
C     WRITE(8,*)' AFT FIRST GETEPS..ISEG,J,I,L,Z,E1,E2,E12,EX,EY,EXY=',
C    1                              ISEG,J,I,L,Z,E1,E2,E12,EX,EY,EXY
C
C     IF (I.EQ.6.AND.(ISEG.EQ.3.OR.ISEG.EQ.1)) WRITE(8,*)
C    1 ' EX,EY,EXY,Z,WXXPGL,WYYPGL=',EX,EY,EXY,Z,WXXPGL,WYYPGL
C
      IF (L.GT.1) THEN
      IF (T(K1).NE.0.) THEN
C BEG APR 1996
      CALL MAXSTR(IFILE,NPRT,EX,EY,EXY,ISEG,LTOT1,I,Z,CS(1,L1),
     1 EMAX(1,M1),A1T1,A2T1,EALLST(1,M1),E1MOD1,E2MOD1,GMOD1,FUMOD1,
C END APR 1996
     1CRACK(L1,J,1),ICRAC1,ICHANG,IMOD,1,ITEST,IPOP,SPOP(3),SIGLU1,
     1       IGO,MODE,ITYPE,M1,IICHAN,FSSTR,'POS',ANGLE(K1),E1,E2,E12,
C BEG JUN 1996
     1       POSI(1,M1),POSIP(1,M1),POSTST(1,M1),WROTIP,ISTIF(1),
C BEG OCT 1996
     1       J,T(K1),NLAY,FNXLAY(L1,1),FNYLAY(L1,1),FNXYLA(L1,1),
     1       SIGXX(I,1,1),SIGYY(I,1,1),SIGXY(I,1,1),ICAND(M1))
C END OCT 1996
C END JUN 1996
      ENDIF
      ENDIF
      IF (T(K).NE.0.) THEN
        CRTMP1 = CRACK(L,J,1)
C BEG APR 1996
        CALL MAXSTR(IFILE,NPRT,EX,EY,EXY,ISEG,LTOT,I,Z,CS(1,L),
     1  EMAX(1,M),A1T,A2T,EALLST(1,M),E1MOD,E2MOD,GMOD,FUMOD,
C END APR 1996
     1       CRTMP1,ICRACK,ICHANG,IMOD,1,ITEST,IPOP,SPOP(1),SIGLU1,
     1       IGO,MODE,ITYPE,M,IICHAN,FSSTR,'POS',ANGLE(K),E1,E2,E12,
C BEG JUN 1996
     1       POSI(1,M),POSIP(1,M),POSTST(1,M),WROTIP,ISTIF(1),
C BEG OCT 1996
     1       J,T(K),NLAY,FNXLAY(L,1),FNYLAY(L,1),FNXYLA(L,1),
     1       SIGXX(I,1,1),SIGYY(I,1,1),SIGXY(I,1,1),ICAND(M))
C END OCT 1996
C END JUN 1996
C      WRITE(8,*)' ISEG,J,L,I,Z,CRTMP1=',ISEG,J,L,I,Z,CRTMP1
C      IF (ISEG.EQ.1.AND.(L.EQ.7.OR.L.EQ.12))
C    1         WRITE(8,*)'  PLUS..I,L,J,M,CRACK(L,J,1),EMAX(2,M)=',
C    1                     I,L,J,M,CRACK(L,J,1),EMAX(2,M)
      ENDIF
      CRTMP2 = CRTMP1
C BEG JUN 2004
      IF (ABS(FSQ).GT.0.001*TX0(1)) THEN
C END JUN 2004
        CALL GETEPS(I,ISEG,Z,EX,EY,EXY,E1,E2,E12,WPB,WDPB,WDDPB,PWDDI,
     1        NPB,MPBS,ALS,FSQ,-1.,J,WXXPGL,WYYPGL,W0PB,W0DPB,W0DDPB,
C BEG DEC 1995
C BEG OCT 1996
     1       IHOOP,L,ILLX,CRUSH(J,1))
C END OCT 1996
C END DEC 1995
C BEG APR 1996
        IF (ITYPE.EQ.3.AND.L.EQ.1.AND.ABS(MPBS).LT.0.2
     1                                       .AND.LLX.EQ.1) THEN
C END APR 1996
C       IF (ITYPE.EQ.3.AND.L.EQ.1
C    1                .AND.ABS(EXY).GT.ABS(PEXY(I,ISEG,1))) THEN
           PEXY(I,ISEG,1)= EXY
        ENDIF
C     WRITE(8,*)' AFTER SECOND GETEPS..I,L,Z,EX,EY,EXY=',I,L,Z,EX,EY
C
         IF (L.GT.1) THEN
         IF (T(K1).NE.0.) THEN
C BEG APR 1996
      CALL MAXSTR(IFILE,NPRT,EX,EY,EXY,ISEG,LTOT1,I,Z,CS(1,L1),
     1 EMAX(1,M1),A1T1,A2T1,EALLST(1,M1),E1MOD1,E2MOD1,GMOD1,FUMOD1,
C END APR 1996
     1CRACK(L1,J,1),ICRAC1,ICHANG,IMOD,1,ITEST,IPOP,SPOP(4),SIGLU1,
     1       IGO,MODE,ITYPE,M1,IICHAN,FSSTR,'NEG',ANGLE(K1),E1,E2,E12,
C BEG JUN 1996
     1       POSI(1,M1),POSIP(1,M1),POSTST(1,M1),WROTIP,ISTIF(1),
C BEG OCT 1996
     1       J,T(K1),NLAY,FNXLAY(L1,2),FNYLAY(L1,2),FNXYLA(L1,2),
     1       SIGXX(I,2,1),SIGYY(I,2,1),SIGXY(I,2,1),ICAND(M1))
C END OCT 1996
C END JUN 1996
         ENDIF
         ENDIF
          IF (T(K).NE.0.) THEN
            CRTMP2 = CRACK(L,J,1)
C BEG APR 1996
          CALL MAXSTR(IFILE,NPRT,EX,EY,EXY,ISEG,LTOT,I,Z,CS(1,L),
     1    EMAX(1,M),A1T,A2T,EALLST(1,M),E1MOD,E2MOD,GMOD,FUMOD,
C END APR 1996
     1         CRTMP2,ICRACK,ICHANG,IMOD,1,ITEST,IPOP,SPOP(2),SIGLU1,
     1       IGO,MODE,ITYPE,M,IICHAN,FSSTR,'NEG',ANGLE(K),E1,E2,E12,
C BEG JUN 1996
     1       POSI(1,M),POSIP(1,M),POSTST(1,M),WROTIP,ISTIF(1),
C BEG OCT 1996
     1       J,T(K),NLAY,FNXLAY(L,2),FNYLAY(L,2),FNXYLA(L,2),
     1       SIGXX(I,2,1),SIGYY(I,2,1),SIGXY(I,2,1),ICAND(M))
C END OCT 1996
C END JUN 1996
C      WRITE(8,*)' ISEG,J,L,I,Z,CRTMP2=',ISEG,J,L,I,Z,CRTMP2
C      IF (ISEG.EQ.1.AND.(L.EQ.7.OR.L.EQ.12))
C    1         WRITE(8,*)' MINUS..I,L,J,M,CRACK(L,J,1),EMAX(2,M)=',
C    1                     I,L,J,M,CRACK(L,J,1),EMAX(2,M)
          ENDIF
      ENDIF
      IF (I.EQ.ITEST.AND.IMOD.EQ.0.AND.IGO.EQ.1) THEN
        CRKOLD = CRACK(L,J,1)
        ACRTM1 = ABS(CRTMP1)
        ACRTM2 = ABS(CRTMP2)
        CRTMP  = MIN(ACRTM1,ACRTM2)
        DIF1   = ABS(CRTMP - ACRTM1)/CRTMP
        IF (DIF1.LT.0.0001) THEN
            CRTMP = CRTMP1
            IF (CRTMP.LT.0.0.AND.CRTMP2.GT.0.0.AND.CRTMP2.LT.0.9)
     1         CRTMP = CRTMP2
        ELSE
            CRTMP = CRTMP2
            IF (CRTMP.LT.0.0.AND.CRTMP1.GT.0.0.AND.CRTMP1.LT.0.9)
     1         CRTMP = CRTMP1
        ENDIF
C       WRITE(8,10) ISEG,J,I,L,Z,ICRACK,ICRAC1,CRKOLD,CRTMP1,CRTMP2,
C    1              CRTMP
   10   FORMAT(4I3,1PE10.2,2I2,1P,4E12.4)
        CRACK(L,J,1) =CRTMP
C BEG JAN 1994
C  DISABLE THIS "CRACK" STUFF. IT CAUSES TROUBLE.
        CRACK(L,J,1) = 1.0
        CRKOLD = 1.0
C END JAN 1994
        DIF = ABS(CRKOLD - CRACK(L,J,1))/ABS(CRACK(L,J,1))
        IF (DIF.GT.0.05) ICHANG = 1
      ENDIF
C      WRITE(8,*)' ISEG,L,I,Z,CRKOLD,CRACK(L,J,1)=',ISEG,L,I,Z,CRKOLD,
C    1 CRACK(L,J,1)
C     WRITE(8,*) ' ICHANG =', ICHANG
C
C  POPOFF CONSTRAINT IS RELATED TO THE STRESS INCREMENT DUE TO
C  POSTBUCKLING DEFORMATIONS IN THE WEB OF THE STRINGER. THIS STRESS
C  INCREMENT IS CALCULATED FROM THE DIFFERENCES IN THE STRESS FOR
C  MEMBRANE AND TOTAL VALUES OF THE POSTBUCKLING STRESSES.. THE
C  STRESSES WITH SINE AND COSINE MODE ARE STORED IN SPOP(1) AND SPOP(2)
C  FOR LAYER L, AND SPOP(3) AND SPOP(4) FOR LAYER L1.
C  THE POSITIVE SPOP'S(1) AND (2) ARE MULTIPLIED BY T(K) AND ADDED UP
C  TO YIELD A TENSILE FORCE THAT TENDS TO POP THE STIFFENER OFF. THE
C  ABSOLUTE VALUES OF THE NEGATIVE SPOP'S(1) AND (2) ARE MULT. BY T(K)
C  AND ADDED UP TO YIELD A FORCE THAT IS TENSILE IF THE SIGN OF THE
C  LOCAL MODAL DEFLECTIONS IS THE OPPOSITE OF THAT FOR WHICH THE
C  POSITIVE SPOP'S WERE CALCULATED. SPOP(3) AND SPOP(4) ARE DISREGARDED
C  IN THESE COMPUTATIONS. INCLUDING THEM WOULD AMOUNT TO DOUBLE
C  COUNTING.  THE MAXIMUM TOTAL FORCE IS STORED IN FPOP. THIS IS
C  DIVIDED BY SIGLUE TO YIELD THE INVERSE OF THE POPOFF CONSTRAINT.
C
      IF (I.EQ.IPOP) THEN  
C        EPOP(M) = MAX(0.5*ABS(SPOP(1) - SPOP(2)), EPOP(M))
C        EPOP(M) = MAX(ABS(SPOP(1)), EPOP(M))
C        EPOP(M) = MAX(ABS(SPOP(2)), EPOP(M))
C
         IF (SPOP(1).GT.0.) POPSP = POPSP + SPOP(1)*T(K)
         IF (SPOP(1).LE.0.) POPSM = POPSM + ABS(SPOP(1))*T(K)
         IF (SPOP(2).GT.0.) POPCP = POPCP + SPOP(2)*T(K)
         IF (SPOP(2).LE.0.) POPCM = POPCM + ABS(SPOP(2))*T(K)
C
C        IF (L.GT.1) THEN
C         EPOP(M1)= MAX(0.5*ABS(SPOP(3) - SPOP(4)),EPOP(M1))
C         EPOP(M1)= MAX(ABS(SPOP(3)), EPOP(M1))
C         EPOP(M1)= MAX(ABS(SPOP(4)), EPOP(M1))
C        ENDIF
C   C    WRITE(8,*)' I,ISEG,L,M,M1=',I,ISEG,L,M,M1
C        WRITE(8,*)' SPOP(1),SPOP(2)=',SPOP(1),SPOP(2)
C        WRITE(8,*)' POPSP,POPSM=',POPSP,POPSM
C        WRITE(8,*)' POPCP,POPCM=',POPCP,POPCM
C        WRITE(8,*)' SPOP(3),SPOP(4)=',SPOP(3),SPOP(4)
C        WRITE(8,*)' EPOP(M),EPOP(M1)=',EPOP(M),EPOP(M1)
      ENDIF
C
      Z = Z + T(K)
C BEG MAR 1995
      TTOT = TTOT + T(K)
C END MAR 1995
C
  100 CONTINUE
C
C BEG MAR 1995
      IF (ISEGM.NE.IWEB) TLOCAL = TEMP(ISEGM,1)
      IF (IMTEMP.NE.0.AND.ISTIF(1).NE.5.AND.ISEGM.LE.IWEBM
     1               .AND.TEMP(2,1).NE.TEMP(1,1).AND.T(K).NE.0.) THEN
         ZDEEP = TTOT
         ACOEF = (TEMP(1,1) - TEMP(2,1))/TX(ISEGM)
         BCOEF = TEMP(2,1)
         TLOCAL = ACOEF*ZDEEP + BCOEF
         DO 27 INPROP = 1,15
            CALL PROPNO(ISOMAT(M),ISOEFF(M),INPROP,IPROP)
            CALL INTERP(IFILE,10,TEMPJ(1,IPROP,M),FTEMPJ(1,IPROP,M),
     1                  TLOCAL,FACTOR(INPROP,M))
C           WRITE(8,*)' M,IPROP,TEMPJ(1,IPROP,M),TEMPJ(2,IPROP,M)=',
C    1                  M,IPROP,TEMPJ(1,IPROP,M),TEMPJ(2,IPROP,M)
C           WRITE(8,*)' M,IPROP,FTEMPJ(1,IPROP,M),FTEMPJ(2,IPROP,M)=',
C    1                  M,IPROP,FTEMPJ(1,IPROP,M),FTEMPJ(2,IPROP,M)
C           WRITE(8,*)' INODE,INPROP,IPROP,M,TLOCAL,FACTOR(INPROP,M)=',
C    1                  INODE,INPROP,IPROP,M,TLOCAL,FACTOR(INPROP,M)
   27    CONTINUE
C
         IF (IMTEMP.NE.0.AND.ISEGM.EQ.IWEB
     1       .AND.TEMP(IWEBM,1).NE.TEMP(IWEBP,1).AND.T(K).NE.0.) THEN
            DO 29 INPROP = 1,15
               CALL PROPNO(ISOMAT(M),ISOEFF(M),INPROP,IPROP)
               CALL INTERP(IFILE,10,TEMPJ(1,IPROP,M),
     1                     FTEMPJ(1,IPROP,M),TLOCAL,FACTOR(INPROP,M))
C           WRITE(8,*)' M,IPROP,TEMPJ(1,IPROP,M),TEMPJ(2,IPROP,M)=',
C    1                  M,IPROP,TEMPJ(1,IPROP,M),TEMPJ(2,IPROP,M)
C           WRITE(8,*)' M,IPROP,FTEMPJ(1,IPROP,M),FTEMPJ(2,IPROP,M)=',
C    1                  M,IPROP,FTEMPJ(1,IPROP,M),FTEMPJ(2,IPROP,M)
C           WRITE(8,*)' INODE,INPROP,IPROP,M,TLOCAL,FACTOR(INPROP,M)=',
C    1                  INODE,INPROP,IPROP,M,TLOCAL,FACTOR(INPROP,M)
   29       CONTINUE
         ENDIF
         E1MOD = EE1(M)*FACTOR(1,M)
         E2MOD = EE2(M)*FACTOR(2,M)
         GMOD  =   G(M)*FACTOR(3,M)
         FUMOD = FNU(M)*FACTOR(4,M)
         A1T = ALPHA1(M)*FACTOR(7,M)*(-CURETP(M)+TLOCAL)
         A2T = ALPHA2(M)*FACTOR(8,M)*(-CURETP(M)+TLOCAL)
         EREDUC(1,M) = EALLOW(1,M)*FACTOR( 9,M)
         EREDUC(2,M) = EALLOW(2,M)*FACTOR(10,M)
         EREDUC(3,M) = EALLOW(3,M)*FACTOR(11,M)
         EREDUC(4,M) = EALLOW(4,M)*FACTOR(12,M)
         EREDUC(5,M) = EALLOW(5,M)*FACTOR(13,M)
         SIGLU1      = SIGLUE(1)*FACTOR(15,M)
      ENDIF
C END MAR 1995
C BEG APR 1996
      IF (LLX.EQ.1) LTOT2 = NLAY
      IF (LLX.EQ.2) THEN
         LTOT2 = NLAY + NLAYER(ISEGM,1)
         E12 = 0.
         E2 = -E1*CX(1,2,2)/CX(1,1,2)
      ENDIF
C BEG APR 1996
      CALL GETEPS(I,ISEG,Z,EX,EY,EXY,E1,E2,E12,WPB,WDPB,WDDPB,PWDDI,
     1        NPB,MPBS,ALS,FSQ,1.,J,WXXPGL,WYYPGL,W0PB,W0DPB,W0DDPB,
C BEG DEC 1995
C BEG OCT 1996
     1       IHOOP,NLAY,ILLX,CRUSH(J,1))
C END OCT 1996
C END DEC 1995
C BEG APR 1996
      IF (ITYPE.EQ.3.AND.LLX.EQ.1) THEN
C END APR 1996
         PEX(I,ISEG,2) = EX
         PEY(I,ISEG,2) = EY
         PEXY(I,ISEG,2)= EXY
         CALL ROTATE(.707,.707,EX,EY,EXY,
     1    PEX45(I,ISEG,2),PEY45(I,ISEG,2),PEXY45(I,ISEG,2))
      ENDIF
      IF (T(K).EQ.0.) GO TO 150
C     IF (ICRACK.EQ.1) GO TO 150
C
C     WRITE(8,*)' AFTER THIRD GETEPS..ISEG,J,I,L,Z,E1,E2,EX,EY=',
C    1                                ISEG,J,I,L,Z,E1,E2,EX,EY
C
C BEG APR 1996
      CALL MAXSTR(IFILE,NPRT,EX,EY,EXY,ISEG,LTOT2,I,Z,CS(1,NLAY),
C END APR 1996
     1   EMAX(1,M),A1T,A2T,EALLST(1,M),E1MOD,E2MOD,GMOD,FUMOD,
     1   CRACK(NLAY,J,1),ICRACK,ICHANG,IMOD,1,ITEST,IPOP,SPOP(1),
     1   SIGLU1,IGO,MODE,ITYPE,M,IICHAN,FSSTR,'POS',ANGLE(K),
C BEG JUN 1996
     1   E1,E2,E12,POSI(1,M),POSIP(1,M),POSTST(1,M),WROTIP,ISTIF(1),
C BEG OCT 1996
     1   J,T(K),NLAY,FNXLAY(NLAY,1),FNYLAY(NLAY,1),FNXYLA(NLAY,1),
     1   SIGXX(I,1,2),SIGYY(I,1,2),SIGXY(I,1,2),ICAND(M))
C END OCT 1996
C END JUN 1996
C     WRITE(8,*)' ISEG,NLAY,I,Z=',ISEG,NLAY,I,Z
C
C BEG JUN 2004
      IF (ABS(FSQ).GT.0.001*TX0(1)) THEN
C END JUN 2004
C
      CALL GETEPS(I,ISEG,Z,EX,EY,EXY,E1,E2,E12,WPB,WDPB,WDDPB,PWDDI,
     1       NPB,MPBS,ALS,FSQ,-1.,J,WXXPGL,WYYPGL,W0PB,W0DPB,W0DDPB,
C BEG DEC 1995
C BEG OCT 1996
     1       IHOOP,NLAY,ILLX,CRUSH(J,1))
C END OCT 1996
C END DEC 1995
C BEG APR 1996
        IF (ITYPE.EQ.3.AND.ABS(MPBS).LT.0.2.AND.LLX.EQ.1) THEN
C END APR 1996
C       IF (ITYPE.EQ.3.AND.ABS(EXY).GT.ABS(PEXY(I,ISEG,2))) THEN
           PEXY(I,ISEG,2)= EXY
        ENDIF
C     WRITE(8,*)' AFTER FOURTH GETEPS..ISEG,J,I,NLAY,Z,E1,E2,EX,EY=',
C    1                                 ISEG,J,I,NLAY,Z,E1,E2,EX,EY
C
C BEG APR 1996
        CALL MAXSTR(IFILE,NPRT,EX,EY,EXY,ISEG,LTOT2,I,Z,CS(1,NLAY),
C END APR 1996
     1   EMAX(1,M),A1T,A2T,EALLST(1,M),E1MOD,E2MOD,GMOD,FUMOD,
     1   CRACK(NLAY,J,1),ICRACK,ICHANG,IMOD,1,ITEST,IPOP,SPOP(2),
     1   SIGLU1,IGO,MODE,ITYPE,M,IICHAN,FSSTR,'NEG',ANGLE(K),
C BEG JUN 1996
     1   E1,E2,E12,POSI(1,M),POSIP(1,M),POSTST(1,M),WROTIP,ISTIF(1),
C BEG OCT 1996
     1   J,T(K),NLAY,FNXLAY(NLAY,2),FNYLAY(NLAY,2),FNXYLA(NLAY,2),
     1   SIGXX(I,2,2),SIGYY(I,2,2),SIGXY(I,2,2),ICAND(M))
C END OCT 1996
C END JUN 1996
C     WRITE(8,*)' ISEGG,NLAY,I,Z=',ISEG,NLAY,I,Z
      ENDIF
C
C BEG JUN 1996
      IF (ISANDW(J,1).GT.1.AND.ISANDW(J,1).LT.NLAY
     1                    .AND.(ISTIF(1).NE.5.OR.ISEG.LT.5)) THEN
         JUPPER = 1
C BEG JUN 2004
         IF (ABS(FSQ).GT.0.001*TX0(1)) JUPPER = 2
C END JUN 2004
C   resultants in face sheet no. 1...
         DO 102 JJ = 1,JUPPER
           FNXTOT(JJ) = 0.
           FNYTOT(JJ) = 0.
           FNXYTT(JJ) = 0.
           LMAX = ISANDW(J,1) - 1
C          WRITE(8,*)' J,ISANDW(J,1),LMAX,JJ=',J,ISANDW(J,1),LMAX,JJ
C23456789012345678901234567890123456789012345678901234567890123456789012
           DO 101 L = 1,LMAX
            FNXTOT(JJ) = FNXTOT(JJ) + FNXLAY(L,JJ)
            FNYTOT(JJ) = FNYTOT(JJ) + FNYLAY(L,JJ)
            FNXYTT(JJ) = FNXYTT(JJ) + FNXYLA(L,JJ)
C           WRITE(8,*)' L,FNXLAY,FNYLAY,FNXYLA=',
C    1                  L,FNXLAY(L,JJ),FNYLAY(L,JJ),FNXYLA(L,JJ)
C           WRITE(8,*)' FNXTOT,FNYTOT,FNXYTT=',
C    1                  FNXTOT(JJ),FNYTOT(JJ),FNXYTT(JJ)
  101      CONTINUE
C BEG OCT 1996
           PNXF1(I,ISEG,JJ)  = FNXTOT(JJ)
           PNYF1(I,ISEG,JJ)  = FNYTOT(JJ)
           PNXYF1(I,ISEG,JJ) = FNXYTT(JJ)
C END OCT 1996
C          WRITE(8,*)' JJ,FNXTOT,FNYTOT,FNXYTT=',
C    1                 JJ,FNXTOT(JJ),FNYTOT(JJ),FNXYTT(JJ)
           FNXF1(J,1) = MIN(FNXF1(J,1),FNXTOT(JJ))
           FNYF1(J,1) = MIN(FNYF1(J,1),FNYTOT(JJ))
           FNXYF1(J,1)= MAX(ABS(FNXYF1(J,1)),ABS(FNXYTT(JJ)))
C          WRITE(8,*)' FNXF1,FNYF1,FNXYF1=',
C    1                 FNXF1(J,1),FNYF1(J,1),FNXYF1(J,1)
  102    CONTINUE
C        WRITE(8,*)' J,FNXF1,FNYF1,FNXYF1=',
C    1               J,FNXF1(J,1),FNYF1(J,1),FNXYF1(J,1)
C
C   resultants in face sheet no. 2...
         DO 104 JJ = 1,JUPPER
           FNXTOT(JJ) = 0.
           FNYTOT(JJ) = 0.
           FNXYTT(JJ) = 0.
           LSTART = ISANDW(J,1) + 1
C          WRITE(8,*)' NLAY=',NLAY
C          WRITE(8,*)' J,ISANDW(J,1),LSTART,JJ=',J,ISANDW(J,1),LSTART,JJ
C23456789012345678901234567890123456789012345678901234567890123456789012
           DO 103 L = LSTART,NLAY
            FNXTOT(JJ) = FNXTOT(JJ) + FNXLAY(L,JJ)
            FNYTOT(JJ) = FNYTOT(JJ) + FNYLAY(L,JJ)
            FNXYTT(JJ) = FNXYTT(JJ) + FNXYLA(L,JJ)
C           WRITE(8,*)' L,FNXLAY,FNYLAY,FNXYLA=',
C    1                  L,FNXLAY(L,JJ),FNYLAY(L,JJ),FNXYLA(L,JJ)
C           WRITE(8,*)' FNXTOT,FNYTOT,FNXYTT=',
C    1                  FNXTOT(JJ),FNYTOT(JJ),FNXYTT(JJ)
  103      CONTINUE
C BEG OCT 1996
           PNXF2(I,ISEG,JJ)  = FNXTOT(JJ)
           PNYF2(I,ISEG,JJ)  = FNYTOT(JJ)
           PNXYF2(I,ISEG,JJ) = FNXYTT(JJ)
C END OCT 1996
C          WRITE(8,*)' JJ,FNXTOT,FNYTOT,FNXYTT=',
C    1                 JJ,FNXTOT(JJ),FNYTOT(JJ),FNXYTT(JJ)
           FNXF2(J,1) = MIN(FNXF2(J,1),FNXTOT(JJ))
           FNYF2(J,1) = MIN(FNYF2(J,1),FNYTOT(JJ))
           FNXYF2(J,1)= MAX(ABS(FNXYF2(J,1)),ABS(FNXYTT(JJ)))
C          WRITE(8,*)' FNXF2,FNYF2,FNXYF2=',
C    1                 FNXF2(J,1),FNYF2(J,1),FNXYF2(J,1)
  104    CONTINUE
C        WRITE(8,*)' J,FNXF2,FNYF2,FNXYF2=',
C    1               J,FNXF2(J,1),FNYF2(J,1),FNXYF2(J,1)
      ENDIF
C END JUN 1996
      IF (I.EQ.IPOP) THEN
C        EPOP(M) = MAX(0.5*ABS(SPOP(1) - SPOP(2)), EPOP(M))
C        EPOP(M) = MAX(ABS(SPOP(1)), EPOP(M))
C        EPOP(M) = MAX(ABS(SPOP(2)), EPOP(M))
         IF (SPOP(1).GT.0.) POPSP = POPSP + SPOP(1)*T(K)
         IF (SPOP(1).LE.0.) POPSM = POPSM + ABS(SPOP(1))*T(K)
         IF (SPOP(2).GT.0.) POPCP = POPCP + SPOP(2)*T(K)
         IF (SPOP(2).LE.0.) POPCM = POPCM + ABS(SPOP(2))*T(K)
C
C        WRITE(8,*)' I,ISEG,L,M,M1=',I,ISEG,L,M,M1
C        WRITE(8,*)' SPOP(1),SPOP(2)=',SPOP(1),SPOP(2)
C        WRITE(8,*)' POPSP,POPSM=',POPSP,POPSM
C        WRITE(8,*)' POPCP,POPCM=',POPCP,POPCM
C        WRITE(8,*)' SPOP(3),SPOP(4)=',SPOP(3),SPOP(4)
C        WRITE(8,*)' EPOP(M),EPOP(M1)=',EPOP(M),EPOP(M1)
      ENDIF
C
C BEG APR 1996
  105 CONTINUE
C END APR 1996
  150 CONTINUE
      IF (I.EQ.IPOP) THEN
C BEG NOV 1995
         FACPOP = 0.3
         FPOPC = FACPOP*MAX(POPCP,POPCM)
         FPOPS = FACPOP*MAX(POPSP,POPSM)
         FPOP  = FACPOP*MAX(FPOPC,FPOPS)
C END NOV 1995
         IF (IMOD.EQ.0) THEN
            POPMAR = 1000.
            IF (FPOP.GT.0.) THEN
               SIGLU1 = SIGLUE(1)*FMULT(15,1,ISEG,1)
               POPMAR = SIGLU1/FPOP - 1.
               IF (POPMAR.LT.0.2) IPOPX = 1
            ENDIF
            IF (JJJ.EQ.0.AND.NPRT.GE.1) THEN
               IF (IMESSG.EQ.1) WRITE(IFILE,158)
               IF (IMESSG.EQ.2) WRITE(IFILE,159)
  158       FORMAT(/ ' Maximum in-plane tensile force in stringer web'/
     1     ' tending to peel the faying flange from the panel skin:')
  159       FORMAT(/ ' Maximum in-plane tensile force in stringer web'/
     1     ' tending to peel it from the outstanding stringer flange:')
            WRITE(IFILE,160) ISEG,I,FPOPC,FPOPS,FPOP,SIGLU1,POPMAR
  160       FORMAT(' ********* STRINGER POPOFF MARGIN **********'/
     1           '  Segment number in the discretized model  =', I3/
     1           '  Nodal point number in the discrete model =', I3/
     1           '  Peel force that varies axially as cos(nx)=',1PE12.4/
     1           '  Peel force that varies axially as sin(nx)=',1PE12.4/
     1           '  Peel force used in popoff constraint,FPOP=',1PE12.4/
     1           ' Maximum allowable peel force, FPOPMAX     =',1PE12.4/
     1           ' Stringer popoff margin=FPOPMAX/FPOP - 1.0 =',1PE12.4/
     1          ' ******* END OF STRINGER POPOFF CALCULATIONS *******'/)
            ENDIF
         ENDIF
         EPOP(ISPOP) = FPOP/SIGLU1
      ENDIF
C BEG JUN 2004
C Next, check for stresses at tip and root of substiffeners..
      IF (KLAYER(ISEG,1).NE.0) THEN
         MATLXM = 0
         DO 36 ISUBST = 1,2
C BEG FEB 2009
C           MATLX = MATSUB(ISUBST,I,1)
            MATLX = MATSUB(ISUBST,J,1)
C END FEB 2009
            MATLXM = MAX(MATLX,MATLXM)
	    IF (MATLX.EQ.0) GO TO 36
            FSIGN = 1.0
C BEG FEB 2009
C           IF (NSURF(ISUBST,I,ILOOP).EQ.0) FSIGN = -1.0
C           Z1 = FSIGN*(TX0(1)/2. + HSUB(ISUBST,I,ILOOP))
C           Z2 = FSIGN*TX0(1)/2.
C           ANGLEX = ABS(THSUB(ISUBST,I,ILOOP))
            IF (NSURF(ISUBST,J,ILOOP).EQ.0) FSIGN = -1.0
            Z1 = FSIGN*(TX0(1)/2. + HSUB(ISUBST,J,ILOOP))
            Z2 = FSIGN*TX0(1)/2.
            ANGLEX = ABS(THSUB(ISUBST,J,ILOOP))
C END FEB 2009
            CURCG4 = WXXPGL
            F4 = 0.
            F5 = 0.
            IF (J.EQ.1) F5 = 1.0
            CURCG5 = PWDDI + WYYPGL - F4/R - F5*DELCRC
            IF (ANGLEX.LT.10.) EPSTIP = EX - Z1*CURCG4
            IF (ANGLEX.GT.80.) EPSTIP = EY - Z1*CURCG5
            IF (ANGLEX.LT.10.) EPSRUT = EX - Z2*CURCG4
            IF (ANGLEX.GT.80.) EPSRUT = EY - Z2*CURCG5
            STRTIP = EE1(MATLX)*EPSTIP
            STRRUT = EE1(MATLX)*EPSRUT
            IF (STRTIP.GE.0.) 
     1         SUBMAX(MATLX,1) = MAX(SUBMAX(MATLX,1),STRTIP) 
            IF (STRRUT.GE.0.)
     1         SUBMAX(MATLX,1) = MAX(SUBMAX(MATLX,1),STRRUT)
            IF (STRTIP.LT.0.)
     1         SUBMAX(MATLX,2) = MIN(SUBMAX(MATLX,2),STRTIP)
            IF (STRRUT.LT.0.)
     1         SUBMAX(MATLX,2) = MIN(SUBMAX(MATLX,2),STRRUT)
            IF (ANGLEX.LT.10.) WRDSUB = 'substringer'
	    IF (ANGLEX.GT.80.) WRDSUB = '  subring  '
            IF (I.EQ.1.AND.NPRT.GE.2) THEN
             IF (NOMARG.EQ.0) THEN
               WRITE(8,'(/,A,A,A)')
     1       ' Stresses at tip and root of '//WRDSUB//':'
               WRITE(8,'(A,1P,E12.4,A,1P,E12.4)')
     1       ' Stress at tip, STRTIP=',STRTIP,
     1       ' Stress at root,STRRUT=',STRRUT
               WRITE(8,'(A,I3,/,A,1P,E12.4,/,A,1P,E12.4)')
     1       ' Substiffener Material No. ',MATLX,
     1      ' Maximum tensile stress, SUBMAX(MATLX,1)=',SUBMAX(MATLX,1),
     1      ' Maximum compres stress, SUBMAX(MATLX,2)=',SUBMAX(MATLX,2)
             ENDIF
            ENDIF
   36    CONTINUE
      ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
C END JUN 2004
  200 CONTINUE
C BEG OCT 1996
C     "200" is the end of the loop over nodal points within a segment.
      IF (NLAY.EQ.1.AND.ICAND(M).NE.0) THEN
C  Do the "bending overshoot" stress constraints:
         CALL CONOVR(I5I,ISTEP,SIGXX,SIGYY,SIGXY,
     1               EALLST(1,M),BNDOVR(1,M),ISOEFF(M),ISOMAT(M),
     1               SIGCON(1,M))
         IF (ISOEFF(M).EQ.0.OR.ISOMAT(M).EQ.0) THEN
            DO 250 I = 1,5
               SIGMIN(I,M) = MIN(SIGMIN(I,M),SIGCON(I,M))
  250       CONTINUE
         ELSE
            SIGMIN(1,M) = MIN(SIGMIN(1,M),SIGCON(1,M))
         ENDIF
      ENDIF
  300 CONTINUE
C     "300" is the end of the loop over ISEG segments in the module.
C END OCT 1996
C
         MAXJ = MAX(MMAX,ISPOP)
         DO 350 J = 1,MAXJ
         DO 320 II = 1,6
         PROD = 0.
         EMARG(II,J) = 1000.
         IF (II.LE.5) PROD = EMAX(II,J)*FSSTR
         IF (II.EQ.6.AND.J.LE.ISPOP) PROD = EPOP(J)*FSSTR
C BEG OCT 1996
         IF (PROD.NE.0.0.AND.(ICAND(J).EQ.0.OR.II.EQ.6))
     1      EMARG(II,J)=ABS(1./PROD)
         IF (ICAND(J).NE.0.AND.II.LE.5)
     1      EMARG(II,J) = SIGMIN(II,J)/FSSTR
C END OCT 1996
  320    CONTINUE
C           WRITE(8,*)' J, (EMAX(II,J),II=1,5)=...'
C           WRITE(8,330) J, (EMAX(II,J),II=1,5)
C           WRITE(8,*)' J, (EMARG(II,J)-1.,II=1,6)=...'
C           WRITE(8,330) J,(EMARG(II,J)-1.,II=1,6)
  330    FORMAT(' J, EMARG(J,II),II=1,6)=',I3,1P,6E14.4)
  350    CONTINUE
C
C  CONSTRAINT CONDITIONS...
C
      IBEG = ICONST + 1
      CONSTR(IBEG) = 0.
C
      CALL CONVRF(FSSTR,CN2)
      DO 600 J = 1,MAXJ
C
      CALL CONVR2(J,CJ)
      DO 500 I = 1,6
C BEG NOV 1996
      ILK = 0
      DO 355 ILE = 1,51
         IF (POSI(I,J)(ILE:ILE).EQ.' ') GO TO 355
         ILK = ILK + 1
         POS(ILK:ILK) = POSI(I,J)(ILE:ILE)
  355 CONTINUE
      ILKP = 0
      DO 356 ILE = 1,38
         IF (POSIP(I,J)(ILE:ILE).EQ.' ') GO TO 356
         ILKP = ILKP + 1
         POSP(ILKP:ILKP) = POSIP(I,J)(ILE:ILE)
  356 CONTINUE
C END NOV 1996
      INUMTT = INUMTT + 1
      IF (EMARG(I,J).EQ.1000.) GO TO 500
      IF (IMOD.EQ.0.AND.EMARG(I,J).LT.MAXCON) THEN
         ICAR = ICAR + 1
         GO TO (360,370,380,390,400,405), I
  360    CONTINUE
         IF (ISOMAT(J).EQ.0.OR.ISOEFF(J).EQ.0) PCWORD(ICAR) =
     1 'fibertensn:'//POSP(1:ILKP)//' '//CNN
         IF (ISOMAT(J).EQ.1.AND.ISOEFF(J).EQ.1) PCWORD(ICAR) =
     1 'eff.stress:'//POSP(1:ILKP)//' '//CNN
         GO TO 408
  370    CONTINUE
C BEG APR 1997  (bad "I" changed to "1", four places)
         PCWORD(ICAR) =   
     1 'fibercompr:'//POSP(1:ILKP)//' '//CNN
         GO TO 408
  380    CONTINUE
         PCWORD(ICAR) =   
     1 'transtensn:'//POSP(1:ILKP)//' '//CNN
         GO TO 408
  390    CONTINUE
         PCWORD(ICAR) =   
     1 'transcompr:'//POSP(1:ILKP)//' '//CNN
         GO TO 408
  400    CONTINUE
         PCWORD(ICAR) =   
     1 'inplnshear:'//POSP(1:ILKP)//' '//CNN
C END APR 1997
         GO TO 408
  405    CONTINUE
         PCWORD(ICAR) =
     1 'stringer popoff, web '//CJ//' '//CNN
  408    CONTINUE
C
         CPLOT(ICAR) = EMARG(I,J) - 1.
         IADDCC(ICAR) = 1
         FSAFEP(ICAR) = FSSTR
      ENDIF
      IF (IMOD.EQ.0.AND.EMARG(I,J).GT.FMAX) GO TO 500
      IF (IMOD.EQ.1.AND.IPOINC(INUMTT).EQ.0) GO TO 500
      ICONST = ICONST + 1
      IF (IMOD.EQ.0) IPOINC(INUMTT) = 1
      CONSTR(ICONST) = EMARG(I,J)
      GO TO (410,420,430,440,450,455), I
C
C     WRITE(8,*)' I, ICONST=',I,ICONST
C
  410 CONTINUE
      IF (ISOMAT(J).EQ.0.OR.ISOEFF(J).EQ.0) WORDB(ICONST) =
     1 'fibertensn:'//POS(1:ILK)//' '//CNN//';FS='//CN2
      IF (ISOMAT(J).EQ.1.AND.ISOEFF(J).EQ.1) WORDB(ICONST) =
     1 'eff.stress:'//POS(1:ILK)//' '//CNN//';FS='//CN2
      GO TO 495 
  420 CONTINUE
      WORDB(ICONST) =   
     1 'fibercompr:'//POS(1:ILK)//' '//CNN//';FS='//CN2
      GO TO 495 
  430 CONTINUE
      WORDB(ICONST) =   
     1 'transtensn:'//POS(1:ILK)//' '//CNN//';FS='//CN2
      GO TO 495 
  440 CONTINUE
      WORDB(ICONST) =   
     1 'transcompr:'//POS(1:ILK)//' '//CNN//';FS='//CN2
      GO TO 495 
  450 CONTINUE
      WORDB(ICONST) =   
     1 'inplnshear:'//POS(1:ILK)//' '//CNN//';FS='//CN2
      GO TO 495 
  455 CONTINUE
      WORDB(ICONST) =
     1 'stringer popoff margin:(allowable/actual)-1, web '
     1//CJ//' '//CNN//';FS='//CN2
C BEG APR 2007
  495 CONTINUE
      IF (NPRT.GE.0) WRITE(8,'(A,1P,E12.4,2X,A)')
     1 ' Margin=',CONSTR(ICONST)-1.,WORDB(ICONST)
C END APR 2007
  500 CONTINUE
  600 CONTINUE
C BEG JUN 2004
      MMMAX = MAX(MMAX,MATLXM)
C     IF (NPRT.GE.2) WRITE(8,'(A,I3)')
C    1' MMMAX = max. materials =',MMMAX
      DO 700 J = 1,MMMAX
      CALL CONVR2(J,CJ)
C Generate constraints for substiffeners, if any...
C23456789012345678901234567890123456789012345678901234567890123456789012
C     IF (NPRT.GE.2) WRITE(8,'(A,I3,A,1P,2E12.4)')
C    1' J=',J,': SUBMAX(J,1),SUBMAX(J,2)=',SUBMAX(J,1),SUBMAX(J,2)
      IF (SUBMAX(J,1).NE.0.0.OR.SUBMAX(J,2).NE.0.0) THEN
C There are substiffeners...
         IF (ISOMAT(J).EQ.1.AND.ISOEFF(J).EQ.1) THEN
            SUBMAX(J,1) = MAX(ABS(SUBMAX(J,1)),ABS(SUBMAX(J,2)))
            SUBCON(J,1) = EALLOW(1,J)/(SUBMAX(J,1)*FSSTR)
            SUBCON(J,2) = 10.E+16
C           WRITE(8,'(A,I2,1P,E12.4)')' J,EALLOW(1,J)=',J,EALLOW(1,J)
         ELSE
            SUBCON(J,1) = EALLOW(1,J)/(SUBMAX(J,1)*FSSTR)
            IF (SUBCON(J,1).LT.0.0) SUBCON(J,1)=10.E+16
            SUBCON(J,2) = 
     1               EALLOW(2,J)/(-SUBMAX(J,2)*FSSTR)
            IF (SUBCON(J,2).LT.0.0) SUBCON(J,2)=10.E+16
         ENDIF
C        WRITE(8,'(A,1P,3E12.4)') ' FMAX,SUBCON(J,1),SUBCON(J,2)=',
C    1                              FMAX,SUBCON(J,1),SUBCON(J,2)
         INUMTT = INUMTT + 1
         IF (IMOD.EQ.0.AND.SUBCON(J,1).LT.MAXCON) THEN
            ICAR = ICAR + 1
            CPLOT(ICAR) = SUBCON(J,1) - 1.
            IADDCC(ICAR) = 1
            FSAFEP(ICAR) = FSSTR
            IF (ISOMAT(J).EQ.1.AND.ISOEFF(J).EQ.1) THEN
             PCWORD(ICAR) =
     1       'matl='//CJ//'; substiffener effective stressSTRTHK '//CNN 
            ELSE
             PCWORD(ICAR) =
     1       'matl='//CJ//'; substiffener tensile stressSTRTHK   '//CNN
            ENDIF
         ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
         IF (IMOD.EQ.0.AND.SUBCON(J,1).GT.FMAX) GO TO 498
         IF (IMOD.EQ.1.AND.IPOINC(INUMTT).EQ.0) GO TO 498
         ICONST = ICONST + 1
         IF (IMOD.EQ.0) IPOINC(INUMTT) = 1
         CONSTR(ICONST) = SUBCON(J,1)
         IF (ISOMAT(J).EQ.1.AND.ISOEFF(J).EQ.1) THEN
            WORDB(ICONST) =
     1   'matl='//CJ//'; substiffener effective stressSTRTHK '
     1                                                //CNN//';FS='//CN2
         ELSE
            WORDB(ICONST) =
     1   'matl='//CJ//'; substiffener tensile stressSTRTHK   '
     1                                                //CNN//';FS='//CN2
         ENDIF
C BEG APR 2007
         IF (NPRT.GE.0) WRITE(8,'(A,1P,E12.4,2X,A)')
     1 ' Margin=',CONSTR(ICONST)-1.,WORDB(ICONST)
C END APR 2007
C
  498    CONTINUE
         INUMTT = INUMTT + 1
         IF (IMOD.EQ.0.AND.SUBCON(J,2).LT.MAXCON) THEN
            ICAR = ICAR + 1
            CPLOT(ICAR) = SUBCON(J,2) - 1.
            IADDCC(ICAR) = 1
            FSAFEP(ICAR) = FSSTR
            PCWORD(ICAR) = 
     1    'matl='//CJ//'; substiffener compressive stressSTRTHK '//CNN
         ENDIF
         IF (IMOD.EQ.0.AND.SUBCON(J,2).GT.FMAX) GO TO 499
         IF (IMOD.EQ.1.AND.IPOINC(INUMTT).EQ.0) GO TO 499
         ICONST = ICONST + 1
         IF (IMOD.EQ.0) IPOINC(INUMTT) = 1
         CONSTR(ICONST) = SUBCON(J,2)
         WORDB(ICONST) =
     1    'matl='//CJ//'; substiffener compressive stressSTRTHK '
     1                                                //CNN//';FS='//CN2
C BEG APR 2007
         IF (NPRT.GE.0) WRITE(8,'(A,1P,E12.4,2X,A)')
     1 ' Margin=',CONSTR(ICONST)-1.,WORDB(ICONST)
C END APR 2007
  499    CONTINUE
      ENDIF
  700 CONTINUE
C End of section on substiffener stress constraints.
C END JUN 2004
      RETURN
      END
C
C
C
C=DECK      NEWMAX
      SUBROUTINE NEWMAX(M,K,T,TAPE,DEGRAD,EALLOW,EMAX)
C
C  PURPOSE IS TO MODIFY THE MAX. ALLOWABLE stressS FOR A SINGLE LAYER
C  OF CLOTH OR TAPE, EALLOW, TO ACCOUNT FOR MULTIPLE LAYERS OF ADJACENT
C  UNIDIRECTIONAL MATERIAL, WHICH TESTS HAVE SHOWN IS WEAKER THAN
C  A SINGLE LAYER OF THE SAME MATERIAL.
C
      DIMENSION DEGRAD(10,5,10),EALLOW(5,10),EMAX(5)
      DIMENSION T(*),TAPE(*)
C
      NSAME = 1
      IF (TAPE(M).GT.0.) THEN
         NSAME = 0.6 + T(K)/TAPE(M)
         IF (NSAME.LT.1) NSAME = 1
         IF (NSAME.GT.10)NSAME = 10
      ENDIF
      DO 10 ITYP = 1,5
         EMAX(ITYP) = ABS(DEGRAD(NSAME,ITYP,M)*EALLOW(ITYP,M))
   10 CONTINUE
C
      RETURN
      END
C
C
C
C=DECK      GETEPS
      SUBROUTINE GETEPS(I,ISEG,Z,EX,EY,EXY,E1,E2,E12,WPB,WDPB,
     1 WDDPB,PWDDI,N,M,AL,F,FACT,J,WXXPGL,WYYPGL,W0PB,W0DPB,W0DDPB,
C BEG DEC 1995
C BEG OCT 1996
     1 IHOOP,L,ILLX,CRUSH)
C END OCT 1996
C END DEC 1995
C
C  Purpose is to get strains EX,EY,EXY in panel coordinates, thru
C  through the thickness of the sheet.
C
C
      COMMON/THICK/TX(5),TY(5)
      COMMON/GEOM1/AXIAL,CIRC,R
      COMMON/PSTSTF/EKOISV,FMOD0,ALMOD0,FMMOD0,FNMOD0,FWAVE0
      COMMON/GEOM3/ISTIF(2),NLAYER(4,2),NSEG(2),INTEXT(2)
C BEG JULY 1995
      COMMON/DELCRX/DELCRC
C END JULY 1995
      LOGICAL ISKIN,ITEST
C BEG OCT 1996
      REAL N,M,KAPPAX,KAPPAY,KAPPXY
      COMMON/WSANDW/TXFF1(4),TXFF2(4),CXFF1(6,6,4),CXFF2(6,6,4)
      COMMON/UNBALX/UNBAL(4,2),DBEND1(4,2),DBEND2(4,2)
C END OCT 1996
C
      F1 = 0.5*(1. + FACT)
      F2 = 0.5*(1. - FACT)
      SN= SQRT(N)
      F3 = F2
      EYADD = 0.
      F4 = 0.
C BEG JULY 1995
      F5 = 0.
      IF (J.EQ.1) F5 = 1.0
C END JULY 1995
      IF (ISTIF(1).NE.5) ISKIN = J.LE.2
      IF (ISTIF(1).EQ.5) ISKIN = J.EQ.1.OR.J.EQ.3
      IF (ISKIN) THEN
         IF (J.EQ.1.AND.ISTIF(1).LE.3.AND.EKOISV.LT.0.8
C BEG JULY 1995
C    1        .AND.(WPB*R).GT.0.0.AND.FACT.GT.0.) THEN
     1        .AND.(WPB*R).GT.0.0.AND.FACT.GT.0.0
     1        .AND.ABS(WPB).GT.0.001*TX(1)) THEN
C END JULY 1995
            IF (ISEG.EQ.1) THEN
               IF (WPB.GT.0.) ITEST = WDDPB.LE.0.0
               IF (WPB.LT.0.) ITEST = WDDPB.GE.0.0
            ELSE
               IF (WPB.LT.0.) ITEST = WDDPB.GE.0.0
               IF (WPB.GT.0.) ITEST = WDDPB.LE.0.0
            ENDIF
            IF (ITEST) F4 = 1.0
         ENDIF           
         F3 = 1.0
         FIHOOP = IHOOP
         EYADD = FIHOOP*0.125*(WPB*WDDPB -WDPB**2
     1               +W0PB*WDDPB +WPB*W0DDPB -2.*W0DPB*WDPB)
      ENDIF
C
C  DECEMBER 6, 1986 MODIFIED STATEMENTS.. (SIGNS  OF THE TWO TERMS IN
C  WHICH THE SLOPE M APPEARS LINEARLY HAVE BEEN CHANGED...
C
C BEG OCT 1996
      KAPPAX = -4.*N*WPB*(F1-F2) + WXXPGL
      EX = E1 - Z*KAPPAX
C    1        + Z*4.*N*WPB*(F1-F2) - Z*WXXPGL
C END OCT 1996
      EYA = WDDPB -4.*M*M*N*WPB
      EYB = -4.*M*SN*WDPB
C BEG DEC 1995
      RMS = SQRT(EYA**2 + EYB**2)
      SUM = ABS(EYA + EYB)
      RAT = 1.0
      IF (RMS.GT.0.0) RAT = SUM/RMS
C END DEC 1995
      EABMAX = MAX(ABS(EYA),ABS(EYB))
      DIFF = 0.0
      IF (EABMAX.GT.0.) DIFF = ABS(ABS(EYA) - EABMAX)/EABMAX
      EFACT = -1.0
C BEG DEC 1995
      IF (DIFF.LT.0.000001) THEN
C END DEC 1995
         IF (ABS(EYA).GT.0.0) EFACT = EYA/ABS(EYA)
      ELSE
         IF (ABS(EYB).GT.0.0) EFACT = EYB/ABS(EYB)
      ENDIF
      EYAEYB = EFACT*RMS
C BEG OCT 1996
      KAPPAY = EYAEYB*F1 - EYAEYB*F2  +PWDDI +WYYPGL -F4/R -F5*DELCRC
      EY = E2 -EYADD + 2.*EYADD*F2 -Z*KAPPAY
C    1        -Z*(EYAEYB*F1 - EYAEYB*F2)
C    1        -Z*PWDDI - Z*WYYPGL
C    1        -EYADD + 2.*EYADD*F2
C    1        +Z*F4/R
C BEG JULY 1995
C    1        +Z*F5*DELCRC
C END JULY 1995
      IF (ILLX.EQ.1) THEN
         E1CRCH = 0.5*(TX(J)-TXFF1(J)) + DBEND1(J,1)
         E2CRCH = 0.5*(TX(J)-TXFF1(J)) + DBEND2(J,1)
         CRUNCH =  CXFF1(1,1,J)*E1CRCH*KAPPAX**2
     1           + CXFF1(1,2,J)*(E1CRCH+E2CRCH)*KAPPAX*KAPPAY
     1           + CXFF1(2,2,J)*E2CRCH*KAPPAY**2
         CRUSH = MAX(ABS(CRUNCH),CRUSH)
C        WRITE(8,'(A,4I3,/,1P,5E12.4)')
C    1 ' ISEG,J,I,L,KAPPAX,KAPPAY,DBEND1(J,1),CRUNCH,CRUSH=',
C    1   ISEG,J,I,L,KAPPAX,KAPPAY,DBEND1(J,1),CRUNCH,CRUSH
      ENDIF
C END OCT 1996
C BEG JUN 1996
C     IF ((I.EQ.1.AND.ISEG.EQ.1).OR.(I.EQ.11.AND.ISEG.EQ.2)) THEN
C        WRITE(8,*)' EX,E1,EY,E2=',EX,E1,EY,E2
C        WRITE(8,*)' F1,F2,F3,F4,F5=',F1,F2,F3,F4,F5
C        WRITE(8,*)' Z,DELCRC,WDDPB,WDPB,WPB=',
C    1               Z,DELCRC,WDDPB,WDPB,WPB
C        WRITE(8,*)' EYADD,FIHOOP,EYA,EYB,EYAEYB,EFACT,R=',
C    1               EYADD,FIHOOP,EYA,EYB,EYAEYB,EFACT,R
C        WRITE(8,*)' M,N,SN,PWDDI,WXXPGL,WYYPGL=',
C    1               M,N,SN,PWDDI,WXXPGL,WYYPGL
C BEG OCT 1996
C        WRITE(8,*)' KAPPAX,KAPPAY=',KAPPAX,KAPPAY
C END OCT 1996
C     ENDIF
C END JUN 1996
C
      EYA = -4.*M*N*WPB
      EYB = -2.*SN*WDPB
C BEG DEC 1995
      RMS = SQRT(EYA**2 + EYB**2)
      SUM = ABS(EYA + EYB)
      RAT = 1.0
      IF (RMS.GT.0.0) RAT = SUM/RMS
C END DEC 1995
      EABMAX = MAX(ABS(EYA),ABS(EYB))
      DIFF = 0.0
      IF (EABMAX.GT.0.) DIFF = ABS(ABS(EYA) - EABMAX)/EABMAX
      EFACT = -1.0
C BEG DEC 1995
      IF (DIFF.LT.0.000001) THEN
C END DEC 1995
         IF (ABS(EYA).GT.0.0) EFACT = EYA/ABS(EYA)
      ELSE
         IF (ABS(EYB).GT.0.0) EFACT = EYB/ABS(EYB)
      ENDIF
      EYAEYB = EFACT*RMS
C BEG OCT 1996
      KAPPXY = 2.*(EYAEYB*F1 - EYAEYB*F2)
      EXY= E12 + Z*KAPPXY
C    1        + Z*2.*(EYAEYB*F1 - EYAEYB*F2)
C END OCT 1996
C
C  END, DECEMBER 6, 1986 MODIFIED STATEMENTS.
C
C BEG DEC 1995
C     IF (ISEG.EQ.1.AND.I.EQ.7.AND.L.EQ.4) THEN
C        WRITE(8,*)' IN GETEPS...'
C        WRITE(8,*)' I,ISEG,J,M,AL=',I,ISEG,J,M,AL
C        WRITE(8,*)' Z,F,F1,F2,F4=',Z,F,F1,F2,F4
C        WRITE(8,*)' WPB,WDPB,WDDPB=',WPB,WDPB,WDDPB
C        WRITE(8,*)' W0PB,W0DPB,W0DDPB=',W0PB,W0DPB,W0DDPB
C        WRITE(8,*)' F3,FACT,PWDDI=',F3,FACT,PWDDI
C        WRITE(8,*)' N,SN,EYADD=',N,SN,EYADD
C        WRITE(8,*)' E1,E2,E12=',E1,E2,E12
C        WRITE(8,*)' EX,EY,EXY=',EX,EY,EXY
C        WRITE(8,*)' DIFF,EFACT,EYA,EYB,EYAEYB=',
C    1               DIFF,EFACT,EYA,EYB,EYAEYB
C        WRITE(8,*)' END GETEPS.'
C     ENDIF
C END DEC 1995
C
      RETURN
      END
C
C
C
C=DECK      MAXSTR
      SUBROUTINE MAXSTR(IFILE,NPRT,EX,EY,EXY,ISEG,L,I,Z,CS,EMAX,A1T,A2T,
     1                  EALLST,E1,E2,G,U12,CRACK,ICRACK,ICHANG,IMOD,
     1            NOTEST,ITEST,IPOP,SPOP,SIGLUE,IGO,MODE,ITYPE,M,IICHAN,
     1            FSSTR,POSNEG,ANGLE,EXMEM,EYMEM,EXYMEM,POSI,POSIP,
C BEG JUN 1996
C BEG OCT 1996
     1            POSTST,WROTIP,ISTIF,JJ,TT,NLAY,FNXLAY,FNYLAY,FNXYLA,
     1            SIGX,SIGY,SIGXY,ICAND)
C END OCT 1996
C END JUN 1996
C
C  PURPOSE IS TO FIND MAXIMUM STRAIN COMPONENTS IN MATERIAL COORDINATES
C  AT A SINGLE POINT IN THE STRUCTURE, GIVEN EX, EY, EXY, AND POSITION.
C
C BEG JUN 1996 (SANDWICH)
      COMMON/XSANDW/ISANDW(4,2),ICORE(4,2)
C END JUN 1996
      COMMON/MATER7/ISOMAT(20),ISOEFF(20)
      DIMENSION EMAX(*),CS(*),EALLST(*)
      DIMENSION POSI(*),POSIP(*),POSTST(*)
      CHARACTER*51 POSI,POSTST
      CHARACTER*38 POSIP
      CHARACTER*4 WROTIP
      CHARACTER*12 CEALLW
      CHARACTER*15 MODE(7)
      CHARACTER*3 POSNEG
      CHARACTER*6 STATUS
C
      ERRMAX = 1.0E-06
C
      CALL ROTATE(CS(1),CS(2),EX,EY,EXY,EPS1,EPS2,EPS12)
C
      U21 = 0.
      IF (E2.GT.0.) U21 = U12*E1/E2
      UD = 1. - U12*U21
      SIG1 = (    E1*(EPS1-A1T) +U12*E1*(EPS2-A2T))/UD
      SIG2 = (U12*E1*(EPS1-A1T) +    E2*(EPS2-A2T))/UD
      SIG12= G*EPS12
C BEG OCT 1996
C     FIND STRESS COMPONENTS SIGX, SIGY, SIGXY IN PANEL COORDINATES
C
      IF (NLAY.EQ.1.AND.ICAND.NE.0)
     1 CALL ROTATS(CS(1),-CS(2),SIG1,SIG2,SIG12,SIGX,SIGY,SIGXY)
C END OCT 1996
C
C     WRITE(8,*)' IN MAXSTR..ISEG,I,L,Z,EX,EY,EXY,EPS1,EPS2,EPS12=',
C    1                       ISEG,I,L,Z,EX,EY,EXY,EPS1,EPS2,EPS12
C     WRITE(8,*)' IN MAXSTR..E1,E2,U21,A1T,A2T=',E1,E2,U21,A1T,A2T
C     WRITE(8,*)' IN MAXSTR..SIG1,SIG2,SIG12=',SIG1,SIG2,SIG12
C BEG JUN 1996
      IF (ISANDW(JJ,1).GT.1.AND.ISANDW(JJ,1).LT.NLAY
     1                    .AND.(ISTIF.NE.5.OR.ISEG.LT.5)) THEN
         CALL ROTATS(CS(1),-CS(2),SIG1,SIG2,SIG12,SIGX,SIGY,SIGXY)
C        WRITE(8,*)' IN MAXSTR..SIGX,SIGY,SIGXY=',SIGX,SIGY,SIGXY
         FNXLAY = FNXLAY + 0.5*SIGX*TT
         FNYLAY = FNYLAY + 0.5*SIGY*TT
         FNXYLA = FNXYLA + 0.5*SIGXY*TT
      ENDIF
C END JUN 1996
C
      SPOP = 0
      IF (I.EQ.IPOP) THEN
C        FIND STRESS COMPONENTS SIGX, SIGY, SIGXY IN PANEL COORDINATES
C
         CALL ROTATS(CS(1),-CS(2),SIG1,SIG2,SIG12,SIGX,SIGY,SIGXY)
C
C  FIND MEMBRANE STRAINS IN MATERIAL COORDINATES...
C
         CALL ROTATE(CS(1),CS(2),EXMEM,EYMEM,EXYMEM,E1MEM,E2MEM,E12MEM)
C
C  GET MEMBRANE STRESS IN MATERIAL COORDINATES...
C
         S1MEM = (    E1*(E1MEM-A1T) +U12*E1*(E2MEM-A2T))/UD
         S2MEM = (U12*E1*(E1MEM-A1T) +    E2*(E2MEM-A2T))/UD
         S12MEM= G*E12MEM
C
C  NEXT, GET MEMBRANE STRESS COMPONENTS IN PANEL COORDINATES...
C
       CALL ROTATS(CS(1),-CS(2),S1MEM,S2MEM,S12MEM,SXMEM,SYMEM,SXYMEM)
C
         SPOP = SIGY-SYMEM
C        WRITE(8,*)' ISEG,L,I,Z,SIGX,SIGY,S2MEM,SYMEM,SPOP,SIGXY=',
C    1               ISEG,L,I,Z,SIGX,SIGY,S2MEM,SYMEM,SPOP,SIGXY
      ENDIF
C
      IF (IMOD.EQ.0.AND.ICRACK.EQ.1.AND.I.EQ.ITEST.AND.IGO.EQ.1) THEN
         RATIO = 10.
         IF (SIG2.GT.0.) RATIO = EALLST(3)/SIG2
         CALL CRAKNG(RATIO,SIG1,CRACK,ICHANG,NOTEST)
      ENDIF
C
      IF (ISOMAT(M).EQ.1.AND.ISOEFF(M).EQ.1) THEN
         JMIN    = 3
         JMAX    = 3
         SIGEFF  = SQRT(SIG1**2 +SIG2**2 -SIG1*SIG2 +3.*SIG12**2)
         SIGTST  = SIGEFF
         RAT = SIGEFF/EALLST(1)
         EMAX(1) = MAX(RAT,EMAX(1))
         IF (EMAX(1) .EQ. 0.0) THEN
           ERR = ABS(EMAX(1) - RAT)
         ELSE
           ERR = ABS((EMAX(1)-RAT)/EMAX(1))
         ENDIF
         IF (IMOD.EQ.0.AND.ERR.LT.ERRMAX) THEN
C BEG JUN 1996
            CALL SETPOS(1,Z,L,I,ISEG,M,POSI(1),POSIP(1),WROTIP,ITYPE,0)
C END JUN 1996
            POSTST(1) = POSI(1)
         ENDIF
         EMAX(2) = 0.
         EMAX(3) = 0.
         EMAX(4) = 0.
         EMAX(5) = 0.
         GO TO 5
      ELSE
         JMIN    = 1
         JMAX    = 5
         SIGTST  = SIG1
         RAT = SIG1/EALLST(1)
         EMAX(1) = MAX(RAT,EMAX(1))
         IF (EMAX(1) .EQ. 0.0) THEN
           ERR = ABS(EMAX(1) - RAT)
         ELSE
           ERR = ABS((EMAX(1)-RAT)/EMAX(1))
         ENDIF
         IF (IMOD.EQ.0.AND.ERR.LT.ERRMAX) THEN
C BEG JUN 1996
            CALL SETPOS(1,Z,L,I,ISEG,M,POSI(1),POSIP(1),WROTIP,ITYPE,0)
C END JUN 1996
            POSTST(1) = POSI(1)
         ENDIF
      ENDIF
C
      CRACKD = 1.0
      RATIO  = 1.1
      IF (SIG2.GT.0.) RATIO = EALLST(3)/SIG2
      REDCOM = 1.0
      REDSHR = 1.0
      IF (RATIO.LT.1.0.AND.ICRACK.EQ.1) THEN
         CRACKD = RATIO
         IF (SIG1.LT.0.) THEN
            REDCOM = 0.5
            REDSHR = 0.8
         ENDIF
      ENDIF
      RAT = SIG1/(EALLST(2)*REDCOM)
C
      EMAX(2) = MIN(RAT,EMAX(2))
      IF (EMAX(2) .EQ. 0.0) THEN
        ERR = ABS(EMAX(2) - RAT)
      ELSE
        ERR = ABS((EMAX(2)-RAT)/EMAX(2))
      ENDIF
      IF (IMOD.EQ.0.AND.ERR.LT.ERRMAX) THEN
C BEG JUN 1996
         CALL SETPOS(1,Z,L,I,ISEG,M,POSI(2),POSIP(2),WROTIP,ITYPE,0)
C END JUN 1996
         POSTST(2) = POSI(2)
      ENDIF
      IF (ICRACK.EQ.0) THEN
          RAT = SIG2/EALLST(3)
          EMAX(3) = MAX(RAT,EMAX(3))
          IF (EMAX(3) .EQ. 0.0) THEN
            ERR = ABS(EMAX(3) - RAT)
          ELSE
            ERR = ABS((EMAX(3)-RAT)/EMAX(3))
          ENDIF
          IF (IMOD.EQ.0.AND.ERR.LT.ERRMAX) THEN
C BEG JUN 1996
             CALL SETPOS(1,Z,L,I,ISEG,M,POSI(3),POSIP(3),WROTIP,ITYPE,0)
C END JUN 1996
             POSTST(3) = POSI(3)
          ENDIF
      ENDIF
      RAT = SIG2/EALLST(4)
      EMAX(4) = MIN(RAT,EMAX(4))
      IF (EMAX(4) .EQ. 0.0) THEN
        ERR = ABS(EMAX(4) - RAT)
      ELSE
        ERR = ABS((EMAX(4)-RAT)/EMAX(4))
      ENDIF
      IF (IMOD.EQ.0.AND.ERR.LT.ERRMAX) THEN
C BEG JUN 1996
         CALL SETPOS(1,Z,L,I,ISEG,M,POSI(4),POSIP(4),WROTIP,ITYPE,0)
C END JUN 1996
         POSTST(4) = POSI(4)
      ENDIF
      RAT = ABS(SIG12)/(EALLST(5)*REDSHR)
      EMAX(5) = MAX(RAT,EMAX(5))
      IF (EMAX(5) .EQ. 0.0) THEN
        ERR = ABS(EMAX(5) - RAT)
      ELSE
        ERR = ABS((EMAX(5)-RAT)/EMAX(5))
      ENDIF
      IF (IMOD.EQ.0.AND.ERR.LT.ERRMAX) THEN
C BEG JUN 1996
         CALL SETPOS(1,Z,L,I,ISEG,M,POSI(5),POSIP(5),WROTIP,ITYPE,0)
C END JUN 1996
         POSTST(5) = POSI(5)
      ENDIF
C
    5 CONTINUE
C
C  THE FOLLOWING STATEMENTS ARE FOR THE PURPOSE OF LISTING THE
C  STRESSES EVERYWHERE THEY ARE CALCULATED.
C
      IOUTPT = 0
C     IF (ISEG.EQ.1.AND.I.EQ.1.AND.POSNEG.EQ.'POS') IOUTPT = 1
C
      IF ((ITYPE.EQ.2.AND.IICHAN.EQ.0).OR.IOUTPT.EQ.1) THEN
         ISKIP = 0
         DO 200 J = JMIN,JMAX
C
            GO TO (30,40,10,20,50),J
C
   10       CONTINUE
            INDEX = 1
            IF (SIGTST.LE.0.) GO TO 100
            RATIO = ABS(EALLST(1)/(SIGTST*FSSTR))
            GO TO 100
   20       CONTINUE
            INDEX = 2
            IF (SIG1.GE.0.) GO TO 100
            RATIO = ABS(EALLST(2)*REDCOM/(SIG1*FSSTR))
C           IF (REDCOM.LT.1.0) THEN
C              WRITE(8,*)' ISEG,I,L,M,EMAX(2),SIG1,RATIO=',
C    1                     ISEG,I,L,M,EMAX(2),SIG1,RATIO
C           ENDIF
            GO TO 100
   30       CONTINUE
            INDEX = 3
            IF (SIG2.LE.0.) GO TO 100
            RATIO = ABS(EALLST(3)/(SIG2*FSSTR))
            GO TO 100
   40       CONTINUE
            INDEX = 4
            IF (SIG2.GE.0.) GO TO 100
            RATIO = ABS(EALLST(4)/(SIG2*FSSTR))
            GO TO 100
   50       CONTINUE
            INDEX = 5
            IF (SIG12.EQ.0.) GO TO 100
            RATIO = ABS(EALLST(5)*REDSHR/(SIG12*FSSTR))
C
  100       CONTINUE
C
      IF (RATIO.GT.1.0.AND.(J.LT.JMAX.OR.ISKIP.EQ.1)) GO TO 200
         IF (RATIO.LT.1.0) THEN
            STATUS = 'FAILED'
            ISKIP  = 1
         ELSE
            STATUS = '  OK  '
            INDEX  = 6
         ENDIF
         INDEXM = INDEX
            EALSR = 0.0
            IF (JMAX.EQ.3.AND.STATUS.EQ.'FAILED') INDEXM = 7
C BEG JUN 1996
C23456789012345678901234567890123456789012345678901234567890123456789012
           IF (STATUS.EQ.'FAILED'.AND.ISOMAT(M).EQ.1.AND.ISOEFF(M).EQ.1)
C END JUN 1996
     1          EALSR = EALLST(INDEX)
            IF (STATUS.EQ.'FAILED') EALSR = EALLST(INDEX)
            IF (STATUS.EQ.'FAILED'.AND.INDEX.EQ.2)
     1          EALSR = EALLST(INDEX)*REDCOM
            IF (STATUS.EQ.'FAILED'.AND.INDEX.EQ.5)
     1          EALSR = EALLST(INDEX)*REDSHR
            CEALLW = '            '
C           IF (EALSR.NE.0.) CALL CONVRE(EALLST(INDEX),CEALLW)
            IF (EALSR.NE.0.) CALL CONVRE(EALSR,CEALLW)
C BEG NOV 2009
            CRACKS = CRACKD
            IF (ISOMAT(M).EQ.1.AND.ISOEFF(M).EQ.1) CRACKD = SIGTST
C END NOV 2009
            IF (NPRT.GE.1) WRITE(IFILE,150) POSNEG,ISEG,I,L,Z,ANGLE,
     1      SIG1,SIG2,SIG12,MODE(INDEXM),CRACKD,CEALLW,M
  150    FORMAT(1X,A3,I5,I6,I5,1PE10.2,0PF6.1,1P,3E12.4,1X,A15,1PE12.4,
     1        3X,A12,I7)
C BEG NOV 2009
            CRACKD = CRACKS
C END NOV 2009
         RATIO = 1.1
  200    CONTINUE
      ENDIF
C
      RETURN
      END
C
C
C
C=DECK      CRAKNG
      SUBROUTINE CRAKNG(RATIO,SIG1,CRACK,ICHANG,NOTEST)
C
C  FIND NEW VALUE FOR CRACK AND WHETHER CONDITIONS HAVE CHANGED
C  ENOUGH TO WARRANT A NEW EVALUATION OF THE STATE OF THE PANEL.
C
      CRKOLD = CRACK
      IF (RATIO.LT.1.0) THEN
         IF (SIG1.LT.0.) THEN
            CRACK = RATIO
         ELSE
            CRACK = - RATIO
         ENDIF
      ELSE
         CRACK = 1.0
      ENDIF
C
C BEG JAN 1994
C  DISABLE THIS "CRACK" STUFF. IT CAUSES TROUBLE.
      CRACK  = 1.0
      CRKOLD = 1.0
C END JAN 1994
      DIF = ABS(CRKOLD - CRACK)/ABS(CRACK)
      IF (DIF.GT.0.05.AND.NOTEST.EQ.0) ICHANG = 1
      RETURN
      END
C
C
C
C BEG OCT 1996
C=DECK      CONOVR
      SUBROUTINE CONOVR(I5I,ISTEP,SIGXX,SIGYY,SIGXY,
     1                  EALLST,BNDOVR,ISOEFF,ISOMAT,SIGCON)
C
C  PURPOSE IS TO OBTAIN MINIMUM VALUE OF STRESS CONSTRAINT USING THE
C  BENDING OVERSHOOT METHOD.
C
      DIMENSION SIGXX(23,2,2),SIGYY(23,2,2),SIGXY(23,2,2)
      DIMENSION EALLST(*),BNDOVR(*),SIGCON(*),SIGC(5,2)
C
      CALL MOVER(10.E+16,0,SIGCON,1,5)
      DO 100 I = 1,I5I,ISTEP
        CALL MOVER(10.E+16,0,SIGC,1,10)
        DO 30 J = 1,2
C         WRITE(8,'(A,2I3,1P,3E12.4)')
C    1  ' I,J,SIGXX(I,J,1),SIGXX(I,J,2)=',I,J,SIGXX(I,J,1),SIGXX(I,J,2)
          IF (ISOEFF.EQ.0.OR.ISOMAT.EQ.0) THEN
C  axial stress
            SIGAVE = 0.5*(SIGXX(I,J,1) + SIGXX(I,J,2))
            SIGDIF = 0.5*ABS(SIGXX(I,J,1) - SIGXX(I,J,2))
            SIGPOS = ABS(SIGAVE)
            IF (SIGAVE.GT.0.0) SIGC(1,J) = 
     1      1./(SIGPOS/EALLST(1) + SIGDIF/(BNDOVR(1)*EALLST(1)))
            IF (SIGAVE.LT.0.0) SIGC(2,J) = 
     1      1./(SIGPOS/EALLST(2) + SIGDIF/(BNDOVR(2)*EALLST(2)))
            IF (SIGAVE.EQ.0.0.AND.SIGDIF.GT.0.0) THEN
               SIGC(1,J) = 1./(SIGDIF/(BNDOVR(1)*EALLST(1)))
               SIGC(2,J) = 1./(SIGDIF/(BNDOVR(2)*EALLST(2)))
            ENDIF
C  "hoop" stress
            SIGAVE = 0.5*(SIGYY(I,J,1) + SIGYY(I,J,2))
            SIGDIF = 0.5*ABS(SIGYY(I,J,1) - SIGYY(I,J,2))
            SIGPOS = ABS(SIGAVE)
            IF (SIGAVE.GT.0.0) SIGC(3,J) = 
     1      1./(SIGPOS/EALLST(3) + SIGDIF/(BNDOVR(3)*EALLST(3)))
            IF (SIGAVE.LT.0.0) SIGC(4,J) = 
     1      1./(SIGPOS/EALLST(4) + SIGDIF/(BNDOVR(4)*EALLST(4)))
            IF (SIGAVE.EQ.0.0.AND.SIGDIF.GT.0.0) THEN
               SIGC(3,J) = 1./(SIGDIF/(BNDOVR(3)*EALLST(3)))
               SIGC(4,J) = 1./(SIGDIF/(BNDOVR(4)*EALLST(4)))
            ENDIF
C  shear stress
            SIGAVE = 0.5*(SIGXY(I,J,1) + SIGXY(I,J,2))
            SIGDIF = 0.5*ABS(SIGXY(I,J,1) - SIGXY(I,J,2))
            SIGPOS = ABS(SIGAVE)
            IF (SIGPOS.GT.0.0) SIGC(5,J) = 
     1      1./(SIGPOS/EALLST(5) + SIGDIF/(BNDOVR(5)*EALLST(5)))
          ELSE
C  effective stress
            SIGAVX = 0.5*(SIGXX(I,J,1) + SIGXX(I,J,2))
            SIGDFX = 0.5*(SIGXX(I,J,1) - SIGXX(I,J,2))
            SIGSMX = SIGAVX + SIGDFX/BNDOVR(1)
            SIGMXX = SIGAVX - SIGDFX/BNDOVR(1)
            SIGAVY = 0.5*(SIGYY(I,J,1) + SIGYY(I,J,2))
            SIGDFY = 0.5*(SIGYY(I,J,1) - SIGYY(I,J,2))
            SIGSMY = SIGAVY + SIGDFY/BNDOVR(1)
            SIGMYY = SIGAVY - SIGDFY/BNDOVR(1)
            SIGAXY = 0.5*(SIGXY(I,J,1) + SIGXY(I,J,2))
            SIGDXY = 0.5*(SIGXY(I,J,1) - SIGXY(I,J,2))
            SIGSXY = SIGAXY + SIGDXY/BNDOVR(1)
            SIGMXY = SIGAXY - SIGDXY/BNDOVR(1)
            SIGEFF = SQRT(SIGSMX**2 + SIGSMY**2 -SIGSMX*SIGSMY
     1                                           + 3.*SIGSXY**2)
            IF (SIGEFF.GT.0.) SIGC1 = EALLST(1)/SIGEFF
            SIGEFF = SQRT(SIGMXX**2 + SIGMYY**2 -SIGMXX*SIGMYY
     1                                           + 3.*SIGMXY**2)
            IF (SIGEFF.GT.0.) SIGC2 = EALLST(1)/SIGEFF
            SIGC(1,J) = MIN(SIGC1,SIGC2)
          ENDIF
   30   CONTINUE
        JUPPER = 5
        IF (ISOEFF.EQ.1.AND.ISOMAT.EQ.1) JUPPER = 1
        DO 40 J = 1,JUPPER
          SIGC(J,1) = MIN(SIGC(J,1),SIGC(J,2))
   40   CONTINUE
        DO 50 J = 1,JUPPER
          SIGCON(J) = MIN(SIGCON(J),SIGC(J,1))
   50   CONTINUE
  100 CONTINUE
      RETURN
      END
C END OCT 1996
C
C
C
C=DECK      COMPAR
C
C   SUBROUTINE COMPAR   REMOVED (NOT NEEDED ANYMORE)
C
C=DECK      SETPOS
C BEG JUN 1996
      SUBROUTINE SETPOS(ILOOP,Z,L,I,ISEG,M,POS,POSP,WROTIP,ITYPE,ISETPS)
C END JUN 1996
C
C  PURPOSE IS TO CREATE WORD "POS" THAT CONTAINS LOCATION OF MAX.
C  STRESS COMPONENT.
C
      COMMON/ISOGR/ISOGRD,ISOANG
      CHARACTER*51 POS
      CHARACTER*38 POSP
      CHARACTER*4 WROTIP
      CHARACTER*9 WRDTMP
      CHARACTER*2 CL,CI,CISEG,CM
      CHARACTER*7 CZ
      CHARACTER*3 WORD
C BEG JUN 1996
      CHARACTER*1 CSETPS
C END JUN 1996
      CALL CONVR2(L,CL)
      CALL CONVR2(I,CI)
      CALL CONVR2(ISEG,CISEG)
      CALL CONVR2(M,CM)
      CALL CONVRF(Z,CZ)
C BEG JUN 1996
      IF (ISETPS.EQ.0) CSETPS = 'D'
      IF (ISETPS.NE.0) CSETPS = 'I'
C END JUN 1996
      IF (ILOOP.EQ.1) THEN
         IF (ISOGRD.EQ.0) WORD = 'STR'
         IF (ISOGRD.EQ.1) WORD = 'ISO'
      ENDIF
      IF (ILOOP.EQ.2) WORD = 'RNG'
      IF (ISEG.LE.2) WORD = 'SKN'
      IF (M.EQ.0) CM='AD'
C
      WRDTMP = ', node='//CI
C BEG FEB 1997
      IF (WROTIP.NE.'    ') WRDTMP = ', at:'//WROTIP
C END FEB 1997
C BEG JUN 1996
C     POS=' matl='//CM//', '//WORD//', seg='//CISEG//WRDTMP//
C23456789012345678901234567890123456789012345678901234567890123456789012
      POS=' matl='//CM//', '//WORD//','//CSETPS//'seg='//CISEG//WRDTMP//
C END JUN 1996
     1    ', layer='//CL//',z='//CZ//';'
C BEG AUG 1994
C     IF (ITYPE.NE.5)
C    1 POSP=' matl='//CM//','//WORD//',seg='//CISEG//WRDTMP//
C    1    ',layer='//CL//'; '
C     IF (ITYPE.EQ.5) POSP=' matl='//CM//','//WORD//'; '
C     IF (ITYPE.EQ.5) POSP=' matl='//CM//'; '
      POSP=' matl='//CM//'; '
C END AUG 1994
      IF (I.EQ.0) THEN
C BEG JUN 1996
C         POS=' matl='//CM//', '//WORD//', seg='//CISEG//
          POS=' matl='//CM//', '//WORD//','//CSETPS//'seg='//CISEG//
C END JUN 1996
     1       ',allnode,layer='//CL//',z='//CZ//';'
C BEG AUG 1994
C        IF (ITYPE.NE.5)
C    1    POSP=' matl='//CM//','//WORD//',seg='//CISEG//
C    1       ',allnode,layer='//CL//';'
C        IF (ITYPE.EQ.5) POSP=' matl='//CM//',allnode;'
         POSP=' matl='//CM//',allnode;'
C END AUG 1994
      ENDIF
C
      RETURN
      END
C
C
C
C=DECK      ROTATE
      SUBROUTINE ROTATE(C,S,EX,EY,EXY,E1,E2,E12)
C
C  PURPOSE IS TO TRANSFORM STRAINS FROM (AXIAL,TRANSVERSE = EX,EY)
C  SYSTEM TO MATERIAL COORDINATES (E1,E2).  WINDING ANGLE = ANGLE
C
      C2 = C*C
      S2 = S*S
      SC = S*C
C
C  E1, E2, E12 ARE STRAIN COMPONENTS IN MATERIAL COORDINATES...
C
      E1 = C2*EX + S2*EY + SC*EXY
      E2 = S2*EX + C2*EY - SC*EXY
      E12= -2.*SC*(EX - EY) + (C2-S2)*EXY
C
      RETURN
      END
C
C
C
C=DECK      ROTATS
      SUBROUTINE ROTATS(C,S,SX,SY,SXY,SIG1,SIG2,SIG12)
C
C  PURPOSE IS TO TRANSFORM STRESSES FROM (AXIAL,TRANSVERSE = SX,SY)
C  SYSTEM TO MATERIAL COORDINATES (SIG1,SIG2).  WINDING ANGLE = ANGLE
C
      C2 = C*C
      S2 = S*S
      SC = S*C
C
C  SIG1, SIG2, SIG12 ARE STRESS COMPONENTS IN MATERIAL COORDINATES...
C
      SIG1 = C2*SX + S2*SY + 2.*SC*SXY
      SIG2 = S2*SX + C2*SY - 2.*SC*SXY
      SIG12= -SC*(SX - SY) + (C2-S2)*SXY
C
      RETURN
      END
C
C
C
C=DECK      STRCON
      SUBROUTINE STRCON(FMAX,ISTIF,NSEG,NLAYER,LTYPE,EALLOW,MATL,ANGLE,
     1                  EPS1,EPS2,EPS12,EPS10,EPS20,EPS120,
     1                  B2,W2,ICONST,CONSTR,WORDB,IADDB,T,TAPE,DEGRAD,
     1                  FSSTR,ETHERM,THERMX,THERMY,IPOINC,INUMTT,IMOD,
     1                  EPSLOD,ZPARTX,ZPARTY,ETHRMX,ETHRMY,CRACK,ICHANG,
     1                  EALLST,NPRINT,NAPPL,IFILE,ITYPE,IICHAN,
     1                  EPSTOT,EPSFIX,EPSEIG,IQUICK,INTEXT,MIDEND,
C BEG SEP 1995
     1                  TEMP,FMULT,NNODES,IMTEMP,P,PWDD,IABT,NOMARG,
     1                  IQUIK2,ICASE,ICALL)
C END SEP 1995
C
C  PURPOSE IS TO FIND STRESS CONSTRAINTS
C
C BEG JUN 2004
      CHARACTER*11 WRDSUB
      DIMENSION FCCOMX(3)
      DIMENSION SUBMAX(20,2),SUBCON(20,2),TXDUM(6),ETHDUM(6)
      COMMON/OUTP/NPRT
      COMMON/SUBSTX/TSUB(2,4,2),HSUB(2,4,2),THSUB(2,4,2),
     1              BSUB(2,4,2)
      COMMON/ISBSTF/KLAYER(4,2),NSURF(2,4,2),NB2(2,4,2),
     1              ISOSUB(2,4,2),ISOTYP(2,4,2),MATSUB(2,4,2)
      COMMON/SUBSPC/SPCNG(2,4,2),CX0(6,6,5),CY0(6,6,5),
     1    THRMX0(6,5),THRMY0(6,5),TCURX0(6,5),TCURY0(6,5),
     1    TX0(5),TY0(5),GTX0(2,5),GTY0(2,5),TXX(2,5),TYY(2,5),
     1    GTSSUB(2,5)
C END JUN 2004
      DIMENSION NSEG(*),NLAYER(4,2),LTYPE(99,5,2),EALLOW(5,10),MATL(*)
      DIMENSION EALLST(5,10),NAPPL(3),INTEXT(*)
      DIMENSION ISTIF(*),ANGLE(*),CONSTR(*),WORDB(*),IADDB(*),IPOINC(*)
      DIMENSION B2(*),W2(*),T(*),TAPE(*)
      DIMENSION DEGRAD(10,5,10),EPSLOD(*),ZPARTX(*),ZPARTY(*)
      DIMENSION ETHERM(*),THERMX(6,5),THERMY(6,5)
      DIMENSION ETHRMX(6,5),ETHRMY(6,5),ETPART(6),CRACK(99,5,2)
      DIMENSION EPSTOT(3,5,2),EPSFIX(3,5,2),EPSEIG(3,5,2)
      COMMON/FMAXPP/MAXCON
      REAL MAXCON
      COMMON/THICK/TX(5),TY(5)
      COMMON/WORDS5/PCWORD(99)
      COMMON/PLOTCD/ICAR,IADDCC(99),CPLOT(99)
      COMMON/FSAFEB/FSAFEP(99)
      CHARACTER*80 PCWORD
      CHARACTER*4 WROTIP,CNN
      CHARACTER*7 CN2
      CHARACTER*2 CNODE,CJ
      DIMENSION PWDD(23,8),POSI(5,10),POSIP(5,10)
      CHARACTER*38 POSIP,POSP
      CHARACTER*51 POSI,POS
      COMMON/MATER7/ISOMAT(20),ISOEFF(20)
      DIMENSION EMIN(5,10),TEMP(4,2),FMULT(20,10,4,2),EREDUC(5,10)
      DIMENSION EPSRNG(11)
      COMMON/EPSRTP/EPSRUT,EPSTIP
      COMMON/GEOM2/B(2),BB2(2),H(2),WW(2),WW2(2)
      COMMON/WEBTH1/CX3(6,6,11),CY3(6,6,11),THRMX3(6,11),THRMY3(6,11)
      COMMON/WEBTH2/TSMRX3(6,11),TSMRY3(6,11),ESMRX3(6,11),ESMRY3(6,11)
      COMMON/WEBTH3/ETRMX3(6,11),ETRMY3(6,11),GTX3(2,11),GTY3(2,11)
      COMMON/MATER1/E1(20),E2(20),G(20),FNU(20),DENS(20)
      COMMON/MATERT/ALPHA1(20),ALPHA2(20),CURETP(20),ICOCUR(2)
      COMMON/ALLCIJ/CX(6,6,5),CY(6,6,5),CS(6,6)
      COMMON/LOADS/FNX,FNY,FNXY,RESULT(3,5,2)
C BEG APR 1996
      COMMON/GEOM6/IFAY(2),ITRTOT,IRESET,NLOADS,NSTEPS,WMAXXX,NCROSS,
     1       NOPLOT,KMAX,ILAYPL,XMAX,XMIN,YMAX,YMIN,N3DPLT,NOBJ,NSTRNS,
     1       NPLTST,NABSCI,IDIAG,ITRALL,IFAYT(2),IBEAM,IMISCL(5)
C END APR 1996
C BEG JUN 1996 (SANDWICH)
      COMMON/XSANDW/ISANDW(4,2),ICORE(4,2)
C        "F1" signifies "face sheet 1" (top or leftmost face sheet)
C        "F2" signifies "face sheet 2" (bottom or rightmost face sheet)
C  membrane loads in the face sheets...
      COMMON/USANDW/FNXF1(4,2),FNXF2(4,2),FNYF1(4,2),FNYF2(4,2),
     1              FNXYF1(4,2),FNXYF2(4,2)
      DIMENSION FNXLAY(90,2),FNYLAY(90,2),FNXYLA(90,2)
      DIMENSION FNXTOT(2),FNYTOT(2),FNXYTT(2)
C BEG OCT 1996
      COMMON/WXXXPR/WXXXGL,WYYYGL,WXXXGT
      COMMON/WSANDW/TXFF1(4),TXFF2(4),CXFF1(6,6,4),CXFF2(6,6,4)
      COMMON/UNBALX/UNBAL(4,2),DBEND1(4,2),DBEND2(4,2)
      COMMON/PCRUSH/CRUSH(4,2)
      COMMON/SCRUSH/CRUSH2,QX2,QY2
      COMMON/MATER8/BNDOVR(5,10)
      COMMON/MATER9/ICAND(20)
      DIMENSION SIGXX(23,2,2),SIGYY(23,2,2),SIGXY(23,2,2)
      DIMENSION SIGCON(5,20),SIGMIN(5,20)
C END OCT 1996
C END JUN 1996
      COMMON/RADM10/EPST1A,EPST2A,EPT12A
      COMMON/DELIMP/DELFCE(4,2),DELISO(4,3),DELSKN(3,2,2),DELWEB(2)
      COMMON/WEBTH4/ET3X,TT3X,ET3Y,TT3Y
C BEG JULY 1995
      COMMON/GNNSTB/EIGGEN,EIGLOC,EIGTST,FBOUND,LENMOD
      REAL LENMOD
      COMMON/DELIM2/DELFCX(3,4),DELWBX(2),DELCUR(3)
C BEG OCT 1998
      COMMON/DELIM4/DELFCR(3,4),DELWBR(2)
C END OCT 1998
C BEG JUN 2004
C     DELFCE(ISEG,ILOOP), DELSKN(resultant type:Nx,Ny,Nxy,ISEG,ILOOP)
C                         DELFCR(resultant type:Nx,Ny,Nxy,ISEG), applies to rings
C                         DELFCX(same as DELFCR), applies to stringers
C     DELCUR(curvature type: kx,ky,kxy)
C     DELWEB(root and tip?)
      COMMON/DELCRX/DELCRC
C     COMMON/NEUTRL/DNEUTX,DNEUTY,DSURF
C END JULY 1995
      COMMON/ISKPL/ISKIPL,IRMOD,IBLL,ICD7,ICD8,ICD9
C23456789012345678901234567890123456789012345678901234567890123456789012
      COMMON/WXXP/WXX7(2),WXX8,WXX9,WYY7(2),WYY8,WYY9,WXY7(2),WXY8,WXY9,
     1            F7,F8,F9
C BEG OCT 1996
      COMMON/WXXXP/WXXX7(2),WXXX8,WXXX9,WXXY7(2),WXXY8,WXXY9,
     1             WYYX7(2),WYYX8,WYYX9,WYYY7(2),WYYY8,WYYY9,
     1             WXXX10,WXXY10,WYYX10,WYYY10
C END OCT 1996
      COMMON/IWEAKX/IWEAK
      COMMON/ISOGR/ISOGRD,ISOANG
      COMMON/LOADS7/ESEIG(3,5,3),ESFXL(3,5,3),ESPGL(3,5,3),ESFIX(3,5,3)
      COMMON/LODS10/ESTOT(3,5,3)
      COMMON/RNGWXX/WXXFLN,POPRNG
      COMMON/ATRNGS/ATRING
C BEG MAR 1995
      COMMON/TMATL2/PARMAT(20,10),TEMPJ(10,20,10),FTEMPJ(10,20,10)
      DIMENSION FACTOR(20,10)
C END MAR 1995
      LOGICAL ATRING
      CHARACTER*80 WORDB
      CHARACTER*3 STRRNG
      CHARACTER*15 MODE(7)
      REAL NAPPL,NU12
C BEG JULY 1995
C BEG JUN 2004
      DIMENSION TXSAVE(5),TYSAVE(5),CXSAVE(6,6,5)
C BEG AUG 2006
C     IF (ICALL.EQ.4.AND.NPRT.GE.2) WRITE(8,'(/,A,4I5)')
C    1' ENTERING STRCON: NOMARG,IQUIK2,ICASE,ICALL=',
C    1                   NOMARG,IQUIK2,ICASE,ICALL
C     IF (ICALL.EQ.4.AND.NPRT.GE.2) WRITE(8,'(A,/,1P,4E12.4)')
C    1' IN STRCON: WXX7(1),WXX7(2),WXX8,WXX9=',
C    1             WXX7(1),WXX7(2),WXX8,WXX9
C     IF (ICALL.EQ.4.AND.NPRT.GE.2) WRITE(8,'(A,/,1P,4E12.4)')
C    1'            WYY7(1),WYY7(2),WYY8,WYY9=',
C    1             WYY7(1),WYY7(2),WYY8,WYY9
C END AUG 2006
      IF (NOMARG.EQ.0) CALL MOVER(0.,0,SUBMAX,1,40)
      IF (NOMARG.EQ.0) CALL MOVER(10.E+16,0,SUBCON,1,40)
      DNEUTX = -CS(1,4)/CS(1,1) 
      DNEUTY = -CS(2,5)/CS(2,2)
      DNEUX5 = -CX(1,4,5)/CX(1,1,5)
C BEG AUG 2005
C     DNEUY5 = -CY(2,5,5)/CY(2,2,5)
      DNEUY5 = -CX(2,5,5)/CX(2,2,5)
C END AUG 2005
      DNEUXY = -CS(3,6)/CS(3,3)
      DNUXY5 = -CX(3,6,5)/CX(3,3,5)
      DNEUX1 = -CX(1,4,1)/CX(1,1,1)
      DNEUY1 = -CX(2,5,1)/CX(2,2,1)
      DNUXY1 = -CX(3,6,1)/CX(3,3,1)
C     IF (NPRT.GE.2) WRITE(8,'(A,/,1P,6E12.4)')
C    1' DNEUTX,DNEUTY,DNEUX5,DNEUY5,DNEUXY,DNUXY5=',
C    1  DNEUTX,DNEUTY,DNEUX5,DNEUY5,DNEUXY,DNUXY5
C     IF (NPRT.GE.2) WRITE(8,'(A,2I5)')
C    1' KLAYER(1,1),KLAYER(2,1)=',KLAYER(1,1),KLAYER(2,1)
C     IF (KLAYER(1,1).NE.0) THEN
C         TXSAVE(1) = TX(1)
C         TX(1) = TX0(1)
C         TYSAVE(1) = TY(1)
C         TY(1) = TY0(1)
C         CALL MOVER(CX(1,1,1),1,CXSAVE(1,1,1),1,36)
C         CALL MOVER(CX0(1,1,1),1,CX(1,1,1),1,36)
C     ENDIF
C     IF (KLAYER(2,1).NE.0) THEN
C         TXSAVE(2) = TX(2)
C         TX(2) = TX0(2)
C         TYSAVE(2) = TY(2)
C         TY(2) = TY0(2)
C         CALL MOVER(CX(1,1,2),1,CXSAVE(1,1,2),1,36)
C         CALL MOVER(CX0(1,1,2),1,CX(1,1,2),1,36)
C     ENDIF
C END JUN 2004
C END JULY 1995
      PI = 3.1415927
      IBEG = ICAR + 1
      CPLOT(IBEG) = 0.
      CALL MOVER(10000000.,0,EMIN,1,50)
      CALL MOVER(0.,0,DELFCE,1,8)
      CALL MOVER(0.,0,DELISO,1,12)
      CALL MOVER(0.,0,DELSKN,1,12)
C BEG JULY 1995
      CALL MOVER(0.,0,DELFCX,1,12)
      CALL MOVER(0.,0,DELCUR,1,3)
      DELWBX(1) = 0.
      DELWBX(2) = 0.
C BEG OCT 1998
      CALL MOVER(0.,0,DELFCR,1,12)
      DELWBR(1) = 0.
      DELWBR(2) = 0.
C END OCT 1998
      DELCRC    = 0.
C END JULY 1995
C BEG OCT 1996
      CRUSH2 = 0.0
      QX2 = 0.0
      QY2 = 0.0
      CALL MOVER(10.E+16,0,SIGMIN,1,100)
C END OCT 1996
      MMAX = 0
C
      ILOOP0 = 1
C BEG JUN 2004 (following statement commented out)
C     IF (IQUICK.EQ.0) ILOOP0 = 2
C END JUN 2004
C
C   POSSIBLY LOOP FOR BOTH POSITIVE AND NEGATIVE IMPERFECTION.
      NIMP = 1
C BEG OCT 1998
      FCMULT = 1.0
      IF (ICASE.EQ.2.AND.ICALL.EQ.6) FCMULT = -1.0
      FACIMP = FCMULT*1.0
C END OCT 1998
      IF (ICD7.NE.0.OR.ICD8.NE.0.OR.ICD9.NE.0) NIMP = 2
      DO 110 JIMP = 1,NIMP
C BEG OCT 1998
      IF (JIMP.EQ.2) FACIMP = -FCMULT*1.0
C END OCT 1998
      DO 100 ILOOP = ILOOP0,2
C
C BEG JUN 1999
C     IF (ILOOP.EQ.2.AND.IWEAK.EQ.0.AND.ATRING.AND.MIDEND.EQ.1)
      IF (ILOOP.EQ.2.AND.IWEAK.EQ.0.AND.ISTIF(2).EQ.0.AND.MIDEND.EQ.1)
C END JUN 1999
     1   GO TO 100
      ISTART = 1
      IEND   = NSEG(ILOOP)
      IF (ILOOP.EQ.2) THEN
         ISTART = 2
         IF (B2(ILOOP).EQ.0.) ISTART = 3
      ENDIF
      IF (ISTART.GT.IEND) GO TO 100
      IF (ITYPE.EQ.2.AND.IICHAN.EQ.0.AND.NPRINT.GE.1
     1                              .AND.NOMARG.EQ.0) THEN
         MODE(1) = ' 0 deg. tension'
         MODE(2) = ' 0 deg. comp.  '
         MODE(3) = '90 deg. tension'
         MODE(4) = '90 deg. comp.  '
         MODE(5) = ' in-plane shear'
         MODE(6) = '  no failure   '
         MODE(7) = 'von-mises yield'
C
         IF (JIMP.EQ.1) THEN
            CALL PICTS(IFILE,ISTIF(ILOOP),INTEXT(ILOOP),B2(ILOOP),
     1                 W2(ILOOP),ILOOP,IFAY(ILOOP))
            WRITE(IFILE,24)
         ENDIF
         IF (NIMP.EQ.2) THEN
            IF (JIMP.EQ.1) WRITE(IFILE,*)' positive imperfection factor'
            IF (JIMP.EQ.2) WRITE(IFILE,*)' negative imperfection factor'
         ENDIF
         IF (ILOOP.EQ.1) WRITE(IFILE,*)' skin-stringer module stresses:'
         IF (ILOOP.EQ.2) WRITE(IFILE,*)' skin-ring module stresses:'
C BEG JUN 1996
C23456789012345678901234567890123456789012345678901234567890123456789012
C END JUN 1996
   24    FORMAT(/' Start calculation of stresses in the panel module dep
     1icted above...'/
C BEG JUN 1996
     1' (Segment numbering below refers to the **TOPMOST** of the sketch
     1es above.)'/
C END JUN 1996
     1' SEG.NODE LAYER  THICKNESS  WINDING   IN-PLANE STRESSES IN MATL C
     1OORDS.   MATERIAL    MODE OF     TRANSVERSE  ALLOWABLE  MATL'/
     1' NO.  NO.  NO.  COORDINATE   ANGLE       SIG1        SIG2        
     1SIG12     STATUS     FAILURE      CRACKING    STRESS    TYPE'/
     1'                  (z)       (deg)                                 
     1                            (1.0 means inactive)')
      ENDIF
C
      FIABT = 1 - IABT
      IWEB = 3
      IF (ISTIF(ILOOP).EQ.5) IWEB = 2
      IWEBM = IWEB - 1
      IWEBP = IWEB + 1
C
      DO 60 I = ISTART,IEND
C
      STRRNG = '   '
      IF (I.EQ.1) STRRNG = 'SKN'
      IF (ILOOP.EQ.1.AND.I.GT.1) THEN
         IF (ISOGRD.EQ.0) STRRNG = 'STR'
         IF (ISOGRD.EQ.1) STRRNG = 'ISO'
      ENDIF
C BEG JULY 1995
      IF (ISTIF(ILOOP).EQ.5.AND.I.EQ.IEND) STRRNG = 'SKN'
C END JULY 1995
      IF (ILOOP.EQ.2.AND.I.GT.1) STRRNG = 'RNG'
      PCURV = 0.
      WROTIP = '    '
      CNODE  = '  '
      NNODE  = 1
      IF (P.NE.0.0.AND.ISTIF(1).NE.0.AND.ILOOP.EQ.1) THEN
         IF ((I.EQ.1.OR.I.EQ.2).AND.ISTIF(1).NE.5) NNODE = 2
         IF ((I.EQ.1.OR.I.EQ.3).AND.ISTIF(1).EQ.5) NNODE = 3
      ENDIF
C
C  LOOP OVER NODAL POINTS (MORE THAN ONE ONLY IF P NE 0, ETC, AS ABOVE)
C
      DO 40 IINODE = 1,NNODE
         NODE = 1
         IF (IINODE.EQ.2.AND.ISTIF(1).NE.5) THEN
            IF (I.EQ.1.OR.ISTIF(1).EQ.4)  NODE = NNODES
            IF (I.EQ.2.AND.ISTIF(1).NE.4) NODE = NNODES/2 + 1
         ENDIF
         IF (IINODE.EQ.2.AND.ISTIF(1).EQ.5) NODE = NNODES/2 + 1
         IF (IINODE.EQ.3) NODE = NNODES
         IF (NNODE.GT.1) THEN
            PCURV = PWDD(NODE,I)
            CALL CONVR2(NODE,CNODE)
            WROTIP = 'n='//CNODE
         ENDIF
         KCURVU = 1
C BEG JUN 2004
C        IF (I.EQ.1.AND.WXY7(2).NE.0.0) KCURVU = 2
         IF (I.EQ.1.AND.(WXY7(2).NE.0.0.OR.WXY8.NE.0.0.OR.WXY9.NE.0.))
     1                                  KCURVU = 2
C END JUN 2004
C23456789012345678901234567890123456789012345678901234567890123456789012

C BEG JUN 1996
         NLAY = NLAYER(I,ILOOP)
         IF (ISANDW(I,ILOOP).GT.1.AND.ISANDW(I,ILOOP).LT.NLAY) THEN
            CALL MOVER(0.,0,FNXLAY,1,180)
            CALL MOVER(0.,0,FNYLAY,1,180)
            CALL MOVER(0.,0,FNXYLA,1,180)
         ENDIF
C END JUN 1996
         DO 37 KCURV = 1,KCURVU
C BEG JUN 2004
            IF (KCURVU.EQ.2) THEN
               IF (KCURV.EQ.1) THEN
                  WXY8S = WXY8
                  WXY8 = 0.
                  WXY9S = WXY9
                  WXY9 = 0.
               ENDIF
               IF (KCURV.EQ.2) THEN
                  WXX8S = WXX8
                  WYY8S = WYY8
                  WXX8 = 0.
                  WYY8 = 0.
                  WXX9S = WXX9
                  WYY9S = WYY9
                  WXX9 = 0.
                  WYY9 = 0.
               ENDIF
            ENDIF
C END JUN 2004
            IF (KCURVU.EQ.2.AND.ITYPE.EQ.2.AND.IICHAN.EQ.0
     1                     .AND.NPRINT.GE.1.AND.NOMARG.EQ.0) THEN
               IF (KCURV.EQ.1) WRITE(IFILE,'(A,A)')
     1       '   Stresses from sinxsiny or cosxcosy deformations',
     1         ' (at peaks and valleys):'
               IF (KCURV.EQ.2) WRITE(IFILE,'(A,A)')
     1       '   Stresses from sinxcosy or cosxsiny deformations',
     1         ' (at nodal lines):'
            ENDIF
         NLAY = NLAYER(I,ILOOP)
C BEG JUN 1996
         Z = -TX0(I)/2. - UNBAL(I,1)
         IF (ILOOP.EQ.2) Z = -TY0(I)/2. - UNBAL(I,2)
C END JUN 1996
C BEG JUN 2004
C        IF (NPRT.GE.2) THEN
C           WRITE(8,'(A,2I5,1P,4E12.4)')
C    1    ' IN STRCON: ILOOP,I,Z,TX0(I),TY0(I),UNBAL(I,ILOOP)=',
C    1                 ILOOP,I,Z,TX0(I),TY0(I),UNBAL(I,ILOOP)
C           IF (KLAYER(I,ILOOP).GT.0) WRITE(8,'(A,/,1P,4E12.4)')
C    1    ' CX(1,4,I),CX(1,5,I),CX(2,4,I),CX(2,5,I)=',
C    1      CX(1,4,I),CX(1,5,I),CX(2,4,I),CX(2,5,I)
C        ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
C END JUN 2004
         ZSAVE = Z
         FACTR = 1.
         IF (ILOOP.EQ.2.AND.INTEXT(2).EQ.1) FACTR = -1.
         ZCOR = 0.5*H(ILOOP)*FACTR
         ITRIP = 0
         FACT = -1.
         EXADD = 0.
         EYADD = 0.
         CURCG4 = 0.
         CURCG5 = 0.
         CURCG6 = 0.
         WXXIMP = 0.
         WYYIMP = 0.
         WXYIMP = 0.
         CUR1M  = 0.
         CUR2M  = 0.
         CUR12M = 0.
C BEG JULY 1995
         CUR1M8 = 0.
         CUR2M8 = 0.
         CUR128 = 0.
C END JULY 1995
         EPST1A = 0.
         EPST2A = 0.
         EPT12A = 0.
         NODTST = 1
         IF (I.EQ.IWEBM) NODTST = 1
         IF (IINODE.EQ.NODTST) THEN
            IF (ILOOP.EQ.1.AND.STRRNG.EQ.'SKN') THEN
               WXXADD = 0.
               WYYADD = 0.
               WXYADD = 0.
C BEG OCT 1996
               WXXXAD = 0.
               WXXYAD = 0.
               WYYXAD = 0.
               WYYYAD = 0.
C END OCT 1996
               IF (ISTIF(2).NE.0) THEN
                  IF (ICD7.NE.0) THEN
                    IF (WXX7(KCURV).NE.0.) 
     1                  WXXADD = ABS(WXX9)*WXX7(KCURV)/ABS(WXX7(KCURV))
                    IF (WYY7(KCURV).NE.0.)
     1                  WYYADD = ABS(WYY9)*WYY7(KCURV)/ABS(WYY7(KCURV))
                    IF (WXY7(KCURV).NE.0.)
     1                  WXYADD = ABS(WXY9)*WXY7(KCURV)/ABS(WXY7(KCURV))
C BEG OCT 1996
                    IF (WXXX7(KCURV).NE.0.) 
     1               WXXXAD = ABS(WXXX9)*WXXX7(KCURV)/ABS(WXXX7(KCURV))
                    IF (WXXY7(KCURV).NE.0.)
     1               WXXYAD = ABS(WXXY9)*WXXY7(KCURV)/ABS(WXXY7(KCURV))
                    IF (WYYX7(KCURV).NE.0.)
     1               WYYXAD = ABS(WYYX9)*WYYX7(KCURV)/ABS(WYYX7(KCURV))
                    IF (WYYY7(KCURV).NE.0.)
     1               WYYYAD = ABS(WYYY9)*WYYY7(KCURV)/ABS(WYYY7(KCURV))
C END OCT 1996
                  ELSE
                    WXXADD = WXX9
                    WYYADD = WYY9
                    WXYADD = WXY9
C BEG OCT 1996
                    WXXXAD = WXXX9
                    WXXYAD = WXXY9
                    WYYXAD = WYYX9
                    WYYYAD = WYYY9
C END OCT 1996
                  ENDIF
                  IF (ISTIF(1).NE.0.AND.MIDEND.EQ.1) THEN
                     IF (ICD7.NE.0) THEN
                       IF (WXX7(KCURV).NE.0.) WXXADD = WXXADD
     1                         +ABS(WXX8)*WXX7(KCURV)/ABS(WXX7(KCURV))
                       IF (WYY7(KCURV).NE.0.) WYYADD = WYYADD
     1                         +ABS(WYY8)*WYY7(KCURV)/ABS(WYY7(KCURV))
                       IF (WXY7(KCURV).NE.0.) WXYADD = WXYADD
     1                         +ABS(WXY8)*WXY7(KCURV)/ABS(WXY7(KCURV))
C BEG OCT 1996
                       IF (WXXX7(KCURV).NE.0.) WXXXAD = WXXXAD
     1                     + ABS(WXXX8)*WXXX7(KCURV)/ABS(WXXX7(KCURV))
                       IF (WXXY7(KCURV).NE.0.) WXXYAD = WXXYAD
     1                     + ABS(WXXY8)*WXXY7(KCURV)/ABS(WXXY7(KCURV))
                       IF (WYYX7(KCURV).NE.0.) WYYXAD = WYYXAD
     1                     + ABS(WYYX8)*WYYX7(KCURV)/ABS(WYYX7(KCURV))
                       IF (WYYY7(KCURV).NE.0.) WYYYAD = WYYYAD
     1                     + ABS(WYYY8)*WYYY7(KCURV)/ABS(WYYY7(KCURV))
C END OCT 1996
                     ELSE
                       IF (ICD9.NE.0) THEN
                         IF (WXX9.NE.0.) WXXADD = WXXADD
     1                                       +ABS(WXX8)*WXX9/ABS(WXX9)
                         IF (WYY9.NE.0.) WYYADD = WYYADD
     1                                       +ABS(WYY8)*WYY9/ABS(WYY9)
                         IF (WXY9.NE.0.) WXYADD = WXYADD
     1                                       +ABS(WXY8)*WXY9/ABS(WXY9)
C BEG OCT 1996
                         IF (WXXX9.NE.0.) WXXXAD = WXXXAD
     1                                    +ABS(WXXX8)*WXXX9/ABS(WXXX9)
                         IF (WXXY9.NE.0.) WXXYAD = WXXYAD
     1                                    +ABS(WXXY8)*WXXY9/ABS(WXXY9)
                         IF (WYYX9.NE.0.) WYYXAD = WYYXAD
     1                                    +ABS(WYYX8)*WYYX9/ABS(WYYX9)
                         IF (WYYY9.NE.0.) WYYYAD = WYYYAD
     1                                    +ABS(WYYY8)*WYYY9/ABS(WYYY9)
C END OCT 1996
                       ELSE
                         WXXADD = WXX8
                         WYYADD = WYY8
                         WXYADD = WXY8
C BEG OCT 1996
                         WXXXAD = WXXX8
                         WXXYAD = WXXY8
                         WYYXAD = WYYX8
                         WYYYAD = WYYY8
C END OCT 1996
                       ENDIF
                     ENDIF
                  ENDIF
C  End of (ISTIF(1).NE.0.AND.MIDEND.EQ.1) condition
               ENDIF
C  End of (ISTIF(2).NE.0) condition.
               IF (ISTIF(2).EQ.0.AND.ISTIF(1).NE.0
     1                          .AND.MIDEND.EQ.1) THEN
                  IF (ICD7.NE.0) THEN
                    IF (WXX7(KCURV).NE.0.0)
     1                  WXXADD =ABS(WXX8)*WXX7(KCURV)/ABS(WXX7(KCURV))
                    IF (WYY7(KCURV).NE.0.0)
     1                  WYYADD =ABS(WYY8)*WYY7(KCURV)/ABS(WYY7(KCURV))
                    IF (WXY7(KCURV).NE.0.0)
     1                  WXYADD =ABS(WXY8)*WXY7(KCURV)/ABS(WXY7(KCURV))
C BEG OCT 1996
                    IF (WXXX7(KCURV).NE.0.) 
     1               WXXXAD = ABS(WXXX8)*WXXX7(KCURV)/ABS(WXXX7(KCURV))
                    IF (WXXY7(KCURV).NE.0.)
     1               WXXYAD = ABS(WXXY8)*WXXY7(KCURV)/ABS(WXXY7(KCURV))
                    IF (WYYX7(KCURV).NE.0.)
     1               WYYXAD = ABS(WYYX8)*WYYX7(KCURV)/ABS(WYYX7(KCURV))
                    IF (WYYY7(KCURV).NE.0.)
     1               WYYYAD = ABS(WYYY8)*WYYY7(KCURV)/ABS(WYYY7(KCURV))
C END OCT 1996
                  ELSE
                    WXXADD = WXX8
                    WYYADD = WYY8
                    WXYADD = WXY8
C BEG OCT 1996
                    WXXXAD = WXXX8
                    WXXYAD = WXXY8
                    WYYXAD = WYYX8
                    WYYYAD = WYYY8
C END OCT 1996
                  ENDIF
               ENDIF
               FMIDND = 1.0
               IF (MIDEND.EQ.2) FMIDND = 0.
               WXXIMP = (WXX7(KCURV)*FMIDND +WXXADD)*FACIMP
               WYYIMP = (WYY7(KCURV)*FMIDND +WYYADD)*FACIMP
               WXYIMP = (WXY7(KCURV)*FMIDND +WXYADD)*FACIMP
C BEG OCT 1996
               WXXXIP = (WXXX7(KCURV)*FMIDND +WXXXAD)*FACIMP
               WXXYIP = (WXXY7(KCURV)*FMIDND +WXXYAD)*FACIMP
               WYYXIP = (WYYX7(KCURV)*FMIDND +WYYXAD)*FACIMP
               WYYYIP = (WYYY7(KCURV)*FMIDND +WYYYAD)*FACIMP
C END OCT 1996
            ENDIF
C  End of (ILOOP.EQ.1.AND.STRRNG.EQ.'SKN') condition.
            IF (I.EQ.IWEBM.AND.I.GT.1) WXYIMP = WXY7(2)*FACIMP
C BEG OCT 1996
            IF (I.EQ.IWEBM.AND.I.GT.1) WXXYIP = WXXY7(2)*FACIMP
            IF (I.EQ.IWEBM.AND.I.GT.1) WYYXIP = WYYX7(2)*FACIMP
C END OCT 1996
C BEG SEP 1995
            IF (ILOOP.EQ.1.AND.IQUIK2.EQ.0) THEN
               IF (MIDEND.EQ.1) THEN
                  IF (ISTIF(2).NE.0) THEN
C BEG JUN 2004 following 4 commented out here, put near beginning
C                    DNEUX5= -CX(1,4,5)/CX(1,1,5)
C                    DNEUY5= -CX(2,5,5)/CX(2,2,5)
C                    DNUXY5= -CX(3,6,5)/CX(3,3,5)
C                    DNEUXY= -CS(3,6)/CS(3,3)
C END JUN 2004
C BEG NOV 2003
                     CUR1M = WXX9*FACIMP
                     IF (DNEUTX.NE.0.0)
     1               CUR1M= (WXX8*DNEUX5/DNEUTX +WXX9)*FACIMP
                     CUR2M= WYY9*FACIMP
                     IF (DNEUTY.NE.0.0)
     1               CUR2M= (WYY8*DNEUY5/DNEUTY +WYY9)*FACIMP
C END NOV 2003
                     CUR12M=(WXY8 + WXY9)*FACIMP
                     IF (IINODE.EQ.1.AND.JIMP.EQ.1.AND.KCURV.EQ.1) THEN
                        IF (ISTIF(1).NE.0) THEN
                           DELCRC = WYY8*FACIMP
                        ELSE
                           DELCRC = WYY7(1)*FACIMP
                        ENDIF
                     ENDIF
                  ELSE
                     CUR1M = WXX8*FACIMP
                     CUR2M = WYY8*FACIMP
                     CUR12M= WXY8*FACIMP
                  ENDIF
               ENDIF
               IF (MIDEND.EQ.2) THEN
                  IF (ISTIF(2).NE.0) THEN
                     CUR1M = WXX9*FACIMP
                     CUR2M = WYY9*FACIMP
                     CUR12M= WXY9*FACIMP
                  ELSE
                     CUR1M = 0.
                     IBOUND = FBOUND
                     IF (IBOUND.EQ.1) CUR1M = -WXX8*FACIMP
                     CUR2M = 0.
                     CUR12M= 0.
                  ENDIF
               ENDIF
               GO TO 1001
            ENDIF
C  End of (ILOOP.EQ.1.AND.IQUIK2.EQ.0) condition.
C END SEP 1995
            IF (MIDEND.EQ.1.AND.ILOOP.EQ.1.AND.WYY8.NE.0.) THEN
               WXXADD = 0.
               WYYADD = 0.
               WXYADD = 0.
               IF (ISTIF(2).NE.0.AND.ISTIF(1).NE.0) THEN
                  IF (WXX8.NE.0.) WXXADD = ABS(WXX9)*WXX8/ABS(WXX8)
                  IF (WYY8.NE.0.) WYYADD = ABS(WYY9)*WYY8/ABS(WYY8)
                  IF (WXY8.NE.0.) WXYADD = ABS(WXY9)*WXY8/ABS(WXY8)
               ENDIF
               IF (ISTIF(1).NE.0) THEN
C BEG JUN 2004 following 4 statements commented out, put near beginning
C                 DNEUX5= -CX(1,4,5)/CX(1,1,5)
C                 DNEUY5= -CX(2,5,5)/CX(2,2,5)
C                 DNUXY5= -CX(3,6,5)/CX(3,3,5)
C                 DNEUXY= -CS(3,6)/CS(3,3)
C END JUN 2004
                  IF (ISTIF(2).EQ.0) THEN
                     CUR1M= (WXX8 +WXXADD)*FACIMP
                     CUR2M= (WYY8 +WYYADD)*FACIMP
                     CUR12M=(WXY8 +WXYADD)*FACIMP
C BEG DEC 2000
                     IF (ISOGRD.EQ.1) THEN
                        CUR1M8 = CUR1M
                        CUR2M8 = CUR2M
                        CUR128 = CUR12M
                     ENDIF
C END DEC 2000
                  ELSE
C BEG NOV 2003
                     CUR1M= WXXADD*FACIMP
                     IF (DNEUTX.NE.0.0)
     1               CUR1M= (WXX8*DNEUX5/DNEUTX +WXXADD)*FACIMP
                     CUR2M= WYYADD*FACIMP
                     IF (DNEUTY.NE.0.0)
     1               CUR2M= (WYY8*DNEUY5/DNEUTY +WYYADD)*FACIMP
C END NOV 2003
C BEG JULY 1995
                     IF (IINODE.EQ.1.AND.JIMP.EQ.1) THEN
                        IF (KCURV.EQ.1) THEN
                           DELCRC = WYY8*FACIMP
                        ENDIF
                     ENDIF
                     IF (ISOGRD.EQ.0) THEN
                        CUR12M=(WXY8 +WXYADD)*FACIMP
                     ELSE
                        CUR1M8= (WXX8 +WXXADD)*FACIMP
                        CUR2M8= (WYY8 +WYYADD)*FACIMP
                        CUR128= (WXY8 +WXYADD)*FACIMP
C BEG NOV 2003
                        CUR12M= WXYADD*FACIMP
                        IF (DNEUXY.NE.0.0)
     1                  CUR12M=(WXY8*DNUXY5/DNEUXY +WXYADD)*FACIMP
C END NOV 2003
                     ENDIF
                  ENDIF
               ELSE
                  IF (ISTIF(2).NE.0) THEN
                     IF (IINODE.EQ.1.AND.JIMP.EQ.1) THEN
                        IF (KCURV.EQ.1) THEN
                           DELCRC = WYY7(1)*FACIMP
                        ENDIF
                     ENDIF
                  ENDIF
               ENDIF
            ENDIF
C  End of (MIDEND.EQ.1.AND.ILOOP.EQ.1, etc.) condition.
            IF (ILOOP.EQ.1.AND.CUR1M.EQ.0.0.AND.CUR2M.EQ.0.) THEN
               IF (MIDEND.EQ.1.OR.ISTIF(2).NE.0) THEN
                  CUR1M=  WXX9*FACIMP
                  CUR2M=  WYY9*FACIMP
                  CUR12M= WXY9*FACIMP
C BEG DEC 2000
                  IF (ISOGRD.EQ.1) THEN
                     CUR1M8 = CUR1M
                     CUR2M8 = CUR2M
                     CUR128 = CUR12M
                  ENDIF
C END DEC 2000
               ENDIF
            ENDIF
            IBOUND = FBOUND
            IF (MIDEND.EQ.2.AND.ISTIF(2).EQ.0.AND.IBOUND.EQ.1) THEN
               CUR1M  = -WXX8*FACIMP
               CUR2M  = 0.
               CUR12M = 0.
C BEG DEC 2000
               IF (ISOGRD.EQ.1) THEN
                  CUR1M8 = CUR1M
                  CUR2M8 = CUR2M
                  CUR128 = CUR12M
               ENDIF
C END DEC 2000
            ENDIF
C BEG SEP 1995
 1001       CONTINUE
C END SEP 1995
            IF (IINODE.EQ.1.AND.ILOOP.EQ.1.AND.JIMP.EQ.1) THEN
               IF (KCURV.EQ.1) THEN
                  DELCUR(1) = CUR1M
                  DELCUR(2) = CUR2M
C BEG SEP 1995
C                 IF (MIDEND.EQ.1.AND.ISTIF(2).NE.0)
                  IF (MIDEND.EQ.2.AND.ISTIF(2).NE.0)
C END SEP 1995
     1               DELCUR(2) = WYY9*FACIMP
                  DELCUR(3) = CUR12M
C                 WRITE(8,*)' DELCUR1,2,3=',
C    1                        DELCUR(1),DELCUR(2),DELCUR(3)
C                 WRITE(8,*)' DELCRC =',DELCRC
               ENDIF
            ENDIF
C END JULY 1995               
            IF (ILOOP.EQ.2.AND.ICD9.NE.0) THEN
               CUR1M=WYY9*FACIMP
               CUR2M = 0.0
               CUR12M= 0.0
C BEG JUN 2004
C              IF (I.EQ.ISTART.AND.NPRT.GE.2) THEN
C                 WRITE(8,'(A)')' CY(i,j,1)='
C                 CALL OUTCIJ(15,1,8,CY(1,1,1),TXDUM,ETHDUM)
C              ENDIF
C END JUN 2004
               IF (I.EQ.ISTART) THEN
                  DELSK1 = CY0(1,1,1)*DNEUTY*CUR1M
                  DELSK2 = CY0(1,2,1)*DNEUTY*CUR1M
                  DELSKN(1,1,2) = MIN(DELSKN(1,1,2),DELSK1)
                  DELSKN(2,1,2) = MIN(DELSKN(2,1,2),DELSK2)
                  DELSK1 = CY0(1,1,2)*DNEUTY*CUR1M
                  DELSK2 = CY0(1,2,2)*DNEUTY*CUR1M
                  DELSKN(1,2,2) = MIN(DELSKN(1,2,2),DELSK1)
                  DELSKN(2,2,2) = MIN(DELSKN(2,2,2),DELSK2)
C BEG JUN 2004
                  DELFCE(2,2) = DELSKN(1,2,2)
C END JUN 2004
               ENDIF
            ENDIF
C BEG JULY 1995
            IF (I.EQ.IWEBM.AND.ISTIF(ILOOP).NE.5) THEN
C END JULY 1995
               IF (ILOOP.EQ.1) THEN
                  EPST1A = DNEUTX*CUR1M
C BEG JUN 2004
C                 DNEUTP = -CX(2,5,5)/CX(2,2,5)
                  EPST2A = DNEUY5*CUR2M
                  EPST1X = (DNEUTX-DNEUX1)*CUR1M
                  EPST2X = (DNEUTY-DNEUY1)*CUR2M
C END JUN 2004
               ELSE
                  EPST1A = DNEUTY*CUR1M
C BEG JUN 2004
                  EPST1X = (DNEUTY-DNEUY1)*CUR1M
C END JUN 2004
                  FFNUM = CY(1,2,IWEBM)/CY(2,2,IWEBM)
                  EPST2A = -FFNUM*EPST1A
               ENDIF
            ENDIF
C BEG JULY 1995
            IF (I.EQ.IWEBP.AND.ISTIF(ILOOP).NE.5) THEN
C END JULY 1995
               IF (ILOOP.EQ.1) THEN
                  EPST1A = (H(1)+DNEUTX+0.5*TX0(2))*CUR1M
                  FFNUP = CX(1,2,IWEBP)/CX(2,2,IWEBP)
                  EPST2A = -FFNUP*EPST1A
                  IF (ISOGRD.EQ.0) THEN
                     ET4=CX(1,1,IWEBP)-CX(1,2,IWEBP)**2/CX(2,2,IWEBP)
                     DELFCE(IWEBP,1)= MIN(DELFCE(IWEBP,1),ET4*EPST1A)
C BEG JULY 1995
                     IF (IINODE.EQ.1.AND.JIMP.EQ.1.AND.KCURV.EQ.1)
     1                  DELFCX(1,IWEBP) = ET4*EPST1A
C                    WRITE(8,*)' IWEBP,DELFCX(1,IWEBP)=',
C    1                           IWEBP,DELFCX(1,IWEBP)
C END JULY 1995
                  ENDIF
C                 WRITE(8,*)' IN STRCON: IWEBP,DNEUTX,EPST1A,ET4=',
C    1                                   IWEBP,DNEUTX,EPST1A,ET4
C                 WRITE(8,*)' CUR1M,DELFCE(IWEBP,1)=',
C    1                        CUR1M,DELFCE(IWEBP,1)
               ELSE
                  EPST1A = (FACTR*(H(2)+0.5*TY0(2))+DNEUTY)*CUR1M
                  FFNUP = CY(1,2,IWEBP)/CY(2,2,IWEBP)
                  EPST2A = -FFNUP*EPST1A
                  ET4 = CY(1,1,IWEBP) - CY(1,2,IWEBP)**2/CY(2,2,IWEBP)
                  DELFCE(IWEBP,2)= MIN(DELFCE(IWEBP,2),ET4*EPST1A)
C BEG OCT 1998
C BEG JUN 2004    (The "if" condition is inappropriate and is cancelled out).
C                 IF (ISOGRD.EQ.0) THEN
C END JUN 2004
                     IF (IINODE.EQ.1.AND.JIMP.EQ.1.AND.KCURV.EQ.1)
     1                  DELFCR(1,IWEBP) = ET4*EPST1A
C BEG JUN 2004
C                 ENDIF
C END JUN 2004
C END OCT 1998
C                 WRITE(8,*)' IN STRCON: IWEBP,DNEUTY,EPST1A,ET4=',
C    1                                   IWEBP,DNEUTY,EPST1A,ET4
C                 WRITE(8,*)' CUR1M,FACTR,DELFCE(IWEBP,2)=',
C    1                        CUR1M,FACTR,DELFCE(IWEBP,2)
C BEG AUG 2006
C23456789012345678901234567890123456789012345678901234567890123456789012
                  IF (ICALL.EQ.4.AND.NPRT.GE.2) THEN
                     WRITE(8,'(A,/,A,/,1P,5E11.3)')
     1         ' Quantities used in computation of ring flange stress:',
     1         ' CUR1M,     DNEUTY,     FACTR,     EPST1A,     EPST2A=',
     1           CUR1M,     DNEUTY,     FACTR,     EPST1A,     EPST2A
                  ENDIF
C END AUG 2006
               ENDIF
            ENDIF
C  End of (I.EQ.IWEBP, etc.) condition
         ENDIF
C  End of (IINODE.EQ.NODTST) condition.
C BEG JULY 1995
C        IF (ILOOP.EQ.1.AND.I.EQ.1.AND.KCURV.EQ.1) THEN
         IF (ILOOP.EQ.1.AND.KCURV.EQ.1
     1          .AND.(I.EQ.1.OR.(I.EQ.IEND.AND.ISTIF(1).EQ.5))) THEN
            IF (I.EQ.1) THEN
               EPST1A = DNEUTX*CUR1M
               EPST2A = DNEUTY*CUR2M
C BEG JUN 2004
C              DNEUXY = -CS(3,6)/CS(3,3)
C END JUN 2004
               EPT12A = DNEUXY*CUR12M
C BEG JUN 2004
               EPST1X = (DNEUTX-DNEUX1)*CUR1M
               EPST2X = (DNEUTY-DNEUY1)*CUR2M
               EPT12X = (DNEUXY-DNUXY1)*CUR12M
C END JUN 2004
               ET11 = CX0(1,1,1) -CX0(1,2,1)**2/CX0(2,2,1)
               ET22 = CX0(2,2,1) -CX0(1,2,1)**2/CX0(1,1,1)
C BEG JUN 2004
               ET11X= CX(1,1,1) -CX(1,2,1)**2/CX(2,2,1)
               ET22X= CX(2,2,1) -CX(1,2,1)**2/CX(1,1,1)
C END JUN 2004
            ENDIF
            IF (I.EQ.IEND.AND.ISTIF(1).EQ.5) THEN
               EPST1A = (H(1) + DNEUTX)*CUR1M
               EPST2A = (H(1) + DNEUTY)*CUR2M
C BEG JUN 2004
C              DNEUXY = -CS(3,6)/CS(3,3)
C END JUN 2004
               EPT12A = (H(1) + DNEUXY)*CUR12M
               ET11 = CX0(1,1,3) -CX0(1,2,3)**2/CX0(2,2,3)
               ET22 = CX0(2,2,3) -CX0(1,2,3)**2/CX0(1,1,3)
C BEG JUN 2004
               EPST1X = EPST1A
               EPST2X = EPST2A
               EPT12X = EPT12A
               ET11X = ET11
               ET22X = ET22
C END JUN 2004
            ENDIF
C END JULY 1995
C BEG JUN 2004
C           DELSK1 = ET11*EPST1A
C           DELSK2 = ET22*EPST2A
            DELSK1 = ET11X*EPST1X
            DELSK2 = ET22X*EPST2X
C END JUN 2004
C BEG JULY 1995
C BEG JUN 2004
C           IF (I.EQ.1) DLSK12 = CX0(3,3,1)*EPT12A
            IF (I.EQ.1) DLSK12 = CX(3,3,1)*EPT12X
C           IF (NPRT.GE.2) THEN
C              DELSKX = DELSK1
C              DELSKY = DELSK2
C              DELSXY = DLSK12
C           ENDIF
            IF (I.EQ.IEND.AND.ISTIF(1).EQ.5) DLSK12 =CX(3,3,3)*EPT12X
C END JUN 2004
            IF (I.EQ.1) THEN
               DELSKN(1,1,1) = MIN(DELSKN(1,1,1),DELSK1)
               DELSKN(2,1,1) = MIN(DELSKN(2,1,1),DELSK2)
               DELSKN(3,1,1) = MAX(DELSKN(3,1,1),DLSK12)
C BEG JUN 2004
C              IF (NPRT.GE.2) THEN
C                 WRITE(8,'(A,/,3I5,1P,2E12.4)')
C    1          ' IINODE,JIMP,KCURV,DELSKN(1,1,1),DELSKN(2,1,1)=',
C    1            IINODE,JIMP,KCURV,DELSKN(1,1,1),DELSKN(2,1,1)
C              ENDIF
C END JUN 2004
            ENDIF
            IF (I.EQ.IEND.AND.ISTIF(1).EQ.5) THEN
               DELSKN(1,2,1) = MIN(DELSKN(1,2,1),DELSK1)
               DELSKN(2,2,1) = MIN(DELSKN(2,2,1),DELSK2)
               DELSKN(3,2,1) = MAX(DELSKN(3,2,1),DLSK12)
            ENDIF
            IF (IINODE.EQ.1.AND.JIMP.EQ.1) THEN
               IF (I.EQ.1) THEN
                  DELFCX(1,1) = DELSK1
                  DELFCX(2,1) = DELSK2
                  DELFCX(3,1) = DLSK12
C BEG JUN 2004
C                 IF (NPRT.GE.2) THEN
C                    WRITE(8,'(A,I3,1P,2E12.4)')
C    1             ' I,DELFCX(1,1),DELFCX(2,1)=',
C    1               I,DELFCX(1,1),DELFCX(2,1)
C                 ENDIF
C END JUN 2004
C BEG OCT 1998
                  DELFCR(2,1) =  0.0
                  DELFCR(1,1) =  DELFCX(2,1)
                  DELFCR(3,1) =  0.0
                  DELFCR(2,2) =  0.0
                  DELFCR(1,2) =  DELFCR(1,1)
                  DELFCR(3,2) =  0.0
C END OCT 1998
               ENDIF
               IF (I.EQ.IEND.AND.ISTIF(1).EQ.5) THEN
                  DELFCX(1,3) = DELSK1
                  DELFCX(2,3) = DELSK2
                  DELFCX(3,3) = DLSK12
               ENDIF
C              WRITE(8,*)' ICD7,ICD8,ICD9=',ICD7,ICD8,ICD9
C              WRITE(8,*)' JIMP,KCURV,CUR1M=',JIMP,KCURV,CUR1M
C              WRITE(8,*)' EPST1A,EPST2A,DNEUTX=',EPST1A,EPST2A,DNEUTX
C              WRITE(8,*)' DELSK1,DELSK2,DLSK12=',DELSK1,DELSK2,DLSK12
C              WRITE(8,*)' ET11,ET22=',ET11,ET22
            ENDIF
            IF (ISTIF(1).NE.5) THEN
               ET11 = CX0(1,1,2) -CX0(1,2,2)**2/CX0(2,2,2)
               ET22 = CX0(2,2,2) -CX0(1,2,2)**2/CX0(1,1,2)
C BEG JUN 2004
               ET11X= CX(1,1,2) -CX(1,2,2)**2/CX(2,2,2)
               ET22X= CX(2,2,2) -CX(1,2,2)**2/CX(1,1,2)
               DELSK1 = ET11X*EPST1X
               DELSK2 = ET22X*EPST2X
               DLSK12 = CX(3,3,2)*EPT12X
C END JUN 2004
               DELSKN(1,2,1) = MIN(DELSKN(1,2,1),DELSK1)
               DELSKN(2,2,1) = MIN(DELSKN(2,2,1),DELSK2)
               DELSKN(3,2,1) = MAX(DELSKN(3,2,1),DLSK12)
C BEG JUN 2004
C              IF (NPRT.GE.2) THEN
C                  WRITE(8,'(A,/,3I5,1P,2E12.4)')
C    1          ' IINODE,JIMP,KCURV,DELSKN(1,2,1),DELSKN(2,2,1)=',
C    1            IINODE,JIMP,KCURV,DELSKN(1,2,1),DELSKN(2,2,1)
C              ENDIF
               DELFCE(2,1) = DELSKN(1,2,1)
C END JUN 2004
               IF (IINODE.EQ.1.AND.JIMP.EQ.1) THEN
                  DELFCX(1,2) = DELSK1
                  DELFCX(2,2) = DELSK2
                  DELFCX(3,2) = DLSK12
C BEG JUN 2004
C                 IF (NPRT.GE.2) THEN
C                    WRITE(8,'(A,I3,1P,2E12.4)')
C    1             ' I,DELFCX(1,2),DELFCX(2,2)=',
C    1               I,DELFCX(1,2),DELFCX(2,2)
C                 ENDIF
C END JUN 2004
C BEG OCT 1998
                  ET11 = CY0(1,1,2) -CY0(1,2,2)**2/CY0(2,2,2)
                  ET22 = CY0(2,2,2) -CY0(1,2,2)**2/CY0(1,1,2)
C BEG JUN 2004
                  ET11X= CY(1,1,2) -CY(1,2,2)**2/CY(2,2,2)
                  ET22X= CY(2,2,2) -CY(1,2,2)**2/CY(1,1,2)
                  DELSK1 = ET11X*EPST2X
                  DELSK2 = ET22X*EPST1X
                  DLSK12 = -CY(3,3,2)*EPT12X
C END JUN 2004
                  DELFCR(1,2) = DELSK1
                  DELFCR(2,2) = 0.0
                  DELFCR(3,2) = 0.0
C END OCT 1998
               ENDIF
            ENDIF
C END JULY 1995
C           IF (NOMARG.EQ.1) THEN
C              DELSKN(1,1,1) = -ABS(DELSKN(1,1,1))
C              DELSKN(2,1,1) = -ABS(DELSKN(2,1,1))
C              DELSKN(3,1,1) =  ABS(DELSKN(3,1,1))
C              DELSKN(1,2,1) = -ABS(DELSKN(1,2,1))
C              DELSKN(2,2,1) = -ABS(DELSKN(2,2,1))
C              DELSKN(3,2,1) =  ABS(DELSKN(3,2,1))
C              RETURN
C           ENDIF
         ENDIF
C  End of (ILOOP.EQ.1.AND.KCURV.EQ.1
C    1    .AND.(I.EQ.1.OR.(I.EQ.IEND.AND.ISTIF(1).EQ.5))) condition
C
         EPSTT1 = EPSTOT(1,I,ILOOP) + EPST1A
         EPSTT2 = EPSTOT(2,I,ILOOP) + EPST2A
C BEG DEC 1995
C        IF (I.EQ.IWEB.AND.ILOOP.EQ.2.AND.INODE.EQ.NNODES) THEN
C BEG JUN 2004
C        IF (I.EQ.1.AND.ILOOP.EQ.1.AND.NPRT.GE.2) THEN
C         WRITE(IFILE,*)' IN STRCON: RING WEB TIP...'
C         WRITE(IFILE,*)' IN STRCON: PANEL SKIN...'
C         WRITE(IFILE,*)' I,ILOOP,EPSTOT1,EPSTOT2=',
C    1                    I,ILOOP,EPSTOT(1,I,ILOOP),EPSTOT(2,I,ILOOP)
C         WRITE(IFILE,*)' EPSTT1,EPST1A,EPSTT2,EPST2A=',
C    1                    EPSTT1,EPST1A,EPSTT2,EPST2A
C         WRITE(IFILE,*)' F7,F8,F9,FACIMP=     ',F7,F8,F9,FACIMP
C         WRITE(IFILE,*)' WXXIMP,WYYIMP,WXYIMP=',WXXIMP,WYYIMP,WXYIMP
C         WRITE(IFILE,*)' CUR1M,CUR2M,CUR12M=  ',CUR1M,CUR2M,CUR12M
C         WRITE(IFILE,*)' EPST1A,EPST2A,EPT12A=',EPST1A,EPST2A,EPT12A
C         WRITE(IFILE,*)' DNEUTX,DNEUTY=',DNEUTX,DNEUTY
C         WRITE(IFILE,*)' DELFCE(I,ILOOP)=',DELFCE(I,ILOOP)
C        ENDIF
C
C        IF (KLAYER(1,1).NE.0.AND.I.EQ.1.AND.ILOOP.EQ.1
C    1                                       .AND.ISTIF(1).EQ.0) THEN
C           DELSKN(1,1,1) = 0.
C           DELSKN(3,1,1) = 0.
C        ENDIF
C        IF (KLAYER(1,1).NE.0.AND.I.EQ.1.AND.ILOOP.EQ.1
C    1                                       .AND.ISTIF(2).EQ.0) THEN
C           DELSKN(2,1,1) = 0.
C           DELSKN(3,1,1) = 0.
C        ENDIF
C END JUN 2004
C END DEC 1995
C        WRITE(IFILE,*)' DELSKN(1,1,1),DELSKN(1,1,2)=',
C    1                   DELSKN(1,1,1),DELSKN(1,1,2)
C        WRITE(IFILE,*)' DELSKN(2,1,1),DELSKN(2,1,2)=',
C    1                   DELSKN(2,1,1),DELSKN(2,1,2)
C        WRITE(IFILE,*)' DELSKN(3,1,1),DELSKN(3,1,2)=',
C    1                   DELSKN(3,1,1),DELSKN(3,1,2)
C        WRITE(IFILE,*)' DELSKN(1,2,1),DELSKN(1,2,2)=',
C    1                   DELSKN(1,2,1),DELSKN(1,2,2)
C        WRITE(IFILE,*)' DELSKN(2,2,1),DELSKN(2,2,2)=',
C    1                   DELSKN(2,2,1),DELSKN(2,2,2)
C        WRITE(IFILE,*)' DELSKN(3,2,1),DELSKN(3,2,2)=',
C    1                   DELSKN(3,2,1),DELSKN(3,2,2)
         FACTHM = 1.
         JMAX = 1
         IF (I.NE.IWEB) THEN
            JMAX = 2
            IF (ILOOP.EQ.1) THEN
               CURCG4 = EPSLOD(4) +FIABT*ETHERM(4) + WXXIMP
               CURCG5 = EPSLOD(5) +FIABT*ETHERM(5) + PCURV + WYYIMP
            ELSE
               FACWXX = 1.0
               IF (B2(2).GT.0.0.AND.I.EQ.IWEBM.AND.INTEXT(2).EQ.1)
     1              FACWXX = FACTR
C BEG JULY 1995
C              CURCG4 = FACWXX*EPSLOD(5) +FIABT*ETHERM(5) + CURIM
               CURCG4 = FACWXX*EPSLOD(5) +FIABT*ETHERM(5) + CUR1M
C END JULY 1995
               CURCG5 = FACWXX*EPSLOD(4) +FIABT*ETHERM(4)
            ENDIF
            IF (ISOGRD.EQ.0.AND.I.GT.IWEB.AND.ISTIF(ILOOP).NE.5)
     1        CURCG5 = 0.
            IF (ILOOP.EQ.2.AND.ISTIF(2).EQ.1.AND.I.EQ.4)
     1         CURCG5=FACTR*WXXFLN
            CURCG6 = EPSLOD(6) +FIABT*ETHERM(6) + WXYIMP
         ENDIF
C
   28    CONTINUE
C BEG MAR 1995
C BEG JUN 1996
         KINDX = KCURV
         FSMULT = 0.5
C END JUN 1996
         IF (I.EQ.IWEB) THEN
            ITRIP = ITRIP + 1
C BEG JUN 1996
            KINDX = ITRIP
            FSMULT = 1.0
C END JUN 1996
            IF (ITRIP.EQ.1) THEN
             INODE = 1
             TLOCAL = TEMP(IWEBM,ILOOP)
            ENDIF
            IF (ITRIP.EQ.2) THEN
             INODE = NNODES
             TLOCAL = TEMP(IWEBP,ILOOP)
            ENDIF
C END MAR 1995
            EPST1A = 0.
            EPST2A = 0.
            IF (ITRIP.EQ.1) THEN
               IF (ILOOP.EQ.1) THEN
                  EPST1A = DNEUTX*CUR1M
C BEG JULY 1995
                  IF (IINODE.EQ.1.AND.KCURV.EQ.1
     1                           .AND.JIMP.EQ.1.AND.ISOGRD.EQ.0)
     1               DELWBX(1)=ET3X*EPST1A
C                 WRITE(8,*)' DELWBX(1)=',DELWBX(1)
C END JULY 1995
               ELSE
                  EPST1A = DNEUTY*CUR1M
C BEG OCT 1998
                  IF (IINODE.EQ.1.AND.KCURV.EQ.1.AND.JIMP.EQ.1)
     1               DELWBR(1)=ET3Y*EPST1A
C                 WRITE(8,'(A,1P,E12.4)')
C    1           ' In STRCON: DELWBR(1)=',DELWBR(1)
C END OCT 1998
               ENDIF
            ENDIF
            IF (ITRIP.EQ.2) THEN
               IF (ILOOP.EQ.1) THEN
                  EPST1A = (H(1)+DNEUTX+0.5*TX0(2))*CUR1M
                  IF (ISOGRD.EQ.0)
     1             DELFCE(IWEB,1)= MIN(DELFCE(IWEB,1),ET3X*EPST1A)
C BEG JULY 1995
                  IF (IINODE.EQ.1.AND.KCURV.EQ.1
     1                           .AND.JIMP.EQ.1.AND.ISOGRD.EQ.0)
     1               DELWBX(2)=ET3X*EPST1A
C                 WRITE(8,*)' DELWBX(2)=',DELWBX(2)
C END JULY 1995
C                 WRITE(8,*)' IN STRCON: IWEB,DNEUTX,EPST1A,ET3X=',
C    1                                   IWEB,DNEUTX,EPST1A,ET3X
C                 WRITE(8,*)' CUR1M,DELFCE(IWEB,1)=',
C    1                        CUR1M,DELFCE(IWEB,1)
               ELSE
                  EPST1A = (FACTR*(H(2)+0.5*TY0(2))+DNEUTY)*CUR1M
                  DELFCE(IWEB,2)= MIN(DELFCE(IWEB,2),ET3Y*EPST1A)
C BEG OCT 1998
                  IF (IINODE.EQ.1.AND.KCURV.EQ.1.AND.JIMP.EQ.1)
     1               DELWBR(2)=ET3Y*EPST1A
C                 WRITE(8,'(A,1P,E12.4)')
C    1           ' In STRCON: DELWBR(2)=',DELWBR(2)
C END OCT 1998
C                 WRITE(8,*)' IN STRCON: IWEB,DNEUTY,EPST1A,ET3Y=',
C    1                                   IWEB,DNEUTY,EPST1A,ET3Y
C                 WRITE(8,*)' CUR1M,DELFCE(IWEB,2)=',
C    1                        CUR1M,DELFCE(IWEB,2)
               ENDIF
            ENDIF
C           WRITE(IFILE,*)' FOR IWEB: EPST1A,EPST2A=',EPST1A,EPST2A
            ILOOP3 = ILOOP + 3
            IF (ILOOP.EQ.1) THEN
                C22 = CX(2,2,IWEB)
                FFNU = CX(1,2,IWEB)/CX(2,2,IWEB)
                IF (IMTEMP.EQ.1.AND.
     1              TEMP(IWEBM,ILOOP).NE.TEMP(IWEBP,ILOOP)) THEN
                  C11 = CX3(1,1,INODE)
                  C12 = CX3(1,2,INODE)
                  C22 = CX3(2,2,INODE)
                  NU12= C12/C22
                  FACTHM = 0.
                  IF (INODE.EQ.1)  THEN
C BEG JUN 1996
                     ZBAR = -0.5*TX0(IWEBM) - UNBAL(1,1)
C END JUN 1996
                     ZCOR = -(ZPARTX(IWEB) - ZBAR)
                  ENDIF
                  IF (INODE.EQ.NNODES) THEN
C BEG JUN 1996
                     ZBAR = -(0.5*TX0(IWEBM)+UNBAL(1,1) + H(1))
C END JUN 1996
                     ZCOR =  (ZPARTX(IWEB) - ZBAR)
                  ENDIF
                  EPSF1= ETHERM(1) - ZBAR*ETHERM(4)
     1                 + ETRMX3(1,INODE) - ESMRX3(1,INODE)
                  EPSF2= THRMX3(2,INODE)/C22 - NU12*EPSF1
                  EPSTT1 = EPSTOT(1,I,1) - EPSFIX(1,I,1) + EPSF1
                  EPSTT2 = EPSTOT(2,I,1) - EPSFIX(2,I,1) + EPSF2
                  FFNU = NU12
                ENDIF
            ENDIF
            IF (ILOOP.EQ.2) THEN
                FFNU = CY(1,2,IWEB)/CY(2,2,IWEB)
                IF (IMTEMP.EQ.1.AND.
     1              TEMP(IWEBM,ILOOP).NE.TEMP(IWEBP,ILOOP)) THEN
                  C11 = CY3(1,1,INODE)
                  C12 = CY3(1,2,INODE)
                  C22 = CY3(2,2,INODE)
                  NU12= C12/C22
                  FACTHM = 0.
                  IF (INODE.EQ.1) THEN
C BEG JUN 1996
                     ZBAR = -0.5*TY0(IWEBM) - UNBAL(1,1)
C END JUN 1996
                     ZCOR = -(ZPARTY(IWEB) - FACTR*ZBAR)
                  ENDIF
                  IF (INODE.EQ.NNODES) THEN
C BEG JUN 1996
                     ZBAR = -(0.5*TY0(IWEBM)+UNBAL(1,1) + H(2))
C END JUN 1996
                     ZCOR =  (ZPARTY(IWEB) - FACTR*ZBAR)
                  ENDIF
                  EPSF1= ETHERM(2) - ZBAR*ETHERM(5)
     1                 + ETRMY3(1,INODE) - ESMRY3(1,INODE)
                  EPSF2= THRMY3(2,INODE)/C22 - NU12*EPSF1
                  EPSTT1 = EPSTOT(1,I,2) - EPSFIX(1,I,2) + EPSF1
                  EPSTT2 = EPSTOT(2,I,2) - EPSFIX(2,I,2) + EPSF2
                  FFNU = NU12
                ENDIF
            ENDIF
            EXADD=FACT*ZCOR*(EPSLOD(ILOOP3)+FACTHM*FIABT*ETHERM(ILOOP3))
     1            +EPST1A
C           WRITE(IFILE,*)' EXADD=',EXADD
            EYADD = -EXADD*FFNU
         ENDIF
C End of (I.EQ.IWEB) condition.
C REFERENCE SURFACE STRAIN COMPONENTS...
         EX = EPSTT1 + EXADD
         EY = EPSTT2 + EYADD
         EXY= EPSTOT(3,I,ILOOP) + EPT12A
         EPSRNG(INODE) = 0.
         IF (IMOD.EQ.0.AND.MIDEND.EQ.1
     1                .AND.ILOOP.EQ.2.AND.I.EQ.IWEB) THEN
            EPSRNG(INODE) = EX
            IF (INODE.EQ.1) EPSRUT = EPSRNG(INODE)
            IF (INODE.EQ.NNODES) EPSTIP = EPSRNG(INODE)
         ENDIF
C BEG DEC 1995
C        IF (I.EQ.IWEB.AND.ILOOP.EQ.2.AND.INODE.EQ.NNODES) THEN
C           WRITE(8,*)' IN STRCON: RING WEB TIP DATA...'
C           WRITE(8,*)' FACT,ZCOR=',FACT,ZCOR
C           WRITE(8,*)' ILOOP3, EPSLOD(ILOOP3)=',ILOOP3,EPSLOD(ILOOP3)
C           WRITE(8,*)' EPST1A,EPST2A=',EPST1A,EPST2A
C           WRITE(8,*)' EXADD,EYADD  =',EXADD,EYADD
C           WRITE(8,*)' EPSTT1,EPSTT2=',EPSTT1,EPSTT2
C           WRITE(8,*)' EPSTOT(3,I,ILOOP),EPT12A=',
C    1                  EPSTOT(3,I,ILOOP),EPT12A
C           WRITE(8,*)' EX,EY,EXY=',EX,EY,EXY
C        ENDIF
C END DEC 1995
C
         DO 30 J = 1,NLAY
            IF (NOMARG.EQ.1) GO TO 30
C
            K = LTYPE(J,I,ILOOP)
            IF (T(K).EQ.0.) GO TO 30
            IF (J.EQ.1) Z = Z + T(K)/2.
            IF (J.GT.1) THEN
               J1 = J - 1
               K1 = LTYPE(J1,I,ILOOP)
               Z = Z + (T(K1) + T(K))/2.
            ENDIF
            M = MATL(K)
            MMAX = MAX(MMAX,M)
C BEG MAR 1995
C   STATEMENTS WITH "E1MOD =...", ETC MOVED DOWN WITHIN "DO 29.." LOOP
C END MAR 1995
            DO 29 JSUB = 1,JMAX
               Z1 = Z
               IF (JSUB.EQ.1.AND.JMAX.EQ.2) Z1 = Z - T(K)/2.
               IF (JSUB.EQ.2) Z1 = Z + T(K)/2.
C BEG MAR 1995
C23456789012345678901234567890123456789012345678901234567890123456789012
               IF (IMTEMP.NE.0.AND.ISTIF(1).NE.5.AND.I.LE.IWEBM
     1                        .AND.TEMP(2,ILOOP).NE.TEMP(1,ILOOP)) THEN
C BEG JUN 1996
                  ZDEEP = Z1 + UNBAL(I,ILOOP)
C END JUN 1996
                  BCOEF = 0.5*(TEMP(1,ILOOP) + TEMP(2,ILOOP))
C BEG JUN 1996
                  ACOEF =(TEMP(2,ILOOP) - BCOEF)/(ZSAVE+UNBAL(I,ILOOP))
C END JUN 1996
                  TLOCAL = ACOEF*ZDEEP + BCOEF
                  DO 23 INPROP = 1,15
                     CALL PROPNO(ISOMAT(M),ISOEFF(M),INPROP,IPROP)
                     CALL INTERP(IFILE,10,TEMPJ(1,IPROP,M),
     1                  FTEMPJ(1,IPROP,M),TLOCAL,FACTOR(INPROP,M))
C           WRITE(8,*)' M,IPROP,TEMPJ(1,IPROP,M),TEMPJ(2,IPROP,M)=',
C    1                  M,IPROP,TEMPJ(1,IPROP,M),TEMPJ(2,IPROP,M)
C           WRITE(8,*)' M,IPROP,FTEMPJ(1,IPROP,M),FTEMPJ(2,IPROP,M)=',
C    1                  M,IPROP,FTEMPJ(1,IPROP,M),FTEMPJ(2,IPROP,M)
C           WRITE(8,*)' INODE,INPROP,IPROP,M,TLOCAL,FACTOR(INPROP,M)=',
C    1                  INODE,INPROP,IPROP,M,TLOCAL,FACTOR(INPROP,M)
   23             CONTINUE
               ELSE
                  IF (I.NE.IWEB) TLOCAL = TEMP(I,ILOOP)
                  CALL MOVER(FMULT(1,M,I,1),1,FACTOR(1,M),1,20)
               ENDIF
C
C23456789012345678901234567890123456789012345678901234567890123456789012
               IF (IMTEMP.NE.0.AND.I.EQ.IWEB
     1                .AND.TEMP(IWEBM,ILOOP).NE.TEMP(IWEBP,ILOOP)) THEN
                  DO 21 INPROP = 1,15
                     CALL PROPNO(ISOMAT(M),ISOEFF(M),INPROP,IPROP)
                     CALL INTERP(IFILE,10,TEMPJ(1,IPROP,M),
     1                  FTEMPJ(1,IPROP,M),TLOCAL,FACTOR(INPROP,M))
C           WRITE(8,*)' M,IPROP,TEMPJ(1,IPROP,M),TEMPJ(2,IPROP,M)=',
C    1                  M,IPROP,TEMPJ(1,IPROP,M),TEMPJ(2,IPROP,M)
C           WRITE(8,*)' M,IPROP,FTEMPJ(1,IPROP,M),FTEMPJ(2,IPROP,M)=',
C    1                  M,IPROP,FTEMPJ(1,IPROP,M),FTEMPJ(2,IPROP,M)
C           WRITE(8,*)' INODE,INPROP,IPROP,M,TLOCAL,FACTOR(INPROP,M)=',
C    1                  INODE,INPROP,IPROP,M,TLOCAL,FACTOR(INPROP,M)
   21             CONTINUE
               ENDIF
               E1MOD = E1(M)*FACTOR(1,M)
               E2MOD = E2(M)*FACTOR(2,M)
               GMOD  =  G(M)*FACTOR(3,M)
               FUMOD = FNU(M)*FACTOR(4,M)
               A1T=ALPHA1(M)*FACTOR(7,M)
     1                   *(-CURETP(M)+TLOCAL)
               A2T=ALPHA2(M)*FACTOR(8,M)
     1                   *(-CURETP(M)+TLOCAL)
               EREDUC(1,M) = EALLOW(1,M)*FACTOR( 9,M)
               EREDUC(2,M) = EALLOW(2,M)*FACTOR(10,M)
               EREDUC(3,M) = EALLOW(3,M)*FACTOR(11,M)
               EREDUC(4,M) = EALLOW(4,M)*FACTOR(12,M)
               EREDUC(5,M) = EALLOW(5,M)*FACTOR(13,M)
               IF (IMOD.EQ.0)
     1            CALL NEWMAX(M,K,T,TAPE,DEGRAD,EREDUC,EALLST(1,M))
               ICRACK = 0
               IF (TAPE(M).GT.0.) ICRACK = 1
C END MAR 1995
C  STRAIN COMPONENTS THRU THICKNESS OF PANEL SKIN...
               EPSX = EX - Z1*CURCG4
               EPSY = EY - Z1*CURCG5
               EPSXY= EXY+ 2.*Z1*CURCG6
C BEG OCT 1996
               IF (ILOOP.EQ.1.AND.I.EQ.1.AND.J.EQ.1
     1           .AND.ISANDW(1,1).GT.1.AND.ISANDW(1,1).LT.NLAY) THEN
                  E1CRCH = 0.5*(TX(I)-TXFF1(I)) + DBEND1(I,1)
                  E2CRCH = 0.5*(TX(I)-TXFF1(I)) + DBEND2(I,1)
                  CRUNCH =  CXFF1(1,1,I)*E1CRCH*CURCG4**2
     1                    + CXFF1(1,2,I)*(E1CRCH+E2CRCH)*CURCG4*CURCG5
     1                    + CXFF1(2,2,I)*E2CRCH*CURCG5**2
                  CRUSH2 = MAX(ABS(CRUNCH),CRUSH2)
C                 WRITE(8,'(A,/,1P,6E12.4)')
C    1  ' STRCON:CURCG4,CURCG5,DBEND1(I,1),CRUSH(1,1),CRUNCH,CRUSH2=',
C    1           CURCG4,CURCG5,DBEND1(I,1),CRUSH(1,1),CRUNCH,CRUSH2
                  QX22 = ABS(CX(4,4,I)*WXXXIP
     1                  + (CX(4,5,I)+2.*CX(6,6,I))*WYYXIP
     1                  + 3.*CX(4,6,I)*WXXYIP +CX(5,6,I)*WYYYIP)/TX(1)
     1                  +ABS(CX(4,4,I)*WXXXGL/TX(1))
                  QY22 = ABS(CX(5,5,I)*WYYYIP
     1                  + (CX(4,5,I)+2.*CX(6,6,I))*WXXYIP
     1                  + CX(4,6,I)*WXXXIP +3.*CX(5,6,I)*WYYXIP)/TX(1)
     1                  +ABS(CX(5,5,I)*WYYYGL/TX(1))
                  QX2 = MAX(QX2,QX22)
                  QY2 = MAX(QY2,QY22)
C                 WRITE(8,'(A,/,1P,6E12.4)')
C    1  ' STRCON: WXXXIP,WXXYIP,WYYXIP,WYYYIP,WXXXGL,WYYYGL=',
C    1            WXXXIP,WXXYIP,WYYXIP,WYYYIP,WXXXGL,WYYYGL
C                 WRITE(8,'(A,I3,/,1P,5E12.4)')
C    1  '      I, CX(4,4,I),CX(4,5,I),CX(5,5,I),CX(6,6,I),TX(1)=',
C    1         I, CX(4,4,I),CX(4,5,I),CX(5,5,I),CX(6,6,I),TX(1)
C                 WRITE(8,'(A,1P,4E12.4)')
C    1          ' QX2,QX22,QY2,QY22=',QX2,QX22,QY2,QY22
               ENDIF
C END OCT 1996
C     IF (ILOOP.EQ.2) THEN
C        WRITE(8,*)' I,J,JMAX,JSUB,K,M,ILOOP3=',
C    1               I,J,JMAX,JSUB,K,M,ILOOP3
C        WRITE(8,*)' Z1,CURCG4,CURCG5,CURCG6=',
C    1               Z1,CURCG4,CURCG5,CURCG6
C        WRITE(8,*)' EX,EY,EXY=',EX,EY,EXY
C        WRITE(8,*)' EPSX,EPXY,EPSXY=',EPSX,EPXY,EPSXY
C        WRITE(8,*)' FACT,ZCOR,FACTHM,FIABT,FFNU=',
C    1               FACT,ZCOR,FACTHM,FIABT,FFNU
C        WRITE(8,*)' EPSLOD(4),EPSLOD(5),ETHERM(4),ETHERM(5)=',
C    1               EPSLOD(4),EPSLOD(5),ETHERM(4),ETHERM(5)
C        WRITE(8,*)' EXADD,EYADD,EPSF1,EPSF2,EPSTT1,EPSTT2=',
C    1               EXADD,EYADD,EPSF1,EPSF2,EPSTT1,EPSTT2
C     ENDIF
C
             IF (ISOGRD.EQ.0.OR.ILOOP.EQ.2
     1                 .OR.(ILOOP.EQ.1.AND.I.LT.IWEB)) THEN
C
C BEG JUN 1996
C              WRITE(8,*)' J,KINDX,FNXLAY(J,KINDX)=',
C    1                     J,KINDX,FNXLAY(J,KINDX)
C END JUN 1996
               CALL STRAIN(FMAX,ILOOP,I,J,EPSX,EPSY,EPSXY,ANGLE(K),
     1          EALLST(1,M),ICONST,CONSTR,WORDB,IADDB,FSSTR,A1T,A2T,
     1          E1MOD,E2MOD,GMOD,FUMOD,IMOD,IPOINC,INUMTT,
     1          CRACK(J,I,ILOOP),ICRACK,ICHANG,STRRNG,IFILE,NPRINT,MODE,
     1          ITYPE,M,IICHAN,MIDEND,IBEG,EMIN(1,M),Z1,ITRIP,WROTIP,
C BEG JUN 1996
     1          POSI(1,M),POSIP(1,M),FSMULT,T(K),NLAY,
C BEG OCT 1996
     1          FNXLAY(J,KINDX),FNYLAY(J,KINDX),FNXYLA(J,KINDX),
     1          SIGXX(IINODE,KINDX,JSUB),SIGYY(IINODE,KINDX,JSUB),
     1          SIGXY(IINODE,KINDX,JSUB),ICAND(M))
C END OCT 1996
C              WRITE(8,*)' J,KINDX,FNXLAY(J,KINDX)=',
C    1                     J,KINDX,FNXLAY(J,KINDX)
C END JUN 1996
C
             ELSE
               THETA = 30.*PI/180.
               IF (ISOANG.EQ.2) THETA = 60.*PI/180.
               STHET = SIN(THETA)
               CTHET = COS(THETA)
               DO 114 ISOSTF = 1,3
                  IF (ISOSTF.EQ.2) STHET = -STHET
                  IF (ISOSTF.EQ.3) THEN
                     IF (ISOANG.EQ.1) THEN
                        STHET = 1.0
                        CTHET = 0
                     ELSE
                        STHET = 0.
                        CTHET = 1.
                     ENDIF
                  ENDIF
                  CTHET2 = CTHET*CTHET
                  SCTHET = STHET*CTHET
                  STHET2 = STHET*STHET
                  EXADD = 0.
                  EYADD = 0.
C BEG JULY 1995
C                 CURM1A = CUR1M*CTHET2 +CUR2M*STHET2
C                 CURM1B = CUR12M*SCTHET
                  CURM1A = CUR1M8*CTHET2 +CUR2M8*STHET2
                  CURM1B = CUR128*SCTHET
C END JULY 1995
C BEG DEC 1995
                 RMS = SQRT(CURM1A**2 + CURM1B**2)
                 SUM = ABS(EYA + EYB)
                 RAT = 1.0
                 IF (RMS.GT.0.0) RAT = SUM/RMS
C END DEC 1995
                  EABMAX = MAX(ABS(CURM1A),ABS(CURM1B))
                  DIFF = 0.0
                  IF (EABMAX.GT.0.) DIFF=ABS(ABS(CURM1A)-EABMAX)/EABMAX
                  EFACT = -1.0
C BEG DEC 1995
                  IF (DIFF.LT.0.000001) THEN
C END DEC 1995
                   IF (ABS(CURM1A).GT.0.0) EFACT=CURM1A/ABS(CURM1A)
                  ELSE
                   IF (ABS(CURM1B).GT.0.0) EFACT=CURM1B/ABS(CURM1B)
                  ENDIF
                  CURM1 = EFACT*RMS
                  EPST1A = 0.
                  EPST2A = 0.
                  FMULTT = 1.
                  IF (I.EQ.IWEB) FMULTT = 0.
                  IF (I.EQ.IWEB.AND.ITRIP.EQ.1) THEN
C BEG JULY 1995
                     EPST1A = DNEUX5*CURM1
C END JULY 1995
                  ENDIF
                  IF (I.EQ.IWEBP.OR.(I.EQ.IWEB.AND.ITRIP.EQ.2)) THEN
C BEG JULY 1995
                     EPST1A = (H(1)+DNEUX5+0.5*TX0(2))*CURM1
C END JULY 1995
                     ET34 = ET3X
                     IF (I.EQ.IWEBP)
     1                ET34=CX(1,1,IWEBP)-CX(1,2,IWEBP)**2/CX(2,2,IWEBP)
                     DELISO(I,ISOSTF)=MIN(DELISO(I,ISOSTF),ET34*EPST1A)
C                    WRITE(8,*)' IN STRCON: I,ISOSTF,ET34=',
C    1                                      I,ISOSTF,ET34
C                    WRITE(8,*)' CURM1,DELISO(I,ISOSTF)=',
C    1                           CURM1,DELISO(I,ISOSTF)
                     IF (I.EQ.IWEBP) THEN
                        FFNUP = CX(1,2,IWEBP)/CX(2,2,IWEBP)
                        EPST2A = -FFNUP*EPST1A
                     ENDIF
                  ENDIF
C                 WRITE(IFILE,*)' ISO: EPST1A,EPST2A,CURM1=',
C    1                                 EPST1A,EPST2A,CURM1
                  EPSTT1 = ESTOT(1,I,ISOSTF) + EPST1A*FMULTT
                  EPSTT2 = ESTOT(2,I,ISOSTF) + EPST2A*FMULTT
                  IF (I.EQ.IWEB) THEN
                     CUR1 = EPSLOD(4)*CTHET2 +EPSLOD(5)*STHET2
     1                                       +EPSLOD(6)*SCTHET
                     EPS1T= ETHERM(1)*CTHET2 +ETHERM(2)*STHET2
     1                                       +ETHERM(3)*SCTHET
                     CUR1T= ETHERM(4)*CTHET2 +ETHERM(5)*STHET2
     1                                       +ETHERM(6)*SCTHET
                     EXADD=FACT*ZCOR*(CUR1 +FACTHM*FIABT*CUR1T)
     1                     + EPST1A
                     EYADD = -EXADD*FFNU
C                    WRITE(IFILE,*)' ISO: CUR1,EXADD,EYADD =',
C    1                                    CUR1,EXADD,EYADD
                     EPSF1= EPS1T - ZBAR*CUR1T
     1                    + ETRMX3(1,INODE) - ESMRX3(1,INODE)
                     EPSF2= THRMX3(2,INODE)/C22 - NU12*EPSF1
                     EPSTT1 =ESTOT(1,I,ISOSTF)-ESFIX(1,I,ISOSTF)+EPSF1
                     EPSTT2 =ESTOT(2,I,ISOSTF)-ESFIX(2,I,ISOSTF)+EPSF2
                  ENDIF
                  EX = EPSTT1 + EXADD
                  EY = EPSTT2 + EYADD
                  EXY= ESTOT(3,IWEB,ISOSTF)
C                 WRITE(IFILE,*)' EPSTT1,EPSTT2,EXY=',EPSTT1,EPSTT2,EXY
                  CUR1 = 0.
                  FNUFLN = 0.
                  IF (I.EQ.IWEBP) THEN
                    CUR1 = CURCG4*CTHET2 +CURCG5*STHET2 +CURCG6*SCTHET
                    FNUFLN = CX(1,2,IWEBP)/CX(2,2,IWEBP)
                  ENDIF
                  EPSX = EX - Z1*CUR1
                  EPSY = EY + Z1*CUR1*FNUFLN
                  EPSXY= EXY
C
                  CALL STRAIN(FMAX,ILOOP,I,J,EPSX,EPSY,EPSXY,ANGLE(K),
     1             EALLST(1,M),ICONST,CONSTR,WORDB,IADDB,FSSTR,A1T,A2T,
     1             E1MOD,E2MOD,GMOD,FUMOD,IMOD,IPOINC,INUMTT,
     1             CRACK(J,I,ILOOP),ICRACK,ICHANG,STRRNG,IFILE,NPRINT,
     1             MODE,ITYPE,M,IICHAN,MIDEND,IBEG,EMIN(1,M),Z1,ITRIP,
C BEG JUN 1996
     1             WROTIP,POSI(1,M),POSIP(1,M),FSMULT,T(K),NLAY,
C BEG OCT 1996
     1             FNXLAY(J,KINDX),FNYLAY(J,KINDX),FNXYLA(J,KINDX),
     1             SIGXX(IINODE,KINDX,JSUB),SIGYY(IINODE,KINDX,JSUB),
     1             SIGXY(IINODE,KINDX,JSUB),ICAND(M))
C END OCT 1996
C END JUN 1996
  114          CONTINUE
C
             ENDIF
C
   29       CONTINUE
C
   30    CONTINUE
C END OF LOOP OVER LAYERS
C
C BEG JUN 2004
C Next, check for stresses at tip and root of substiffeners..
C     WRITE(8,'(A,I5)')' NPRT=',NPRT
C     IF (NPRT.GE.2) WRITE(8,'(A,5I5)')
C    1' ILOOP,I,NOMARG,KCURV,KLAYER(1,1)=',
C    1  ILOOP,I,NOMARG,KCURV,KLAYER(1,1)
      IF (ILOOP.EQ.1.AND.I.EQ.1
     1              .AND.KCURV.EQ.1.AND.KLAYER(1,1).NE.0) THEN
         MATLXM = 0
         ISUBUP = 2
         IF (ISOSUB(1,I,ILOOP).NE.0) ISUBUP = 1
         DO 36 ISUBST = 1,ISUBUP
            MATLX = MATSUB(ISUBST,I,ILOOP)
            MATLXM = MAX(MATLX,MATLXM)
	    IF (MATLX.EQ.0) GO TO 36
            FSIGN = 1.0
            IF (NSURF(ISUBST,I,ILOOP).EQ.0) FSIGN = -1.0
            Z1 = FSIGN*(TX0(1)/2. + HSUB(ISUBST,I,ILOOP))
            Z2 = FSIGN*TX0(1)/2.
            ANGLEX = ABS(THSUB(ISUBST,I,ILOOP))
            IF (ISOSUB(ISUBST,I,ILOOP).EQ.0) THEN
              IF (ANGLEX.LT.10.) EPSTIP = EX - Z1*CURCG4
              IF (ANGLEX.GT.80.) EPSTIP = EY - Z1*CURCG5
              IF (ANGLEX.LT.10.) EPSRUT = EX - Z2*CURCG4
              IF (ANGLEX.GT.80.) EPSRUT = EY - Z2*CURCG5
              IF (ANGLEX.LT.10.) EPSMEM = EPSTOT(1,1,1)
              IF (ANGLEX.GT.80.) EPSMEM = EPSTOT(2,1,1)
              STRTIP = E1(MATLX)*EPSTIP
              STRRUT = E1(MATLX)*EPSRUT
              STRMEM = E1(MATLX)*EPSMEM
C             IF (IINODE.EQ.1.AND.JIMP.EQ.1) THEN
C               FCEAVE = 0.5*HSUB(ISUBST,I,ILOOP)*(STRTIP + STRRUT)
C    1                  *TSUB(ISUBST,I,ILOOP)/BSUB(ISUBST,I,ILOOP)
C               FCEMEM = HSUB(ISUBST,I,ILOOP)*STRMEM
C    1                  *TSUB(ISUBST,I,ILOOP)/BSUB(ISUBST,I,ILOOP)
C               IF (NPRT.GE.2) WRITE(8,'(A,/,I3,1P,4E12.4)')
C    1        ' ISUBST,ANGLEX,FCEAVE,FCEMEM,DELFCX(1,1)=',
C    1          ISUBST,ANGLEX,FCEAVE,FCEMEM,DELFCX(1,1)
C23456789012345678901234567890123456789012345678901234567890123456789012
C               IF (ANGLEX.LT.10.) THEN
C                  XSIGN = SIGN(1.,DELSKN(1,1,1))
C                  DELSKN(1,1,1) = DELSKN(1,1,1) - XSIGN*(FCEAVE-FCEMEM)
C                  XSIGN = SIGN(1.,DELSKN(1,2,1))
C                  DELSKN(1,2,1) = DELSKN(1,2,1) - XSIGN*(FCEAVE-FCEMEM)
C                  XSIGN = SIGN(1.,DELFCX(1,1))
C                  DELFCX(1,1) = DELFCX(1,1) - XSIGN*(FCEAVE-FCEMEM)
C                  XSIGN = SIGN(1.,DELFCX(1,2))
C                  DELFCX(1,2) = DELFCX(1,2) - XSIGN*(FCEAVE-FCEMEM)
C                  DELFCE(2,1) = DELSKN(1,2,1)
C               ENDIF
C               IF (ANGLEX.GT.80.) THEN
C                  XSIGN = SIGN(1.,DELSKN(2,1,1))
C                  DELSKN(2,1,1) = DELSKN(2,1,1) - XSIGN*(FCEAVE-FCEMEM)
C                  XSIGN = SIGN(1.,DELSKN(2,2,1))
C                  DELSKN(2,2,1) = DELSKN(2,2,1) - XSIGN*(FCEAVE-FCEMEM)
C                  XSIGN = SIGN(1.,DELFCX(2,1))
C                  DELFCX(2,1) = DELFCX(2,1) - XSIGN*(FCEAVE-FCEMEM)
C                  XSIGN = SIGN(1.,DELFCX(2,2))
C                  DELFCX(2,2) = DELFCX(2,2) - XSIGN*(FCEAVE-FCEMEM)
C                  DELFCE(2,2) = DELSKN(2,2,1)
C                  DELFCR(1,1) = DELFCX(2,1)
C                  DELFCR(1,2) = DELFCR(1,1)
C               ENDIF
C               IF (NPRT.GE.2) THEN
C                  WRITE(8,'(A,/,1P,4E12.4)')
C    1          ' DELSKN(1,1,1),DELSKN(1,2,1),DELFCX(1,1),DELFCX(1,2)=',
C    1            DELSKN(1,1,1),DELSKN(1,2,1),DELFCX(1,1),DELFCX(1,2)
C                  WRITE(8,'(A,/,1P,4E12.4)')
C    1          ' DELSKN(2,1,1),DELSKN(2,2,1),DELFCX(2,1),DELFCX(2,2)=',
C    1            DELSKN(2,1,1),DELSKN(2,2,1),DELFCX(2,1),DELFCX(2,2)
C               ENDIF
C             ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012

              IF (STRTIP.GE.0.) 
     1         SUBMAX(MATLX,1) = MAX(SUBMAX(MATLX,1),STRTIP) 
              IF (STRRUT.GE.0.)
     1         SUBMAX(MATLX,1) = MAX(SUBMAX(MATLX,1),STRRUT)
              IF (STRTIP.LT.0.)
     1         SUBMAX(MATLX,2) = MIN(SUBMAX(MATLX,2),STRTIP)
              IF (STRRUT.LT.0.)
     1         SUBMAX(MATLX,2) = MIN(SUBMAX(MATLX,2),STRRUT)
              IF (ANGLEX.LT.10.) WRDSUB = 'substringer'
	      IF (ANGLEX.GT.80.) WRDSUB = '  subring  '
              IF (NPRT.GE.2) THEN
               IF (NOMARG.EQ.0) THEN
                 WRITE(8,'(/,A,A,A)')
     1         ' Stresses at tip and root of '//WRDSUB//':'
                 WRITE(8,'(A,1P,E12.4,A,1P,E12.4)')
     1         ' Stress at tip, STRTIP=',STRTIP,
     1         ' Stress at root,STRRUT=',STRRUT
                 WRITE(8,'(A,I3,/,A,1P,E12.4,/,A,1P,E12.4)')
     1         ' Substiffener Material No. ',MATLX,
     1      ' Maximum tensile stress, SUBMAX(MATLX,1)=',SUBMAX(MATLX,1),
     1      ' Maximum compres stress, SUBMAX(MATLX,2)=',SUBMAX(MATLX,2)
               ENDIF
              ENDIF
            ELSE
              ISOANG = ISOTYP(1,I,ILOOP)
              THETA = 30.*PI/180.
              IF (ISOANG.EQ.2) THETA = 60.*PI/180.
              STHET = SIN(THETA)
              CTHET = COS(THETA)
              DO 118 ISOSTF = 1,3
                 IF (ISOSTF.EQ.2) STHET = -STHET
                 IF (ISOSTF.EQ.3) THEN
                    IF (ISOANG.EQ.1) THEN
                       STHET = 1.0
                       CTHET = 0
                    ELSE
                       STHET = 0.
                       CTHET = 1.
                    ENDIF
                 ENDIF
                 CTHET2 = CTHET*CTHET
                 SCTHET = STHET*CTHET
                 STHET2 = STHET*STHET
                 CURM1A = CURCG4*CTHET2 +CURCG5*STHET2
                 CURM1B = CURCG6*SCTHET
                 EPS1M = EX*CTHET2 + EY*STHET2 + EPSXY*SCTHET
                 EPSMEM = EPSTOT(1,1,1)*CTHET2 + EPSTOT(2,1,1)*STHET2
     1                                         + EPSTOT(3,1,1)*SCTHET
                 EPSTIP = EPS1M - Z1*CURM1A
                 EPSRUT = EPS1M - Z2*CURM1A
                 STRTIP = E1(MATLX)*EPSTIP
                 STRRUT = E1(MATLX)*EPSRUT
                 STRMEM = E1(MATLX)*EPSMEM
C                IF (IINODE.EQ.1.AND.JIMP.EQ.1) THEN
C                  FCEAVE = 
C    1                     0.5*HSUB(ISUBST,I,ILOOP)*(STRTIP + STRRUT)
C    1                     *TSUB(ISUBST,I,ILOOP)/BSUB(ISUBST,I,ILOOP)
C                  FCEMEM = HSUB(ISUBST,I,ILOOP)*STRMEM
C    1                     *TSUB(ISUBST,I,ILOOP)/BSUB(ISUBST,I,ILOOP)
C                  FCCOMX(ISOSTF) = FCEAVE - FCEMEM
C                  IF (NPRT.GE.2) THEN
C                    WRITE(8,'(A,I5)')' Subisogrid member no. ',ISOSTF
C                    WRITE(8,'(A,/,1P,6E12.4)')
C    1             ' EPS1M,EPSMEM,STRMEM,FCEAVE,FCEMEM,FCCOMX(ISOSTF)=',
C    1               EPS1M,EPSMEM,STRMEM,FCEAVE,FCEMEM,FCCOMX(ISOSTF)
C                  ENDIF
C                ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
                 IF (STRTIP.GE.0.) 
     1            SUBMAX(MATLX,1) = MAX(SUBMAX(MATLX,1),STRTIP) 
                 IF (STRRUT.GE.0.)
     1            SUBMAX(MATLX,1) = MAX(SUBMAX(MATLX,1),STRRUT)
                 IF (STRTIP.LT.0.)
     1            SUBMAX(MATLX,2) = MIN(SUBMAX(MATLX,2),STRTIP)
                 IF (STRRUT.LT.0.)
     1            SUBMAX(MATLX,2) = MIN(SUBMAX(MATLX,2),STRRUT)
                 WRDSUB = ' subisogrid'
                 IF (NPRT.GE.2) THEN
                  IF (NOMARG.EQ.0) THEN
                    WRITE(8,'(/,A,A,A)')
     1            ' Stresses at tip and root of '//WRDSUB//':'
                    WRITE(8,'(A,1P,E12.4,A,1P,E12.4)')
     1            ' Stress at tip, STRTIP=',STRTIP,
     1            ' Stress at root,STRRUT=',STRRUT
                    WRITE(8,'(A,I3,/,A,1P,E12.4,/,A,1P,E12.4)')
     1            ' Substiffener Material No. ',MATLX,
     1      ' Maximum tensile stress, SUBMAX(MATLX,1)=',SUBMAX(MATLX,1),
     1      ' Maximum compres stress, SUBMAX(MATLX,2)=',SUBMAX(MATLX,2)
                  ENDIF
                 ENDIF
  118         CONTINUE
C23456789012345678901234567890123456789012345678901234567890123456789012
C             IF (IINODE.EQ.1.AND.JIMP.EQ.1) THEN
C               IF (ISOANG.EQ.1) THEN
C                  DELTA1 = 0.75*(FCCOMX(1) + FCCOMX(2))
C                  DELTA2 = 0.25*(FCCOMX(1) + FCCOMX(2)) + FCCOMX(3)
C               ENDIF
C               IF (ISOANG.EQ.2) THEN
C                  DELTA1 = 0.25*(FCCOMX(1) + FCCOMX(2)) + FCCOMX(3)
C                  DELTA2 = 0.75*(FCCOMX(1) + FCCOMX(2))
C               ENDIF
C               DELTA3 = 1.732*(FCCOMX(2) - FCCOMX(1))/4.
C               XSIGN = SIGN(1.,DELSKN(1,1,1))
C               DELSKN(1,1,1) = DELSKN(1,1,1) - XSIGN*DELTA1
C               XSIGN = SIGN(1.,DELSKN(1,2,1))
C               DELSKN(1,2,1) = DELSKN(1,2,1) - XSIGN*DELTA1
C               DELFCE(2,1) = DELSKN(1,2,1)
C               XSIGN = SIGN(1.,DELSKN(2,1,1))
C               DELSKN(2,1,1) = DELSKN(2,1,1) - XSIGN*DELTA2
C               XSIGN = SIGN(1.,DELSKN(2,2,1))
C               DELSKN(2,2,1) = DELSKN(2,2,1) - XSIGN*DELTA2
C               DELFCE(2,2) = DELSKN(2,2,1)
C               DELFCR(1,1) = DELFCX(2,1)
C               DELFCR(1,2) = DELFCR(1,1)
C               IF (NPRT.GE.2) THEN
C                WRITE(8,'(A,/,1P,4E12.4)')
C    1       ' DELSKN(1,1,1),DELSKN(1,2,1),DELFCX(1,1),DELFCX(1,2)=',
C    1         DELSKN(1,1,1),DELSKN(1,2,1),DELFCX(1,1),DELFCX(1,2)
C                WRITE(8,'(A,/,1P,4E12.4)')
C    1       ' DELSKN(2,1,1),DELSKN(2,2,1),DELFCX(2,1),DELFCX(2,2)=',
C    1         DELSKN(2,1,1),DELSKN(2,2,1),DELFCX(2,1),DELFCX(2,2)
C               ENDIF
C             ENDIF
            ENDIF
C           End of ISOSUB(ISUBST,I,ILOOP) condition.
   36    CONTINUE
C        IF (IINODE.EQ.1.AND.NPRT.GE.2) THEN
C          WRITE(8,'(/,A,4I5)')
C    1   ' In Sub.STRCON substf. section. ICALL,NOMARG,JIMP,IINODE=',
C    1                                    ICALL,NOMARG,JIMP,IINODE
C          WRITE(8,'(A,1P,3E12.4)')
C    1   ' Changes in curvature, CUR1M,CUR2M,CUR12M=  ',
C    1                           CUR1M,CUR2M,CUR12M
C          WRITE(8,'(A,1P,3E12.4)')
C    1   ' Changes in resultants,DELSKX,DELSKY,DELSXY=',
C    1                           DELSKX,DELSKY,DELSXY
C          WRITE(8,'(A,/,1P,4E12.4)')
C    1   ' DELSKN(1,1,1),DELSKN(1,2,1),DELFCX(1,1),DELFCX(1,2)=',
C    1     DELSKN(1,1,1),DELSKN(1,2,1),DELFCX(1,1),DELFCX(1,2)
C          WRITE(8,'(A,/,1P,4E12.4)')
C    1   ' DELSKN(2,1,1),DELSKN(2,2,1),DELFCX(2,1),DELFCX(2,2)=',
C    1     DELSKN(2,1,1),DELSKN(2,2,1),DELFCX(2,1),DELFCX(2,2)
C          WRITE(8,'(A,/,1P,4E12.4)')
C    1   ' DELFCR(1,1),DELFCR(1,2),DELFCR(2,1),DELFCR(2,2)=',
C    1     DELFCR(1,1),DELFCR(1,2),DELFCR(2,1),DELFCR(2,2)
C        ENDIF
      ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
C END JUN 2004
C   A STATEMENT (40 CONTINUE) REMOVED HERE AND INSERTED A FEW LINES DOWN
C
      IF (I.EQ.IWEB.AND.ITRIP.EQ.1) THEN
         Z = ZSAVE
         FACT = 1.0
         GO TO 28
      ENDIF
C BEG JUN 2004
      IF (KCURVU.EQ.2) THEN
         IF (KCURV.EQ.1) THEN
             WXY8 = WXY8S
             WXY9 = WXY9S
         ENDIF
         IF (KCURV.EQ.2) THEN
            WXX8 = WXX8S
            WYY8 = WYY8S
            WXX9 = WXX9S
            WYY9 = WYY9S
         ENDIF
      ENDIF
C END JUN 2004
   37 CONTINUE
C END OF LOOP OVER KCURV:  KCURV = 1,KCURVU
C BEG OCT 1996
      IF (ILOOP.EQ.1.AND.I.EQ.1.AND.NPRINT.GE.2.AND.NOMARG.EQ.0
     1 .AND.ISANDW(1,1).GT.1.AND.ISANDW(1,1).LT.NLAY) THEN
         WRITE(IFILE,'(A,1P,E12.4)')
     1    ' Iseg=1    CORE CRUSHING PRESSURE FROM SUB. STRCON=',CRUSH2
         WRITE(IFILE,'(A,1P,E12.4)')
     1    ' Iseg=1 X-TRANSVERSE SHEAR STRESS FROM SUB. STRCON=',QX2
         WRITE(IFILE,'(A,1P,E12.4)')
     1    ' Iseg=1 Y-TRANSVERSE SHEAR STRESS FROM SUB. STRCON=',QY2
      ENDIF
C END OCT 1996
C BEG JUN 1996
C23456789012345678901234567890123456789012345678901234567890123456789012
      IF (NOMARG.EQ.0.AND.
     1     ISANDW(I,ILOOP).GT.1.AND.ISANDW(I,ILOOP).LT.NLAY) THEN
C   resultants in face sheet no. 1...
         JUPPER = KCURVU
         IF (I.EQ.IWEB) JUPPER = ITRIP
         DO 102 JJ = 1,JUPPER
           FNXTOT(JJ) = 0.
           FNYTOT(JJ) = 0.
           FNXYTT(JJ) = 0.
           LMAX = ISANDW(I,ILOOP) - 1
C          WRITE(8,*)' ILOOP,I,ISANDW(I,ILOOP),LMAX,JJ=',
C    1                 ILOOP,I,ISANDW(I,ILOOP),LMAX,JJ
C23456789012345678901234567890123456789012345678901234567890123456789012
           DO 101 L = 1,LMAX
            FNXTOT(JJ) = FNXTOT(JJ) + FNXLAY(L,JJ)
            FNYTOT(JJ) = FNYTOT(JJ) + FNYLAY(L,JJ)
            FNXYTT(JJ) = FNXYTT(JJ) + FNXYLA(L,JJ)
C           WRITE(8,*)' L,FNXLAY,FNYLAY,FNXYLA=',
C    1                  L,FNXLAY(L,JJ),FNYLAY(L,JJ),FNXYLA(L,JJ)
C           WRITE(8,*)' FNXTOT,FNYTOT,FNXYTT=',
C    1                  FNXTOT(JJ),FNYTOT(JJ),FNXYTT(JJ)
  101      CONTINUE
C          WRITE(8,*)' JJ,FNXTOT,FNYTOT,FNXYTT=',
C    1                 JJ,FNXTOT(JJ),FNYTOT(JJ),FNXYTT(JJ)
           FNXF1(I,ILOOP) = MIN(FNXF1(I,ILOOP),FNXTOT(JJ))
           FNYF1(I,ILOOP) = MIN(FNYF1(I,ILOOP),FNYTOT(JJ))
           FNXYF1(I,ILOOP)= MAX(ABS(FNXYF1(I,ILOOP)),ABS(FNXYTT(JJ)))
C          WRITE(8,*)' FNXF1,FNYF1,FNXYF1=',
C    1                 FNXF1(I,ILOOP),FNYF1(I,ILOOP),FNXYF1(I,ILOOP)
  102    CONTINUE
C        WRITE(8,*)' I,FNXF1,FNYF1,FNXYF1=',
C    1               I,FNXF1(I,ILOOP),FNYF1(I,ILOOP),FNXYF1(I,ILOOP)
C
C   resultants in face sheet no. 2...
         DO 104 JJ = 1,JUPPER
           FNXTOT(JJ) = 0.
           FNYTOT(JJ) = 0.
           FNXYTT(JJ) = 0.
           LSTART = ISANDW(I,ILOOP) + 1
C          WRITE(8,*)' NLAY=',NLAY
C          WRITE(8,*)' ILOOP,I,ISANDW(I,ILOOP),LSTART,JJ=',
C    1                 ILOOP,I,ISANDW(I,ILOOP),LSTART,JJ
C23456789012345678901234567890123456789012345678901234567890123456789012
           DO 103 L = LSTART,NLAY
            FNXTOT(JJ) = FNXTOT(JJ) + FNXLAY(L,JJ)
            FNYTOT(JJ) = FNYTOT(JJ) + FNYLAY(L,JJ)
            FNXYTT(JJ) = FNXYTT(JJ) + FNXYLA(L,JJ)
C           WRITE(8,*)' L,FNXLAY,FNYLAY,FNXYLA=',
C    1                  L,FNXLAY(L,JJ),FNYLAY(L,JJ),FNXYLA(L,JJ)
C           WRITE(8,*)' FNXTOT,FNYTOT,FNXYTT=',
C    1                  FNXTOT(JJ),FNYTOT(JJ),FNXYTT(JJ)
  103      CONTINUE
C          WRITE(8,*)' JJ,FNXTOT,FNYTOT,FNXYTT=',
C    1                 JJ,FNXTOT(JJ),FNYTOT(JJ),FNXYTT(JJ)
           FNXF2(I,ILOOP) = MIN(FNXF2(I,ILOOP),FNXTOT(JJ))
           FNYF2(I,ILOOP) = MIN(FNYF2(I,ILOOP),FNYTOT(JJ))
           FNXYF2(I,ILOOP)= MAX(ABS(FNXYF2(I,ILOOP)),ABS(FNXYTT(JJ)))
C          WRITE(8,*)' FNXF2,FNYF2,FNXYF2=',
C    1                 FNXF2(I,ILOOP),FNYF2(I,ILOOP),FNXYF2(I,ILOOP)
  104    CONTINUE
C        WRITE(8,*)' I,FNXF2,FNYF2,FNXYF2=',
C    1               I,FNXF2(I,ILOOP),FNYF2(I,ILOOP),FNXYF2(I,ILOOP)
      ENDIF
C END JUN 1996
   40 CONTINUE
C END OF LOOP OVER NODAL POINTS WITHIN SEGMENT
C BEG OCT 1996
C     "40" is the end of the loop over nodal points within a segment.
      IF (JMAX.EQ.2.AND.NLAY.EQ.1.AND.ICAND(M).NE.0) THEN
C  Do the "bending overshoot" stress constraints:
         CALL CONOVR(NNODE,1,SIGXX,SIGYY,SIGXY,
     1               EALLST(1,M),BNDOVR(1,M),ISOEFF(M),ISOMAT(M),
     1               SIGCON(1,M))
         IF (ISOEFF(M).EQ.0.OR.ISOMAT(M).EQ.0) THEN
            DO 250 III = 1,5
               SIGMIN(III,M) = MIN(SIGMIN(III,M),SIGCON(III,M))
  250       CONTINUE
         ELSE
            SIGMIN(1,M) = MIN(SIGMIN(1,M),SIGCON(1,M))
         ENDIF
      ENDIF
C END OCT 1996
   60 CONTINUE
C END OF LOOP OVER SEGMENTS
C
C BEG JULY 1995
C BEG OCT 1996
C     IF (NOMARG.EQ.0.AND.ITYPE.GE.2.AND.ILOOP.EQ.2.AND.MIDEND.EQ.1)
C END JULY 1995
C    1   WRITE(IFILE,99) EPSRUT,EPSTIP
C END OCT 1996
   99 FORMAT(/' REFERENCE SURFACE STRAINS ALONG AXIS OF RING WEB:'/
     1'  Strain at the root of the ring web,  EPSRNG(root) =',1PE12.4/
     1'  Strain at the tip  of the ring web,  EPSRNG(tip ) =',1PE12.4/)
C 
  100 CONTINUE
C END OF LOOP OVER STRINGER MODULE/RING MODULE
  110 CONTINUE
C END OF LOOP OVER SIGN OF IMPERFECTION.
C BEG JUN 2004
      IF (NOMARG.EQ.1) THEN
C        IF (KLAYER(1,1).NE.0) THEN
C           TX(1) = TXSAVE(1)
C           TY(1) = TYSAVE(1)
C           CALL MOVER(CXSAVE(1,1,1),1,CX(1,1,1),1,36)
C        ENDIF
C        IF (KLAYER(2,1).NE.0) THEN
C           TX(2) = TXSAVE(2)
C           TY(2) = TYSAVE(2)
C           CALL MOVER(CXSAVE(1,1,2),1,CX(1,1,2),1,36)
C        ENDIF
         RETURN
      ENDIF
C END JUN 2004
C
C  CONSTRAINT CONDITIONS...
C
      CALL CONVRF(FSSTR,CN2)
      CNN = 'MID.'
      IF (MIDEND.EQ.2) CNN = 'ENDS'
      IF (MIDEND.EQ.2.AND.ATRING) CNN = 'RNGS'
C
C BEG JUN 2004
      MMMAX = MAX(MMAX,MATLXM)
C     IF (NPRT.GE.2) WRITE(8,'(A,I3)')
C    1' MMMAX = max. materials =',MMMAX
      DO 600 J = 1,MMMAX
      CALL CONVR2(J,CJ)
C Generate constraints for substiffeners, if any...
C23456789012345678901234567890123456789012345678901234567890123456789012
C     IF (NPRT.GE.2) WRITE(8,'(A,I3,A,1P,2E12.4)')
C    1' J=',J,': SUBMAX(J,1),SUBMAX(J,2)=',SUBMAX(J,1),SUBMAX(J,2)
      IF (SUBMAX(J,1).NE.0.0.OR.SUBMAX(J,2).NE.0.0) THEN
C There are substiffeners...
         IF (ISOMAT(J).EQ.1.AND.ISOEFF(J).EQ.1) THEN
            SUBMAX(J,1) = MAX(ABS(SUBMAX(J,1)),ABS(SUBMAX(J,2)))
            SUBCON(J,1) = EALLOW(1,J)/(SUBMAX(J,1)*FSSTR)
            SUBCON(J,2) = 10.E+16
C           WRITE(8,'(A,I2,1P,E12.4)')' J,EALLOW(1,J)=',J,EALLOW(1,J)
         ELSE
            SUBCON(J,1) = EALLOW(1,J)/(SUBMAX(J,1)*FSSTR)
            IF (SUBCON(J,1).LT.0.0) SUBCON(J,1)=10.E+16
            SUBCON(J,2) = 
     1               EALLOW(2,J)/(-SUBMAX(J,2)*FSSTR)
            IF (SUBCON(J,2).LT.0.0) SUBCON(J,2)=10.E+16
         ENDIF
C        WRITE(8,'(A,1P,3E12.4)') ' FMAX,SUBCON(J,1),SUBCON(J,2)=',
C    1                              FMAX,SUBCON(J,1),SUBCON(J,2)
         INUMTT = INUMTT + 1
         IF (IMOD.EQ.0.AND.SUBCON(J,1).LT.MAXCON) THEN
            ICAR = ICAR + 1
            CPLOT(ICAR) = SUBCON(J,1) - 1.
            IADDCC(ICAR) = 1
            FSAFEP(ICAR) = FSSTR
            IF (ISOMAT(J).EQ.1.AND.ISOEFF(J).EQ.1) THEN
             PCWORD(ICAR) =
     1      'matl='//CJ//'; substiffener effective stressSTRCON '//CNN 
            ELSE
             PCWORD(ICAR) =
     1      'matl='//CJ//'; substiffener tensile stressSTRCON   '//CNN
            ENDIF
         ENDIF
         IF (IMOD.EQ.0.AND.SUBCON(J,1).GT.FMAX) GO TO 498
         IF (IMOD.EQ.1.AND.IPOINC(INUMTT).EQ.0) GO TO 498
         ICONST = ICONST + 1
         IF (IMOD.EQ.0) IPOINC(INUMTT) = 1
         CONSTR(ICONST) = SUBCON(J,1)
         IF (ISOMAT(J).EQ.1.AND.ISOEFF(J).EQ.1) THEN
            WORDB(ICONST) =
     1     'matl='//CJ//'; substiffener effective stressSTRCON '
     1                                                //CNN//';FS='//CN2
         ELSE
            WORDB(ICONST) =
     1     'matl='//CJ//'; substiffener tensile stressSTRCON   '
     1                                                //CNN//';FS='//CN2
         ENDIF
C BEG APR 2007
         IF (NPRT.GE.0) WRITE(8,'(A,1P,E12.4,2X,A)')
     1 ' Margin=',CONSTR(ICONST)-1.,WORDB(ICONST)
C END APR 2007
C
  498    CONTINUE
         INUMTT = INUMTT + 1
         IF (IMOD.EQ.0.AND.SUBCON(J,2).LT.MAXCON) THEN
            ICAR = ICAR + 1
            CPLOT(ICAR) = SUBCON(J,2) - 1.
            IADDCC(ICAR) = 1
            FSAFEP(ICAR) = FSSTR
            PCWORD(ICAR) = 
     1    'matl='//CJ//'; substiffener compressive stressSTRCON '//CNN
         ENDIF
         IF (IMOD.EQ.0.AND.SUBCON(J,2).GT.FMAX) GO TO 499
         IF (IMOD.EQ.1.AND.IPOINC(INUMTT).EQ.0) GO TO 499
         ICONST = ICONST + 1
         IF (IMOD.EQ.0) IPOINC(INUMTT) = 1
         CONSTR(ICONST) = SUBCON(J,2)
         WORDB(ICONST) =
     1   'matl='//CJ//'; substiffener compressive stressSTRCON '
     1                                                //CNN//';FS='//CN2
C BEG APR 2007
         IF (NPRT.GE.0) WRITE(8,'(A,1P,E12.4,2X,A)')
     1 ' Margin=',CONSTR(ICONST)-1.,WORDB(ICONST)
C END APR 2007
  499    CONTINUE
      ENDIF
C End of section on substiffener stress constraints.
C END JUN 2004
      DO 500 I = 1,5
C BEG OCT 1996
      IF (ICAND(J).NE.0) EMIN(I,J) = SIGMIN(I,J)/FSSTR
C END OCT 1996
C BEG NOV 1996
      ILK = 0
      DO 355 ILE = 1,51
         IF (POSI(I,J)(ILE:ILE).EQ.' ') GO TO 355
         ILK = ILK + 1
         POS(ILK:ILK) = POSI(I,J)(ILE:ILE)
  355 CONTINUE
      ILKP = 0
      DO 356 ILE = 1,38
         IF (POSIP(I,J)(ILE:ILE).EQ.' ') GO TO 356
         ILKP = ILKP + 1
         POSP(ILKP:ILKP) = POSIP(I,J)(ILE:ILE)
  356 CONTINUE
C END NOV 1996
      INUMTT = INUMTT + 1
      IF (EMIN(I,J).EQ.10000000.) GO TO 500
      IF (IMOD.EQ.0.AND.EMIN(I,J).LT.MAXCON) THEN
         ICAR = ICAR + 1
         GO TO (360,370,380,390,400), I
  360    CONTINUE
C BEG NOV 1995
         IF (ISOMAT(J).EQ.0.OR.ISOEFF(J).EQ.0) PCWORD(ICAR) =
     1 'fibertensn:'//POSP(1:ILKP)//'-'//CNN
         IF (ISOMAT(J).EQ.1.AND.ISOEFF(J).EQ.1) PCWORD(ICAR) =
     1 'eff.stress:'//POSP(1:ILKP)//'-'//CNN
         GO TO 408
  370    CONTINUE
         PCWORD(ICAR) =   
     1 'fibercompr:'//POSP(1:ILKP)//'-'//CNN
         GO TO 408
  380    CONTINUE
         PCWORD(ICAR) =   
     1 'transtensn:'//POSP(1:ILKP)//'-'//CNN
         GO TO 408
  390    CONTINUE
         PCWORD(ICAR) =   
     1 'transcompr:'//POSP(1:ILKP)//'-'//CNN
         GO TO 408
  400    CONTINUE
         PCWORD(ICAR) =   
     1 'inplnshear:'//POSP(1:ILKP)//'-'//CNN
C END NOV 1995
  408    CONTINUE
C
         CPLOT(ICAR) = EMIN(I,J) - 1.
         IADDCC(ICAR) = 1
         FSAFEP(ICAR) = FSSTR
      ENDIF
      IF (IMOD.EQ.0.AND.EMIN(I,J).GT.FMAX) GO TO 500
      IF (IMOD.EQ.1.AND.IPOINC(INUMTT).EQ.0) GO TO 500
      ICONST = ICONST + 1
      IF (IMOD.EQ.0) IPOINC(INUMTT) = 1
      CONSTR(ICONST) = EMIN(I,J)
      GO TO (410,420,430,440,450), I
  410 CONTINUE
C BEG NOV 1995
      IF (ISOMAT(J).EQ.0.OR.ISOEFF(J).EQ.0) WORDB(ICONST) =
     1 'fibertensn:'//POS(1:ILK)//'-'//CNN//';FS='//CN2
      IF (ISOMAT(J).EQ.1.AND.ISOEFF(J).EQ.1) WORDB(ICONST) =
     1 'eff.stress:'//POS(1:ILK)//'-'//CNN//';FS='//CN2
      GO TO 495 
  420 CONTINUE
      WORDB(ICONST) =   
     1 'fibercompr:'//POS(1:ILK)//'-'//CNN//';FS='//CN2
      GO TO 495 
  430 CONTINUE
      WORDB(ICONST) =   
     1 'transtensn:'//POS(1:ILK)//'-'//CNN//';FS='//CN2
      GO TO 495 
  440 CONTINUE
      WORDB(ICONST) =   
     1 'transcompr:'//POS(1:ILK)//'-'//CNN//';FS='//CN2
      GO TO 495 
  450 CONTINUE
      WORDB(ICONST) =   
     1 'inplnshear:'//POS(1:ILK)//'-'//CNN//';FS='//CN2
C END NOV 1995
C BEG APR 2007
  495 CONTINUE
      IF (NPRT.GE.0) WRITE(8,'(A,1P,E12.4,2X,A)')
     1 ' Margin=',CONSTR(ICONST)-1.,WORDB(ICONST)
C END APR 2007
  500 CONTINUE
  600 CONTINUE
C
C BEG JUN 2004
C     IF (KLAYER(1,1).NE.0) THEN
C        TX(1) = TXSAVE(1)
C        TY(1) = TYSAVE(1)
C        CALL MOVER(CXSAVE(1,1,1),1,CX(1,1,1),1,36)
C     ENDIF
C     IF (KLAYER(2,1).NE.0) THEN
C        TX(2) = TXSAVE(2)
C        TY(2) = TYSAVE(2)
C        CALL MOVER(CXSAVE(1,1,2),1,CX(1,1,2),1,36)
C     ENDIF
C END JUN 2004
      RETURN
      END
C
C
C
C=DECK      STRAIN
      SUBROUTINE STRAIN(FMAX,ILOOP,ISEG,ILAY,EX,EY,EXY,ANGLE,EALLOW,
     1             ICONST,CONSTR,WORDB,IADDB,FSSTR,A1T,A2T,E1,E2,G,U12,
     1             IMOD,IPOINC,INUMTT,CRACK,ICRACK,ICHANG,STRRNG,IFILE,
     1             NPRINT,MODE,ITYPE,M,IICHAN,MIDEND,IBEG,EMIN,Z,ITRIP,
C BEG JUN 1996
C BEG OCT 1996
     1             WROTIP,POS,POSP,FSMULT,TT,NLAY,FNXLAY,FNYLAY,FNXYLA,
     1             SIGX,SIGY,SIGXY,ICAND)
C END OCT 1996
C END JUN 1996
C
C  PURPOSE IS TO CALCULATE STRAIN MARGINS IN A SINGLE LAYER
C
C BEG JUN 1996 (SANDWICH)
      COMMON/XSANDW/ISANDW(4,2),ICORE(4,2)
C END JUN 1996
      COMMON/FMAXPP/MAXCON
      COMMON/WORDS5/PCWORD(99)
      COMMON/PLOTCD/ICAR,IADDCC(99),CPLOT(99)
      CHARACTER*80 PCWORD
      DIMENSION POS(*),POSP(*)
      CHARACTER*51 POS
      CHARACTER*38 POSP
      CHARACTER*9  CNP
      CHARACTER*12 CEALLW
      CHARACTER*4 WROTIP
      DIMENSION EMIN(*)
      REAL MAXCON
      COMMON/MATER7/ISOMAT(20),ISOEFF(20)
      COMMON/ATRNGS/ATRING
      LOGICAL ATRING
      DIMENSION EALLOW(*),CONSTR(*),WORDB(*),IADDB(*),IPOINC(*)
      CHARACTER*80 WORDB
      CHARACTER*3 STRRNG
      CHARACTER*15 MODE(7)
      CHARACTER*2 SN, CN
      CHARACTER*6 STATUS
      CHARACTER*7 CN2
      CHARACTER*4 CNN
      CHARACTER*2 CJ
C
      DATA DTR /.017453293/
      ERRMAX = 1.0E-06
C
      ARG = ANGLE*DTR
      CS1 = COS(ARG)
      CS2 = SIN(ARG)
      CALL ROTATE(CS1,CS2,EX,EY,EXY,EPS1,EPS2,EPS12)
C
      U21 = 0.
      IF (E2.GT.0.) U21 = U12*E1/E2
      UD = 1. - U12*U21
      SIG1 = (    E1*(EPS1-A1T) +U12*E1*(EPS2-A2T))/UD
      SIG2 = (U12*E1*(EPS1-A1T) +    E2*(EPS2-A2T))/UD
      SIG12= G*EPS12
C BEG OCT 1996 ("ROTATS" MOVED UP FROM INSIDE "ISANDW" COMPUTATIONS)
      IF (NLAY.EQ.1.AND.ICAND.NE.0)
     1   CALL ROTATS(CS1,-CS2,SIG1,SIG2,SIG12,SIGX,SIGY,SIGXY)
C BEG JUN 1996
      IF (ISANDW(ISEG,ILOOP).GT.1.AND.ISANDW(ISEG,ILOOP).LT.NLAY) THEN
C END OCT 1996
         CALL ROTATS(CS1,-CS2,SIG1,SIG2,SIG12,SIGX,SIGY,SIGXY)
C        WRITE(8,*)' IN STRAIN..SIGX,SIGY,SIGXY=',SIGX,SIGY,SIGXY
         FNXLAY = FNXLAY + FSMULT*SIGX*TT
         FNYLAY = FNYLAY + FSMULT*SIGY*TT
         FNXYLA = FNXYLA + FSMULT*SIGXY*TT
      ENDIF
C END JUN 1996
C
C     IF (IMOD.EQ.0) THEN
C        WRITE(8,*)' ILAY,SIG1,SIG2=',ILAY,SIG1,SIG2
C     ENDIF
C
      CALL CONVR2(M,CJ)
      IARG = 0
      IF (WROTIP.NE.'    ') IARG = 1
      IF (ITRIP.EQ.1) THEN
          IARG=1
          WROTIP = 'ROOT'
      ENDIF
      IF (ITRIP.EQ.2) THEN
          IARG=11
          WROTIP = 'TIP '
      ENDIF
C
      IF (ISOMAT(M).EQ.1.AND.ISOEFF(M).EQ.1) THEN
         IMIN    = 3
         IMAX    = 3
         SIGEFF  = SQRT(SIG1**2 +SIG2**2 -SIG1*SIG2 +3.*SIG12**2)
         SIGTST  = SIGEFF
         GO TO 5
      ELSE
         IMIN    = 1
         IMAX    = 5
         SIGTST  = SIG1
      ENDIF
C
      CRACKD = 1.0
      RATIO  = 1.1
      IF (SIG2.GT.0.) RATIO = EALLOW(3)/SIG2
      REDCOM = 1.0
      REDSHR = 1.0
      IF (RATIO.LT.1.0.AND.ICRACK.EQ.1) THEN
         CRACKD = RATIO
         IF (SIG1.LT.0.) THEN
            REDCOM = 0.5
            REDSHR = 0.8
         ENDIF
      ENDIF
C
    5 CONTINUE
C
      CNN = 'MID.'
      IF (MIDEND.EQ.2) CNN = 'ENDS'
      IF (MIDEND.EQ.2.AND.ATRING) CNN = 'RNGS'
      CNP = 'MIDLENGTH'
      IF (MIDEND.EQ.2) CNP = 'PANEL END'
      IF (MIDEND.EQ.2.AND.ATRING) CNP = 'AT RINGS '
      CALL CONVRF(FSSTR,CN2)
      ISKIP = 0
C
      DO 200 I = IMIN,IMAX
C
      GO TO (30,40,10,20,50), I
C
   10 CONTINUE
C
      INDEX = 1
      IF (SIGTST.LE.0.) GO TO 100
      RATIO = ABS(EALLOW(1)/(SIGTST*FSSTR))
C
      EMIN(1) = MIN(RATIO,EMIN(1))
      IF (EMIN(1).EQ.0.) THEN
         ERR = ABS(EMIN(1) - RATIO)
      ELSE
         ERR = ABS((EMIN(1) - RATIO)/EMIN(1))
      ENDIF
      IF (IMOD.EQ.0.AND.ERR.GT.ERRMAX) GO TO 100
      RATIO1 = RATIO - 1.
      IELIM = 0
      IF (IMOD.EQ.0) THEN
         CALL ELIMIN(RATIO1,IBEG,ICAR,CPLOT,IELIM)
         IF (IELIM.EQ.1) GO TO 100
         CALL SETPOS(ILOOP,Z,ILAY,IARG,ISEG,M,POS(1),POSP(1),WROTIP,
C BEG JUN 1996
     1               ITYPE,1)
C END JUN 1996
      ENDIF
      GO TO 100
C
   20 CONTINUE
C
      INDEX = 2
      IF (SIG1.GE.0.) GO TO 100
      RATIO = ABS(EALLOW(2)*REDCOM/(SIG1*FSSTR))
      EMIN(2) = MIN(RATIO,EMIN(2))
      IF (EMIN(2).EQ.0.) THEN
         ERR = ABS(EMIN(2) - RATIO)
      ELSE
         ERR = ABS((EMIN(2) - RATIO)/EMIN(2))
      ENDIF 
      IF (IMOD.EQ.0.AND.ERR.GT.ERRMAX) GO TO 100
      RATIO1 = RATIO - 1.
      IELIM = 0
      IF (IMOD.EQ.0) THEN
         CALL ELIMIN(RATIO1,IBEG,ICAR,CPLOT,IELIM)
         IF (IELIM.EQ.1) GO TO 100
         CALL SETPOS(ILOOP,Z,ILAY,IARG,ISEG,M,POS(2),POSP(2),WROTIP,
C BEG JUN 1996
     1               ITYPE,1)
C END JUN 1996
      ENDIF
      GO TO 100
C
   30 CONTINUE
C
      INDEX = 3
      IF (SIG2.LE.0.) GO TO 100
      RATIO = ABS(EALLOW(3)/(SIG2*FSSTR))
      RAT2  = RATIO*FSSTR
      IF (IMOD.EQ.0.AND.ICRACK.EQ.1.AND.MIDEND.LT.2)
     1   CALL CRAKNG(RAT2,SIG1,CRACK,ICHANG,0)
      IF (ICRACK.EQ.1) GO TO 100
      EMIN(3) = MIN(RATIO,EMIN(3))
      IF (EMIN(3).EQ.0.) THEN
         ERR = ABS(EMIN(3) - RATIO)
      ELSE
         ERR = ABS((EMIN(3) - RATIO)/EMIN(3))
      ENDIF
      IF (IMOD.EQ.0.AND.ERR.GT.ERRMAX) GO TO 100
      RATIO1 = RATIO - 1.
      IELIM = 0
      IF (IMOD.EQ.0) THEN
         CALL ELIMIN(RATIO1,IBEG,ICAR,CPLOT,IELIM)
         IF (IELIM.EQ.1) GO TO 100
         CALL SETPOS(ILOOP,Z,ILAY,IARG,ISEG,M,POS(3),POSP(3),WROTIP,
C BEG JUN 1996
     1               ITYPE,1)
C END JUN 1996
      ENDIF
      GO TO 100
C
   40 CONTINUE
C
      INDEX = 4
      IF (SIG2.GE.0.) GO TO 100
      IF (IMOD.EQ.0.AND.ICRACK.EQ.1.AND.MIDEND.LT.2)
     1   CALL CRAKNG(5.,SIG1,CRACK,ICHANG,0)
      RATIO = ABS(EALLOW(4)/(SIG2*FSSTR))
      EMIN(4) = MIN(RATIO,EMIN(4))
      IF (EMIN(4).EQ.0.) THEN
         ERR = ABS(EMIN(4) - RATIO)
      ELSE
         ERR = ABS((EMIN(4) - RATIO)/EMIN(4))
      ENDIF
      IF (IMOD.EQ.0.AND.ERR.GT.ERRMAX) GO TO 100
      RATIO1 = RATIO - 1.
      IELIM = 0
      IF (IMOD.EQ.0) THEN
         CALL ELIMIN(RATIO1,IBEG,ICAR,CPLOT,IELIM)
         IF (IELIM.EQ.1) GO TO 100
         CALL SETPOS(ILOOP,Z,ILAY,IARG,ISEG,M,POS(4),POSP(4),WROTIP,
C BEG JUN 1996
     1               ITYPE,1)
C END JUN 1996
      ENDIF
      GO TO 100
C
   50 CONTINUE
C
      INDEX = 5
      IF (SIG12.EQ.0.) GO TO 100
      RATIO = ABS(EALLOW(5)*REDSHR/(SIG12*FSSTR))
      EMIN(5) = MIN(RATIO,EMIN(5))
      IF (EMIN(5).EQ.0.) THEN
         ERR = ABS(EMIN(5) - RATIO)
      ELSE
         ERR = ABS((EMIN(5) - RATIO)/EMIN(5))
      ENDIF
      IF (IMOD.EQ.0.AND.ERR.GT.ERRMAX) GO TO 100
      RATIO1 = RATIO - 1.
      IELIM = 0
      IF (IMOD.EQ.0) THEN
         CALL ELIMIN(RATIO1,IBEG,ICAR,CPLOT,IELIM)
         IF (IELIM.EQ.1) GO TO 100
         CALL SETPOS(ILOOP,Z,ILAY,IARG,ISEG,M,POS(5),POSP(5),WROTIP,
C BEG JUN 1996
     1               ITYPE,1)
C END JUN 1996
      ENDIF
C
  100 CONTINUE
C
      IF (RATIO.GT.1.0.AND.(I.LT.IMAX.OR.ISKIP.EQ.1)) GO TO 200
      IF (ITYPE.EQ.2.AND.IICHAN.EQ.0) THEN
         IF (RATIO.LT.1.0) THEN
            STATUS = 'FAILED'
            ISKIP  = 1
         ELSE
            STATUS = '  OK  '
            INDEX  = 6
         ENDIF
         INDEXM = INDEX
         EALOWR = 0.0
         IF (IMAX.EQ.3.AND.STATUS.EQ.'FAILED') INDEXM = 7
C BEG JUN 1996
C23456789012345678901234567890123456789012345678901234567890123456789012
           IF (STATUS.EQ.'FAILED'.AND.ISOMAT(M).EQ.1.AND.ISOEFF(M).EQ.1)
C END JUN 1996
     1         EALOWR = EALLOW(INDEX)
            IF (STATUS.EQ.'FAILED') EALOWR = EALLOW(INDEX)
            IF (STATUS.EQ.'FAILED'.AND.INDEX.EQ.2)
     1          EALOWR = EALLOW(INDEX)*REDCOM
            IF (STATUS.EQ.'FAILED'.AND.INDEX.EQ.5)
     1          EALOWR = EALLOW(INDEX)*REDSHR
            CEALLW = '            '
C           IF (EALOWR.NE.0.) CALL CONVRE(EALLOW(INDEX),CEALLW)
            IF (EALOWR.NE.0.) CALL CONVRE(EALOWR,CEALLW)
            IF (NPRINT.GE.1) THEN
               WRITE(IFILE,152) STRRNG,ISEG,WROTIP,ILAY,
     1      Z,ANGLE,SIG1,SIG2,SIG12,STATUS,MODE(INDEXM),CRACK,CEALLW,M
            ENDIF
  152    FORMAT(1X,A3,I2,1X,A4,I2,1P,5E12.4,3X,A6,3X,A15,0PF7.3,2X,
     1           A12,I3)
C
         RATIO = 1.1
      ENDIF
  200 CONTINUE
      RETURN
      END
C
C
C
C=DECK      ELIMIN
      SUBROUTINE ELIMIN(RATIO,IBEG,ICONST,CONSTR,IELIM)
C
C  PURPOSE IS TO SET IELIM = 1 (IGNORE A CONSTRAINT) IF IT IS
C  NUMERICALLY EQUAL TO FOUR SIG. FIGURES TO A PREVIOUS CONSTRAINT IN
C  THE SAME CLASS.  (USED FOR STRAIN CONSTRAINTS)
C
      DIMENSION CONSTR(*)
C
      IELIM = 0
      IF (IBEG.GT.ICONST) RETURN
C
      DO 10 I = IBEG,ICONST
C
      DIF = ABS(RATIO- CONSTR(I))/ABS(RATIO)
C     WRITE(8,*)' IBEG,ICONST,I,RATIO,CONSTR(I),DIF=',
C    1            IBEG,ICONST,I,RATIO,CONSTR(I),DIF
      IF (DIF.LT.0.0001) THEN
         IELIM = 1
         RETURN
      ENDIF
C
   10 CONTINUE
      RETURN
      END
