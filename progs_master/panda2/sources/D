---- diff for file ( bospan.src ) ----
12,14d11
< C BEG JAN 2010
<       DIMENSION DUMMY(23)
< C END JAN 2010
170,171d166
< C BEG JAN 2010
< C23456789012345678901234567890123456789012345678901234567890123456789012
176,177c171,172
<      1'  the case. The file NAME.ALL is a BIGBOSOR4 input "deck" used'/
<      1'  by the batch run you launch next via the command BIGBOSORALL.'/
---
>      1'  the case. The file NAME.ALL is a BOSOR4 input "deck" used'/
>      1'  by the batch run you launch next via the command BOSORALL.'//
179d173
< C END JAN 2010
227,229d220
< C BEG JAN 2010
<       CALL MOVER(0.,0,DUMMY,1,23)
< C END JAN 2010
259,262c250,251
< C BEG JUL 2010 (we now use the prismatic formulation for panel3)
< C     NWAVE = NWAVE*100*MULT
<       NWAVE = NWAVE*1*MULT
< C END JUL 2010
---
> C END JAN 2007
>       NWAVE = NWAVE*100*MULT
338,341c327
< C BEG FEB 2011
< C     RAVE =  100.*FLOAT(MULT)*AXIAL*FLONG/3.1415927
<       RAVE = CIRC
< C END FEB 2011
---
>       RAVE =  100.*FLOAT(MULT)*AXIAL*FLONG/3.1415927
346,349c332,333
< C BEG FEB 2011
< C     IF (ISTIFF(2).NE.0.AND.ILOCAL.NE.-1)
< C    1       RAVE = 100.0*FLOAT(MULT)*B(2)/3.1415927
< C END FEB 2011
---
>       IF (ISTIFF(2).NE.0.AND.ILOCAL.NE.-1)
>      1       RAVE = 100.0*FLOAT(MULT)*B(2)/3.1415927
399,409c383
< C BEG JUL 2010
< C     WRITE(IFIL14,'(A)')' BOSOR4 INPUT FOR A PANEL'
<       WRITE(IFIL14,'(A)')' BOSOR4 INPUT FOR A PANEL ixprism'
< C BEG FEB 2011
<       IF (ILOCAL.EQ.-1.OR.ILOCAL.EQ.-2)
<      1 WRITE(IFIL14,'(1P,E14.6,A)')
<      1 AXIAL,'      $ AXIALL= length of the prismatic shell'
<       IF (ILOCAL.EQ.0.OR.ILOCAL.EQ.1)
<      1 WRITE(IFIL14,'(1P,E14.6,A)')
<      1 B(2),'      $ AXIALL= length of the prismatic shell'
< C END FEB 2011
---
>       WRITE(IFIL14,'(A)')' BOSOR4 INPUT FOR A PANEL'
411,412c385
<      1 ' 4,1,0,0,', NSEGTL,' $ INDIC,NPRT,ISTRES,IPRE,NSEG'
< C END JUL 2010
---
>      1        ' 4,2,0,0,', NSEGTL,' $ NUMBER OF SEGS IN PANEL '
422,435c395,398
< C BEG JAN 2010
< C23456789012345678901234567890123456789012345678901234567890123456789012
<        IF (ISTIF.EQ.5.AND.ILOCAL.NE.1) THEN
<         CALL SEGMNT(IFIL14,1,NMESH(1),R1TOT(1),Z1TOT(1),R2TOT(1),
<      1  Z2TOT(1),RCTOT(1),ZCTOT(1),NSHAPE(1),SROT(1),CX1(1,1,1),
<      1  IPOINT(1),1,DUMMY,DUMMY,DUMMY,I2,NMESH0(1),
<      1  EFOUND)
<        ELSE
<         CALL SEGMNT(IFIL14,1,NMESH(1),R1TOT(1),Z1TOT(1),R2TOT(1),
<      1  Z2TOT(1),RCTOT(1),ZCTOT(1),NSHAPE(1),SROT(1),CX1(1,1,1),
<      1  IPOINT(1),1,NXVAR1(1,1),NYVAR1(1,1),NXYVR1(1,1),I2,NMESH0(1),
<      1  EFOUND)
<        ENDIF
< C END JAN 2010
---
>        CALL SEGMNT(IFIL14,1,NMESH(1),R1TOT(1),Z1TOT(1),
>      1 R2TOT(1),Z2TOT(1),RCTOT(1),ZCTOT(1),NSHAPE(1),SROT(1),CX1(1,1,1),
>      1 IPOINT(1),1,NXVAR1(1,1),NYVAR1(1,1),NXYVR1(1,1),I2,NMESH0(1),
>      1 EFOUND)
489,523c452,455
< C BEG JAN 2010
< C23456789012345678901234567890123456789012345678901234567890123456789012
<         IF (K.LT.NSEGTL) THEN
<          IF (K.NE.6.OR.B2(1).EQ.0.0) THEN
<           CALL SEGMNT(IFIL14,K,NMESH(I),R1TOT(K),Z1TOT(K),R2TOT(K),
<      1    Z2TOT(K),RCTOT(K),ZCTOT(K),NSHAPE(K),SROT(K),CTOT,
<      1    IPOINT(1),1,NXVAR1(1,I),NYVAR1(1,I),NXYVR1(1,I),I2,
<      1    NMESH0(I),EFOUND)
<          ELSE 
<           IF (ILOCAL.NE.1) THEN
<            CALL SEGMNT(IFIL14,K,NMESH(I),R1TOT(K),Z1TOT(K),R2TOT(K),
<      1     Z2TOT(K),RCTOT(K),ZCTOT(K),NSHAPE(K),SROT(K),CTOT,
<      1     IPOINT(1),1,DUMMY,DUMMY,DUMMY,I2,
<      1     NMESH0(I),EFOUND)
<           ELSE
<            CALL SEGMNT(IFIL14,K,NMESH(I),R1TOT(K),Z1TOT(K),R2TOT(K),
<      1     Z2TOT(K),RCTOT(K),ZCTOT(K),NSHAPE(K),SROT(K),CTOT,
<      1     IPOINT(1),1,NXVAR1(1,I),NYVAR1(1,I),NXYVR1(1,I),I2,
<      1     NMESH0(I),EFOUND)
<           ENDIF
<          ENDIF
<         ELSE
<          IF (ILOCAL.NE.1) THEN
<           CALL SEGMNT(IFIL14,K,NMESH(I),R1TOT(K),Z1TOT(K),R2TOT(K),
<      1    Z2TOT(K),RCTOT(K),ZCTOT(K),NSHAPE(K),SROT(K),CTOT,
<      1    IPOINT(1),1,DUMMY,DUMMY,DUMMY,I2,
<      1    NMESH0(I),EFOUND)
<          ELSE
<           CALL SEGMNT(IFIL14,K,NMESH(I),R1TOT(K),Z1TOT(K),R2TOT(K),
<      1    Z2TOT(K),RCTOT(K),ZCTOT(K),NSHAPE(K),SROT(K),CTOT,
<      1    IPOINT(1),1,NXVAR1(1,I),NYVAR1(1,I),NXYVR1(1,I),I2,
<      1    NMESH0(I),EFOUND)
<          ENDIF
<         ENDIF
< C END JAN 2010
---
>         CALL SEGMNT(IFIL14,K,NMESH(I),R1TOT(K),Z1TOT(K),R2TOT(K),
>      1   Z2TOT(K),RCTOT(K),ZCTOT(K),NSHAPE(K),SROT(K),CTOT,
>      1   IPOINT(1),1,NXVAR1(1,I),NYVAR1(1,I),NXYVR1(1,I),I2,
>      1   NMESH0(I),EFOUND)
571,575c503,504
< C BEG JAN 2010
<        IF (ISTIF.NE.5.OR.M.LT.NSEGTL) THEN
< C23456789012345678901234567890123456789012345678901234567890123456789012
<         CALL SEGMNT(IFIL14,M,NMESH(1),R1TOT(M),Z1TOT(M),R2TOT(M),
<      1  Z2TOT(M),RCTOT(M),ZCTOT(M),NSHAPE(M),SROT(M),CX1(1,1,1),
---
>       CALL SEGMNT(IFIL14,M,NMESH(1),R1TOT(M),Z1TOT(M),R2TOT(M),Z2TOT(M),
>      1 RCTOT(M),ZCTOT(M),NSHAPE(M),SROT(M),CX1(1,1,1),
577c506
<      1  NCALL,1,NX,NY,NXY,I2,NMESH0(1),EFOUND)
---
>      1 NCALL,1,NX,NY,NXY,I2,NMESH0(1),EFOUND)
579,590d507
<        ELSE
<         IF (ILOCAL.NE.1) THEN
<          CALL SEGMNT(IFIL14,M,NMESH(1),R1TOT(M),Z1TOT(M),R2TOT(M),
<      1   Z2TOT(M),RCTOT(M),ZCTOT(M),NSHAPE(M),SROT(M),CX1(1,1,1),
<      1   NCALL,1,DUMMY,DUMMY,DUMMY,I2,NMESH0(1),EFOUND)
<         ELSE
<          CALL SEGMNT(IFIL14,M,NMESH(1),R1TOT(M),Z1TOT(M),R2TOT(M),
<      1   Z2TOT(M),RCTOT(M),ZCTOT(M),NSHAPE(M),SROT(M),CX1(1,1,1),
<      1   NCALL,1,NX,NY,NXY,I2,NMESH0(1),EFOUND)
<         ENDIF
<        ENDIF
< C END JAN 2010
611,616c528,529
< C BEG JUL 2010 (we now use the prismatic formulation in panel3 model)
< C     WRITE(IFIL14,'(4I7,A,I5)')
< C    1     NWAVE,NWAVE,NWAVE,NWAVE,' $ axial halfwaves x',MFACTR
<       WRITE(IFIL14,'(4I7,A)')
<      1     NWAVE,NWAVE,NWAVE,NWAVE,' $ axial halfwaves'
< C END JUL 2010
---
>       WRITE(IFIL14,'(4I7,A,I5)')
>      1     NWAVE,NWAVE,NWAVE,NWAVE,' $ axial halfwaves x',MFACTR
636,646c549,550
< C BEG JAN 2010
< C        IF (ISTIF.EQ.5) WRITE(IFIL14,'(A,4I3,A)')
< C    1           ' 0,1,6,',IUEND,IVSTAR,IWEND,IBETA,',0,0'
<          IF (ILOCAL.NE.1) THEN
<             IF (ISTIF.EQ.5) WRITE(IFIL14,'(A,3I3,A)')
<      1           ' 0,1,8,',IUEND,IVSTAR,IWEND,',1,0,0'
<          ELSE
<             IF (ISTIF.EQ.5) WRITE(IFIL14,'(A,3I3,A)')
<      1           ' 0,1,1,',IUEND,IVSTAR,IWEND,',1,0,0'
<          ENDIF
< C END JAN 2010
---
>          IF (ISTIF.EQ.5) WRITE(IFIL14,'(A,4I3,A)')
>      1           ' 0,1,6,',IUEND,IVSTAR,IWEND,IBETA,',0,0'
686,689c590
< C BEG JAN 2010
<       IF (ISTIF.NE.5.OR.B2(1).EQ.0.0) THEN
<         IKAY6 = 0
<         WRITE(IFIL14,'(A,I3,A,I3)')
---
>       WRITE(IFIL14,'(A,I3,A,I3)')
692,717d592
<       ELSE
<         IF (ILOCAL.NE.1) THEN
<          IKAY6 = 0
<          WRITE(IFIL14,'(A,I3,A,I3)')
<      1 ' 0,0  $ no poles, no connect. to ground;STR.no.',JSTIF,
<      1 ';Seg.no.',I
<         ELSE
<          IF (K.NE.6.AND.K.NE.(NSEGTL-3)) THEN
<           IKAY6 = 0
<           WRITE(IFIL14,'(A,I3,A,I3)')
<      1  ' 0,0  $ no poles, no connect. to ground;STR.no.',JSTIF,
<      1  ';Seg.no.',I
<          ELSE
<           IKAY6 = 1
<           WRITE(IFIL14,'(A,I3,A,I3)')
<      1  ' 0,1  $ no poles, one connect.to ground;STR.no.',JSTIF,
<      1  ';Seg.no.',I
<           IF (K.EQ.6) WRITE(IFIL14,'(A)')
<      1  ' 1   1  1  0  1  0. 0. $ inode, ustar,vstar,wstar,beta,d1,d2'
<           IF (K.EQ.(NSEGTL-3)) WRITE(IFIL14,'(A)')
<      1  ' 1   0  0  0  1  0. 0. $ inode, ustar,vstar,wstar,beta,d1,d2'
<           WRITE(IFIL14,'(A)') ' Y  $ same for prebuckling & buckling'
<          ENDIF
<         ENDIF
<       ENDIF
< C END JAN 2010
961,978c836,838
< C BEG JAN 2010
< C           IFASTN = INODE/2 + 1
<             IF (ILOCAL.NE.1) THEN
<                IFASTN = 3
<             ELSE
<                IFASTN = INODE
<             ENDIF
< C
<             IF (ILOCAL.EQ.1) THEN
< C              WRITE(IFIL14,'(A,5I4,A)')
< C    1                 ' 0,1,',IFASTN,IUEND,IVSTAR,IWEND,IBETA,',0,0'
<                WRITE(IFIL14,'(A,4I4,A)')
<      1                 ' 0,1,',IFASTN,IUEND,IVSTAR,IWEND,',1,0,0'
<             ELSE
<                WRITE(IFIL14,'(A,4I4,A)')
<      1                 ' 0,1,',IFASTN,IUEND,IVSTAR,IWEND,',1,0,0'
<             ENDIF
< C END JAN 2010
---
>             IFASTN = INODE/2 + 1
>             WRITE(IFIL14,'(A,5I4,A)')
>      1                 ' 0,1,',IFASTN,IUEND,IVSTAR,IWEND,IBETA,',0,0'
1077,1078d936
< C BEG JAN 2010
< C23456789012345678901234567890123456789012345678901234567890123456789012
1080d937
< C BEG FEB 2011
1082c939
<      1 1X,A,'.ALL = Input data for BIGBOSOR4-type of preprocessor.'/
---
>      1 1X,A,'.ALL = Input data for BOSOR4-type of preprocessor.'/
1087,1088c944,945
<      1' Next, give the command BIGBOSOR4LOG followed by BIGBOSORALL.'//
<      1' BIGBOSOR4 to be used to find buckling of the panel with'/
---
>      1' Next, give the command  BOSOR4LOG followed by BOSORALL   .'//
>      1' BOSOR4 will be used to find buckling of the entire panel with'/
1091,1093c948,949
<      1' be compared with those calculated from PANDA2')
< C END FEB 2011
< C END JAN 2010
---
>      1' be compared with those calculated from PANDA2 for general'/
>      1' instability.')
1417,1420d1272
< C BEG JUL 2010
<       DIMENSION NXF(100),NYF(100)
<       REAL NXF,NYF
< C END JUL 2010
1460,1463d1311
< C BEG FEB 2011
<          WRITE(IOUT,'(A)')
<      1    ' 0.  0.  0.  0.   $ FIXED RESULTANTS'
< C END FEB 2011
1484,1495d1331
< C BEG JUL 2010
<          DO 50 I = 1,NCALL
<             NXF(I) = 0.0
<             NYF(I) = 0.0
<    50    CONTINUE
<          WRITE(IOUT,60) (NYF(I),I=1,NCALL)
<    60    FORMAT(1P,4E15.6,' $ TRANSVERSE FIXED LOAD'/
<      1         (1P,5E15.5))
<          WRITE(IOUT,70) (NXF(I),I=1,NCALL)
<    70    FORMAT(1P,4E15.6,' $ AXIAL FIXED LOAD'/
<      1         (1P,5E15.5))
< C END JUL 2010
---- diff for file ( bospn2.src ) ----
981,982d980
< C BEG JAN 2010
< C23456789012345678901234567890123456789012345678901234567890123456789012
985c983
<      1 1X,A,'.ALL = Input data for BIGBOSOR4-type of preprocessor.'/
---
>      1 1X,A,'.ALL = Input data for BOSOR4-type of preprocessor.'/
991c989
<      1' BIGBOSOR4 to be used to find buckling of the entire cyl. with'/
---
>      1' BOSOR4 will be used to find buckling of the entire cyl. with'/
996d993
< C END JAN 2010
---- diff for file ( bospn3.src ) ----
211,214c211
< C BEG JUL 2010 (we now use the prismatic formulation for panel3)
< C     NWAVE = NWAVE*100*MULT
<       NWAVE = NWAVE*1*MULT
< C END JUL 2010
---
>       NWAVE = NWAVE*100*MULT
265,270c262,264
< C BEG FEB 2011
< C     RAVE =  100.*FLOAT(MULT)*AXIAL*FLONG/3.1415927
<       RAVE = CIRC
< C     IF (ISTIFF(2).NE.0.AND.ILOCAL.GE.0)
< C    1       RAVE = 100.0*FLOAT(MULT)*B(2)/3.1415927
< C END FEB 2011
---
>       RAVE =  100.*FLOAT(MULT)*AXIAL*FLONG/3.1415927
>       IF (ISTIFF(2).NE.0.AND.ILOCAL.GE.0)
>      1       RAVE = 100.0*FLOAT(MULT)*B(2)/3.1415927
317,327c311
< C BEG JUL 2010
< C     WRITE(IFIL14,'(A)')' BOSOR4 INPUT FOR A PANEL'
<       WRITE(IFIL14,'(A)')' BOSOR4 INPUT FOR A PANEL ixprism'
< C BEG FEB 2011
<       IF (ILOCAL.EQ.-1.OR.ILOCAL.EQ.-2)
<      1 WRITE(IFIL14,'(1P,E14.6,A)')
<      1 AXIAL,'      $ AXIALL= length of the prismatic shell'
<       IF (ILOCAL.EQ.0.OR.ILOCAL.EQ.1)
<      1 WRITE(IFIL14,'(1P,E14.6,A)')
<      1 B(2),'      $ AXIALL= length of the prismatic shell'
< C END FEB 2011
---
>       WRITE(IFIL14,'(A)')' BOSOR4 INPUT FOR A PANEL'
329,330c313
<      1 ' 4,1,0,0,', NSEGTL,' $ INDIC,NPRT,ISTRES,IPRE,NSEG'
< C END JUL 2010
---
>      1        ' 4,2,0,0,', NSEGTL,' $ NUMBER OF SEGS IN PANEL '
522,527c505,506
< C BEG JUL 2010 (we now use the prismatic formulation in panel3 model)
< C     WRITE(IFIL14,'(4I7,A,I5)')
< C    1     NWAVE,NWAVE,NWAVE,NWAVE,' $ axial halfwaves x',MFACTR
<       WRITE(IFIL14,'(4I7,A)')
<      1     NWAVE,NWAVE,NWAVE,NWAVE,' $ axial halfwaves'
< C END JUL 2010
---
>       WRITE(IFIL14,'(4I7,A,I5)')
>      1     NWAVE,NWAVE,NWAVE,NWAVE,' $ axial halfwaves x',MFACTR
543,546c522
< C BEG JUL 2010
<             IF (ILAND.NE.0.OR.ISTIF.NE.5.OR.NSTIF.LE.10)
< C           IF (ILAND.NE.0.OR.ISTIF.NE.5)
<      1           WRITE(IFIL14,'(A,4I3,A)')
---
>             WRITE(IFIL14,'(A,4I3,A)')
548,552d523
<             IF (ILAND.EQ.0.AND.ISTIF.EQ.5.AND.NSTIF.GT.10)
< C           IF (ILAND.EQ.0.AND.ISTIF.EQ.5)
<      1           WRITE(IFIL14,'(A,4I3,A)')
<      1           ' 0,1,7,',IUEND,IVSTAR,IWEND,IBETA,',0,0'
< C END JUL 2010
841,844d811
< C BEG JUL 2010
<          IF (ILAND.EQ.0.AND.ISTIF.EQ.5.AND.NSTIF.GT.10) INODE = 3
< C        IF (ILAND.EQ.0.AND.ISTIF.EQ.5) INODE = 3
< C END JUL 2010
926,927d892
< C BEG JAN 2010
< C23456789012345678901234567890123456789012345678901234567890123456789012
929d893
< C BEG FEB 2011
931c895
<      1 1X,A,'.ALL = Input data for BIGBOSOR4-type of preprocessor.'/
---
>      1 1X,A,'.ALL = Input data for BOSOR4-type of preprocessor.'/
936,937c900,901
<      1' Next, give the command BIGBOSOR4LOG followed by BIGBOSORALL.'//
<      1' BIGBOSOR4 to be used to find buckling of the panel with'/
---
>      1' Next, give the command  BOSOR4LOG followed by BOSORALL   .'//
>      1' BOSOR4 will be used to find buckling of the entire panel with'/
940,942c904,905
<      1' be compared with those calculated from PANDA2')
< C END FEB 2011
< C END JAN 2010
---
>      1' be compared with those calculated from PANDA2 for general'/
>      1' instability.')
1227,1230d1189
< C BEG JUL 2010
<       DIMENSION NXF(100),NYF(100)
<       REAL NXF,NYF
< C END JUL 2010
1262,1265d1220
< C BEG FEB 2011
<          WRITE(IOUT,'(A)')
<      1    ' 0.  0.  0.  0.   $ FIXED RESULTANTS'
< C END FEB 2011
1284,1295d1238
< C BEG JUL 2010
<          DO 50 I = 1,NCALL
<             NXF(I) = 0.0
<             NYF(I) = 0.0
<    50    CONTINUE
<          WRITE(IOUT,60) (NYF(I),I=1,NCALL)
<    60    FORMAT(1P,4E15.6,' $ TRANSVERSE FIXED LOAD'/
<      1         (1P,5E15.5))
<          WRITE(IOUT,70) (NXF(I),I=1,NCALL)
<    70    FORMAT(1P,4E15.6,' $ AXIAL FIXED LOAD'/
<      1         (1P,5E15.5))
< C END JUL 2010
---- diff for file ( buckle.src ) ----
3421c3421
<      1     NMAXSR,' axial halfwaves.',
---
>      1     NMAXSR,' circ. halfwaves.',
---- diff for file ( bucpan1.src ) ----
1915,1934c1915,1916
< C BEG JUL 2010
<           IF (MSKIN.GE.NMINSR.AND.MSKIN.LE.NMAXSR
<      1     .AND.MSKIN.NE.0.AND.ISRIDX.EQ.1.AND.IDESGN.EQ.0
<      1     .AND.ILABEL.GE.9260.AND.IHILOC.NE.0) THEN
<           ISRMOD(7) = 1
<           IF (NNPRT.GE.0) WRITE(IFILE,
<      1    '(/,A,/,A,/,A,/,A,/,A,I5,A,I5,A,/,A,I5,/,A)')
<      1 ' Buckling of the lower skin of the truss-core sandwich',
<      1 ' is not recorded as a margin because this type of buckling',
<      1 ' has been superseded by the results from the discretized',
<      1 ' skin-stringer module model, for which buckling load factors',
<      1 ' have been computed in the range from m = ',NMINSR,' to m = ',
<      1   NMAXSR,' axial halfwaves.',
<      1 ' The critical buckling load from the PANDA-type theory has',
<      1   MSKIN,' axial half waves, which lies within this range.'
<           ENDIF
< C23456789012345678901234567890123456789012345678901234567890123456789012
<           IF (ISRMOD(7).EQ.0)
< C END JUL 2010
<      1   CALL RECORD(1,11,EIGLOC,CLOCAL,MSKIN,NSKIN,ICONST,CONSTR,WORDB,
---
> C         CALL RECORD(1,11,EIGLOC,CLOCL,MSKIN,NSKIN,ICONST,CONSTR,WORDB,
>          CALL RECORD(1,11,EIGLOC,CLOCAL,MSKIN,NSKIN,ICONST,CONSTR,WORDB,
2069,2088c2051
< C BEG JUL 2010
<           IF (MSKIN.GE.NMINSR.AND.MSKIN.LE.NMAXSR.AND.ISTIF(1).EQ.5
<      1     .AND.MSKIN.NE.0.AND.ISRIDX.EQ.1.AND.IDESGN.EQ.0
<      1     .AND.ILABEL.GE.9260.AND.IHILOC.NE.0) THEN
<           ISRMOD(1) = 1
<           IF (NNPRT.GE.0) WRITE(IFILE,
<      1    '(/,A,/,A,/,A,/,A,/,A,I5,A,I5,A,/,A,I5,/,A)')
<      1 ' Buckling of the lower skin of the truss-core sandwich',
<      1 ' is not recorded as a margin because this type of buckling',
<      1 ' has been superseded by the results from the discretized',
<      1 ' skin-stringer module model, for which buckling load factors',
<      1 ' have been computed in the range from m = ',NMINSR,' to m = ',
<      1   NMAXSR,' axial halfwaves.',
<      1 ' The critical buckling load from the PANDA-type theory has',
<      1   MSKIN,' axial half waves, which lies within this range.'
<           ENDIF
< C23456789012345678901234567890123456789012345678901234567890123456789012
<           IF (ISRMOD(1).EQ.0)
< C END JUL 2010
<      1       CALL RECORD(0,1,EIGLOC,CLOCAL,MSKIN,NSKIN,ICONST,CONSTR,
---
>              CALL RECORD(0,1,EIGLOC,CLOCAL,MSKIN,NSKIN,ICONST,CONSTR,
2220,2239c2183
< C BEG JUL 2010
<           IF (MSKIN2.GE.NMINSR.AND.MSKIN2.LE.NMAXSR.AND.ISTIF(1).EQ.5
<      1     .AND.MSKIN2.NE.0.AND.ISRIDX.EQ.1.AND.IDESGN.EQ.0
<      1     .AND.ILABEL.GE.9260.AND.IHILOC.NE.0) THEN
<           ISRMOD(2) = 1
<           IF (NNPRT.GE.0) WRITE(IFILE,
<      1    '(/,A,/,A,/,A,/,A,/,A,I5,A,I5,A,/,A,I5,/,A)')
<      1 ' Buckling of the lower skin of the truss-core sandwich',
<      1 ' is not recorded as a margin because this type of buckling',
<      1 ' has been superseded by the results from the discretized',
<      1 ' skin-stringer module model, for which buckling load factors',
<      1 ' have been computed in the range from m = ',NMINSR,' to m = ',
<      1   NMAXSR,' axial halfwaves.',
<      1 ' The critical buckling load from the PANDA-type theory has',
<      1   MSKIN2,' axial half waves, which lies within this range.'
<           ENDIF
< C23456789012345678901234567890123456789012345678901234567890123456789012
<           IF (ISRMOD(2).EQ.0)
< C END JUL 2010
<      1       CALL RECORD(1,9,EIGLO2,CLOCA2,MSKIN2,NSKIN2,ICONST,CONSTR,
---
>              CALL RECORD(1,9,EIGLO2,CLOCA2,MSKIN2,NSKIN2,ICONST,CONSTR,
2372,2391c2316
< C BEG JUL 2010
<           IF (MSKIN.GE.NMINSR.AND.MSKIN.LE.NMAXSR.AND.ISTIF(1).EQ.5
<      1     .AND.MSKIN.NE.0.AND.ISRIDX.EQ.1.AND.IDESGN.EQ.0
<      1     .AND.ILABEL.GE.9260.AND.IHILOC.NE.0) THEN
<           ISRMOD(6) = 1
<           IF (NNPRT.GE.0) WRITE(IFILE,
<      1    '(/,A,/,A,/,A,/,A,/,A,I5,A,I5,A,/,A,I5,/,A)')
<      1 ' Buckling of the lower skin of the truss-core sandwich',
<      1 ' is not recorded as a margin because this type of buckling',
<      1 ' has been superseded by the results from the discretized',
<      1 ' skin-stringer module model, for which buckling load factors',
<      1 ' have been computed in the range from m = ',NMINSR,' to m = ',
<      1   NMAXSR,' axial halfwaves.',
<      1 ' The critical buckling load from the PANDA-type theory has',
<      1   MSKIN,' axial half waves, which lies within this range.'
<           ENDIF
< C23456789012345678901234567890123456789012345678901234567890123456789012
<           IF (ISRMOD(6).EQ.0)
< C END JUL 2010
<      1       CALL RECORD(0,1,EIGLOC,CLOCAL,MSKIN,NSKIN,ICONST,CONSTR,
---
>              CALL RECORD(0,1,EIGLOC,CLOCAL,MSKIN,NSKIN,ICONST,CONSTR,
6070,6089c5995
< C BEG JUL 2010
<           IF (MMWEB(1).GE.NMINSR.AND.MMWEB(1).LE.NMAXSR
<      1     .AND.MMWEB(1).NE.0.AND.ISRIDX.EQ.1.AND.IDESGN.EQ.0
<      1     .AND.ILABEL.GE.9260.AND.IHILOC.NE.0.AND.ISTIF(1).EQ.5) THEN
<           ISRMOD(3) = 1
<           IF (NNPRT.GE.0) WRITE(IFILE,
<      1    '(/,A,/,A,/,A,/,A,/,A,I5,A,I5,A,/,A,I5,/,A)')
<      1 ' Buckling of the web of the truss-core sandwich',
<      1 ' is not recorded as a margin because this type of buckling',
<      1 ' has been superseded by the results from the discretized',
<      1 ' skin-stringer module model, for which buckling load factors',
<      1 ' have been computed in the range from m = ',NMINSR,' to m = ',
<      1   NMAXSR,' axial halfwaves.',
<      1 ' The critical buckling load from the PANDA-type theory has',
<      1   MMWEB(1),' axial half waves, which lies within this range.'
<           ENDIF
< C23456789012345678901234567890123456789012345678901234567890123456789012
<           IF (ISRMOD(3).EQ.0)
< C END JUL 2010
<      1   CALL RECORD(1,8,EIGWEB(1),CSLOPW(1),MMWEB(1),NNWEB(1),ICONST,
---
>          CALL RECORD(1,8,EIGWEB(1),CSLOPW(1),MMWEB(1),NNWEB(1),ICONST,
6133,6152c6039
< C BEG JUL 2010
<           IF (MMWB2.GE.NMINSR.AND.MMWB2.LE.NMAXSR
<      1     .AND.MMWB2.NE.0.AND.ISRIDX.EQ.1.AND.IDESGN.EQ.0
<      1     .AND.ILABEL.GE.9260.AND.IHILOC.NE.0.AND.ISTIF(1).EQ.5) THEN
<           ISRMOD(4) = 1
<           IF (NNPRT.GE.0) WRITE(IFILE,
<      1    '(/,A,/,A,/,A,/,A,/,A,I5,A,I5,A,/,A,I5,/,A)')
<      1 ' Buckling of the web of the truss-core sandwich',
<      1 ' is not recorded as a margin because this type of buckling',
<      1 ' has been superseded by the results from the discretized',
<      1 ' skin-stringer module model, for which buckling load factors',
<      1 ' have been computed in the range from m = ',NMINSR,' to m = ',
<      1   NMAXSR,' axial halfwaves.',
<      1 ' The critical buckling load from the PANDA-type theory has',
<      1   MMWB2,' axial half waves, which lies within this range.'
<           ENDIF
< C23456789012345678901234567890123456789012345678901234567890123456789012
<           IF (ISRMOD(4).EQ.0)
< C END JUL 2010
<      1   CALL RECORD(1,8,EIGWB2,CSLPW2,MMWB2,NNWB2,ICONST,
---
>          CALL RECORD(1,8,EIGWB2,CSLPW2,MMWB2,NNWB2,ICONST,
6483d6369
< C BEG JUL 2010
6485d6370
<          IF (NNPRT.GE.2.AND.ISTIF(1).NE.5) WRITE(IFILE,'(/,A)')
6487,6490d6371
<          IF (NNPRT.GE.2.AND.ISTIF(1).EQ.5) WRITE(IFILE,'(/,A)')
<      1' Buckling of upper face sheet of truss-core sandwich from GENSTB'
< C23456789012345678901234567890123456789012345678901234567890123456789012
< C END JUL 2010
6527,6546c6408
< C BEG JUL 2010
<           IF (MCROWN(I1).GE.NMINSR.AND.MCROWN(I1).LE.NMAXSR
<      1     .AND.MCROWN(I1).NE.0.AND.ISRIDX.EQ.1.AND.IDESGN.EQ.0
<      1     .AND.ILABEL.GE.9260.AND.IHILOC.NE.0) THEN
<           ISRMOD(10) = 1
<           IF (NNPRT.GE.0) WRITE(IFILE,
<      1    '(/,A,/,A,/,A,/,A,/,A,I5,A,I5,A,/,A,I5,/,A)')
<      1 ' Buckling of the upper skin of the truss-core sandwich',
<      1 ' is not recorded as a margin because this type of buckling',
<      1 ' has been superseded by the results from the discretized',
<      1 ' skin-stringer module model, for which buckling load factors',
<      1 ' have been computed in the range from m = ',NMINSR,' to m = ',
<      1   NMAXSR,' axial halfwaves.',
<      1 ' The critical buckling load from the PANDA-type theory has',
<      1   MCROWN(I1),' axial half waves, which lies within this range.'
<           ENDIF
< C23456789012345678901234567890123456789012345678901234567890123456789012
<           IF (ISRMOD(10).EQ.0)
< C END JUL 2010
<      1     CALL RECORD(1,12,ECROWN(I1),CCROWN(I1),MCROWN(I1),NCROWN(I1),
---
>            CALL RECORD(1,12,ECROWN(I1),CCROWN(I1),MCROWN(I1),NCROWN(I1),
9301c9163
<                EIGSST = 10.E+16
---
>                EIGSST = 10.0E+16
9556c9418,9419
<                 IF (EIGSST.GT.9.9*10**16) THEN
---
> C               IF (EIGSST.GT.9.9*10**16) THEN
>                 IF (EIGSST .GT. 9.9E+16) THEN
9858c9721,9722
<                 IF (EIGSST.GT.9.9*10**16) THEN
---
> C               IF (EIGSST.GT.9.9*10**16) THEN
>                 IF (EIGSST .GT. 9.9E+16) THEN
10212c10076,10077
<                 IF (EIGSST.GT.9.9*10**16) THEN
---
> C               IF (EIGSST.GT.9.9*10**16) THEN
>                 IF (EIGSST .GT. 9.9E+16) THEN
13313,13346c13178,13184
< C BEG APR 2011
<             FKNEIG = 1.0
<             IF (MWAVEX(I).NE.0) THEN
< C
< C              do the following only if there are smeared stringers
< C              (not isogrid) and only if we are at 9260 in STRUCT.
< C              INDX = 2 means "general buckling', INDX=3 means
< C              buckling between rings with smeared stringers.
< C
<                IF (ISTIF(1).NE.0.AND.ISOGRD.EQ.0.AND.ILABLY.EQ.9260
<      1                          .AND.(INDX.EQ.2.OR.INDX.EQ.3)) THEN
<                  EIGAFT = EIGMNC(I)
<                  IF (PARX2.GT.0.1.AND.ISOGRD.EQ.0) THEN
<                     FNWAVE = NWAVEX(I)
<                     CALL EIGKNK(PARX1,PARX2,FNWAVE,EIGMNC(I),
<      1                PX,PY,PXY,EIGAFT,IFILE,NPRNT,INDX,1,0)
<                     FKNEIG = EIGAFT/EIGMNC(I)
< C                   WRITE(8,'(A,2I5,1P,3E12.4)')
< C    1            ' ILABLY, I, EIGMNC(I),EIGAFT,FKNEIG=',
< C    1              ILABLY, I, EIGMNC(I),EIGAFT,FKNEIG
<                     IF (FKNEIG.GT.1.0) FKNEIG = 1.0
<                  ENDIF
<                ENDIF
< C
< C              end of doing only if there are smeared stringers
< C              and only if we are at 9260 in SUBROUTINE STRUCT.
< C
<                IF (FKNEIG*EIGMNC(I).LT.EIGSML) THEN
<                   EIGSML = FKNEIG*EIGMNC(I)
<                   EIGORI = EIGMNC(I)
<                   MMSML  = MWAVEX(I)
<                   NNSML  = NWAVEX(I)
<                   CCSML  = SLOPEX(I)
<                ENDIF
---
> C BEG JUN 1999
>             IF (EIGMNC(I).LT.EIGSML.AND.MWAVEX(I).NE.0) THEN
> C END JUN 1999
>                EIGSML = EIGMNC(I)
>                MMSML  = MWAVEX(I)
>                NNSML  = NWAVEX(I)
>                CCSML  = SLOPEX(I)
13348d13185
< C END APR 2011
13360,13367d13196
< C BEG APR 2011
<          IF (MBAR.LT.0.999.OR.ILABLY.EQ.9260) THEN
<             MBAR = MMSML
<             NBAR = NNSML
<             CSLOPE = CCSML
<             EIGVAL = EIGORI
<          ENDIF
< C END APR 2011
13376,13383c13205,13210
< C BEG APR 2011 (comment them out here; move them up)
< C        IF (MBAR.LT.0.999) THEN
< C           MBAR = MMSML
< C           NBAR = NNSML
< C           CSLOPE = CCSML
< C           EIGVAL = EIGSML
< C        ENDIF
< C END APR 2011
---
>          IF (MBAR.LT.0.999) THEN
>             MBAR = MMSML
>             NBAR = NNSML
>             CSLOPE = CCSML
>             EIGVAL = EIGSML
>          ENDIF
---- diff for file ( bucpan2.src ) ----
73,81d72
< C BEG JUL 2010
<       COMMON/GEOM3/ISTIF(2),NLAYER(4,2),NSEG(2),INTEXT(2)
< C END JUL 2010
< C BEG JAN 2010
<       COMMON/ICONSX/ICONSV
< C END JAN 2010
< C BEG DEC 2009
<       COMMON/ILABLZ/ILABLW
< C END DEC 2009
111,121c102,105
< C BEG JAN 2010
< C BEG JUL 2010
< C     IF (ICONSV.LE.0) THEN
<       IF (ICONSV.LE.0.AND.ISTIF(1).NE.5) THEN
<          KX = 1./(1. + N*ABS(NXF+NX*EIG)/(TX*G(1)))
<          KY = 1./(1. + N*ABS(NYF+NY*EIG)/(TY*G(2)))
<       ELSE
<          KX = 1./(1. + N*ABS(NXF+NX*EIG)/TGS)
<          KY = 1./(1. + N*ABS(NYF+NY*EIG)/TGS)
<       ENDIF
< C END JAN 2010
---
> C     KX = 1./(1. + N*ABS(NXF+NX*EIG)/(TX*G(1)))
> C     KY = 1./(1. + N*ABS(NYF+NY*EIG)/(TY*G(2)))
>       KX = 1./(1. + N*ABS(NXF+NX*EIG)/TGS)
>       KY = 1./(1. + N*ABS(NYF+NY*EIG)/TGS)
193,205c177,186
< C BEG DEC 2009
<       IF (NPRT.GE.2.AND.ILABLY.EQ.9260.AND.ILABLW.EQ.7185) THEN
<          WRITE(8,5) EIGINP,KSTAR,EIG
<     5 FORMAT(/,' In SUBROUTINE SHRRED',/,
<      1' Knockdown due to transverse shear deformation:',/,
<      1' (Kirchoff theory value=',1PE10.2,')x(knockdown=',1PE10.2,
<      1')=(final=',1PE11.3,')')
< C
<          WRITE(8,*)' TX,TY,G(1),G(2)=',TX,TY,G(1),G(2)
<          WRITE(8,*)' KX,KY,TGS,KXY=', KX,KY,TGS,KXY
<          WRITE(8,*)' N,NX,NY,NXY,EIG=',N,NX,NY,NXY,EIG
<       ENDIF
< C END DEC 2009
---
> C     IF (ILABLY.EQ.9260) THEN
> C        WRITE(8,5) EIGINP,KSTAR,EIG
> C   5 FORMAT(' Knockdown due to transverse shear deformation: (Kirchoff 
> C    1theory value=',1PE10.2,')x(knockdown=',1PE10.2,')=(final='1PE11.3
> C    1,')')
> C
> C        WRITE(8,*)' TX,TY,G(1),G(2)=',TX,TY,G(1),G(2)
> C        WRITE(8,*)' KX,KY,TGS,KXY=', KX,KY,TGS,KXY
> C        WRITE(8,*)' N,NX,NY,NXY,EIG=',N,NX,NY,NXY,EIG
> C     ENDIF
211,213d191
< C BEG DEC 2009
<       IF (NPRT.GE.2) WRITE(8,'(A,/)') ' Leaving SUBROUTINE SHRRED'
< C END DEC 2009
3714,3716c3692,3696
<    10 ASSIGN 30 TO NEXT 
<       SUM = ZERO
<       NN = N * INCX 
---
>    10 CONTINUE
> *     ASSIGN 30 TO NEXT
>       NEXT = 1 
>       SUM  = ZERO
>       NN   = N * INCX 
3719c3699,3707
<    20    GO TO NEXT,(30, 50, 70, 110)   
---
>    20 IF (NEXT .EQ. 1) GOTO  30 
>       IF (NEXT .EQ. 2) GOTO  50 
>       IF (NEXT .EQ. 3) GOTO  70 
>       IF (NEXT .EQ. 4) GOTO 110 
>       WRITE(6,3000) NEXT
>  3000 FORMAT(/,'SNRM2 ** ERROR ** assign goto NEXT not = 1,2,3 OR 4',
>      $         ',  NEXT = ',I12)
>       STOP 'ERROR'
> C
3721c3709,3710
<       ASSIGN 50 TO NEXT 
---
> *     ASSIGN 50 TO NEXT
>       NEXT = 2 
3730c3719,3720
<       ASSIGN 70 TO NEXT 
---
> *     ASSIGN 70 TO NEXT
>       NEXT = 3 
3736c3726,3727
<       ASSIGN 110 TO NEXT
---
> *     ASSIGN 110 TO NEXT
>       NEXT = 4
3904,3906d3894
< C
< C
< C
4174c4162
<          IF (ILCGLB.EQ.6) WRITE(IFILE,'(A,)')
---
>          IF (ILCGLB.EQ.6) WRITE(IFILE,'(A)')
---- diff for file ( chauto.src ) ----
181c181
<       WRITE(IFILE8,*)' Now entering AUTOCHANGE: ISTART =',ISTART
---
>       WRITE(IFILE8,*)' Entering AUTOCHANGE: ISTART =',ISTART
---- diff for file ( main.src ) ----
531c531
< C BEG APR 2011 
---
> C BEG JUL 2009 
533,534c533,534
<      1' ************ APRIL, 2011 VERSION OF PANDA2   ************'
< C END APR 2011 
---
>      1' ************ JULY, 2009 VERSION OF PANDA2   ************'
> C END JUL 2009 
---- diff for file ( mainsetup.src ) ----
1647,1649d1646
< C BEG MAY 2011
<          IF (WIMPL(NLOADS).EQ.0.0) WIMPL(NLOADS) = FDEFLT
< C END MAY 2011
---- diff for file ( mode.src ) ----
804,808c804,806
< C BEG NOV 2009
< C              WRATCN = 20.
< C              IF ((ISTIF(ISR).EQ.1.OR.ISTIF(ISR).EQ.2)
< C    1                             .AND.W1.GT.0.05) WRATCN = WFLG/W1
< C
---
>                WRATCN = 20.
>                IF ((ISTIF(ISR).EQ.1.OR.ISTIF(ISR).EQ.2)
>      1                             .AND.W1.GT.0.05) WRATCN = WFLG/W1
810,814d807
<                IF (ISTIF(ISR).EQ.1.OR.ISTIF(ISR).EQ.2) THEN
<                   WRATCN = 20.
<                   IF (W1.GT.0.05) WRATCN = WFLG/W1
<                ENDIF
< C END NOV 2009
---- diff for file ( prompter.src ) ----
337,339c337,344
<         SUBROUTINE      READFF
<      1      (LIST,TYPE,LISTP,STR)
<       INTEGER LIST(1),TYPE(1),STR(1),ENTITY,CHAR,STRP,ENTER,EXPN
---
>       SUBROUTINE  READFF (LIST, TYPE, LISTP, STR)
>       INTEGER     LIST(1), TYPE(1), LISTP, STR(1)
> C+---------------------------------------------------------------------+
> C|    Copyright (c) 1993 Lockheed Missiles & Space Company, Inc.       |
> C|    Research & Development Division.      All Rights Reserved.       |
> C+---------------------------------------------------------------------+
>       CHARACTER*6 NAME
>       INTEGER ENTITY,CHAR,STRP,ENTER,EXPN
343c348
<       CHARACTER*1 AAAA(2), CTL(10), LINE(132)
---
>       CHARACTER*1 AAAA(2), CTL(10), LINE(132), UPCASE
346d350
< C BEG NOV 1992  REMOVE LENGTH FROM LABELLED COMMON BLOCK (IBM TROUBLE)
349d352
< C END NOV 1992
363,367c366,373
<       DATA MSK1,MSK2,MSK3
<      1   /3*0/
< C BEG NOV 1992  (NEXT STATEMENT COMMENTED OUT)
< C     LAND(I,J) = IAND(I,J)
< C END NOV 1992
---
>       DATA MSK1,MSK2,MSK3 /3*0/
> C+---------------------------------------------------------------------+
> C|    define locqal function  LAND(I,J)                                |
> C+---------------------------------------------------------------------+
>       LAND(I,J) = IAND(I,J)
> C
> C
>       NAME='READFF'
369,371c375,380
<                                 GO TO 100
<         ENTRY           R1READ
<      1   (LIST,TYPE,LISTP,STR)
---
>       GO TO 100
> C+---------------------------------------------------------------------+
> C|    entry point:  R1READ                                             |
> C+---------------------------------------------------------------------+
>       ENTRY  R1READ (LIST, TYPE, LISTP, STR)
>       NAME='R1READ'
373,375c382,387
<                                 GO TO 100
<         ENTRY           A1READ
<      1   (LIST,TYPE,LISTP,STR)
---
>       GO TO 100
> C+---------------------------------------------------------------------+
> C|    entry point:  R1READ                                             |
> C+---------------------------------------------------------------------+
>       ENTRY  A1READ (LIST, TYPE, LISTP, STR)
>       NAME='A1READ'
377c389,392
<                                 GO TO 100
---
> C     GO TO 100
> C+---------------------------------------------------------------------+
> C|    entry point:  R1READ                                             |
> C+---------------------------------------------------------------------+
379a395
>  
381c397,399
<   105    ICTL(I) = ICHAR(CTL(I))
---
>         ICTL(I) = ICHAR(CTL(I))
>  105  CONTINUE
> C
387,389c405,407
<          if (line(1) .eq. 'h') then
<            line(1) = 'H'
<          endif
---
> c        if (line(1) .eq. 'h') then
>            line(1) = UPCASE(line(1))
> c        endif
409,411c427,429
< C
<          DO 107 I=1,NCHAR
<   107       STR(I) = ICHAR(LINE(I))
---
>       DO 107 I=1,NCHAR
>         STR(I) = ICHAR(LINE(I))
>   107 CONTINUE
412a431
> C
421c440
<   120 NCHARP= NCHAR+1
---
>   120 NCHARP      = NCHAR+1
423a443
> 
428,429c448,453
<       ASSIGN 180 TO NEXT
<       ASSIGN 300 TO ENTER
---
> 
> *     ASSIGN 180 TO NEXT
> *     ASSIGN 300 TO ENTER
>       ENTER = 2
>       NEXT  = 1
> 
433c457,462
<          IF (NSTR.GT.0)         GO TO ENTER, (300,280)
---
>          IF (NSTR.GT.0)         THEN
>            IF (ENTER .EQ. 1)    GO TO 280
>            IF (ENTER .EQ. 2)    GO TO 300
>            WRITE(6,4) NAME, 'ENTER'
>            STOP 'ERROR'
>          ENDIF
437c466,472
<          IF (NSTR.GT.0)         GO TO ENTER, (300,280)
---
>          IF (NSTR.GT.0)         THEN
>            IF (ENTER .EQ. 1)    GO TO 280
>            IF (ENTER .EQ. 2)    GO TO 300
>            WRITE(6,4) NAME, 'ENTER'
>            STOP 'ERROR'
>          ENDIF
> 
443,444c478,483
<   170    NSTR = 1+NSTR
<                                 GO TO NEXT, (180,500)
---
>   170    NSTR = NSTR+1
>          IF (NEXT .EQ. 1)       GO TO 180
>          IF (NEXT .EQ. 2)       GO TO 500
>          WRITE(6,4) NAME, 'NEXT'
>          STOP 'ERROR'
> 
465,466c504,508
<   230    ASSIGN 280 TO ENTER
<          ASSIGN 500 TO NEXT
---
>   230    CONTINUE
> *        ASSIGN 280 TO ENTER
> *        ASSIGN 500 TO NEXT
>          ENTER = 1
>          NEXT  = 2
467a510
> C
529c572,579
<   510 IF (NSTR.GT.0)  GO TO ENTER, (280,300)
---
>  
>   510 IF (NSTR.GT.0)           THEN
>         IF (ENTER .EQ. 1)      GO TO 280
>         IF (ENTER .EQ. 2)      GO TO 300
>         WRITE(6,4) NAME, 'ENTER'
>         STOP 'ERROR'
>       ENDIF
> 
535a586,587
>     4 FORMAT(/,a,' ** ERROR ** assign goto ',a,
>      $       ' not = 1 or 2?')
537,540d588
< 
< C
< C
< C
---- diff for file ( prompterb4.src ) ----
301,302c301,302
<         SUBROUTINE      READFF
<      1      (LIST,TYPE,LISTP,STR)
---
>       SUBROUTINE  READFF (LIST, TYPE, LISTP, STR)
>       INTEGER     LIST(1), TYPE(1), LISTP, STR(1)
307c307,308
<       INTEGER LIST(1),TYPE(1),STR(1),ENTITY,CHAR,STRP,ENTER,EXPN
---
>       CHARACTER*6 NAME
>       INTEGER ENTITY,CHAR,STRP,ENTER,EXPN
311c312
<       CHARACTER*1 AAAA(2), CTL(10), LINE(132), upcase
---
>       CHARACTER*1 AAAA(2), CTL(10), LINE(132), UPCASE
329,330c330,333
<       DATA MSK1,MSK2,MSK3
<      1   /3*0/
---
>       DATA MSK1,MSK2,MSK3 /3*0/
> C+---------------------------------------------------------------------+
> C|    define locqal function  LAND(I,J)                                |
> C+---------------------------------------------------------------------+
331a335,337
> C
> C
>       NAME='READFF'
333,335c339,344
<                                 GO TO 100
<         ENTRY           R1READ
<      1   (LIST,TYPE,LISTP,STR)
---
>       GO TO 100
> C+---------------------------------------------------------------------+
> C|    entry point:  R1READ                                             |
> C+---------------------------------------------------------------------+
>       ENTRY  R1READ (LIST, TYPE, LISTP, STR)
>       NAME='R1READ'
337,339c346,351
<                                 GO TO 100
<         ENTRY           A1READ
<      1   (LIST,TYPE,LISTP,STR)
---
>       GO TO 100
> C+---------------------------------------------------------------------+
> C|    entry point:  R1READ                                             |
> C+---------------------------------------------------------------------+
>       ENTRY  A1READ (LIST, TYPE, LISTP, STR)
>       NAME='A1READ'
341c353,356
<                                 GO TO 100
---
> C     GO TO 100
> C+---------------------------------------------------------------------+
> C|    entry point:  R1READ                                             |
> C+---------------------------------------------------------------------+
343a359
>  
345c361,363
<   105    ICTL(I) = ICHAR(CTL(I))
---
>         ICTL(I) = ICHAR(CTL(I))
>  105  CONTINUE
> C
373,375c391,393
< C
<          DO 107 I=1,NCHAR
<   107       STR(I) = ICHAR(LINE(I))
---
>       DO 107 I=1,NCHAR
>         STR(I) = ICHAR(LINE(I))
>   107 CONTINUE
376a395
> C
385c404
<   120 NCHARP= NCHAR+1
---
>   120 NCHARP      = NCHAR+1
387a407
> 
392,393c412,417
<       ASSIGN 180 TO NEXT
<       ASSIGN 300 TO ENTER
---
> 
> *     ASSIGN 180 TO NEXT
> *     ASSIGN 300 TO ENTER
>       ENTER = 2
>       NEXT  = 1
> 
397c421,426
<          IF (NSTR.GT.0)         GO TO ENTER, (300,280)
---
>          IF (NSTR.GT.0)         THEN
>            IF (ENTER .EQ. 1)    GO TO 280
>            IF (ENTER .EQ. 2)    GO TO 300
>            WRITE(6,4) NAME, 'ENTER'
>            STOP 'ERROR'
>          ENDIF
401c430,436
<          IF (NSTR.GT.0)         GO TO ENTER, (300,280)
---
>          IF (NSTR.GT.0)         THEN
>            IF (ENTER .EQ. 1)    GO TO 280
>            IF (ENTER .EQ. 2)    GO TO 300
>            WRITE(6,4) NAME, 'ENTER'
>            STOP 'ERROR'
>          ENDIF
> 
407,408c442,447
<   170    NSTR = 1+NSTR
<                                 GO TO NEXT, (180,500)
---
>   170    NSTR = NSTR+1
>          IF (NEXT .EQ. 1)       GO TO 180
>          IF (NEXT .EQ. 2)       GO TO 500
>          WRITE(6,4) NAME, 'NEXT'
>          STOP 'ERROR'
> 
429,430c468,472
<   230    ASSIGN 280 TO ENTER
<          ASSIGN 500 TO NEXT
---
>   230    CONTINUE
> *        ASSIGN 280 TO ENTER
> *        ASSIGN 500 TO NEXT
>          ENTER = 1
>          NEXT  = 2
431a474
> C
493c536,543
<   510 IF (NSTR.GT.0)  GO TO ENTER, (280,300)
---
>  
>   510 IF (NSTR.GT.0)           THEN
>         IF (ENTER .EQ. 1)      GO TO 280
>         IF (ENTER .EQ. 2)      GO TO 300
>         WRITE(6,4) NAME, 'ENTER'
>         STOP 'ERROR'
>       ENDIF
> 
499a550,551
>     4 FORMAT(/,a,' ** ERROR ** assign goto ',a,
>      $       ' not = 1 or 2?')
501d552
< C
---- diff for file ( setup.src ) ----
357c357
<      1                 R1,Z1,R2,Z2,R0,IZSTIF)
---
>      1                R1,Z1,R2,Z2,R0,IZSTIF)
---- diff for file ( smrcij.src ) ----
386,389d385
< C BEG JAN 2010
<       DIMENSION ICXX(4),THRDUM(6),THCUR(6,5),THCDUM(6)
<       DIMENSION CTOT(6,6),ETHDUM(6)
< C END JAN 2010
758,839c754,755
< C BEG DEC 2009
< C BEG JAN 2010
< C23456789012345678901234567890123456789012345678901234567890123456789012
< C Truss-core sandwich wall with extra segments (b2):
< C
< C          < b2 >  ---- Seg. 3 ---->
< C ---------======--------------------======---------<-Upper skin
< C         /-Seg6>\S                 /      \      ^    middle
< C        /        \e              4/        \     !    surface
< C       /        . \g.           g/          \    !
< C      /         !\ \           e/ /          \   h =height from
< C     /            \ \2        S/ /            \  !  midsurface
< C    /                \        /!/              \ !  to midsurface
< C   /  --- Seg. 1----> \<Seg5-/ "                \V
< C ==--------------------======--------------------==<-Lower skin
< C                       < b2 >                        midsurface
< C   <---------- b ----------->
< C
< C A single module consists of Seg. 1 through Seg. 6.
< C Seg. 4 has the same wall construction as Seg. 2.
< C Seg. 5 has wall construction = Seg. 2 + Seg. 1.
< C Seg. 6 has wall construction = Seg. 3 + Seg. 2.
< C
< C GS21 = shear modulus for rightward horizontal displacement of the
< C       top facesheet of the sandwich relative to the bottom face sheet:
< C23456789012345678901234567890123456789012345678901234567890123456789012
< C
<          GS21 = 2.*C(2,2,IWEB)*BB2**2*(1.+ BB2**2/(4.*H**2))/(4.*S*H**2)
<      1        + 48.*C(5,5,IWEB)/H**3
< C
< C The second line of the expression for GS21 is derived with use of
< C Formula 1a in Table 8.1 on p. 189 of ROARK'S FORMULAS FOR STRESS
< C AND STRAIN, 7th edition, Warren C. Young and Richard G. Budynas,
< C McGraw-Hill, 2002
< C
< C GS22 = shear modulus for upward displacement of the point of
< C        of intersection of Segment 6 with Segment 2 relative to the
< C        first point in Segment 6:
< C
< C CTOT(5,5) is the "hoop" bending stiffness of Segment 6 in the
< C sketch above.
< C
<          CTOT(5,5) = C(5,5,1)
< C
< C  IFAYT = 1 means that Segments 5 and 6 in the above sketch
< C  consist of the truss-core wall bonded to the face sheet. Therefore,
< C  we need to compute the "hoop" bending stiffness, CTOT(5,5), by
< C  "stacking" the stiffnesses of the truss-core wall and the face
< C  sheet wall. This computation is performed in SUBROUTINE CSTACK.
< C
<          IF (IFAYT.EQ.1) THEN
<             ICXX(1) = 1
<             ICXX(2) = 2
<             ICXX(3) = 0
<             ICXX(4) = 0
<             CALL CSTACK(IFILE,6,C,THERM,T,2,ICXX,CTOT,THRDUM,
<      1               THCUR,THCDUM)
<             ISEGX = 6
< C           WRITE(IFILE,200) ISEGX
< C 200 FORMAT(/' CONSTITUTIVE MATRIX C(I,J) FOR STACKED WALL; SEGMENT',
< C    1 I3,':',18X,'   THERMAL {NT}  ETHERM {ET}')
< C           CALL OUTCIJ(0,1,IFILE,CTOT,THRDUM,ETHDUM)
<          ENDIF
< C
<          GS22 = 24.*CTOT(5,5)/B2**3 +24.*C(5,5,1)/B2**3
< C
< C The expression for GS22 is derived with the use of
< C Formula 1a in Table 8.1 on p. 189 of ROARK'S FORMULAS FOR STRESS
< C AND STRAIN, 7th edition, Warren C. Young and Richard G. Budynas,
< C McGraw-Hill, 2002
< C
< C
< C GS2 = the overall effective transverse shear modulus, G(yz), is a
< C       combination of GS21 and GS22, as follows::
< C
<          GS2  = 2./(1./GS21 +1./GS22)
< C
< C        WRITE(IFILE,'(A,1P,3E12.4)') ' GS21,GS22,GS2=',GS21,GS22,GS2
< C END JAN 2010
< C        GS2 = 2.*C(2,2,IWEB)*ABS(BB2)*H/(4.*S**3)
< C    1        + 24.*C(5,5,IWEB)/(B*H**2)
< C END DEC 2009
---
>          GS2 = 2.*C(2,2,IWEB)*ABS(BB2)*H/(4.*S**3)
>      1        + 24.*C(5,5,IWEB)/(B*H**2)
---- diff for file ( stagun.src ) ----
205,207d204
< C BEG APR 2011
<       COMMON/ORGCIJ/CXORIG(6,6,5),CYORIG(6,6,5),CSORIG(6,6)
< C END APR 2011
417,421d413
< C BEG APR 2011
<       CALL MOVER(CXORIG,1,CX,1,180)
<       CALL MOVER(CYORIG,1,CY,1,180)
<       CALL MOVER(CSORIG,1,CS,1,36)
< C END APR 2011
502,505c494
< C BEG FEB 2010
< C     IF (YSTAGS.GT.0.98*2.0*PI*ABS(R)) THEN
<       IF (YSTAGS.GT.0.99*2.0*PI*ABS(R)) THEN
< C END FEB 2010
---
>       IF (YSTAGS.GT.0.98*2.0*PI*ABS(R)) THEN
633,650d621
< C BEG FEB 2010
<    99 CONTINUE
<       CALL DATUM(IFILE,819,1,2,NODEY,REALL,CHARAC,IOUT,0,IPROMP)
<       IF (MOD(NODEY,2).EQ.0) THEN
<          WRITE(6,*)' NODEY MUST BE AN ODD INTEGER. TRY AGAIN.'
<           BACKSPACE(IOUT)
<           REWIND IFILE
<       GO TO 99
<       ENDIF
<       IF (NODEY.GT.299) THEN
<          WRITE(6,*)' NODEY EXCEEDS MAX. ALLOWABLE VALUE OF 299.'
<          WRITE(6,*)' PLEASE REDUCE THE NUMBER OF AXIAL NODES.'
<          BACKSPACE(IOUT)
<          REWIND IFILE
<          GO TO 99
<       ENDIF
<       REWIND IFILE
< C END FEB 2010
1093c1064
< C BEG FEB 2007 (It was decided never to use fasteners. )
---
> C BEG FEB 2007 (It was decided never to use fasteners.)
1104c1075
<          WRITE(6,'(A,/,A,/,A,/,A,/,A,/,A,)')
---
>          WRITE(6,'(A,/,A,/,A,/,A,/,A,/,A)')
1132,1137c1103,1105
< C BEG FEB 2010
< C      NODEY = 121 
<        IF (ISMRST.EQ.0.AND.NELCIR.GT.0) NODEY = MULT*NELCIR + 1
<        IF (ISMRST.EQ.0.AND.NELSTR.GT.0)
<      1                       NODEY = MULT*NELSTR*(NSTRNG-1) + 1
< C END FEB 2010
---
>        NODEY = 121 
>        IF (NELCIR.GT.0) NODEY = MULT*NELCIR + 1
>        IF (NELSTR.GT.0) NODEY = MULT*NELSTR*(NSTRNG-1) + 1
1244c1212
<          WRITE(6,'(A,/,A,/,A,/,A,/,A,/,A,)')
---
>          WRITE(6,'(A,/,A,/,A,/,A,/,A,/,A)')
1715,1718d1682
< C BEG JAN 2010
<       IF (ISMRST.EQ.1) IEDGE2 = 0
<       IF (ICLOSE.EQ.1) IEDGE2 = 0
< C END JAN 2010
1796,1799c1760
< C BEG FEB 2010
<       NCOLS(1) = NODEY
<       IF (ISMRST.EQ.0.AND.IYUNI.EQ.1) NCOLS(1) = MULT*NELSTR + 1
< C END FEB 2010
---
>       IF (IYUNI.EQ.1) NCOLS(1) = MULT*NELSTR + 1
1801,1803c1762
< C BEG FEB 2010
<          NCOLS(1) = NODEY 
< C END FEB 2010
---
>          NCOLS(1) = 121
1817,1819c1776
< C BEG FEB 2010
< C     IF (NSTRNG.GT.1.AND.NELSTR.GT.0) THEN
<       IF (NSTRNG.GT.1.AND.NELSTR.GT.0.AND.ISMRST.EQ.0) THEN
---
>       IF (NSTRNG.GT.1.AND.NELSTR.GT.0) THEN
5128,5130c5085
< C BEG MAR 2011
<           WRITE(IFIL14,'(A,3I3,A)')
< C END MAR 2011
---
>           WRITE(IFIL14,'(A,3I2,A)')
5239,5241c5194
< C BEG MAR 2011
<           WRITE(IFIL14,'(A,3I3,A)')
< C END MAR 2011
---
>           WRITE(IFIL14,'(A,3I2,A)')
5319,5321c5272
< C BEG MAR 2011
<          WRITE(IFIL14,'(A,5I3,A)')
< C END MAR 2011
---
>          WRITE(IFIL14,'(A,5I2,A)')
---- diff for file ( stoget.src ) ----
68,70d67
< C BEG APR 2011
<       COMMON/ORGCIJ/CXORIG(180),CYORIG(180),CSORIG(36)
< C END APR 2011
289,291d285
< C BEG APR 2011
<       WRITE(IFILE) (CXORIG(I),I=1,396)
< C END APR 2011
518,520d511
< C BEG APR 2011
<       COMMON/ORGCIJ/CXORIG(180),CYORIG(180),CSORIG(36)
< C END APR 2011
741,743d731
< C BEG APR 2011
<       READ(IFILE) (CXORIG(I),I=1,396)
< C END APR 2011
---- diff for file ( store.src ) ----
309c309
< C BEG JULY 2011
---
> C BEG JUL 2009
311,312c311,312
<      1' ************ JULY, 2011 VERSION OF PANDA2   ************'
< C END JULY 2011
---
>      1' ************ JULY, 2009 VERSION OF PANDA2   ************'
> C END JUL 2009
352,358d351
< C BEG JULY 2011
<       ITERUP = NITER
<       IF (ITYPE.EQ.1.AND.ITRTOT.GT.470.AND.ITRLST.LT.ITRTOT) THEN
<          ITRTOT = 471
<          ITERUP = 471 - ITRLST
<       ENDIF
< C END JULY 2011
412,415c405
< C BEG JULY 2011
< C     DO 300 ITER = 1,NITER
<       DO 300 ITER = 1,ITERUP
< C END JULY 2011
---
>       DO 300 ITER = 1,NITER
650,653c640
< C BEG JULY 2011
< C       DO 30 I = 1,NITER
<         DO 30 I = 1,ITERUP
< C END JUL 2011
---
>         DO 30 I = 1,NITER
684,687c671
< C BEG JULY 2011
< C     DO 50 I = 1,NITER
<       DO 50 I = 1,ITERUP
< C END JULY 2011
---
>       DO 50 I = 1,NITER
777,780c761
< C BEG JULY 2011
< C     DO 500 ITER   = 1,NITER
<       DO 500 ITER   = 1,ITERUP
< C END JULY 2011
---
>       DO 500 ITER   = 1,NITER
1833c1814
< C BEG JULY 2011
---
> C BEG JUL 2009
1835,1836c1816,1817
<      1' ************ JULY, 2011 VERSION OF PANDA2   ************'
< C END JULY 2011
---
>      1' ************ JULY, 2009 VERSION OF PANDA2   ************'
> C END JUL 2009
---- diff for file ( strain.src ) ----
166,176d165
< C BEG NOV 2009
<          IF (ISOMAT(1).EQ.1.AND.ISOEFF(1).EQ.1) WRITE(IFILE,2690)
<  2690    FORMAT(/
<      1' -----------------------------  OR ----------------------------'/
<      1'    '/
<      1' STRESSES AT CRITICAL NODES IN SEGMENTS OF MODULE...'/
<      1' BUCK.  LOCATION  IN  PANEL   WINDING   IN-PLANE STRESSES IN MATL
<      1 COORDS.  MODE OF       VON MISES        ALLOWABLE  MATERIAL'/
<      1' MODE  SEG. NODE LAYER    Z    ANGLE     SIG1        SIG2
<      1SIG12     FAILURE    EFFECTIVE STRESS     STRESS      TYPE')
< C END NOV 2009
256,262d244
< C BEG NOV 2009
<       IF (ISTIF(1).EQ.1.OR.ISTIF(1).EQ.2.OR.ISTIF(1).EQ.3) THEN
<         ISEGM = J
<         NLAY = NLAYER(ISEGM,1)
< C       IF (NLAY.EQ.1.AND.IZSTIF(1).EQ.0.AND.ISEG.EQ.2) ISTEP=1
<       ENDIF
< C END NOV 2009
338,356d319
< C BEG NOV 2009
< C           WDD4M2 = WDDVAR(I-3,ISEG)
< C           DWDD2 = WDD4M - WDD4M2
< C           DDWDD = DWDD - DWDD2
< C           WDDPB = WDDPB + DDWDD
< C23456789012345678901234567890123456789012345678901234567890123456789012
<             IF (ITYPE.EQ.2.AND.IICHAN.EQ.0.AND.NPRT.GE.2)
<      1       WRITE(IFILE,
<      1      '(A,/,A,/,A,I2,A,I2,/,A,I2,A,1P,E12.4,/,A,A,/,A,1P,3E12.4)')
<      1       ' Change local hoop curvature in panel skin at web root',
<      1       ' in order to avoid unconservative hoop bending strain:',
<      1       ' discretized module segment',ISEG,', nodal point',I,
<      1       ' curvature change now used at nodal point',I,
<      1       ': WDDPB =',WDDPB,
<      1       ' post-local-buckling curvatures at the previous',
<      1       ' three nodal points:',
<      1       ' WDDVAR(I-1,2),WDDVAR(I-2,2),WDDVAR(I-3,2) =',
<      1         WDDVAR(I-1,2),WDDVAR(I-2,2),WDDVAR(I-3,2)
< C END NOV 2009
1761,1764d1723
< C BEG NOV 2009
<             CRACKS = CRACKD
<             IF (ISOMAT(M).EQ.1.AND.ISOEFF(M).EQ.1) CRACKD = SIGTST
< C END NOV 2009
1769,1771d1727
< C BEG NOV 2009
<             CRACKD = CRACKS
< C END NOV 2009
---- diff for file ( struct.src ) ----
304,306d303
< C BEG APR 2011
<       COMMON/ORGCIJ/CXORIG(6,6,5),CYORIG(6,6,5),CSORIG(6,6)
< C END APR 2011
936,937c933
< C BEG MAR 2011
<         WRITE(IFILE,'(A,/,A,/,A,/,A)')
---
>         WRITE(IFILE,'(A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
941,946c937,938
<      1 '            popoff constraints [1A].SUBROUTINE STRTHK is used.'
<         WRITE(IFILE,'(A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
<      1 ' CHAPTER 18 Calculate the "mode jumping" margin. which is',
<      1 '            identified by the following string:',
<      1 '            "Hi-axial-wave post-post-buckling of module - 1".',
<      1 '            Present summary of state of loaded imperfect panel',
---
>      1 '            popoff constraints [1A].SUBROUTINE STRTHK is used.',
>      1 ' CHAPTER 18 Present summary of state of loaded imperfect panel',
954d945
< C END MAR 2011
1269,1272c1260
< C BEG APR 2011
< C     IF (IMOD.EQ.1) CALL MOVER(EIGRTY,0,EIGRTX,1,20)
<       IF (IMOD.EQ.1) CALL MOVER(EIGRTY,1,EIGRTX,1,20)
< C END APR 2011
---
>       IF (IMOD.EQ.1) CALL MOVER(EIGRTY,0,EIGRTX,1,20)
1275,1280d1262
< C BEG NOV 2009
<          WMIDA = 0.
<          WMIDB = 0.
<          WMIDT = 0.
<          WMDTOT = 0.
< C END NOV 2009
2116c2098
<       IF (NPRT.GE.1) WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,)')
---
>       IF (NPRT.GE.1) WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A)')
3565,3567d3546
< C BEG NOV 2009
<          WMDTOT = WMIDA + WMIDB + WMIDT
< C END NOV 2009
5750,5753d5728
< C BEG FEB 2010
<               IF (FNARCQ.GT.100.0) RNGKNZ = 1.0
<               IF (RNGKNZ.LE.0.1) RNGKNZ = 0.1
< C END FEB 2010
7237,7248d7211
< C BEG APR 2011
< C           IF (NPRT.GE.2) THEN
< C             WRITE(IFILE,'(A,3I5,1P,3E12.4)')
< C    1             ' ITIPL,ICWEB,IBEAM,WRATTP,WRATCN,FSBSTR= ',
< C    1               ITIPL,ICWEB,IBEAM,WRATTP,WRATCN,FSBSTR
< C             WRITE(IFILE,'(A,1P,4E12.4)')
< C    1             ' EIGSVE,FKNOSV, EIGLCS(1),FKNOCS= ',
< C    1               EIGSVE,FKNOSV, EIGLCS(1),FKNOCS
< C             WRITE(IFILE,'(A)') ' ELOG1,ELOG2,ELOG3,ELOG4,ISANDX= '
< C             WRITE(IFILE,*) ELOG1,ELOG2,ELOG3,ELOG4, ISANDX
< C           ENDIF
< C END APR 2011
8739d8701
< C BEG FEB 2010
8744,8750d8705
<      1            ' Try setting the applied axial resultant, Nx, for'/
<      1            ' this load set equal to a small value compared to'/
<      1            ' the Nx that causes general or local buckling, say'/
<      1            ' Nx = 0.001*Nx(buckling load) or try setting Nx to'/
<      1            ' a small value compared to the maximum compressive'/
<      1            ' applied axial load in any of the other load sets:'/
<      1            ' Nx = 0.001*Nx(applied load in another load set)'/
8752d8706
< C END FEB 2010
9230d9183
< C BEG MAR 2011
9232c9185
<      1 WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
---
>      1 WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
9234,9237c9187
<      1 ' CHAPTER 18 Calculate the "mode jumping" margin. which is',
<      1 '            identified by the following string:',
<      1 '            "Hi-axial-wave post-post-buckling of module - 1".',
<      1 '            Present summary of state of loaded imperfect panel',
---
>      1 ' CHAPTER 18 Present summary of state of loaded imperfect panel',
9241,9243c9191
<      1 '            and inter-ring buckling. See Table 12 in the paper:'
<       IF (NPRT.GE.1)
<      1 WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A)')
---
>      1 '            and inter-ring buckling. See Table 12 in the paper',
9249d9196
< C END MAR 2011
9275,9283d9221
< C BEG NOV 2009
<          IF (IFLAT.EQ.0.AND.IMOD.EQ.0.AND.NPRT.GE.1) WRITE(IFILE,
<      1 '(A,/,A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4)')
<      1 ' Midbay normal displacements for a CURVED panel from SUB.SKIN:',
<      1 ' Midbay normal displacement from Load Set A,   WMIDA =',WMIDA,
<      1 ' Midbay normal displacement from Load Set B,   WMIDB =',WMIDB,
<      1 ' Midbay normal displacement from temperature,  WMIDT =',WMIDT,
<      1 ' Total Midbay normal displacement,            WMDTOT =',WMDTOT
< C END NOV 2009
9861,9867d9798
< C BEG APR 2011
<       IF (ITYPE.EQ.2) THEN
<          CALL MOVER(CX,1,CXORIG,1,180)
<          CALL MOVER(CY,1,CYORIG,1,180)
<          CALL MOVER(CS,1,CSORIG,1,36)
<       ENDIF
< C END APR 2011
9903d9833
< C BEG JUL 2010
9906,9907c9836,9837
<      1    .OR.(IGENRL.EQ.1.AND.ISTIF(2).EQ.0)) THEN
<             WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
---
>      1    .OR.(IGENRL.EQ.1.AND.ISTIF(2).EQ.0))
>      1    WRITE(IFILE,'(/,A,/,A,/,A,/,A)')
9911,9915c9841
<      1' no discretized skin-stringer single module model is used, or',
<      1' there are no stiffeners, or the configuration is truss-core',
<      1' sandwich wall construction, or the wall is isogrid, or',
<      1' IGENRL = 1 and ISTIF(2) = 0.'
<          ENDIF
---
>      1' no discretized skin-stringer single module model is used.' 
9917d9842
< C END JUL 2010
9922,9925c9847
< C BEG JUL 2010
< C     IF (ISTIF(1).EQ.5) GO TO 68
<       IF (ISTIF(1).EQ.5) GO TO 604
< C END JUL 2010
---
>       IF (ISTIF(1).EQ.5) GO TO 68
10277,10282c10199
< C BEG JUL 2010
<   604 CONTINUE
< C     IF (IBEAM.EQ.1.OR.(ISTIF(1).LT.4.AND.ISTIF(1).GT.0)) THEN
<       IF (IBEAM.EQ.1.OR.(ISTIF(1).NE.4.AND.ISTIF(1).GT.0)) THEN
<          IF (ISTIF(1).EQ.5) GO TO 605
< C END JUL 2010
---
>       IF (IBEAM.EQ.1.OR.(ISTIF(1).LT.4.AND.ISTIF(1).GT.0)) THEN
10525,10530c10442
< C BEG JUL 2010
<   605    CONTINUE
< C        IF (IMOD.EQ.0.AND.ISTIF(1).LT.4.AND.ISTIF(1).NE.0
< C    1   .AND.ICONSV.LE.0.AND.(IIKOIT.EQ.0.OR.FSLOC.GT.0.95)
< C    1   .AND.ISRIDX.NE.0.AND.NXVAR(11,3).LT.0.0) IHILOC = 1 
<          IF (IMOD.EQ.0.AND.ISTIF(1).NE.4.AND.ISTIF(1).NE.0
---
>          IF (IMOD.EQ.0.AND.ISTIF(1).LT.4.AND.ISTIF(1).NE.0
10532,10533c10444
<      1   .AND.ISRIDX.NE.0.AND.NXVAR(11,3).LT.0.0) IHILOC = 1
< C END JUL 2010
---
>      1   .AND.ISRIDX.NE.0.AND.NXVAR(11,3).LT.0.0) IHILOC = 1 
10538c10449
< C  Re-enable this branch by commenting out the next statement.(Feb.2009)
---
> C  Re-enable this branch by commenting out the next statement.
10542,10545d10452
< C BEG JUL 2010
<          IF (NPRT.GE.2) WRITE(IFILE,'(/,A,I5)')
<      1 ' The high-m range will be explored if IHILOC=1: IHILOC=',IHILOC
< C END JUL 2010
10561,10563c10468
< C BEG JUL 2010
<          IF (NPRT.GE.1)
<      1     WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
---
>          IF (NPRT.GE.1) WRITE(IFILE,'(/,A,/,A,/,A,/,A,/,A,/,A)')
10569,10573c10474
<      1 '            Item Numbers 682 and 754. If the wall is truss-',
<      1 '            core sandwich, then the complete (low-m and hi-m)',
<      1 '            range of m is explored. See panda2.news Item',
<      1 '            number 819.'
< C END JUL 2010
---
>      1 '            Item Numbers 682 and 754.'
10584,10587d10484
< C BEG JUL 2010
<             IF (ISTIF(1).EQ.5) MSTART = 1
<             IF (ISTIF(1).EQ.5) NMINSR = MSTART
< C END JUL 2010
10637,10639d10533
< C BEG JUL 2010
<             IF (KOUNT.EQ.2.AND.EIG.LT.EIGBF9) ISTART = 2
< C END JUL 2010
10667,10671d10560
< C BEG JUL 2010
< C           IF (NPRT.GE.2) WRITE(IFILE,'(A,/,4I6,1P,2E12.4)')
< C    1    ' ISTART,KOUNT,NOTTST,NLOC(9),EIGMIN,EIGBF9=',
< c    1      ISTART,KOUNT,NOTTST,NLOC(9),EIGMIN,EIGBF9
< C END JUL 2010
10682,10685d10570
< C BEG JUL 2010
< C           IF (NPRT.GE.2) WRITE(IFILE,'(A,I6,A,I6)')
< C    1    ' NMINSR=',NMINSR,';    NMAXSR=',NMAXSR
< C END JUL 2010
11519,11522d11403
< C BEG FEB 2010
<                IF (FNARCQ.GT.100.0) RNGKNK = 1.0
<                IF (RNGKNK.LE.0.1) RNGKNK = 0.1
< C END FEB 2010
12285c12166
<      1       '(/,A,/,A,1P,E12.4,/A,A,/,A,1P,E12.4,)')
---
>      1       '(/,A,/,A,1P,E12.4,/A,A,/,A,1P,E12.4)')
22870,22874d22750
< C BEG FEB 2010
< C              IF (NPRT.GE.2) WRITE(IFILE,'(A,/,I3,1P,5E12.4)')
< C    1       ' In SUBROUTINE SKIN: I,XCOORD,WXXX,WXXXS,WXXXMX,DX=',
< C    1                             I,XCOORD,WXXX,WXXXS,WXXXMX,DX
< C END FEB 2010
22882,22886d22757
< C BEG FEB 2010
< C           IF (NPRT.GE.2) WRITE(IFILE,'(A,1P,3E12.4)')
< C    1    ' In SUBROUTINE SKIN: XMAXQ,WXXX,WXXXMX=',
< C    1                          XMAXQ,WXXX,WXXXMX
< C END FEB 2010
23283,23284d23153
< C BEG FEB 2010
< C23456789012345678901234567890123456789012345678901234567890123456789012
23286,23290c23155
<      1'  Axisymmetric transverse shear deformation,WXXXMX =',1PE12.4,/,
<      1'  The L-direction sandwich core shear margin is based on this',/,
<      1'  maximum third derivative of normal displacement w for BOTH',/,
<      1'  midbay margins (Subcase 1) and "at ring" margins (Subcase 2).')
< C END FEB 2010
---
>      1'  Axisymmetric transverse shear deformation,WXXXMX =',1PE12.4)
24017c23882
<          WRITE(IFILE,'(A,I2')
---
>          WRITE(IFILE,'(A,I2)')
24082c23947
<          WRITE(IFILE,'(A,I2')
---
>          WRITE(IFILE,'(A,I2)')
24109c23974
<          WRITE(IFILE,'(A,I2')
---
>          WRITE(IFILE,'(A,I2)')

