C=DECK      BUCPAN
      SUBROUTINE BUCPAN(IFILE,IDESGN,JJJ,ICONST,CONSTR,WORDB,ISTIF,
     1               IREDUC,KOITER,LENMOD,EIGMAX,FSGEN,FSPAN,FSLOC,
     1               EIGGEN,IPRELM,IPOINC,INUMTT,FKNOCK,IGENRL,
     1               CLOCL,EILOCL,MLOCAL,ISKIN,MSHEAR,NSHEAR,
     1               MNOSHR,NNOSHR,ITUTOR,IWIDE,IQUICK,
     1               FNX,FNY,FNXY,FNX0,FNY0,FNXY0,FNXP0,
     1               FNYP0,FNXYP0,FNXPL0,FNYPL0,FNXYPL,NLOCAL,ITIP,
     1               IABP,MIDEND,EPSLD4,RWBEIG,RWBTOT,ICASE,FSBSTR,
     1               IEIGMD,TLOCAL,IADDFC,IROLE,IADDST,ILABEL,
C BEG NOV 2003
     1               ICD7,ICD8,ICD9,IADDFT,ILOADS,MORCON,NCASES,NUMBUC)
C23456789012345678901234567890123456789012345678901234567890123456789012
C END NOV 2003
C     
C PURPOSE IS TO CALCULATE VARIOUS BUCKLING LOAD FACTORS FROM PANDA-
C TYPE (CLOSED FORM) ANALYSIS (GENSTB, MINVAL) AND RECORD THEM,
C MODIFIED APPROPRIATELY BY FACTORS OF SAFETY, AS BEHAVIORAL CONSTRAINTS
C ON THE DESIGN (RECORD)
C
C BEG MAR 2007
      COMMON/ECCRRR/ECCARR(4),EIEFF2,FNCRIT,ECCN,WIDKNK
C END MAR 2007
C BEG DEC 2004
      COMMON/CSUBXY/CSUBX(6,6),CSUBY(6,6),THSUBX(6),THSUBY(6),
     1                                    THCSBX(6),THCSBY(6)
      DIMENSION WBSUBV(2,4),WBSUBF(2,4)
C END DEC 2004
C BEG JAN 2007
      COMMON/FSALTX/FSALTN
C END JAN 2007
C BEG OCT 2004
C BEG AUG 2005
      COMMON/INGENW/NGENNW,NGENNA(30,5,2)
C END AUG 2005
      COMMON/GEOM1/AXIAL,CIRC,RRRR
C
C  Next, some variables and integers for the alternative buckling solutions
C  (double trig. series expansion):
C  The integer, 6, corresponds to the six possible different alternate models:
C  1 = inter-major-stiffener with smeared substiffeners
C  2 = general buckling 3 x 3 stiffener bay "patch" model, smeared substiffeners
C  3 = inter-major-ring with 3-stringer-bay "patch" and smeared substiffeners
C  4 = inter-major-stiffener with 3 x 3 substiffener bay "patch" model
C  5 = local skin buckling with discrete substiffeners at boundaries
C  6 = inter-subring buckling with 3-substringer-bay "patch" model
C
C  SPANDA = slope of buckling nodal lines from PANDA-type analysis
C  EPANDA = buckling load factor from PANDA-type analysis
C  EALTER = buckling load factor from alternate buckling solution
C  EPHIGH = high-m buckling load factor from PANDA-type analysis
C  ASPECT = domain aspect ratios from alternate soln for unperturbed design:
C           ASPECT(i,1) = XLONG/XLSAVE; ASPECT(i,2) = YLONG/YLSAVE
C  MPANDA = critical number of axial halfwaves from PANDA-type analysis
C  NPANDA = critical number of hoop  halfwaves from PANDA-type analysis
C  MPHIGH = high-m critical number of axial halfwaves from PANDA-type anal.
C  IDISCR = 1 there ARE discrete stiffeners;  0 there are NOT discrete stiff.
C  NUMBST = number of stringers in the alternative buckling model
C  NUMBRG = number of rings     in the alternative buckling model
C  ISIGNA = 0 if alternative soln is critical; 1 if high-m PANDA-type soln
C                                                is critical
C  IALTER = 0 if alternative soln not used;  1 if alternative soln is used
C
      COMMON/VARALT/SPANDA(6),EPANDA(6),EALTER(6),EPHIGH(6),ASPECT(6,2)
      COMMON/INTALT/MPANDA(6),NPANDA(6),MPHIGH(6),IDISCR(6),NUMBST(6),
     1              NUMBRG(6),ISIGNA(6),IALTER(6)
      COMMON/ALTRT2/EGRT10,EGRT11,EGRT12,EGMR10,EGMR11,EGMR12
      COMMON/ALTRT3/EIGLX4,EIGLX5,EIGLX6
      COMMON/ALTRT4/XMULT4,YMULT4,XMULT5,YMULT5,XMULT6,YMULT6
      COMMON/ALTRT5/EIGGX4,EIGGX5,EIGGX6
      DIMENSION NSURFX(2)
C END OCT 2004
C BEG JUN 2004
      DIMENSION TXDUM(6),ETHDUM(6),PRELDS(3),EIGLDS(3)
      DIMENSION WBEIG1(3),WBEIG2(3),WBTOT1(3),WBTOT2(3)
      DIMENSION WBEIG7(3)
      COMMON/      /WWW(60000)
      COMMON/SKPSUB/ISKIPQ(10)
      COMMON/CURVFX/CURVAR,CURFIX
      COMMON/PMD/PWX(23,8),PWDX(23,8),PWDD(23,8),PUX(23,8),PVX(23,8),
     1 PVPX(23,8)
      COMMON/RADM13/WG1S,WYYGNS,WYYPNS,WYYLCS,RADNEW
      COMMON/SUBSTX/TSUB(2,4,2),HSUB(2,4,2),THSUB(2,4,2),
     1              BSUB(2,4,2)
      COMMON/ISBSTF/KLAYER(4,2),NSURF(2,4,2),NB2(2,4,2),
     1              ISOSUB(2,4,2),ISOTYP(2,4,2),MATSUB(2,4,2)
      COMMON/SUBSPC/SPCNG(2,4,2),CX0(6,6,5),CY0(6,6,5),
     1    THRMX0(6,5),THRMY0(6,5),TCURX0(6,5),TCURY0(6,5),
     1    TX0(5),TY0(5),GTX0(2,5),GTY0(2,5),TXXX(2,5),TYYY(2,5),
     1    GTSSUB(2,5)
      COMMON/BUKSB1/EIGSUB(4,2),EISSUB(4,2),EIRSUB(4,2),ESBAXI(4,2)
      COMMON/BUKSB2/TSTSUB(4,2),TSSSUB(4,2),TSRSUB(4,2)
      COMMON/BUKSB3/SLPSUB(4,2),SLSSUB(4,2),SLRSUB(4,2)
      COMMON/BUKSB4/NSUB(4,2),NSSUB(4,2),NRSUB(4,2),ILAMSS(4,2,3)
      COMMON/BUKSB5/MSUB(4,2),MSSUB(4,2),MRSUB(4,2),ILAMSR(4,2)
      COMMON/BUKSB6/ESBRLS(2,4,2),DSBRLS(2,4,2),FSSUBS(2,4,2)
      COMMON/BUKSB7/ESBRLR(2,4,2),DSBRLR(2,4,2),FSSUBR(2,4,2)
      COMMON/BUKSB8/MSBRLS(2,4,2),MSBRLR(2,4,2)
      COMMON/BUKSB9/GTSUBS(2),THSUBS,GTSUBR(2),THSUBR,TXTDIF(2,2)
      COMMON/WXXP/WXX7(2),WXX8,WXX9,WYY7(2),WYY8,WYY9,WXY7(2),WXY8,WXY9,
     1            XF7,XF8,XF9
      COMMON/MATER1/E1(20),E2(20),G(20),FNU(20),DENSX(20)
      COMMON/MATRAN/G13(20),G23(20)
C
      DIMENSION ISTIFX(2),CXSS(6,6),CXSR(6,6),CYSS(6,6),CYSR(6,6)
      DIMENSION G1323(2)
C END JUN 2004
C BEG NOV 2003
      COMMON/IBLADX/IBLADE(2),IBLDUM(2)
      COMMON/IDISCW/IDISCT,IDISCS,IDISC1
      COMMON/EIGXX2/EIGSX0,XMULTS,YMULTS,
     1 ASPSVU,ASPSVV,ASPSVW,ASPSVZ,EIGLX3,FKNMLS
      COMMON/EIGXX3/NMSTRS,NMRNGS,ISIGNS,ISSSRX
C END NOV 2003
C BEG AUG 2003
C BEG NOV 2003 (dimension changed from 2 to 3 to accommodate inter-ring alt. case)
      COMMON/MWHIGX/MWHIGH(3)
C END NOV 2003
      COMMON/RBB0X/RBB0(20)
C END AUG 2003
C BEG DEC 2001
      COMMON/RADM14/IICURV
      COMMON/RADM15/SHRFCT
C END DEC 2001
C BEG AUG 2001
      COMMON/MNGNQQ/MGENQQ,NGENQQ
C END AUG 2001
C BEG DEC 2000
      COMMON/ISOGR2/JSTIFS
      COMMON/ISOGR5/JSTIF1,JSTIF2
C END DEC 2000
C BEG FEB 1996
      COMMON/IRESTX/IRESTY
C END FEB 1996
      COMMON/BOVERW/BOVRW2(2)
      COMMON/MNNOSH/MLOCNS,NLOCNS,MLCNS3,NSLNS3
C BEG MAR 1996
      COMMON/GEOM6/IFAY(2),ITRTOT,IRESET,NLOADS,NSTEPS,WMAX,NCROSS,
     1       NOPLOT,KMAX,ILAYPL,XMAX,XMIN,YMAX,YMIN,N3DPLT,NOBJ,NSTRNS,
     1       NPLTST,NABSCI,IDIAG,ITRALL,IFAYT(2),IBEAM,IMISCL(5)
      COMMON/DOCROL/DOCSTR(2),DOCRNG(2),EROLHS,EROLHR
      COMMON/DOCRL2/MROLST,NROLRG,FSROLS(2),FSROLR(2),FSLOW
C   EROLHS is the eigenvalue for high-wavenumber rolling of stringer;
C   EROLHR is the eigenvalue for high-wavenumber rolling of ring;
C   MROLST is the number of axial halfwaves for hi-wave stringer rolling;
C   NROLRG is the number of circ. halfwaves for hi-wave   ring   rolling;
C   FSROLS(1) is factor of safety for low-wave stringer rolling,no skin;
C   FSROLS(2) is factor of safety for  hi-wave stringer rolling,no skin;
C   FSROLR(1) is factor of safety for low-wave   ring   rolling,no skin;
C   FSROLR(2) is factor of safety for  hi-wave   ring   rolling,no skin;
C   DOCSTR(1) is mode for  low-wavenumber stringer rolling without skin;
C   DOCSTR(2) is mode for high-wavenumber stringer rolling without skin;
C   DOCRNG(1) is mode for  low-wavenumber   ring   rolling without skin;
C   DOCRNG(2) is mode for high-wavenumber   ring   rolling without skin;
C END MAR 1996
C BEG APR 1996
      COMMON/TRMODE/FLOSKN,FWEBSX,FUPSKN,CSTRS1,CSTRS2,CSTRS3
C END APR 1996
C BEG JUN 1996 (ELASTIC FOUNDATION)
      COMMON/XFOUND/EFOUND,HXSIDE,WFOUND(4,2),HEXSID(4,2)
      COMMON/XSANDW/ISANDW(4,2),ICORE(4,2)
C        "F1" signifies "face sheet 1" (top or leftmost face sheet)
C        "F2" signifies "face sheet 2" (bottom or rightmost face sheet)
C  first, thicknesses of face sheets for skin-stringer module...
      COMMON/WSANDW/TXFF1(4),TXFF2(4),CXFF1(6,6,4),CXFF2(6,6,4)
C  next, thicknesses of face sheets for skin-ring module...
      COMMON/YSANDW/TYFF1(4),TYFF2(4),CYFF1(6,6,4),CYFF2(6,6,4)
C  transverse shear moduli of face sheets...
      COMMON/ZSANDW/GTXF1(2,4),GTXF2(2,4),GTYF1(2,4),GTYF2(2,4)
C  membrane loads in the face sheets...
      COMMON/USANDW/FNXF1(4,2),FNXF2(4,2),FNYF1(4,2),FNYF2(4,2),
     1              FNXYF1(4,2),FNXYF2(4,2)
C  wrinkling parameters...
      COMMON/VSANDW/MWAVF1(4,2),MWAVF2(4,2),NWAVF1(4,2),NWAVF2(4,2)
      COMMON/TSANDW/TESTF1(4,2),TESTF2(4,2),SLOPF1(4,2),SLOPF2(4,2)
C BEG JAN 1999
C   reduction factors for foundation modulus for face sheet wrinkling:
C    "B" means "Bushnell formula (GENSTB)", "P" means "Plantema formula"
C    "1" means "face sheet no. 1"         , "2" means face sheet no. 2
      COMMON/MSANDW/FCTFB1(4,2),FCTFP1(4,2),FCTFB2(4,2),FCTFP2(4,2)
C END JAN 1999
C  dimpling parameters...
      COMMON/SSANDW/MWADF1(4,2),MWADF2(4,2),NWADF1(4,2),NWADF2(4,2)
      COMMON/RSANDW/TESDF1(4,2),TESDF2(4,2),SLODF1(4,2),SLODF2(4,2)
C  buckling eigenvalues: EIGW..=face wrinkling; EIGD..=face dimpling
      COMMON/QSANDW/EIGWF1(4,2),EIGWF2(4,2),EIGDF1(4,2),EIGDF2(4,2)
C
C BEG JUN 1999
      COMMON/ITSTBX/ITESTB
C END JUN 1999
C BEG NOV 1999
      COMMON/RNGKNX/RNGKNK
C END NOV 1999
      COMMON/GEOM3/IISTIF(2),NLAYER(4,2),NSEG(2),INTEXT(2)
      COMMON/ISANDR/ISAND,ISANDS
C END JUN 1996
C BEG OCT 1996  (Quantities needed for Vinson-type face wrinkling and
C                core shear crimping formulas)
      COMMON/ASANDW/MPLNT1(4,2),MPLNT2(4,2)
      COMMON/BSANDW/GLUFCT(4,2)
C BEG NOV 1996
      COMMON/XFOUN1/WOVERL(20),FPULL(20),SIGMAA(20),PULTAB(12,20),
     1              FSGTRV(20),SIGCOR(20)
      COMMON/FMAXPP/MAXCON
      COMMON/ITNCRX/ITNCOR(4,2)
      COMMON/PBMODE/WVAR(23,8),WDVAR(23,8),WDDVAR(23,8)
      COMMON/SEGS/NSEGB5,M2X,I5X(95),I2X,I2G
      DIMENSION EIGMF1(4,2),EIGMF2(4,2),CZ(6,6,5),TZFF1(4),TZFF2(4)
      DIMENSION GTZF1(2,4),GTZF2(2,4),CZFF1(6,6,4),CZFF2(6,6,4),TZ(5)
      DIMENSION RESLTZ(9),RPREZ(9)
      CHARACTER*3 SRWORD,ENDMID
      REAL MAXCON
C END NOV 1996
      COMMON/XFOUN2/ECCORE(4,2),GCXP(4,2),GCYP(4,2)
      COMMON/XFOUN3/THEX(20),HXSIDX(20),ECORE(20),WGLUE(20),FKGLUE(20)
      COMMON/XFOUN4/ECOREX(20),RHOC(20),GC(20)
      COMMON/XFOUN5/KCORE(4,2),ISANDM(20),MMATL(4,2)
      COMMON/XFOUN6/MODFNY(4,2)
      COMMON/XFOUN7/WGTTAB(12,20),CRHTAB(12,20),SHLTAB(12,20)
      COMMON/XFOUN8/SHWTAB(12,20),THKTAB(12,20),FNKTAB(12,20)
C BEG NOV 1996
      COMMON/XFOUN9/KOUNTP(20),KOUNTT(20),IUSEHC(20)
C END NOV 1996
C BEG APR 1997
      COMMON/RNGWXX/WXXFLN,POPRNG
      LOGICAL IDOIT1,IDOIT2,IDOIT3
C END APR 1997
      COMMON/MODEL9/QX(23,8),QY(23,8),QXMAX(4,2),QYMAX(4,2)
      COMMON/QYYTOR/QXXMAX(4,2),QYYMAX(4,2),FIQYY
      COMMON/LAYER/MATL(90),LTYPE(99,5,2),TLAYER(90),ANGLE(90)
      COMMON/PCRUSH/CRUSH(4,2)
      COMMON/SCRUSH/CRUSH2,QX2,QY2
      COMMON/MVINSX/MVINSN(4,2)
      CHARACTER*9 MIDWRD
      CHARACTER*2 CISEG,CM
      CHARACTER*7 CN2
C BEG JUN 2004
      CHARACTER*2 CN1
C END JUN 2004
      CHARACTER*8 VINHOF
      COMMON/VINHOY/VINHOX(4,2,2)
      CHARACTER*8 VINHOX
      COMMON/WORDS5/PCWORD(99)
      CHARACTER*80 PCWORD
      COMMON/PLOTCD/ICAR,IADDCC(99),CPLOT(99)
      COMMON/FSAFEB/FSAFEP(99)
      COMMON/VINKNX/VINKNK
      COMMON/PRESSX/PRESS(5)
C BEG MAR 1998
      COMMON/PRESSZ/PRESSR,PRESS0
C BEG APR 1998
C BEG NOV 2001
      COMMON/PRESR2/PKEEP
C END NOV 2001
C BEG JULY 1998
      COMMON/NSKPL/DNWAVE,DNWAV7,DNWAV8,DNWAV9,EIGVLX
C BEG NOV 2003
C     COMMON/ESKPL/EIGRAT(20)
      COMMON/ESKPL/EIGRAT(20),EIGRTY(20)
C END NOV 2003
      COMMON/JJLAST/JLAST,IHIAXL,IFIXMW
      COMMON/IALTSX/IALTSN,IALTSV
C BEG AUG 1998
      COMMON/STFSTF/STFL1,STFL2,STFM1,STFM2,STMM1,STMM2,STORS1,STORS2
      COMMON/IZSTIX/IZSTIF(2)
      DIMENSION CSGEN(6,6),FNXSTR(2),FX0STR(2),ZNXSTR(2)
      DIMENSION FNXRNG(2),FX0RNG(2),ZNXRNG(2)
      COMMON/STFST3/STFIY1,STFIY2
      COMMON/ZPARTS/ZPARTX(5),ZPARTY(5)
      COMMON/EIGXX0/EIGGN0,EIGGX0,XMULT,YMULT,
     1              ASPSVX,ASPSVY,EIGLXX,EIGLX2
      COMMON/EIGXX1/NUMSTR,NUMRNG,ISIGNL,ISIGNG,ILOCAL,IGENRX
      COMMON/FNYAVX/FNYAVE,INYAVE
      COMMON/IDISCY/IDISC0
C END AUG 1998
C BEG FEB 2009
      COMMON/ITIPSB/IFCT12,ITIPL9,IWEBL9,IFLGL9,MMAXSB,
     1              MMINSB,IYLC10,MCRSUB
      COMMON/NSTREX/NMINSR,NMAXSR,ISRMOD(10),ISRIDX
      COMMON/IHILCX/IHILOC
      COMMON/ICONSX/ICONSV
C END FEB 2009
C BEG MAR 2009
      COMMON/NEUTRL/DNEUTX,DNEUTY,DSURF
      DIMENSION CPROPR(6,6)
C END MAR 2009
C BEG OCT 1998
      COMMON/NRNGEX/NMINRG,NMAXRG,IRNMOD(10),IRNIDX
      COMMON/FKNKMX/FKNMLT
      COMMON/FNYAVQ/FNYAVA,FNYAVB,FNYAVT,INYAVA,INYAVB,INYAVT
C END OCT 1998
C END JULY 1998
C END APR 1998
      COMMON/EIG789/EIG7X,EIG8X,EIG9X
C END MAR 1998
C BEG JUN 1998
C BEG JULY 1998
      COMMON/FMDKDX/FMDKD7,FMDKD8,FMDKD9,FLTSL7,FLTSL8,FLTSL9
C END JULY 1998
      COMMON/MCASEZ/MCASL1,MCASS1
      COMMON/ALTRAT/EIGRT7,EIGRT8,EIGRT9,EIGMR7,EIGMR8,EIGMR9
      COMMON/MWAVEY/MWAVEX(7),NWAVEX(7)
      COMMON/MWAVEZ/SLOPEX(7),EIGMNC(7)
C END JUN 1998
      DIMENSION EIGVF1(4,2),EIGVF2(4,2),EIGCOR(4,2)
      DIMENSION EIGVLC(4,2),FNXHAT(4,2),MORCON(5,2)
      REAL LOGHOF,LOGWAV
C END OCT 1996
C BEG OCT 2001 (change common block name because same as variable name
      COMMON/CBOSRX/CXB(6,6,5),CYB(6,6),CSB(6,6),CSWB(6,6),CSRB(6,6)
C END OCT 2001
      COMMON/ALLCIJ/CX(6,6,5),CY(6,6,5),CS(6,6)
      COMMON/WIDCOL/CSWIDE(6,6)
      COMMON/REDGEN/CSREDU(6,6)
      COMMON/CRIPL1/ICRIP,ISEGC
      COMMON/TOTPSR/TOTDIF(2,2),FISKIP(2)
      COMMON/IPANDX/IPANDA,ITIPL,ITIPL1,ITIPL2,IWEBL1
C BEG MAY 1998
      COMMON/EBEAMX/EBEAMR,EIEFF,FSAFE2,EFFLEN,EIGBM1
C END MAY 1998
      CHARACTER*2 CN
      CHARACTER*80 WORDB
      DIMENSION CONSTR(*),WORDB(*),ISTIF(*),IPOINC(*)
      DIMENSION RWBEIG(*),RWBTOT(*)
C
      COMMON/IIIROL/IIROLL,IPREL,IQUIC
      COMMON/NDEBUG/NPRNT
      COMMON/ROLLIT/NSTOT,NRTOT,IROLL(9,9,2),FNUM(9,2),FDEN(9,2)  
      COMMON/STFTHK/C1S(9),C1R(9),C33S(9),C33R(9),ANGLS(9),ANGLR(9)
      COMMON/STR/D11S(9),D12S(9),D22S(9),GJS(9),ALS(9),ASSM(9),ASSM3(9)
      COMMON/RNG/D11R(9),D12R(9),D22R(9),GJR(9),ALR(9),ARSM(9),ARSM3(9)
      COMMON/PARAM1/ E0X,E0Y,A0,B0,ROB,PHI,PI,ERR,ABIG,BBIG 
      COMMON/STR2/ NPARTS,NSEGS(9),NENDS(9)     
      COMMON/RNG2/ NPARTR,NSEGR(9),NENDR(9)     
C BEG AUG 2003
      COMMON/NPRNTX/NPRT
C END AUG 2003
      COMMON/OUTP/NNPRT
      COMMON/CWALL/C11,C12,C22,C33,C44,C45,C55,C66  
C BEG OCT 2001 (name change from PRELOD to avoid variable name conflict)
      COMMON/PRELDX/NX0,NY0   
C END OCT 2001
      REAL NX0, NY0, NNORM,NANGL,NNORM0,NANGL0  
      COMMON/PARAM5/ MBAR,NBAR,NXNORM,NYNORM    
      COMMON/PRESHR/NXY0,E0XY,NXYNRM,ISHEAR,SHEAR,CSTART,NXYSKN,CSKIN   
C BEG OCT 2001 (change name from slope to slopeq to avoid name conflict)
      COMMON/SLOPEQ/CCRIT
C END OCT 2001
C BEG JUN 1996
      COMMON/WALLX/JWALL,KWALL,NLAYEX,NLIP,NSMRS
C END JUN 1996
      COMMON/REWORK/NREDES    
      COMMON/GWAVES/NGEN,MGEN,WSKIN,WSTIFF
C BEG OCT 2001 (name changes from AA5 to AA5XXX to avoid name conflict)
      COMMON/AA5XXX/EIGGNN,EIGLOC,WSTAR,DDXX
C END OCT 2001
      COMMON/PANLNG/TESTLC,TESTGL   
      COMMON/GENLOC/NXFIX,NYFIX,NXYFIX,TEST,E0XP,E0YP 
      COMMON/PRESTS/NXPRE,NYPRE     
      DIMENSION CDUM(6,6)
      COMMON/IRFREX/IRFREE
      COMMON/ISOGR/ISOGRD,ISOANG
      COMMON/LOADS6/RSEIG(3,5,3),RSFXL(3,5,3),RSPGL(3,5,3),RSFIX(3,5,3)
      COMMON/LOADS8/RWEIG(3),RWFXL(3),RWPGL(3),RWFIX(3),RWTOT(3)
      COMMON/LOADS9/RSPRS(3,5,3),ESPRS(3,5,3),RSTOT(3,5,3),RSULT(3,5,3)
      COMMON/LODS11/WBEIG(2,4,2),WBTOT(2,4,2),WBSULT(2,4,2)
      COMMON/RESULZ/PNX,PNY,PNXY
      COMMON/RESULX/RESLTS(9),RESLTR(9),TOTS,TOTR,RSKINX,RSKINY   
      COMMON/IWEAKX/IWEAK
      COMMON/ATRNGS/ATRING
      LOGICAL ATRING
C BEG JULY 1995
      COMMON/ISKPL/ISKIPL,IRMOD,IBLL,ICD7X,ICD8X,ICD9X
      COMMON/DELIM2/DELFCX(3,4),DELWBX(2),DELCUR(3)
C END JULY 1995
C BEG SEP 1995
      COMMON/IGENXX/IGENX
C END SEP 1995
      COMMON/RADIMP/RADMOD,FNWAVX,EIGNOS,FNWNOS,RORIG,W0LOC,
     1              W0GLOB,WG1,WG2
C BEG OCT 2001 (change name from EIGPAN to EIGPNX to avoid conflict)
      COMMON/EIGPNX/EIGLC0,EIGLC1,EIGSM0,EIGSM1,EIGAL0,EIGAL1
C END OCT 2001
      COMMON/NUMPAR/NPAR,NVARB,NALLOW,NNNCON,NDEC,NLINK,NESCAP,ITYPE
C BEG AUG 1993
      COMMON/DELIMP/DELFCE(4,2),DELISO(4,3),DELSKN(3,2,2),DELWEB(2)
      COMMON/FACWIX/FACWID
      COMMON/IROLEX/IROLEY
C END AUG 1993
C BEG JAN 1994
      COMMON/DONNSW/IDONNL(10)
      COMMON/DONWVE/EIGN1(10),EIGN2(10),EIGN3(10),EIGN4(10)
C END JAN 1994
      COMMON/RESLTP/RPRES(9),RPRER(9),TOTPS,TOTPR,RSKNXP,RSKNYP   
      COMMON/SMROLL/EIGRSS,EIGRSR,MRSS,NRSS,MRSR,NRSR 
C BEG OCT 2001 (change name from STRRNG to STRRNX to avoid conflict)
      COMMON/STRRNX/E0YSVE    
C END OCT 2001
      COMMON/DESVAR/ISPACS(4),R     
      COMMON/MORSTB/TESTSS,TESTSR,CSS,CSR,MSS ,NSS ,MSR ,NSR
C BEG NOV 2003
      COMMON/MRSTB2/EIGSS2,TSTSS2,CSS2,MSS2,NSS2,ILOWSS(10,40)
C END NOV 2003
      COMMON/ROLSLP/EIGRGN,CRSLOP,CRLOCL,CRSS,CRSR,TSTRGL,TSTRLC,TSTRSS,
     1 TSTRSR     
      COMMON/MODES2/MSKIN,NSKIN,CLOCAL,CSLOPE   
      COMMON/MODES3/MSKIN2,NSKIN2,CLOCA2,CSLOP2,TESTL2,EIGLO2
      COMMON/WEBBUC/EIGWEB(2),TSTWEB(2),CSLOPW(2),MMWEB(2),NNWEB(2)
      COMMON/BASBUC/EHBASE(4),THBASE(4),CHBASE(4),MHBASE(4),NHBASE(4)
      COMMON/CROWNB/ECROWN(4),TCROWN(4),CCROWN(4),MCROWN(4),NCROWN(4)
      COMMON/WARBUC/MSKINW,NSKINW,TSTLCW,CLOCW,ELOCW
      COMMON/AA8/EIGSS,EIGSR,KWAVES(2,4)
C BEG OCT 2001 (name changes from AA1 to AA1XXX to avoid name conflict)
      COMMON/AA1XXX/EIGSTR(9),EIGRNG(9),EIGRLL(4),XXXX(60)
C END OCT 2001
      COMMON/MISCLN/NMATEL,IFLAT,DENS(10) 
      COMMON/INTCUR/ICURV,IIFILE,DTHETA,THMAX,THMIN,DIADIF
      COMMON/EFFECL/ELNGTH
      COMMON/WBBUC2/EIGWB2,TSTWB2,CSLPW2,MMWB2,NNWB2
      COMMON/ROLEND/TSTRL2,CRLCL2,EIGRL2,MMRL2,NNRL2,EIGRS2,MMRS2
      COMMON/EPRELM/EIGGN1,TSTGL1,CSLOP1,MGEN1,NGEN1
      COMMON/SEGSLP/MSLOPE(8)
C BEG FEB 1995
      COMMON/HATBUC/ICRIP1,ICRIP2,ICRIP3,ICRWN1,ICRWN2,ICRWN3
      COMMON/PSTSTF/EKOISV,FMOD0,ALMOD0,FMMOD0,FNMOD0,FWAVE0
      COMMON/CX110C/CX110(4),CX11R(4)
C END FEB 1995
C BEG JULY 1995
      COMMON/BW2HAT/IBW2HT
      COMMON/ILABLX/ILABLY
C END JULY 1995
      REAL MSLOPE
      REAL NXFIX,NYFIX,NXYFIX 
      REAL NXPRE,NYPRE  
      REAL NXY0,NXYNRM,NXYSKN 
      REAL           MBAR,NBAR,NXNORM,NYNORM,LENMOD    
      EXTERNAL ROLSTR,ROLRNG,EIG1,EIGROL  
      LOGICAL KSKINW
C     
      COMMON/GEOM2/B(2),B2(2),HH(2),WW(2),W2(2)
      COMMON/LOADS/FNXX,FNYY,FNXXYY,RESULT(3,5,2)
      COMMON/LOADS2/FNX00,FNY00,FNXY00,RESFXT(3,5,2)
      COMMON/LOADS5/RESFIX(3,5,2)
      COMMON/LOADS3/RESEIG(3,5,2)
      COMMON/THICK/TX(5),TY(5)
      COMMON/MATRN2/GTX(2,5),GTY(2,5),GTS(2),TEFF(2)
      COMMON/MIDCOM/MIDLTH
      COMMON/CHGCUR/FFLAT(20,2,2),TST2ND(20,2),SLP2ND(20,2),
     1              EIG2ND(20,2),FNEFF(20,2)
      COMMON/MN2ND/M2ND(20,2),N2ND(20,2),IAGAIN(20,2)
      COMMON/NGENX/NWIDPR
      DIMENSION FKNOCK(*)
C     
C ***********************************
C BEG NOV 2003
C     IF (NNPRT.GE.2) WRITE(8,1038) (EIGRAT(I),I=1,20)
C1038 FORMAT(/,' EIGRAT(i),i=1,20)=',/,(1P,5E12.4))
C END NOV 2003
C ***********************************
C
C    FOR PRINTING EIGENVALUES VS. (N,M) DURING SEARCH, SET NPRNT = INDX
C
      NPRNT = 0
      IF (ITUTOR.EQ.2) NPRNT = 2
C BEG APR 2007
C     IF (NUMBUC.EQ.15) NPRNT = 2
C END APR 2007
C     NPRNT = 1
C     NPRNT = 2
C     IF (IPRELM.EQ.0.AND.ILABEL.EQ.9260.AND.IDESGN.EQ.1) NPRNT = 2
C     IF (IPRELM.EQ.1) NPRNT = 2
C     IF (IPRELM.EQ.2) NPRNT = 2
C     IF (IPRELM.EQ.3) NPRNT = 2
C     IF (IPRELM.EQ.4) NPRNT = 2
C     IF (IPRELM.EQ.5) NPRNT = 2
C BEG AUG 1993
C     IF (IRMOD.NE.0) NPRNT = 2
C     IF (IRMOD.NE.0) NPRNT = 1
C     IF (IRMOD.EQ.1) NPRNT = 2
C     IF (IRMOD.EQ.2) NPRNT = 2
C END AUG 1993
C BEG JUNE 1995
C   NOTE: THE LABEL IS 9250, THE NUMBER OF ITERATIONS IS 1; HENCE 9251 .
C     IF (ILABEL.EQ.9251) NPRNT = 1
C     IF (ILABEL.EQ.9210) NPRNT = 2
C END JUNE 1995
C BEG OCT 1996
C     IF (ILABEL.EQ.9150) NPRNT = 2
C END OCT 1996
C BEG FEB 1998
C     IF (ILABEL.EQ.9020) NPRNT = 2
C     IF (ILABEL.EQ.9030) NPRNT = 2
C     IF (ILABEL.EQ.9040) NPRNT = 2
C     IF (ILABEL.EQ.9050) NPRNT = 2
C     IF (ILABEL.EQ.9110) NPRNT = 2
C     IF (ILABEL.EQ.9120) NPRNT = 3
C     IF (ILABEL.EQ.9140) NPRNT = 1
C     IF (ILABEL.EQ.9160) NPRNT = 2
C     IF (ILABEL.EQ.9240) NPRNT = 1
C     IF (ILABEL.EQ.9220) NPRNT = 2
C
C     IF (ILABEL.EQ.9260) NPRNT = 2
C     IF (ILABEL.EQ.9280) NPRNT = 2
C END FEB 1998
C BEG FEB 1999
C     IF (ILABEL.EQ.9125) NPRNT = 1
C END FEB 1999
C     NPRNT = 3
C     NPRNT = 4
C ***********************************
C ***********************************
C BEG JUNE 1995 
      ILABEP = 10*(ILABEL/10)
C BEG NOV 2003
C BEG DEC 2003
      IF (NNPRT.GT.0) WRITE(IFILE,'(A,/,A,/,4I6,1P,E12.4)')
C END DEC 2003
     1 ' ******* ENTERING BUCPAN FROM STRUCT OR STRIMP:',
     1 ' ILABEL,IPRELM,IGENRL,IGENX,   EIGMAX=',
     1   ILABEL,IPRELM,IGENRL,IGENX,   EIGMAX
C END NOV 2003
C END JUNE 1995
C BEG JUN 2004
      ISUB = 0
      IF (KLAYER(1,1).NE.0) ISUB = 2
C END JUN 2004
C
C  FIRST, FILL PANDA COMMON BLOCKS WITH PANDA2 VARIABLES...
C
C*****************************************************************
C BEGIN INITIALIZATION OF PANDA-TYPE ANALYSIS.
C*****************************************************************
C
      CALL PANCOM(IABP,IDESGN,FNX,FNY,FNXY,FNX0,FNY0,FNXY0,
     1      FNXP0,FNYP0,FNXYP0,FNXPL0,FNYPL0,FNXYPL,MIDEND,IREDUC,
C BEG NOV 2003
C BEG JUN 2004
     1      RWBEIG,RWBTOT,IPRELM,IADDFC,IADDST,IADDFT,NUMBUC,
     1      ILABEL)
C END JUN 2004
C END NOV 2003
C
C BEG MAR 1998
      PRESSR = 0.
      PRESS0 = 0.
C BEG NOV 2001  (PKEEP is computed in MAIN)
C     IF (IABP.EQ.1) PRESSR = PRESS(ILOADS)
      IF (IABP.EQ.1) PRESSR = PKEEP
C END NOV 2001
      IF (IABP.EQ.0) PRESS0 = PRESS(ILOADS)
C END MAR 1998
C BEG OCT 1996
      VINHOF = '        '
      ENDMID = 'MID'
      IF (ICASE.EQ.2) ENDMID = 'END'
C BEG DEC 1996
      IF (ICASE.EQ.2.AND.ATRING) ENDMID = 'RNG'
C END DEC 1996
C END OCT 1996
C BEG AUG 1993  (THESE STATEMENTS MOVED UP)
      PNX = RSKINX - RSKNXP   
      PNY = RSKINY - RSKNYP   
      PNXY= NXY0
C BEG JULY 1995
      ILABLY = ILABEL
      SNXY0 = 1.0
      IF (NXY0.NE.0.) SNXY0 = NXY0/ABS(NXY0)
      SNXY1 = 1.0
      IF (RESEIG(3,1,1).NE.0.) SNXY1 = RESEIG(3,1,1)/ABS(RESEIG(3,1,1))
      SNXY3 = 1.0
      IF (RESEIG(3,3,1).NE.0.) SNXY3 = RESEIG(3,3,1)/ABS(RESEIG(3,3,1))
      IF (ISTIF(1).EQ.5.OR.ISTIF(2).EQ.5.OR.ISOGRD.EQ.1)
     1  PNXY = RESEIG(3,1,1) + SNXY1*FLOAT(IADDFC)*DELSKN(3,1,1)
     1                       + SNXY1*FLOAT(IADDFT)*DELFCX(3,1)
C END JULY 1995
      PHISS = PHI 
      PHISR = PHI 
C END AUG 1993
C     
      IROLEY = IROLE
      MIDLTH = MIDEND
      ISKNN = 0
      IF (ISKIN.EQ.1) ISKNN = 1
      IIROLL  = 0
      IKNOCK = 0
      IAGDUM = 0
C BEG AUG 1993
      FACWID = 1.0
C END AUG 1993
      IWARN  = 0
      IPREL  = IPRELM
      IQUIC  = IQUICK
C
      IF (NPRNT.NE.0) THEN
         WRITE(8,*)' NPRNT,IPRELM,IQUICK,MIDEND=',
     1               NPRNT,IPRELM,IQUICK,MIDEND
         WRITE(8,*)' ISKIN,IWIDE,ITIP,IABP,IGENRL=',
     1               ISKIN,IWIDE,ITIP,IABP,IGENRL
      ENDIF
C BEG JUN 1996
      EFOUND = 0.
      IF (ISANDW(1,1).EQ.1.OR.ISANDW(1,1).EQ.NLAYER(1,1))
     1   EFOUND = WFOUND(1,1)
C END JUN 1996
C
      IF (IPRELM.EQ.1.OR.IPRELM.EQ.3) GO TO 10
      IF (IPRELM.EQ.5) GO TO 9
      IF (IDESGN.EQ.0.AND.IPRELM.EQ.2) THEN
         DENOM = SQRT(FNX**2 + FNY**2 + FNXY**2)
C BEG NOV 1997
         IF (DENOM.LE.0.) THEN
            IPREL = 0
            RETURN
         ENDIF
C END NOV 1997
         ANORM = ABS(FNXY)/DENOM
         IF (ANORM.LT.0.999) IKNOCK = 1
         IF (ANORM.GT.0.1.AND.(CX(4,6,1)/FNXY).LT.0.) IWARN = 1
C BEG JAN 1994
         IF (IDONNL(2).EQ.0) THEN
            IKNOCK = 0
            IWARN  = 0
            GO TO 9
         ENDIF
C END JAN 1994
C        WRITE(8,*)' IKNOCK,ANORM,FNXY,DENOM=',IKNOCK,ANORM,FNXY,DENOM
      ENDIF
C
C     WRITE(8,*)' IKNOCK,ANORM=',IKNOCK,ANORM
      IDLOOP = 0  
      DO 3 I = 1,9
      DO 2 J = 1,2
      FNUM(I,J) = 0.0   
      FDEN(I,J) = 0.0   
    2 CONTINUE    
    3 CONTINUE    
C     
C     IF (ICURV.GT.0) WRITE(6,*)' NX0, NY0, NXY0 =', NX0,NY0,NXY0
C     
C BEG AUG 1993
C     MOVE PNX,PNY,PNXY STATEMENTS HIGHER
      IF (IPRELM.EQ.6) THEN
         IKNOCK = 1
         GO TO 410
      ENDIF
C END AUG 1993
C BEG OCT 1996
      IF (IPRELM.EQ.0) CALL MOVER(0.,0,FNXHAT,1,8)
C END OCT 1996
      IF (FSGEN.EQ.0.) GO TO 20
C     
C
C*****************************************************************
C END INITIALIZATION OF PANDA-TYPE ANALYSIS.
C*****************************************************************
C
      IF (IPRELM.EQ.2) CALL MOVER(1.,0,MSLOPE,1,8)
C BEG JULY 1995
C     IF (ISTIF(1).NE.5.AND.IQUICK.EQ.0) THEN
C        IF (IPRELM.EQ.0.AND.IPANDA.EQ.1.AND.MIDEND.EQ.1) GO TO 4
C        IF (IPRELM.NE.2.AND.IPRELM.NE.4) GO TO 9
C   4    CONTINUE
C     ENDIF
C END JULY 1995
      IF (ISOGRD.EQ.1) GO TO 9
      IF (NPARTR.EQ.0.AND.NPARTS.EQ.0) GO TO 10
C
C
C*****************************************************************
C BEGIN VARIOUS LOCAL BUCKLING ANALYSES OF VARIOUS PARTS OF THE
C PANEL SKIN.
C*****************************************************************
C
C BEG JAN 2005
      TXX = TX(1)
      IF (KLAYER(1,1).NE.0) TXX = TXXX(2,1)
C END JAN 2005
      IARGFL = 0
C BEG DEC 2001
C23456789012345678901234567890123456789012345678901234567890123456789012
C     IF (ISTIF(1).NE.0.AND.IQUICK.EQ.0) IARGFL = IKNOCK
      IF (ISTIF(1).NE.0.AND.IQUICK.EQ.0.AND.IICURV.EQ.0) IARGFL = IKNOCK
C END DEC 2001
      IF (IFLAT.NE.0) IARGFL = 1
      IF (ISTIF(1).EQ.5) IARGFL = 1
C
C BEG NOV 2003 (begin big "IF" spanning entire local buckling branch)
C     IF (BOVRW2(1).GT.3.0.AND.BOVRW2(2).GT.1.0
      IF ((BOVRW2(1).GT.3.0.AND.BOVRW2(2).GT.1.0)
C END NOV 2003
     1 .OR.(ISTIF(1).EQ.5.OR.ISTIF(2).EQ.5)) THEN
C
C*****************************************************************
C BEGIN SECTION FOR WHICH (b(1)/w2(1)>3) and (b(2)/w2(2)>1)
C*****************************************************************
C
C BEG OCT 1998
         IF (NNPRT.GE.2) WRITE(IFILE,'(/,A,1P,E12.4,A,1P,E12.4)')
     1     ' Local buckling, C11=',CX(1,1,1),
     1     ', radius, R=',R
C END OCT 1998
C BEG OCT 2004
         IF (NNPRT.GE.2.AND.ILABLY.EQ.9260)
     1      CALL OUTCIJ(15,1,IFILE,CX(1,1,1),TXDUM,ETHDUM)
C END OCT 2004
         IF (IKNOCK.EQ.0.OR.ISTIF(1).NE.5) THEN
            RSAVE = R
            R = RADMOD
            B1MOD = (B0-W2(1))/FNWAVX
C BEG NOV 1995
            IF (ISTIF(1).EQ.5) B1MOD = (B(1) - B2(1))/FNWAVX
C END NOV 1995
            CALL MFILL1(IDESGN,IRMOD,MARG,NARG,TARG,CARG,
     1                  MLOCAL,NLOCAL,TLOCAL,CLOCL,
     1                  MSKIN,NSKIN,TESTLC,CLOCAL)
            CALL GENSTB(1,A0-W2(2),B1MOD,
     1      PNX,PNY,PNXY,RSKNXP,RSKNYP,MARG,NARG,
     1      TARG,CARG,EIGLOC,IDESGN,EIG1,CX(1,1,1),  
C BEG JAN 2005
     1      TX(1),TXX,GTX(1,1),IREDUC,0,IFILE,ITUTOR,JJJ,ISTIF,
C END JAN 2005
     1      RESLTS,RPRES,1,10.E10,0.,FFLAT(1,MIDEND,1),IARGFL,
     1      1,IAGAIN(1,MIDEND),FNEFF(1,MIDEND),7010,EIGRAT(1),
     1      RBB0(1),ILOADS,ICASE)
C BEG NOV 2003
C           IF (IDESGN.EQ.0.AND.ILABLY.EQ.9240) EIGRTY(1) = EIGRAT(1)
C           IF (IDESGN.EQ.1.AND.ILABLY.EQ.9240) EIGRAT(1) = EIGRTY(1)
C END NOV 2003
C BEG FEB 1996
            IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
            CALL MFILL2(IDESGN,IRMOD,MARG,NARG,TARG,CARG,
     1                  MSKIN,NSKIN,TESTLC,CLOCAL)
C
            IF (IAGAIN(1,MIDEND).NE.0) THEN
               CALL MFILL1(IDESGN,IRMOD,MARG,NARG,TARG,CARG,
     1                     MLOCAL,NLOCAL,TLOCAL,CLOCL,
     1                     M2ND(1,MIDEND),N2ND(1,MIDEND),
     1                     TST2ND(1,MIDEND),SLP2ND(1,MIDEND))
               CALL GENSTB(1,A0-W2(2),B1MOD,
     1         PNX,PNY,PNXY,RSKNXP,RSKNYP,MARG,NARG,TARG,CARG,
     1         EIG2ND(1,MIDEND),
C BEG JAN 2005
     1         IDESGN,EIG1,CX(1,1,1),TX(1),TXX,GTX(1,1),
C END JAN 2005
     1         IREDUC,0,IFILE,ITUTOR,JJJ,ISTIF,RESLTS,RPRES,1,
     1         10.E10,0.,FFLAT(1,MIDEND,2),IARGFL,
     1         2,IAGAIN(1,MIDEND),FNEFF(1,MIDEND),7015,EIGRAT(1),
     1         RBB0(1),ILOADS,ICASE)
C BEG FEB 1996
               IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
               CALL MFILL2(IDESGN,IRMOD,MARG,NARG,TARG,CARG,
     1                     M2ND(1,MIDEND),N2ND(1,MIDEND),
     1                     TST2ND(1,MIDEND),SLP2ND(1,MIDEND))
C
               CALL WGTAVE(PNX+RSKNXP,PNY+RSKNYP,PNXY,
     1                  EIG2ND(1,MIDEND),EIGLOC,IAGAIN(1,MIDEND))
            ENDIF
            R = RSAVE
C BEG JULY 2007
            IF (NNPRT.GE.2.OR.
     1        (IDESGN.EQ.0.AND.NNPRT.GE.0.AND.ILABEL.GE.9260)) THEN
               IF (ISAND.EQ.0) WRITE(IFILE,'(/,A,A)')
     1       ' Donnell theory is used for these buckling calculations',
     1       ' in this case.'
               IF (ISAND.EQ.1) WRITE(IFILE,'(/,A,A)')
     1       ' Sanders theory is used for these buckling calculations',
     1       ' in this case.'
               IF (ISAND.EQ.2) WRITE(IFILE,'(/,A,A)')
     1       ' Marlowe theory is used for these buckling calculations',
     1       ' in this case.'
               WRITE(IFILE,'(A,A)')
     1       ' Local buckling load factors & mode shapes before any',
     1       ' knockdown factors applied:'
               WRITE(IFILE,'(A,1P,7E10.2)')' EIGMNC=',(EIGMNC(I),I=1,7)
               WRITE(IFILE,'(A,1P,7E10.2)')' SLOPEX=',(SLOPEX(I),I=1,7)
               WRITE(IFILE,'(A,1P,I5,6I10)')' MWAVEX=',(MWAVEX(I),I=1,7)
               WRITE(IFILE,'(A,1P,I5,6I10)')' NWAVEX=',(NWAVEX(I),I=1,7)
               WRITE(IFILE,'(A,/,A,/,A,/,A)')
     1       ' NOTE: The buckling nodal line slopes, SLOPEX, are as',
     1       ' defined in Fig. 9a or Fig. 9b of the 1987 "Theoretical',
     1       ' basis of the PANDA...",if NWAVEX > 0; that is, there',
     1       ' has not yet been any inversion of SLOPEX when 9b holds.'
C23456789012345678901234567890123456789012345678901234567890123456789012
               WRITE(IFILE,'(/,A,A,/,A,1P,E12.4,A,I4,A,I4,A)')
     1       ' LOCAL BUCKLING FROM PANDA-TYPE THEORY [1B]',
     1       ' AFTER KNOCKDOWN FOR t.s.d.:',
     1       ' EIGLOC = ',EIGLOC,'(m=',MSKIN,',n=',NSKIN,')'
            ENDIF
C END JULY 2007
C BEG JUN 1998
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG OCT 2004
C  store stuff for alternative solution.
            IF (IDESGN.EQ.0.AND.ILABEL.EQ.9260) THEN
               MPANDA(1) = MSKIN
               NPANDA(1) = NSKIN
               SPANDA(1) = CLOCAL
               EPANDA(1) = EIGLOC
               MPHIGH(1) = MWAVEX(3)
               EPHIGH(1) = EIGMNC(3)
               MPANDA(4) = MSKIN
               NPANDA(4) = NSKIN
               SPANDA(4) = CLOCAL
               EPANDA(4) = EIGLOC
               MPHIGH(4) = MWAVEX(3)
               EPHIGH(4) = EIGMNC(3)
             ENDIF
C END OCT 2004
C BEG AUG 1998
            IF (IDESGN.EQ.0.AND.(ILABEL.EQ.9260.OR.ILABEL.EQ.9280)) THEN
               ISIGNL = 0
               ILOCAL = 0
            ENDIF
C           IF (ISTIF(1).NE.5.AND.IDESGN.EQ.0.AND.
C BEG AUG 2003
C           IF (ISTIF(1).NE.5.AND.ISIGNL.EQ.0.AND.
            IF (ISTIF(1).NE.5.AND.ISIGNL.LE.1.AND.
C END AUG 2003
C END AUG 1998
     1        (((ILABEL.EQ.9260.OR.ILABEL.EQ.9280).AND.
C BEG DEC 2001
     1          (IICURV.EQ.1.OR.IQUICK.EQ.1)).OR.
C END DEC 2001
     1        (IPRELM.EQ.0.AND.IPANDA.EQ.1.AND.MIDEND.EQ.1)
C BEG DEC 2001
     1       .OR.(ILABEL.EQ.9140.AND.IQUICK.EQ.0.AND.IICURV.EQ.0))) THEN
C END DEC 2001
C BEG NOV 2003
              EIGLNX = 0.
              NUMSTL = 0
              IDISCL = 0
              FNXRNG(1) = 0.
              FNXRNG(2) = 0.
              FX0RNG(1) = 0.
              FX0RNG(2) = 0.
              ZNXRNG(1) = 0.
              ZNXRNG(2) = 0.
              FNXSTR(1) = 0.
              FNXSTR(2) = 0.
              FX0STR(1) = 0.
              FX0STR(2) = 0.
              ZNXSTR(1) = 0.
              ZNXSTR(2) = 0.
              IF (ISOGRD.EQ.0.AND.ISTIF(1).EQ.3.AND.IQUICK.EQ.0) THEN
C  Discrete stringers...
               IF (ILABEL.EQ.9140.AND.IQUICK.EQ.0.AND.IICURV.EQ.0)
     1           GO TO 1015
               IDISCL = 1
               NUMSTL = 2
               ADDEA = (CX(1,1,2) - CX(1,1,1))*B2(1)
               IF (IZSTIF(1).EQ.1) ADDEA = 0.0
               EAS  = STFL1*B(1) + ADDEA
               EIYS = STFIY1
               GJSS  = STORS1*B(1)
               ECCS = ABS(STFM1/STFL1)
               EIXS = (STMM1-STFL1*ECCS**2)*B(1)
               SPRNG = B(2)
               FNXSTR(1) = (RESLTS(1)-RPRES(1))*HH(1)
               FNXSTR(2) = (RESLTS(2)-RPRES(2))*WW(1)
               IF (IBLADE(1).EQ.1) THEN
                  FNXSTR(1) = 0.
                  FNXSTR(2) = 0.
                  IF (NNPRT.GE.2) WRITE(IFILE,'(A)')
     1         ' Stringer eig.prestress set to zero because IBLADE(1)=1'
               ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
               FX0STR(1) = RPRES(1)*HH(1)
               FX0STR(2) = RPRES(2)*WW(1)
               ZNXSTR(1) = -ZPARTX(3)
               ZNXSTR(2) = -ZPARTX(4)
               IF (IFLAT.EQ.0.AND.R.LT.0.) THEN
                  ECCS = -ECCS
                  ZNXSTR(1) = -ZNXSTR(1)
                  ZNXSTR(2) = -ZNXSTR(2)
               ENDIF
               IF (NNPRT.GE.2) THEN
                 WRITE(IFILE,'(A,/,1P,7E11.3)')
     1   ' Discrete stringers: EAS,EIXS,EIYS,GJSS,ECCS,A0-W2(2),B1MOD=',
     1                         EAS,EIXS,EIYS,GJSS,ECCS,A0-W2(2),B1MOD
                 WRITE(IFILE,'(A,A,/,1P,6E12.4)')
     1   ' Preload in web: HH(1),RESLTS(1)-RPRES(1),RPRES(1),FNXSTR(1)',
     1         ',FX0STR(1),ZNXSTR(1)=',
     1           HH(1),RESLTS(1)-RPRES(1),RPRES(1),FNXSTR(1),FX0STR(1),
     1           ZNXSTR(1)
                 WRITE(IFILE,'(A,A,/,1P,6E12.4)')
     1  ' Preload in flng: WW(1),RESLTS(2)-RPRES(2),RPRES(2),FNXSTR(2)',
     1         ',FX0STR(2),ZNXSTR(2)=',
     1           WW(1),RESLTS(2)-RPRES(2),RPRES(2),FNXSTR(2),FX0STR(2),
     1           ZNXSTR(2)
               ENDIF
C
 1015          CONTINUE
C23456789012345678901234567890123456789012345678901234567890123456789012
C New call to ALTSOL for local buckling by alternative method...
               CALL ALTSOL(A0-W2(2),B1MOD,ABS(R),CX(1,1,1),PNX,PNY,PNXY,
     1         RSKNXP,RSKNYP,0.,NNPRT,IFLAT,MSKIN,NSKIN,CLOCAL,EIGLOC,
C BEG JAN 2005
     1         ISAND,IREDUC,EIGLNX,TX(1),TXX,GTX(1,1),IFILE,MWAVEX(3),
C END JAN 2005
     1         EIGMNC(3),ILABEL,IQUICK,B(1),SPRNG,EAS,EIXS,EIYS,GJSS,
     1         ECCS,0.,0.,0.,0.,0.,FNXSTR,FX0STR,ZNXSTR,
     1         FNXRNG,FX0RNG,ZNXRNG,IDISCL,
     1         IDESGN,1,NUMSTL,0,ASPSVU,ASPSVV,ISIGNL,
     1         ILOCAL,GTX(1,5),TX(1),ISTIF(2),MWHIGH(1),ICASE,
     1         KLAYER(1,1))
C
              ELSE
C                END:   ISOGRD.EQ.0.AND.ISTIF(1).EQ.3.AND.IQUICK.EQ.0
C                BEGIN: ISOGRD.NE.0.OR.ISTIF(1).NE.3.OR.IQUICK.EQ.0
C Old call to ALTSOL for local buckling,,,
               IF (ISOGRD.EQ.0.AND.(ISTIF(1).NE.3.OR.IQUICK.EQ.0))
     1         CALL ALTSOL(A0-W2(2),B1MOD,ABS(R),CX(1,1,1),PNX,PNY,PNXY,
     1         RSKNXP,RSKNYP,0.,NNPRT,IFLAT,MSKIN,NSKIN,CLOCAL,EIGLOC,
C BEG JAN 2005
     1         ISAND,IREDUC,EIGLNX,TX(1),TXX,GTX(1,1),IFILE,MWAVEX(3),
C END JAN 2005
     1         EIGMNC(3),ILABEL,IQUICK,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,
     1         0.,FNXSTR,FX0STR,ZNXSTR,FNXRNG,FX0RNG,ZNXRNG,
     1         0,IDESGN,1,0,0,ASPSVU,ASPSVV,ISIGNL,
     1         ILOCAL,GTX(1,5),TX(1),ISTIF(2),MWHIGH(1),ICASE,
     1         KLAYER(1,1))
              ENDIF
C                 END:  ISOGRD.NE.0.OR.ISTIF(1).NE.3.OR.IQUICK.EQ.0
C
              IF (ISOGRD.EQ.0.AND.IDESGN.EQ.0) THEN
C END NOV 2003
                  FLTSL7 = 0.
                  IF (EIGLNX.LT.10.E+15.AND.ILABEL.NE.9140) FLTSL7 = 1.0
                  EIGRT7 = 1.0
                  EIGMR7 = 1.0
                  IF (ABS(EIGLNX).LT.10.E+15)
     1               EIGRT7 = ABS(EIGLNX/EIGLOC)
C BEG NOV 2003
                  IF (ISTIF(1).EQ.3.AND.
     1                  (ILABEL.EQ.9260.OR.ILABEL.EQ.9280)) EIGRT7 = 1.0
C END NOV 2003
                  IF (EIGRT7.GT.10.0.OR.EIGRT7.LT.0.1) THEN
C BEG NOV 2003
C BEG DEC 2004
                   IF (EIGLNX.GT.0.0)
     1          WRITE(IFILE,'(A,/,A,/,A,/,A,1P,E12.4,/,A,1P,E12.4,/,A)')
C END NOV 2003
     1          ' **** WARNING *** WARNING *** WARNING *** WARNING ***',
     1         ' Peculiar ratio of eigenvalues from (alt./old) theory',
     1      ' for buckling between major stiffeners(smeared substiff):',
     1          ' Local buckling load factor from old  theory=',EIGLOC,
     1          ' Local buckling load factor from alt. theory=',EIGLNX,
     1          ' **** WARNING *** WARNING *** WARNING *** WARNING ***'
C END DEC 2004
                   EIGRT7 = 1.0
C BEG OCT 1998
                   IF (EIGLNX.GT.10.*EIGLOC) THEN
                      EIGLNX = EIGLOC
                      IALTSV = 0
                      IALTSN = 0
                   ENDIF
C END OCT 1998
                  ENDIF
C BEG AUG 1998
C                 IF ((ILABEL.EQ.9260.OR.
C    1               (ILABEL.EQ.9280.AND.IALTSV.NE.0))
C    1              .AND.ITYPE.EQ.1) EIGMR7 = EIGRT7
                  IF (IALTSV.EQ.1.AND.ILOCAL.EQ.0.AND.
     1               (ILABEL.EQ.9260.OR.ILABEL.EQ.9280)) EIGMR7=EIGRT7
C END AUG 1998
                  IF (NNPRT.GE.3.AND.ITYPE.EQ.1)
     1              WRITE(IFILE,'(A,1P,2E12.4)')' EIGMR7,EIGRT7=',
     1                                            EIGMR7,EIGRT7
                  IF (ISIGNL.EQ.1) EIGLXX = EIGLNX
C                 WRITE(IFILE,'(A,2I3,1P,2E12.4)')
C    1          ' IDESGN,ISIGNL,EIGLNX,EIGLXX=',
C    1            IDESGN,ISIGNL,EIGLNX,EIGLXX
C BEG OCT 2004
                  IF (IDESGN.EQ.0.AND.ILABEL.EQ.9260) THEN
                     EALTER(1) = EIGLNX
                     IDISCR(1) = IDISCL
                     NUMBST(1) = NUMSTL
                     NUMBRG(1) = 0 
                     ASPECT(1,1) = ASPSVU
                     ASPECT(1,2) = ASPSVV
                     ISIGNA(1) = ISIGNL
                     IALTER(1) = ILOCAL
                   ENDIF
C END OCT 2004
              ENDIF
C                 END: ISOGRD.EQ.0.AND.IDESGN.EQ.0
C END AUG 1998
            ENDIF
C               END: IF (ISTIF(1).NE.5.AND.ISIGNL.LE.1.AND.
C                     (((ILABEL.EQ.9260.OR.ILABEL.EQ.9280).AND.
C                       (IICURV.EQ.1.OR.IQUICK.EQ.1)).OR.
C                       (IPRELM.EQ.0.AND.IPANDA.EQ.1.AND.MIDEND.EQ.1)
C              .OR.(ILABEL.EQ.9140.AND.IQUICK.EQ.0.AND.IICURV.EQ.0))) THEN
C END JUN 1998
         ELSE
C           END:   IKNOCK.EQ.0.OR.ISTIF(1).NE.5
C           BEGIN: IKNOCK.NE.0.AND.ISTIF(1).EQ.5
            CALL MFILL1(IDESGN,IRMOD,MARG,NARG,TARG,CARG,
     1                  MLOCAL,NLOCAL,TLOCAL,CLOCL,
     1                  MSKIN,NSKIN,TESTLC,CLOCAL)
C BEG NOV 1995
            B1MOD = B0 - W2(1)
            IF (ISTIF(1).EQ.5) B1MOD = B(1) - B2(1)
            CALL GENSTB(1,A0-W2(2),B1MOD,
C END NOV 1995
     1      PNX+RSKNXP,PNY+RSKNYP,PNXY,0.,0.,MARG,NARG, 
     1      TARG,CARG,EIGLOC,IDESGN,EIG1,CX(1,1,1),  
C BEG JAN 2005
     1      TX(1),TXX,GTX(1,1),IREDUC,0,IFILE,ITUTOR,JJJ,ISTIF,
C END JAN 2005
     1      RESLTS,RPRES,1,10.E10,0.,FFLAT(1,MIDEND,1),IARGFL,
     1      1,IAGAIN(1,MIDEND),FNEFF(1,MIDEND),7020,EIGRAT(1),
     1      RBB0(1),ILOADS,ICASE)
C BEG FEB 1996
            IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
            CALL MFILL2(IDESGN,IRMOD,MARG,NARG,TARG,CARG,
     1                  MSKIN,NSKIN,TESTLC,CLOCAL)
         ENDIF
C            END: IKNOCK.NE.0.AND.ISTIF(1).EQ.5
C
         ARG3  = PNX
         ARG4  = PNY
         ARG5  = EIGLOC
         IARGM = MSKIN
         IARGN = NSKIN
         ICHOOS= 1
         IF (ISTIF(1).EQ.5.AND.IKNOCK.EQ.1) THEN
            MSLOPE(1) = CLOCAL
            EIGTM0    = EIGLOC
            CSTRS1    = CLOCAL
            FLX1      = PNX + RSKNXP
            FLY1      = PNY + RSKNYP
            FLXY1     = PNXY
            MMM = 1
            NNN = 1
            CLOC = 0.
            TESTLL = 10.
C BEG JULY 1995
            RSUM1 = RESEIG(1,3,1) + RESFIX(1,3,1)
     1                            + FLOAT(IADDFT)*DELFCX(1,3)
            RSUM2 = RESEIG(2,3,1) + RESFIX(2,3,1)
     1                            + FLOAT(IADDFT)*DELFCX(2,3)
            RSUM3 = RESEIG(3,3,1)+SNXY3*FLOAT(IADDFT)*DELFCX(3,3)
C BEG JUN 1996
            EFOUND = 0.
            IF (ISANDW(3,1).EQ.1.OR.ISANDW(3,1).EQ.NLAYER(3,1))
     1       EFOUND = WFOUND(3,1)
C END JUN 1996
C BEG NOV 1995
            B1MOD = B0
            IF (ISTIF(1).EQ.5) B1MOD = B(1) - B2(1)
            CALL GENSTB(1,A0,B1MOD,RSUM1,RSUM2,RSUM3,0.,0.,MMM,NNN,
C END NOV 1995
C END JULY 1995
     1       TESTLL,CLOC,EIGTMP,IDESGN,EIG1,CX(1,1,3),
     1       TX(3),TX(3),GTX(1,3),IREDUC,0,IFILE,ITUTOR,
     1       JJJ,ISTIF,RESLTS,RPRES,1,10.E10,0.,FFLAT(1,MIDEND,1),
     1       IARGFL,1,IAGAIN(1,MIDEND),FNEFF(1,MIDEND),7025,EIGRAT(1),
     1       RBB0(1),ILOADS,ICASE)
C BEG FEB 1996
            IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
C
            MSLOPE(3) = CLOC
            CSTRS3    = CLOC
            FLX3      = RSUM1
            FLY3      = RSUM2
C BEG JULY 1995
            FLXY3     = RSUM3
C END JULY 1995
            IF (EIGTMP.GT.0.0.AND.EIGTMP.LT.EIGLOC) THEN
C BEG JULY 1995
               ARG3 = RSUM1 - RESFIX(1,3,1)
               ARG4 = RSUM2 - RESFIX(2,3,1)
C END JULY 1995
               ARG5 = EIGTMP
              IARGM = MMM
              IARGN = NNN
              ICHOOS= 2
              EIGLOC = EIGTMP
              MSKIN = MMM
              NSKIN = NNN
              CLOCAL = CLOC
            ENDIF
C
            MMM = 1
            NNN = 1
            CLOC = 0.
            TESTLL = 10.
            RSUM1W = 0.25*(3.*RESEIG(1,2,1)+1.*RWBEIG(1))
     1              +0.25*(3.*RESFIX(1,2,1)+1.*RWBTOT(1))
            RSUM2W = 0.25*(3.*RESEIG(2,2,1)+1.*RWBEIG(2))
     1              +0.25*(3.*RESFIX(2,2,1)+1.*RWBTOT(2))
C BEG JULY 1995
            RSUM3W = FLOAT(IADDFC)*ABS(DELWEB(1))
            IF (RESEIG(3,2,1).NE.0.) RSUM3W = RESEIG(3,2,1)*
     1              (1.+FLOAT(IADDFC)*ABS(DELWEB(1))/ABS(RESEIG(3,2,1)))
C END JULY 1995
C
C           RSUM1W =     RESEIG(1,2,1) +RESFIX(1,2,1)
C           RSUM2W =     RESEIG(2,2,1) +RESFIX(2,2,1)
            SHMULT = -1.0
C BEG NOV 1995
            WIDTHH = SQRT(HH(1)**2 + .25*(B(1)-2.*B2(1))**2)
C END NOV 1995
C BEG JUN 1996
            EFOUND = 0.
            IF (ISANDW(2,1).EQ.1.OR.ISANDW(2,1).EQ.NLAYER(2,1))
     1         EFOUND = WFOUND(2,1)
C END JUN 1996
C BEG JULY 1995
            CALL GENSTB(1,A0,WIDTHH,RSUM1W,RSUM2W,SHMULT*RSUM3W,
C END JULY 1995
     1       0.,0.,MMM,NNN,TESTLL,CLOC,EIGTM2,IDESGN,EIG1,CX(1,1,2),
     1       TX(2),TX(2),GTX(1,2),IREDUC,0,IFILE,ITUTOR,
     1       JJJ,ISTIF,RESLTS,RPRES,1,10.E10,0.,FFLAT(1,MIDEND,1),1,
     1       1,IAGAIN(1,MIDEND),FNEFF(1,MIDEND),7030,EIGRAT(1),
     1       RBB0(1),ILOADS,ICASE)
C BEG FEB 1996
            IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
C
            MSLOPE(2) = CLOC
            MSLOPE(4) = CLOC
            CSTRS2    = CLOC
            FLX2      = RSUM1W
            FLY2      = RSUM2W
C BEG JULY 1995
            FLXY2     = SHMULT*RSUM3W
C END JULY 1995
            CSTRS4    = CLOC
            FLX4      = RSUM1W
            FLY4      = RSUM2W
C BEG JULY 1995
            FLXY4     = SHMULT*RSUM3W
C END JULY 1995
            IF (EIGTM2.GT.0.0.AND.EIGTM2.LT.EIGLOC) THEN
               ARG3 = 0.25*(3.*RESEIG(1,2,1)+1.*RWBEIG(1))
               ARG4 = 0.25*(3.*RESEIG(2,2,1)+1.*RWBEIG(2))
C              ARG3 =      RESEIG(1,2,1)
C              ARG4 =      RESEIG(2,2,1)
               ARG5 = EIGTM2
              IARGM = MMM
              IARGN = NNN
              ICHOOS= 3
              EIGLOC = EIGTM2
              MSKIN = MMM
              NSKIN = NNN
              CLOCAL = CLOC
            ENDIF
C
            IF (ICHOOS.EQ.1) THEN
               IF (ABS(MSLOPE(1)).GE.0.00001) THEN
                  MSLOPE(2) = MSLOPE(2)/MSLOPE(1)
                  MSLOPE(3) = MSLOPE(3)/MSLOPE(1)
                  MSLOPE(4) = MSLOPE(4)/MSLOPE(1)
                  MSLOPE(1) = 1.
                  IF (ABS(MSLOPE(2)).GT.20.)
     1                    MSLOPE(2) = 20.*MSLOPE(2)/ABS(MSLOPE(2))
                  IF (ABS(MSLOPE(3)).GT.20.)
     1                    MSLOPE(3) = 20.*MSLOPE(3)/ABS(MSLOPE(3))
                  IF (ABS(MSLOPE(4)).GT.20.)
     1                    MSLOPE(4) = 20.*MSLOPE(4)/ABS(MSLOPE(4))
               ELSE
                  MSLOPE(1) = 0.
                  IF (EIGTM2.LE.EIGTMP) THEN
                     IF (ABS(MSLOPE(2)).GT.0.00001) THEN
                        MSLOPE(3) = MSLOPE(3)/MSLOPE(2)
                        MSLOPE(2) = 1.
                        MSLOPE(4) = 1.
                        IF (ABS(MSLOPE(3)).GT.20.)
     1                    MSLOPE(3) = 20.*MSLOPE(3)/ABS(MSLOPE(3))
                     ELSE
                        MSLOPE(2) = 0.
                        MSLOPE(3) = 1.
                        MSLOPE(4) = 0.
                        IF (EIGTMP.GT.2.*EIGTM0) MSLOPE(1) = 1.0
                     ENDIF
                     IF (EIGTM2.GT.2.0*EIGTM0) MSLOPE(1) = 1.0
                  ELSE
                     IF (ABS(MSLOPE(3)).GT.0.00001) THEN
                        MSLOPE(2) = MSLOPE(2)/MSLOPE(3)
                        MSLOPE(3) = 1.
                        IF (ABS(MSLOPE(2)).GT.20.)
     1                    MSLOPE(2) = 20.*MSLOPE(2)/ABS(MSLOPE(2))
                        MSLOPE(4) = MSLOPE(2)
                     ELSE
                        MSLOPE(3) = 0.
                        MSLOPE(2) = 1.
                        MSLOPE(4) = 1.
                        IF (EIGTM2.GT.2.*EIGTM0) MSLOPE(1) = 1.0
                     ENDIF
                     IF (EIGTMP.GT.2.0*EIGTM0) MSLOPE(1) = 1.0
                  ENDIF
C                     END: EIGTM2
               ENDIF
C                  END: MSLOPE(1)
            ENDIF
C               END: ICHOOS.EQ.1
C
            IF (ICHOOS.EQ.2) THEN
               IF (ABS(MSLOPE(3)).GE.0.00001) THEN
                  MSLOPE(1) = MSLOPE(1)/MSLOPE(3)
                  MSLOPE(2) = MSLOPE(2)/MSLOPE(3)
                  MSLOPE(4) = MSLOPE(4)/MSLOPE(3)
                  MSLOPE(3) = 1.
                  IF (ABS(MSLOPE(1)).GT.20.)
     1                    MSLOPE(1) = 20.*MSLOPE(1)/ABS(MSLOPE(1))
                  IF (ABS(MSLOPE(2)).GT.20.)
     1                    MSLOPE(2) = 20.*MSLOPE(2)/ABS(MSLOPE(2))
                  IF (ABS(MSLOPE(4)).GT.20.)
     1                    MSLOPE(4) = 20.*MSLOPE(4)/ABS(MSLOPE(4))
               ELSE
                  MSLOPE(3) = 0.
                  IF (EIGTM2.LE.EIGTM0) THEN
                     IF (ABS(MSLOPE(2)).GT.0.00001) THEN
                        MSLOPE(1) = MSLOPE(1)/MSLOPE(2)
                        MSLOPE(2) = 1.
                        MSLOPE(4) = 1.
                        IF (ABS(MSLOPE(1)).GT.20.)
     1                    MSLOPE(1) = 20.*MSLOPE(1)/ABS(MSLOPE(1))
                     ELSE
                        MSLOPE(1) = 1.
                        MSLOPE(2) = 0.
                        MSLOPE(4) = 0.
                        IF (EIGTM0.GT.2.*EIGTMP) MSLOPE(3) = 1.0
                     ENDIF
                     IF (EIGTM2.GT.2.0*EIGTMP) MSLOPE(3) = 1.0
                  ELSE
                     IF (ABS(MSLOPE(1)).GT.0.00001) THEN
                        MSLOPE(2) = MSLOPE(2)/MSLOPE(1)
                        MSLOPE(1) = 1.
                        IF (ABS(MSLOPE(2)).GT.20.)
     1                    MSLOPE(2) = 20.*MSLOPE(2)/ABS(MSLOPE(2))
                        MSLOPE(4) = MSLOPE(2)
                     ELSE
                        MSLOPE(1) = 0.
                        MSLOPE(2) = 1.
                        MSLOPE(4) = 1.
                        IF (EIGTM2.GT.2.*EIGTMP) MSLOPE(3) = 1.0
                     ENDIF
                     IF (EIGTM0.GT.2.0*EIGTMP) MSLOPE(3) = 1.0
                   ENDIF
C                      END: EIGTM2
               ENDIF
C                  END: MSLOPE(3)
            ENDIF
C               END: ICHOOS.EQ.2
C
            IF (ICHOOS.EQ.3) THEN
               IF (ABS(MSLOPE(2)).GE.0.00001) THEN
                  MSLOPE(1) = MSLOPE(1)/MSLOPE(2)
                  MSLOPE(3) = MSLOPE(3)/MSLOPE(2)
                  MSLOPE(4) = MSLOPE(4)/MSLOPE(2)
                  MSLOPE(2) = 1.
                  IF (ABS(MSLOPE(1)).GT.20.)
     1                    MSLOPE(1) = 20.*MSLOPE(1)/ABS(MSLOPE(1))
                  IF (ABS(MSLOPE(3)).GT.20.)
     1                    MSLOPE(3) = 20.*MSLOPE(3)/ABS(MSLOPE(3))
                  IF (ABS(MSLOPE(4)).GT.20.)
     1                    MSLOPE(4) = 20.*MSLOPE(4)/ABS(MSLOPE(4))
               ELSE
                  MSLOPE(2) = 0.
                  MSLOPE(4) = 0.
                  IF (EIGTM0.LE.EIGTMP) THEN
                     IF (ABS(MSLOPE(1)).GT.0.00001) THEN
                        MSLOPE(3) = MSLOPE(3)/MSLOPE(1)
                        MSLOPE(1) = 1.
                        IF (ABS(MSLOPE(3)).GT.20.)
     1                    MSLOPE(3) = 20.*MSLOPE(3)/ABS(MSLOPE(3))
                     ELSE
                        MSLOPE(1) = 0.
                        MSLOPE(3) = 1.
                        IF (EIGTMP.GT.2.0*EIGTM2) THEN
                           MSLOPE(2) = 1.0
                           MSLOPE(4) = 1.0
                        ENDIF
                     ENDIF
                     IF (EIGTM0.GT.2.0*EIGTM2) THEN
                        MSLOPE(2) = 1.0
                        MSLOPE(4) = 1.0
                     ENDIF
                   ELSE
                     IF (ABS(MSLOPE(3)).GT.0.00001) THEN
                        MSLOPE(1) = MSLOPE(1)/MSLOPE(3)
                        MSLOPE(3) = 1.
                        IF (ABS(MSLOPE(1)).GT.20.)
     1                    MSLOPE(1) = 20.*MSLOPE(1)/ABS(MSLOPE(1))
                     ELSE
                        MSLOPE(3) = 0.
                        MSLOPE(1) = 1.
                        IF (EIGTM0.GT.2.0*EIGTM2) THEN
                           MSLOPE(2) = 1.0
                           MSLOPE(4) = 1.0
                        ENDIF
                     ENDIF
                     IF (EIGTMP.GT.2.0*EIGTM2) THEN
                        MSLOPE(2) = 1.0
                        MSLOPE(4) = 1.0
                     ENDIF
                  ENDIF
C                     END: EIGTM0
               ENDIF
C                  END: MSLOPE(2)
            ENDIF
C               END: ICHOOS.EQ.3
C BEG APR 1996
C  PRINTOUT 1001, ETC MOVED DOWN
C END APR 1996
         ENDIF
C            END: ISTIF(1).EQ.5.AND.IKNOCK.EQ.1
C
C BEG JUN 1996
         EFOUND = 0.
         IF (ISANDW(1,1).EQ.1.OR.ISANDW(1,1).EQ.NLAYER(1,1))
     1      EFOUND = WFOUND(1,1)
C END JUN 1996
         IF (IWARN.EQ.1.AND.ICHOOS.EQ.1) THEN
            RSAVE = R
            R = RADMOD
            B1MOD = (B0-W2(1))/FNWAVX
C BEG NOV 1995
            IF (ISTIF(1).EQ.5) B1MOD = (B(1)-B2(1))/FNWAVX
C END NOV 1995
C BEG OCT 1998
            IF (NNPRT.GE.2) WRITE(IFILE,'(/,A,1P,E12.4,A,1P,E12.4)')
     1     ' Local buckling, C11=',CX(1,1,1),', radius, R=',R
C END OCT 1998
            CALL GENSTB(1,A0-W2(2),B1MOD,
     1      PNX,PNY,-PNXY,RSKNXP,RSKNYP,MSKINW,
     1      NSKINW,TSTLCW,CLOCW,ELOCW,IDESGN,EIG1,CX(1,1,1),  
C BEG JAN 2005
     1      TX(1),TXX,GTX(1,1),IREDUC,0,IFILE,ITUTOR,JJJ,ISTIF,
C END JAN 2005
     1      RESLTS,RPRES,1,10.E10,0.,FFLAT(6,MIDEND,1),IARGFL,
     1      1,IAGAIN(6,MIDEND),FNEFF(6,MIDEND),7035,EIGRAT(6),
     1      RBB0(6),ILOADS,ICASE)
C BEG FEB 1996
            IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
C
            IF (IAGAIN(6,MIDEND).NE.0) THEN
               CALL GENSTB(1,A0-W2(2),B1MOD,
     1         PNX,PNY,-PNXY,RSKNXP,RSKNYP,
     1         M2ND(6,MIDEND),N2ND(6,MIDEND),TST2ND(6,MIDEND),
     1         SLP2ND(6,MIDEND),EIG2ND(6,MIDEND),
C BEG JAN 2005
     1         IDESGN,EIG1,CX(1,1,1),TX(1),TXX,GTX(1,1),
C END JAN 2005
     1         IREDUC,0,IFILE,ITUTOR,JJJ,ISTIF,RESLTS,RPRES,1,
     1         10.E10,0.,FFLAT(6,MIDEND,2),IARGFL,
     1         2,IAGAIN(6,MIDEND),FNEFF(6,MIDEND),7040,EIGRAT(6),
     1         RBB0(6),ILOADS,ICASE)
C BEG FEB 1996
               IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
C
               CALL WGTAVE(PNX+RSKNXP,PNY+RSKNYP,PNXY,
     1                     EIG2ND(6,MIDEND),ELOCW,IAGAIN(6,MIDEND))
            ENDIF
            R = RSAVE
C
            ETEST = 0.97*ABS(EIGLOC)
            IF (IDESGN.EQ.0.AND.ABS(ELOCW).LT.ETEST)
     1      WRITE(IFILE,1002) -NXY0,
     1      ELOCW,MSKINW,NSKINW,CLOCW,NXY0,EIGLOC,MSKIN,NSKIN,CLOCAL
 1002       FORMAT(/' ***********************************************'/
     1              ' ********** WARNING  WARNING  WARNING **********'/
     1' An in-plane shear load of the opposite sign to that which you'/
     1' have supplied as input has a lower local buckling load factor'/
     1' than that for the load you supplied:'//
     1'  BUCKLING LOAD FACTOR AND MODE WITH IN-PLANE SHEAR RESULTANT
     1 NXY =',1PE12.4,' (negative of the shear load you supplied):'/
     1'   Local buckling load factor                        =',1PE12.4/
     1'   Number of half waves between rings,             M =',I4/
     1'   Number of half waves between stringers,         N =',I4/
     1'   Slope  of local buckling nodal lines,             =',1PE12.4//
     1'  BUCKLING LOAD FACTOR AND MODE WITH IN-PLANE SHEAR RESULTANT
     1 NXY =',1PE12.4,' (same as the shear load you supplied):'/
     1'   Local buckling load factor                        =',1PE12.4/
     1'   Number of half waves between rings,             M =',I4/
     1'   Number of half waves between stringers,         N =',I4/
     1'   Slope  of local buckling nodal lines,             =',1PE12.4//
     1' *********** END OF WARNING      END OF WARNING **************'/
     1' ************************************************************'/)
         ENDIF
C            END: IWARN.EQ.1.AND.ICHOOS.EQ.1
C     
         IIROLL = 0
         IF ((EIGLOC.LT.0.0.OR.IPRELM.EQ.2.OR.IPRELM.EQ.4).AND.
     1       (ISTIF(1).LT.4.AND.ISTIF(2).LT.4)) THEN
C           IF (EIGLOC.LT.0.0.OR.ISTIF(1).EQ.3) THEN
            IF (EIGLOC.LT.0.0) THEN
              RSAVE = R
              R = RADMOD
              B1MOD = (B0-W2(1))/FNWAVX
C BEG NOV 1995
              IF (ISTIF(1).EQ.5) B1MOD = (B(1)-B2(1))/FNWAVX
C END NOV 1995
              IIROLL = 1
              NSTOT = 4
              CALL ROLL(B1MOD,NPARTS,NENDS,ANGLS,C1S,ALS,NSEGS,1,
     1                  RESLTS,RPRES,ISTIF(1))
C             CALL ROLL(A0-W2(2),NPARTR,NENDR,ANGLR,C1R,ALR,NSEGR,2,
C    1                  RESLTR,RPRER,ISTIF(2))
C BEG OCT 1998
              IF (NNPRT.GE.2) WRITE(IFILE,'(/,A,1P,E12.4,A,1P,E12.4)')
     1       ' Local buckling w/rolling, C11=',CX(1,1,1),
     1       ', radius, R=',R
C END OCT 1998
              CALL GENSTB(1,A0-W2(2),B1MOD,
     1            PNX,PNY,NXY0,RSKNXP,RSKNYP,MSKIN,
     1            NSKIN,TESTLC,CLOCAL,EIGLOC,IDESGN,EIGROL,CX(1,1,1),  
     1            TX(1),TX(1),GTX(1,1),IREDUC,1,IFILE,ITUTOR,JJJ,ISTIF,
     1            RESLTS,RPRES,1,10.E10,0.,FFLAT(9,MIDEND,1),IARGFL,
     1            1,IAGAIN(9,MIDEND),FNEFF(9,MIDEND),7045,EIGRAT(9),
     1            RBB0(9),ILOADS,ICASE)
C BEG FEB 1996
              IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
C
              IF (IAGAIN(9,MIDEND).NE.0) THEN
                 CALL GENSTB(1,A0-W2(2),B1MOD,
     1               PNX,PNY,NXY0,RSKNXP,RSKNYP,
     1               M2ND(9,MIDEND),N2ND(9,MIDEND),TST2ND(9,MIDEND),
     1               SLP2ND(9,MIDEND),EIG2ND(9,MIDEND),
C BEG JAN 2005
     1               IDESGN,EIGROL,CX(1,1,1),TX(1),TXX,GTX(1,1),
C END JAN 2005
     1               IREDUC,1,IFILE,ITUTOR,JJJ,ISTIF,RESLTS,RPRES,1,
     1               10.E10,0.,FFLAT(9,MIDEND,2),IARGFL,
     1               2,IAGAIN(9,MIDEND),FNEFF(9,MIDEND),7050,EIGRAT(9),
     1               RBB0(9),ILOADS,ICASE)
C BEG FEB 1996
                 IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
C
                 CALL WGTAVE(PNX+RSKNXP,PNY+RSKNYP,NXY0,
     1                       EIG2ND(9,MIDEND),EIGLOC,IAGAIN(9,MIDEND))
              ENDIF
              R = RSAVE
              ARG5  = EIGLOC
              IARGM = MSKIN
              IARGN = NSKIN
            ENDIF
C               END: EIGLOC.LT.0.
         ENDIF
C            END: IF ((EIGLOC.LT.0.0.OR.IPRELM.EQ.2.OR.IPRELM.EQ.4).AND.
C                                (ISTIF(1).LT.4.AND.ISTIF(2).LT.4)) THEN
C  END APRIL 20, 1986 MOD, EXCEPT NEXT CALL TO GENSTB HAS "IIROLL"
C  IN THE ARGUMENT LIST INSTEAD OF "0".
C
         IF (IDESGN.EQ.0) THEN
            CLOCL = CLOCAL
            IF (IPRELM.EQ.4) ICD7 = 1
            IF (TESTLC.LT.1.0.AND.ABS(CLOCAL).GT.0.0) THEN
               CLOCL=1./CLOCAL
               IF (IPRELM.EQ.4) ICD7 = 2
            ENDIF
            MLOCAL = MSKIN
            NLOCAL = NSKIN
            TLOCAL = TESTLC
         ENDIF
         EILOCL = EIGLOC
         IF (IPRELM.EQ.2.AND.IKNOCK.EQ.0) GO TO 500
         IF (IPRELM.EQ.4) GO TO 500
C
C     WRITE(8,*)' FIRST: EIGLOC,MSKIN,NSKIN=',EIGLOC,MSKIN,NSKIN
C     WRITE(8,*)' FIRST: PNX,PNY,IKNOCK=',PNX,PNY,IKNOCK
         IF (ARG3.LT.0.0.OR.ARG4.LT.0.0) THEN
          IF (IKNOCK.EQ.1) THEN
            CLOC=0.
            TESTLL=10.
            MMM = IARGM
            NNN = IARGN
C
            IF (IIROLL.EQ.0) THEN
                     IF (ISTIF(1).NE.5) THEN
C BEG OCT 1998
                        IF (NNPRT.GE.2)
     1                     WRITE(IFILE,'(/,A,1P,E12.4,A,1P,E12.4)')
     1                   ' Local buckling, C11=',CX(1,1,1),
     1                   ', radius, R=',R
C END OCT 1998
                        CALL GENSTB(1,A0-W2(2),B0-W2(1),PNX,PNY,
     1                  0.,RSKNXP,RSKNYP,MMM,NNN,TESTLL,CLOC,
     1                  ENOSHR,IDESGN,EIG1,CXB(1,1,1),TX(1),
C BEG JAN 2005
     1                  TXX,GTX(1,1),IREDUC,0,IFILE,ITUTOR,JJJ,
C END JAN 2005
     1              ISTIF,RESLTS,RPRES,1,10.E10,0.,FFLAT(1,MIDEND,1),
     1      IARGFL,1,IAGAIN(1,MIDEND),FNEFF(1,MIDEND),7055,EIGRAT(1),
     1                  RBB0(1),ILOADS,ICASE)
C BEG FEB 1996
                        IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
                     ELSE
C                       END:   ISTIF(1).NE.5
C                       BEGIN: ISTIF(1).EQ.5
                        CLOC1=0.
                        TSTLL1=10.
                        MMM1 = IARGM
                        NNN1 = IARGN
C BEG OCT 1998
                        IF (NNPRT.GE.2)
     1                     WRITE(IFILE,'(/,A,1P,E12.4,A,1P,E12.4)')
     1                   ' Local buckling, C11=',CX(1,1,1),
     1                   ', radius, R=',R
C END OCT 1998
C BEG NOV 1995
                        CALL GENSTB(1,A0-W2(2),B(1)-B2(1),
C END NOV 1995
     1                  PNX+RSKNXP,PNY+RSKNYP,0.,0.,0.,
     1                  MMM1,NNN1,TSTLL1,CLOC1,ENOSH1,
     1                  IDESGN,EIG1,CXB(1,1,1),TX(1),
C BEG JAN 2005
     1                  TXX,GTX(1,1),IREDUC,0,IFILE,ITUTOR,JJJ,
C END JAN 2005
     1                  ISTIF,RESLTS,RPRES,1,10.E10,0.,
     1                  FFLAT(1,MIDEND,1),1,1,IAGAIN(1,MIDEND),
     1                  FNEFF(1,MIDEND),7060,EIGRAT(1),
     1                  RBB0(1),ILOADS,ICASE)
C BEG FEB 1996
                        IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
                     ENDIF
C                        END: ISTIF(1).EQ.5
C
                     IF (ISTIF(1).EQ.5) THEN
                        CLOC2=0.
                        TSTLL2=10.
                        MMM2 = IARGM
                        NNN2 = IARGN
C BEG JUN 1996
                        EFOUND = 0.
                        IF (ISANDW(2,1).EQ.1.OR.
     1                      ISANDW(2,1).EQ.NLAYER(2,1))
     1                        EFOUND = WFOUND(2,1)
C END JUN 1996
C BEG OCT 1998
                        IF (NNPRT.GE.2)
     1                     WRITE(IFILE,'(/,A,1P,E12.4,A,1P,E12.4)')
     1                   ' Local buckling, C11=',CX(1,1,1),
     1                   ', radius, R=',R
C END OCT 1998
                        CALL GENSTB(1,A0,WIDTHH,RSUM1W,RSUM2W,0.,0.,0.,
     1                  MMM2,NNN2,TSTLL2,CLOC2,ENOSH2,
     1                  IDESGN,EIG1,CX(1,1,2),TX(2),TX(2),
     1                  GTX(1,2),IREDUC,0,IFILE,ITUTOR,JJJ,
     1                  ISTIF,RESLTS,RPRES,1,10.E10,0.,
     1                  FFLAT(1,MIDEND,1),1,1,IAGAIN(1,MIDEND),
     1                  FNEFF(1,MIDEND),7065,EIGRAT(1),
     1                  RBB0(1),ILOADS,ICASE)
C BEG FEB 1996
                        IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
C
                        ENOSHR = MIN(ENOSH1,ENOSH2)
                        DIFF = ABS(ENOSHR - ENOSH1)/ENOSHR
                        IF (DIFF.LT.0.0001) THEN
                           MMM = MMM1
                           NNN = NNN1
                           CLOC= CLOC1
                           TESTLL = TSTLL1
                        ELSE
                           MMM = MMM2
                           NNN = NNN2
                           CLOC= CLOC2
                           TESTLL = TSTLL2
                        ENDIF
C
                        CLOC3=0.
                        TSTLL3=10.
                        MMM3 = IARGM
                        NNN3 = IARGN
C BEG JUN 1996
                        EFOUND = 0.
                        IF (ISANDW(3,1).EQ.1.OR.
     1                      ISANDW(3,1).EQ.NLAYER(3,1))
     1                        EFOUND = WFOUND(3,1)
C END JUN 1996
C BEG OCT 1998
                        IF (NNPRT.GE.2)
     1                     WRITE(IFILE,'(/,A,1P,E12.4,A,1P,E12.4)')
     1                   ' Local buckling, C11=',CX(1,1,1),
     1                   ', radius, R=',R
C END OCT 1998
C BEG NOV 1995
                        CALL GENSTB(1,A0,B(1)-B2(1),RSUM1,RSUM2,
     1                  0.,0.,0.,MMM3,NNN3,TSTLL3,CLOC3,ENOSH3,
C END NOV 1995
     1                  IDESGN,EIG1,CX(1,1,3),TX(3),TX(3),
     1                  GTX(1,3),IREDUC,0,IFILE,ITUTOR,JJJ,
     1                  ISTIF,RESLTS,RPRES,1,10.E10,0.,
     1                  FFLAT(1,MIDEND,1),1,1,IAGAIN(1,MIDEND),
     1                  FNEFF(1,MIDEND),7070,EIGRAT(1),
     1                  RBB0(1),ILOADS,ICASE)
C BEG FEB 1996
                        IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
C
                        ENOSHR = MIN(ENOSHR,ENOSH3)
                        DIFF = ABS(ENOSHR - ENOSH3)/ENOSHR
                        IF (DIFF.LT.0.0001) THEN
                           MMM = MMM3
                           NNN = NNN3
                           CLOC= CLOC3
                           TESTLL = TSTLL3
                        ENDIF
                     ENDIF
C                        END: ISTIF(1).EQ.5
             ELSE
C               END:   IIROLL.EQ.0
C               BEGIN: IIROLL.NE.0
C BEG NOV 1995
              B1MOD = B0 - W2(1)
              IF (ISTIF(1).EQ.5) B1MOD = B(1) - B2(1)
C BEG JUN 1996
              EFOUND = 0.
              IF (ISANDW(1,1).EQ.1.OR.ISANDW(1,1).EQ.NLAYER(1,1))
     1                        EFOUND = WFOUND(1,1)
C END JUN 1996
C BEG OCT 1998
              IF (NNPRT.GE.2) WRITE(IFILE,'(/,A,1P,E12.4,A,1P,E12.4)')
     1      ' Local buckling, C11=',CX(1,1,1),', radius, R=',R
C END OCT 1998
              CALL GENSTB(1,A0-W2(2),B1MOD,
C END NOV 1995
     1              PNX,PNY,0.,RSKNXP,RSKNYP,MMM,NNN,
     1              TESTLL,CLOC,ENOSHR,IDESGN,EIGROL,CXB(1,1,1),
C BEG JAN 2005
     1              TX(1),TXX,GTX(1,1),IREDUC,1,IFILE,ITUTOR,JJJ,
C END JAN 2005
     1              ISTIF,RESLTS,RPRES,1,10.E10,0.,
     1              FFLAT(1,MIDEND,1),IARGFL,1,IAGAIN(1,MIDEND),
     1              FNEFF(1,MIDEND),7075,EIGRAT(1),
     1              RBB0(1),ILOADS,ICASE)
C BEG FEB 1996
              IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
             ENDIF
C                END: IIROLL.NE.0
C
             IF (ENOSHR.LT.1.E8) FKNOCK(2)=ARG5/ENOSHR
             MLOCNS = MMM
             NLOCNS = NNN
C            WRITE(8,*)' ENOSHR,MMM,NNN,EIGLOC,FKNOCK(2)=',
C    1                   ENOSHR,MMM,NNN,EIGLOC,FKNOCK(2)
             IF (FKNOCK(2).GT.1.0) FKNOCK(2) = 1.0
             EIGNOS = ENOSHR
             FNWNOS = NNN
C BEG APR 1996 (THE FOLLOWING MOVED DOWN FROM ABOVE).
             IF (ISTIF(1).EQ.5.AND.IKNOCK.EQ.1) THEN
                FLOSKN = 1.
                FWEBSX = 1.
                FUPSKN = 1.
                EINV1 = 0.
                EINV2 = 0.
                EINV3 = 0.
                IF (ENOSH1.GT.0.) THEN
                   FLOSKN = ABS(EIGTM0/ENOSH1)
                   EINV1  = ABS(1./ENOSH1)
                ENDIF
                IF (ENOSH2.GT.0.) THEN
                   FWEBSX = ABS(EIGTM2/ENOSH2)
                   EINV2  = ABS(1./ENOSH2)
                ENDIF
                IF (ENOSH3.GT.0.) THEN
                   FUPSKN = ABS(EIGTMP/ENOSH3)
                   EINV3  = ABS(1./ENOSH3)
                ENDIF
                EINVSM = EINV1 + EINV2 + EINV3
                IF (ENOSHR.LT.1.E8.AND.EINVSM.GT.0.0) FKNOCK(2) =
     1             (EINV1*FLOSKN +EINV2*FWEBSX +EINV3*FUPSKN)/EINVSM
                IF (FKNOCK(2).GT.1.0) FKNOCK(2) = 1.0
                IF (NNPRT.GE.2) THEN
                   
                   WRITE(IFILE,1001)
 1001          FORMAT(/' ===============================================
     1======================'/
     1' Local buckling load factors from PANDA-type (closed form) theory
     1'/' for the four segments of the truss-core sandwich. Purpose here
     1'/' is to establish ratios of slopes of buckling mode nodal lines'
     1 /' for later use in the KOITER theory to be used if IQUICK=0.'/
     1' Note that buckling load factors may differ from those calculated
     1'/' later from the PANDA-type analysis for the following reasons:'
     1 /'   1. Here, all loads are considered part of Load Set A.'/
     1  '   2. The axial load in each web is different from that used'/
     1  '      for the purpose of calculating buckling margins.'/
     1' ----------------------------------------------------------------
     1--------------')
                   WRITE(IFILE,1009)
 1009              FORMAT(
     1'   Segment  Load Factor  Slope of   Ratios   Axial, Width-wise, S
     1hear Resultants   Knockdown for'/
     1'                         Buckles   of Slopes      Nx        Ny   
     1     Nxy       in-plane shear Nxy'/
     1' ----------------------------------------------------------------
     1--------------')
                   WRITE(IFILE,1005)
     1               EIGTM0,CSTRS1,MSLOPE(1),FLX1,FLY1,FLXY1,FLOSKN
                   WRITE(IFILE,1006)
     1               EIGTM2,CSTRS2,MSLOPE(2),FLX2,FLY2,FLXY2,FWEBSX
                   WRITE(IFILE,1007)
     1               EIGTMP,CSTRS3,MSLOPE(3),FLX3,FLY3,FLXY3,FUPSKN
                   WRITE(IFILE,1008)
     1               EIGTM2,CSTRS4,MSLOPE(4),FLX4,FLY4,FLXY4,FWEBSX
 1005              FORMAT(' lower skin',1P,7E11.3)
 1006              FORMAT(' left   web',1P,7E11.3)
 1007              FORMAT(' upper skin',1P,7E11.3)
 1008              FORMAT(' right  web',1P,7E11.3)
                   WRITE(IFILE,1010)
 1010              FORMAT(' ============================================
     1===================')
                ENDIF
C                   END: NNPRT.GE.2
             ENDIF
C                END: ISTIF(1).EQ.5.AND.IKNOCK.EQ.1
C END APR 1996
             GO TO 9
          ENDIF
C             END: IKNOCK.EQ.1
         ENDIF
C            END: ARG3.LT.0.0.OR.ARG4.LT.0.0
C
C BEG JUNE 1998
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG OCT 1998
         IF (IFLAT.EQ.0.AND.IPRELM.EQ.0.AND.IDESGN.EQ.0.AND.ICASE.EQ.1) 
C END OCT 1998
     1      MCASL1 = MSKIN
C END JUNE 1998
C
C BEGIN rather big "IF" branch:
         IF (ISTIF(1).NE.5.AND.ISTIF(2).NE.5) THEN
C BEG MAR 1998
            FKNMOD = 1.0
            IF (NSKIN.EQ.0.AND.EIG7X.GT.0.0.AND.EIG7X.LT.1.0)
C BEG JUN 1998
     1         FKNMOD = 1./(EIG7X*FMDKD7)
C END JUN 1998
C BEG JULY 1998
C BEG AUG 1998
C           IF (ITYPE.EQ.1.AND.EIG7X.GT.0.0.AND.EIG7X.LT.1.0.AND.
            IF (               EIG7X.GT.0.0.AND.EIG7X.LT.1.0.AND.
C END AUG 1998
     1         FLTSL7.GT.0.0) FKNMOD = 1./(EIG7X*FMDKD7)
C END JULY 1998
            IF (IPRELM.EQ.0.AND.IDESGN.EQ.0)
C    1          EIGLC0 = EIGLOC*FKNOCK(7)*FKNOCK(10)
     1          EIGLC0 = EIGLOC*FKNOCK(7)*FKNMOD
            IF (IPRELM.EQ.0.AND.IDESGN.EQ.1)
C    1          EIGLC1 = EIGLOC*FKNOCK(7)*FKNOCK(10)
     1          EIGLC1 = EIGLOC*FKNOCK(7)*FKNMOD
C END MAR 1998
C           IF (IPRELM.EQ.0.AND.IDESGN.EQ.0) EIGLC0 =EIGLOC
C           IF (IPRELM.EQ.0.AND.IDESGN.EQ.1) EIGLC1 =EIGLOC
C BEG JUN 1998
C BEG JUN 2006
C BEG JAN 2007 (switch which one is commented out)
            IF ((IQUICK.EQ.1.OR.(IALTSV.EQ.1.AND.IICURV.EQ.1)).OR.
C           IF (IQUICK.EQ.1.OR.
C END JAN 2007
C END JUN 2006
     1      (IPRELM.EQ.0.AND.IPANDA.EQ.1.AND.MIDEND.EQ.1)) THEN
C BEG JULY 1998
C BEG JUN 2006
C              IF (NNPRT.GE.2.AND.IDESGN.EQ.0.AND.ILABEL.GE.9260)
C    1         WRITE(IFILE,'(A,/,7I7)')
C    1       ' IQUICK,IALTSV,IICURV,IPRELM,IPANDA,MIDEND,ILOCAL=',
C    1         IQUICK,IALTSV,IICURV,IPRELM,IPANDA,MIDEND,ILOCAL
C END JUN 2006
               IF (NNPRT.GE.3.AND.ITYPE.EQ.1)
     1           WRITE(IFILE,'(A,/,1P,4E12.4)')
     1           ' EIGLOC,FKNOCK(7),FKNMOD,EIGMR7=',
     1             EIGLOC,FKNOCK(7),FKNMOD,EIGMR7
C END JULY 1998
C BEG AUG 1998
               IF (IALTSV.EQ.0.OR.ILOCAL.EQ.1) THEN
C BEG OCT 1998
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG NOV 2003
                 IF (NNPRT.GE.0.AND.ILABEL.GE.9260) THEN
C END NOV 2003
                    WRITE(IFILE,'(/,A,/,
     1 A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4)')
     1' Local buckling load factor before and after knockdown:',
     1' EIGLOC(before knockdown by 3 factors below)        =',EIGLOC,
     1' Knockdown factor from modal imperfection(s)        =',FKNOCK(7),
     1' 1st modifying factor, FKNMOD=1 or 1/(EIG7X*FMDKD7) =',FKNMOD,
     1' 2nd modifying factor, EIGMR7=1 or EIGLNX/EIGLOC    =',EIGMR7,
     1' After knockdown, EIGLOC*FKNOCK(7)*FKNMOD*EIGMR7    =',
     1                   EIGLOC*FKNOCK(7)*FKNMOD*EIGMR7
        WRITE(IFILE,'(A,/,A,1P,E12.4,/,A,/,A,/,A,1P,E12.4/,A)')
     1' in which',
     1' EIG7X  = lambda(ARBOCZ)/lambda(original PANDA-type theory)=',
     1  EIG7X,
     1'       lambda(ARBOCZ)=perfect panel buckling from ARBOCZ theory',
     1'       lambda(PANDA) =perfect panel buckling from PANDA  theory',
     1' FMDKD7 = 1 or 0.9/EIG7X =',FMDKD7,
     1' EIGLNX = eigenvalue for perfect panel from alternate solution'
                 ENDIF
                 IF (NSKIN.GE.NMINRG.AND.NSKIN.LE.NMAXRG.AND.NSKIN.NE.0
     1             .AND.IDESGN.EQ.0.AND.ISTIF(1).EQ.0.AND.ISTIF(2).NE.0
C BEG NOV 2003
     1             .AND.ILABEL.GE.9260.AND.IWIDE.EQ.0) THEN
C END NOV 2003
                    IRNMOD(6) = 1
                    IF (NNPRT.GE.0) WRITE(IFILE,
C                   IF (NNPRT.GE.1) WRITE(IFILE,
     1        '(/,A,/,A,/,A,/,A,/,A,I5,/,A,I5,A,/,A,I5,/,A)')
     1    ' Simple-support local buckling between adjacent rings',
     1    ' is not recorded as a margin because this type of buckling',
     1    ' has been superseded by the results from the discretized',
     1    ' skin-ring module model, for which skin-ring buckling',
     1    ' load factors have been computed in the range from n = ',
     1      NMINRG,' to n = ', NMAXRG,' circumferential halfwaves.',
     1    ' The critical simple-support inter-ring buckling model has',
     1      NSKIN,' circ. half waves, which lies within this range.'
                 ENDIF
C BEG JAN 2007
C                IF (IRNMOD(6).EQ.0)
                 IF (IRNMOD(6).EQ.0.AND.(IQUICK.EQ.1.OR.IPANDA.EQ.1))
C END JAN 2007
     1           CALL RECORD(0,1,EIGLOC*FKNOCK(7)*FKNMOD*EIGMR7,CLOCAL,
     1                MSKIN,NSKIN,ICONST,CONSTR,WORDB,IFILE,IDESGN,JJJ,
     1                LENMOD,EIGMAX,IPOINC,INUMTT,FSLOC,ICASE,0,0,
     1                VINHOF,MORCON(ILOADS,ICASE),ENDMID,0,0,ISUB)
C BEG FEB 2007
                 IF (ITYPE.EQ.1.AND.NNPRT.GE.2)
     1           WRITE(IFILE,*)' AFTER RECORD 1: IDESGN,INUMTT,ICONST=',
     1                                           IDESGN,INUMTT,ICONST
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2007
                 IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 2222
               ENDIF
C                  END: IALTSV.EQ.0.OR.ILOCAL.EQ.1
C
               IF (ISTIF(1).NE.5.AND.IALTSV.EQ.1.AND.
     1         (((ILABEL.EQ.9260.OR.ILABEL.EQ.9280).AND.
C BEG DEC 2001
     1           (IICURV.EQ.1.OR.IQUICK.EQ.1)).OR.
C END DEC 2001
     1          (IPRELM.EQ.0.AND.IPANDA.EQ.1.AND.MIDEND.EQ.1))) THEN
                 DENFCT = 1.0
                 IF (EIG7X.GT.0.0.AND.EIG7X.LT.1.0)
     1                                            DENFCT = EIG7X*FMDKD7
C BEG AUG 1998
C BEG AUG 2003  (comment out following statements)
C                IF (ISIGNL.EQ.1.AND.IDESGN.EQ.1) THEN
C                   DENFCT = 1./(FKNMOD*EIGMR7)
C                   EIGLNX = EIGLXX
C                   WRITE(IFILE,'(A,2I2,1P,3E12.4)')
C    1            ' IDESGN,ISIGNL,FKNMOD,EIGMR7,EIGLNX=',
C    1              IDESGN,ISIGNL,FKNMOD,EIGMR7,EIGLNX
C                ENDIF
C END AUG 2003
C END AUG 1998
C                WRITE(IFILE,'(A,1P,3E12.4)')
C    1         ' DENFCT,EIG7X,FMDKD7=',DENFCT,EIG7X,FMDKD7
C BEG OCT 1998
C23456789012345678901234567890123456789012345678901234567890123456789012
                 IF (NNPRT.GE.0
     1              .AND.(ILABEL.EQ.9260.OR.ILABEL.EQ.9280)) THEN
                    WRITE(IFILE,'(/,A,/,
     1 A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4)')
     1' Local buckling load factor before and after knockdown:',
     1' EIGLNX(before knockdown by 2 factors below)        =',EIGLNX,
     1' Knockdown factor from modal imperfection(s)        =',FKNOCK(7),
     1' Modifying factor, 1/DENFCT=1 or 1/(EIG7X*FMDKD7)   =',1./DENFCT,
     1' After knockdown, EIGLNX*FKNOCK(7)/DENFCT           =',
     1                   EIGLNX*FKNOCK(7)/DENFCT
        WRITE(IFILE,'(A,/,A,1P,E12.4,/,A,/,A,/,A,1P,E12.4)')
     1' in which',
     1' EIG7X  = lambda(ARBOCZ)/lambda(original PANDA-type theory)=',
     1  EIG7X,
     1'       lambda(ARBOCZ)=perfect panel buckling from ARBOCZ theory',
     1'       lambda(PANDA) =perfect panel buckling from PANDA  theory',
     1' FMDKD7 = 1 or 0.9/EIG7X =',FMDKD7
                 ENDIF
C END OCT 1998
C BEG NOV 2003
                 IF (EIGLNX.GT.0.0)
     1           CALL RECORD(0,1,EIGLNX*FKNOCK(7)/DENFCT,CLOCAL,
C END NOV 2003
     1                 MSKIN,NSKIN,ICONST,CONSTR,WORDB,IFILE,IDESGN,JJJ,
     1                 LENMOD,EIGMAX,IPOINC,INUMTT,FSLOC,ICASE,0,0,
     1                 VINHOF,MORCON(ILOADS,ICASE),ENDMID,1,0,ISUB)
C BEG FEB 2007
                 IF (ITYPE.EQ.1.AND.NNPRT.GE.2)
     1           WRITE(IFILE,*)' AFTER RECORD 2: IDESGN,INUMTT,ICONST=',
     1                                           IDESGN,INUMTT,ICONST
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2007
                 IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 2222
               ENDIF
C                  END:  IF (ISTIF(1).NE.5.AND.IALTSV.EQ.1.AND.
C                       (((ILABEL.EQ.9260.OR.ILABEL.EQ.9280).AND.
C                         (IICURV.EQ.1.OR.IQUICK.EQ.1)).OR.
C                        (IPRELM.EQ.0.AND.IPANDA.EQ.1.AND.MIDEND.EQ.1))) THEN
            ENDIF
C               END: IF ((IQUICK.EQ.1.OR.(IALTSV.EQ.1.AND.IICURV.EQ.1)).OR.
C                      (IPRELM.EQ.0.AND.IPANDA.EQ.1.AND.MIDEND.EQ.1)) THEN
C23456789012345678901234567890123456789012345678901234567890123456789012
C END JUN 1998
C END OCT 1996
         ENDIF
C            END: ISTIF(1).NE.5.AND.ISTIF(2).NE.5
C BEG APR 2007
         IF (EIGLOC.GT.0.0.AND.ISTIF(1).EQ.5.AND.ISTIF(2).NE.5) THEN
C BEG OCT 1996
C BEG JUL 2010
          IF (MSKIN.GE.NMINSR.AND.MSKIN.LE.NMAXSR
     1     .AND.MSKIN.NE.0.AND.ISRIDX.EQ.1.AND.IDESGN.EQ.0
     1     .AND.ILABEL.GE.9260.AND.IHILOC.NE.0) THEN
          ISRMOD(7) = 1
          IF (NNPRT.GE.0) WRITE(IFILE,
     1    '(/,A,/,A,/,A,/,A,/,A,I5,A,I5,A,/,A,I5,/,A)')
     1 ' Buckling of the lower skin of the truss-core sandwich',
     1 ' is not recorded as a margin because this type of buckling',
     1 ' has been superseded by the results from the discretized',
     1 ' skin-stringer module model, for which buckling load factors',
     1 ' have been computed in the range from m = ',NMINSR,' to m = ',
     1   NMAXSR,' axial halfwaves.',
     1 ' The critical buckling load from the PANDA-type theory has',
     1   MSKIN,' axial half waves, which lies within this range.'
          ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
          IF (ISRMOD(7).EQ.0)
C END JUL 2010
     1   CALL RECORD(1,11,EIGLOC,CLOCAL,MSKIN,NSKIN,ICONST,CONSTR,WORDB,
     1            IFILE,IDESGN,JJJ,LENMOD,EIGMAX,IPOINC,INUMTT,FSBSTR,
     1            ICASE,0,0,VINHOF,MORCON(ILOADS,ICASE),ENDMID,0,0,0)
          IF (NNPRT.GE.0.AND.ILABEL.GE.9260)
     1    WRITE(IFILE,'(/,A,/,A,1P,E12.4,A,I4,A,I4,A,1P,E10.2,A)')
     1  ' Local buckling of sandwich truss from PANDA-type theory[1B]:',
     1  ' PANDA-type buckling load factor, EIGLOC(m,n,slope)=',
     1    EIGLOC,'(',MSKIN,',',NSKIN,',',CLOCAL,')'
         ENDIF
C END APR 2007
C BEG FEB 2007
         IF (ITYPE.EQ.1.AND.NNPRT.GE.2)
     1   WRITE(IFILE,*)' AFTER RECORD 3: IDESGN,INUMTT,ICONST=',
     1                                   IDESGN,INUMTT,ICONST
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2007
         IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 2222
C END OCT 1996
C BEG APR 2007
         IF (ISTIF(2).EQ.5.AND.ISTIF(1).NE.5) THEN
C BEG OCT 1996
C         CALL RECORD(2,11,EIGLOC,CLOCL,MSKIN,NSKIN,ICONST,CONSTR,WORDB,
         CALL RECORD(2,11,EIGLOC,CLOCAL,MSKIN,NSKIN,ICONST,CONSTR,WORDB,
     1            IFILE,IDESGN,JJJ,LENMOD,EIGMAX,IPOINC,INUMTT,FSBSTR,
     1            ICASE,0,0,VINHOF,MORCON(ILOADS,ICASE),ENDMID,0,0,0)
          IF (NNPRT.GE.0.AND.ILABEL.GE.9260)
     1    WRITE(IFILE,'(/,A,/,A,1P,E12.4,A,I4,A,I4,A,1P,E10.2,A)')
     1  ' Local buckling of sandwich truss from PANDA-type theory[1B]:',
     1  ' PANDA-type buckling load factor, EIGLOC(m,n,slope)=',
     1    EIGLOC,'(',MSKIN,',',NSKIN,',',CLOCAL,')'
         ENDIF
C END APR 2007
C BEG FEB 2007
         IF (ITYPE.EQ.1.AND.NNPRT.GE.2)
     1   WRITE(IFILE,*)' AFTER RECORD 4: IDESGN,INUMTT,ICONST=',
     1                                   IDESGN,INUMTT,ICONST
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2007
         IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 2222
C END OCT 1996
C
C*****************************************************************
C END SECTION FOR WHICH (b(1)/w2(1)>3) and (b(2)/w2(2)>1)
C*****************************************************************
C
      ELSE
C        END:   BOVRW2(1).GT.3.AND.BOVRW2(2).GT.1)
C        BEGIN: BOVRW2(1).LE.3
C
         IF (BOVRW2(2).GT.1.0) THEN
C
C*****************************************************************
C BEGIN SECTION FOR WHICH (b(1)/w2(1)<3) and (b(2)/w2(2)>1)
C*****************************************************************
C
C
C*****************************************************************
C BEGIN SECTION FOR BUCKLING OF PANEL SKIN BETWEEN STRINGER HATS
C*****************************************************************
C
            CALL MFILL1(IDESGN,IRMOD,MARG,NARG,TARG,CARG,
     1                  MLOCAL,NLOCAL,TLOCAL,CLOCL,
     1                  MSKIN,NSKIN,TESTLC,CLOCAL)
C BEG JUN 1996
            EFOUND = 0.
            IF (ISANDW(1,1).EQ.1.OR.ISANDW(1,1).EQ.NLAYER(1,1))
     1         EFOUND = WFOUND(1,1)
C END JUN 1996
            CALL GENSTB(1,A0-W2(2),B(1)-W2(1),
     1          PNX,PNY,NXY0,RSKNXP,RSKNYP,
     1          MARG,NARG,TARG,CARG,EIGLOC,IDESGN,EIG1,CX(1,1,1),
C BEG JAN 2005
     1          TX(1),TXX,GTX(1,1),IREDUC,0,IFILE,ITUTOR,JJJ,ISTIF,
C END JAN 2005
     1          RESLTS,RPRES,1,10.E10,0.,FFLAT(1,MIDEND,1),1,
     1          1,IAGAIN(1,MIDEND),FNEFF(1,MIDEND),7080,EIGRAT(1),
     1          RBB0(1),ILOADS,ICASE)
C BEG FEB 1996
            IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
            CALL MFILL2(IDESGN,IRMOD,MARG,NARG,TARG,CARG,
     1                  MSKIN,NSKIN,TESTLC,CLOCAL)
C
            IF (IDESGN.EQ.0) THEN
               CLOCL = CLOCAL
C BEG JULY 1995
               IF (IPRELM.EQ.4) ICD7 = 1
               IF (TESTLC.LT.1.0.AND.ABS(CLOCAL).GT.0.0) THEN
                  CLOCL=1./CLOCAL
                  IF (IPRELM.EQ.4) ICD7 = 2
               ENDIF
C END JULY 1995
               MLOCAL = MSKIN
               NLOCAL = NSKIN
               TLOCAL = TESTLC
            ENDIF
            EILOCL = EIGLOC
            IF (IPRELM.EQ.4) GO TO 5
            IF (IPRELM.EQ.2.AND.IKNOCK.EQ.0) GO TO 5
C
            IF (PNX.LT.0.0.OR.PNY.LT.0.0) THEN
             IF (IKNOCK.EQ.1) THEN
               CLOC=0.
               TESTLL=10.
               MMM = MSKIN
               NNN = NSKIN
               CALL GENSTB(1,A0-W2(2),B0-W2(1),
     1                  PNX,PNY,0.,RSKNXP,RSKNYP,MMM,
     1                  NNN,TESTLL,CLOC,ENOSHR,IDESGN,EIG1,CXB(1,1,1),
C BEG JAN 2005
     1                  TX(1),TXX,GTX(1,1),IREDUC,0,IFILE,ITUTOR,JJJ,
C END JAN 2005
     1                  ISTIF,RESLTS,RPRES,1,10.E10,0.,
     1                  FFLAT(1,MIDEND,1),1,1,IAGAIN(1,MIDEND),
     1                  FNEFF(1,MIDEND),7085,EIGRAT(1),
     1                  RBB0(1),ILOADS,ICASE)
C BEG FEB 1996
               IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
               IF (ENOSHR.LT.1.E8) FKNOCK(2) = EIGLOC/ENOSHR
               MLOCNS = MMM
               NLOCNS = NNN
               IF (FKNOCK(2).GT.1.0) FKNOCK(2) = 1.0
               GO TO 5
             ENDIF
C                END: IKNOCK.EQ.1
            ENDIF
C               END: PNX.LT.0.0.OR.PNY.LT.0.0
C
C BEG JULY 1995
C BEG APR 2007
            IF (IQUICK.EQ.1.OR.ISTIF(1).EQ.5
     1        .OR.(IPRELM.EQ.0.AND.IPANDA.EQ.1.AND.MIDEND.EQ.1)) THEN
C BEG OCT 1996
C            CALL RECORD(0,1,EIGLOC,CLOCL,MSKIN,NSKIN,ICONST,CONSTR,
C BEG JUL 2010
          IF (MSKIN.GE.NMINSR.AND.MSKIN.LE.NMAXSR.AND.ISTIF(1).EQ.5
     1     .AND.MSKIN.NE.0.AND.ISRIDX.EQ.1.AND.IDESGN.EQ.0
     1     .AND.ILABEL.GE.9260.AND.IHILOC.NE.0) THEN
          ISRMOD(1) = 1
          IF (NNPRT.GE.0) WRITE(IFILE,
     1    '(/,A,/,A,/,A,/,A,/,A,I5,A,I5,A,/,A,I5,/,A)')
     1 ' Buckling of the lower skin of the truss-core sandwich',
     1 ' is not recorded as a margin because this type of buckling',
     1 ' has been superseded by the results from the discretized',
     1 ' skin-stringer module model, for which buckling load factors',
     1 ' have been computed in the range from m = ',NMINSR,' to m = ',
     1   NMAXSR,' axial halfwaves.',
     1 ' The critical buckling load from the PANDA-type theory has',
     1   MSKIN,' axial half waves, which lies within this range.'
          ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
          IF (ISRMOD(1).EQ.0)
C END JUL 2010
     1       CALL RECORD(0,1,EIGLOC,CLOCAL,MSKIN,NSKIN,ICONST,CONSTR,
C END JULY 1995
     1       WORDB,IFILE,IDESGN,JJJ,LENMOD,EIGMAX,IPOINC,INUMTT,FSLOC,
     1       ICASE,0,0,VINHOF,MORCON(ILOADS,ICASE),ENDMID,0,0,ISUB)
C
             IF (NNPRT.GE.0.AND.ILABEL.GE.9260)
     1       WRITE(IFILE,'(/,A,/,A,1P,E12.4,A,I4,A,I4,A,1P,E10.2,A)')
     1     ' Local buckling from PANDA-type theory[1B]:',
     1     ' PANDA-type buckling load factor, EIGLOC(m,n,slope)=',
     1       EIGLOC,'(',MSKIN,',',NSKIN,',',CLOCAL,')'
            ENDIF
C END APR 2007
C BEG FEB 2007
             IF (ITYPE.EQ.1.AND.NNPRT.GE.2)
     1       WRITE(IFILE,*)' AFTER RECORD 5: IDESGN,INUMTT,ICONST=',
     1                                       IDESGN,INUMTT,ICONST
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2007
             IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 2222
C END OCT 1996
C
C*****************************************************************
C END SECTION FOR BUCKLING OF PANEL SKIN BETWEEN STRINGER HATS
C*****************************************************************
C
    5       CONTINUE
C
C*****************************************************************
C BEGIN SECTION FOR BUCKLING OF PANEL SKIN UNDER STRINGER HATS
C*****************************************************************
C
            ID = 2
            IF (IFAY(1).EQ.1) ID = 1
C BEG JULY 1995
            WIDTHH = W2(1)
            IF (ISTIF(1).EQ.5) THEN
               ID = 1
               WIDTHH=B0
            ENDIF
C END JULY 1995
            RSUM1 = RESEIG(1,ID,1) + FLOAT(IADDST)*DELSKN(1,ID,1)
     1                             + FLOAT(IADDFT)*DELFCX(1,ID)
            RSUM2 = RESEIG(2,ID,1) + FLOAT(IADDST)*DELSKN(2,ID,1)
     1                             + FLOAT(IADDFT)*DELFCX(2,ID)
C BEG JULY 1995
            IF (ISTIF(1).NE.5) THEN
               RSUM3 = NXY0       + SNXY0*FLOAT(IADDFC)*DELSKN(3,ID,1)
            ELSE
               RSUM3 =RESEIG(3,ID,1) +SNXY1*FLOAT(IADDFC)*DELSKN(3,ID,1)
     1                               +SNXY1*FLOAT(IADDFT)*DELFCX(3,ID)
            ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
C END JULY 1995
C BEG JUN 1996
            EFOUND = 0.
            IF (ISANDW(2,1).EQ.1.OR.ISANDW(2,1).EQ.NLAYER(2,1))
     1         EFOUND = WFOUND(2,1)
C END JUN 1996
            CALL MFILL1(IDESGN,IRMOD,MARG,NARG,TARG,CARG,
     1                  MLOCAL,NLOCAL,TLOCAL,CLOCL,
     1                  MSKIN2,NSKIN2,TESTL2,CLOCA2)
C BEG JULY 1995
            CALL GENSTB(1,A0,WIDTHH,RSUM1,RSUM2,RSUM3,
C END JULY 1995
     1             RESFIX(1,ID,1),RESFIX(2,ID,1),MARG,NARG,TARG,
     1             CARG,EIGLO2,IDESGN,EIG1,CX(1,1,ID),
     1             TX(ID),TX(ID),GTX(1,ID),IREDUC,0,IFILE,ITUTOR,JJJ,
     1             ISTIF,RESLTS,RPRES,1,10.E10,0.,FFLAT(10,MIDEND,1),
     1        1,1,IAGAIN(10,MIDEND),FNEFF(10,MIDEND),7090,EIGRAT(10),
     1        RBB0(10),ILOADS,ICASE)
C BEG FEB 1996
            IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
            CALL MFILL2(IDESGN,IRMOD,MARG,NARG,TARG,CARG,
     1                  MSKIN2,NSKIN2,TESTL2,CLOCA2)
C
            EILOCL = MIN(EIGLOC,EIGLO2)
            DIF = ABS(EILOCL - EIGLO2)/ABS(EILOCL)
            IF (DIF.LT.0.001) THEN
               IF (IDESGN.EQ.0) THEN
                  MLOCAL = MSKIN2
                  NLOCAL = NSKIN2
                  CLOCL  = CLOCA2
C BEG JULY 1995
                  IF (IPRELM.EQ.4) ICD7 = 1
                  TLOCAL = TESTL2
                  IF (TESTL2.LT.1.0.AND.ABS(CLOCA2).GT.0.0) THEN
                     CLOCL=1./CLOCA2
                     IF (IPRELM.EQ.4) ICD7 = 2
                  ENDIF
                  IBW2HT = 1
C END JULY 1995
               ENDIF
C                  END: IDESGN.EQ.0
            ENDIF
C               END: DIF.LT.0.001
            IF (IPRELM.EQ.4) GO TO 500
            IF (IPRELM.EQ.2.AND.IKNOCK.EQ.0) GO TO 500
C
            IF (RSUM1.LT.0.0.OR.RSUM2.LT.0.0) THEN
             IF (IKNOCK.EQ.1) THEN
               CLOC=0.
               TESTLL=10.
               MMM = MSKIN2
               NNN = NSKIN2
               CALL GENSTB(1,A0,W2(1),RSUM1,RSUM2,0.,
     1               RESFIX(1,ID,1),RESFIX(2,ID,1),MMM,NNN,TESTLL,
     1               CLOC,ENOSHR,IDESGN,EIG1,CXB(1,1,ID),
     1               TX(ID),TX(ID),GTX(1,ID),IREDUC,0,IFILE,ITUTOR,JJJ,
     1               ISTIF,RESLTS,RPRES,1,10.E10,0.,FFLAT(10,MIDEND,1),
     1          1,1,IAGAIN(10,MIDEND),FNEFF(10,MIDEND),7095,EIGRAT(10),
     1               RBB0(10),ILOADS,ICASE)
C BEG FEB 1996
               IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
               IF (ENOSHR.LT.1.E8) FKNOCK(3) = EIGLO2/ENOSHR
               MLCNS3 = MMM
               NLCNS3 = NNN
               IF (FKNOCK(3).GT.1.0) FKNOCK(3) = 1.0
               GO TO 9
             ENDIF
C                END: IKNOCK.EQ.1
            ENDIF
C               END: RSUM1.LT.0.0.OR.RSUM2.LT.0.0)
C
            FACSAF = FSBSTR
C BEG JULY 1995
C BEG APR 2007
            IF (IQUICK.EQ.1.OR.ISTIF(1).EQ.5
     1       .OR.(IPRELM.EQ.0.AND.IPANDA.EQ.1.AND.MIDEND.EQ.1)) THEN
C BEG OCT 1996
C            CALL RECORD(1,9,EIGLO2,CLOCL,MSKIN2,NSKIN2,ICONST,CONSTR,
C BEG JUL 2010
          IF (MSKIN2.GE.NMINSR.AND.MSKIN2.LE.NMAXSR.AND.ISTIF(1).EQ.5
     1     .AND.MSKIN2.NE.0.AND.ISRIDX.EQ.1.AND.IDESGN.EQ.0
     1     .AND.ILABEL.GE.9260.AND.IHILOC.NE.0) THEN
          ISRMOD(2) = 1
          IF (NNPRT.GE.0) WRITE(IFILE,
     1    '(/,A,/,A,/,A,/,A,/,A,I5,A,I5,A,/,A,I5,/,A)')
     1 ' Buckling of the lower skin of the truss-core sandwich',
     1 ' is not recorded as a margin because this type of buckling',
     1 ' has been superseded by the results from the discretized',
     1 ' skin-stringer module model, for which buckling load factors',
     1 ' have been computed in the range from m = ',NMINSR,' to m = ',
     1   NMAXSR,' axial halfwaves.',
     1 ' The critical buckling load from the PANDA-type theory has',
     1   MSKIN2,' axial half waves, which lies within this range.'
          ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
          IF (ISRMOD(2).EQ.0)
C END JUL 2010
     1       CALL RECORD(1,9,EIGLO2,CLOCA2,MSKIN2,NSKIN2,ICONST,CONSTR,
C END JULY 1995
     1       WORDB,IFILE,IDESGN,JJJ,LENMOD,EIGMAX,IPOINC,INUMTT,
     1       FACSAF,ICASE,0,0,VINHOF,MORCON(ILOADS,ICASE),ENDMID,0,0,0)
             IF (NNPRT.GE.0.AND.ILABEL.GE.9260)
     1       WRITE(IFILE,'(/,A,/,A,1P,E12.4,A,I4,A,I4,A,1P,E10.2,A)')
     1     ' Local buckling from PANDA-type theory [1B]:',
     1     ' PANDA-type buckling load factor, EIGLO2(m,n,slope)=',
     1       EIGLO2,'(',MSKIN2,',',NSKIN2,',',CLOCA2,')'
            ENDIF 
C END APR 2007
C BEG FEB 2007
            IF (ITYPE.EQ.1.AND.NNPRT.GE.2)
     1      WRITE(IFILE,*)' AFTER RECORD 6: IDESGN,INUMTT,ICONST=',
     1                                      IDESGN,INUMTT,ICONST
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2007
            IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 2222
C END OCT 1996
C
C     WRITE(8,1002) ICONST,EIGLO2,CONSTR(ICONST),A0,W2(1),CX(4,4,2)
C1002 FORMAT(/' LOCAL BUCKLING OF HAT INTERIOR SKIN. SOME PARAMETERS:'/
C    1' CONSTRAINT NO.                                    ',I10/
C    1' BUCKLING LOAD FACTOR, EIGLO2                      ',1PE12.4/
C    1' BUCKLING LOAD FACTOR, CONSTR                      ',1PE12.4/
C    1' RING SPACING, A0                                  ',1PE12.4/
C    1' INTERIOR HAT SKIN WIDTH, W2(1)                    ',1PE12.4/
C    1' INTERIOR HAT SKIN BENDING STIFFNESS, CX(4,4,2)    ',1PE12.4)
C     WRITE(8,1003) RESULT(1,2,1),RESULT(2,2,1),NXY0,RESFIX(1,2,1),
C    1              RESFIX(2,2,1)
C1003 FORMAT(
C    1' EIGENVALUE RESULTANTS, NX, NY, NXY                ',1P,3E12.4/
C    1'      FIXED RESULTANTS,NX0,NY0,NXY0                ',1P,3E12.4)
C     WRITE(8,1004) MSKIN2,NSKIN2,TESTL2,CLOCA2,IDESGN,CX(5,5,2)
C1004 FORMAT(
C    1' MSKIN2, NSKIN2                                    ',2I10/
C    1' TESTL2, CLOCA2                                    ',1P,2E12.4/
C    1' IDESGN, CX(5,5,2)                                 ',I12,1PE12.4)
C
C
C*****************************************************************
C END SECTION FOR BUCKLING OF PANEL SKIN UNDER STRINGER HATS
C*****************************************************************
C
C*****************************************************************
C END SECTION FOR WHICH (b(1)/w2(1)<3) and (b(2)/w2(2)>1)
C*****************************************************************
C
         ELSE
C           END:   BOVRW2(2).GT.1
C           BEGIN: BOVRW2(2).LE.1
C
C*****************************************************************
C BEGIN SECTION FOR WHICH (b(1)/w2(1)<3) and (b(2)/w2(2)<1)
C*****************************************************************
C
C
C*****************************************************************
C BEGIN SECTION FOR BUCKLING OF PANEL SKIN BETWEEN STRINGER HATS
C*****************************************************************
C
C
C BEG JUN 1996
            EFOUND = 0.
            IF (ISANDW(1,1).EQ.1.OR.ISANDW(1,1).EQ.NLAYER(1,1))
     1         EFOUND = WFOUND(1,1)
C END JUN 1996
            CALL GENSTB(1,A0-W2(2),B0-W2(1),PNX,PNY,NXY0,RSKNXP,RSKNYP,
     1          MSKIN,NSKIN,TESTLC,CLOCAL,EIGLOC,IDESGN,EIG1,CX(1,1,1),
C BEG JAN 2005
     1          TX(1),TXX,GTX(1,1),IREDUC,0,IFILE,ITUTOR,JJJ,ISTIF,
C END JAN 2005
     1          RESLTS,RPRES,1,10.E10,0.,FFLAT(1,MIDEND,1),1,
     1          1,IAGAIN(1,MIDEND),FNEFF(1,MIDEND),7100,EIGRAT(1),
     1          RBB0(1),ILOADS,ICASE)
C BEG FEB 1996
            IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
C
            IF (IDESGN.EQ.0) THEN
               CLOCL = CLOCAL
C BEG JULY 1995
               IF (IPRELM.EQ.4) ICD7 = 1
               IF (TESTLC.LT.1.0.AND.ABS(CLOCAL).GT.0.0) THEN
                  CLOCL=1./CLOCAL
                  IF (IPRELM.EQ.4) ICD7 = 2
               ENDIF
C END JULY 1995
               MLOCAL = MSKIN
               NLOCAL = NSKIN
               TLOCAL = TESTLC
            ENDIF
            EILOCL = EIGLOC
C BEG JULY 1995
            IF (IPRELM.EQ.4) GO TO 500
C END JULY 1995
            IF (IPRELM.EQ.2.AND.IKNOCK.EQ.0) GO TO 7
C
            IF (PNX.LT.0.0.OR.PNY.LT.0.0) THEN
             IF (IKNOCK.EQ.1) THEN
               CLOC=0.
               TESTLL=10.
               MMM = MSKIN
               NNN = NSKIN
               CALL GENSTB(1,A0-W2(2),B0-W2(1),
     1                  PNX,PNY,0.,RSKNXP,RSKNYP,MMM,
     1                  NNN,TESTLL,CLOC,ENOSHR,IDESGN,EIG1,CXB(1,1,1),
C BEG JAN 2005
     1                  TX(1),TXX,GTX(1,1),IREDUC,0,IFILE,ITUTOR,JJJ,
C END JAN 2005
     1                  ISTIF,RESLTS,RPRES,1,10.E10,0.,
     1                  FFLAT(1,MIDEND,1),1,1,IAGAIN(1,MIDEND),
     1                  FNEFF(1,MIDEND),7105,EIGRAT(1),
     1                  RBB0(1),ILOADS,ICASE)
C BEG FEB 1996
               IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
               IF (ENOSHR.LT.1.E8) FKNOCK(2) = EIGLOC/ENOSHR
               MLOCNS = MMM
               NLOCNS = NNN
               IF (FKNOCK(2).GT.1.0) FKNOCK(2) = 1.0
               GO TO 7
             ENDIF
C                END: IKNOCK.EQ.1
            ENDIF
C               END: PNX.LT.0.0.OR.PNY.LT.0.0
C
C BEG JULY 1995
C BEG APR 2007
            IF (IQUICK.EQ.1.OR.ISTIF(1).EQ.5
     1        .OR.(IPRELM.EQ.0.AND.IPANDA.EQ.1.AND.MIDEND.EQ.1)) THEN
C BEG OCT 1996
C            CALL RECORD(0,1,EIGLOC,CLOCL,MSKIN,NSKIN,ICONST,CONSTR,
C BEG JUL 2010
          IF (MSKIN.GE.NMINSR.AND.MSKIN.LE.NMAXSR.AND.ISTIF(1).EQ.5
     1     .AND.MSKIN.NE.0.AND.ISRIDX.EQ.1.AND.IDESGN.EQ.0
     1     .AND.ILABEL.GE.9260.AND.IHILOC.NE.0) THEN
          ISRMOD(6) = 1
          IF (NNPRT.GE.0) WRITE(IFILE,
     1    '(/,A,/,A,/,A,/,A,/,A,I5,A,I5,A,/,A,I5,/,A)')
     1 ' Buckling of the lower skin of the truss-core sandwich',
     1 ' is not recorded as a margin because this type of buckling',
     1 ' has been superseded by the results from the discretized',
     1 ' skin-stringer module model, for which buckling load factors',
     1 ' have been computed in the range from m = ',NMINSR,' to m = ',
     1   NMAXSR,' axial halfwaves.',
     1 ' The critical buckling load from the PANDA-type theory has',
     1   MSKIN,' axial half waves, which lies within this range.'
          ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
          IF (ISRMOD(6).EQ.0)
C END JUL 2010
     1       CALL RECORD(0,1,EIGLOC,CLOCAL,MSKIN,NSKIN,ICONST,CONSTR,
C END JULY 1995
     1       WORDB,IFILE,IDESGN,JJJ,LENMOD,EIGMAX,IPOINC,INUMTT,FSLOC,
     1       ICASE,0,0,VINHOF,MORCON(ILOADS,ICASE),ENDMID,0,0,ISUB)
             IF (NNPRT.GE.0.AND.ILABEL.GE.9260)
     1       WRITE(IFILE,'(/,A,/,A,1P,E12.4,A,I4,A,I4,A,1P,E10.2,A)')
     1     ' Local buckling from PANDA-type theory [1B]:',
     1     ' PANDA-type buckling load factor, EIGLOC(m,n,slope)=',
     1       EIGLOC,'(',MSKIN,',',NSKIN,',',CLOCAL,')'
            ENDIF
C END APR 2007
C BEG FEB 2007
             IF (ITYPE.EQ.1.AND.NNPRT.GE.2)
     1       WRITE(IFILE,*)' AFTER RECORD 7: IDESGN,INUMTT,ICONST=',
     1                                       IDESGN,INUMTT,ICONST
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2007
             IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 2222
C END OCT 1996
C
C
C*****************************************************************
C END SECTION FOR BUCKLING OF PANEL SKIN BETWEEN STRINGER HATS
C*****************************************************************
C
    7       CONTINUE
C
C*****************************************************************
C BEGIN SECTION FOR BUCKLING OF PANEL SKIN UNDER RING HATS
C*****************************************************************
C
            ID = 2
            IF (IFAY(2).EQ.1) ID = 1
C BEG JULY 1995
            WIDTHH = W2(2)
            IF (ISTIF(2).EQ.5) THEN
               ID = 1
               WIDTHH=A0
            ENDIF
C END JULY 1995
            RSUM1 = RESEIG(1,ID,2) + FLOAT(IADDFC)*DELSKN(1,ID,2)
            RSUM2 = RESEIG(2,ID,2) + FLOAT(IADDFC)*DELSKN(2,ID,2)
C BEG JULY 1995
            IF (ISTIF(2).NE.5) THEN
               RSUM3 = -NXY0     -SNXY0*FLOAT(IADDFC)*DELSKN(3,ID,2)
            ELSE
               RSUM3=RESEIG(3,ID,2)+SNXY1*FLOAT(IADDFC)*DELSKN(3,ID,2)
            ENDIF
C BEG JUN 1996
            EFOUND = 0.
            IF (ISANDW(2,2).EQ.1.OR.ISANDW(2,2).EQ.NLAYER(2,2))
     1         EFOUND = WFOUND(2,2)
C END JUN 1996
            CALL GENSTB(1,B0-W2(1),WIDTHH,RSUM1,RSUM2,RSUM3,
C END JULY 1995
     1             RESFIX(1,ID,2),RESFIX(2,ID,2),NSKIN2,MSKIN2,TESTL2,
     1             CLOCA2,EIGLO2,IDESGN,EIG1,CY(1,1,ID),
     1             TY(ID),TY(ID),GTY(1,ID),IREDUC,0,IFILE,ITUTOR,JJJ,
     1             ISTIF,RESLTR,RPRER,2,10.E10,0.,FFLAT(10,MIDEND,1),1,
     1            1,IAGAIN(10,MIDEND),FNEFF(10,MIDEND),7110,EIGRAT(10),
     1             RBB0(10),ILOADS,ICASE)
C BEG FEB 1996
            IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
C
            EILOCL = MIN(EIGLOC,EIGLO2)
            DIF = ABS(EILOCL - EIGLO2)/ABS(EILOCL)
            IF (DIF.LT.0.001) THEN
               IF (IDESGN.EQ.0) THEN
                  MLOCAL = MSKIN2
                  NLOCAL = NSKIN2
                  CLOCL  = CLOCA2
                  TLOCAL = TESTL2
                  IF (TESTL2.LT.1.0.AND.ABS(CLOCA2).GT.0.0)
     1               CLOCL=1./CLOCA2
               ENDIF
            ENDIF
            IF (IPRELM.EQ.2.AND.IKNOCK.EQ.0) GO TO 500
C
            IF (RESEIG(1,ID,2).LT.0.0.OR.RESEIG(2,ID,2).LT.0.0) THEN
             IF (IKNOCK.EQ.1) THEN
               CLOC=0.
               TESTLL=10.
               MMM = MSKIN2
               NNN = NSKIN2
               CALL GENSTB(1,B0-W2(1),W2(2),RESEIG(1,ID,2),
     1               RESEIG(2,ID,2),0.,
     1               RESFIX(1,ID,2),RESFIX(2,ID,2),MMM,NNN,TESTLL,
     1               CLOC,ENOSHR,IDESGN,EIG1,CYB(1,1),
     1               TY(ID),TY(ID),GTY(1,ID),IREDUC,0,IFILE,ITUTOR,JJJ,
     1               ISTIF,RESLTR,RPRER,2,10.E10,0.,FFLAT(10,MIDEND,1),
     1          1,1,IAGAIN(10,MIDEND),FNEFF(10,MIDEND),7115,EIGRAT(10),
     1               RBB0(10),ILOADS,ICASE)
C BEG FEB 1996
               IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
               IF (ENOSHR.LT.1.E8) FKNOCK(3) = EIGLO2/ENOSHR
               MLCNS3 = MMM
               NLCNS3 = NNN
               IF (FKNOCK(3).GT.1.0) FKNOCK(3) = 1.0
               GO TO 9
             ENDIF
C                END: IKNOCK.EQ.1
            ENDIF
C               END: RESEIG(1,ID,2).LT.0.0, etc.
C
            FACSAF = 1.0
C BEG OCT 1996
C           CALL RECORD(2,9,EIGLO2,CLOCL,MSKIN2,NSKIN2,ICONST,CONSTR,
            CALL RECORD(2,9,EIGLO2,CLOCA2,MSKIN2,NSKIN2,ICONST,CONSTR,
     1       WORDB,IFILE,IDESGN,JJJ,LENMOD,EIGMAX,IPOINC,INUMTT,
     1       FACSAF,ICASE,0,0,VINHOF,MORCON(ILOADS,ICASE),ENDMID,
     1       0,0,0)
C BEG APR 2007
            IF (NNPRT.GE.0.AND.ILABEL.GE.9260)
     1      WRITE(IFILE,'(/,A,/,A,1P,E12.4,A,I4,A,I4,A,1P,E10.2,A)')
     1    ' Local buckling from PANDA-type theory [1B]:',
     1    ' PANDA-type buckling load factor, EIGLO2(m,n,slope)=',
     1      EIGLO2,'(',MSKIN2,',',NSKIN2,',',CLOCA2,')'
C END APR 2007
C BEG FEB 2007
           IF (ITYPE.EQ.1.AND.NNPRT.GE.2)
     1     WRITE(IFILE,*)' AFTER RECORD 8: IDESGN,INUMTT,ICONST=',
     1                                     IDESGN,INUMTT,ICONST
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2007
           IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 2222
C END OCT 1996
C
C*****************************************************************
C END SECTION FOR BUCKLING OF PANEL SKIN UNDER RING HATS
C*****************************************************************
C
         ENDIF
C          END BOVRW2(2).LT.1
C*****************************************************************
C END SECTION FOR WHICH (b(1)/w2(1)<3) and (b(2)/w2(2)<1)
C*****************************************************************
C
      ENDIF
C          END long "IF": IF ((BOVRW2(1).GT.3.0.AND.BOVRW2(2).GT.1.0)
C                         .OR.(ISTIF(1).EQ.5.OR.ISTIF(2).EQ.5)) THEN
C*****************************************************************
C END VARIOUS LOCAL BUCKLING ANALYSES OF VARIOUS PARTS OF THE
C PANEL SKIN.
C*****************************************************************
C
C
    9 CONTINUE
C
C****************************************************************
C BEGIN BUCKLING ANALYSES FOR CASES IN WHICH THERE ARE STIFFENERS
C TO BE SMEARED OUT.
C***************************************************************
C
      IF (NPARTR.NE.0.AND.NPARTS.EQ.0.AND.IPRELM.EQ.2)
     1    FKNOCK(4) = MIN(FKNOCK(2),FKNOCK(3))
      IF (NPARTR.EQ.0.OR.NPARTS.EQ.0) GO TO 10  
C
C***************************************************************
C BEGIN SECTION IN WHICH STRINGERS ARE SMEARED OUT AND WE ARE
C CONCERNED WITH BUCKLING BETWEEN RINGS (CALLED "PANEL" INSTABILITY).
C***************************************************************
C
C   SMEARED STRINGERS, BUCKLING BETWEEN RINGS...
C
C BEG DEC 1998
      AARG = A0
      IF (ILABEL.GE.9102.AND.ILABEL.LE.9105) AARG = LENMOD*A0
C END DEC 1998
C BEG JUN 1996
      EFOUND = 0.
      IF (ISANDW(1,1).EQ.1.OR.ISANDW(1,1).EQ.NLAYER(1,1))
     1 EFOUND = WFOUND(1,1)
C END JUN 1996
C BEG AUG 1995
      TXX = TX(1)
C BEG JAN 2005
      IF (KLAYER(1,1).NE.0) TXX = TXXX(2,1)
C END JAN 2005
      PPNY = PNY
      IF (ISOGRD.EQ.1.OR.ISTIF(1).EQ.5) THEN
         TXX = TEFF(1)
         PPNY = FNY
      ENDIF
C END AUG 1995
C
C BEGIN LONG "BOVRW2(2)" SECTION FOR INTER-RING BUCKLING
      IF (BOVRW2(2).GT.1.0) THEN
       BBBG = BBIG
       RSAVE= R
       FACWID=1.0
       IARGFL = 0
       IF (IFLAT.NE.0) IARGFL = 1
       IF (IWIDE.EQ.1) THEN
          IARGFL = 1
C BEG SEPT 1993
C BEG MAR 1996
          IF (IBEAM.EQ.1) BBBG = MAX(10.*A0,BBIG)
C END MAR 1996
C END SEPT 1993
          R = 10000.*SQRT(A0**2 +BBBG**2)
          FACWID = BBIG/BBBG
          IF (IPRELM.EQ.0) THEN
           IF (IDESGN.EQ.0.AND.CX(4,4,5).LT.20.*CX(5,5,5)) THEN
            IF (BBIG.LT.2.0*A0.OR.BBIG.GT.0.2*RSAVE) THEN
              WRITE(IFILE,*)' *********** NOTE  NOTE  NOTE  ***********'
              WRITE(IFILE,*)' WIDE-COLUMN MODEL MAY BE TOO CONSERVATIVE'
              WRITE(IFILE,*)' *********** NOTE  NOTE  NOTE  ***********'
            ENDIF
           ENDIF
          ENDIF
       ENDIF
       PARX1 = BBBG/B(1)
       PARX2 = ABS(1.-CX(4,4,1)/CX(4,4,5))
C
C BEG NOV 2003
C BEGIN LONG "ILOWSS" SECTION FOR INTER-RING BUCKLING...
       IF (NNPRT.GE.2) WRITE(IFILE,'(A,I5,A,I2,A,I5)')
     1' IPRELM=',IPRELM,'  ILOWSS(IPRELM+1,',NUMBUC,')=',
     1                     ILOWSS(IPRELM+1,NUMBUC)
       IF (ILOWSS(IPRELM+1,NUMBUC).EQ.0) THEN
C END NOV 2003
          IF (FSLOC.GE.0.95) THEN
C BEG OCT 1998
             IF (NNPRT.GE.2) WRITE(IFILE,'(/,A,1P,E12.4,A,1P,E12.4)')
     1     ' inter-ring buckling: smeared stringers, C11=',CX(1,1,5),
     1     ', radius, R=',R
C END OCT 1998
             CALL MFILL1(IDESGN,IRMOD,MARG,NARG,TARG,CARG,
     1                   MLOCAL,NLOCAL,TLOCAL,CLOCL,
     1                   MSS,NSS,TESTSS,CSS)
C BEG AUG 1995
             CALL GENSTB(3,AARG,BBBG,NX0,PPNY,NXY0,NXPRE,RSKNYP,MARG,
     1       NARG,TARG,CARG,EIGSS,IDESGN,EIG1,CX(1,1,5),TEFF(1),TXX,
C END AUG 1995
     1       GTX(1,5),IREDUC,0,IFILE,ITUTOR,JJJ,ISTIF,RESLTS,RPRES,1,
     1       PARX1,PARX2,FFLAT(3,MIDEND,1),IARGFL,
     1       1,IAGAIN(3,MIDEND),FNEFF(3,MIDEND),7120,EIGRAT(3),
     1       RBB0(3),ILOADS,ICASE)
C BEG NOV 2003
C            IF (IDESGN.EQ.0.AND.ILABLY.EQ.9210) EIGRTY(3) = EIGRAT(3)
C            IF (IDESGN.EQ.1.AND.ILABLY.EQ.9210) EIGRAT(3) = EIGRTY(3)
C END NOV 2003
C BEG FEB 1996
             IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
             CALL MFILL2(IDESGN,IRMOD,MARG,NARG,TARG,CARG,
     1                   MSS,NSS,TESTSS,CSS)
C
             IF (IAGAIN(3,MIDEND).NE.0) THEN
               CALL MFILL1(IDESGN,IRMOD,MARG,NARG,TARG,CARG,
     1                     MLOCAL,NLOCAL,TLOCAL,CLOCL,
     1                     M2ND(3,MIDEND),N2ND(3,MIDEND),
     1                     TST2ND(3,MIDEND),SLP2ND(3,MIDEND))
C BEG AUG 1995
               CALL GENSTB(3,AARG,BBBG,NX0,PPNY,NXY0,NXPRE,RSKNYP,
     1           MARG,NARG,TARG,CARG,EIG2ND(3,MIDEND),
     1           IDESGN,EIG1,CX(1,1,5),TEFF(1),TXX,GTX(1,5),
C END AUG 1995
     1           IREDUC,0,IFILE,ITUTOR,JJJ,ISTIF,RESLTS,RPRES,1,
     1           PARX1,PARX2,FFLAT(3,MIDEND,2),IARGFL,
     1           2,IAGAIN(3,MIDEND),FNEFF(3,MIDEND),7125,EIGRAT(3),
     1           RBB0(3),ILOADS,ICASE)
C BEG FEB 1996
               IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
               CALL MFILL2(IDESGN,IRMOD,MARG,NARG,TARG,CARG,
     1                     M2ND(3,MIDEND),N2ND(3,MIDEND),
     1                     TST2ND(3,MIDEND),SLP2ND(3,MIDEND))
C
C BEG AUG 1995
               CALL WGTAVE(NX0+NXPRE,PPNY+RSKNYP,NXY0,
C END AUG 1995
     1                     EIG2ND(3,MIDEND),EIGSS,IAGAIN(3,MIDEND))
             ENDIF
C
C END "FSLOC.GE.0.95" SECTION
C
          ELSE
C
C BEGIN "FSLOC less than 0.95" section...
C BEG OCT 1998
             IF (NNPRT.GE.2) WRITE(IFILE,'(/,A,1P,E12.4,A,1P,E12.4)')
     1     ' inter-ring buckling: smeared stringers, C11=',CSWIDE(1,1),
     1     ', radius, R=',R
C END OCT 1998
             CALL MFILL1(IDESGN,IRMOD,MARG,NARG,TARG,CARG,
     1                   MLOCAL,NLOCAL,TLOCAL,CLOCL,
     1                   MSS,NSS,TESTSS,CSS)
C BEG AUG 1995
             CALL GENSTB(3,AARG,BBBG,NX0,PPNY,NXY0,NXPRE,RSKNYP,MARG,
     1       NARG,TARG,CARG,EIGSS,IDESGN,EIG1,CSWIDE,TEFF(1),TXX,
C END AUG 1995
     1       GTX(1,5),IREDUC,0,IFILE,ITUTOR,JJJ,ISTIF,RESLTS,RPRES,1,
     1       PARX1,PARX2,FFLAT(3,MIDEND,1),IARGFL,
     1       1,IAGAIN(3,MIDEND),FNEFF(3,MIDEND),7130,EIGRAT(3),
     1       RBB0(3),ILOADS,ICASE)
C BEG FEB 1996
             IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
             CALL MFILL2(IDESGN,IRMOD,MARG,NARG,TARG,CARG,
     1                   MSS,NSS,TESTSS,CSS)
C
             IF (IAGAIN(3,MIDEND).NE.0) THEN
               CALL MFILL1(IDESGN,IRMOD,MARG,NARG,TARG,CARG,
     1                     MLOCAL,NLOCAL,TLOCAL,CLOCL,
     1                     M2ND(3,MIDEND),N2ND(3,MIDEND),
     1                     TST2ND(3,MIDEND),SLP2ND(3,MIDEND))
C BEG AUG 1995
               CALL GENSTB(3,AARG,BBBG,NX0,PPNY,NXY0,NXPRE,RSKNYP,
     1           MARG,NARG,TARG,CARG,EIG2ND(3,MIDEND),
     1           IDESGN,EIG1,CSWIDE,TEFF(1),TXX,GTX(1,5),
C END AUG 1995
     1           IREDUC,0,IFILE,ITUTOR,JJJ,ISTIF,RESLTS,RPRES,1,
     1           PARX1,PARX2,FFLAT(3,MIDEND,2),IARGFL,
     1           2,IAGAIN(3,MIDEND),FNEFF(3,MIDEND),7135,EIGRAT(3),
     1           RBB0(3),ILOADS,ICASE)
C BEG FEB 1996
               IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
               CALL MFILL2(IDESGN,IRMOD,MARG,NARG,TARG,CARG,
     1                     M2ND(3,MIDEND),N2ND(3,MIDEND),
     1                     TST2ND(3,MIDEND),SLP2ND(3,MIDEND))
C
C BEG AUG 1995
               CALL WGTAVE(NX0+NXPRE,PPNY+RSKNYP,NXY0,
C END AUG 1995
     1                     EIG2ND(3,MIDEND),EIGSS,IAGAIN(3,MIDEND))
             ENDIF
          ENDIF
C END "FSLOC" SECTION, still in "ILOWSS" section and in BOVRW2(2) section
C BEG MAR 1998
          EIGVX1 = EIGVLX
C END MAR 1998
C BEG NOV 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
          IF (NNPRT.GE.2.AND.ILABEL.GE.9260) WRITE(IFILE,'(A,1P,E12.4)')
     1  ' BEFORE KNOCKDOWN: EIGVLX=',EIGVLX
C END NOV 2003
          CSSS = CSS
C BEG DEC 1993
          IF (IDESGN.EQ.0.AND.IPRELM.EQ.5) ICD8 = 1
C END DEC 1993
          IF (TESTSS.LT.1.0.AND.ABS(CSS).GT.0.0) THEN
             CSSS=1./CSS
C BEG DEC 1993
             IF (IDESGN.EQ.0.AND.IPRELM.EQ.5) ICD8 = 2
C END DEC 1993
          ENDIF
          IF (IDESGN.NE.0) GO TO 95
C BEG OCT 1998
          EIGSSX = EIGSS
C END OCT 1998
C BEG MAR 1998
          CALL EIGMOD(BBBG,FNEFF(3,MIDEND),B(1),EIGSS,ITUTOR,IFILE,
     1                CX(4,4,1),CX(4,4,5),FSAFE2,NX0,PPNY,NXY0,1,3)
C BEG OCT 1998
C BEG NOV 2003
          IF (NNPRT.GE.2.AND.ILABEL.GE.9260)
C END NOV 2003
C BEG OCT 2001
     1       WRITE(IFILE,'(A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4)')
     1' Number of circumferential halfwaves in buckling pattern=',
     1  FNEFF(3,MIDEND),
C END OCT 2001
     1' Buckling load factor BEFORE knockdown for smeared stringers=',
     1  EIGSSX,
     1' Buckling load factor AFTER  knockdown for smeared stringers=',
     1  EIGSS
C END OCT 1998
          CALL EIGMOD(BBBG,FNEFF(3,MIDEND),B(1),EIGVLX,ITUTOR,IFILE,
     1                CX(4,4,1),CX(4,4,5),FSAFE2,NX0,PPNY,NXY0,1,3)
          EIGVX1 = EIGVLX
C BEG NOV 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
          IF (NNPRT.GE.2.AND.ILABEL.GE.9260) WRITE(IFILE,'(A,1P,E12.4)')
     1  ' AFTER KNOCKDOWN: EIGVLX=',EIGVLX
C END NOV 2003
C END MAR 1998
       ENDIF
C END "ILOWSS" SECTION.
       IF (IDONNL(3).EQ.0) THEN
          R = RSAVE
          GO TO 10
       ENDIF
C
C BEGIN "IWIDE.EQ.0.AND.IFLAT.EQ.0..." SECTION. (Still in BOVWR2(2) section)
C BEG NOV 2003
       IF (IWIDE.EQ.0.AND.IFLAT.EQ.0
     1 .AND.(FSAFE2.GT.1.0.OR.ILOWSS(IPRELM+1,NUMBUC).EQ.1)) THEN
C23456789012345678901234567890123456789012345678901234567890123456789012
          BBBG2 = BBIG
          IF (IBEAM.EQ.1) BBBG2 = MAX(10.*A0,BBIG)
          R = 10000.*SQRT(A0**2 +BBBG2**2)
          PARX12 = BBBG2/B(1)
          PARX22 = ABS(1.-CX(4,4,1)/CX(4,4,5))
C
C BEGIN "FSLOC.GE.0.95" SECTION...
          IF (FSLOC.GE.0.95) THEN
             IF (NNPRT.GE.2) WRITE(IFILE,'(/,A,1P,E12.4,A,1P,E12.4)')
     1     ' inter-ring buckling: smeared stringers, C11=',CX(1,1,5),
     1     ', radius, R=',R
             CALL MFILL1(IDESGN,IRMOD,MARG,NARG,TARG,CARG,
     1                   MLOCAL,NLOCAL,TLOCAL,CLOCL,
     1                   MSS2,NSS2,TSTSS2,CSS2)
             CALL GENSTB(3,A0,BBBG2,NX0,PPNY,NXY0,NXPRE,RSKNYP,MARG,
     1        NARG,TARG,CARG,EIGSS2,IDESGN,EIG1,CX(1,1,5),TEFF(1),
     1        TXX,GTX(1,5),IREDUC,0,IFILE,ITUTOR,JJJ,ISTIF,RESLTS,
     1        RPRES,1,PARX12,PARX22,FFLAT(15,MIDEND,1),1,
     1        1,IAGAIN(15,MIDEND),FNEFF(15,MIDEND),7140,EIGRAT(15),
     1        RBB0(15),ILOADS,ICASE)
             IF (IRESTY.EQ.1) GO TO 2222
             CALL MFILL2(IDESGN,IRMOD,MARG,NARG,TARG,CARG,
     1                   MSS2,NSS2,TSTSS2,CSS2)
          ELSE
             IF (NNPRT.GE.2) WRITE(IFILE,'(/,A,1P,E12.4,A,1P,E12.4)')
     1     ' inter-ring buckling: smeared stringers, C11=',CSWIDE(1,1),
     1     ', radius, R=',R
             CALL MFILL1(IDESGN,IRMOD,MARG,NARG,TARG,CARG,
     1                   MLOCAL,NLOCAL,TLOCAL,CLOCL,
     1                   MSS2,NSS2,TSTSS2,CSS2)
             CALL GENSTB(3,A0,BBBG2,NX0,PPNY,NXY0,NXPRE,RSKNYP,MARG,
     1        NARG,TARG,CARG,EIGSS2,IDESGN,EIG1,CSWIDE,TEFF(1),
     1        TXX,GTX(1,5),IREDUC,0,IFILE,ITUTOR,JJJ,ISTIF,RESLTS,
     1        RPRES,1,PARX12,PARX22,FFLAT(15,MIDEND,1),1,
     1        1,IAGAIN(15,MIDEND),FNEFF(15,MIDEND),7145,EIGRAT(15),
     1        RBB0(15),ILOADS,ICASE)
             IF (IRESTY.EQ.1) GO TO 2222
             CALL MFILL2(IDESGN,IRMOD,MARG,NARG,TARG,CARG,
     1                   MSS2,NSS2,TSTSS2,CSS2)
          ENDIF
C END "FSLOC" SECTION.
          EIGVX2 = EIGVLX
C BEG NOV 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
          IF (NNPRT.GE.2.AND.ILABEL.GE.9260) WRITE(IFILE,'(A,1P,E12.4)')
     1  ' BEFORE KNOCKDOWN: EIGVLX=',EIGVLX
C END NOV 2003
          CSSS2 = CSS2
          IF (IDESGN.EQ.0.AND.IPRELM.EQ.5) ICD82 = 1
          IF (TSTSS2.LT.1.0.AND.ABS(CSS2).GT.0.0) THEN
             CSSS2=1./CSS2
             IF (IDESGN.EQ.0.AND.IPRELM.EQ.5) ICD82 = 2
          ENDIF
          IF (IDESGN.EQ.0) THEN
             EIGSSX = EIGSS2
             CALL EIGMOD(BBBG2,FNEFF(15,MIDEND),B(1),EIGSS2,ITUTOR,
     1              IFILE,CX(4,4,1),CX(4,4,5),FSAFE2,NX0,PPNY,NXY0,1,3)
C BEG NOV 2003
             IF (NNPRT.GE.2.AND.ILABEL.GE.9260)
C END NOV 2003
C BEG OCT 2001
     1       WRITE(IFILE,'(A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4)')
     1' Number of circumferential halfwaves in buckling pattern=',
     1  FNEFF(15,MIDEND),
C END OCT 2001
     1' Buckling load factor BEFORE knockdown for smeared stringers=',
     1  EIGSSX,
     1' Buckling load factor AFTER  knockdown for smeared stringers=',
     1  EIGSS2
             CALL EIGMOD(BBBG2,FNEFF(15,MIDEND),B(1),EIGVLX,ITUTOR,
     1              IFILE,CX(4,4,1),CX(4,4,5),FSAFE2,NX0,PPNY,NXY0,1,3)
             EIGVX2 = EIGVLX
C BEG NOV 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
             IF (NNPRT.GE.2.AND.ILABEL.GE.9260)
     1        WRITE(IFILE,'(A,1P,E12.4)')
     1     '  AFTER KNOCKDOWN: EIGVLX=',EIGVLX
C END NOV 2003
          ENDIF
          EIGVLX = EIGVX1
          R = RSAVE
C BEG NOV 2003
          IF (IDESGN.EQ.1.AND.ILOWSS(IPRELM+1,NUMBUC).EQ.1) THEN
             EIGSS = EIGSS2
             EIGVLX= EIGVX2
             BBBG = BBBG2
             MSS = MSS2
             NSS = NSS2
             TESTSS = TSTSS2
             CSS = CSS2
             CSSS= CSSS2
             FACWID = BBIG/BBBG2
             PARX1 = PARX12
             PARX2 = PARX22
          ENDIF
C BEG AUG 2005
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG JULY 2007
          IF (NNPRT.GE.2.OR.
     1      (IDESGN.EQ.0.AND.NNPRT.GE.0.AND.ILABEL.GE.9260)) THEN
             WRITE(IFILE,'(/,A,A)')
     1     ' INTER-RING BUCKLING load factors and (axial, circumfer.)',
     1     ' halfwaves:'
             IF (ISAND.EQ.0) WRITE(IFILE,'(A,A)')
     1     ' Donnell theory is used for these buckling calculations',
     1     ' in this case.'
             IF (ISAND.EQ.1) WRITE(IFILE,'(A,A)')
     1     ' Sanders theory is used for these buckling calculations',
     1     ' in this case.'
             IF (ISAND.EQ.2) WRITE(IFILE,'(A,A)')
     1     ' Marlowe theory is used for these buckling calculations',
     1     ' in this case.'
C23456789012345678901234567890123456789012345678901234567890123456789012
             WRITE(IFILE,
     1  '(A,/,A,/,A,1P,E12.4,A,I4,A,I4,A,/,A,/,A,1P,E12.4,A,I4,A,I4,A)')
     1     ' INTER-RING BUCKLING FROM PANDA-TYPE THEORY [1B]',
     1     '    AFTER KNOCKDOWN FOR t.s.d. AND FOR SMEARED STRINGERS:',
     1     ' EIGSS = ',EIGSS,'(m=',MSS,',n=',NSS,')',
     1     ' Inter-ring eigenvalue with panel as flat:',
     1     ' EIGSS2= ',EIGSS2,'(m=',MSS2,',n=',NSS2,')'
          ENDIF
C END JULY 2007
C END AUG 2005
C END NOV 2003
          IF (IDESGN.EQ.0.AND.EIGSS2.GT.EIGSS) THEN
             R = 10000.*SQRT(A0**2 +BBBG2**2)
             EIGSS = EIGSS2
C BEG MAR 1998
             EIGVLX= EIGVX2
C END MAR 1998
             BBBG = BBBG2
             MSS = MSS2
             NSS = NSS2
             TESTSS = TSTSS2
             CSS = CSS2
             CSSS= CSSS2
             IF (IDESGN.EQ.0.AND.IPRELM.EQ.5) ICD8 = ICD82
             FACWID = BBIG/BBBG2
             PARX1 = PARX12
             PARX2 = PARX22
             ILOWSS(IPRELM+1,NUMBUC) = 1
             IF (NNPRT.GE.2) WRITE(IFILE,'(A,I5,A,I2,A,I5)')
     1     ' IPRELM=',IPRELM,'  ILOWSS(IPRELM+1,',NUMBUC,')=',
     1                          ILOWSS(IPRELM+1,NUMBUC)
          ENDIF
       ENDIF
C END "IWIDE.EQ.0.AND.IFLAT.EQ.0..." SECTION. (Still in "BOVWR2(2)" section)
   95  CONTINUE
       IF (IPRELM.EQ.5) THEN
          EILOCL = EIGSS
          IF (IDESGN.EQ.0) THEN
             MLOCAL = MSS
C BEG MAR 1996
C            NLOCAL = NSS*FACWID
             NLOCAL = NSS
C END MAR 1996
             CLOCL  = CSSS
             TLOCAL = TESTSS
          ENDIF
          GO TO 500
       ENDIF
C
C BEGIN "NX0.LT.0.0.OR.PPNY.LT.0.0)" SECTION. (Still in "BOVWR2(2)" section)...
C BEG AUG 1995
       IF (NX0.LT.0.0.OR.PPNY.LT.0.0) THEN
C END AUG 1995
C BEGIN "IKNOCK.EQ.1" SECTION...
          IF (IKNOCK.EQ.1) THEN
            CLOC=0.
            TESTLL=10.
            MMM = MSS
            NNN = NSS
C BEG MAR 1996
            IF (IRFREE.EQ.1) NSKIN = NSS*FACWID
C           IF (IRFREE.EQ.1) NSKIN = NSS
C END MAR 1996
            IF (FFLAT(3,MIDEND,1).GT.0.5) IARGFL = 1
C BEGIN "FSLOC.GE.0.95" SECTION...
            IF (FSLOC.GE.0.95) THEN
C BEG OCT 1998
C23456789012345678901234567890123456789012345678901234567890123456789012
             IF (NNPRT.GE.2) WRITE(IFILE,'(/,A,1P,E12.4,A)')
     1     ' inter-ring buckling: smeared stringers, C11=',CXB(1,1,5),
     1     ', (No Nxy)'
C END OCT 1998
C BEG AUG 1995
             CALL GENSTB(3,A0,BBBG,NX0,PPNY,0.,NXPRE,RSKNYP,
     1       MMM,NNN,TESTLL,CLOC,ENOSHR,IDESGN,EIG1,CXB(1,1,5),
     1       TEFF(1),TXX,GTX(1,5),IREDUC,0,IFILE,ITUTOR,JJJ,ISTIF,
C END AUG 1995
     1       RESLTS,RPRES,1,PARX1,PARX2,FFLAT(3,MIDEND,1),IARGFL,
     1       1,IAGAIN(3,MIDEND),FNEFF(3,MIDEND),7150,EIGRAT(3),
     1       RBB0(3),ILOADS,ICASE)
C BEG FEB 1996
             IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
            ELSE
C BEG OCT 1998
C23456789012345678901234567890123456789012345678901234567890123456789012
             IF (NNPRT.GE.2) WRITE(IFILE,'(/,A,1P,E12.4,A)')
     1     ' inter-ring buckling: smeared stringers, C11=',CSWB(1,1),
     1     ', (No Nxy)'
C END OCT 1998
C BEG AUG 1995
             CALL GENSTB(3,A0,BBBG,NX0,PPNY,0.,NXPRE,RSKNYP,
     1       MMM,NNN,TESTLL,CLOC,ENOSHR,IDESGN,EIG1,CSWB,
     1       TEFF(1),TXX,GTX(1,5),IREDUC,0,IFILE,ITUTOR,JJJ,ISTIF,
C END AUG 1995
     1       RESLTS,RPRES,1,PARX1,PARX2,FFLAT(3,MIDEND,1),IARGFL,
     1       1,IAGAIN(3,MIDEND),FNEFF(3,MIDEND),7155,EIGRAT(3),
     1       RBB0(3),ILOADS,ICASE)
C BEG FEB 1996
             IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
            ENDIF
C END "FSLOC" SECTION.
            IF (IDESGN.EQ.0)
     1      CALL EIGMOD(BBBG,FNEFF(3,MIDEND),B(1),ENOSHR,ITUTOR,IFILE,
     1                  CX(4,4,1),CX(4,4,5),FSAFE2,NX0,PPNY,0.,1,3)
            IF (ENOSHR.LT.1.E8) FKNOCK(4) = EIGSS/ENOSHR
            MNOSHR = MMM
C BEG MAR 1996
            NNOSHR = NNN*FACWID
C           NNOSHR = NNN
C END MAR 1996
            IF (FKNOCK(4).GT.1.0) FKNOCK(4) = 1.0
            R = RSAVE
            GO TO 10
          ENDIF
C END "IKNOCK.EQ.1" SECTION.
       ENDIF
C END "NX0.LT.0.0.OR.PPNY.LT.0.0)" SECTION. (Still in "BOVWR2(2)" section)...
       R = RSAVE
C
       NSSF=NSS*FACWID
C BEG MAR 1998
       FKNMOD = 1.0
       IF (NSSF.EQ.0.AND.EIG8X.GT.0.0.AND.EIG8X.LT.1.0)
C BEG JUN 1998
     1    FKNMOD = 1./(EIG8X*FMDKD8)
C END JUN 1998
       IF (IPRELM.EQ.0.AND.IDESGN.EQ.0)
     1    EIGSM0 =EIGSS*FKNOCK(8)*FKNMOD
       IF (IPRELM.EQ.0.AND.IDESGN.EQ.1)
     1    EIGSM1 =EIGSS*FKNOCK(8)*FKNMOD
C END MAR 1998
C      IF (IPRELM.EQ.0.AND.IDESGN.EQ.0) EIGSM0 =EIGSS
C      IF (IPRELM.EQ.0.AND.IDESGN.EQ.1) EIGSM1 =EIGSS
C BEG OCT 1998
C
C BEGIN "ICASE.NE.2.OR.MSS.GT.1" SECTION...
       IF (ICASE.NE.2.OR.MSS.GT.1) THEN
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG NOV 2003
         IF (NNPRT.GE.2.AND.ILABEL.GE.9260) THEN
C END NOV 2003
                    WRITE(IFILE,'(/,A,/,
     1 A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4)')
     1' Smeared stringer buck. load factor before and after knockdown:',
     1' EIGSS(before knockdown by 2 factors below)         =',EIGSS,
     1' Knockdown factor from inter-ring modal imperfection=',FKNOCK(8),
     1' Modifying factor, FKNMOD=1 or 1/(EIG8X*FMDKD8)     =',FKNMOD,
     1' After knockdown, EIGSS*FKNOCK(8)*FKNMOD            =',
     1                   EIGSS*FKNOCK(8)*FKNMOD
        WRITE(IFILE,'(A,/,A,1P,E12.4,/,A,/,A,/,A,1P,E12.4)')
     1' in which',
     1' EIG8X  = lambda(ARBOCZ)/lambda(original PANDA-type theory)=',
     1  EIG8X,
     1'       lambda(ARBOCZ)=perfect panel buckling from ARBOCZ theory',
     1'       lambda(PANDA) =perfect panel buckling from PANDA  theory',
     1' FMDKD8 = 1 or 0.9/EIG8X =',FMDKD8
         ENDIF
C
C BEG NOV 2003
         IF (NSSF.GE.NMINRG.AND.NSSF.LE.NMAXRG.AND.NSSF.NE.0
     1   .AND.IDESGN.EQ.0.AND.ILABEL.GE.9260.AND.IWIDE.EQ.0) THEN
C END NOV 2003
            IRNMOD(1) = 1
            IF (NNPRT.GE.0) WRITE(IFILE,
C           IF (NNPRT.GE.1) WRITE(IFILE,
     1        '(/,A,/,A,/,A,/,A,/,A,I5,/,A,I5,A,/,A,I5,/,A)')
     1    ' Simple-support inter-ring buckling with smeared stringers',
     1    ' is not recorded as a margin because this type of buckling',
     1    ' has been superseded by the results from the discretized',
     1    ' inter-ring module model, for which inter-ring buckling',
     1    ' load factors have been computed in the range from n = ',
     1      NMINRG,' to n = ', NMAXRG,' circumferential halfwaves.',
     1    ' The critical simple-support inter-ring buckling model has',
     1      NSSF,' circ. half waves, which lies within this range.'
         ENDIF
C
         IF (IRNMOD(1).EQ.0)
     1   CALL RECORD(0,3,EIGSS*FKNOCK(8)*FKNMOD,CSSS,MSS,NSSF,ICONST,
     1     CONSTR,WORDB,IFILE,IDESGN,JJJ,LENMOD,EIGMAX,IPOINC,INUMTT,
     1     FSPAN,ICASE,0,0,VINHOF,MORCON(ILOADS,ICASE),ENDMID,0,0,0)
C BEG FEB 2007
         IF (ITYPE.EQ.1.AND.NNPRT.GE.2)
     1   WRITE(IFILE,*)' AFTER RECORD 9: IDESGN,INUMTT,ICONST=',
     1                                   IDESGN,INUMTT,ICONST
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2007
       ENDIF
C END "ICASE.NE.2.OR.MSS.GT.1" SECTION. (Still in BOVWR2(2) section.)
C
C END OCT 1998
C BEG JUNE 1998
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG OCT 1998
       IF (IFLAT.EQ.0.AND.IPRELM.EQ.0.AND.IDESGN.EQ.0.AND.ICASE.EQ.1) 
C END OCT 1998
     1     MCASS1 = MSS
C END JUNE 1998
       IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 2222
C BEG OCT 2004
C  store stuff for alternative solution.
       IF (IDESGN.EQ.0.AND.ILABEL.EQ.9260) THEN
          MPANDA(3) = MSS
          NPANDA(3) = NSSF
          SPANDA(3) = CSSS
          EPANDA(3) = EIGSS
          MPHIGH(3) = MWAVEX(3)
          EPHIGH(3) = EIGMNC(3)
       ENDIF
C END OCT 2004
C BEG NOV 2003
       IF (IDESGN.EQ.0.AND.IPRELM.EQ.0) EIGSX0 = 10.E+16
       IF (IDESGN.EQ.0.AND.(ILABEL.EQ.9260.OR.ILABEL.EQ.9280)) THEN
         ISIGNS = 0
         ISSSRX = 0
       ENDIF
C
C BEGIN INTER-RING ALTERNATIVE (trig. series expansion) SECTION...
       IF (ICASE.EQ.1.AND.(IDESGN.EQ.0.OR.IDISC1.EQ.1)
     1                 .AND.(ILABEL.EQ.9260.OR.ILABEL.EQ.9280)) THEN
            EIGSSZ = 0.
C           IDISCS = 0
            IF (IDESGN.EQ.0) IDISCS = 0
            SPSTRS = 0.
            SPRNGS = 0.
            XLONGS = B(2) 
            YLONGS = BBIG
            IF (IDESGN.EQ.0) THEN
               NMSTRS = 0
               NMRNGS = 0
            ENDIF
            FNXRNG(1) = 0.
            FNXRNG(2) = 0.
            FX0RNG(1) = 0.
	    FX0RNG(2) = 0.
	    ZNXRNG(1) = 0.
	    ZNXRNG(2) = 0.
            FNXSSA = NX0
            FNYSSA = PNY 
            FNXYSS = NXY0
            FNXSPR = NXPRE
            FNYSPR = RSKNYP
            CALL MOVER(CX(1,1,5),1,CSGEN,1,36)
            IF (IFLAT.EQ.0) THEN
             IF (ISOGRD.EQ.0.AND.ISTIF(1).NE.0
     1                      .AND.ISTIF(1).NE.4.AND.ISTIF(1).NE.5) THEN
C  Discrete stringers...
                ADDEA = (CX(1,1,2) - CX(1,1,1))*B2(1)
                IF (IZSTIF(1).EQ.1) ADDEA = 0.0
                EAS  = STFL1*B(1) + ADDEA
                EIYS = STFIY1
                GJSS  = STORS1*B(1)
                ECCS = ABS(STFM1/STFL1)
                EIXS = (STMM1-STFL1*ECCS**2)*B(1)
                FNXSTR(1) = (RESLTS(1)-RPRES(1))*HH(1)
                FNXSTR(2) = (RESLTS(2)-RPRES(2))*WW(1)
                IF (IBLADE(1).EQ.1) THEN
                   FNXSTR(1) = 0.
                   FNXSTR(2) = 0.
                   IF (NNPRT.GE.2) WRITE(IFILE,'(A)')
     1         ' Stringer eig.prestress set to zero because IBLADE(1)=1'
                ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
                FX0STR(1) = RPRES(1)*HH(1)
                FX0STR(2) = RPRES(2)*WW(1)
                ZNXSTR(1) = -ZPARTX(3)
                ZNXSTR(2) = -ZPARTX(4)
                IF (IFLAT.EQ.0.AND.R.LT.0.) THEN
                   ECCS = -ECCS
                   ZNXSTR(1) = -ZNXSTR(1)
                   ZNXSTR(2) = -ZNXSTR(2)
                ENDIF
                SPSTRS = B(1)
                IDISCS = 1
C BEG JAN 2005
                IF (IDESGN.EQ.0) THEN
                 YMULTS = 6.0
                 YLONGS = YMULTS*SPSTRS
                 NMSTRS = 7
                 IF (YLONGS.GT.1.1*BBIG) THEN
                  YMULTS = 5.0
                  YLONGS = YMULTS*SPSTRS
                  NMSTRS = 6
                  IF (YLONGS.GT.1.1*BBIG) THEN
                   YMULTS = 4.0
                   YLONGS = YMULTS*SPSTRS
                   NMSTRS = 5
                   IF (YLONGS.GT.1.1*BBIG) THEN
                    YMULTS = 3.0
                    YLONGS = YMULTS*SPSTRS
                    NMSTRS = 4
C END JAN 2005
                    IF (YLONGS.GT.1.1*BBIG) THEN
                       YMULTS = 2.0
                       YLONGS = YMULTS*SPSTRS
                       NMSTRS = 3
                       IF (YLONGS.GT.1.1*BBIG) THEN
                          YMULTS = 1.0
                          YLONGS = YMULTS*SPSTRS
                          NMSTRS = 2
                          IF (YLONGS.GT.1.0001*BBIG) THEN
                             IDISCS = 0
                             YMULTS = 0
                             YLONGS = BBIG
                             NMSTRS = 0
                             SPSTRS = 0.
                          ENDIF
                       ENDIF
                    ENDIF
C BEG JAN 2005
                   ENDIF
                  ENDIF
                 ENDIF
C END JAN 2005
                ELSE
                   IF (YMULTS.LT.0.5) THEN
                      IDISCS = 0
                      YLONGS = BBIG
                      SPSTRS = 0.
                   ELSE
                      YLONGS = YMULTS*SPSTRS
                   ENDIF
                ENDIF
                IF (NNPRT.GE.2) THEN
                 WRITE(IFILE,'(A,/,1P,7E11.3)')
     1    ' Discrete stringers: EAS,EIXS,EIYS,GJSS,ECCS,SPSTRS,YLONGS=',
     1                          EAS,EIXS,EIYS,GJSS,ECCS,SPSTRS,YLONGS
                 WRITE(IFILE,'(A,A,/,1P,6E12.4)')
     1   ' Preload in web: HH(1),RESLTS(1)-RPRES(1),RPRES(1),FNXSTR(1)',
     1         ',FX0STR(1),ZNXSTR(1)=',
     1           HH(1),RESLTS(1)-RPRES(1),RPRES(1),FNXSTR(1),FX0STR(1),
     1           ZNXSTR(1)
                 WRITE(IFILE,'(A,A,/,1P,6E12.4)')
     1  ' Preload in flng: WW(1),RESLTS(2)-RPRES(2),RPRES(2),FNXSTR(2)',
     1         ',FX0STR(2),ZNXSTR(2)=',
     1           WW(1),RESLTS(2)-RPRES(2),RPRES(2),FNXSTR(2),FX0STR(2),
     1           ZNXSTR(2)
                ENDIF
             ENDIF
C BEG JAN 2006
C  If you want to evaluate the effect of rings at the two ends of
C  the inter-ring alternate theory domain, just de-comment the
C  following section and toggle the "JAN 2006" lines in the
C  "CALL ALTSOL" below (switch which line is commented out). Beware
C  the 0.85 knockdown introduced when rings are present. Just look
C  at the buckling load factor BEFORE the application of 0.85. Ignore
C  the effect of the 0.85 knockdown factor.
C BEG JULY 2006 (While working on AIAA SDM48 paper for 2007 meeting...
C  A case has been found which makes me think it's best always to include
C  the effect of the edge rings in the inter-ring alternate buckling
C  model. Hence, the following lines are decommented...)
C
             NMRNGS = 0
             EAR = 0.
             EIXR = 0.
             EIYR = 0.
             GJRR = 0.
             ECCR = 0.
C END JULY 2006
C            end of (ISOGRD.EQ.0.AND.ISTIF(1).NE.0
C                  .AND.ISTIF(1).NE.4.AND.ISTIF(1).NE.5) condition 
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEGIN TEMPORARY RING SECTION "ISOGRD and ISTIF(2)" SECTION...
C This "ISOGRD and ISTIF(2)" section is taken from general buckling...
C BEG JULY 2006 (decomment the following, that is, include the rings now...
             IF (ISOGRD.EQ.0.AND.ISTIF(2).NE.0.AND.ISTIF(2).NE.4
     1                                        .AND.ISTIF(2).NE.5) THEN
C  Discrete rings...
                NMRNGS = 2
                ADDEA = (CY(1,1,2) - CY(1,1,1))*B2(2)
                IF (IZSTIF(2).EQ.1) ADDEA = 0.0
                EAR  = STFL2*B(2) + ADDEA
                EIYR = STFIY2
                GJRR = STORS2*B(2)
                ECCR = STFM2/STFL2
                EIXR = (STMM2-STFL2*ECCR**2)*B(2)
                FNXRNG(1) = (RESLTR(1)-RPRER(1))*HH(2)
                FNXRNG(2) = (RESLTR(2)-RPRER(2))*WW(2)
                IF (IBLADE(2).EQ.1) THEN
                   FNXRNG(1) = 0.
                   FNXRNG(2) = 0.
                   IF (NNPRT.GE.2) WRITE(IFILE,'(A)')
     1         ' Ring eig.prestress set to zero because IBLADE(2)=1'
                ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
                FX0RNG(1) = RPRER(1)*HH(2)
                FX0RNG(2) = RPRER(2)*WW(2)
                ZNXRNG(1) = -ZPARTY(3)
                ZNXRNG(2) = -ZPARTY(4)
                IF (IFLAT.EQ.0.AND.R.LT.0.) THEN
                   ECCR = -ECCR
                   ZNXRNG(1) = -ZNXRNG(1)
                   ZNXRNG(2) = -ZNXRNG(2)
                ENDIF
                SPRNG = B(2)
 
                IF (NNPRT.GE.2) THEN
                   WRITE(IFILE,'(A,/,1P,7E11.3)')
     1      ' Discrete rings:     EAR,EIXR,EIYR,GJRR,ECCR,SPRNG,XLONG=',
     1                            EAR,EIXR,EIYR,GJRR,ECCR,SPRNG,XLONG
                   WRITE(IFILE,'(A,A,/,1P,6E12.4)')
     1   ' Preload in web: HH(2),RESLTR(1)-RPRER(1),RPRER(1),FNXRNG(1)',
     1           ',FX0RNG(1),ZNXRNG(1)=',
     1            HH(2),RESLTR(1)-RPRER(1),RPRER(1),FNXRNG(1),FX0RNG(1),
     1            ZNXRNG(1)
                   WRITE(IFILE,'(A,A,/,1P,6E12.4)')
     1  ' Preload in flng: WW(2),RESLTR(2)-RPRER(2),RPRER(2),FNXRNG(2)',
     1           ',FX0RNG(2),ZNXRNG(2)=',
     1            WW(2),RESLTR(2)-RPRER(2),RPRER(2),FNXRNG(2),FX0RNG(2),
     1            ZNXRNG(2)
                ENDIF
             ENDIF
C END JULY 2006  (many lines above decommented so that rings are included now)
C END OF TEMPORARY RING "ISOGRD and ISTIF(2)" SECTION.
C END JAN 2006
            ENDIF
C           end of (IFLAT.EQ.0) condition
            IF (IDISCS.EQ.1) THEN
               IF (IDESGN.EQ.0) IDISC1 = 1
               CALL MOVER(CX(1,1,1),1,CSGEN,1,36)
               FNXSSA = PNX
               FNYSSA = PNY
C BEG FEB 2007 (comment out the next statement)
C              IF (FNYAVE.NE.0.0) FNYSSA = FNYAVE
C END FEB 2007
               FNXYSS = PNXY
               FNXSPR = RSKNXP
               FNYSPR = RSKNYP
               IF (FNYAVB.NE.0.0) FNYSPR = FNYAVB
               IF (NNPRT.GE.2) WRITE(IFILE,'(A,/,1P,5E12.4)')
     1       ' FNXSSA,FNYSSA,FNXYSS,FNXSPR,FNYSPR=',
     1         FNXSSA,FNYSSA,FNXYSS,FNXSPR,FNYSPR
            ENDIF
C
C23456789012345678901234567890123456789012345678901234567890123456789012
            TX5 = TX(1)
            TY5 = TX(1)
C BEG JAN 2005
            IF (KLAYER(1,1).NE.0) THEN
               TX5 = TXXX(2,1)
               TY5 = TXXX(2,1)
            ENDIF
C END JAN 2005
            IF (ISOGRD.EQ.1) THEN
               TX5 = TEFF(1)
               TY5 = TEFF(1)
            ENDIF
            IF (IQUICK.EQ.0)
     1      CALL ALTSOL(XLONGS,YLONGS,ABS(R),CSGEN,FNXSSA,FNYSSA,FNXYSS,
     1      FNXSPR,FNYSPR,0.,NNPRT,IFLAT,MSS,NSSF,CSSS,EIGSS,
     1      ISAND,IREDUC,EIGSSZ,TEFF(1),TX5,GTX(1,5),IFILE,MWAVEX(3),
     1      EIGMNC(3),ILABEL,IQUICK,SPSTRS,SPRNGS,
C BEG JAN 2006
C BEG JULY 2006 (toggle for non-zero rings)
C    1      EAS,EIXS,EIYS,GJSS,ECCS,0.,0.,0.,0.,0.,
     1      EAS,EIXS,EIYS,GJSS,ECCS,EAR,EIXR,EIYR,GJRR,ECCR,
C END JULY 2006
C END JAN 2006
     1      FNXSTR,FX0STR,ZNXSTR,FNXRNG,FX0RNG,ZNXRNG,IDISCS,IDESGN,3,
     1      NMSTRS,NMRNGS,ASPSVW,ASPSVZ,ISIGNS,ISSSRX,
     1      GTX(1,5),TY5,ISTIF(2),MWHIGH(3),ICASE,KLAYER(1,1))
            IF (IDESGN.EQ.0) THEN
               FLTSL8 = 0.
               IF (EIGSSZ.LT.10.E+15.AND.ILABEL.NE.9140) FLTSL8 = 1.0
               EIGRT8 = 1.0
               EIGMR8 = 1.0
               EIGSX0 = EIGSSZ
               IF (ISIGNS.EQ.1) EIGLX3 = EIGSSZ
            ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
       ENDIF
C END INTER-RING ALTERNATE (trig. series expansion) buckling section,
C     except for recording the margin, which is next.
C
C BEG JAN 2007 (comment out the next two lines and modify the second line)
C      IF (ISTIF(1).LE.3.AND.ISTIF(2).LE.3.AND.
C    1      (ILABEL.EQ.9260.OR.ILABEL.EQ.9280).AND.IALTSV.EQ.1) THEN
       IF ( (ILABEL.EQ.9260.OR.ILABEL.EQ.9280).AND.IALTSV.EQ.1) THEN
C END JAN 2007
            DENFCT = 1.0
            IF (EIG8X.GT.0.0.AND.EIG8X.LT.1.0) DENFCT = EIG8X*FMDKD8
C23456789012345678901234567890123456789012345678901234567890123456789012
            IF (NNPRT.GE.2
     1              .AND.(ILABEL.EQ.9260.OR.ILABEL.EQ.9280)) THEN
               WRITE(IFILE,'(/,A,/,
     1 A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4/,A,1P,E12.4)')
     1' Inter-ring buckling load factor before and after knockdown:',
     1' EIGSSZ(before knockdown by 2 factors below)        =',EIGSSZ,
     1' Knockdown factor from modal imperfection(s)        =',FKNOCK(8),
     1' 1st modifying factor(no smeared stringer knockdown)=',FKNMLS,
     1' 2nd modifyng factor, 1/DENFCT=1 or 1/(EIG8X*FMDKD8)=',1./DENFCT,
     1' After knockdown, EIGSSZ*FKNOCK(8)*FKNMLS/DENFCT           =',
     1                   EIGSSZ*FKNOCK(8)*FKNMLS/DENFCT
        WRITE(IFILE,'(A,/,A,1P,E12.4,/,A,/,A,/,A,1P,E12.4)')
     1' in which',
     1' EIG8X  = lambda(ARBOCZ)/lambda(original PANDA-type theory)=',
     1  EIG8X,
     1'       lambda(ARBOCZ)=perfect panel buckling from ARBOCZ theory',
     1'       lambda(PANDA) =perfect panel buckling from PANDA  theory',
     1' FMDKD8 = 1 or 0.9/EIG8X =',FMDKD8
            ENDIF
C
            IF (ICASE.EQ.1.AND.EIGSSZ.GT.0.0)
     1      CALL RECORD(0,3,EIGSSZ*FKNOCK(8)*FKNMLS/DENFCT,CSSS,MSS,
     1      NSSF,ICONST,CONSTR,WORDB,IFILE,IDESGN,JJJ,LENMOD,EIGMAX,
C BEG JAN 2007
C    1      IPOINC,INUMTT,FSGEN,ICASE,0,0,VINHOF,MORCON(ILOADS,ICASE),
     1      IPOINC,INUMTT,FSPAN,ICASE,0,0,VINHOF,MORCON(ILOADS,ICASE),
C END JAN 2007
C BEG SEP 2004
     1       ENDMID,1,3,0)
C END SEP 2004
C BEG FEB 2007
             IF (ITYPE.EQ.1.AND.NNPRT.GE.2)
     1       WRITE(IFILE,*)' AFTER RECORD10: IDESGN,INUMTT,ICONST=',
     1                                       IDESGN,INUMTT,ICONST
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2007
C
            IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 2222
C BEG OCT 2004
            IF (IDESGN.EQ.0.AND.ILABEL.EQ.9260) THEN
               EALTER(3) = EIGSSZ
               IDISCR(3) = IDISCS
               NUMBST(3) = NMSTRS
               NUMBRG(3) = NMRNGS 
               ASPECT(3,1) = ASPSVW
               ASPECT(3,2) = ASPSVZ
               ISIGNA(3) = ISIGNS
               IALTER(3) = ISSSRX
             ENDIF
C END OCT 2004
       ENDIF
C End of inter-ring alternate buckling section.
C END NOV 2003
C
       IF (ISOGRD.EQ.1) GO TO 10
C***************************************************************
C END SECTION IN WHICH STRINGERS ARE SMEARED OUT AND WE ARE
C CONCERNED WITH BUCKLING BETWEEN RINGS (CALLED "PANEL" INSTABILITY.
C***************************************************************
C
      ENDIF
C END OF THE LONG "BOVRW2(2)" SECTION.
C
C*******************************************************************
C BEGIN SECTION IN WHICH RINGS ARE SMEARED OUT AND WE ARE
C CONCERNED WITH BUCKLING BETWEEN STRINGERS (ALSO "PANEL" INSTABILITY)
C********************************************************************
C     
C  SMEARED RINGS, BUCKLING BETWEEN STRINGERS...
C
      IF (BOVRW2(1).GT.3.0.AND.IQUICK.EQ.1) THEN
C BEG OCT 1998
        IF (NNPRT.GE.2) WRITE(IFILE,'(/,A,1P,E12.4)')
     1' Buckling between stringers with smeared rings, C11=',CY(1,1,5)
C END OCT 1998
        IARGFL = 0
        IF (IFLAT.NE.0) IARGFL = 1
        CALL GENSTB(4,LENMOD*ABIG,B0,PNX,NY0,NXY0,RSKNXP,NYPRE,MSR,NSR,   
     1   TESTSR,CSR,EIGSR,IDESGN,EIG1,CY(1,1,5),TX(1),TEFF(2),GTY(1,5), 
     1   IREDUC,0,IFILE,ITUTOR,JJJ,ISTIF,RESLTS,RPRES,1,10.E10,0.,
     1   FFLAT(4,MIDEND,1),IARGFL,1,IAGAIN(4,MIDEND),FNEFF(4,MIDEND),
     1   7155,EIGRAT(4),RBB0(4),ILOADS,ICASE)
C BEG FEB 1996
        IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
C
        IF (IAGAIN(4,MIDEND).NE.0) THEN
           CALL GENSTB(4,LENMOD*ABIG,B0,PNX,NY0,NXY0,RSKNXP,NYPRE,
     1           M2ND(4,MIDEND),N2ND(4,MIDEND),TST2ND(4,MIDEND),
     1           SLP2ND(4,MIDEND),EIG2ND(4,MIDEND),
     1           IDESGN,EIG1,CY(1,1,5),TX(1),TEFF(2),GTY(1,5),
     1           IREDUC,0,IFILE,ITUTOR,JJJ,ISTIF,RESLTS,RPRES,1,
     1           10.E10,0.,FFLAT(4,MIDEND,2),IARGFL,
     1           2,IAGAIN(4,MIDEND),FNEFF(4,MIDEND),7160,EIGRAT(4),
     1           RBB0(4),ILOADS,ICASE)
C BEG FEB 1996
           IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
C
            CALL WGTAVE(PNX+RSKNXP,NY0+NYPRE,NXY0,
     1                  EIG2ND(4,MIDEND),EIGSR,IAGAIN(4,MIDEND))
        ENDIF
        CSRR = CSR
        IF (TESTSR.LT.1.0.AND.ABS(CSR).GT.0.0) CSRR=1./CSR
        CALL RECORD(0,4,EIGSR,CSRR,MSR,NSR,ICONST,CONSTR,WORDB,
     1       IFILE,IDESGN,JJJ,LENMOD,EIGMAX,IPOINC,INUMTT,FSLOC,
C BEG OCT 1996
     1       ICASE,0,0,VINHOF,MORCON(ILOADS,ICASE),ENDMID,0,0,0)
C BEG FEB 2007
        IF (ITYPE.EQ.1.AND.NNPRT.GE.2)
     1  WRITE(IFILE,*)' AFTER RECORD11: IDESGN,INUMTT,ICONST=',
     1                                  IDESGN,INUMTT,ICONST
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2007
        IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 2222
C END OCT 1996
      ENDIF
C
C*******************************************************************
C END SECTION IN WHICH RINGS ARE SMEARED OUT AND WE ARE
C CONCERNED WITH BUCKLING BETWEEN STRINGERS (ALSO "PANEL" INSTABILITY)
C********************************************************************
C     
C     
   10 CONTINUE    
C
C*******************************************************************
C BEGIN GENERAL INSTABILITY SECTION
C*******************************************************************
C     
C  GENERAL INSTABILITY...
C
C BEG DEC 2001
      SHRFCT = 1.0
C END DEC 2001
C BEG JUN 1996
      EFOUND = 0.
      IF (ISANDW(1,1).EQ.1.OR.ISANDW(1,1).EQ.NLAYER(1,1))
     1 EFOUND = WFOUND(1,1)
C END JUN 1996
      FXYMLT = 1.0
      BBBG = BBIG
      RSAVE = R
      FACWID= 1.0
      IARGFL = 0
      IF (IFLAT.NE.0) IARGFL = 1
      IF (IWIDE.EQ.1.AND.NPARTR.EQ.0) THEN
         IARGFL = 1
C BEG SEPT 1993
C BEG MAR 1996
         IF (IBEAM.EQ.1) BBBG = MAX(10.*ABIG,BBIG)
C END MAR 1996
C END SEPT 1993
         R = 10000.*SQRT(ABIG**2 +BBBG**2)
         FACWID = BBIG/BBBG
         IF (IPRELM.EQ.0) THEN
          IF (IDESGN.EQ.0.AND.CS(4,4).LT.20.*CS(5,5)) THEN
           IF (BBIG.LT.2.0*A0.OR.BBIG.GT.0.2*RSAVE) THEN
              WRITE(IFILE,*)' *********** NOTE  NOTE  NOTE  ***********'
              WRITE(IFILE,*)' WIDE-COLUMN MODEL MAY BE TOO CONSERVATIVE'
              WRITE(IFILE,*)' *********** NOTE  NOTE  NOTE  ***********'
           ENDIF
          ENDIF
         ENDIF
      ENDIF
      IF (IFLAT.EQ.0.AND.NPARTS.EQ.0.AND.NPARTR.EQ.0
     1                 .AND.IWIDE.EQ.0) THEN
         R = RADMOD
C BEG SEPT 1993
         BBBG = BBIG
C        BBBG = BBIG/FNWAVX
C END SEPT 1993
         FACWID = BBIG/BBBG
      ENDIF           
      PARX1 = BBBG/B(1)
      PARX2 = ABS(1. -CX(4,4,1)/CS(4,4))
C   THIS BRANCH ADDED FOR CASE WHEN WE WANT TO CALCULATE AND RECORD
C   ONLY THE GENERAL INSTABILTIY LOAD FACTOR.
C
C BEG "IPRELM.EQ.3" SECTION...
      IF (IPRELM.EQ.3) THEN
C BEG "FSLOC" SECTION...
        IF (FSLOC.GE.0.95) THEN
C BEG OCT 1998
         IF (NNPRT.GE.2) WRITE(IFILE,'(/,A,1P,E12.4,A,1P,E12.4)')
     1 ' general buckling: smeared stiffeners, C11=',CS(1,1),
     1 ', radius, R=',R
C END OCT 1998
         CALL MFILL1(IDESGN,IRMOD,MARG,NARG,TARG,CARG,
     1               MLOCAL,NLOCAL,TLOCAL,CLOCL,
     1               MGEN,NGEN,TESTGL,CSLOPE)
         CALL GENSTB(2,LENMOD*ABIG,BBBG,NX0,NY0,    
     1          FXYMLT*NXY0,NXPRE,NYPRE,MARG,NARG,TARG,CARG,EIGGEN,
     1          IDESGN,EIG1,CS,TEFF(1),TEFF(2),GTS,IREDUC,0,IFILE,
     1          ITUTOR,JJJ,ISTIF,RESLTS,RPRES,1,PARX1,PARX2,
     1          FFLAT(13,MIDEND,1),IARGFL,1,IAGAIN(13,MIDEND),
     1          FNEFF(13,MIDEND),7165,EIGRAT(13),
     1          RBB0(13),ILOADS,ICASE)
C BEG NOV 2003
C        IF (IDESGN.EQ.0.AND.ILABLY.EQ.9150) EIGRTY(13) = EIGRAT(13)
C        IF (IDESGN.EQ.1.AND.ILABLY.EQ.9150) EIGRAT(13) = EIGRTY(13)
C END NOV 2003
C BEG FEB 1996
         IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
         CALL MFILL2(IDESGN,IRMOD,MARG,NARG,TARG,CARG,
     1               MGEN,NGEN,TESTGL,CSLOPE)
C
         IF (IAGAIN(13,MIDEND).NE.0) THEN
           CALL MFILL1(IDESGN,IRMOD,MARG,NARG,TARG,CARG,
     1                 MLOCAL,NLOCAL,TLOCAL,CLOCL,
     1                 M2ND(13,MIDEND),N2ND(13,MIDEND),
     1                 TST2ND(13,MIDEND),SLP2ND(13,MIDEND))
           CALL GENSTB(2,LENMOD*ABIG,BBBG,NX0,NY0,FXYMLT*NXY0,
     1           NXPRE,NYPRE,MARG,NARG,TARG,CARG,EIG2ND(13,MIDEND),
     1           IDESGN,EIG1,CS,TEFF(1),TEFF(2),GTS,
     1           IREDUC,0,IFILE,ITUTOR,JJJ,ISTIF,RESLTS,RPRES,1,
     1           PARX1,PARX2,FFLAT(13,MIDEND,2),IARGFL,
     1         2,IAGAIN(13,MIDEND),FNEFF(13,MIDEND),7170,EIGRAT(13),
     1           RBB0(13),ILOADS,ICASE)
C BEG FEB 1996
           IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
           CALL MFILL2(IDESGN,IRMOD,MARG,NARG,TARG,CARG,
     1                 M2ND(13,MIDEND),N2ND(13,MIDEND),
     1                 TST2ND(13,MIDEND),SLP2ND(13,MIDEND))
C
            CALL WGTAVE(NX0+NXPRE,NY0+NYPRE,FXYMLT*NXY0,
     1                  EIG2ND(13,MIDEND),EIGGEN,IAGAIN(13,MIDEND))
         ENDIF
        ELSE
C BEG OCT 1998
         IF (NNPRT.GE.2) WRITE(IFILE,'(/,A,1P,E12.4,A,1P,E12.4)')
     1 ' general buckling: smeared stiffeners, C11=',CSREDU(1,1),
     1 ', radius, R=',R
C END OCT 1998
         CALL MFILL1(IDESGN,IRMOD,MARG,NARG,TARG,CARG,
     1               MLOCAL,NLOCAL,TLOCAL,CLOCL,
     1               MGEN,NGEN,TESTGL,CSLOPE)
         CALL GENSTB(2,LENMOD*ABIG,BBBG,NX0,NY0,    
     1          FXYMLT*NXY0,NXPRE,NYPRE,MARG,NARG,TARG,CARG,EIGGEN,
     1          IDESGN,EIG1,CSREDU,TEFF(1),TEFF(2),GTS,IREDUC,0,IFILE,
     1          ITUTOR,JJJ,ISTIF,RESLTS,RPRES,1,PARX1,PARX2,
     1          FFLAT(13,MIDEND,1),IARGFL,1,IAGAIN(13,MIDEND),
     1          FNEFF(13,MIDEND),7175,EIGRAT(13),
     1          RBB0(13),ILOADS,ICASE)
C BEG FEB 1996
         IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
         CALL MFILL2(IDESGN,IRMOD,MARG,NARG,TARG,CARG,
     1               MGEN,NGEN,TESTGL,CSLOPE)
C
         IF (IAGAIN(13,MIDEND).NE.0) THEN
           CALL MFILL1(IDESGN,IRMOD,MARG,NARG,TARG,CARG,
     1                 MLOCAL,NLOCAL,TLOCAL,CLOCL,
     1                 M2ND(13,MIDEND),N2ND(13,MIDEND),
     1                 TST2ND(13,MIDEND),SLP2ND(13,MIDEND))
           CALL GENSTB(2,LENMOD*ABIG,BBBG,NX0,NY0,FXYMLT*NXY0,
     1           NXPRE,NYPRE,MARG,NARG,TARG,CARG,EIG2ND(13,MIDEND),
     1           IDESGN,EIG1,CSREDU,TEFF(1),TEFF(2),GTS,
     1           IREDUC,0,IFILE,ITUTOR,JJJ,ISTIF,RESLTS,RPRES,1,
     1           PARX1,PARX2,FFLAT(13,MIDEND,2),IARGFL,
     1         2,IAGAIN(13,MIDEND),FNEFF(13,MIDEND),7180,EIGRAT(13),
     1           RBB0(13),ILOADS,ICASE)
C BEG FEB 1996
           IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
           CALL MFILL2(IDESGN,IRMOD,MARG,NARG,TARG,CARG,
     1                 M2ND(13,MIDEND),N2ND(13,MIDEND),
     1                 TST2ND(13,MIDEND),SLP2ND(13,MIDEND))
C
           CALL WGTAVE(NX0+NXPRE,NY0+NYPRE,FXYMLT*NXY0,
     1                  EIG2ND(13,MIDEND),EIGGEN,IAGAIN(13,MIDEND))
         ENDIF
        ENDIF
C END "FSLOC" SECTION (still in "IPRELM.EQ.3" section).
C
         CSLGEN = CSLOPE
         NGENP = FLOAT(NGEN)*FACWID
C BEG DEC 1993
         IF (IDESGN.EQ.0.AND.IRMOD.NE.0) ICD9 = 1
C END DEC 1993
         IF (TESTGL.LT.1.0.AND.ABS(CSLOPE).GT.0.0) THEN
            CSLGEN=1./CSLOPE
C BEG DEC 1993
            IF (IDESGN.EQ.0.AND.IRMOD.NE.0) ICD9 = 2
C END DEC 1993
         ENDIF
         IF (IRMOD.NE.0) THEN
C BEG JAN 1994
C BEG MAR 1998
            IF (IEIGMD.EQ.1.AND.NPARTS.NE.0.AND.IDESGN.EQ.0) THEN
              CALL EIGMOD(BBBG,FNEFF(13,MIDEND),B(1),EIGGEN,
     1        ITUTOR,IFILE,CX(4,4,1),CS(4,4),FSAFE2,NX0,NY0,NXY0,0,2)
              CALL EIGMOD(BBBG,FNEFF(13,MIDEND),B(1),EIGVLX,
     1        ITUTOR,IFILE,CX(4,4,1),CS(4,4),FSAFE2,NX0,NY0,NXY0,0,2)
            ENDIF
C END MAR 1998
C END JAN 1994
            EILOCL = EIGGEN
            IF (IDESGN.EQ.0) THEN
               MLOCAL = MGEN
C BEG MAR 1996
C              NLOCAL = NGENP
               NLOCAL = NGEN
C END MAR 1996
               CLOCL  = CSLGEN
               TLOCAL = TESTGL
            ENDIF
            R = RSAVE
            GO TO 500
         ENDIF
C BEG MAR 1998
         FKNMOD = 1.0
         IF (NGENP.EQ.0.AND.EIG9X.GT.0.0.AND.EIG9X.LT.1.0)
C BEG JUN 1998
     1      FKNMOD = 1./(EIG9X*FMDKD9)
C END JUN 1998
         IF (IPRELM.EQ.0.AND.IDESGN.EQ.0) 
     1      EIGAL0 =EIGGEN*FKNOCK(9)*FKNMOD
         IF (IPRELM.EQ.0.AND.IDESGN.EQ.1)
     1      EIGAL1 =EIGGEN*FKNOCK(9)*FKNMOD
C        IF (IDESGN.EQ.0) EIGAL0 =EIGGEN
C        IF (IDESGN.EQ.1) EIGAL1 =EIGGEN
C BEG OCT 1998
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG NOV 2003
         IF (NNPRT.GE.2.AND.ILABEL.GE.9260) THEN
C END NOV 2003
C BEG NOV 1999
                    WRITE(IFILE,'(/,A,/,
     1 A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4)')
     1' General buckling load factor before and after knockdown:',
     1' EIGGEN(before knockdown by 3 factors below)        =',EIGGEN,
     1' Knockdown factor from modal imperfection(s)        =',FKNOCK(9),
     1' Knockdown factor for smearing rings on cyl. shell  =',RNGKNK,
     1' Modifying factor, FKNMOD=1 or 1/(EIG9X*FMDKD9)     =',FKNMOD,
     1' After knockdown, EIGGEN*FKNOCK(9)*RNGKNK*FKNMOD    =',
     1                   EIGGEN*FKNOCK(9)*RNGKNK*FKNMOD
C END NOV 1999
        WRITE(IFILE,'(A,/,A,1P,E12.4,/,A,/,A,/,A,1P,E12.4)')
     1' in which',
     1' EIG9X  = lambda(ARBOCZ)/lambda(original PANDA-type theory)=',
     1  EIG9X,
     1'       lambda(ARBOCZ)=perfect panel buckling from ARBOCZ theory',
     1'       lambda(PANDA) =perfect panel buckling from PANDA  theory',
     1' FMDKD9 = 1 or 0.9/EIG9X =',FMDKD9
         ENDIF
C END OCT 1998
C BEG NOV 1999
         CALL RECORD(0,2,EIGGEN*RNGKNK*FKNOCK(9)*FKNMOD,CSLGEN,MGEN,
     1               NGENP,ICONST,CONSTR,WORDB,IFILE,IDESGN,JJJ,
     1               LENMOD,EIGMAX,IPOINC,INUMTT,FSGEN,ICASE,0,0,
     1               VINHOF,MORCON(ILOADS,ICASE),ENDMID,0,0,0)
C END NOV 1999
C BEG FEB 2007
         IF (ITYPE.EQ.1.AND.NNPRT.GE.2)
     1   WRITE(IFILE,*)' AFTER RECORD12: IDESGN,INUMTT,ICONST=',
     1                                   IDESGN,INUMTT,ICONST
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2007
C BEG JUNE 1998
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG OCT 1998
         IF (IFLAT.EQ.0.AND.IPRELM.EQ.0.AND.IDESGN.EQ.0.AND.ICASE.EQ.1
C END OCT 1998
     1                 .AND.ISTIF(2).EQ.0) THEN
            IF (ISTIF(1).EQ.0) MCASL1 = MGEN
            IF (ISTIF(1).NE.0) MCASS1 = MGEN
         ENDIF
C END JUNE 1998
         IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 2222
C END OCT 1996
         R = RSAVE
         GO TO 500
      ENDIF
C END "IPRELM.EQ.3" SECTION.
C BEG "IPRELM.NE.1" SECTION...
      IF (IPRELM.NE.1) THEN
C BEG "FSLOC" SECTION...
         IF (FSLOC.GE.0.95) THEN
C BEG OCT 1998
            IF (NNPRT.GE.2) WRITE(IFILE,'(/,A,1P,E12.4,A,1P,E12.4)')
     1    ' general buckling: smeared stiffeners, C11=',CS(1,1),
     1    ', radius, R=',R
C END OCT 1998
C BEG MAR 2009
C   Doing this did not make a significant difference in the
C   general buckling load factor of a truss-core sandwich,
C   that is, ISTIF(1) = 5. Therefore, we did not keep this change.
C   (additional change: the next "CALL GENSTB" had CPROPR instead
C   of CS in the argument list. This was changed back to CS.)
C           CALL MOVER(CS,1,CPROPR,1,36)
C           IF (ISTIF(1).EQ.5) CALL CSHIFT(CS,DNEUTX,CPROPR)
C           IF (ISTIF(1).EQ.5.AND.NNPRT.GE.2)
C    1                 CALL OUTCIJ(4,1,IFILE,CPROPR,TXDUM,ETHDUM)
C END MAR 2009
C BEG JAN 2006
C           IF (NNPRT.GE.0.AND.IDESGN.EQ.0.AND.ILABEL.EQ.9140
            IF (NNPRT.GE.1.AND.IDESGN.EQ.0.AND.ILABEL.EQ.9140
     1                                    .AND.IRMOD.EQ.0)
     1      WRITE(IFILE,'(A)')' at 9140 in STRIMP, 7185 in BUCPAN...'
C END JAN 2006
            CALL GENSTB(2,LENMOD*ABIG,BBBG,NX0,NY0,NXY0,
     1      NXPRE,NYPRE,MGEN,NGEN,TESTGL,CSLOPE,EIGGEN,
     1      IDESGN,EIG1,CS,TEFF(1),TEFF(2),GTS,IREDUC,0,IFILE,
     1      ITUTOR,JJJ,ISTIF,RESLTS,RPRES,1,PARX1,PARX2,
     1      FFLAT(2,MIDEND,1),IARGFL,1,IAGAIN(2,MIDEND),FNEFF(2,MIDEND),
     1      7185,EIGRAT(2),RBB0(2),ILOADS,ICASE)
C BEG AUG 2001
            IF (IDESGN.EQ.0.AND.ILABEL.EQ.9140) THEN
               MGENQQ = MGEN
               NGENQQ = NGEN
C BEG MAR 2005
               MGENQQ = MWAVEX(1)
               NGENQQ = NWAVEX(1)
C BEG AUG 2005
C BEG JAN 2007
               IF (NNPRT.GE.1) THEN
C END JAN 2007
               WRITE(IFILE,'(/,A)')
     1   ' At 9140 in STRUCT: General instability modes, PERFECT shell:'
               IF (ISAND.EQ.0) WRITE(IFILE,'(/,A,A)')
     1       ' Donnell theory is used for these buckling calculations',
     1       ' in this case.'
               IF (ISAND.EQ.1) WRITE(IFILE,'(/,A,A)')
     1       ' Sanders theory is used for these buckling calculations',
     1       ' in this case.'
               IF (ISAND.EQ.2) WRITE(IFILE,'(/,A,A)')
     1       ' Marlowe theory is used for these buckling calculations',
     1       ' in this case.'
C END AUG 2005
               WRITE(IFILE,'(A,1P,7E10.2)')' EIGMNC=',(EIGMNC(I),I=1,7)
               WRITE(IFILE,'(A,1P,7E10.2)')' SLOPEX=',(SLOPEX(I),I=1,7)
               WRITE(IFILE,'(A,1P,I5,6I10)')' MWAVEX=',(MWAVEX(I),I=1,7)
               WRITE(IFILE,'(A,1P,I5,6I10)')' NWAVEX=',(NWAVEX(I),I=1,7)
C23456789012345678901234567890123456789012345678901234567890123456789012
C END MAR 2005
C BEG JAN 2007
               ENDIF
C END JAN 2007
            ENDIF
C END AUG 2001
C BEG JAN 2007
            IF (IDESGN.EQ.0.AND.ILABEL.EQ.9260.AND.NNPRT.GE.0) THEN
               IF (ISAND.EQ.0) WRITE(IFILE,'(/,A,A)')
     1       ' Donnell theory is used for these buckling calculations',
     1       ' in this case.'
               IF (ISAND.EQ.1) WRITE(IFILE,'(/,A,A)')
     1       ' Sanders theory is used for these buckling calculations',
     1       ' in this case.'
               IF (ISAND.EQ.2) WRITE(IFILE,'(/,A,A)')
     1       ' Marlowe theory is used for these buckling calculations',
     1       ' in this case.'
               WRITE(IFILE,'(A,A)')
     1       ' General buckling load factors & mode shapes before any',
     1       ' knockdown factors applied:'
               WRITE(IFILE,'(A,1P,7E10.2)')' EIGMNC=',(EIGMNC(I),I=1,7)
               WRITE(IFILE,'(A,1P,7E10.2)')' SLOPEX=',(SLOPEX(I),I=1,7)
               WRITE(IFILE,'(A,1P,I5,6I10)')' MWAVEX=',(MWAVEX(I),I=1,7)
               WRITE(IFILE,'(A,1P,I5,6I10)')' NWAVEX=',(NWAVEX(I),I=1,7)
C BEG JUN 2007
               WRITE(IFILE,'(A,/,A,/,A,/,A)')
     1       ' NOTE: The buckling nodal line slopes, SLOPEX, are as',
     1       ' defined in Fig. 9a or Fig. 9b of the 1987 "Theoretical',
     1       ' basis of the PANDA...",if NWAVEX > 0; that is, there',
     1       ' has not yet been any inversion of SLOPEX when 9b holds.'
C END JUN 2007
C23456789012345678901234567890123456789012345678901234567890123456789012
            ENDIF
C END JAN 2007
C BEG FEB 1996
            IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
C
            IF (IAGAIN(2,MIDEND).NE.0) THEN
              CALL GENSTB(2,LENMOD*ABIG,BBBG,NX0,NY0,NXY0,
     1              NXPRE,NYPRE,
     1              M2ND(2,MIDEND),N2ND(2,MIDEND),TST2ND(2,MIDEND),
     1              SLP2ND(2,MIDEND),EIG2ND(2,MIDEND),
     1              IDESGN,EIG1,CS,TEFF(1),TEFF(2),GTS,
     1              IREDUC,0,IFILE,ITUTOR,JJJ,ISTIF,RESLTS,RPRES,1,
     1              PARX1,PARX2,FFLAT(2,MIDEND,2),IARGFL,
     1            2,IAGAIN(2,MIDEND),FNEFF(2,MIDEND),7190,EIGRAT(2),
     1              RBB0(2),ILOADS,ICASE)
C BEG FEB 1996
              IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
C
              CALL WGTAVE(NX0+NXPRE,NY0+NYPRE,NXY0,
     1                    EIG2ND(2,MIDEND),EIGGEN,IAGAIN(2,MIDEND))
            ENDIF
         ELSE
C BEG OCT 1998
            IF (NNPRT.GE.2) WRITE(IFILE,'(/,A,1P,E12.4,A,1P,E12.4)')
     1    ' general buckling: smeared stiffeners, C11=',CSREDU(1,1),
     1    ', radius, R=',R
C END OCT 1998
            CALL GENSTB(2,LENMOD*ABIG,BBBG,NX0,NY0,NXY0,
     1      NXPRE,NYPRE,MGEN,NGEN,TESTGL,CSLOPE,EIGGEN,
     1      IDESGN,EIG1,CSREDU,TEFF(1),TEFF(2),GTS,IREDUC,0,IFILE,
     1      ITUTOR,JJJ,ISTIF,RESLTS,RPRES,1,PARX1,PARX2,
     1      FFLAT(2,MIDEND,1),IARGFL,1,IAGAIN(2,MIDEND),FNEFF(2,MIDEND),
     1      7195,EIGRAT(2),RBB0(2),ILOADS,ICASE)
C BEG FEB 1996
            IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
C
            IF (IAGAIN(2,MIDEND).NE.0) THEN
              CALL GENSTB(2,LENMOD*ABIG,BBBG,NX0,NY0,NXY0,
     1              NXPRE,NYPRE,
     1              M2ND(2,MIDEND),N2ND(2,MIDEND),TST2ND(2,MIDEND),
     1              SLP2ND(2,MIDEND),EIG2ND(2,MIDEND),
     1              IDESGN,EIG1,CSREDU,TEFF(1),TEFF(2),GTS,
     1              IREDUC,0,IFILE,ITUTOR,JJJ,ISTIF,RESLTS,RPRES,1,
     1              PARX1,PARX2,FFLAT(2,MIDEND,2),IARGFL,
     1            2,IAGAIN(2,MIDEND),FNEFF(2,MIDEND),7200,EIGRAT(2),
     1              RBB0(2),ILOADS,ICASE)
C
              CALL WGTAVE(NX0+NXPRE,NY0+NYPRE,NXY0,
     1                    EIG2ND(2,MIDEND),EIGGEN,IAGAIN(2,MIDEND))
            ENDIF
         ENDIF
C END "FSLOC" SECTION (still in "IPRELM.NE.1" section)
         INEFF = 2
         FXYMLT = 1.
         NGENE  = NGEN
C BEG OCT 2004
C  store stuff for alternative solution.
         IF (IDESGN.EQ.0.AND.ILABEL.EQ.9260) THEN
            MPANDA(2) = MGEN
            NPANDA(2) = NGEN
            SPANDA(2) = CSLOPE
            EPANDA(2) = EIGGEN
            MPHIGH(2) = MWAVEX(3)
            EPHIGH(2) = EIGMNC(3)
         ENDIF
C END OCT 2004
C BEG AUG 1998
         IF (IDESGN.EQ.0.AND.IPRELM.EQ.0) EIGGX0 = 10.E+16
C END AUG 1998
C BEG JUN 1998
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG AUG 1998
         IF (IDESGN.EQ.0.AND.(ILABEL.EQ.9260.OR.ILABEL.EQ.9280).AND.
     1                             ISTIF(1).EQ.0.AND.ISTIF(2).EQ.0) THEN
            ISIGNG = 0
            IGENRX = 0
         ENDIF
C        IF (ICASE.EQ.1.AND.(IDESGN.EQ.0.OR.IDISC0.EQ.1).AND.
C BEG AUG 2003
C        IF (ICASE.EQ.1.AND.(IDESGN.EQ.0.OR.IDISC0.EQ.1.OR.
C    1           (ISTIF(1).EQ.0.AND.ISTIF(2).EQ.0.AND.ISIGNG.EQ.0)).AND.
C
C BEGIN GENERAL ALTERNATE (trig. series expansion)s BUCKLING SOLUTION...
         IF (ICASE.EQ.1.AND.(IDESGN.EQ.0.OR.IDISC0.EQ.1.OR.
     1           (ISTIF(1).EQ.0.AND.ISTIF(2).EQ.0.AND.ISIGNG.LE.1)).AND.
C END AUG 2003
C END AUG 1998
     1     (ILABEL.EQ.9260.OR.ILABEL.EQ.9280.OR.
     1      (ISTIF(1).EQ.0.AND.ISTIF(2).EQ.0
     1                      .AND.ILABEL.EQ.9140.AND.IQUICK.EQ.0))) THEN
C BEG NOV 2003
            EIGGNX = 0.
C END NOV 2003
C BEG AUG 1998
C BEG AUG 2003
C           IDISCT = 0
            IF (IDESGN.EQ.0) IDISCT = 0
C END AUG 2003
            SPSTR = 0.
            SPRNG = 0.
            XLONG = LENMOD*ABIG
            YLONG = BBBG
            IF (IDESGN.EQ.0) THEN
               NUMSTR = 0
               NUMRNG = 0
            ENDIF
            FNXGEN = NX0
            FNYGEN = NY0
            FNXYGN = NXY0
            FNXGPR = NXPRE
            FNYGPR = NYPRE
            CALL MOVER(CS,1,CSGEN,1,36)
C
C BEGIN "IFLAT.EQ.0" SECTION...
            IF (IFLAT.EQ.0) THEN
             IF (ISOGRD.EQ.0.AND.ISTIF(1).NE.0
C BEGIN "ISOGRD and ISTIF(1)" SECTION...
     1                      .AND.ISTIF(1).NE.4.AND.ISTIF(1).NE.5) THEN
C  Discrete stringers...
                ADDEA = (CX(1,1,2) - CX(1,1,1))*B2(1)
                IF (IZSTIF(1).EQ.1) ADDEA = 0.0
                EAS  = STFL1*B(1) + ADDEA
                EIYS = STFIY1
                GJSS  = STORS1*B(1)
                ECCS = ABS(STFM1/STFL1)
                EIXS = (STMM1-STFL1*ECCS**2)*B(1)
C BEG OCT 1998
                FNXSTR(1) = (RESLTS(1)-RPRES(1))*HH(1)
                FNXSTR(2) = (RESLTS(2)-RPRES(2))*WW(1)
C END OCT 1998
C BEG NOV 2003
                IF (IBLADE(1).EQ.1) THEN
                   FNXSTR(1) = 0.
                   FNXSTR(2) = 0.
                   IF (NNPRT.GE.2) WRITE(IFILE,'(A)')
     1         ' Stringer eig.prestress set to zero because IBLADE(1)=1'
                ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
C END NOV 2003
                FX0STR(1) = RPRES(1)*HH(1)
                FX0STR(2) = RPRES(2)*WW(1)
                ZNXSTR(1) = -ZPARTX(3)
                ZNXSTR(2) = -ZPARTX(4)
                IF (IFLAT.EQ.0.AND.R.LT.0.) THEN
                   ECCS = -ECCS
                   ZNXSTR(1) = -ZNXSTR(1)
                   ZNXSTR(2) = -ZNXSTR(2)
                ENDIF
                SPSTR = B(1)
                IDISCT = 1
                IF (IDESGN.EQ.0) THEN
C BEG FEB 2005
                 YMULT = 6.0
                 YLONG = YMULT*SPSTR
                 NUMSTR = 7
                 IF (YLONG.GT.1.1*BBBG) THEN
                  YMULT = 5.0
                  YLONG = YMULT*SPSTR
                  NUMSTR = 6
                  IF (YLONG.GT.1.1*BBBG) THEN
                   YMULT = 4.0
                   YLONG = YMULT*SPSTR
                   NUMSTR = 5
                   IF (YLONG.GT.1.1*BBBG) THEN
                    YMULT = 3.0
                    YLONG = YMULT*SPSTR
                    NUMSTR = 4
C END FEB 2005
                    IF (YLONG.GT.1.1*BBBG) THEN
                       YMULT = 2.0
                       YLONG = YMULT*SPSTR
                       NUMSTR = 3
                       IF (YLONG.GT.1.1*BBBG) THEN
                          YMULT = 1.0
                          YLONG = YMULT*SPSTR
                          NUMSTR = 2
                          IF (YLONG.GT.1.0001*BBBG) THEN
                             IDISCT = 0
                             YMULT = 0
                             YLONG = BBBG
                             NUMSTR = 0
                             SPSTR = 0.
                          ENDIF
                       ENDIF
                    ENDIF
C BEG FEB 2005
                   ENDIF
                  ENDIF
                 ENDIF
C END FEB 2005
                ELSE
                   IF (YMULT.LT.0.5) THEN
                      IDISCT = 0
                      YLONG = BBBG
                      SPSTR = 0.
                   ELSE
                      YLONG = YMULT*SPSTR
                   ENDIF
                ENDIF
                IF (NNPRT.GE.2) THEN
                   WRITE(IFILE,'(A,/,1P,7E11.3)')
     1      ' Discrete stringers: EAS,EIXS,EIYS,GJSS,ECCS,SPSTR,YLONG=',
     1                            EAS,EIXS,EIYS,GJSS,ECCS,SPSTR,YLONG
                   WRITE(IFILE,'(A,A,/,1P,6E12.4)')
C BEG OCT 1998
     1   ' Preload in web: HH(1),RESLTS(1)-RPRES(1),RPRES(1),FNXSTR(1)',
     1           ',FX0STR(1),ZNXSTR(1)=',
     1            HH(1),RESLTS(1)-RPRES(1),RPRES(1),FNXSTR(1),FX0STR(1),
     1            ZNXSTR(1)
                   WRITE(IFILE,'(A,A,/,1P,6E12.4)')
     1  ' Preload in flng: WW(1),RESLTS(2)-RPRES(2),RPRES(2),FNXSTR(2)',
     1           ',FX0STR(2),ZNXSTR(2)=',
     1            WW(1),RESLTS(2)-RPRES(2),RPRES(2),FNXSTR(2),FX0STR(2),
     1            ZNXSTR(2)
C END OCT 1998
                ENDIF
             ENDIF
C END "ISOGRD and ISTIF(1)" SECTION.
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEGIN "ISOGRD and ISTIF(2)" SECTION...
             IF (ISOGRD.EQ.0.AND.ISTIF(2).NE.0.AND.ISTIF(2).NE.4
     1                                        .AND.ISTIF(2).NE.5) THEN
C  Discrete rings...
                ADDEA = (CY(1,1,2) - CY(1,1,1))*B2(2)
                IF (IZSTIF(2).EQ.1) ADDEA = 0.0
                EAR  = STFL2*B(2) + ADDEA
                EIYR = STFIY2
                GJRR = STORS2*B(2)
                ECCR = STFM2/STFL2
                EIXR = (STMM2-STFL2*ECCR**2)*B(2)
C BEG OCT 1998
                FNXRNG(1) = (RESLTR(1)-RPRER(1))*HH(2)
                FNXRNG(2) = (RESLTR(2)-RPRER(2))*WW(2)
C END OCT 1998
C BEG NOV 2003
                IF (IBLADE(2).EQ.1) THEN
                   FNXRNG(1) = 0.
                   FNXRNG(2) = 0.
                   IF (NNPRT.GE.2) WRITE(IFILE,'(A)')
     1         ' Ring eig.prestress set to zero because IBLADE(2)=1'
                ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
C END NOV 2003
                FX0RNG(1) = RPRER(1)*HH(2)
                FX0RNG(2) = RPRER(2)*WW(2)
                ZNXRNG(1) = -ZPARTY(3)
                ZNXRNG(2) = -ZPARTY(4)
                IF (IFLAT.EQ.0.AND.R.LT.0.) THEN
                   ECCR = -ECCR
                   ZNXRNG(1) = -ZNXRNG(1)
                   ZNXRNG(2) = -ZNXRNG(2)
                ENDIF
                SPRNG = B(2)
                IF (IDESGN.EQ.0) THEN
C BEG FEB 2005
                  XMULT = 5.0
                  XLONG = XMULT*SPRNG
                  NUMRNG = 6
                  IF (XLONG.GT.1.1*LENMOD*ABIG) THEN
                   XMULT = 4.0
                   XLONG = XMULT*SPRNG
                   NUMRNG = 5
                   IF (XLONG.GT.1.1*LENMOD*ABIG) THEN
                    XMULT = 3.0
                    XLONG = XMULT*SPRNG
                    NUMRNG = 4
C END FEB 2005
                    IF (XLONG.GT.1.1*LENMOD*ABIG) THEN
                      XMULT = 2.0
                      XLONG = XMULT*SPRNG
                      NUMRNG = 3
                      IF (XLONG.GT.1.1*LENMOD*ABIG) THEN
                         XMULT = 1.0
                         XLONG = XMULT*SPRNG
                         NUMRNG = 2
                         IF (XLONG.GT.1.0001*LENMOD*ABIG) THEN
                            XMULT = 0.
                            XLONG = LENMOD*ABIG
                            NUMRNG = 0
                            SPRNG = 0.
                         ELSE
                            IDISCT = 1
                         ENDIF
                      ELSE
                         IDISCT = 1
                      ENDIF
C BEG FEB 2005
                    ELSE
                      IDISCT = 1
                    ENDIF
                   ELSE
                    IDISCT = 1
                   ENDIF
                  ELSE
                   IDISCT = 1
                  ENDIF
C END FEB 2005
                ELSE
                   IF (XMULT.LT.0.5) THEN
                      XLONG = LENMOD*ABIG
                      SPRNG = 0.
                   ELSE
                      XLONG = XMULT*SPRNG
                   ENDIF
                ENDIF
                IF (NNPRT.GE.2) THEN
                   WRITE(IFILE,'(A,/,1P,7E11.3)')
     1      ' Discrete rings:     EAR,EIXR,EIYR,GJRR,ECCR,SPRNG,XLONG=',
     1                            EAR,EIXR,EIYR,GJRR,ECCR,SPRNG,XLONG
                   WRITE(IFILE,'(A,A,/,1P,6E12.4)')
C BEG OCT 1998
     1   ' Preload in web: HH(2),RESLTR(1)-RPRER(1),RPRER(1),FNXRNG(1)',
     1           ',FX0RNG(1),ZNXRNG(1)=',
     1            HH(2),RESLTR(1)-RPRER(1),RPRER(1),FNXRNG(1),FX0RNG(1),
     1            ZNXRNG(1)
                   WRITE(IFILE,'(A,A,/,1P,6E12.4)')
     1  ' Preload in flng: WW(2),RESLTR(2)-RPRER(2),RPRER(2),FNXRNG(2)',
     1           ',FX0RNG(2),ZNXRNG(2)=',
     1            WW(2),RESLTR(2)-RPRER(2),RPRER(2),FNXRNG(2),FX0RNG(2),
     1            ZNXRNG(2)
C END OCT 1998
                ENDIF
             ENDIF
C END "ISOGRD and ISTIF(2)" SECTION.
            ENDIF
C END "IFLAT.EQ.0" SECTION. (Still in general alternate buckling branch 
C                            and still in "IPRELM.NE.1" section.)
            IF (IDISCT.EQ.1) THEN
               IF (IDESGN.EQ.0) IDISC0 = 1
               CALL MOVER(CX(1,1,1),1,CSGEN,1,36)
               FNXGEN = PNX
               FNYGEN = PNY
C BEG FEB 2007 (comment out the following)
C              IF (FNYAVE.NE.0.0) FNYGEN = FNYAVE
C END FEB 2007
               FNXYGN = PNXY
               FNXGPR = RSKNXP
               FNYGPR = RSKNYP
C BEG JAN 2007
               IF (ISTIF(1).EQ.4.OR.ISTIF(1).EQ.5) THEN
                  CALL MOVER(CX(1,1,5),1,CSGEN,1,36)
                  FNXGEN = NX0
                  FNXGPR = NXPRE
               ENDIF
C END JAN 2007
C BEG OCT 1998
               IF (FNYAVB.NE.0.0) FNYGPR = FNYAVB
C END OCT 1998
               IF (NNPRT.GE.2) WRITE(IFILE,'(A,/,1P,5E12.4)')
     1       ' FNXGEN,FNYGEN,FNXYGN,FNXGPR,FNYGPR=',
     1         FNXGEN,FNYGEN,FNXYGN,FNXGPR,FNYGPR
            ENDIF
C END AUG 1998
C BEG NOV 2003
            TY5 = TX(1)
            IF (ISOGRD.EQ.1) TY5 = TEFF(1)
            IF (ISTIF(1).EQ.0.OR.IQUICK.EQ.0)
     1      CALL ALTSOL(XLONG,YLONG,ABS(R),CSGEN,FNXGEN,FNYGEN,FNXYGN,
C END NOV 2003
     1      FNXGPR,FNYGPR,0.,NNPRT,IFLAT,MGEN,NGEN,CSLOPE,EIGGEN,
     1      ISAND,IREDUC,EIGGNX,TEFF(1),TEFF(2),GTS,IFILE,MWAVEX(3),
     1      EIGMNC(3),ILABEL,IQUICK,SPSTR,SPRNG,
     1      EAS,EIXS,EIYS,GJSS,ECCS,EAR,EIXR,EIYR,GJRR,ECCR,
     1      FNXSTR,FX0STR,ZNXSTR,FNXRNG,FX0RNG,ZNXRNG,IDISCT,IDESGN,2,
     1      NUMSTR,NUMRNG,ASPSVX,ASPSVY,ISIGNG,IGENRX,
     1      GTX(1,5),TY5,ISTIF(2),MWHIGH(2),ICASE,KLAYER(1,1))
C BEG AUG 1998
            IF (IDESGN.EQ.0) THEN
               FLTSL9 = 0.
               IF (EIGGNX.LT.10.E+15.AND.ILABEL.NE.9140) FLTSL9 = 1.0
               EIGRT9 = 1.0
               EIGMR9 = 1.0
               EIGGX0 = EIGGNX
               IF (ABS(EIGGNX).LT.10.E+15.AND.ISTIF(1).EQ.0
     1             .AND.ISTIF(2).EQ.0) EIGRT9 = ABS(EIGGNX/EIGGEN)
               IF (EIGRT9.GT.10.0.OR.EIGRT9.LT.0.1) THEN
C BEG NOV 2003
C BEG DEC 2004
                IF (EIGGNX.GT.0.0)
     1       WRITE(IFILE,'(A,/,A,/,A,/,A,1P,E12.4,/,A,1P,E12.4,/,A)')
C END NOV 2003
     1       ' **** WARNING *** WARNING *** WARNING *** WARNING ***',
     1       ' Peculiar ratio of eigenvalues from (alt./old) theory',
     1       ' for "patch" general buckling model:',
     1       ' General buckling load factor from old  theory=',EIGGEN,
     1       ' General buckling load factor from alt. theory=',EIGGNX,
     1       ' **** WARNING *** WARNING *** WARNING *** WARNING ***'
C END DEC 2004
                EIGRT9 = 1.0
C BEG OCT 1998
                IF (EIGGNX.GT.10.*EIGGEN
     1                    .AND.ISTIF(1).EQ.0.AND.ISTIF(2).EQ.0) THEN
                   EIGGNX = EIGGEN
                   IALTSV = 0
                   IALTSN = 0
                ENDIF
C END OCT 1998
               ENDIF
C BEG AUG 1998
C              IF ((ILABEL.EQ.9260.OR.(ILABEL.EQ.9280.AND.IALTSV.NE.0))
C    1          .AND.ITYPE.EQ.1.AND.ISTIF(1).EQ.0.AND.ISTIF(2).EQ.0)
C    1          EIGMR9 = EIGRT9
               IF (IALTSV.EQ.1.AND.IGENRX.EQ.0.AND.
     1               (ILABEL.EQ.9260.OR.ILABEL.EQ.9280)) EIGMR9=EIGRT9
C END AUG 1998
               IF (NNPRT.GE.3) WRITE(IFILE,'(A,/,1P,4E12.4)')
     1       ' EIGRT9,EIGMR9,EIGGNX,EIGGEN=',EIGRT9,EIGMR9,EIGGNX,EIGGEN
               IF (ISIGNG.EQ.1) EIGLX2 = EIGGNX
            ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
C END AUG 1998
C BEG OCT 2004
            IF (IDESGN.EQ.0.AND.ILABEL.EQ.9260) THEN
               EALTER(2) = EIGGNX
               IDISCR(2) = IDISCT
               NUMBST(2) = NUMSTR
               NUMBRG(2) = NUMRNG
               ASPECT(2,1) = ASPSVX
               ASPECT(2,2) = ASPSVY
               ISIGNA(2) = ISIGNG
               IALTER(2) = IGENRX
             ENDIF
C END OCT 2004
         ENDIF
C END JUN 1998
C END OF GENERAL ALTERNATE (trig. series expansion)s BUCKLING SOLUTION.
C END OF "IPRELM.NE.1" SECTION
      ELSE
C BEGIN "IPRELM = 1" BRANCH...
C BEGIN "FSLOC" BRANCH...
         IF (FSLOC.GE.0.95) THEN
C BEG OCT 1998
            IF (NNPRT.GE.2) WRITE(IFILE,'(/,A,1P,E12.4,A,1P,E12.4)')
     1    ' general buckling: smeared stiffeners, C11=',CS(1,1),
     1    ', radius, R=',R
C END OCT 1998
            CALL GENSTB(2,LENMOD*ABIG,BBBG,NX0,NY0,1.000*NXY0,
     1      NXPRE,NYPRE,MGEN1,NGEN1,TSTGL1,CSLOP1,EIGGN1,
     1      IDESGN,EIG1,CS,TEFF(1),TEFF(2),GTS,IREDUC,0,IFILE,
     1      ITUTOR,JJJ,ISTIF,RESLTS,RPRES,1,PARX1,PARX2,
     1      FFLAT(14,MIDEND,1),IARGFL,1,IAGAIN(14,MIDEND),
     1      FNEFF(14,MIDEND),7205,EIGRAT(14),
     1      RBB0(14),ILOADS,ICASE)
C BEG FEB 1996
            IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
         ELSE
C BEG OCT 1998
            IF (NNPRT.GE.2) WRITE(IFILE,'(/,A,1P,E12.4,A,1P,E12.4)')
     1    ' general buckling: smeared stiffeners, C11=',CSREDU(1,1),
     1    ', radius, R=',R
C END OCT 1998
            CALL GENSTB(2,LENMOD*ABIG,BBBG,NX0,NY0,1.000*NXY0,
     1      NXPRE,NYPRE,MGEN1,NGEN1,TSTGL1,CSLOP1,EIGGN1,
     1      IDESGN,EIG1,CSREDU,TEFF(1),TEFF(2),GTS,IREDUC,0,IFILE,
     1      ITUTOR,JJJ,ISTIF,RESLTS,RPRES,1,PARX1,PARX2,
     1      FFLAT(14,MIDEND,1),IARGFL,1,IAGAIN(14,MIDEND),
     1      FNEFF(14,MIDEND),7210,EIGRAT(14),RBB0(14),ILOADS,ICASE)
C BEG FEB 1996
            IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
         ENDIF
C END "FSLOC" BRANCH.
         EIGGEN = EIGGN1
         FXYMLT = 1.000
         NGENE  = NGEN1
         INEFF = 14
      ENDIF
C END OF "IPRELM" BRANCH.
C
C BEG MAR 1998
      IF (IEIGMD.EQ.1.AND.NPARTS.NE.0.AND.IDESGN.EQ.0) THEN
C BEG OCT 1998
          EIGSSX = EIGGEN
C END OCT 1998
          CALL EIGMOD(BBBG,FNEFF(INEFF,MIDEND),B(1),EIGGEN,ITUTOR,
     1            IFILE,CX(4,4,1),CS(4,4),FSAFE2,NX0,NY0,NXY0,0,2)
C BEG OCT 1998
C BEG NOV 2003
C BEG JAN 2007
C         IF (NNPRT.GE.2.AND.ILABEL.GE.9260)
          IF (NNPRT.GE.0.AND.ILABEL.GE.9260)
     1       WRITE(IFILE,'(A)')
     1     ' General buckling loads AFTER knockdown for t.s.d.'
          IF (NNPRT.GE.0.AND.ILABEL.GE.9260)
C END JAN 2007
C END NOV 2003
C BEG OCT 2001
     1       WRITE(IFILE,'(A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4)')
     1' Number of circumferential halfwaves in buckling pattern=',
     1  FNEFF(INEFF,MIDEND),
C END OCT 2001
     1' Buckling load factor BEFORE knockdown for smeared stringers=',
     1  EIGSSX,
     1' Buckling load factor AFTER  knockdown for smeared stringers=',
     1  EIGGEN
C END OCT 1998
          CALL EIGMOD(BBBG,FNEFF(INEFF,MIDEND),B(1),EIGVLX,ITUTOR,
     1            IFILE,CX(4,4,1),CS(4,4),FSAFE2,NX0,NY0,NXY0,0,2)
      ENDIF
C END MAR 1998
C BEG JULY 2007
      IF (IEIGMD.EQ.1.AND.IDESGN.EQ.0.AND.NNPRT.GE.0.AND.NPARTS.EQ.0
     1               .AND.ILABEL.GE.9260) WRITE(IFILE,'(A,1P,E12.4)')
     1 ' General buckling load AFTER knockdown for t.s.d.',EIGGEN
C END JULY 2007
C BEG AUG 1998
      IF (IDESGN.EQ.0.AND.IPRELM.EQ.0) EIGGN0 = EIGGEN
      RATEIG = 1.0
C     IF (IDESGN.EQ.1.AND.IPRELM.EQ.0) THEN
C        RATEIG = EIGGEN/EIGGN0
C        EIGGNX = EIGGX0*RATEIG
C     ENDIF
C END AUG 1998
      IF (IPRELM.NE.1) THEN
         CSLGEN = CSLOPE
         IF (TESTGL.LT.1.0.AND.ABS(CSLOPE).GT.0.0) CSLGEN=1./CSLOPE
C BEG JAN 1994
         IF (IDONNL(2).EQ.0.AND.IPRELM.EQ.2.AND.IKNOCK.EQ.0) THEN
            R = RSAVE
            GO TO 500
         ENDIF
C END JAN 1994
      ENDIF
C
C BEG "NO STIFFENERS" BRANCH...
      IF (NPARTR.EQ.0.AND.NPARTS.EQ.0) THEN
         EILOCL = EIGGEN
         IF (IDESGN.EQ.0) THEN
            CLOCL = CSLOPE
            IF (TESTGL.LT.1.0.AND.ABS(CSLOPE).GT.0.0) CLOCL=1./CSLOPE
            MLOCAL = MGEN
C BEG MAR 1996
C           NLOCAL = NGEN*FACWID
            NLOCAL = NGEN
C END MAR 1996
            TLOCAL = TESTGL
         ENDIF
C BEGIN "IWARN.EQ.1" BRANCH...
         IF (IWARN.EQ.1) THEN
C           WRITE(8,*)' WE ARE IN THE IWARN = 1 BRANCH...'
            CALL GENSTB(2,LENMOD*ABIG,BBBG,NX0,NY0,-FXYMLT*NXY0,NXPRE,
     1     NYPRE,MSKINW,NSKINW,TSTLCW,CLOCW,ELOCW,IDESGN,EIG1,CX(1,1,1),
     1      TX(1),TX(1),GTX(1,1),IREDUC,0,IFILE,ITUTOR,JJJ,ISTIF,
     1      RESLTS,RPRES,1,10.E10,0.,FFLAT(11,MIDEND,1),IARGFL,
     1      1,IAGAIN(11,MIDEND),FNEFF(11,MIDEND),7215,EIGRAT(11),
     1      RBB0(11),ILOADS,ICASE)
C BEG FEB 1996
            IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
C
            IF (IAGAIN(11,MIDEND).NE.0) THEN
              CALL GENSTB(2,LENMOD*ABIG,BBBG,NX0,NY0,-FXYMLT*NXY0,
     1              NXPRE,NYPRE,
     1              M2ND(11,MIDEND),N2ND(11,MIDEND),TST2ND(11,MIDEND),
     1              SLP2ND(11,MIDEND),EIG2ND(11,MIDEND),
     1              IDESGN,EIG1,CX(1,1,1),TX(1),TX(1),GTX(1,1),
     1              IREDUC,0,IFILE,ITUTOR,JJJ,ISTIF,RESLTS,RPRES,1,
     1              10.E10,0.,FFLAT(11,MIDEND,2),IARGFL,
     1           2,IAGAIN(11,MIDEND),FNEFF(11,MIDEND),7220,EIGRAT(11),
     1              RBB0(11),ILOADS,ICASE)
C BEG FEB 1996
              IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
C
              CALL WGTAVE(NX0+NXPRE,NY0+NYPRE,FXYMLT*NXY0,
     1                    EIG2ND(11,MIDEND),ELOCW,IAGAIN(11,MIDEND))
            ENDIF
C
            IF (ABS(ELOCW).LT.ABS(EILOCL)) WRITE(IFILE,1002) -NXY0,
C BEG MAR 1996
     1      ELOCW,MSKINW,NSKINW,CLOCW,NXY0,EILOCL,MLOCAL,
     1      NLOCAL*FACWID,CLOCL
C END MAR 1996
         ENDIF
C END "IWARN.EQ.1" BRANCH.
         IF (IKNOCK.EQ.0.AND.IPRELM.EQ.2) THEN
           MSHEAR = MGEN
C BEG MAR 1996
           NSHEAR = NGEN*FACWID
C          NSHEAR = NGEN
C END MAR 1996
           R = RSAVE
           GO TO 500
         ENDIF
      ENDIF
C END "NO STIFFENERS" BRANCH.
C
      MSHEAR = MGEN
C BEG MAR 1996
      NSHEAR = NGEN*FACWID
C     NSHEAR = NGEN
C END MAR 1996
      IF (IPRELM.EQ.1) THEN
         FNGEN1 = NGEN1
C BEG MAR 1996
         FWIDPR = FNGEN1*FACWID
C        FWIDPR = FNGEN1
C END MAR 1996
         NWIDPR = FWIDPR
         FNWIDP = NWIDPR
         IF ((FWIDPR-FNWIDP).GT.0.5) NWIDPR = NWIDPR + 1
         R = RSAVE
         GO TO 500
      ENDIF
C     
C     WRITE(8,*)' EIGGEN,NX0,NY0,NXY0,IKNOCK=',EIGGEN,NX0,NY0,NXY0,
C    1            IKNOCK
C BEG "NX0.LT.0.0.OR.NY0.LT.0.0" BRANCH...
      IF (NX0.LT.0.0.OR.NY0.LT.0.0) THEN
C BEG "IKNOCK.EQ.1" BRANCH...
        IF (IKNOCK.EQ.1) THEN
            CLOC=0.
            TESTLL=10.
            MMM = MGEN
            NNN = NGEN
            IF (FFLAT(2,MIDEND,1).GT.0.5) IARGFL = 1
            IF (FSLOC.GE.0.95) THEN
C BEG OCT 1998
C23456789012345678901234567890123456789012345678901234567890123456789012
             IF (NNPRT.GE.2) WRITE(IFILE,'(/,A,1P,E12.4,A)')
     1     ' general buckling: smeared stiffeners, C11=',CSB(1,1),
     1     ', (No Nxy)'
C END OCT 1998
              CALL GENSTB(2,LENMOD*ABIG,BBBG,NX0,NY0,0.,NXPRE,NYPRE,
     1                MMM,NNN,TESTLL,CLOC,ENOSHR,IDESGN,EIG1,CSB,
     1                TEFF(1),TEFF(2),GTS,IREDUC,0,IFILE,ITUTOR,
     1                JJJ,ISTIF,RESLTS,RPRES,1,PARX1,PARX2,
     1                FFLAT(2,MIDEND,1),IARGFL,1,IAGAIN(2,MIDEND),
     1                FNEFF(2,MIDEND),7225,EIGRAT(2),
     1                RBB0(2),ILOADS,ICASE)
C BEG FEB 1996
              IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
            ELSE
C BEG OCT 1998
C23456789012345678901234567890123456789012345678901234567890123456789012
             IF (NNPRT.GE.2) WRITE(IFILE,'(/,A,1P,E12.4,A)')
     1     ' general buckling: smeared stiffeners, C11=',CSRB(1,1),
     1     ', (No Nxy)'
C END OCT 1998
              CALL GENSTB(2,LENMOD*ABIG,BBBG,NX0,NY0,0.,NXPRE,NYPRE,
     1                MMM,NNN,TESTLL,CLOC,ENOSHR,IDESGN,EIG1,CSRB,
     1                TEFF(1),TEFF(2),GTS,IREDUC,0,IFILE,ITUTOR,
     1                JJJ,ISTIF,RESLTS,RPRES,1,PARX1,PARX2,
     1                FFLAT(2,MIDEND,1),IARGFL,1,IAGAIN(2,MIDEND),
     1                FNEFF(2,MIDEND),7230,EIGRAT(2),
     1                RBB0(2),ILOADS,ICASE)
C BEG FEB 1996
              IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
            ENDIF
            IF (IEIGMD.EQ.1.AND.NPARTS.NE.0.AND.IDESGN.EQ.0) 
     1          CALL EIGMOD(BBBG,FNEFF(2,MIDEND),B(1),ENOSHR,ITUTOR,
     1                  IFILE,CX(4,4,1),CS(4,4),FSAFE2,NX0,NY0,0.,0,2)
            IF (ENOSHR.LT.1.E8) FKNOCK(1) = EIGGEN/ENOSHR
            MNOSHR = MMM
C BEG MAR 1996
            NNOSHR = NNN*FACWID
C           NNOSHR = NNN
C END MAR 1996
            IF (NPARTS.EQ.0.AND.NPARTR.EQ.0) THEN
               MLOCNS = MNOSHR
               NLOCNS = NNOSHR
               EIGNOS = ENOSHR
C BEG MAR 1996
               FNWNOS = NNN*FACWID
C              FNWNOS = NNN
C END MAR 1996
            ENDIF
C     WRITE(8,*)' ENOSHR,MMM,NNN,EIGGEN,FKNOCK(1)=',
C    1            ENOSHR,MMM,NNN,EIGLOC,FKNOCK(1)
            IF (FKNOCK(1).GT.1.0) FKNOCK(1) = 1.0
            IF (NPARTR.EQ.0) FKNOCK(4) = FKNOCK(1)
            R = RSAVE
            GO TO 410
        ENDIF
C END "IKNOCK.EQ.1" BRANCH.
      ENDIF
C END "NX0.LT.0.0.OR.NY0.LT.0.0" BRANCH.
      R = RSAVE
C
C     KSKINW = KOITER.NE.0.AND.ISKNN.EQ.0.AND.IWIDE.EQ.1.AND.NPARTR.EQ.0
C     IF (IGENRL.EQ.1.OR.KSKINW) THEN
C        IF (IDESGN.NE.0) GO TO 20
C        NGENF = NGEN*FACWID
C        IF (LENMOD.GT.0.99.AND.JJJ.EQ.0)
C    1        WRITE(IFILE,15) EIGGEN,MGEN,NGENF,CSLGEN
   15    FORMAT(   1PE24.5,3X,'buckling load factor simp-support general
     1 buck;M=',I3,'; N=',I3,'; slope=',1PE10.2)
C        IF (LENMOD.LT.0.99.AND.JJJ.EQ.0)
C    1        WRITE(IFILE,16) EIGGEN,MGEN,NGENF,CSLGEN
   16    FORMAT(   1PE24.5,3X,'buckling load factor    clamped   general
     1 buck;M=',I3,'; N=',I3,'; slope=',1PE10.2)
C        GO TO 20
C     ENDIF
C
      EIGGNN = EIGGEN
      NGENF  = NGEN*FACWID
C BEG MAR 1998
      FKNMOD = 1.0
C BEG JAN 2005 (comment out the following statement)
C     IF (NGENF.EQ.0.AND.EIG9X.GT.0.0.AND.EIG9X.LT.1.0)
C    1   FKNMOD = 1./(EIG9X*FMDKD9)
C END JAN 2005
C BEG JULY 1998
C BEG AUG 1998
C     IF (ITYPE.EQ.1.AND.EIG9X.GT.0.0.AND.EIG9X.LT.1.0.AND.
C     IF (               EIG9X.GT.0.0.AND.EIG9X.LT.1.0.AND.
C    1  FLTSL9.GT.0.0) FKNMOD = 1./(EIG9X*FMDKD9)
C END AUG 1998
C END JULY 1998
      IF (IPRELM.EQ.0.AND.IDESGN.EQ.0)
     1   EIGAL0 =EIGGEN*FKNOCK(9)*FKNMOD
      IF (IPRELM.EQ.0.AND.IDESGN.EQ.1)
     1   EIGAL1 =EIGGEN*FKNOCK(9)*FKNMOD
C END MAR 1998
C     IF (IPRELM.EQ.0.AND.IDESGN.EQ.0) EIGAL0 =EIGGEN
C     IF (IPRELM.EQ.0.AND.IDESGN.EQ.1) EIGAL1 =EIGGEN
C BEG NOV 1994
C BEGIN "IGENRL, etc." BRANCH...
      IF ((IGENRL.EQ.0.OR.IPRELM.NE.0).AND.
     1    (IGENX.NE.2.OR.ITYPE.GE.3)) THEN
C END NOV 1994
C BEG MAR 1998
C BEG JULY 1998
         IF (NNPRT.GE.3.AND.ITYPE.EQ.1) WRITE(IFILE,'(A,/,1P,4E12.4)')
     1     ' EIGGEN,FKNOCK(9),FKNMOD,EIGMR9=',
     1       EIGGEN,FKNOCK(9),FKNMOD,EIGMR9
C END JULY 1998
C BEG OCT 2004
         IF (ILABEL.GE.9260) THEN
            IF (ISTIF(2).EQ.0) SHRFCT = 1.0
            IF (ISTIF(2).EQ.3) SHRFCT = 1.0
            IF (RNGKNK.GE.0.900) SHRFCT = 1.0
            FMGEN = 1.0
            IF (MGEN.GT.0) FMGEN = FLOAT(MGEN)
            IF ((AXIAL/(ABS(RRRR)*FMGEN)).LT.3.) SHRFCT = 1.0
            WAVFAC = FLOAT(NGENF)*3.1415*ABS(RRRR)/CIRC + 0.5
            IWAVE = WAVFAC
            IF (IWAVE.GE.2*NGENNW) SHRFCT = 1.0
            FNORM=SQRT(FNX**2 + FNXY**2)
            IF (FNX.LT.0.0.AND.FNORM.GT.ABS(FNY)) SHRFCT = 1.0
            IF (NNPRT.GE.2) WRITE(IFILE,'(A,4I10)')
     1    ' MGEN,NGENF,IWAVE,NGENNW=',MGEN,NGENF,IWAVE,NGENNW
         ENDIF
C END OCT 2004
C BEG JUN 1998
C BEG AUG 1998
C BEG OCT 1998
C BEG MAR 2007
C BEGIN "IALTSV,etc" BRANCH...
C        IF (IALTSV.EQ.0.OR.ISTIF(1).NE.0
C    1                  .OR.ISTIF(2).NE.0.OR.IGENRX.EQ.1) THEN
C BEG JUN 2007
         IF (IALTSV.EQ.0.OR.ISTIF(1).NE.0
     1                  .OR.ISTIF(2).NE.0.OR.IGENRX.EQ.1
     1                  .OR.ITYPE.EQ.4.OR.ITYPE.EQ.5) THEN
C END JUN 2007
C END MAR 2007
C END AUG 1998
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG NOV 2003
C BEG JAN 2007
C         IF (NNPRT.GE.2.AND.ILABEL.GE.9260) THEN
          IF (NNPRT.GE.0.AND.ILABEL.GE.9260) THEN
C END JAN 2007
C END NOV 2003
C BEG NOV 1999
                    WRITE(IFILE,'(/,A,/,A,1P,E12.4,/,A,1P,E12.4,/,
     1 A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4)')
     1' General buckling load factor before and after knockdown:',
     1' EIGGEN(before modification by 5 factors below)     =',EIGGEN,
     1' Knockdown factor from modal imperfection(s)        =',FKNOCK(9),
     1' Knockdown factor for smearing rings on cyl. shell  =',RNGKNK,
C BEG DEC 2001
C BEG NOV 2003
     1' Knockup factor to avoid twice accounting for t.s.d.=',1./SHRFCT,
C END NOV 2003
C END DEC 2001
     1' 1st modifying factor, FKNMOD=1 or 1/(EIG9X*FMDKD9) =',FKNMOD,
     1' 2nd modifying factor, EIGMR9=1 or EIGGNX/EIGGEN    =',EIGMR9,
     1' After knockdn,EIGGEN*FKNOCK(9)*(RNGKNK/SHRFCT)*FKNMOD*EIGMR9=',
     1                EIGGEN*FKNOCK(9)*(RNGKNK/SHRFCT)*FKNMOD*EIGMR9
C END NOV 1999
        WRITE(IFILE,'(A,/,A,1P,E12.4,/,A,/,A,/,A,1P,E12.4/,A)')
     1' in which',
     1' EIG9X  = lambda(ARBOCZ)/lambda(original PANDA-type theory)=',
     1  EIG9X,
     1'       lambda(ARBOCZ)=perfect panel buckling from ARBOCZ theory',
     1'       lambda(PANDA) =perfect panel buckling from PANDA  theory',
     1' FMDKD9 = 1 or 0.9/EIG9X =',FMDKD9,
     1' EIGGNX = eigenvalue for perfect panel from alternate solution'
          ENDIF
C BEG NOV 1999
C BEG DEC 2001
          EIGINP = EIGGEN*FKNOCK(9)*(RNGKNK/SHRFCT)*FKNMOD*EIGMR9
C23456789012345678901234567890123456789012345678901234567890123456789012
          CALL RECORD(0,2,EIGINP,CSLGEN,
C END DEC 2001
     1                MGEN,NGENF,ICONST,CONSTR,WORDB,IFILE,IDESGN,JJJ,
     1                LENMOD,EIGMAX,IPOINC,INUMTT,FSGEN,ICASE,0,0,
     1                VINHOF,MORCON(ILOADS,ICASE),ENDMID,0,0,0)
C END NOV 1999
C BEG FEB 2007
          IF (ITYPE.EQ.1.AND.NNPRT.GE.2)
     1    WRITE(IFILE,*)' AFTER RECORD13: IDESGN,INUMTT,ICONST=',
     1                                    IDESGN,INUMTT,ICONST
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2007
         ENDIF
C END OCT 1998
C END "IALTSV,etc" BRANCH. (Still in "IGENRL,etc." branch)
C END MAR 1998
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG OCT 1998
         IF (IFLAT.EQ.0.AND.IPRELM.EQ.0.AND.IDESGN.EQ.0.AND.ICASE.EQ.1
C END OCT 1998
     1                 .AND.ISTIF(2).EQ.0) THEN
            IF (ISTIF(1).EQ.0) MCASL1 = MGEN
            IF (ISTIF(1).NE.0) MCASS1 = MGEN
C BEG JUN 2007
         ENDIF
C END JUN 2007
C BEG AUG 1998
C BEGIN "...IALTSV.EQ.1" BRANCH...
C BEG JAN 2007 (Comment out the next two lines and add back a modified line)
C        IF (ISTIF(1).LE.3.AND.ISTIF(2).LE.3.AND.
C    1      (ILABEL.EQ.9260.OR.ILABEL.EQ.9280).AND.IALTSV.EQ.1) THEN
         IF ((ILABEL.EQ.9260.OR.ILABEL.EQ.9280).AND.IALTSV.EQ.1) THEN
C END JAN 2007
C    1      (IALTSV.EQ.1.OR.ITYPE.NE.1.OR.
C    1       (IALTSV.EQ.0.AND.ILABEL.EQ.9280
C    1                   .AND.ITYPE.EQ.1.AND.JLAST.EQ.1))) THEN
C END AUG 1998
            DENFCT = 1.0
            IF (EIG9X.GT.0.0.AND.EIG9X.LT.1.0) DENFCT = EIG9X*FMDKD9
C BEG AUG 1998
C BEG AUG 2003 comment out following four lines
C           IF (ISIGNG.EQ.1.AND.IDESGN.EQ.1) THEN
C              DENFCT = 1./(FKNMOD*EIGMR9)
C              EIGGNX = EIGLX2
C           ENDIF
C END AUG 2003
C END AUG 1998
C BEG OCT 1998
C23456789012345678901234567890123456789012345678901234567890123456789012
            IF (NNPRT.GE.2
     1              .AND.(ILABEL.EQ.9260.OR.ILABEL.EQ.9280)) THEN
               WRITE(IFILE,'(/,A,/,
     1 A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4/,A,1P,E12.4)')
     1' General buckling load factor before and after knockdown:',
     1' EIGGNX(before knockdown by 2 factors below)        =',EIGGNX,
     1' Knockdown factor from modal imperfection(s)        =',FKNOCK(9),
     1' 1st modifying factor(no smeared stringer knockdown)=',FKNMLT,
     1' 2nd modifyng factor, 1/DENFCT=1 or 1/(EIG9X*FMDKD9)=',1./DENFCT,
     1' After knockdown, EIGGNX*FKNOCK(9)*FKNMLT/DENFCT           =',
     1                   EIGGNX*FKNOCK(9)*FKNMLT/DENFCT
        WRITE(IFILE,'(A,/,A,1P,E12.4,/,A,/,A,/,A,1P,E12.4)')
     1' in which',
     1' EIG9X  = lambda(ARBOCZ)/lambda(original PANDA-type theory)=',
     1  EIG9X,
     1'       lambda(ARBOCZ)=perfect panel buckling from ARBOCZ theory',
     1'       lambda(PANDA) =perfect panel buckling from PANDA  theory',
     1' FMDKD9 = 1 or 0.9/EIG9X =',FMDKD9
            ENDIF
C BEG OCT 2001
C BEG NOV 2003
C           IF (ICASE.EQ.1)
            IF (ICASE.EQ.1.AND.EIGGNX.GT.0.0)
C END NOV 2003
C END OCT 2001
     1      CALL RECORD(0,2,EIGGNX*FKNOCK(9)*FKNMLT/DENFCT,CSLGEN,MGEN,
C END OCT 1998
     1      NGENF,ICONST,CONSTR,WORDB,IFILE,IDESGN,JJJ,LENMOD,EIGMAX,
C BEG JAN 2007
C    1      IPOINC,INUMTT,FSGEN,ICASE,0,0,VINHOF,MORCON(ILOADS,ICASE),
     1      IPOINC,INUMTT,FSALTN,ICASE,0,0,VINHOF,MORCON(ILOADS,ICASE),
C END JAN 2007
     1      ENDMID,1,IDISCT,0)
C BEG FEB 2007
            IF (ITYPE.EQ.1.AND.NNPRT.GE.2)
     1      WRITE(IFILE,*)' AFTER RECORD14: IDESGN,INUMTT,ICONST=',
     1                                      IDESGN,INUMTT,ICONST
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2007
            IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 2222
         ENDIF
C END "...IALTSV.EQ.1" BRANCH. (Still in "IGENRL,etc" branch.)
C23456789012345678901234567890123456789012345678901234567890123456789012
C END JUN 1998
         IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 2222
      ENDIF
C END "IGENRL, etc." BRANCH.
C
C*******************************************************************
C END GENERAL INSTABILITY SECTION
C*******************************************************************
C     
C
      IF (IDESGN.EQ.0.AND.IGENRL.EQ.0.AND.EIGGEN.GT.EIGMAX) THEN
         IF (KOITER.EQ.0.OR.(KOITER.NE.0.AND.ISKNN.EQ.1)) THEN
           IF (LENMOD.GT.0.99) WRITE(IFILE,15) EIGGEN,MGEN,
     1                         NGENF,CSLGEN
           IF (LENMOD.LT.0.99) WRITE(IFILE,16) EIGGEN,MGEN,
     1                         NGENF,CSLGEN
         ENDIF
      ENDIF
   20 CONTINUE
C
C BEG NOV 1997
      IPREL = 0
C END NOV 1997
      IF (IPRELM.NE.0) RETURN
C
      ROB = ABS(R)/B0  
C     
C*********************************************************************
C BEGIN SECTION INVOLVING STIFFENER ROLLING WITH SKIN PARTICIPATION.
C*********************************************************************
C
C BEG JUN 1996
      EFOUND = 0.
      IF (ISANDW(1,1).EQ.1.OR.ISANDW(1,1).EQ.NLAYER(1,1))
     1 EFOUND = WFOUND(1,1)
C END JUN 1996
      IIROLL = 1
      NSTOT = 0   
      IF (NPARTR.EQ.0.AND.NPARTS.EQ.0) GO TO 410
      NSTOT = 4   
      IF (NX0.EQ.0.0.AND.NY0.EQ.0.0) GO TO 410  
C
C BEG JUN 2004
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG JUN 2006
      IF (NNPRT.GE.2)
     1       WRITE(8,'(/,A,/,A,/,18X,1P,4E12.4,/,A,/,18X,1P,4E12.4)')
     1'                           Stringers              Rings',
     1' Segment 1 prestress: RESLTS(1)  RPRES(1)  RESLTR(1)  RPRER(1)=',
     1                       RESLTS(1), RPRES(1), RESLTR(1), RPRER(1),
     1' Segment 2 prestress: RESLTS(2)  RPRES(2)  RESLTR(2)  RPRER(2)=',
     1                       RESLTS(2), RPRES(2), RESLTR(2), RPRER(2)
C END JUN 2006
C END JUN 2004
      CALL ROLL(B0,NPARTS,NENDS,ANGLS,C1S,ALS,NSEGS,1,RESLTS,RPRES, 
     1          ISTIF(1))
      CALL ROLL(A0,NPARTR,NENDR,ANGLR,C1R,ALR,NSEGR,2,RESLTR,RPRER, 
     1          ISTIF(2))
C     
C     
      ANORM = SQRT((NX0+NXPRE)**2 +(NY0+NYPRE)**2)    
      IF (ANORM.LT.(0.05*ABS(NXY0))) GO TO 350  
      IF (IDESGN.EQ.0) THEN
         ANSKIN = SQRT(PNX**2+PNY**2)
         ISKIP = 1
         IF (ABS(NXY0).GT.0.1*ANSKIN.AND.PNX.GT.0.0.AND.PNY.GT.0.0)
     1         ISKIP=0
         FISKIP(MIDEND) = ISKIP
      ENDIF
      ISKIP = FISKIP(MIDEND) + 0.1
C     
      IF (IQUICK.EQ.0.AND.ISKIP.EQ.1) GO TO 340
C
C     WRITE(6,3003)     
 3003 FORMAT(//' LOCAL ROLLING OF STIFFENER...'/)     
      IF (ISTIF(1).GE.4.OR.ISTIF(2).GE.4) GO TO 340
      IF (ISOGRD.EQ.1) GO TO 340
      IARGFL = 0
      IF (IFLAT.NE.0) IARGFL = 1
C
C BEGIN "MIDEND.EQ.1" BRANCH...
      IF (MIDEND.EQ.1) THEN
C BEG OCT 1998
        IF (NNPRT.GE.2) WRITE(IFILE,'(/,A,1P,E12.4)')
     1' Local buckling with stiffener rolling included, C11=',CX(1,1,1)
C END OCT 1998
       CALL GENSTB(1,A0,B0,PNX,PNY,NXY0,RSKNXP,RSKNYP,KWAVES(1,1), 
     1 KWAVES(2,1),TSTRLC,CRLOCL,EIGRLL(1),IDESGN,EIGROL,CX(1,1,1),   
     1 TX(1),TX(1),GTX(1,1),IREDUC,1,IFILE,ITUTOR,JJJ,ISTIF,
     1 RESLTS,RPRES,1,10.E10,0.,FFLAT(5,MIDEND,1),IARGFL,
     1 1,IAGAIN(5,MIDEND),FNEFF(5,MIDEND),7235,EIGRAT(5),
     1 RBB0(5),ILOADS,ICASE)
C BEG FEB 1996
       IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
C
       IF (IAGAIN(5,MIDEND).NE.0) THEN
          CALL GENSTB(1,A0,B0,PNX,PNY,NXY0,RSKNXP,RSKNYP,
     1           M2ND(5,MIDEND),N2ND(5,MIDEND),TST2ND(5,MIDEND),
     1           SLP2ND(5,MIDEND),EIG2ND(5,MIDEND),
     1           IDESGN,EIGROL,CX(1,1,1),TX(1),TX(1),GTX(1,1),
     1           IREDUC,1,IFILE,ITUTOR,JJJ,ISTIF,RESLTS,RPRES,1,
     1           10.E10,0.,FFLAT(5,MIDEND,2),IARGFL,
     1           2,IAGAIN(5,MIDEND),FNEFF(5,MIDEND),7240,EIGRAT(5),
     1           RBB0(5),ILOADS,ICASE)
C BEG FEB 1996
          IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
C
          CALL WGTAVE(PNX+RSKNXP,PNY+RSKNYP,NXY0,
     1                EIG2ND(5,MIDEND),EIGRLL(1),IAGAIN(5,MIDEND))
       ENDIF
       CRLOCP = CRLOCL
       IF (TSTRLC.LT.1.0.AND.ABS(CRLOCL).GT.0.0) CRLOCP=1./CRLOCL
C BEG MAR 1998
       FKNMOD = 1.0
       IF (KWAVES(2,1).EQ.0.AND.EIG7X.GT.0.0.AND.EIG7X.LT.1.0)
C BEG JUN 1998
     1         FKNMOD = 1./(EIG7X*FMDKD7)
C BEG JULY 1998
C BEG AUG 1998
C      IF (ITYPE.EQ.1.AND.EIG7X.GT.0.0.AND.EIG7X.LT.1.0.AND.
       IF (               EIG7X.GT.0.0.AND.EIG7X.LT.1.0.AND.
C END AUG 1998
     1  FLTSL7.GT.0.0) FKNMOD = 1./(EIG7X*FMDKD7)
C END JULY 1998
C BEG OCT 1998
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG NOV 2003
       IF (NNPRT.GE.0.AND.ILABEL.GE.9260) THEN
C END NOV 2003
          WRITE(IFILE,'(/,A,/,
     1 A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4)')
     1' Local buck. w rolling load factor before and after knockdown:',
     1' EIGRLL(1)(before knockdown by 3 factors below)     =',EIGRLL(1),
     1' Knockdown factor from modal imperfection(s)        =',FKNOCK(7),
     1' 1st modifying factor, FKNMOD=1 or 1/(EIG7X*FMDKD7) =',FKNMOD,
     1' 2nd modifying factor, EIGMR7=1 or EIGLNX/EIGLOC    =',EIGMR7,
     1' After knockdown, EIGRLL(1)*FKNOCK(7)*FKNMOD*EIGMR7 =',
     1                   EIGRLL(1)*FKNOCK(7)*FKNMOD*EIGMR7
        WRITE(IFILE,'(A,/,A,1P,E12.4,/,A,/,A,/,A,1P,E12.4/,A)')
     1' in which',
     1' EIG7X  = lambda(ARBOCZ)/lambda(original PANDA-type theory)=',
     1  EIG7X,
     1'       lambda(ARBOCZ)=perfect panel buckling from ARBOCZ theory',
     1'       lambda(PANDA) =perfect panel buckling from PANDA  theory',
     1' FMDKD7 = 1 or 0.9/EIG7X =',FMDKD7,
     1' EIGLNX = eigenvalue for perfect panel from alternate solution'
       ENDIF
       IF (KWAVES(2,1).GE.NMINRG.AND.KWAVES(2,1).LE.NMAXRG
     1  .AND.KWAVES(2,1).NE.0.AND.IRNIDX.EQ.1
     1  .AND.IDESGN.EQ.0.AND.ISTIF(1).EQ.0.AND.ISTIF(2).NE.0
C BEG NOV 2003
     1  .AND.ILABEL.GE.9260.AND.IWIDE.EQ.0) THEN
C END NOV 2003
          IRNMOD(7) = 1
          IF (NNPRT.GE.0) WRITE(IFILE,
C         IF (NNPRT.GE.1) WRITE(IFILE,
     1        '(/,A,/,A,/,A,/,A,/,A,I5,/,A,I5,A,/,A,I5,/,A)')
     1    ' Local buckling between adjacent rings with ring rolling',
     1    ' is not recorded as a margin because this type of buckling',
     1    ' has been superseded by the results from the discretized',
     1    ' skin-ring module model, for which skin-ring buckling',
     1    ' load factors have been computed in the range from n = ',
     1      NMINRG,' to n = ', NMAXRG,' circumferential halfwaves.',
     1    ' The critical local buckling model with ring rolling has',
     1   KWAVES(2,1),' circ. half waves, which lies within this range.'
       ENDIF
       IF (IRNMOD(7).EQ.0)
     1 CALL RECORD(1,1,EIGRLL(1)*FKNOCK(7)*FKNMOD*EIGMR7,CRLOCP,
C END OCT 1998
C END JUN 1998
C END MAR 1998
     1             KWAVES(1,1),KWAVES(2,1),ICONST,CONSTR,WORDB,
     1             IFILE,IDESGN,JJJ,LENMOD,EIGMAX,IPOINC,INUMTT,
C BEG OCT 1996
     1             FSLOC,ICASE,0,0,VINHOF,MORCON(ILOADS,ICASE),
     1             ENDMID,0,0,ISUB)
C BEG FEB 2007
       IF (ITYPE.EQ.1.AND.NNPRT.GE.2)
     1 WRITE(IFILE,*)' AFTER RECORD15: IDESGN,INUMTT,ICONST=',
     1                                 IDESGN,INUMTT,ICONST
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2007
       IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 2222
C END OCT 1996
C END "MIDEND.EQ.1" BRANCH.
      ELSE
C BEG "MIDEND.NE.1" BRANCH...
C BEG OCT 1998
       IF (NNPRT.GE.2) WRITE(IFILE,'(/,A,1P,E12.4)')
     1' Local buckling with stiffener rolling included, C11=',CX(1,1,1)
C END OCT 1998
       CALL GENSTB(1,A0,B0,PNX,PNY,NXY0,RSKNXP,RSKNYP,MMRL2, 
     1 NNRL2,TSTRL2,CRLCL2,EIGRL2,IDESGN,EIGROL,CX(1,1,1),   
     1 TX(1),TX(1),GTX(1,1),IREDUC,1,IFILE,ITUTOR,JJJ,ISTIF,
     1 RESLTS,RPRES,1,10.E10,0.,FFLAT(12,MIDEND,1),IARGFL,
     1 1,IAGAIN(12,MIDEND),FNEFF(12,MIDEND),7245,EIGRAT(12),
     1 RBB0(12),ILOADS,ICASE)
C BEG FEB 1996
       IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
C
       IF (IAGAIN(12,MIDEND).NE.0) THEN
          CALL GENSTB(1,A0,B0,PNX,PNY,NXY0,RSKNXP,RSKNYP,
     1           M2ND(12,MIDEND),N2ND(12,MIDEND),TST2ND(12,MIDEND),
     1           SLP2ND(12,MIDEND),EIG2ND(12,MIDEND),
     1           IDESGN,EIGROL,CX(1,1,1),TX(1),TX(1),GTX(1,1),
     1           IREDUC,1,IFILE,ITUTOR,JJJ,ISTIF,RESLTS,RPRES,1,
     1           10.E10,0.,FFLAT(12,MIDEND,2),IARGFL,
     1        2,IAGAIN(12,MIDEND),FNEFF(12,MIDEND),7250,EIGRAT(12),
     1           RBB0(12),ILOADS,ICASE)
C BEG FEB 1996
          IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
C
          CALL WGTAVE(PNX+RSKNXP,PNY+RSKNYP,NXY0,
     1                EIG2ND(12,MIDEND),EIGRL2,IAGAIN(12,MIDEND))
       ENDIF
       CRLOCP = CRLCL2
       IF (TSTRL2.LT.1.0.AND.ABS(CRLCL2).GT.0.0) CRLOCP=1./CRLCL2
C BEG MAR 1998
       FKNMOD = 1.0
       IF (NNRL2.EQ.0.AND.EIG7X.GT.0.0.AND.EIG7X.LT.1.0)
C BEG JUN 1998
     1    FKNMOD = 1./(EIG7X*FMDKD7)
C BEG OCT 1998
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG NOV 2003
       IF (NNPRT.GE.0.AND.ILABEL.GE.9260) THEN
C END NOV 2003
          WRITE(IFILE,'(/,A,/,
     1 A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4)')
     1' Local buck. w rolling load factor before and after knockdown:',
     1' EIGRL2(before knockdown by 3 factors below)        =',EIGRL2,
     1' Knockdown factor from modal imperfection(s)        =',FKNOCK(7),
     1' 1st modifying factor, FKNMOD=1 or 1/(EIG7X*FMDKD7) =',FKNMOD,
     1' 2nd modifying factor, EIGMR7=1 or EIGLNX/EIGLOC    =',EIGMR7,
     1' After knockdown, EIGRL2*FKNOCK(7)*FKNMOD*EIGMR7 =',
     1                   EIGRL2*FKNOCK(7)*FKNMOD*EIGMR7
        WRITE(IFILE,'(A,/,A,1P,E12.4,/,A,/,A,/,A,1P,E12.4/,A)')
     1' in which',
     1' EIG7X  = lambda(ARBOCZ)/lambda(original PANDA-type theory)=',
     1  EIG7X,
     1'       lambda(ARBOCZ)=perfect panel buckling from ARBOCZ theory',
     1'       lambda(PANDA) =perfect panel buckling from PANDA  theory',
     1' FMDKD7 = 1 or 0.9/EIG7X =',FMDKD7,
     1' EIGLNX = eigenvalue for perfect panel from alternate solution'
       ENDIF
       IF (NNRL2.GE.NMINRG.AND.NNRL2.LE.NMAXRG
     1                    .AND.NNRL2.NE.0.AND.IRNIDX.EQ.1
     1  .AND.IDESGN.EQ.0.AND.ISTIF(1).EQ.0.AND.ISTIF(2).NE.0
C BEG NOV 2003
     1  .AND.ILABEL.GE.9260.AND.IWIDE.EQ.0) THEN
C END NOV 2003
          IRNMOD(7) = 1
          IF (NNPRT.GE.0) WRITE(IFILE,
C         IF (NNPRT.GE.1) WRITE(IFILE,
     1        '(/,A,/,A,/,A,/,A,/,A,I5,/,A,I5,A,/,A,I5,/,A)')
     1    ' Local buckling between adjacent rings with ring rolling',
     1    ' is not recorded as a margin because this type of buckling',
     1    ' has been superseded by the results from the discretized',
     1    ' skin-ring module model, for which skin-ring buckling',
     1    ' load factors have been computed in the range from n = ',
     1      NMINRG,' to n = ', NMAXRG,' circumferential halfwaves.',
     1    ' The critical local buckling model with ring rolling has',
     1      NNRL2,' circ. half waves, which lies within this range.'
       ENDIF
       IF (IRNMOD(7).EQ.0)
     1 CALL RECORD(1,1,EIGRL2*FKNOCK(7)*FKNMOD*EIGMR7,CRLOCP,MMRL2,
C END OCT 1998
C END JUN 1998
C END MAR 1998
     1             NNRL2,ICONST,CONSTR,WORDB,IFILE,IDESGN,JJJ,LENMOD,
C BEG OCT 1996
     1             EIGMAX,IPOINC,INUMTT,FSLOC,ICASE,0,0,
     1             VINHOF,MORCON(ILOADS,ICASE),ENDMID,0,0,ISUB)
C BEG FEB 2007
       IF (ITYPE.EQ.1.AND.NNPRT.GE.2)
     1 WRITE(IFILE,*)' AFTER RECORD16: IDESGN,INUMTT,ICONST=',
     1                                 IDESGN,INUMTT,ICONST
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2007
       IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 2222
C END OCT 1996
      ENDIF
C END "MIDEND" BRANCH.
C
  340 CONTINUE
      IF (NPARTS.EQ.0.OR.NPARTR.EQ.0) GO TO 350 
      IF (FSGEN.EQ.0.0) GO TO 350
      IF (ISTIF(2).GE.4) GO TO 345
      IF (ISOGRD.EQ.1) GO TO 350
      BBBG = BBIG
      RSAVE= R
      FACWID=1.0
      IARGFL = 0
      IF (IFLAT.NE.0) IARGFL = 1
      IF (IWIDE.EQ.1) THEN
         IARGFL = 1
C BEG SEPT 1993
C BEG MAR 1996
         IF (IBEAM.EQ.1) BBBG = MAX(10.*A0,BBIG)
C END MAR 1996
C END SEPT 1993
         R = 10000.*SQRT(A0**2 +BBBG**2)
         FACWID = BBIG/BBBG
         IF (IPRELM.EQ.0) THEN
          IF (IDESGN.EQ.0.AND.CX(4,4,5).LT.20.*CX(5,5,5)) THEN
           IF (BBIG.LT.2.0*A0.OR.BBIG.GT.0.2*RSAVE) THEN
             WRITE(IFILE,*)' *********** NOTE  NOTE  NOTE  ***********'
             WRITE(IFILE,*)' WIDE-COLUMN MODEL MAY BE TOO CONSERVATIVE'
             WRITE(IFILE,*)' *********** NOTE  NOTE  NOTE  ***********'
           ENDIF
          ENDIF
         ENDIF
      ENDIF
      PARX1 = BBBG/B(1)
      PARX2 = ABS(1.-CX(4,4,1)/CX(4,4,5))
C BEG "FSLOC" BRANCH...
      IF (FSLOC.GE.0.95) THEN
C BEG OCT 1998
C23456789012345678901234567890123456789012345678901234567890123456789012
         IF (NNPRT.GE.2) WRITE(IFILE,'(/,A,1P,E12.4,A,1P,E12.4)')
     1 ' Inter-ring buckling/rolling:smeared stringers,C11=',CX(1,1,5),
     1 ', radius, R=',R
C END OCT 1998
         CALL GENSTB(3,A0,BBBG,NX0,PNY,NXY0,NXPRE,RSKNYP,MRSS,NRSS,  
     1     TSTRSS,CRSS,EIGRSS,IDESGN,EIGROL,CX(1,1,5),  
C BEG JAN 2005
     1     TEFF(1),TXX,GTX(1,5),IREDUC,1,IFILE,ITUTOR,JJJ,ISTIF,
C END JAN 2005
     1     RESLTS,RPRES,1,PARX1,PARX2,FFLAT(7,MIDEND,1),IARGFL,
     1     1,IAGAIN(7,MIDEND),FNEFF(7,MIDEND),7255,EIGRAT(7),
     1     RBB0(7),ILOADS,ICASE)
C BEG FEB 1996
         IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
C
         IF (IAGAIN(7,MIDEND).NE.0) THEN
            CALL GENSTB(3,A0,BBBG,NX0,PNY,NXY0,NXPRE,RSKNYP,
     1           M2ND(7,MIDEND),N2ND(7,MIDEND),TST2ND(7,MIDEND),
     1           SLP2ND(7,MIDEND),EIG2ND(7,MIDEND),
C BEG JAN 2005
     1           IDESGN,EIGROL,CX(1,1,5),TEFF(1),TXX,GTX(1,5),
C END JAN 2005
     1           IREDUC,1,IFILE,ITUTOR,JJJ,ISTIF,RESLTS,RPRES,1,
     1           PARX1,PARX2,FFLAT(7,MIDEND,2),IARGFL,
     1           2,IAGAIN(7,MIDEND),FNEFF(7,MIDEND),7260,EIGRAT(7),
     1           RBB0(7),ILOADS,ICASE)
C BEG FEB 1996
            IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
C
            CALL WGTAVE(NX0+NXPRE,PNY+RSKNYP,NXY0,
     1                  EIG2ND(7,MIDEND),EIGRSS,IAGAIN(7,MIDEND))
         ENDIF
      ELSE          
C BEG OCT 1998
C23456789012345678901234567890123456789012345678901234567890123456789012
         IF (NNPRT.GE.2) WRITE(IFILE,'(/,A,1P,E12.4,A,1P,E12.4)')
     1' Inter-ring buckling/rolling:smeared stringers,C11=',CSWIDE(1,1),
     1', radius, R=',R
C END OCT 1998
         CALL GENSTB(3,A0,BBBG,NX0,PNY,NXY0,NXPRE,RSKNYP,MRSS,NRSS,  
     1     TSTRSS,CRSS,EIGRSS,IDESGN,EIGROL,CSWIDE,  
C BEG JAN 2005
     1     TEFF(1),TXX,GTX(1,5),IREDUC,1,IFILE,ITUTOR,JJJ,ISTIF,
C END JAN 2005
     1     RESLTS,RPRES,1,PARX1,PARX2,FFLAT(7,MIDEND,1),IARGFL,
     1     1,IAGAIN(7,MIDEND),FNEFF(7,MIDEND),7265,EIGRAT(7),
     1     RBB0(7),ILOADS,ICASE)
C BEG FEB 1996
         IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
C
         IF (IAGAIN(7,MIDEND).NE.0) THEN
            CALL GENSTB(3,A0,BBBG,NX0,PNY,NXY0,NXPRE,RSKNYP,
     1           M2ND(7,MIDEND),N2ND(7,MIDEND),TST2ND(7,MIDEND),
     1           SLP2ND(7,MIDEND),EIG2ND(7,MIDEND),
C BEG JAN 2005
     1           IDESGN,EIGROL,CSWIDE,TEFF(1),TXX,GTX(1,5),
C END JAN 2005
     1           IREDUC,1,IFILE,ITUTOR,JJJ,ISTIF,RESLTS,RPRES,1,
     1           PARX1,PARX2,FFLAT(7,MIDEND,2),IARGFL,
     1           2,IAGAIN(7,MIDEND),FNEFF(7,MIDEND),7270,EIGRAT(7),
     1           RBB0(7),ILOADS,ICASE)
C BEG FEB 1996
            IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
C
            CALL WGTAVE(NX0+NXPRE,PNY+RSKNYP,NXY0,
     1                  EIG2ND(7,MIDEND),EIGRSS,IAGAIN(7,MIDEND))
         ENDIF
      ENDIF
C END  "FSLOC" BRANCH.
      CRSSP = CRSS
      IF (TSTRSS.LT.1.0.AND.ABS(CRSS).GT.0.0) CRSSP=1./CRSS
C BEG OCT 1998
      IF (IDESGN.EQ.0) THEN
         EIGSSX = EIGRSS
         CALL EIGMOD(BBBG,FNEFF(7,MIDEND),B(1),EIGRSS,ITUTOR,IFILE,
     1               CX(4,4,1),CX(4,4,5),FSAFE2,NX0,PNY,NXY0,1,3)
C BEG NOV 2003
          IF (NNPRT.GE.2.AND.ILABEL.GE.9260)
C END NOV 2003
C BEG OCT 2001
     1       WRITE(IFILE,'(A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4)')
     1' Number of circumferential halfwaves in buckling pattern=',
     1  FNEFF(7,MIDEND),
C END OCT 2001
     1' Buckling load factor BEFORE knockdown for smeared stringers=',
     1  EIGSSX,
     1' Buckling load factor AFTER  knockdown for smeared stringers=',
     1  EIGRSS
      ENDIF
C END OCT 1998
      NRSSF = NRSS*FACWID
C BEG MAR 1998
      FKNMOD = 1.0
      IF (NRSSF.EQ.0.AND.EIG8X.GT.0.0.AND.EIG8X.LT.1.0)
C BEG JUN 1998
     1   FKNMOD = 1./(EIG8X*FMDKD8)
C END JUN 1998
C BEG OCT 1998
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG NOV 2003
      IF (NNPRT.GE.0.AND.ILABEL.GE.9260) THEN
C END NOV 2003
         WRITE(IFILE,'(/,A,/,
     1 A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4)')
     1' Smeared stringer with rolling before and after knockdown:',
     1' EIGRSS(before knockdown by 2 factors below)        =',EIGRSS,
     1' Knockdown factor from inter-ring modal imperfection=',FKNOCK(8),
     1' Modifying factor, FKNMOD=1 or 1/(EIG8X*FMDKD8)     =',FKNMOD,
     1' After knockdown, EIGRSS*FKNOCK(8)*FKNMOD           =',
     1                   EIGRSS*FKNOCK(8)*FKNMOD
        WRITE(IFILE,'(A,/,A,1P,E12.4,/,A,/,A,/,A,1P,E12.4)')
     1' in which',
     1' EIG8X  = lambda(ARBOCZ)/lambda(original PANDA-type theory)=',
     1  EIG8X,
     1'       lambda(ARBOCZ)=perfect panel buckling from ARBOCZ theory',
     1'       lambda(PANDA) =perfect panel buckling from PANDA  theory',
     1' FMDKD8 = 1 or 0.9/EIG8X =',FMDKD8
      ENDIF
      IF (NRSSF.GE.NMINRG.AND.NRSSF.LE.NMAXRG
     1 .AND.NRSSF.NE.0.AND.IRNIDX.EQ.1
     1 .AND.IDESGN.EQ.0.AND.(ILABEL.EQ.9260.OR.ILABEL.EQ.9280)
     1 .AND.IWIDE.EQ.0) THEN
         IRNMOD(2) = 1
         IF (NNPRT.GE.0) WRITE(IFILE,
C        IF (NNPRT.GE.1) WRITE(IFILE,
     1     '(/,A,/,A,/,A,/,A,/,A,I5,/,A,I5,A,/,A,I5,/,A)')
     1 ' Inter-ring buckling with smeared stringers and ring rolling',
     1 ' is not recorded as a margin because this type of buckling',
     1 ' has been superseded by the results from the discretized',
     1 ' inter-ring module model, for which inter-ring buckling',
     1 ' load factors have been computed in the range from n = ',
     1   NMINRG,' to n = ', NMAXRG,' circumferential halfwaves.',
     1 ' The critical inter-ring-buckling-with-ring-rolling model has',
     1   NRSSF,' circ. half waves, which lies within this range.'
      ENDIF
      IF (IRNMOD(2).EQ.0)
     1CALL RECORD(1,3,EIGRSS*FKNOCK(8)*FKNMOD,CRSSP,MRSS,NRSSF,ICONST,
     1  CONSTR,WORDB,IFILE,IDESGN,JJJ,LENMOD,EIGMAX,IPOINC,INUMTT,
     1  FSPAN,ICASE,0,0,VINHOF,MORCON(ILOADS,ICASE),ENDMID,0,0,0)
C END OCT 1998
C END MAR 1998
C BEG FEB 2007
      IF (ITYPE.EQ.1.AND.NNPRT.GE.2)
     1 WRITE(IFILE,*)' AFTER RECORD17: IDESGN,INUMTT,ICONST=',
     1                                 IDESGN,INUMTT,ICONST
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2007
      IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 2222
C END OCT 1996
      R = RSAVE
  345 CONTINUE
      IF (ISTIF(1).GE.4.OR.ISOGRD.EQ.1) GO TO 350
C BEG OCT 1998
      IF (NNPRT.GE.2) WRITE(IFILE,'(/,A,1P,E12.4)')
     1' Buckling w/rolling between stringers with smeared rings, C11=',
     1 CY(1,1,5)
C END OCT 1998
      IARGFL = 0
      IF (IFLAT.NE.0) IARGFL = 1
      CALL GENSTB(4,LENMOD*ABIG,B0,PNX,NY0,NXY0,RSKNXP,NYPRE,MRSR,NRSR,  
     1 TSTRSR,CRSR,EIGRSR,IDESGN,EIGROL,CY(1,1,5),  
     1 TX(1),TEFF(2),GTY(1,5),IREDUC,1,IFILE,ITUTOR,JJJ,ISTIF,
     1 RESLTS,RPRES,1,10.E10,0.,FFLAT(8,MIDEND,1),IARGFL,
     1 1,IAGAIN(8,MIDEND),FNEFF(8,MIDEND),7275,EIGRAT(8),
     1 RBB0(8),ILOADS,ICASE)
C BEG FEB 1996
      IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
C
      IF (IAGAIN(8,MIDEND).NE.0) THEN
         CALL GENSTB(4,LENMOD*ABIG,B0,PNX,NY0,NXY0,RSKNXP,NYPRE,
     1           M2ND(8,MIDEND),N2ND(8,MIDEND),TST2ND(8,MIDEND),
     1           SLP2ND(8,MIDEND),EIG2ND(8,MIDEND),
     1           IDESGN,EIGROL,CY(1,1,5),TX(1),TEFF(2),GTY(1,5),
     1           IREDUC,1,IFILE,ITUTOR,JJJ,ISTIF,RESLTS,RPRES,1,
     1           10.E10,0.,FFLAT(8,MIDEND,2),IARGFL,
     1           2,IAGAIN(8,MIDEND),FNEFF(8,MIDEND),7280,EIGRAT(8),
     1           RBB0(8),ILOADS,ICASE)
C BEG FEB 1996
         IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
C
          CALL WGTAVE(PNX+RSKNXP,NY0+NYPRE,NXY0,
     1                EIG2ND(8,MIDEND),EIGRSR,IAGAIN(8,MIDEND))
      ENDIF
      CRSRP = CRSR
      IF (TSTRSR.LT.1.0.AND.ABS(CRSR).GT.0.0) CRSRP=1./CRSR
      CALL RECORD(1,4,EIGRSR,CRSRP,MRSR,NRSR,ICONST,CONSTR,WORDB,
     1       IFILE,IDESGN,JJJ,LENMOD,EIGMAX,IPOINC,INUMTT,FSLOC,
C BEG OCT 1996
     1       ICASE,0,0,VINHOF,MORCON(ILOADS,ICASE),ENDMID,0,0,0)
C BEG FEB 2007
      IF (ITYPE.EQ.1.AND.NNPRT.GE.2)
     1 WRITE(IFILE,*)' AFTER RECORD18: IDESGN,INUMTT,ICONST=',
     1                                 IDESGN,INUMTT,ICONST
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2007
      IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 2222
C END OCT 1996
C     
C     
C*********************************************************************
C END SECTION INVOLVING STIFFENER ROLLING WITH SKIN PARTICIPATION.
C*********************************************************************
C
C*********************************************************************
C BEGIN SECTION INVOLVING STIFFENER ROLLING WITHOUT SKIN PARTICIPATION.
C*********************************************************************
C
  350 CONTINUE
C BEG JUN 1996
      EFOUND = 0.
C END JUN 1996
C BEG MAY 1997
      IF (ISANDS.EQ.0.AND.ISAND.EQ.1) GO TO 390
C END MAY 1997
      IF (NPARTS.EQ.0) GO TO 390
      IF (IDESGN.EQ.0) TOTDIF(1,MIDEND) = TOTS-TOTPS
      IF (TOTDIF(1,MIDEND).GT.0.0) GO TO 390
      IF (ISTIF(1).GE.4) GO TO 390
C BEG MAR 1997
      IF (NNPRT.GE.2) THEN
         WRITE(IFILE,'(/,A,1P,2E12.4)')
     1 ' STRINGER ROLLING, LOAD SET A+B Nx: WEB, FLANGE=',
     1   RESLTS(1),RESLTS(2)
         WRITE(IFILE,'(A,1P,2E12.4)')
     1 ' STRINGER ROLLING, LOAD SET B   Nx: WEB, FLANGE=',
     1   RPRES(1),RPRES(2)
      ENDIF
C END MAR 1997
C BEG MAR 1996
C     IF (MIDEND.EQ.1) THEN (NOTE: old branch commented out.)
C  FIRST DO THE LO-AXIAL WAVENUMBER STRINGER ROLLING, NO SKIN PARTICIP.
C BEG OCT 1998
       IF (NNPRT.GE.2) WRITE(IFILE,'(/,A)')
     1' Lo-axial wave stringer rolling without skin participation'
C END OCT 1998
       IF (ISOGRD.EQ.0)
     1  CALL MINVAL(ROLSTR,ABIG,EIGRLL(2),KWAVES(1,2),IDESGN,
C BEG OCT 1996
C BEG JUN 2004
     1         DOCSTR(1),1,GTX(1,3),TX(3),IREDUC,RESLTS(1),
     1         R,ISTIF(1),0,1)
C END JUN 2004
C END OCT 1996
       IF (ISOGRD.EQ.1)
     1  CALL MINVAL(ROLSTR,B0/0.866,EIGRLL(2),KWAVES(1,2),IDESGN,
C BEG OCT 1996
C BEG JUN 2004
     1         DOCSTR(1),1,GTX(1,3),TX(3),IREDUC,RESLTS(1),
     1         R,ISTIF(1),0,2)
C END JUN 2004
C END OCT 1996
C BEG JUN 2004
       IF (NNPRT.GE.2)
     1 WRITE(8,'(A,1P,E12.4,/,A,1P,E12.4)')
     1' Prebuckling resultant, RESLTS(1)=',RESLTS(1),
     1' Buckling load factor, EIGRLL(2)=',EIGRLL(2)
       IF (NNPRT.GE.2.AND.ISOGRD.EQ.0)
     1 WRITE(8,'(A,1P,E12.4,A,I5)')
     1' Number of halfwaves over the axial distance, ABIG=',ABIG,
     1'; KWAVES(1,2)=',KWAVES(1,2)
       IF (NNPRT.GE.2.AND.ISOGRD.EQ.1)
     1 WRITE(8,'(A,1P,E12.4,A,I5)')
     1' Number of halfwaves over length B0/0.866= ',B0/0.866,
     1'; KWAVES(1,2)=',KWAVES(1,2)
C END JUN 2004
C23456789012345678901234567890123456789012345678901234567890123456789012
       IF (IDESGN.EQ.0) THEN
C BEG JAN 2006
C         FSHIGH = 1.6
          FSHIGH = 1.4
C END JAN 2006
C         FSLOW  = 1.2*FSBSTR
          FSLOW  = 1.2*MAX(FSBSTR,0.5)
          DOCHI  = 100.
          DOCLO  = 10.
C         FSROLS(1) = FSHIGH
          IF (ABS(DOCSTR(1)).LE.DOCLO) FSROLS(1) = FSHIGH
          IF (ABS(DOCSTR(1)).GE.DOCHI) FSROLS(1) = FSLOW
          IF (ABS(DOCSTR(1)).GT.DOCLO.AND.ABS(DOCSTR(1)).LT.DOCHI) THEN
             BDOC = (FSHIGH - FSLOW)/(DOCLO - DOCHI)
             ADOC = FSHIGH - BDOC*DOCLO
             FSROLS(1) = ADOC + BDOC*DOCSTR(1)
C            IF (FSROLS(1).LE.0.) FSROLS(1) = FSHIGH
          ENDIF
       ENDIF
       IF (NNPRT.GE.2)
     1     WRITE(IFILE,'(A,I5,1P2E12.4)')
     1     ' STRINGER ROLLING: KWAVES(1,2),DOCSTR(1),FSROLS(1)=',
     1                         KWAVES(1,2),DOCSTR(1),FSROLS(1)
C BEG FEB 2009
      IF (KWAVES(1,2).GE.NMINSR.AND.KWAVES(1,2).LE.NMAXSR
     1 .AND.KWAVES(1,2).NE.0.AND.ISRIDX.EQ.1.AND.IDESGN.EQ.0
     1 .AND.ILABEL.GE.9260.AND.IHILOC.NE.0) THEN
         ISRMOD(3) = 1
         IF (NNPRT.GE.0) WRITE(IFILE,
     1     '(/,A,/,A,/,A,/,A,/,A,I5,A,I5,A,/,A,A,I5,/,A)')
     1 ' Stringer rolling without participation of the panel skin',
     1 ' is not recorded as a margin because this type of buckling',
     1 ' has been superseded by the results from the discretized',
     1 ' skin-stringer module model, for which buckling load factors',
     1 ' have been computed in the range from m = ',NMINSR,' to m = ',
     1   NMAXSR,' axial halfwaves.',
     1 ' The critical stringer-rolling-without-participation-of-the',
     1 '-panel-skin model has',
     1   KWAVES(1,2),' axial half waves, which lies within this range.'
      ENDIF
      IF (ISRMOD(3).EQ.0) THEN
C END FEB 2009
       CALL RECORD(2,5,EIGRLL(2),DUMMY,KWAVES(1,2),0,ICONST,CONSTR,
     1       WORDB,IFILE,IDESGN,JJJ,LENMOD,EIGMAX,IPOINC,INUMTT,
C BEG OCT 1996
     1       FSROLS(1),ICASE,0,0,VINHOF,MORCON(ILOADS,ICASE),
     1       ENDMID,0,0,0)
C BEG APR 2007
       IF (NNPRT.GE.0.AND.ILABEL.GE.9260)
     1 WRITE(IFILE,'(/,A,/,A,1P,E12.4,A,I4,A)')
     1 ' Stringer rolling from PANDA-type theory [1B]:',
     1 ' PANDA-type buckling load factor, EIGRLL(2)(m,n,slope)=',
     1   EIGRLL(2),'(',KWAVES(1,2),',0,0)'
C BEG FEB 2009
      ENDIF
C END FEB 2009
C END APR 2007
C BEG FEB 2007
       IF (ITYPE.EQ.1.AND.NNPRT.GE.2)
     1 WRITE(IFILE,*)' AFTER RECORD19: IDESGN,INUMTT,ICONST=',
     1                                 IDESGN,INUMTT,ICONST
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2007
       IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 2222
C END OCT 1996
C
       IF (FSROLS(1).GT.FSLOW) THEN
C  NOW DO THE HIGH-AXIAL WAVENUMBER STRINGER ROLLING, NO SKIN PARTICIP.
C BEG OCT 1998
          IF (NNPRT.GE.2) WRITE(IFILE,'(/,A)')
     1  ' high-axial wave stringer rolling without skin participation'
C END OCT 1998
          IF (ISOGRD.EQ.0) THEN
             IF (IDESGN.EQ.0) MSTART = ABIG/HH(1)
             CALL MINVAL(ROLSTR,ABIG,EROLHS,MROLST,IDESGN,
C BEG OCT 1996
C BEG JUN 2004
     1              DOCSTR(2),MSTART,GTX(1,3),TX(3),IREDUC,RESLTS(1),
     1              R,ISTIF(1),0,3)
C END JUN 2004
C END OCT 1996
          ENDIF
          IF (ISOGRD.EQ.1) THEN
             IF (IDESGN.EQ.0) MSTART = (B0/0.866)/HH(1)
             CALL MINVAL(ROLSTR,B0/0.866,EROLHS,MROLST,IDESGN,
C BEG OCT 1996
C BEG JUN 2004
     1              DOCSTR(2),MSTART,GTX(1,3),TX(3),IREDUC,RESLTS(1),
     1              R,ISTIF(1),0,4)
C END JUN 2004
C END OCT 1996
          ENDIF
C BEG JUN 2004
          IF (NNPRT.GE.2)
     1    WRITE(8,'(A,1P,E12.4,/,A,1P,E12.4)')
     1  ' Prebuckling resultant, RESLTS(1)=',RESLTS(1),
     1  ' Buckling load factor, EROLHS=',EROLHS
          IF (NNPRT.GE.2.AND.ISOGRD.EQ.0)
     1    WRITE(8,'(A,1P,E12.4,A,I5)')
     1  ' Number of halfwaves over the axial distance, ABIG=',ABIG,
     1  '; MROLST=',MROLST
          IF (NNPRT.GE.2.AND.ISOGRD.EQ.1)
     1    WRITE(8,'(A,1P,E12.4,A,I5)')
     1  ' Number of halfwaves over length B0/0.866= ',B0/0.866,
     1  '; MROLST=',MROLST 
C END JUN 2004
C23456789012345678901234567890123456789012345678901234567890123456789012
C         IF (IDESGN.EQ.0) FSROLS(2) = FSHIGH
          IF (MROLST.GT.(KWAVES(1,2)+1)) THEN
             IF (IDESGN.EQ.0) THEN
                IF (ABS(DOCSTR(2)).LE.DOCLO) FSROLS(2) = FSHIGH
                IF (ABS(DOCSTR(2)).GE.DOCHI) FSROLS(2) = FSLOW
                IF (ABS(DOCSTR(2)).GT.DOCLO.AND.ABS(DOCSTR(2)).LT.DOCHI)
     1          THEN
                   BDOC = (FSHIGH - FSLOW)/(DOCLO - DOCHI)
                   ADOC = FSHIGH - BDOC*DOCLO
                   FSROLS(2) = ADOC + BDOC*DOCSTR(2)
                ENDIF
C               IF (FSROLS(2).LE.0.) FSROLS(2) = FSHIGH
             ENDIF
             IF (NNPRT.GE.2)
     1       WRITE(IFILE,'(A,/,2I5,1P2E12.4)')
     1     ' STRINGER ROLLING: MROLST,KWAVES(1,2),DOCSTR(2),FSROLS(2)=',
     1                         MROLST,KWAVES(1,2),DOCSTR(2),FSROLS(2)
C BEG FEB 2009
             IF (MROLST.GE.NMINSR.AND.MROLST.LE.NMAXSR
     1       .AND.MROLST.NE.0.AND.ISRIDX.EQ.1.AND.IDESGN.EQ.0
     1       .AND.ILABEL.GE.9260.AND.IHILOC.NE.0) THEN
             ISRMOD(4) = 1
             IF (NNPRT.GE.0) WRITE(IFILE,
     1        '(/,A,/,A,/,A,/,A,/,A,I5,A,I5,A,/,A,A,I5,/,A)')
     1 ' Hi-m stringer rolling without participation of the panel skin',
     1 ' is not recorded as a margin because this type of buckling',
     1 ' has been superseded by the results from the discretized',
     1 ' skin-stringer module model, for which buckling load factors',
     1 ' have been computed in the range from m = ',NMINSR,' to m = ',
     1   NMAXSR,' axial halfwaves.',
     1 ' The critical hi-m stringer-rolling-without-participation-of',
     1 '-the-panel-skin model has',
     1   MROLST,' axial half waves, which lies within this range.'
             ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
             IF (ISRMOD(4).EQ.0) THEN
C END FEB 2009
             CALL RECORD(3,5,EROLHS,DUMMY,MROLST,0,ICONST,CONSTR,
     1        WORDB,IFILE,IDESGN,JJJ,LENMOD,EIGMAX,IPOINC,INUMTT,
C BEG OCT 1996
     1        FSROLS(2),ICASE,0,0,VINHOF,MORCON(ILOADS,ICASE),
     1        ENDMID,0,0,0)
C BEG APR 2007
             IF (NNPRT.GE.0.AND.ILABEL.GE.9260)
     1       WRITE(IFILE,'(/,A,/,A,1P,E12.4,A,I4,A)')
     1     ' Hi-wave stringer rolling from PANDA-type theory [1B]:',
     1     ' PANDA-type buckling load factor, EROLHS(m,n,slope)=',
     1       EROLHS,'(',MROLST,',0,0)'
C BEG FEB 2009
             ENDIF
C END FEB 2009
C END APR 2007
C BEG FEB 2007
             IF (ITYPE.EQ.1.AND.NNPRT.GE.2)
     1       WRITE(IFILE,*)' AFTER RECORD20: IDESGN,INUMTT,ICONST=',
     1                                       IDESGN,INUMTT,ICONST
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2007
             IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 2222
C END OCT 1996
          ENDIF
       ENDIF
C     ELSE   (NOTE: Old "MIDEND" branch commented out.)
C      IF (ISOGRD.EQ.0)
C    1  CALL MINVAL(ROLSTR,ABIG,EIGRS2,MMRS2,IDESGN,
C    1              DOCDUM,1,R,ISTIF(1),0,5)
C      IF (ISOGRD.EQ.1)
C    1  CALL MINVAL(ROLSTR,B0/0.866,EIGRS2,MMRS2,IDESGN,
C    1              DOCDUM,1,R,ISTIF(1),0,6)
C      CALL RECORD(2,5,EIGRS2,DUMMY,MMRS2,0,ICONST,CONSTR,
C    1       WORDB,IFILE,IDESGN,JJJ,LENMOD,EIGMAX,IPOINC,INUMTT,1.6,
C BEG OCT 1996
C    1       ICASE,0,0,VINHOF,MORCON(ILOADS,ICASE),ENDMID,0,0,0)
C      IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 2222
C END OCT 1996
C     ENDIF (NOTE: end of old, commented-out, MIDEND branch.)
C END MAR 1996
  390 CONTINUE    
C BEG JUN 1996
      EFOUND = 0.
C END JUN 1996
C BEG MAY 1997
      IF (ISANDS.EQ.0.AND.ISAND.EQ.1) GO TO 395
C END MAY 1997
      IF (NPARTR.EQ.0) GO TO 395
      IF (ISTIF(2).GE.4.OR.FSGEN.EQ.0.0) GO TO 395
      IF (IDESGN.EQ.0) TOTDIF(2,MIDEND) = TOTR-TOTPR
      IF (TOTDIF(2,MIDEND).GT.0.0) GO TO 395
C BEG JUN 1999
C     IF (IWEAK.EQ.0.AND.ATRING.AND.ICASE.EQ.1) GO TO 400
      IF (IWEAK.EQ.0.AND.ISTIF(2).EQ.0.AND.ICASE.EQ.1) GO TO 400
C END JUN 1999
C BEG MAR 1997
      IF (NNPRT.GE.2) THEN
         WRITE(IFILE,'(/,A,1P,2E12.4)')
     1 '   RING   ROLLING, LOAD SET A+B Nx: WEB, FLANGE=',
     1   RESLTR(1),RESLTR(2)
         WRITE(IFILE,'(A,1P,2E12.4)')
     1 '   RING   ROLLING, LOAD SET B   Nx: WEB, FLANGE=',
     1   RPRER(1),RPRER(2)
      ENDIF
C END MAR 1997
C BEG MAR 1996
C  FIRST DO THE LO-CIRC. WAVENUMBER RING ROLLING, NO SKIN PARTICIP.
C BEG OCT 1998
      IF (NNPRT.GE.2) WRITE(IFILE,'(/,A)')
     1' Lo-circ. wave ring rolling without skin participation'
C END OCT 1998
      CALL MINVAL(ROLRNG,BBIG,EIGRLL(3),KWAVES(2,3),IDESGN,
C BEG OCT 1996
C BEG JUN 2004
     1            DOCRNG(1),1,GTY(1,3),TY(3),IREDUC,RESLTR(1),
     1            R,ISTIF(2),0,7)
C END JUN 2004
C END OCT 1996
C BEG JUN 2004
      IF (NNPRT.GE.2)
     1 WRITE(8,'(A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4,A,I5)')
     1' Prebuckling resultant, RESLTR(1)=',RESLTR(1),
     1' Buckling load factor, EIGRLL(3)=',EIGRLL(3),
     1' Number of halfwaves over the circ. distance, BBIG=',BBIG,
     1'; KWAVES(2,3)=',KWAVES(2,3)
C END JUN 2004
C23456789012345678901234567890123456789012345678901234567890123456789012
      IF (IDESGN.EQ.0) THEN
C BEG JAN 2006
C        FSHIGH = 1.6
         FSHIGH = 1.4
C END JAN 2006
         FSLOW  = 1.2
         DOCHI  = 100.
         DOCLO  = 10.
C        FSROLR(1) = FSHIGH
         IF (ABS(DOCRNG(1)).LE.DOCLO) FSROLR(1) = FSHIGH
         IF (ABS(DOCRNG(1)).GE.DOCHI) FSROLR(1) = FSLOW
         IF (ABS(DOCRNG(1)).GT.DOCLO.AND.ABS(DOCRNG(1)).LT.DOCHI) THEN
            BDOC = (FSHIGH - FSLOW)/(DOCLO - DOCHI)
            ADOC = FSHIGH - BDOC*DOCLO
            FSROLR(1) = ADOC + BDOC*DOCRNG(1)
C           IF (FSROLR(1).LE.0.) FSROLR(1) = FSHIGH
         ENDIF
      ENDIF
      IF (NNPRT.GE.2)
     1   WRITE(IFILE,'(A,I5,1P2E12.4)')
     1     '   RING   ROLLING: KWAVES(2,3),DOCRNG(1),FSROLR(1)=',
     1                         KWAVES(2,3),DOCRNG(1),FSROLR(1)
      IF (KWAVES(2,3).GE.NMINRG.AND.KWAVES(2,3).LE.NMAXRG
     1 .AND.KWAVES(2,3).NE.0.AND.IRNIDX.EQ.1.AND.IDESGN.EQ.0
C BEG NOV 2003
     1 .AND.ILABEL.GE.9260) THEN
C END NOV 2003
         IRNMOD(3) = 1
         IF (NNPRT.GE.0) WRITE(IFILE,
C        IF (NNPRT.GE.1) WRITE(IFILE,
     1     '(/,A,/,A,/,A,/,A,/,A,I5,A,I5,A,/,A,A,I5,/,A)')
     1 ' Ring rolling without participation of the panel skin',
     1 ' is not recorded as a margin because this type of buckling',
     1 ' has been superseded by the results from the discretized',
     1 ' "skin"-ring module model, for which buckling load factors',
     1 ' have been computed in the range from n = ',NMINRG,' to n = ',
     1   NMAXRG,' circ. halfwaves.',
     1 ' The critical ring-rolling-without-participation-of-the-panel',
     1 '-skin model has',
     1   KWAVES(2,3),' circ. half waves, which lies within this range.'
      ENDIF
C BEG APR 2007
      IF (IRNMOD(3).EQ.0) THEN
      CALL RECORD(2,6,EIGRLL(3),DUMMY,0,KWAVES(2,3),ICONST,CONSTR,WORDB,
     1       IFILE,IDESGN,JJJ,LENMOD,EIGMAX,IPOINC,INUMTT,FSROLR(1),
     1       ICASE,0,0,VINHOF,MORCON(ILOADS,ICASE),ENDMID,0,0,0)
C BEG APR 2007
       IF (NNPRT.GE.0.AND.ILABEL.GE.9260)
     1 WRITE(IFILE,'(/,A,/,A,1P,E12.4,A,I4,A)')
     1 ' Ring rolling from PANDA-type theory [1B]:',
     1 ' PANDA-type buckling load factor, EIGRLL(3)(m,n,slope)=',
     1   EIGRLL(3),'(0,',KWAVES(2,3),',0)'
      ENDIF
C END APR 2007
C BEG FEB 2007
      IF (ITYPE.EQ.1.AND.NNPRT.GE.2)
     1 WRITE(IFILE,*)' AFTER RECORD21: IDESGN,INUMTT,ICONST=',
     1                                 IDESGN,INUMTT,ICONST
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2007
      IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 2222
C
C BEG "FSROLR(1).GT.FSLOW" BRANCH...
      IF (FSROLR(1).GT.FSLOW) THEN
C  NOW DO THE HIGH-CIRC. WAVENUMBER RING ROLLING, NO SKIN PARTICIP.
         IF (IDESGN.EQ.0) NSTART = BBIG/HH(2)
C BEG OCT 1998
         IF (NNPRT.GE.2) WRITE(IFILE,'(/,A)')
     1 ' High-circ. wave ring rolling without skin participation'
C END OCT 1998
         CALL MINVAL(ROLRNG,BBIG,EROLHR,NROLRG,IDESGN,
C BEG OCT 1996
C BEG JUN 2004
     1               DOCRNG(2),NSTART,GTY(1,3),TY(3),IREDUC,RESLTR(1),
     1               R,ISTIF(2),0,8)
C END JUN 2004
C END OCT 1996
C BEG JUN 2004
         IF (NNPRT.GE.2)
     1    WRITE(8,'(A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4,A,I5)')
     1   ' Prebuckling resultant, RESLTR(1)=',RESLTR(1),
     1   ' Buckling load factor, EROLHR=',EROLHR,
     1   ' Number of halfwaves over the circ. distance, BBIG=',BBIG,
     1   '; NROLRG=',NROLRG
C END JUN 2004
C        IF (IDESGN.EQ.0) FSROLR(2) = FSHIGH
C BEG "NROLRG.GT.(KWAVES(2,3)+1)" BRANCH...
         IF (NROLRG.GT.(KWAVES(2,3)+1)) THEN
            IF (IDESGN.EQ.0) THEN
               IF (ABS(DOCRNG(2)).LE.DOCLO) FSROLR(2) = FSHIGH
               IF (ABS(DOCRNG(2)).GE.DOCHI) FSROLR(2) = FSLOW
               IF (ABS(DOCRNG(2)).GT.DOCLO.AND.ABS(DOCRNG(2)).LT.DOCHI)
     1         THEN
                  BDOC = (FSHIGH - FSLOW)/(DOCLO - DOCHI)
                  ADOC = FSHIGH - BDOC*DOCLO
                  FSROLR(2) = ADOC + BDOC*DOCRNG(2)
               ENDIF
C              IF (FSROLR(2).LE.0.) FSROLR(2) = FSHIGH
            ENDIF
            IF (JJJ.EQ.0.AND.NNPRT.GE.3.AND.ITYPE.EQ.1)
     1      WRITE(IFILE,'(A,2I5,1P2E12.4)')
     1     ' RING ROLLING: NROLRG,KWAVES(2,3),DOCRNG(2),FSROLR(2)=',
     1                     NROLRG,KWAVES(2,3),DOCRNG(2),FSROLR(2)
C BEG OCT 1998
            IF (NROLRG.GE.NMINRG.AND.NROLRG.LE.NMAXRG
     1       .AND.NROLRG.NE.0.AND.IRNIDX.EQ.1.AND.IDESGN.EQ.0.AND.
C BEG NOV 2003
     1       ILABEL.GE.9260) THEN
C END NOV 2003
               IRNMOD(4) = 1
               IF (NNPRT.GE.0) WRITE(IFILE,
C              IF (NNPRT.GE.1) WRITE(IFILE,
     1           '(/,A,/,A,/,A,/,A,/,A,I5,A,I5,A,/,A,A,I5,/,A)')
     1 ' Hi-wave ring rolling without participation of the panel skin',
     1 ' is not recorded as a margin because this type of buckling',
     1 ' has been superseded by the results from the discretized',
     1 ' "skin"-ring module model, for which buckling load factors',
     1 ' have been computed in the range from n = ',NMINRG,' to n = ',
     1   NMAXRG,' circ. halfwaves.',
     1 ' The critical hi-wave-ring-rolling-without-participation-of',
     1 '-the-panel-skin model has',
     1   NROLRG,' circ. half waves, which lies within this range.'
            ENDIF
C BEG APR 2007
            IF (IRNMOD(4).EQ.0) THEN
              CALL RECORD(3,6,EROLHR,DUMMY,0,NROLRG,ICONST,CONSTR,WORDB,
     1         IFILE,IDESGN,JJJ,LENMOD,EIGMAX,IPOINC,INUMTT,FSROLR(2),
     1         ICASE,0,0,VINHOF,MORCON(ILOADS,ICASE),ENDMID,0,0,0)
C BEG APR 2007
              IF (NNPRT.GE.0.AND.ILABEL.GE.9260)
     1        WRITE(IFILE,'(/,A,/,A,1P,E12.4,A,I4,A)')
     1      ' Hi-wave ring rolling from PANDA-type theory [1B]:',
     1      ' PANDA-type buckling load factor, EROLHR(m,n,slope)=',
     1        EROLHR,'(0,',NROLRG,',0)'
            ENDIF
C END APR 2007
C BEG FEB 2007
            IF (ITYPE.EQ.1.AND.NNPRT.GE.2)
     1      WRITE(IFILE,*)' AFTER RECORD22: IDESGN,INUMTT,ICONST=',
     1                                      IDESGN,INUMTT,ICONST
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2007
            IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 2222
         ENDIF
C END "NROLRG.GT.(KWAVES(2,3)+1)" BRANCH.
      ENDIF
C END "FSROLR(1).GT.FSLOW" BRANCH.
C END MAR 1996
  395 CONTINUE    
C BEG JUN 1996
      EFOUND = 0.
C END JUN 1996
      EIGRLL(4) = 10.E16
      NAXI = 0    
C BEG MAY 1997
      IF (ISANDS.EQ.0.AND.ISAND.EQ.1) GO TO 400
C END MAY 1997
      IF (NPARTR.EQ.0.OR.IFLAT.NE.0.OR.FSGEN.EQ.0.0) GO TO 400  
      IF (ISTIF(2).GE.4) GO TO 400
C BEG OCT 1998
      IF (NNPRT.GE.2) WRITE(IFILE,'(/,A)')
     1' Axisymmetric ring rolling without skin participation'
C END OCT 1998
C BEG MAR 1996
      CALL MINVAL(ROLRNG,BBIG,EIGRLL(4),NAXI,IDESGN, 
C BEG OCT 1996
C BEG JUN 2004
     1              DOCDUM,0,GTY(1,3),TY(3),IREDUC,RESLTR(1),
     1              R,ISTIF(2),0,9)
C END JUN 2004
C END OCT 1996
C END MAR 1996
C BEG JUN 2004
      IF (NNPRT.GE.2) WRITE(8,'(A,1P,E12.4,/,A,1P,E12.4)')
     1' Prebuckling resultant, RESLTR(1)=',RESLTR(1),
     1' Buckling load factor,  EIGRLL(4))=',EIGRLL(4)
C END JUN 2004
      CALL RECORD(2,7,EIGRLL(4),DUMMY,0,NAXI,ICONST,CONSTR,WORDB,
C BEG JAN 2006
C    1       IFILE,IDESGN,JJJ,LENMOD,EIGMAX,IPOINC,INUMTT,1.6,
     1       IFILE,IDESGN,JJJ,LENMOD,EIGMAX,IPOINC,INUMTT,1.4,
C END JAN 2006
     1       ICASE,0,0,VINHOF,MORCON(ILOADS,ICASE),ENDMID,0,0,0)
C BEG APR 2007
      IF (NNPRT.GE.0.AND.ILABEL.GE.9260)
     1WRITE(IFILE,'(/,A,/,A,1P,E12.4,A,I4,A)')
     1 ' Axisymmetric ring rolling from PANDA-type theory [1B]:',
     1 ' PANDA-type buckling load factor, EIGRLL(4)(m,n,slope)=',
     1   EIGRLL(4),'(0,',NAXI,',0)'
C END APR 2007
C BEG FEB 2007
      IF (ITYPE.EQ.1.AND.NNPRT.GE.2)
     1 WRITE(IFILE,*)' AFTER RECORD23: IDESGN,INUMTT,ICONST=',
     1                                 IDESGN,INUMTT,ICONST
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2007
      IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 2222
  400 CONTINUE    
C
C  STRINGER ROLLING DUE TO TENSILE FORCES IN OUTBOARD FLANGE..
C
C     IF (ISTIF(1).NE.1.AND.ISTIF(1).NE.2) GO TO 405
C     IF (MIDEND.NE.1) GO TO 405
C     IF (EPSLD4.LE.0.0) GO TO 405
C     EIGRL5 = 10.E16
C     NAXI5 = 0
C     RSAVE = R
C     R = 1./EPSLD4
C BEG AUG 1992
C     CALL MINVAL(ROLSTR,ABIG,EIGRL5,NAXI5,IDESGN,R,ISTIF(1),0,10)
C END AUG 1992
C     CALL RECORD(2,5,EIGRL5,DUMMY,0,NAXI,ICONST,CONSTR,WORDB,
C BEG 26 JAN 1989
C    1       IFILE,IDESGN,JJJ,LENMOD,EIGMAX,IPOINC,INUMTT,1.2,
C BEG OCT 1996
C    1       ICASE,0,0,VINHOF,MORCON(ILOADS,ICASE),ENDMID,0,0,0)
C     IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 2222
C END OCT 1996
C END 26 JAN 1989
C     R = RSAVE
C 405 CONTINUE
C
C*********************************************************************
C END SECTION INVOLVING STIFFENER ROLLING WITHOUT SKIN PARTICIPATION.
C*********************************************************************
C
  410 CONTINUE
C
C********************************************************************
C BEGIN SECTION ON BUCKLING OF STIFFENER WEBS
C********************************************************************
C
C  NEXT, GET LOCAL BUCKLING OF STIFFENER WEBS UNDER COMBINED LOADING.
C
C BEG FEB 1995
C     IF (NPARTS.GE.2) THEN
      IWEB = 3
      IF (ISTIF(1).EQ.5) IWEB = 2
      IF (IDESGN.EQ.0) THEN
         CX11R(IWEB) = 1.
         IF (CX110(IWEB).GT.0.0) CX11R(IWEB) = CX(1,1,IWEB)/CX110(IWEB)
      ENDIF
C BEG MAY 1997
      IF (ISANDS.EQ.0.AND.ISAND.EQ.1) GO TO 420
C END MAY 1997
C BEGIN "NPARTS.GE.2.AND.CX11R(IWEB).GT.0.3, etc." BRANCH...
      IF (NPARTS.GE.2.AND.CX11R(IWEB).GT.0.3
     1               .AND.(IWEBL1.EQ.0.OR.EKOISV.GE.1.0)) THEN
C END FEB 1995
       WIDTHH = HH(1)
       IF (ISTIF(1).EQ.4) WIDTHH =SQRT(HH(1)**2 +(.5*(W2(1)-WW(1)))**2)
       IWEB = 3
       SHMULT = 1.0
       IF (ISTIF(1).EQ.5) THEN
          IWEB = 2
          SHMULT = -1.0
          WIDTHH = SQRT(HH(1)**2 + .25*B0**2)
       ENDIF
       RSUM1 = RESEIG(1,IWEB,1) + FLOAT(IADDFC)*0.5*DELFCE(IWEB,1)
       RSUM1M= MIN(RSUM1,RWBEIG(1))
C BEG JULY 1995
       RSUM3 = FLOAT(IADDFC)*ABS(DELWEB(1))
       IF (RESEIG(3,IWEB,1).NE.0.) RSUM3 = RESEIG(3,IWEB,1)*
     1          (1.+FLOAT(IADDFC)*ABS(DELWEB(1))/ABS(RESEIG(3,IWEB,1)))
C END JULY 1995
C BEG OCT 1995
C      WRITE(IFILE,*)' IPRELM,MIDEND,RSUM1,RWBEIG(1),RSUM1M=',
C    1                 IPRELM,MIDEND,RSUM1,RWBEIG(1),RSUM1M
C END OCT 1995
C BEG JUN 1996
       EFOUND = 0.
       IF (ISANDW(IWEB,1).EQ.1.OR.ISANDW(IWEB,1).EQ.NLAYER(IWEB,1))
     1  EFOUND = WFOUND(IWEB,1)
C END JUN 1996
C BEGIN "MIDEND.EQ.1" BRANCH...
       IF (MIDEND.EQ.1) THEN
C BEG FEB 1996
         IF (ISTIF(1).EQ.5) THEN
C BEG OCT 1998
         IF (NNPRT.GE.2) WRITE(IFILE,'(/,A)')
     1 ' Stringer web buckling from GENSTB (truss-core sandwich wall)'
C END OCT 1998
         CALL GENSTB(1,A0,WIDTHH,RSUM1M,RESEIG(2,IWEB,1),SHMULT*
C END FEB 1996
     1   RSUM3,RWBTOT(1),RESFIX(2,IWEB,1),MMWEB(1),NNWEB(1),
     1   TSTWEB(1),CSLOPW(1),EIGWEB(1),IDESGN,EIG1,CX(1,1,IWEB),
     1   TX(IWEB),TX(IWEB),GTX(1,IWEB),IREDUC,0,IFILE,ITUTOR,JJJ,ISTIF,
     1   RESLTS,RPRES,1,10.E10,0.,FFLAT(10,MIDEND,1),1,
     1   1,IAGAIN(10,MIDEND),FNEFF(10,MIDEND),7285,EIGRAT(10),
     1   RBB0(10),ILOADS,ICASE)
C BEG FEB 1996
         IF (IRESTY.EQ.1) GO TO 2222
         ENDIF
C END FEB 1996
C
         IF (ISTIF(1).NE.5) THEN
C BEG OCT 1998
            IF (NNPRT.GE.2) WRITE(IFILE,'(/,A)')
     1    ' Stringer web buckling from GENSTB'
C END OCT 1998
            IF (ISOGRD.EQ.1) THEN
               WBVM1 = MIN(WBEIG(1,1,1),WBEIG(1,2,1))
               WBVM1 = MIN(WBVM1,WBEIG(1,3,1))
               WBVM2 = MIN(WBEIG(2,1,1),WBEIG(2,2,1))
               WBVM2 = MIN(WBVM2,WBEIG(2,3,1))
               WBVMIN = MIN(WBVM1,WBVM2)
               IWBMIN = 1
C BEG DEC 2000
               JSTIFF = JSTIFS
               IF (JSTIFF.EQ.0) JSTIFF = 1
               IF (IPRELM.NE.0) JSTIFF = 1
C END DEC 2000
               IF (WBVMIN.NE.0.) DIFMIN =ABS(WBVM1 -WBVMIN)/ABS(WBVMIN)
               IF (WBVMIN.NE.0.) THEN
                  IF (DIFMIN.LT.0.0001) THEN
                     IWBMIN = 1
                     DO 415 I = 1,3
                        J = I
                        DIFMN2 = ABS(WBVM1 - WBEIG(1,I,1))/ABS(WBVMIN)
                        IF (DIFMN2.LT.0.0001) GO TO 416
  415                CONTINUE
  416                CONTINUE
C BEG DEC 2000
                     IF (IPRELM.NE.0) JSTIFF = J
C END DEC 2000
                  ELSE
                     IWBMIN = 2
                     DO 417 I = 1,3
                        J = I
                        DIFMN2 = ABS(WBVM2 - WBEIG(2,I,1))/ABS(WBVMIN)
                        IF (DIFMN2.LT.0.0001) GO TO 418
  417                CONTINUE
  418                CONTINUE
C BEG DEC 2000
                     IF (IPRELM.NE.0) JSTIFF = J
C END DEC 2000
                  ENDIF
               ENDIF
C BEG DEC 2000
               RSUM1 = RSEIG(1,IWEB,JSTIFF)
     1                       + FLOAT(IADDFC)*0.5*DELISO(IWEB,JSTIFF)
C END DEC 2000
C BEG JULY 1995
               RSUM3 = FLOAT(IADDFC)*ABS(DELWEB(1))
               IF (RSEIG(3,IWEB,JSTIFF).NE.0.)
     1            RSUM3 = RSEIG(3,IWEB,JSTIFF)*(1.+FLOAT(IADDFC)
     1                     *ABS(DELWEB(1))/ABS(RSEIG(3,IWEB,JSTIFF)))
C END JULY 1995
            ELSE
               JSTIFF = 1
               IWBMIN = 2
               WBVMIN =MIN(WBEIG(1,1,1),WBEIG(2,1,1))
               IF (WBVMIN.NE.0.) THEN
                  DIFMIN = ABS(WBVMIN - WBEIG(1,1,1))/ABS(WBVMIN)
                  IF (DIFMIN.LT.0.0001) IWBMIN = 1
               ENDIF
            ENDIF
            WBFMIN = WBTOT(IWBMIN,JSTIFF,1)
C BEG DEC 1998
            IF (IPRELM.NE.0) THEN
               WBVMIN = 0.5*(WBEIG(1,JSTIFF,1) + WBEIG(2,JSTIFF,1))
               WBFMIN = 0.5*(WBTOT(1,JSTIFF,1) + WBTOT(2,JSTIFF,1))
            ENDIF
C END DEC 1998
C BEG OCT 1995
C           RSUM1M = MIN(WBVMIN,RSUM1)
            IF (IPRELM.NE.0.OR.ISOGRD.EQ.1) RSUM1M = MIN(WBVMIN,RSUM1)
            IF (IPRELM.EQ.0.AND.ISOGRD.EQ.1) RSUM1M = RSUM1
C           WRITE(IFILE,*)' RSUM1,RSUM1M,RSUM3,WBFMIN=',
C    1                      RSUM1,RSUM1M,RSUM3,WBFMIN
C END OCT 1995
C BEG FEB 1996
            IF (ISOGRD.EQ.0) THEN
            CALL GENSTB(1,A0,WIDTHH,RSUM1M,RESEIG(2,IWEB,1),SHMULT*
C END FEB 1996
     1      RSUM3,WBFMIN,RESFIX(2,IWEB,1),MMWEB(1),NNWEB(1),
     1      TSTWEB(1),CSLOPW(1),EIGWEB(1),IDESGN,EIG1,CX(1,1,IWEB),
     1      TX(IWEB),TX(IWEB),GTX(1,IWEB),IREDUC,0,IFILE,ITUTOR,JJJ,
     1      ISTIF,RESLTS,RPRES,1,10.E10,0.,FFLAT(10,MIDEND,1),1,
     1      1,IAGAIN(10,MIDEND),FNEFF(10,MIDEND),7290,EIGRAT(10),
     1      RBB0(10),ILOADS,ICASE)
C BEG FEB 1996
            IF (IRESTY.EQ.1) GO TO 2222
            ENDIF
C
            IF (ISOGRD.EQ.1) THEN
            CALL GENSTB(1,B0/0.866,WIDTHH,
C END FEB 1996
     1      RSUM1M,RSEIG(2,IWEB,JSTIFF),SHMULT*
     1      RSUM3,WBFMIN,RSTOT(2,IWEB,JSTIFF),
     1      MMWEB(1),NNWEB(1),
     1      TSTWEB(1),CSLOPW(1),EIGWEB(1),IDESGN,EIG1,CX(1,1,IWEB),
     1      TX(IWEB),TX(IWEB),GTX(1,IWEB),IREDUC,0,IFILE,ITUTOR,JJJ,
     1      ISTIF,RESLTS,RPRES,1,10.E10,0.,FFLAT(10,MIDEND,1),1,
     1      1,IAGAIN(10,MIDEND),FNEFF(10,MIDEND),7295,EIGRAT(10),
     1      RBB0(10),ILOADS,ICASE)
C BEG FEB 1996
            IF (IRESTY.EQ.1) GO TO 2222
            ENDIF
C END FEB 1996
         ENDIF
C
C BEG MAY 1997
C        IF (IKNOCK.EQ.1.AND.RSUM1M.LT.0.0.AND.ISTIF(1).NE.5) THEN
C BEGIN "IKNOCK.EQ.1.AND.ISTIF(1).NE.5" BRANCH...
C23456789012345678901234567890123456789012345678901234567890123456789012
         IF (IKNOCK.EQ.1.AND.ISTIF(1).NE.5) THEN
C  GET KNOCKDOWN FOR WEB BUCKLING (ONLY FOR WEB AS AN INTERIOR SEGMENT).
C
            FKNOC5 = 1.0
            EIGDUM = 10.E+16
            IF (ISOGRD.EQ.0.AND.SHMULT*RSUM3.NE.0.0) THEN
C BEG OCT 1998
              IF (NNPRT.GE.2) WRITE(IFILE,'(/,A)')
     1      ' Stringer web buckling from GENSTB'
C END OCT 1998
              CALL GENSTB(1,A0,WIDTHH,0.,0.,SHMULT*RSUM3,
     1        WBFMIN,0.,
     1        MDUM,NDUM,TDUM,CSDUM,EIGDUM,IDESGN,EIG1,CX(1,1,IWEB),
     1        TX(IWEB),TX(IWEB),GTX(1,IWEB),IREDUC,0,IFILE,ITUTOR,JJJ,
     1        ISTIF,RESLTS,RPRES,1,10.E10,0.,FDUM,1,1,IAGDUM,FNEDUM,
     1        7297,EIGRDM,RBB0DM,ILOADS,ICASE)
              IF (IRESTY.EQ.1) GO TO 2222
            ENDIF
C
            IF (ISOGRD.EQ.1.AND.SHMULT*RSUM3.NE.0.0) THEN
C BEG OCT 1998
              IF (NNPRT.GE.2) WRITE(IFILE,'(/,A)')
     1      ' Stringer web buckling from GENSTB (isogrid wall)'
C END OCT 1998
              CALL GENSTB(1,B0/0.866,WIDTHH,0.,0.,SHMULT*RSUM3,
     1        WBFMIN,0.,
     1        MDUM,NDUM,TDUM,CSDUM,EIGDUM,IDESGN,EIG1,CX(1,1,IWEB),
     1        TX(IWEB),TX(IWEB),GTX(1,IWEB),IREDUC,0,IFILE,ITUTOR,JJJ,
     1        ISTIF,RESLTS,RPRES,1,10.E10,0.,FDUM,1,1,IAGDUM,FNEDUM,
     1        7298,EIGRDM,RBB0DM,ILOADS,ICASE)
              IF (IRESTY.EQ.1) GO TO 2222
            ENDIF
C
            FKNOC5 = 1. - 1./EIGDUM
            EIGDMP = EIGDUM
            IF (FKNOC5.LE.0.05) FKNOC5 = 0.05
            FKNOX5 = 1.0
C BEGIN "RSUM1M.LT.0.0" BRANCH...
            IF (RSUM1M.LT.0.0) THEN
               CALL BOSCIJ(CX(1,1,IWEB),CDUM)
               IF (ISOGRD.EQ.0) THEN
C BEG OCT 1998
                 IF (NNPRT.GE.2) WRITE(IFILE,'(/,A)')
     1         ' Stringer web buckling from GENSTB'
C END OCT 1998
                 CALL GENSTB(1,A0,WIDTHH,RSUM1M,0.,0.,
     1           WBFMIN,0.,
     1           MDUM,NDUM,TDUM,CSDUM,EIGDUM,IDESGN,EIG1,CDUM,TX(IWEB),
     1           TX(IWEB),GTX(1,IWEB),IREDUC,0,IFILE,ITUTOR,JJJ,ISTIF,
     1           RESLTS,RPRES,1,10.E10,0.,FDUM,1,1,IAGDUM,FNEDUM,
     1           7300,EIGRDM,RBB0DM,ILOADS,ICASE)
                 IF (IRESTY.EQ.1) GO TO 2222
               ENDIF
C
C23456789012345678901234567890123456789012345678901234567890123456789012
               IF (ISOGRD.EQ.1) THEN
C BEG OCT 1998
                 IF (NNPRT.GE.2) WRITE(IFILE,'(/,A)')
     1         ' Stringer web buckling from GENSTB (isogrid wall)'
C END OCT 1998
                 CALL GENSTB(1,B0/0.866,WIDTHH,RSUM1M,0.,0.,
     1           WBFMIN,0.,
     1           MDUM,NDUM,TDUM,CSDUM,EIGDUM,IDESGN,EIG1,CDUM,TX(IWEB),
     1           TX(IWEB),GTX(1,IWEB),IREDUC,0,IFILE,ITUTOR,JJJ,ISTIF,
     1           RESLTS,RPRES,1,10.E10,0.,FDUM,1,1,IAGDUM,FNEDUM,
     1           7305,EIGRDM,RBB0DM,ILOADS,ICASE)
                 IF (IRESTY.EQ.1) GO TO 2222
               ENDIF
C
               FKNOX5 = EIGWEB(1)/EIGDUM
               IF (FKNOX5.GT.1.0) FKNOX5 = 1.0
            ENDIF
C END "RSUM1M.LT.0.0" BRANCH.
            FKNOCK(5) = 1.0
            IF (FKNOX5.GE.1.) FKNOCK(5) = FKNOC5
            IF (FKNOX5.LT.1.) FKNOCK(5) = MAX(FKNOX5,FKNOC5)
            IF (FKNOC5.GE.0.98) FKNOCK(5) = FKNOX5
            IF (FKNOCK(5).GT.1.0) FKNOCK(5) = 1.0
C23456789012345678901234567890123456789012345678901234567890123456789012
            IF (NNPRT.GE.2) WRITE(IFILE,'(A,/,A,/,13X,1P,4E12.4)')
     1    ' STRINGER WEB SHEAR BUCKLING KNOCKDOWN FACTORS:',
     1    '                  EIGSHR,    FKNOC5,    FKNOX5,   FKNOCK(5)',
     1                       EIGDMP,    FKNOC5,    FKNOX5,   FKNOCK(5)
C END MAY 1997
C BEG JUN 1996
            IF (NPARTR.LT.2) GO TO 490
C END JUN 1996
            GO TO 420
         ENDIF
C END "IKNOCK.EQ.1.AND.ISTIF(1).NE.5" BRANCH.
         FACSAF = FSBSTR
C BEG OCT 1995
C        IF (ISTIF(1).EQ.5)
C BEG DEC 2000
         JSTIFK = JSTIF2
         JSTIF2 = JSTIFF
C END DEC 2000
C BEG JUL 2010
          IF (MMWEB(1).GE.NMINSR.AND.MMWEB(1).LE.NMAXSR
     1     .AND.MMWEB(1).NE.0.AND.ISRIDX.EQ.1.AND.IDESGN.EQ.0
     1     .AND.ILABEL.GE.9260.AND.IHILOC.NE.0.AND.ISTIF(1).EQ.5) THEN
          ISRMOD(3) = 1
          IF (NNPRT.GE.0) WRITE(IFILE,
     1    '(/,A,/,A,/,A,/,A,/,A,I5,A,I5,A,/,A,I5,/,A)')
     1 ' Buckling of the web of the truss-core sandwich',
     1 ' is not recorded as a margin because this type of buckling',
     1 ' has been superseded by the results from the discretized',
     1 ' skin-stringer module model, for which buckling load factors',
     1 ' have been computed in the range from m = ',NMINSR,' to m = ',
     1   NMAXSR,' axial halfwaves.',
     1 ' The critical buckling load from the PANDA-type theory has',
     1   MMWEB(1),' axial half waves, which lies within this range.'
          ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG NOV 2011
C         IF (ISRMOD(3).EQ.0)
C END JUL 2010
          IF (ISTIF(1).EQ.5.AND.ISRMOD(3).EQ.0)
     1   CALL RECORD(1,8,EIGWEB(1),CSLOPW(1),MMWEB(1),NNWEB(1),ICONST,
     1      CONSTR,WORDB,IFILE,IDESGN,JJJ,LENMOD,EIGMAX,IPOINC,INUMTT,
     1      FACSAF,ICASE,0,0,VINHOF,MORCON(ILOADS,ICASE),ENDMID,0,0,0)
C
          IF (ISTIF(1).NE.5)
     1   CALL RECORD(1,8,EIGWEB(1),CSLOPW(1),MMWEB(1),NNWEB(1),ICONST,
     1      CONSTR,WORDB,IFILE,IDESGN,JJJ,LENMOD,EIGMAX,IPOINC,INUMTT,
     1      FACSAF,ICASE,0,0,VINHOF,MORCON(ILOADS,ICASE),ENDMID,0,0,0)
C END NOV 2011
C BEG APR 2007
         IF (NNPRT.GE.0.AND.ILABEL.GE.9260)
     1   WRITE(IFILE,'(/,A,/,A,1P,E12.4,A,I4,A,I4,A,1P,E10.2,A)')
     1 ' Stringer web buckling from PANDA-type theory[1B]:',
     1 ' PANDA-type buckling load factor, EIGWEB(1)(m,n,slope)=',
     1   EIGWEB(1),'(',MMWEB(1),',',NNWEB(1),',',CSLOPW(1),')'
C END APR 2007
C BEG FEB 2007
         IF (ITYPE.EQ.1.AND.NNPRT.GE.2)
     1   WRITE(IFILE,*)' AFTER RECORD24: IDESGN,INUMTT,ICONST=',
     1                                   IDESGN,INUMTT,ICONST
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2007
C BEG DEC 2000
         JSTIF2 = JSTIFK
C END DEC 2000
         IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 2222
C END OCT 1996
C END "MIDEND.EQ.1" BRANCH.
       ELSE
C BEGIN "MIDEND.NE.1" BRANCH...
C BEG OCT 1998
         IF (NNPRT.GE.2) WRITE(IFILE,'(/,A)')
     1 ' Stringer web buckling from GENSTB'
C END OCT 1998
         CALL GENSTB(1,A0,WIDTHH,RSUM1M,RESEIG(2,IWEB,1),SHMULT*
     1   RSUM3,RWBTOT(1),RESFIX(2,IWEB,1),MMWB2,NNWB2,
     1   TSTWB2,CSLPW2,EIGWB2,IDESGN,EIG1,CX(1,1,IWEB),
     1   TX(IWEB),TX(IWEB),GTX(1,IWEB),IREDUC,0,IFILE,ITUTOR,JJJ,ISTIF,
     1   RESLTS,RPRES,1,10.E10,0.,FFLAT(10,MIDEND,1),1,
     1   1,IAGAIN(10,MIDEND),FNEFF(10,MIDEND),7310,EIGRAT(10),
     1   RBB0(10),ILOADS,ICASE)
C BEG FEB 1996
         IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
C
         FACSAF = 1.0
C BEG DEC 2000
         JSTIFK = JSTIF2
         JSTIF2 = JSTIFF
C END DEC 2000
C BEG JUL 2010
          IF (MMWB2.GE.NMINSR.AND.MMWB2.LE.NMAXSR
     1     .AND.MMWB2.NE.0.AND.ISRIDX.EQ.1.AND.IDESGN.EQ.0
     1     .AND.ILABEL.GE.9260.AND.IHILOC.NE.0.AND.ISTIF(1).EQ.5) THEN
          ISRMOD(4) = 1
          IF (NNPRT.GE.0) WRITE(IFILE,
     1    '(/,A,/,A,/,A,/,A,/,A,I5,A,I5,A,/,A,I5,/,A)')
     1 ' Buckling of the web of the truss-core sandwich',
     1 ' is not recorded as a margin because this type of buckling',
     1 ' has been superseded by the results from the discretized',
     1 ' skin-stringer module model, for which buckling load factors',
     1 ' have been computed in the range from m = ',NMINSR,' to m = ',
     1   NMAXSR,' axial halfwaves.',
     1 ' The critical buckling load from the PANDA-type theory has',
     1   MMWB2,' axial half waves, which lies within this range.'
          ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG NOV 2011
C         IF (ISRMOD(4).EQ.0)
C END JUL 2010
         IF (ISTIF(1).EQ.5.AND.ISRMOD(4).EQ.0)
     1   CALL RECORD(1,8,EIGWB2,CSLPW2,MMWB2,NNWB2,ICONST,
     1      CONSTR,WORDB,IFILE,IDESGN,JJJ,LENMOD,EIGMAX,IPOINC,INUMTT,
     1      FACSAF,ICASE,0,0,VINHOF,MORCON(ILOADS,ICASE),ENDMID,0,0,0)
C
         IF (ISTIF(1).NE.5)
     1   CALL RECORD(1,8,EIGWB2,CSLPW2,MMWB2,NNWB2,ICONST,
     1      CONSTR,WORDB,IFILE,IDESGN,JJJ,LENMOD,EIGMAX,IPOINC,INUMTT,
     1      FACSAF,ICASE,0,0,VINHOF,MORCON(ILOADS,ICASE),ENDMID,0,0,0)
C END NOV 2011
C BEG APR 2007
         IF (NNPRT.GE.0.AND.ILABEL.GE.9260)
     1   WRITE(IFILE,'(/,A,/,A,1P,E12.4,A,I4,A,I4,A,1P,E10.2,A)')
     1 ' Stringer web buckling from PANDA-type theory[1B]:',
     1 ' PANDA-type buckling load factor, EIGWB2(m,n,slope)=',
     1   EIGWB2,'(',MMWB2,',',NNWB2,',',CSLPW2,')'
C END APR 2007
C BEG FEB 2007
         IF (ITYPE.EQ.1.AND.NNPRT.GE.2)
     1   WRITE(IFILE,*)' AFTER RECORD25: IDESGN,INUMTT,ICONST=',
     1                                   IDESGN,INUMTT,ICONST
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2007
C BEG DEC 2000
         JSTIF2 = JSTIFK
C END DEC 2000
         IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 2222
C END OCT 1996
       ENDIF
C END "MIDEND" BRANCH.
C BEG OCT 1996
       FNXHAT(IWEB,1) = RSUM1M
C END OCT 1996
      ENDIF
C END "NPARTS.GE.2.AND.CX11R(IWEB).GT.0.3, etc." BRANCH...
C
  420 CONTINUE
C BEG MAY 1997
      IF (ISANDS.EQ.0.AND.ISAND.EQ.1) GO TO 490
C END MAY 1997
C BEGIN "NPARTR.GE.2.AND.FSGEN.GT.0.0" BRANCH...
      IF (NPARTR.GE.2.AND.FSGEN.GT.0.0) THEN
         WIDTHH = HH(2)
         IF (ISTIF(2).EQ.4) WIDTHH =SQRT(HH(2)**2+(.5*(W2(2)-WW(2)))**2)
         IWEB = 3
         SHMULT = 1.0
         IF (ISTIF(2).EQ.5) THEN
            IWEB = 2
            SHMULT = -1.0
            WIDTHH = SQRT(HH(2)**2 + .25*A0**2)
         ENDIF
         FLENG = B0
         IF (IRFREE.EQ.1) FLENG = BBIG
         IWBMIN = 2
         WBVMIN = MIN(WBEIG(1,4,2),WBEIG(2,4,2))
         IF (WBVMIN.NE.0.) THEN
            DIFMIN = ABS(WBVMIN - WBEIG(1,4,2))/ABS(WBVMIN)
            IF (DIFMIN.LT.0.0001) IWBMIN = 1
         ENDIF
         WBFMIN = WBTOT(IWBMIN,4,2)
C BEG DEC 1998
         IF (IPRELM.NE.0) THEN
            WBVMIN = 0.5*(WBEIG(1,4,2) + WBEIG(2,4,2))
            WBFMIN = 0.5*(WBTOT(1,4,2) + WBTOT(2,4,2))
         ENDIF
C END DEC 1998
         RSUM1 = RESEIG(1,IWEB,2) + FLOAT(IADDFC)*0.5*DELFCE(IWEB,2)
C BEG OCT 1995
C        RSUM1M= MIN(RSUM1,WBVMIN)
         RSUM1M = RSUM1
         IF (IPRELM.NE.0) RSUM1M = MIN(RSUM1,WBVMIN)
C END OCT 1995
C        WRITE(8,*)' IWEB,DELFCE(IWEB,2),RESEIG(1,IWEB,2),RSUM1=',
C    1               IWEB,DELFCE(IWEB,2),RESEIG(1,IWEB,2),RSUM1
C        WRITE(8,*)' IPRELM,WBEIG(1,4,2),WBEIG(2,4,2),WBVMIN=',
C    1               IPRELM,WBEIG(1,4,2),WBEIG(2,4,2),WBVMIN
C BEG JULY 1995
         RSUM3 = FLOAT(IADDFC)*ABS(DELWEB(2))
         IF (RESEIG(3,IWEB,2).NE.0.) RSUM3 = RESEIG(3,IWEB,2)*
     1         (1.+FLOAT(IADDFC)*ABS(DELWEB(2))/ABS(RESEIG(3,IWEB,2)))
C END JULY 1995
C BEG JUN 1996
         EFOUND = 0.
         IF (ISANDW(IWEB,2).EQ.1.OR.ISANDW(IWEB,2).EQ.NLAYER(IWEB,2))
     1    EFOUND = WFOUND(IWEB,2)
C END JUN 1996
C BEG OCT 1998
         IF (NNPRT.GE.2) WRITE(IFILE,'(/,A)')
     1 ' Ring web buckling from GENSTB'
C END OCT 1998
         CALL GENSTB(1,FLENG,WIDTHH,RSUM1M,RESEIG(2,IWEB,2),SHMULT*
     1   RSUM3,WBFMIN,RESFIX(2,IWEB,2),MMWEB(2),NNWEB(2),
     1   TSTWEB(2),CSLOPW(2),EIGWEB(2),IDESGN,EIG1,CY(1,1,IWEB),
     1   TY(IWEB),TY(IWEB),GTY(1,IWEB),IREDUC,0,IFILE,ITUTOR,JJJ,ISTIF,
     1   RESLTR,RPRER,2,10.E10,0.,FFLAT(10,MIDEND,1),1,
     1   1,IAGAIN(10,MIDEND),FNEFF(10,MIDEND),7315,EIGRAT(10),
     1   RBB0(10),ILOADS,ICASE)
C BEG FEB 1996
         IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
C
C BEG MAY 1997
C        IF (IKNOCK.EQ.1.AND.RSUM1M.LT.0.0) THEN
C BEGIN "IKNOCK.EQ.1" BRANCH...
         IF (IKNOCK.EQ.1) THEN
C  GET KNOCKDOWN FOR WEB BUCKLING (ONLY FOR WEB AS AN INTERIOR SEGMENT).
C
            FKNOC6 = 1.0
            EIGDUM = 10.E+16
            IF (SHMULT*RSUM3.NE.0.0) THEN
C BEG OCT 1998
            IF (NNPRT.GE.2) WRITE(IFILE,'(/,A)')
     1    ' Ring web buckling from GENSTB'
C END OCT 1998
            CALL GENSTB(1,FLENG,WIDTHH,0.,0.,SHMULT*RSUM3,
     1      WBFMIN,0.,
     1      MDUM,NDUM,TDUM,CSDUM,EIGDUM,IDESGN,EIG1,CY(1,1,IWEB),
     1      TY(IWEB),TY(IWEB),GTY(1,IWEB),IREDUC,0,IFILE,ITUTOR,JJJ,
     1      ISTIF,RESLTR,RPRER,2,10.E10,0.,FDUM,1,1,IAGDUM,FNEDUM,
     1      7317,EIGRDM,RBB0DM,ILOADS,ICASE)
            IF (IRESTY.EQ.1) GO TO 2222
            ENDIF
C
            FKNOC6 = 1. - 1./EIGDUM
            EIGDMP = EIGDUM
            IF (FKNOC6.LE.0.05) FKNOC6 = 0.05
            FKNOX6 = 1.0
            IF (RSUM1M.LT.0.0) THEN
               CALL BOSCIJ(CY(1,1,IWEB),CDUM)
C BEG OCT 1998
               IF (NNPRT.GE.2) WRITE(IFILE,'(/,A)')
     1       ' Ring web buckling from GENSTB'
C END OCT 1998
               CALL GENSTB(1,FLENG,WIDTHH,RSUM1M,0.,0.,
     1         WBFMIN,0.,
     1         MDUM,NDUM,TDUM,CSDUM,EIGDUM,IDESGN,EIG1,CDUM,TY(IWEB),
     1         TY(IWEB),GTY(1,IWEB),IREDUC,0,IFILE,ITUTOR,JJJ,ISTIF,
     1         RESLTR,RPRER,2,10.E10,0.,FDUM,1,1,IAGDUM,FNEDUM,
     1         7320,EIGRDM,RBB0DM,ILOADS,ICASE)
               IF (IRESTY.EQ.1) GO TO 2222
C
               FKNOX6 = EIGWEB(2)/EIGDUM
               IF (FKNOX6.GT.1.0) FKNOX6 = 1.0
            ENDIF
            FKNOCK(6) = 1.0
            IF (FKNOX6.GE.1.) FKNOCK(6) = FKNOC6
            IF (FKNOX6.LT.1.) FKNOCK(6) = MAX(FKNOX6,FKNOC6)
            IF (FKNOC6.GE.0.98) FKNOCK(6) = FKNOX6
            IF (FKNOCK(6).GT.1.0) FKNOCK(6) = 1.0
C23456789012345678901234567890123456789012345678901234567890123456789012
            IF (NNPRT.GE.2) WRITE(IFILE,'(A,/,A,/,13X,1P,4E12.4)')
     1    '   RING   WEB SHEAR BUCKLING KNOCKDOWN FACTORS:',
     1    '                  EIGSHR,    FKNOC6,    FKNOX6,   FKNOCK(6)',
     1                       EIGDMP,    FKNOC6,    FKNOX6,   FKNOCK(6)
C END MAY 1997
            GO TO 500
         ENDIF
C END "IKNOCK.EQ.1" BRANCH.
         FACSAF = 1.0
C BEG OCT 1995
C        IF (ISTIF(2).EQ.5)
         CALL RECORD(2,8,EIGWEB(2),CSLOPW(2),MMWEB(2),NNWEB(2),ICONST,
     1      CONSTR,WORDB,IFILE,IDESGN,JJJ,LENMOD,EIGMAX,IPOINC,INUMTT,
     1      FACSAF,ICASE,0,0,VINHOF,MORCON(ILOADS,ICASE),ENDMID,0,0,0)
C BEG APR 2007
         IF (NNPRT.GE.0.AND.ILABEL.GE.9260)
     1   WRITE(IFILE,'(/,A,/,A,1P,E12.4,A,I4,A,I4,A,1P,E10.2,A)')
     1 ' Ring web buckling from PANDA-type theory[1B]:',
     1 ' PANDA-type buckling load factor, EIGWEB(2)(m,n,slope)=',
     1   EIGWEB(2),'(',MMWEB(2),',',NNWEB(2),',',CSLOPW(2),')'
C END APR 2007
C BEG FEB 2007
         IF (ITYPE.EQ.1.AND.NNPRT.GE.2)
     1   WRITE(IFILE,*)' AFTER RECORD26: IDESGN,INUMTT,ICONST=',
     1                                   IDESGN,INUMTT,ICONST
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2007
         IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 2222
         FNXHAT(IWEB,2) = RSUM1M
C END OCT 1996
      ENDIF
C END "NPARTR.GE.2.AND.FSGEN.GT.0.0" BRANCH.
C
C********************************************************************
C END SECTION ON BUCKLING OF STIFFENER WEBS
C********************************************************************
C
      IF (IPRELM.EQ.6) GO TO 500
C
C BEGIN "ISTIF(1).GE.4" BRANCH...
      IF (ISTIF(1).GE.4) THEN
C
C*******************************************************************
C BEGIN SECTION ON BUCKLING OF HAT BASE AND HAT CROWN
C OR TRUSS-CORE LOWER SKIN AND TRUSS-CORE UPPER SKIN.
C*******************************************************************
C 
C  NEXT, GET LOCAL BUCKLING UNDER STRINGER HAT BASE AND OF STRINGER
C  HAT CROWN ASSUMING SIMPLE SUPPORT ALONG AXIAL BOUNDARIES.
C
C BEG FEB 1995
C        IF ((BOVRW2(1).GT.3.0.OR.IQUICK.EQ.0)
C    1       .AND.MIDEND.EQ.1.AND.ISTIF(1).NE.5) THEN
         ID = 2
         IF (IFAY(1).EQ.1) ID = 1
C BEG JULY 1995
         WIDTHH = W2(1)
         IF (ISTIF(1).EQ.5) THEN
            ID = 1
            WIDTHH=B0
         ENDIF
C END JULY 1995
         IF (IDESGN.EQ.0) THEN
            CX11R(ID) = 1.
            IF (CX110(ID).GT.0.0) CX11R(ID) = CX(1,1,ID)/CX110(ID)
         ENDIF
         IF ((BOVRW2(1).GT.3.0.OR.IQUICK.EQ.0)
     1       .AND.MIDEND.EQ.1.AND.ISTIF(1).NE.5.AND.CX11R(ID).GT.0.3
     1       .AND.(ICRIP1.EQ.0.OR.EKOISV.GE.1.0)) THEN
C
          I1 = 1
C
C    FIRST, GET BUCKLING UNDER BASE OF HAT (S.S. PLATE OF WIDTH W2(1):
C
C END FEB 1995
C BEG SEPT 1994
C         RSUM1 = RESEIG(1,ID,2) + FLOAT(IADDFC)*DELSKN(1,ID,2)
C         RSUM2 = RESEIG(2,ID,2) + FLOAT(IADDFC)*DELSKN(2,ID,2)
C BEG JULY 1995
          RSUM1 = RESEIG(1,ID,1) + FLOAT(IADDST)*DELSKN(1,ID,1)
     1                           + FLOAT(IADDFT)*DELFCX(1,ID)
C BEG OCT 1996
          FNXHAT(ID,1) = RSUM1
C END OCT 1996
          RSUM2 = RESEIG(2,ID,1) + FLOAT(IADDST)*DELSKN(2,ID,1)
     1                           + FLOAT(IADDFT)*DELFCX(2,ID)
          IF (ISTIF(1).NE.5) THEN
             RSUM3 = NXY0       + SNXY0*FLOAT(IADDFC)*DELSKN(3,ID,1)
          ELSE
             RSUM3 =RESEIG(3,ID,1) +SNXY1*FLOAT(IADDFC)*DELSKN(3,ID,1)
     1                             +SNXY1*FLOAT(IADDFT)*DELFCX(3,ID)
          ENDIF
C END SEPT 1994
C BEG JUN 1996
          EFOUND = 0.
          IF (ISANDW(2,1).EQ.1.OR.ISANDW(2,1).EQ.NLAYER(2,1))
     1     EFOUND = WFOUND(2,1)
C END JUN 1996
C BEG OCT 1998
          IF (NNPRT.GE.2) WRITE(IFILE,'(/,A)')
     1  ' Buckling under stringer hat from GENSTB'
C END OCT 1998
          CALL GENSTB(1,A0,WIDTHH,RSUM1,RSUM2,RSUM3,
C END JULY 1995
     1        RESFIX(1,ID,1),RESFIX(2,ID,1),MHBASE(I1),NHBASE(I1),
     1        THBASE(I1),CHBASE(I1),EHBASE(I1),IDESGN,EIG1,CX(1,1,ID),
     1        TX(ID),TX(ID),GTX(1,ID),IREDUC,0,IFILE,ITUTOR,
     1        JJJ,ISTIF,RESLTS,RPRES,1,10.E10,0.,FFLAT(10,MIDEND,1),1,
     1        1,IAGAIN(10,MIDEND),FNEFF(10,MIDEND),7325,EIGRAT(10),
     1        RBB0(10),ILOADS,ICASE)
C BEG FEB 1996
           IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
C
           FACSAF = FSBSTR
           CALL RECORD(1,9,EHBASE(1),CHBASE(I1),MHBASE(I1),NHBASE(I1),
     1           ICONST,CONSTR,WORDB,IFILE,IDESGN,JJJ,LENMOD,EIGMAX,
C BEG OCT 1996
     1           IPOINC,INUMTT,FACSAF,ICASE,0,0,
     1           VINHOF,MORCON(ILOADS,ICASE),ENDMID,0,0,0)
C BEG APR 2007
           IF (NNPRT.GE.0.AND.ILABEL.GE.9260)
     1     WRITE(IFILE,'(/,A,/,A,1P,E12.4,A,I4,A,I4,A,1P,E10.2,A)')
     1   ' Under stringer hat from PANDA-type theory[1B]:',
     1   ' PANDA-type buckling load factor, EHBASE(1)(m,n,slope)=',
     1     EHBASE(1),'(',MHBASE(I1),',',NHBASE(I1),',',CHBASE(I1),')'
C END APR 2007
C BEG FEB 2007
           IF (ITYPE.EQ.1.AND.NNPRT.GE.2)
     1     WRITE(IFILE,*)' AFTER RECORD27: IDESGN,INUMTT,ICONST=',
     1                                     IDESGN,INUMTT,ICONST
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2007
           IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 2222
C END OCT 1996
C
         ENDIF
C
C    NEXT, GET BUCKLING OF CROWN OF HAT (S.S. PLATE OF WIDTH WW(1):
C
C BEG FEB 1995
        IWEBP = 4
        IF (ISTIF(1).EQ.5) IWEBP = 3
        IF (IDESGN.EQ.0) THEN
           CX11R(IWEBP) = 1.
           IF (CX110(IWEBP).GT.0.0)
     1        CX11R(IWEBP) = CX(1,1,IWEBP)/CX110(IWEBP)
        ENDIF
C BEGIN "CX11R(IWEBP).GT.0.3, etc." BRANCH...
        IF (CX11R(IWEBP).GT.0.3
     1     .AND.(ICRWN1.EQ.0.OR.EKOISV.GE.1.0)) THEN
C END FEB 1995
         I1 = 1
         IF (MIDEND.EQ.2) I1 = 3
C
         IWEBP = 4
         WIDTHH = WW(1)
         IF (ISTIF(1).EQ.5) THEN
            IWEBP = 3
C BEG MAR 2009
C           WIDTHH = B0
            WIDTHH = B0 - B2(1)
C END MAR 2009
         ENDIF
C BEG JULY 1995
         IF (ISTIF(1).NE.5) THEN
           RSUM1 = RESEIG(1,IWEBP,1) + FLOAT(IADDST)*DELFCE(IWEBP,1)
           RSUM2 = RESEIG(2,IWEBP,1)
           RSUM3 = RESEIG(3,IWEBP,1)
         ELSE
           RSUM1 = RESEIG(1,IWEBP,1) + FLOAT(IADDST)*DELSKN(1,2,1)
     1                               + FLOAT(IADDFT)*DELFCX(1,3)
           RSUM2 = RESEIG(2,IWEBP,1) + FLOAT(IADDST)*DELSKN(2,2,1)
     1                               + FLOAT(IADDFT)*DELFCX(2,3)
           RSUM3 = RESEIG(3,IWEBP,1)+SNXY3*FLOAT(IADDFC)*DELSKN(3,2,1)
     1                              +SNXY3*FLOAT(IADDFT)*DELFCX(3,3)
         ENDIF
C BEG OCT 1996
         FNXHAT(IWEBP,1) = RSUM1
C END OCT 1996
C BEG JUN 1996
          EFOUND = 0.
          IF (ISANDW(IWEBP,1).EQ.1.OR.
     1        ISANDW(IWEBP,1).EQ.NLAYER(IWEBP,1))
     1          EFOUND = WFOUND(IWEBP,1)
C END JUN 1996
C BEG OCT 1998
C BEG JUL 2010
         IF (NNPRT.GE.2) WRITE(IFILE,'(/,A)')
         IF (NNPRT.GE.2.AND.ISTIF(1).NE.5) WRITE(IFILE,'(/,A)')
     1 ' Buckling of stringer hat crown from GENSTB'
         IF (NNPRT.GE.2.AND.ISTIF(1).EQ.5) WRITE(IFILE,'(/,A)')
     1' Buckling of upper face sheet of truss-core sandwich from GENSTB'
C23456789012345678901234567890123456789012345678901234567890123456789012
C END JUL 2010
C END OCT 1998
         CALL GENSTB(1,A0,WIDTHH,RSUM1,RSUM2,RSUM3,
C END JULY 1995
     1    RESFIX(1,IWEBP,1),RESFIX(2,IWEBP,1),MCROWN(I1),NCROWN(I1),
     1    TCROWN(I1),CCROWN(I1),ECROWN(I1),IDESGN,EIG1,CX(1,1,IWEBP),
     1    TX(IWEBP),TX(IWEBP),GTX(1,IWEBP),IREDUC,0,IFILE,ITUTOR,
     1    JJJ,ISTIF,RESLTS,RPRES,1,10.E10,0.,FFLAT(10,MIDEND,1),1,
     1    1,IAGAIN(10,MIDEND),FNEFF(10,MIDEND),7330,EIGRAT(10),
     1    RBB0(10),ILOADS,ICASE)
C BEG FEB 1996
         IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
C
         FACSAF = FSBSTR
C BEG APR 2007
         IF (ISTIF(1).NE.5) THEN
           CALL RECORD(1,10,ECROWN(I1),CCROWN(I1),MCROWN(I1),NCROWN(I1),
     1         ICONST,CONSTR,WORDB,IFILE,IDESGN,JJJ,LENMOD,EIGMAX,
     1           IPOINC,INUMTT,FACSAF,ICASE,0,0,
     1           VINHOF,MORCON(ILOADS,ICASE),ENDMID,0,0,0)
C BEG APR 2007
           IF (NNPRT.GE.0.AND.ILABEL.GE.9260)
     1     WRITE(IFILE,'(/,A,/,A,1P,E12.4,A,I4,A,I4,A,1P,E10.2,A)')
     1   ' Buckling of stringer hat crown from PANDA-type theory[1B]:',
     1   ' PANDA-type buckling load factor, ECROWN(I1)(m,n,slope)=',
     1     ECROWN(I1),'(',MCROWN(I1),',',NCROWN(I1),',',CCROWN(I1),')'
         ENDIF
C END APR 2007
C BEG FEB 2007
         IF (ITYPE.EQ.1.AND.NNPRT.GE.2)
     1   WRITE(IFILE,*)' AFTER RECORD28: IDESGN,INUMTT,ICONST=',
     1                                   IDESGN,INUMTT,ICONST
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2007
         IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 2222
         IF (ECROWN(I1).GT.0.0.AND.ISTIF(1).EQ.5) THEN
C BEG JUL 2010
          IF (MCROWN(I1).GE.NMINSR.AND.MCROWN(I1).LE.NMAXSR
     1     .AND.MCROWN(I1).NE.0.AND.ISRIDX.EQ.1.AND.IDESGN.EQ.0
     1     .AND.ILABEL.GE.9260.AND.IHILOC.NE.0) THEN
          ISRMOD(10) = 1
          IF (NNPRT.GE.0) WRITE(IFILE,
     1    '(/,A,/,A,/,A,/,A,/,A,I5,A,I5,A,/,A,I5,/,A)')
     1 ' Buckling of the upper skin of the truss-core sandwich',
     1 ' is not recorded as a margin because this type of buckling',
     1 ' has been superseded by the results from the discretized',
     1 ' skin-stringer module model, for which buckling load factors',
     1 ' have been computed in the range from m = ',NMINSR,' to m = ',
     1   NMAXSR,' axial halfwaves.',
     1 ' The critical buckling load from the PANDA-type theory has',
     1   MCROWN(I1),' axial half waves, which lies within this range.'
          ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
          IF (ISRMOD(10).EQ.0)
C END JUL 2010
     1     CALL RECORD(1,12,ECROWN(I1),CCROWN(I1),MCROWN(I1),NCROWN(I1),
     1         ICONST,CONSTR,WORDB,IFILE,IDESGN,JJJ,LENMOD,EIGMAX,
     1           IPOINC,INUMTT,FACSAF,ICASE,0,0,
     1           VINHOF,MORCON(ILOADS,ICASE),ENDMID,0,0,0)
C BEG APR 2007
           IF (NNPRT.GE.0.AND.ILABEL.GE.9260)
     1     WRITE(IFILE,'(/,A,/,A,1P,E12.4,A,I4,A,I4,A,1P,E10.2,A)')
     1   ' Buckling of top of truss core from PANDA-type theory[1B]:',
     1   ' PANDA-type buckling load factor, ECROWN(I1)(m,n,slope)=',
     1     ECROWN(I1),'(',MCROWN(I1),',',NCROWN(I1),',',CCROWN(I1),')'
         ENDIF
C END APR 2007
C BEG FEB 2007
         IF (ITYPE.EQ.1.AND.NNPRT.GE.2)
     1   WRITE(IFILE,*)' AFTER RECORD29: IDESGN,INUMTT,ICONST=',
     1                                   IDESGN,INUMTT,ICONST
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2007
         IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 2222
C
C BEG FEB 1995
        ENDIF
C END "CX11R(IWEBP).GT.0.3, etc." BRANCH.
C END FEB 1995
      ENDIF
C END "ISTIF(1).GE.4" BRANCH.
C
C BEGIN "ISTIF(2).GE.4.AND.FSGEN.GT.0." BRANCH...
      IF (ISTIF(2).GE.4.AND.FSGEN.GT.0.) THEN
C BEG JUN 1999
C      IF (.NOT.ATRING.OR.IWEAK.EQ.1.OR.ICASE.EQ.2) THEN
C BEGIN "ISTIF(2).NE.0.OR.IWEAK.EQ.1.OR.ICASE.EQ.2" BRANCH...
       IF (ISTIF(2).NE.0.OR.IWEAK.EQ.1.OR.ICASE.EQ.2) THEN
C END JUN 1999
C 
C  NEXT, GET LOCAL BUCKLING UNDER RING HAT BASE AND OF RING
C  HAT CROWN ASSUMING SIMPLE SUPPORT ALONG AXIAL BOUNDARIES.
C
C    FIRST, GET BUCKLING UNDER BASE OF HAT (S.S. PLATE OF WIDTH W2(2):
C
           ID = 2
           IF (IFAY(2).EQ.1.OR.ISTIF(2).EQ.5) ID = 1
C BEG JULY 1995
           IF (ISTIF(2).EQ.5) ID = 1
C END JULY 1995
           RSUM1 = RESEIG(1,ID,2) + FLOAT(IADDFC)*DELSKN(1,ID,2)
C BEG OCT 1996
C BEG OCT 1996
           FNXHAT(ID,2) = RSUM1
C END OCT 1996
           RSUM2 = RESEIG(2,ID,2) + FLOAT(IADDFC)*DELSKN(2,ID,2)
C BEG JULY 1995
           RSUM3 = RESEIG(3,ID,2) + SNXY1*FLOAT(IADDFC)*DELSKN(3,ID,2)
C END JULY 1995
           FLENG = B0
           IF (ISOGRD.EQ.1) FLENG = BBIG
           WIDTHH = W2(2)
           IF (ISTIF(2).EQ.5) WIDTHH = A0
C BEG JUN 1996
           EFOUND = 0.
           IF (ISANDW(2,2).EQ.1.OR.ISANDW(2,2).EQ.NLAYER(2,2))
     1      EFOUND = WFOUND(2,2)
C END JUN 1996
C BEG OCT 1998
           IF (NNPRT.GE.2) WRITE(IFILE,'(/,A)')
     1   ' Buckling under ring hat from GENSTB'
C END OCT 1998
C BEG JULY 1995
           CALL GENSTB(1,FLENG,WIDTHH,RSUM1,RSUM2,RSUM3,
C END JULY 1995
     1           RESFIX(1,ID,2),RESFIX(2,ID,2),MHBASE(2),NHBASE(2),
     1           THBASE(2),CHBASE(2),EHBASE(2),IDESGN,EIG1,CY(1,1,ID),
     1           TY(ID),TY(ID),GTY(1,ID),IREDUC,0,IFILE,ITUTOR,
     1          JJJ,ISTIF,RESLTR,RPRER,2,10.E10,0.,FFLAT(10,MIDEND,1),
     1         1,1,IAGAIN(10,MIDEND),FNEFF(10,MIDEND),7335,EIGRAT(10),
     1           RBB0(10),ILOADS,ICASE)
C BEG FEB 1996
           IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
C
           FACSAF = 1.0
C BEG APR 2007
           IF (ISTIF(2).NE.5) THEN
            CALL RECORD(2,9,EHBASE(2),CHBASE(2),MHBASE(2),NHBASE(2),
     1           ICONST,CONSTR,WORDB,IFILE,IDESGN,JJJ,LENMOD,EIGMAX,
     1           IPOINC,INUMTT,FACSAF,ICASE,0,0,
     1           VINHOF,MORCON(ILOADS,ICASE),ENDMID,0,0,0)
C
            IF (NNPRT.GE.0.AND.ILABEL.GE.9260)
     1      WRITE(IFILE,'(/,A,/,A,1P,E12.4,A,I4,A,I4,A,1P,E10.2,A)')
     1    ' Buckling under ring hat from PANDA-type theory[1B]:',
     1    ' PANDA-type buckling load factor, EHBASE(2)(m,n,slope)=',
     1      EHBASE(2),'(',MHBASE(2),',',NHBASE(2),',',CHBASE(2),')'
           ENDIF
C END APR 2007
C BEG FEB 2007
            IF (ITYPE.EQ.1.AND.NNPRT.GE.2)
     1      WRITE(IFILE,*)' AFTER RECORD30: IDESGN,INUMTT,ICONST=',
     1                                      IDESGN,INUMTT,ICONST
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2007
           IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 2222
C BEG APR 2007
           IF (ISTIF(2).EQ.5) THEN
            CALL RECORD(2,11,EHBASE(2),CHBASE(2),MHBASE(2),NHBASE(2),
     1           ICONST,CONSTR,WORDB,IFILE,IDESGN,JJJ,LENMOD,EIGMAX,
     1           IPOINC,INUMTT,FACSAF,ICASE,0,0,
     1           VINHOF,MORCON(ILOADS,ICASE),ENDMID,0,0,0)
C
            IF (NNPRT.GE.0.AND.ILABEL.GE.9260)
     1      WRITE(IFILE,'(/,A,/,A,1P,E12.4,A,I4,A,I4,A,1P,E10.2,A)')
     1    ' Buckling under truss core from PANDA-type theory[1B]:',
     1    ' PANDA-type buckling load factor, EHBASE(2)(m,n,slope)=',
     1      EHBASE(2),'(',MHBASE(2),',',NHBASE(2),',',CHBASE(2),')'
           ENDIF
C END APR 2007

C BEG FEB 2007
             IF (ITYPE.EQ.1.AND.NNPRT.GE.2)
     1       WRITE(IFILE,*)' AFTER RECORD31: IDESGN,INUMTT,ICONST=',
     1                                       IDESGN,INUMTT,ICONST
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2007
           IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 2222
C
C    NEXT, GET BUCKLING OF CROWN OF HAT (S.S. PLATE OF WIDTH WW(2):
C
         IWEBP = 4
         WIDTHH = WW(2)
         IF (ISTIF(2).EQ.5) THEN
            IWEBP = 3
            WIDTHH = A0
         ENDIF
C        WRITE(IFILE,*)' IADDFC,IWEBP,DELFCE(IWEBP,2)=',
C    1                   IADDFC,IWEBP,DELFCE(IWEBP,2)
C BEG JULY 1995
         IF (ISTIF(2).NE.5) THEN
            RSUM1 = RESEIG(1,IWEBP,2) + FLOAT(IADDFC)*DELFCE(IWEBP,2)
            RSUM2 = RESEIG(2,IWEBP,2)
            RSUM3 = RESEIG(3,IWEBP,2)
         ELSE
            RSUM1 = RESEIG(1,IWEBP,2) + FLOAT(IADDFC)*DELSKN(1,2,2)
            RSUM2 = RESEIG(2,IWEBP,2) + FLOAT(IADDFC)*DELSKN(2,2,2)
            RSUM3 = RESEIG(3,IWEBP,2)+SNXY3*FLOAT(IADDFC)*DELSKN(3,2,2)
         ENDIF
C BEG OCT 1996
         FNXHAT(IWEBP,2) = RSUM1
C END OCT 1996
C BEG JUN 1996
         EFOUND = 0.
         IF (ISANDW(IWEBP,2).EQ.1.OR.
     1       ISANDW(IWEBP,2).EQ.NLAYER(IWEBP,2))
     1          EFOUND = WFOUND(IWEBP,2)
C END JUN 1996
C BEG OCT 1998
         IF (NNPRT.GE.2) WRITE(IFILE,'(/,A)')
     1 ' Buckling of ring hat crown from GENSTB'
C END OCT 1998
         CALL GENSTB(1,FLENG,WIDTHH,RSUM1,RSUM2,RSUM3,
C END JULY 1995
     1     RESFIX(1,IWEBP,2),RESFIX(2,IWEBP,2),MCROWN(2),NCROWN(2),
     1     TCROWN(2),CCROWN(2),ECROWN(2),IDESGN,EIG1,CY(1,1,IWEBP),
     1     TY(IWEBP),TY(IWEBP),GTY(1,IWEBP),IREDUC,0,IFILE,ITUTOR,
     1    JJJ,ISTIF,RESLTR,RPRER,2,10.E10,0.,FFLAT(10,MIDEND,1),1,
     1    1,IAGAIN(10,MIDEND),FNEFF(10,MIDEND),7340,EIGRAT(10),
     1     RBB0(10),ILOADS,ICASE)
C BEG FEB 1996
         IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
C
         FACSAF = 1.0
C BEG APR 2005
         IF (ISTIF(2).NE.5) THEN
          CALL RECORD(2,10,ECROWN(2),CCROWN(2),MCROWN(2),NCROWN(2),
     1         ICONST,CONSTR,WORDB,IFILE,IDESGN,JJJ,LENMOD,EIGMAX,
     1           IPOINC,INUMTT,FACSAF,ICASE,0,0,
     1           VINHOF,MORCON(ILOADS,ICASE),ENDMID,0,0,0)
C BEG APR 2007
           IF (NNPRT.GE.0.AND.ILABEL.GE.9260)
     1     WRITE(IFILE,'(/,A,/,A,1P,E12.4,A,I4,A,I4,A,1P,E10.2,A)')
     1   ' Buckling of ring hat crown from PANDA-type theory[1B]:',
     1   ' PANDA-type buckling load factor, ECROWN(2)(m,n,slope)=',
     1     ECROWN(2),'(',MCROWN(2),',',NCROWN(2),',',CCROWN(2),')'
         ENDIF
C END APR 2007
C BEG FEB 2007
          IF (ITYPE.EQ.1.AND.NNPRT.GE.2)
     1    WRITE(IFILE,*)' AFTER RECORD32: IDESGN,INUMTT,ICONST=',
     1                                    IDESGN,INUMTT,ICONST
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2007
          IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 2222
         IF (ISTIF(2).EQ.5) THEN
           CALL RECORD(2,12,ECROWN(2),CCROWN(2),MCROWN(2),NCROWN(2),
     1         ICONST,CONSTR,WORDB,IFILE,IDESGN,JJJ,LENMOD,EIGMAX,
     1           IPOINC,INUMTT,FACSAF,ICASE,0,0,
     1           VINHOF,MORCON(ILOADS,ICASE),ENDMID,0,0,0)
C BEG APR 2007
           IF (NNPRT.GE.0.AND.ILABEL.GE.9260)
     1     WRITE(IFILE,'(/,A,/,A,1P,E12.4,A,I4,A,I4,A,1P,E10.2,A)')
     1   ' Buckling of upper ring truss from PANDA-type theory[1B]:',
     1   ' PANDA-type buckling load factor, ECROWN(2)(m,n,slope)=',
     1     ECROWN(2),'(',MCROWN(2),',',NCROWN(2),',',CCROWN(2),')'
         ENDIF
C END APR 2007
C BEG FEB 2007
          IF (ITYPE.EQ.1.AND.NNPRT.GE.2)
     1    WRITE(IFILE,*)' AFTER RECORD33: IDESGN,INUMTT,ICONST=',
     1                                    IDESGN,INUMTT,ICONST
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2007
          IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 2222
C
       ENDIF
C END "ISTIF(2).NE.0.OR.IWEAK.EQ.1.OR.ICASE.EQ.2" BRANCH.
      ENDIF
C END "ISTIF(2).GE.4.AND.FSGEN.GT.0." BRANCH.
C
C*******************************************************************
C END SECTION ON BUCKLING OF HAT BASE AND HAT CROWN
C*******************************************************************
C 
C
  412 FORMAT( ' ****************************************************')  
C 
C BEG NOV 1996
  490 CONTINUE
C ********************************************************************
C  BEGIN SPECIAL STUFF FOR FACE WRINKLING/DIMPLING, ETC OF SANDWICH WALLS
C ********************************************************************
      IF (IPRELM.NE.0) GO TO 500
      IF (ISANDS.EQ.0.AND.ISAND.EQ.1) GO TO 500
      NLOOP = 2
      IF (ICASE.EQ.1.AND.NCASES.EQ.2) NLOOP = 1
C
C BEGIN "498" LOOP...
      DO 498 ILOOP = 1,NLOOP
         ISTART = 1
         IEND   = NSEG(ILOOP)
         IF (ILOOP.EQ.2) THEN
            ISTART = 2
            IF (B2(2).EQ.0.) ISTART = 3
         ENDIF
         IF (ISTART.GT.IEND) GO TO 498
         IWEB = 3
         IF (ISTIF(ILOOP).EQ.5) IWEB = 2
         IWEBM = IWEB - 1
         IWEBP = IWEB + 1
C BEG "496" LOOP...
         DO 496 ISEG = ISTART,IEND
            IF (ISANDW(ISEG,ILOOP).LE.1.OR.
     1          ISANDW(ISEG,ILOOP).EQ.NLAYER(ISEG,ILOOP)) GO TO 496
C BEG FEB 2007
            IF (NNPRT.GE.0)
     1     WRITE(8,'(/,/,A,/,A,/,A,I2,A,I2,A/,A,/,A,/,A,/,A,/,A,/,A,/)')
     1' **************** SANDWICH WALL BEHAVIOR *****************',
     1' Begin section of BUCPAN involved with sandwich wall behavior.',
     1' This panel segment (ISEG=',ISEG,', ILOOP=',ILOOP,'), has a',
     1' sandwich wall construction. See the paper: Bushnell, D.,',
     1' "Optimum design via PANDA2 of composite sandwich panels with',
     1'  honeycomb or foam cores", AIAA Paper 97-1142, Proc. 38th',
     1'  AIAA Structures, Structural Dynamics and Materials',
     1'  Conference, pp 2163-2202, April, 1997',
     1' **************** SANDWICH WALL BEHAVIOR *****************'
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2007
            IF (ISEG.EQ.1) WIDTHH = B(ILOOP) - W2(ILOOP)
            IF (ISEG.EQ.1.AND.ISTIF(ILOOP).EQ.5) 
     1                                WIDTHH = B(ILOOP) - B2(ILOOP)
            IF (ISEG.EQ.1.AND.ISOGRD.EQ.1.AND.ILOOP.EQ.1)
     1         WIDTHH = B(ILOOP)/0.866
            IF (ISEG.EQ.2.AND.ISTIF(ILOOP).NE.5) WIDTHH = B2(ILOOP)
            ID = ISEG
            IF (ISTIF(ILOOP).EQ.4.AND.ISEG.EQ.2) THEN
               IF (IFAY(ILOOP).EQ.1) ID = 1
               WIDTHH = W2(ILOOP)
            ENDIF
            IF (ISEG.EQ.IWEB) THEN
               WIDTHH = HH(ILOOP)
               IF (ISTIF(ILOOP).EQ.4) WIDTHH =
     1              SQRT(HH(ILOOP)**2 +(.5*(W2(ILOOP)-WW(ILOOP)))**2)
               IF (ISTIF(ILOOP).EQ.5) WIDTHH =
     1              SQRT(HH(ILOOP)**2 +.25*(B(ILOOP)-2.*B2(ILOOP))**2)
            ENDIF
            IWEBP = IWEB + 1
            IF (ISEG.EQ.IWEBP) THEN
               WIDTHH = WW(ILOOP)
               IF (ISTIF(ILOOP).EQ.5) WIDTHH = B(ILOOP) - B2(ILOOP)
            ENDIF
            FSAFE = 1.0
C
C BEG JAN 1999
            IF (IDESGN.EQ.0) THEN
               CALL MOVER(1.,0,FCTFB1,1,8)
               CALL MOVER(1.,0,FCTFP1,1,8)
               CALL MOVER(1.,0,FCTFB2,1,8)
               CALL MOVER(1.,0,FCTFP2,1,8)
            ENDIF
C END JAN 1999
            IF (ILOOP.EQ.1) THEN
               ALENG = A0 - W2(2)
               CALL MOVER(CX,1,CZ,1,180)
               CALL MOVER(CXFF1,1,CZFF1,1,144)
               CALL MOVER(CXFF2,1,CZFF2,1,144)
               CALL MOVER(TXFF1,1,TZFF1,1,4)
               CALL MOVER(TXFF2,1,TZFF2,1,4)
               CALL MOVER(GTXF1,1,GTZF1,1,8)
               CALL MOVER(GTXF2,1,GTZF2,1,8)
               CALL MOVER(TX,1,TZ,1,5)
               CALL MOVER(RESLTS,1,RESLTZ,1,9)
               CALL MOVER(RPRES,1,RPREZ,1,9)
               SRWORD = 'STR'
            ENDIF
            IF (ILOOP.EQ.2) THEN
               ALENG = BBIG
               CALL MOVER(CY,1,CZ,1,180)
               CALL MOVER(CYFF1,1,CZFF1,1,144)
               CALL MOVER(CYFF2,1,CZFF2,1,144)
               CALL MOVER(TYFF1,1,TZFF1,1,4)
               CALL MOVER(TYFF2,1,TZFF2,1,4)
               CALL MOVER(GTYF1,1,GTZF1,1,8)
               CALL MOVER(GTYF2,1,GTZF2,1,8)
               CALL MOVER(TY,1,TZ,1,5)
               CALL MOVER(RESLTR,1,RESLTZ,1,9)
               CALL MOVER(RPRER,1,RPREZ,1,9)
               SRWORD = 'RNG'
            ENDIF
C
              IF (ISOGRD.EQ.0.OR.ISEG.EQ.IWEB
     1                       .OR.(ILOOP.EQ.2.AND.ISEG.GE.3)) THEN
                 FNXEFF = 0.
                 FNYEFF = 0.
                 EIGVLC(ISEG,ILOOP) = 10.E+16
                 VKNOCK = 1.0
                 IF (ILOOP.EQ.1.AND.ISEG.EQ.1) THEN
                  IF (IFLAT.NE.0.OR.ISTIF(ILOOP).EQ.5) THEN
                     FNXEFF = PNX + RSKNXP
                     FNYEFF = PNY + RSKNYP
                  ENDIF
                  IF (ISTIF(ILOOP).NE.0.AND.IQUICK.EQ.0) THEN
                     FNXEFF = PNX + RSKNXP
                     FNYEFF = PNY + RSKNYP
                  ENDIF
                  VKNOCK = VINKNK
                 ENDIF
                 IF (ISEG.EQ.IWEB) FNXEFF = FNXHAT(IWEB,ILOOP)
                 IF (ISTIF(ILOOP).GE.4) THEN
                  IF (ISEG.EQ.IWEBM) THEN
                     FNXEFF = FNXHAT(ID,ILOOP)
                     IF (ISTIF(ILOOP).EQ.4) FNYEFF = PNY + RSKNYP
                     VKNOCK = VINKNK
                  ENDIF
                  IF (ISEG.EQ.IWEBP) THEN
                     FNXEFF = FNXHAT(IWEBP,ILOOP)
                     IF (ISTIF(ILOOP).EQ.5) FNYEFF = RESULT(2,3,ILOOP)
                  ENDIF
                 ENDIF
                 IF (IDESGN.EQ.0) THEN
                    MODFNY(ISEG,ILOOP) = 1
                    IF (VKNOCK.GT.0.1.AND.FNXEFF.LT.0.0
     1                               .AND.FNYEFF.GT.0.1*FNXEFF)
     1                 MODFNY(ISEG,ILOOP) = 0
                 ENDIF
C               IF (NNPRT.GE.2) WRITE(IFILE,'(A,2I3,1P,2E12.4)')
C    1         ' IDESGN,MODFNY(ISEG,ILOOP),FNXEFF,VKNOCK=',
C    1           IDESGN,MODFNY(ISEG,ILOOP),FNXEFF,VKNOCK
                 IF (FNXEFF.LT.0.0.AND.MODFNY(ISEG,ILOOP).EQ.0) THEN
C  Get local buckling of module segments from Eq.(2),p1691 of Vinson's
C  October 1986 AIAA J. paper (page 1691, October 1986 AIAA Journal)
                    CPROD = SQRT(CZ(4,4,ID)*CZ(5,5,ID))
                    PIOB2 = (3.1415927/WIDTHH)**2
                    HCX   = TZ(ID) - TZFF1(ID) - TZFF2(ID)
C                VX and VY are Vx, Vy, given in Vinson's Eq.(6).
                    VX    = PIOB2*CPROD/(GCXP(ID,ILOOP)*HCX)
                    VY    = PIOB2*CPROD/(GCYP(ID,ILOOP)*HCX)
                    IF (IREDUC.EQ.0) THEN
                       VX = 0.
                       VY = 0.
                    ENDIF
C                VB1 through VB3 are the B1 - B3 in Vinson's Eq.(5).
                    VB1   = SQRT(CZ(5,5,ID)/CZ(4,4,ID))
                    VB3   = CZ(6,6,ID)/CPROD
                    FNUXY = CZ(4,5,ID)/CZ(5,5,ID)
                    VB2   = 2.*VB3 + VB1*FNUXY
C                VC1 through VC4 are the C1 - C4 in Vinson's Eq.(7).
C                NOTE: The relationship between m and n is known, and is
C                      given by Eq.(69), p 556, by Bushnell, Computers
C                      and Structures, Vol. 27, No. 4, 1987 (PANDA paper).
                    VC1   = SQRT(CZ(4,4,ID)/CZ(5,5,ID))
                    VC2   = 1.0
                    VC3   = 1./VC1
                    VC4   = VC1
                    IF (IDESGN.EQ.0)
     1                 MVINSN(ISEG,ILOOP) = (ALENG/WIDTHH)*SQRT(VC3)
                    VA    = VC1*VC3 - VB2*VC2**2
     1                       +VB3*VC2*(VB1*VC1 +2.*VB2*VC2 + VC3/VB1)
                    VNUM  = VB1*VC1+2.*VB2*VC2+VC3/VB1 +VA*(VY/VC4 +VX)
                    VDEN  = 1. +(VB1*VC1 +VB3*VC2)*VY/VC4
     1                         +(VC3/VB1 +VB3*VC2)*VX +VY*VX*VA/VC4
C               VK is the buckling coefficient K given by Vinson's Eq.(3).
                    VK    = VNUM/VDEN
                    VINSXX = PIOB2*CPROD*VK
                    EIGVLC(ISEG,ILOOP) = ABS(VINSXX/FNXEFF)*VKNOCK
C BEG NOV 1997
                    IF (ILOOP.EQ.1.AND.ISEG.EQ.1.AND.
     1               (ABS(VINSXX)+RSKNXP).GT.0.0) EIGVLC(ISEG,ILOOP)=
     1                           (ABS(VINSXX)+RSKNXP)*VKNOCK/ABS(PNX)
C END NOV 1997
                 ENDIF
                 VINHOF = '(VINSON)'
                 CALL RECORD(0,20,EIGVLC(ISEG,ILOOP),0.,
     1            MVINSN(ISEG,ILOOP),0,ICONST,CONSTR,
     1            WORDB,IFILE,IDESGN,JJJ,LENMOD,EIGMAX,IPOINC,INUMTT,
     1            FSLOC,ICASE,ISEG,ILOOP,VINHOF,MORCON(ILOADS,ICASE),
     1            ENDMID,0,0,0)
C BEG FEB 2007
                 IF (ITYPE.EQ.1.AND.NNPRT.GE.2)
     1           WRITE(IFILE,*)' AFTER RECORD34: IDESGN,INUMTT,ICONST=',
     1                                           IDESGN,INUMTT,ICONST
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2007
                 IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 2222
              ENDIF
C
              K = KCORE(ISEG,ILOOP)
              M = MMATL(ISEG,ILOOP)
C
C  face wrinkling of face sheet no. 1...
C      First, find face wrinkling constraint from BUSHNELL formula:
              IF (ISEG.EQ.1.AND.ISOGRD.EQ.1.AND.ILOOP.EQ.1)
     1                                         ALENG = B(1)/0.866
C BEG JAN 1999
              EFOUND = FCTFB1(ISEG,ILOOP)*WFOUND(ID,ILOOP)
              IF (NNPRT.GE.2) WRITE(IFILE,'(/,A,A,/,2I3,1P,3E12.4)')
     1      ' Wrinkling of face sheet 1: ISEG, ILOOP, ALENG, WIDTHH,',
     1      ' FCTFB1(ISEG,ILOOP)=',
     1         ISEG,ILOOP,ALENG,WIDTHH,FCTFB1(ISEG,ILOOP)
C END JAN 1999
              CALL GENSTB(1,ALENG,WIDTHH,
     1         FNXF1(ID,ILOOP),FNYF1(ID,ILOOP),FNXYF1(ID,ILOOP),
     1         0.,0.,MWAVF1(ISEG,ILOOP),NWAVF1(ISEG,ILOOP),
     1         TESTF1(ISEG,ILOOP),SLOPF1(ISEG,ILOOP),EIGWF1(ISEG,ILOOP),
     1         IDESGN,EIG1,CZFF1(1,1,ID),TZFF1(ID),TZFF1(ID),
     1         GTZF1(1,ID),IREDUC,0,IFILE,ITUTOR,JJJ,ISTIF,
     1         RESLTZ,RPREZ,1,10.E10,0.,FDUM1,1,1,IDUM,FDUM3,
     1         7345,EIGRDM,RBB0DM,ILOADS,ICASE)
C BEG JAN 1999
              IF (IDESGN.EQ.0.AND.ICORE(ID,ILOOP).NE.0) THEN
                 WVLTH1 = ALENG
                 WVLTH2 = WIDTHH
                 IF (MWAVF1(ISEG,ILOOP).GT.0)
     1              WVLTH1 = ALENG/FLOAT(MWAVF1(ISEG,ILOOP))
                 IF (NWAVF1(ISEG,ILOOP).GT.0)
     1              WVLTH2 = WIDTHH/FLOAT(NWAVF1(ISEG,ILOOP))
                 WAVMIN = MIN(WVLTH1,WVLTH2)
                 CELDIA = 1.732*HXSIDX(M)
                 WAVRAT = WAVMIN/CELDIA
                 IF (WAVRAT.LT.2.0) THEN
                    IF (WAVRAT.LT.1.0) THEN
                       FCTFB1(ISEG,ILOOP) = 0.5
                    ELSE
                       FCTFB1(ISEG,ILOOP) = 0.5*WAVRAT
                    ENDIF
                    EFOUND = FCTFB1(ISEG,ILOOP)*WFOUND(ID,ILOOP)
                    IF (NNPRT.GE.2)
     1               WRITE(IFILE,'(/,A,A,/,A,A,/,2I3,1P,3E12.4)')
     1             ' Core modulus reduced because of short wrinkle',
     1             ' halfwavelength:',
     1             ' Wrinkling of face sheet 1: ISEG, ILOOP, ALENG,',
     1             ' WIDTHH, FCTFB1(ISEG,ILOOP)=',
     1               ISEG,ILOOP,ALENG,WIDTHH,FCTFB1(ISEG,ILOOP)
C
                    CALL GENSTB(1,ALENG,WIDTHH,FNXF1(ID,ILOOP),
     1               FNYF1(ID,ILOOP),FNXYF1(ID,ILOOP),0.,0.,
     1               MWAVF1(ISEG,ILOOP),NWAVF1(ISEG,ILOOP),
     1               TESTF1(ISEG,ILOOP),SLOPF1(ISEG,ILOOP),
     1               EIGWF1(ISEG,ILOOP),IDESGN,EIG1,CZFF1(1,1,ID),
     1               TZFF1(ID),TZFF1(ID),GTZF1(1,ID),IREDUC,0,IFILE,
     1               ITUTOR,JJJ,ISTIF,RESLTZ,RPREZ,1,10.E10,0.,FDUM1,
     1               1,1,IDUM,FDUM3,7346,EIGRDM,RBB0DM,ILOADS,ICASE)
                 ENDIF
              ENDIF
C END JAN 1999
              CPRINT = SLOPF1(ISEG,ILOOP)
              IF (TESTF1(ISEG,ILOOP).LT.1.0
     1           .AND.ABS(SLOPF1(ISEG,ILOOP)).GT.0.0) 
     1                                   CPRINT = 1./SLOPF1(ISEG,ILOOP)
              VINHOF = '(BUSHNL)'
              CALL RECORD(0,13,EIGWF1(ISEG,ILOOP),CPRINT,
     1            MWAVF1(ISEG,ILOOP),NWAVF1(ISEG,ILOOP),ICONST,CONSTR,
     1            WORDB,IFILE,IDESGN,JJJ,LENMOD,EIGMAX,IPOINC,INUMTT,
     1            FSAFE,ICASE,ISEG,ILOOP,VINHOF,MORCON(ILOADS,ICASE),
     1            ENDMID,0,0,0)
C BEG FEB 2007
              IF (ITYPE.EQ.1.AND.NNPRT.GE.2)
     1        WRITE(IFILE,*)' AFTER RECORD35: IDESGN,INUMTT,ICONST=',
     1                                        IDESGN,INUMTT,ICONST
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2007
              IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 2222
C BEG OCT 1996
C  face wrinkling of face sheet no. 1 from minimum of Vinson's theory
C    see Eq.(15), p1692, AIAA J., 1986 (wrinkling under pure axial compres.)
C    see Eq.(60), Proc. 1st International Conf. on Sandwich Constructions,
C    Stockholm, Sweden, June 1989 (wrinkling under pure in-plane shear)
C    and Hoff's (see Plantema, J, SANDWICH CONSTRUCTION, John Wiley, NY
C    1966, p. 43, Eq.(10)):
C
C  wrinkling from Vinson's formula:
C BEG JAN 1999
C   compute number of axial halfwaves from Plantema's formula, Eq.(  ),
C   p. ??, F. J. Plantema, SANDWICH CONSTRUCTION, John Wiley, 1966:
              EEFF  = ECCORE(ISEG,ILOOP)*GLUFCT(ISEG,ILOOP)
              IF (IDESGN.EQ.0.AND.ICORE(ISEG,ILOOP).NE.0) THEN
                 WAVPRD = CZFF1(4,4,ID)**2/(EEFF*GCXP(ID,ILOOP))
                 LOGWAV = 0.16667*LOG(WAVPRD)
                 WAVLTH = 1.26*3.1416*EXP(LOGWAV)
                 CELDIA = 1.732*HXSIDX(M)
                 WAVRAT = WAVLTH/CELDIA
                 IF (WAVRAT.LT.2.0) THEN
                    IF (WAVRAT.LT.1.0) THEN
                       FCTFP1(ISEG,ILOOP) = 0.5
                    ELSE
                       FCTFP1(ISEG,ILOOP) = 0.5*WAVRAT
                    ENDIF
                 ENDIF
                 IF (NNPRT.GE.2)
     1              WRITE(IFILE,'(/,A,1P,2E11.3,/,A,1P,E12.4)')
     1        ' Face sheet 1: wrinkling halfwavelength, cell diameter=',
     1              WAVLTH, CELDIA,
     1       ' It is necessary to reduce the core moduli by the factor',
     1              FCTFP1(ISEG,ILOOP)
C23456789012345678901234567890123456789012345678901234567890123456789012
              ENDIF
              CPROD = SQRT(CZFF1(1,1,ID)*CZFF1(2,2,ID))
              HCX   = TZ(ID) - TZFF1(ID) - TZFF2(ID)
              VINSXX =TZFF1(ID)*SQRT(0.667*FCTFP1(ISEG,ILOOP)
     1                                              *EEFF*CPROD/HCX)
C END JAN 1999
              VINSYY = VINSXX
              VINSXY = VINSXX
              FNXRAT = 0.
              IF (FNXF1(ID,ILOOP).LT.0.0)
     1           FNXRAT = ABS(FNXF1(ID,ILOOP))/VINSXX
              FNYRAT = 0.
              IF (FNYF1(ID,ILOOP).LT.0.0)
     1           FNYRAT = ABS(FNYF1(ID,ILOOP))/VINSYY
              EIGVNY = 10.E+16
              IF (FNYRAT.GT.0.0) EIGVNY = 1./FNYRAT
C BEG JUN 1999
              EIGVNX = 10.E+16
              IF (FNXRAT.GT.0.0) EIGVNX = 1./FNXRAT
C END JUN 1999
              FNXYRT = FNXYF1(ID,ILOOP)/VINSXY
              FNFSUM = SQRT(FNXRAT**2 + FNYRAT**2 + FNXYRT**2)
              EIGVIN = 10.E+16
              IF (FNFSUM.GT.0.0) EIGVIN = 1./FNFSUM
C  wrinkling from Hoff's formula: 
C       N(face)(crit)=0.5*t(core)*[E(face)*E(core)*G(core)]**(1/3)
C BEG JAN 1999
              HOFPRD =
     1         CZFF1(1,1,ID)*FCTFP1(ISEG,ILOOP)**2*
     1                         EEFF*GCXP(ID,ILOOP)/TZFF1(ID)
     1                                       
              LOGHOF = 0.3333*LOG(HOFPRD)
              HOFFXX = 0.5*TZFF1(ID)*EXP(LOGHOF)
              HOFPRD = 
     1         CZFF1(2,2,ID)*FCTFP1(ISEG,ILOOP)**2*
     1                         EEFF*GCYP(ID,ILOOP)/TZFF1(ID)
     1                                       
C END JAN 1999
              LOGHOF = 0.3333*LOG(HOFPRD)
              HOFFYY = 0.5*TZFF1(ID)*EXP(LOGHOF)
              HOFFXY = HOFFYY
              FNXRAT = 0.
              IF (FNXF1(ID,ILOOP).LT.0.0)
     1           FNXRAT = ABS(FNXF1(ID,ILOOP))/HOFFXX
              FNYRAT = 0.
              IF (FNYF1(ID,ILOOP).LT.0.0)
     1           FNYRAT = ABS(FNYF1(ID,ILOOP))/HOFFYY
              EIGHNY = 10.E+16
              IF (FNYRAT.GT.0.0) EIGHNY = 1./FNYRAT
              EIGMY1 = MIN(EIGVNY,EIGHNY)
C BEG JUN 1999
              EIGHNX = 10.E+16
              IF (FNXRAT.GT.0.0) EIGHNX = 1./FNXRAT
              EIGMX1 = MIN(EIGVNX,EIGHNX)
C END JUN 1999
              FNXYRT = FNXYF1(ID,ILOOP)/HOFFXY
              FNFSUM = SQRT(FNXRAT**2 + FNYRAT**2 + FNXYRT**2)
              EIGHOF = 10.E+16
              IF (FNFSUM.GT.0.0) EIGHOF = 1./FNFSUM
C   pick the smaller result from Vinson or Hoff theories:
              EIGVF1(ISEG,ILOOP) = MIN(EIGVIN,EIGHOF)
              IF (IDESGN.EQ.0) THEN
                 VINHOF = '(VINSON)'
                 IF (EIGHOF.LT.EIGVIN) VINHOF = '( HOFF )'
                 VINHOX(ISEG,ILOOP,1) = VINHOF
              ENDIF
              VINHOF = VINHOX(ISEG,ILOOP,1)
              IF (ILOADS.EQ.1.AND.ICASE.EQ.1) THEN
C   compute number of axial halfwaves from Plantema's formula, Eq.(  ),
C   p. ??, F. J. Plantema, SANDWICH CONSTRUCTION, John Wiley, 1966:
C BEG JAN 1999
                 WAVPRD = CZFF1(4,4,ID)**2/
     1               (EEFF*GCXP(ID,ILOOP)*FCTFP1(ISEG,ILOOP)**2)
C END JAN 1999
                 LOGWAV = 0.16667*LOG(WAVPRD)
                 WAVLTH = 1.26*3.1416*EXP(LOGWAV)
                 IF (IDESGN.EQ.0) MPLNT1(ISEG,ILOOP) = ALENG/WAVLTH
C BEG MAR 2001
                 IF (NNPRT.GE.2) THEN
                  WRITE(8,'(A,I2,A,1P,E12.4)')
     1          ' Iseg=',ISEG,
     1          '; face1 wrinkle half-wavelength (PLANTEMA)=',WAVLTH
                  WRITE(8,'(A,1P,E10.3,A,1P,E10.3)')
     1          ' Eigenvalues: Vinson theory,EIGVIN=',EIGVIN,
     1          '; Hoff theory,EIGHOF=',EIGHOF
                 ENDIF
C END MAR 2001
                 IF (ICORE(ISEG,ILOOP).NE.0) THEN
                    CELDIA = 1.732*HXSIDX(M)
                    WAVRAT = WAVLTH/CELDIA
                    IF (NNPRT.GE.2)
     1               WRITE(8,'(A,I2,A,1P,E12.4,/,A,1P,E12.4)')
     1             ' Matl=',M,'; Diameter of honeycomb cell=',CELDIA,
     1'          (face1 wrinkle halfwavelength)/(cell diameter)=',WAVRAT
C23456789012345678901234567890123456789012345678901234567890123456789012
                    IF (IDESGN.EQ.0.AND.WAVRAT.LT.1.0)
     1               WRITE(8,'(A,I2,A,I2,A,/,A,A,/,A,1P,E12.4)')
     1          ' ***** WARNING Iseg=',ISEG,', Iloop=',ILOOP,': ******',
     1             ' Face1 wrinkle halfwavelength is less than the',
     1             ' honeycomb cell diameter.',
     1         ' (face1 wrinkle halfwavelength)/(cell diameter)=',WAVRAT
C  Set up constraint to keep face 1 wrinkling halfwavelength longer than
C  2.0 times the honeycomb cell diameter.
C BEG JAN 1999
C BEG JUN 1999
C                  IF (IUSEHC(M).EQ.1) THEN
                   IF (IUSEHC(M).EQ.1.AND.ITESTB.EQ.0) THEN
C END JUN 1999
C                  IF (IUSEHC(M).EQ.100) THEN
C END JAN 1999
                    INUMTT = INUMTT + 1
                    FSAFX = 1.0
                    WAVCON = WAVRAT/2.0
                    CALL CONVR2(M,CM)
                    CALL CONVR2(ISEG,CISEG)
                    CALL CONVRF(FSAFX,CN2)
C BEG APR 1997  (FOLLOWING THREE MOVED UP ABOVE "IF (IDESGN...")
                    MIDWRD = 'MIDLENGTH'
                    IF (ICASE.EQ.2) MIDWRD = 'PANEL END'
                    IF (ATRING.AND.ICASE.EQ.2) MIDWRD = 'AT RINGS '
C END APR 1997
                    IF (IDESGN.EQ.0.AND.WAVCON.LT.MAXCON) THEN
                      ICAR = ICAR + 1
                    PCWORD(ICAR) ='Face1 wavelength/celldiam;'//SRWORD//
     1           ';Iseg='//CISEG//';Matl='//CM//';'//MIDWRD//';FS='//CN2
                      CPLOT(ICAR) = WAVCON - 1.
                      IADDCC(ICAR) = 0
                      FSAFEP(ICAR) = FSAFX
                    ENDIF
                    IF (IDESGN.EQ.0.AND.WAVCON.GT.EIGMAX) GO TO 1137
                    IF (IDESGN.EQ.1.AND.IPOINC(INUMTT).EQ.0) GO TO 1137
                    ICONST = ICONST + 1
                    IF (IDESGN.EQ.0) IPOINC(INUMTT) = 1
                    CONSTR(ICONST) = WAVCON
                    WORDB(ICONST)='Face1 wavelength/celldiam;'//SRWORD//
     1           ';Iseg='//CISEG//';Matl='//CM//';'//MIDWRD//';FS='//CN2
C BEG APR 2007
                    IF (NPRT.GE.0) WRITE(8,'(A,1P,E12.4,2X,A)')
     1            ' Margin=',CONSTR(ICONST)-1.,WORDB(ICONST)
C END APR 2007
 1137               CONTINUE
                   ENDIF
                 ENDIF
              ENDIF
C
              CALL RECORD(0,17,EIGVF1(ISEG,ILOOP),0.,
     1            MPLNT1(ISEG,ILOOP),0,ICONST,CONSTR,
     1            WORDB,IFILE,IDESGN,JJJ,LENMOD,EIGMAX,IPOINC,INUMTT,
     1            FSAFE,ICASE,ISEG,ILOOP,VINHOF,MORCON(ILOADS,ICASE),
     1            ENDMID,0,0,0)
C BEG FEB 2007
              IF (ITYPE.EQ.1.AND.NNPRT.GE.2)
     1        WRITE(IFILE,*)' AFTER RECORD36: IDESGN,INUMTT,ICONST=',
     1                                        IDESGN,INUMTT,ICONST
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2007
              IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 2222
C BEG APR 1997
              EIGAVE = 0.5*(EIGWF1(ISEG,ILOOP) + EIGVF1(ISEG,ILOOP))
              EIGMF1(ISEG,ILOOP) =
C    1                    MIN(EIGWF1(ISEG,ILOOP),EIGVF1(ISEG,ILOOP))
     1                    MIN(EIGAVE,EIGVF1(ISEG,ILOOP))
              IF (NNPRT.GE.2) WRITE(8,'(A,2I2,A,1P,E12.4)')
     1      ' Iseg,ILOOP=',ISEG,ILOOP,
     1      ': Face sheet 1 wrinkling load factor=',EIGMF1(ISEG,ILOOP)
C END APR 1997
C BEG JUN 1999
              AOM = 10.E+16
              BON = 10.E+16
              IF (MWAVF1(ISEG,ILOOP).GT.0)
     1           AOM = ALENG/FLOAT(MWAVF1(ISEG,ILOOP))
              IF (NWAVF1(ISEG,ILOOP).GT.0)
     1           BON =WIDTHH/FLOAT(NWAVF1(ISEG,ILOOP))
              IF (AOM.GT.BON) THEN
                 EIGMY1 = EIGMF1(ISEG,ILOOP)
              ELSE
                 EIGMX1 = EIGMF1(ISEG,ILOOP)
              ENDIF
C             WRITE(8,'(A,2I8,/,1P,6E12.4)')
C    1      ' MWAVF1,NWAVF1,ALENG,WIDTHH,AOM,BON,EIGMY1,EIGMX1=',
C    1        MWAVF1(ISEG,ILOOP),NWAVF1(ISEG,ILOOP),
C    1                      ALENG,WIDTHH,AOM,BON,EIGMY1,EIGMX1
C END JUN 1999
C
C  sandwich core instability from Vinson theory:
C    see Eq.(12), p1692, AIAA J., 1986 (core crimp under pure axial compres.)
C    see Eq.(59), Proc. 1st International Conf. on Sandwich Constructions,
C    Stockholm, Sweden, June 1989 (core crimp under pure in-plane shear)
C
              VINSXX = GCXP(ID,ILOOP)*HCX
              VINSYY = GCYP(ID,ILOOP)*HCX
              VINSXY = SQRT(GCXP(ID,ILOOP)*GCYP(ID,ILOOP))*HCX
              FNXRAT = 0.
              FNXSUM = FNXF1(ID,ILOOP) + FNXF2(ID,ILOOP)
              IF (FNXSUM.LT.0.0)
     1           FNXRAT = ABS(FNXSUM)/VINSXX
              FNYRAT = 0.
              FNYSUM = FNYF1(ID,ILOOP) + FNYF2(ID,ILOOP)
              IF (FNYSUM.LT.0.0)
     1           FNYRAT = ABS(FNYSUM)/VINSYY
              FNXYRT = (FNXYF1(ID,ILOOP)+FNXYF2(ID,ILOOP))/VINSXY
              FNFSUM = SQRT(FNXRAT**2 + FNYRAT**2 + FNXYRT**2)
              EIGCOR(ISEG,ILOOP) = 10.E+16
              IF (FNFSUM.GT.0.0) EIGCOR(ISEG,ILOOP) = 1./FNFSUM
              VINHOF = '(VINSON)'
              CALL RECORD(0,18,EIGCOR(ISEG,ILOOP),0.,
     1            0,0,ICONST,CONSTR,
     1            WORDB,IFILE,IDESGN,JJJ,LENMOD,EIGMAX,IPOINC,INUMTT,
     1            FSAFE,ICASE,ISEG,ILOOP,VINHOF,MORCON(ILOADS,ICASE),
     1            ENDMID,0,0,0)
C BEG FEB 2007
              IF (ITYPE.EQ.1.AND.NNPRT.GE.2)
     1        WRITE(IFILE,*)' AFTER RECORD37: IDESGN,INUMTT,ICONST=',
     1                                        IDESGN,INUMTT,ICONST
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2007
              IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 2222
C
C  face dimpling of face sheet no. 1 (BUSHNELL formula only)...
              IF (ICORE(ISEG,ILOOP).NE.0) THEN
               EFOUND = 0.0
               CALL GENSTB(1,2.*HEXSID(ISEG,ILOOP),
     1                                2.*HEXSID(ISEG,ILOOP),
     1         FNXF1(ID,ILOOP),FNYF1(ID,ILOOP),FNXYF1(ID,ILOOP),
     1         0.,0.,MWADF1(ISEG,ILOOP),NWADF1(ISEG,ILOOP),
     1         TESDF1(ISEG,ILOOP),SLODF1(ISEG,ILOOP),EIGDF1(ISEG,ILOOP),
     1         IDESGN,EIG1,CZFF1(1,1,ID),TZFF1(ID),TZFF1(ID),
     1         GTZF1(1,ID),IREDUC,0,IFILE,ITUTOR,JJJ,ISTIF,
     1         RESLTZ,RPREZ,1,10.E10,0.,FDUM1,1,1,IDUM,FDUM3,
     1         7350,EIGRDM,RBB0DM,ILOADS,ICASE)
               CPRINT = SLODF1(ISEG,ILOOP)
               IF (TESDF1(ISEG,ILOOP).LT.1.0
     1           .AND.ABS(SLODF1(ISEG,ILOOP)).GT.0.0) 
     1                                   CPRINT = 1./SLODF1(ISEG,ILOOP)
               VINHOF = '(BUSHNL)'
               CALL RECORD(0,14,EIGDF1(ISEG,ILOOP),CPRINT,
     1            MWADF1(ISEG,ILOOP),NWADF1(ISEG,ILOOP),ICONST,CONSTR,
     1            WORDB,IFILE,IDESGN,JJJ,LENMOD,EIGMAX,IPOINC,INUMTT,
     1            FSAFE,ICASE,ISEG,ILOOP,VINHOF,MORCON(ILOADS,ICASE),
     1            ENDMID,0,0,0)
C BEG FEB 2007
               IF (ITYPE.EQ.1.AND.NNPRT.GE.2)
     1         WRITE(IFILE,*)' AFTER RECORD38: IDESGN,INUMTT,ICONST=',
     1                                         IDESGN,INUMTT,ICONST
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2007
               IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 2222
              ENDIF
C
C  face wrinkling of face sheet no. 2. First from BUSHNELL formula...
C BEG JAN 1999
              EFOUND = FCTFB2(ISEG,ILOOP)*WFOUND(ID,ILOOP)
              IF (NNPRT.GE.2) WRITE(IFILE,'(/,A,A,/,2I3,1P,3E12.4)')
     1      ' Wrinkling of face sheet 2: ISEG, ILOOP, ALENG, WIDTHH,',
     1      ' FCTFB2(ISEG,ILOOP)=',
     1         ISEG,ILOOP,ALENG,WIDTHH,FCTFB2(ISEG,ILOOP)
C END JAN 1999
              CALL GENSTB(1,ALENG,WIDTHH,
     1         FNXF2(ID,ILOOP),FNYF2(ID,ILOOP),FNXYF2(ID,ILOOP),
     1         0.,0.,MWAVF2(ISEG,ILOOP),NWAVF2(ISEG,ILOOP),
     1         TESTF2(ISEG,ILOOP),SLOPF2(ISEG,ILOOP),EIGWF2(ISEG,ILOOP),
     1         IDESGN,EIG1,CZFF2(1,1,ID),TZFF2(ID),TZFF2(ID),
     1         GTZF2(1,ID),IREDUC,0,IFILE,ITUTOR,JJJ,ISTIF,
     1         RESLTZ,RPREZ,1,10.E10,0.,FDUM1,1,1,IDUM,FDUM3,
     1         7355,EIGRDM,RBB0DM,ILOADS,ICASE)
C BEG JAN 1999
              IF (IDESGN.EQ.0.AND.ICORE(ID,ILOOP).NE.0) THEN
                 WVLTH1 = ALENG
                 WVLTH2 = WIDTHH
                 IF (MWAVF2(ISEG,ILOOP).GT.0)
     1              WVLTH1 = ALENG/FLOAT(MWAVF2(ISEG,ILOOP))
                 IF (NWAVF2(ISEG,ILOOP).GT.0)
     1              WVLTH2 = WIDTHH/FLOAT(NWAVF2(ISEG,ILOOP))
                 WAVMIN = MIN(WVLTH1,WVLTH2)
                 CELDIA = 1.732*HXSIDX(M)
                 WAVRAT = WAVMIN/CELDIA
                 IF (WAVRAT.LT.2.0) THEN
                    IF (WAVRAT.LT.1.0) THEN
                       FCTFB2(ISEG,ILOOP) = 0.5
                    ELSE
                       FCTFB2(ISEG,ILOOP) = 0.5*WAVRAT
                    ENDIF
                    EFOUND = FCTFB2(ISEG,ILOOP)*WFOUND(ID,ILOOP)
                    IF (NNPRT.GE.2)
     1               WRITE(IFILE,'(/,A,A,/,A,A,/,2I3,1P,3E12.4)')
     1             ' Core modulus reduced because of short wrinkle',
     1             ' halfwavelength:',
     1             ' Wrinkling of face sheet 2: ISEG, ILOOP, ALENG,',
     1             ' WIDTHH, FCTFB2(ISEG,ILOOP)=',
     1               ISEG,ILOOP,ALENG,WIDTHH,FCTFB2(ISEG,ILOOP)
C
                    CALL GENSTB(1,ALENG,WIDTHH,FNXF2(ID,ILOOP),
     1               FNYF2(ID,ILOOP),FNXYF2(ID,ILOOP),0.,0.,
     1               MWAVF2(ISEG,ILOOP),NWAVF2(ISEG,ILOOP),
     1               TESTF2(ISEG,ILOOP),SLOPF2(ISEG,ILOOP),
     1               EIGWF2(ISEG,ILOOP),IDESGN,EIG1,CZFF2(1,1,ID),
     1               TZFF2(ID),TZFF2(ID),GTZF2(1,ID),IREDUC,0,IFILE,
     1               ITUTOR,JJJ,ISTIF,RESLTZ,RPREZ,1,10.E10,0.,FDUM1,
     1               1,1,IDUM,FDUM3,7356,EIGRDM,RBB0DM,ILOADS,ICASE)
                 ENDIF
              ENDIF
C END JAN 1999
              CPRINT = SLOPF2(ISEG,ILOOP)
              IF (TESTF2(ISEG,ILOOP).LT.1.0
     1           .AND.ABS(SLOPF2(ISEG,ILOOP)).GT.0.0) 
     1                                   CPRINT = 1./SLOPF2(ISEG,ILOOP)
              VINHOF = '(BUSHNL)'
              CALL RECORD(0,15,EIGWF2(ISEG,ILOOP),CPRINT,
     1            MWAVF2(ISEG,ILOOP),NWAVF2(ISEG,ILOOP),ICONST,CONSTR,
     1            WORDB,IFILE,IDESGN,JJJ,LENMOD,EIGMAX,IPOINC,INUMTT,
     1            FSAFE,ICASE,ISEG,ILOOP,VINHOF,MORCON(ILOADS,ICASE),
     1            ENDMID,0,0,0)
C BEG FEB 2007
              IF (ITYPE.EQ.1.AND.NNPRT.GE.2)
     1        WRITE(IFILE,*)' AFTER RECORD39: IDESGN,INUMTT,ICONST=',
     1                                        IDESGN,INUMTT,ICONST
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2007
              IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 2222
C
C BEG OCT 1996
C  face wrinkling of face sheet no. 2 from minimum of Vinson's theory
C    see Eq.(15), p1692, AIAA J., 1986 (wrinkling under pure axial compres.)
C    see Eq.(60), Proc. 1st International Conf. on Sandwich Constructions,
C    Stockholm, Sweden, June 1989 (wrinkling under pure in-plane shear)
C    and Hoff's (see Plantema, J, SANDWICH CONSTRUCTION, John Wiley, NY
C    1966, p. 43, Eq.(10)):
C
C  wrinkling from Vinson's formula:
C BEG JAN 1999
C   compute number of axial halfwaves from Plantema's formula, Eq.(  ),
C   p. ??, F. J. Plantema, SANDWICH CONSTRUCTION, John Wiley, 1966:
              EEFF  = ECCORE(ISEG,ILOOP)*GLUFCT(ISEG,ILOOP)
              IF (IDESGN.EQ.0.AND.ICORE(ISEG,ILOOP).NE.0) THEN
                 WAVPRD = CZFF2(4,4,ID)**2/(EEFF*GCXP(ID,ILOOP))
                 LOGWAV = 0.16667*LOG(WAVPRD)
                 WAVLTH = 1.26*3.1416*EXP(LOGWAV)
                 CELDIA = 1.732*HXSIDX(M)
                 WAVRAT = WAVLTH/CELDIA
                 IF (WAVRAT.LT.2.0) THEN
                    IF (WAVRAT.LT.1.0) THEN
                       FCTFP2(ISEG,ILOOP) = 0.5
                    ELSE
                       FCTFP2(ISEG,ILOOP) = 0.5*WAVRAT
                    ENDIF
                 ENDIF
                 IF (NNPRT.GE.2)
     1              WRITE(IFILE,'(/,A,1P,2E11.3,/,A,1P,E12.4)')
     1        ' Face sheet 2: wrinkling halfwavelength, cell diameter=',
     1              WAVLTH, CELDIA,
     1       ' It is necessary to reduce the core moduli by the factor',
     1              FCTFP2(ISEG,ILOOP)
C23456789012345678901234567890123456789012345678901234567890123456789012
              ENDIF
              CPROD = SQRT(CZFF2(1,1,ID)*CZFF2(2,2,ID))
              HCX   = TZ(ID) - TZFF1(ID) - TZFF2(ID)
              VINSXX =TZFF2(ID)*SQRT(0.667*FCTFP2(ISEG,ILOOP)
     1                                              *EEFF*CPROD/HCX)
C END JAN 1999
              VINSYY = VINSXX
              VINSXY = VINSXX
              FNXRAT = 0.
              IF (FNXF2(ID,ILOOP).LT.0.0)
     1           FNXRAT = ABS(FNXF2(ID,ILOOP))/VINSXX
              FNYRAT = 0.
              IF (FNYF2(ID,ILOOP).LT.0.0)
     1           FNYRAT = ABS(FNYF2(ID,ILOOP))/VINSYY
              EIGVNY = 10.E+16
              IF (FNYRAT.GT.0.0) EIGVNY = 1./FNYRAT
C BEG JUN 1999
              EIGVNX = 10.E+16
              IF (FNXRAT.GT.0.0) EIGVNX = 1./FNXRAT
C END JUN 1999
              FNXYRT = FNXYF2(ID,ILOOP)/VINSXY
              FNFSUM = SQRT(FNXRAT**2 + FNYRAT**2 + FNXYRT**2)
              EIGVIN = 10.E+16
              IF (FNFSUM.GT.0.0) EIGVIN = 1./FNFSUM
C  wrinkling from Hoff's formula: 
C       N(face)(crit)=0.5*t(core)*[E(face)*E(core)*G(core)]**(1/3)
C BEG JAN 1999
              HOFPRD = 
     1         CZFF2(1,1,ID)*FCTFP2(ISEG,ILOOP)**2*
     1                            EEFF*GCXP(ID,ILOOP)/TZFF2(ID)
              LOGHOF = 0.3333*LOG(HOFPRD)
              HOFFXX = 0.5*TZFF2(ID)*EXP(LOGHOF)
              HOFPRD = 
     1         CZFF2(2,2,ID)*FCTFP2(ISEG,ILOOP)**2*
     1                            EEFF*GCYP(ID,ILOOP)/TZFF2(ID)
     1                                       
C END JAN 1999
              LOGHOF = 0.3333*LOG(HOFPRD)
              HOFFYY = 0.5*TZFF2(ID)*EXP(LOGHOF)
              HOFFXY = HOFFYY
              FNXRAT = 0.
              IF (FNXF2(ID,ILOOP).LT.0.0)
     1           FNXRAT = ABS(FNXF2(ID,ILOOP))/HOFFXX
              FNYRAT = 0.
              IF (FNYF2(ID,ILOOP).LT.0.0)
     1           FNYRAT = ABS(FNYF2(ID,ILOOP))/HOFFYY
              EIGHNY = 10.E+16
              IF (FNYRAT.GT.0.0) EIGHNY = 1./FNYRAT
              EIGMY2 = MIN(EIGVNY,EIGHNY)
C BEG JUN 1999
              EIGHNX = 10.E+16
              IF (FNXRAT.GT.0.0) EIGHNX = 1./FNXRAT
              EIGMX2 = MIN(EIGVNX,EIGHNX)
C END JUN 1999
              FNXYRT = FNXYF2(ID,ILOOP)/HOFFXY
              FNFSUM = SQRT(FNXRAT**2 + FNYRAT**2 + FNXYRT**2)
              EIGHOF = 10.E+16
              IF (FNFSUM.GT.0.0) EIGHOF = 1./FNFSUM
C   pick the smaller result from Vinson or Hoff theories:
              EIGVF2(ISEG,ILOOP) = MIN(EIGVIN,EIGHOF)
              IF (IDESGN.EQ.0) THEN
                 VINHOF = '(VINSON)'
                 IF (EIGHOF.LT.EIGVIN) VINHOF = '( HOFF )'
                 VINHOX(ISEG,ILOOP,2) = VINHOF
              ENDIF
              VINHOF = VINHOX(ISEG,ILOOP,2)
              IF (ILOADS.EQ.1.AND.ICASE.EQ.1) THEN
C   compute number of axial halfwaves from Plantema's formula, Eq.(  ),
C   p. ??, F. J. Plantema, SANDWICH CONSTRUCTION, John Wiley, 1966:
C BEG JAN 1999
                 WAVPRD = CZFF2(4,4,ID)**2/
     1               (EEFF*GCXP(ID,ILOOP)*FCTFP2(ISEG,ILOOP)**2)
C END JAN 1999
                 LOGWAV = 0.16667*LOG(WAVPRD)
                 WAVLTH = 1.26*3.1416*EXP(LOGWAV)
                 IF (IDESGN.EQ.0) MPLNT2(ISEG,ILOOP) = ALENG/WAVLTH

C BEG MAR 2001
                 IF (NNPRT.GE.2) THEN
                  WRITE(8,'(A,I2,A,1P,E12.4)')
     1          ' Iseg=',ISEG,
     1          '; face2 wrinkle half-wavelength (PLANTEMA)=',WAVLTH
                  WRITE(8,'(A,1P,E10.3,A,1P,E10.3)')
     1          ' Eigenvalues: Vinson theory,EIGVIN=',EIGVIN,
     1          '; Hoff theory,EIGHOF=',EIGHOF
                 ENDIF
C END MAR 2001
                 IF (ICORE(ISEG,ILOOP).NE.0) THEN
                    CELDIA = 1.732*HXSIDX(M)
                    WAVRAT = WAVLTH/CELDIA
                    IF (NNPRT.GE.2)
     1               WRITE(8,'(A,I2,A,1P,E12.4,/,A,1P,E12.4)')
     1             ' Matl=',M,'; Diameter of honeycomb cell=',CELDIA,
     1'          (face2 wrinkle halfwavelength)/(cell diameter)=',WAVRAT
C23456789012345678901234567890123456789012345678901234567890123456789012
                    IF (IDESGN.EQ.0.AND.WAVRAT.LT.1.0)
     1               WRITE(8,'(A,I2,A,I2,A,/,A,A,/,A,1P,E12.4)')
     1          ' ***** WARNING Iseg=',ISEG,', Iloop=',ILOOP,': ******',
     1             ' Face2 wrinkle halfwavelength is less than the',
     1             ' honeycomb cell diameter.',
     1         ' (face2 wrinkle halfwavelength)/(cell diameter)=',WAVRAT
C  Set up constraint to keep face 2 wrinkling halfwavelength longer than
C  2.0 times the honeycomb cell diameter.
C BEG JAN 1999
C BEG JUN 1999
C                  IF (IUSEHC(M).EQ.1) THEN
                   IF (IUSEHC(M).EQ.1.AND.ITESTB.EQ.0) THEN
C END JUN 1999
C                  IF (IUSEHC(M).EQ.100) THEN
C END JAN 1999
                    INUMTT = INUMTT + 1
                    FSAFX = 1.0
                    WAVCON = WAVRAT/2.0
                    CALL CONVR2(M,CM)
                    CALL CONVR2(ISEG,CISEG)
                    CALL CONVRF(FSAFX,CN2)
C BEG APR 1997  (FOLLOWING THREE MOVED UP ABOVE "IF (IDESGN...")
                    MIDWRD = 'MIDLENGTH'
                    IF (ICASE.EQ.2) MIDWRD = 'PANEL END'
                    IF (ATRING.AND.ICASE.EQ.2) MIDWRD = 'AT RINGS '
C END APR 1997
                    IF (IDESGN.EQ.0.AND.WAVCON.LT.MAXCON) THEN
                      ICAR = ICAR + 1
                    PCWORD(ICAR) ='Face2 wavelength/celldiam;'//SRWORD//
     1           ';Iseg='//CISEG//';Matl='//CM//';'//MIDWRD//';FS='//CN2
                      CPLOT(ICAR) = WAVCON - 1.
                      IADDCC(ICAR) = 0
                      FSAFEP(ICAR) = FSAFX
                    ENDIF
                    IF (IDESGN.EQ.0.AND.WAVCON.GT.EIGMAX) GO TO 1138
                    IF (IDESGN.EQ.1.AND.IPOINC(INUMTT).EQ.0) GO TO 1138
                    ICONST = ICONST + 1
                    IF (IDESGN.EQ.0) IPOINC(INUMTT) = 1
                    CONSTR(ICONST) = WAVCON
                    WORDB(ICONST)='Face2 wavelength/celldiam;'//SRWORD//
     1           ';Iseg='//CISEG//';Matl='//CM//';'//MIDWRD//';FS='//CN2
C BEG APR 2007
                    IF (NPRT.GE.0) WRITE(8,'(A,1P,E12.4,2X,A)')
     1            ' Margin=',CONSTR(ICONST)-1.,WORDB(ICONST)
C END APR 2007
 1138               CONTINUE
                   ENDIF
                 ENDIF
              ENDIF
C
              CALL RECORD(0,19,EIGVF2(ISEG,ILOOP),0.,
     1            MPLNT2(ISEG,ILOOP),0,ICONST,CONSTR,
     1            WORDB,IFILE,IDESGN,JJJ,LENMOD,EIGMAX,IPOINC,INUMTT,
     1            FSAFE,ICASE,ISEG,ILOOP,VINHOF,MORCON(ILOADS,ICASE),
     1            ENDMID,0,0,0)
C BEG FEB 2007
              IF (ITYPE.EQ.1.AND.NNPRT.GE.2)
     1        WRITE(IFILE,*)' AFTER RECORD40: IDESGN,INUMTT,ICONST=',
     1                                        IDESGN,INUMTT,ICONST
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2007
              IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 2222
C BEG APR 1997
              EIGAVE = 0.5*(EIGWF2(ISEG,ILOOP) + EIGVF2(ISEG,ILOOP))
              EIGMF2(ISEG,ILOOP) =
C    1                    MIN(EIGWF2(ISEG,ILOOP),EIGVF2(ISEG,ILOOP))
     1                    MIN(EIGAVE,EIGVF2(ISEG,ILOOP))
              IF (NNPRT.GE.2) WRITE(8,'(A,2I2,A,1P,E12.4)')
     1      ' Iseg,ILOOP=',ISEG,ILOOP,
     1      ': Face sheet 2 wrinkling load factor=',EIGMF2(ISEG,ILOOP)
C END APR 1997
C BEG JUN 1999
              AOM = 10.E+16
              BON = 10.E+16
              IF (MWAVF2(ISEG,ILOOP).GT.0)
     1           AOM = ALENG/FLOAT(MWAVF2(ISEG,ILOOP))
              IF (NWAVF2(ISEG,ILOOP).GT.0)
     1           BON =WIDTHH/FLOAT(NWAVF2(ISEG,ILOOP))
              IF (AOM.GT.BON) THEN
                 EIGMY2 = EIGMF2(ISEG,ILOOP)
              ELSE
                 EIGMX2 = EIGMF2(ISEG,ILOOP)
              ENDIF
C             WRITE(8,'(A,2I8,/,1P,6E12.4)')
C    1      ' MWAVF2,NWAVF2,ALENG,WIDTHH,AOM,BON,EIGMY2,EIGMX2=',
C    1        MWAVF2(ISEG,ILOOP),NWAVF2(ISEG,ILOOP),
C    1                      ALENG,WIDTHH,AOM,BON,EIGMY2,EIGMX2
C END JUN 1999
C
C  face dimpling of face sheet no. 2. BUSHNELL formula only...
              IF (ICORE(ISEG,ILOOP).NE.0) THEN
               EFOUND = 0.0
               CALL GENSTB(1,2.*HEXSID(ISEG,ILOOP),
     1                                2.*HEXSID(ISEG,ILOOP),
     1         FNXF2(ID,ILOOP),FNYF2(ID,ILOOP),FNXYF2(ID,ILOOP),
     1         0.,0.,MWADF2(ISEG,ILOOP),NWADF2(ISEG,ILOOP),
     1         TESDF2(ISEG,ILOOP),SLODF2(ISEG,ILOOP),EIGDF2(ISEG,ILOOP),
     1         IDESGN,EIG1,CZFF2(1,1,ID),TZFF2(ID),TZFF2(ID),
     1         GTZF2(1,ID),IREDUC,0,IFILE,ITUTOR,JJJ,ISTIF,
     1         RESLTZ,RPREZ,1,10.E10,0.,FDUM1,1,1,IDUM,FDUM3,
     1         7360,EIGRDM,RBB0DM,ILOADS,ICASE)
               CPRINT = SLODF2(ISEG,ILOOP)
               IF (TESDF2(ISEG,ILOOP).LT.1.0
     1           .AND.ABS(SLODF2(ISEG,ILOOP)).GT.0.0) 
     1                                   CPRINT = 1./SLODF2(ISEG,ILOOP)
               VINHOF = '(BUSHNL)'
               CALL RECORD(0,16,EIGDF2(ISEG,ILOOP),CPRINT,
     1            MWADF2(ISEG,ILOOP),NWADF2(ISEG,ILOOP),ICONST,CONSTR,
     1            WORDB,IFILE,IDESGN,JJJ,LENMOD,EIGMAX,IPOINC,INUMTT,
     1            FSAFE,ICASE,ISEG,ILOOP,VINHOF,MORCON(ILOADS,ICASE),
     1            ENDMID,0,0,0)
C BEG FEB 2007
               IF (ITYPE.EQ.1.AND.NNPRT.GE.2)
     1         WRITE(IFILE,*)' AFTER RECORD41: IDESGN,INUMTT,ICONST=',
     1                                         IDESGN,INUMTT,ICONST
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2007
               IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 2222
              ENDIF
C BEG JUN 1999
              IF (ITESTB.EQ.1) GO TO 2222
C23456789012345678901234567890123456789012345678901234567890123456789012
              IF (NNPRT.GE.2.AND.ISEG.EQ.1.AND.ILOOP.EQ.1.AND.ICASE.EQ.1
C BEG NOV 2003
     1                      .AND.ILABLY.GE.9260) THEN
C END NOV 2003
          WRITE(8,'(/,A,A,/,A,/,A,/,A,/,A)')
     1       ' We are in the section of BUCPAN for various modes of',
     1       ' sandwich core failure...',
     1       ' Some definitions follow:',
     1       ' ILOOP  = 1 for skin-stringer module',
     1       '          2 for skin-ring module',
     1       ' ISEG   = segment number in module (Seg. 1 = panel skin)'
C BEG FEB 2007
          WRITE(8,'(/,A,/,A,/,A,/,A,/,A,/,A,/)')
     1  ' This panel contains segments with a sandwich wall. See',
     1  ' Bushnell, D.,',
     1  ' "Optimum design via PANDA2 of composite sandwich panels with',
     1  '  honeycomb or foam cores", AIAA Paper 97-1142, Proc. 38th',
     1  '  AIAA Structures, Structural Dynamics and Materials',
     1  '  Conference, pp 2163-2202, April, 1997'
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2007
          WRITE(8,'(A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1       ' SIGWEB = local normal stress in core caused by',
     1       '          stiffener web pulling/pushing on facesheet',
     1       ' SIGNRM = local normal stress in core caused by',
     1       '          amplification of face sheet waviness',
     1       ' SIGTOT = SIGWEB + SIGNRM, contributes to core crushing',
     1       '          and/or face sheet pull-off',
     1       ' TAUNRM = x-z or y-z transverse shear stress in core',
     1       '          from amplification of face sheet waviness',
     1       ' TAUTTX = x-z transverse shear stress in core caused by',
     1       '          amplification of face sheet waviness + stiff.',
     1       ' TAUTTY = y-z transverse shear stress in core caused by',
     1       '          amplification of face sheet waviness + stiff.'
          WRITE(8,'(A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1       ' QXMAX  = x-z transverse shear stress from KOITER theory',
     1       '          plus response of panel to normal pressure',
     1       ' QXMAXX = QXMAX + TAUTTX, can cause "L"-direction (x-z)',
     1       '          shear failure in the core',
     1       ' QYMAX  = y-z transverse shear stress from KOITER theory',
     1       '          plus response of panel to normal pressure',
     1       ' QYMAXX = QYMAX + TAUTTY, can cause "W"-direction (y-z)',
     1       '          shear failure in the core',
     1       ' SHL    = "L"-direction (x-z) transverse shear stress',
     1       '          allowable of the core',
     1       ' SHW    = "W"-direction (y-z) transverse shear stress',
     1       '          allowable of the core'
          WRITE(8,'(A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1       ' FNK    = knockdown factor for transverse shear stress',
     1       '          allowables, SHL and SHW, to compensate for',
     1       '          the thickness of the core',
     1       ' PNORM  = normal pressure acting on the panel',
     1       ' CRUSHX = crushing stress on core arising from panel',
     1       '          deformation',
     1       ' CRUSHF = CRUSHX + PNORM + SIGTOT = total normal stress',
     1       '          tending to crush the core',
     1       ' CRH    = core crushing stress allowable',
     1       ' SIGPOP = normal stress tending to "pop" the stiffener',
     1       '          off of the sandwich panel',
     1       ' WOVERL = normalized initial face sheet waviness, Wo/L'
              ENDIF
C END JUN 1999
C  deformation-induced core crushing and Qx,Qy failure of the sandwich core
C  find normal and shear stress from 1. initial wrinkling (SIGNRM,TAUNRM)
C  and 2. buckling modal bending of the stringer web (SIGWEB). These
C  stresses can pull the face sheet from the core or help to crush the
C  core.
               TAUTTX = 0.
               TAUTTY = 0.
               SIGWEB = 0.
C BEG MAR 1997
               TAUTTH = 0.
               WOLM   = 0.
               WOLP   = 0.
C BEG APR 1997
               TAUTTR = 0.
               WOLPOP = 0.
               SIGPOP = 0.
               RNGFCE = 0.
               IDOIT1 = ICASE.EQ.2.AND.ILOOP.EQ.1.AND.B2(2).EQ.0.0
     1              .AND.ISEG.EQ.1.AND.ISTIF(2).GE.1.AND.ISTIF(2).LE.3
               IDOIT2 = ISTIF(ILOOP).GE.1.AND.ISTIF(ILOOP).LE.3
     1                     .AND.(ISEG.EQ.2.OR.ISEG.EQ.4)
               IF (IDOIT1) RNGFCE = POPRNG
               IF (ICASE.EQ.2.AND.ILOOP.EQ.2.AND.IDOIT2) RNGFCE = POPRNG
               IF (IDOIT1.OR.IDOIT2) THEN
C END APR 1997
C23456789012345678901234567890123456789012345678901234567890123456789012
C
C  SIGWEB is the maximum tensile or compressive stress in the core
C  of the panel skin (the part of the panel skin that forms the
C  stiffener base, that is, ISEG = 2) caused by the facesheet loads,
C  FNYF1(3,ILOOP) and FNYF2(3,ILOOP), in the web. These web facesheet
C  loads give rise to normal line loads P (e.g. lb/in) that tend to pull
C  the top facesheet from the sandwich core and that tend to crush the
C  core under the stiffener web. The formulas in this section are taken
C  from Chapter 3, "Beams on Elastic Foundation", by M. Hetenyi, in the
C  HANDBOOK OF ENGINEERING MECHANICS, W. Flugge, editor, 1962, pp 31.1 -
C  31.3. WEBFCT represents lambda [Eq.(31.5)], PULL is the normal load
C  per width, called P in Hetenyi's fig. 31.2a. SIGWEB results from use
C  of Hetenyi's Eq.(31.6a) for normal displacement w  and Hetenyi's
C  Eq.31.1 for the normal stress, p = kw, in which k is the elastic
C  foundation modulus in Seg. 2.
C  YCOORD is a modifying factor between 1.0 and 0.0. If the
C  characteristic wavelength of deflection of the "beam" on the elastic
C  foundation (characteristic wavelength = pi/lambda) is shorter than
C  XLOW*(core thickness) (approx. TZ(ISEG)), then YCOORD = 1.0. If the
C  characteristic wavelength is greater than XHIGH*(core thickness),
C  then YCOORD = 0.0, and YCOORD varies linearly between these limits.
C  The effective foundation stiffness in this part of PANDA2 is taken
C  to be half what it is elsewhere because the disturbance acts only
C  on one facesheet. Hence the "8." in the denominator
C  of the expression for WEBFCT, whereas Hetenyi has a "4.".
C  WOLP is the normal displacement/L due to PULL; WOLM is the normal
C  displacement/L due to FMY; WOLPOP is the normal displacement/L due
C  to POPRNG, in which POPRNG is the widthwise resultant in the ring
C  web generated from normal pressure.
C  TAUTTH is the max. yz shear stress in the core induced by bending
C  at the root or tip of the stringer web or ring web.
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG MAR 1997
C BEG APR 1997
                IF (ILOOP.EQ.1.OR.INTEXT(ILOOP).EQ.0)  WEBFCT = 
     1                 SQRT(SQRT(WFOUND(ID,ILOOP)/(8.*CZFF1(5,5,ISEG))))
                IF (ILOOP.EQ.2.AND.ISEG.EQ.2) WEBFCT = 
     1                 SQRT(SQRT(WFOUND(ID,ILOOP)/(8.*CZFF1(5,5,ISEG))))
                IF (IDOIT1.AND.INTEXT(2).NE.0)         WEBFCT = 
     1                 SQRT(SQRT(WFOUND(ID,ILOOP)/(8.*CZFF2(5,5,ISEG))))
                IF (ISEG.EQ.4)                         WEBFCT = 
     1                 SQRT(SQRT(WFOUND(ID,ILOOP)/(8.*CZFF2(5,5,ISEG))))
C END APR 1997
C END MAR 1997
                XCOORD = (3.14159/WEBFCT)/TZ(ISEG)
                YCOORD = 0.
                XLOW = 1.0
                XHIGH= 3.0
                IF (XCOORD.LE.XLOW)  YCOORD = 1.0
                IF (XCOORD.GE.XHIGH) YCOORD = 0.0
                IF (XCOORD.GT.XLOW.AND.XCOORD.LT.XHIGH)
     1              YCOORD = (1.0/(XLOW-XHIGH))*(XCOORD - XHIGH)
                PULL = 0.
C BEG APR 1997
                IF (ILOOP.EQ.1.AND.ISANDW(3,ILOOP).GT.1.AND.
C END APR 1997
     1           ISANDW(3,ILOOP).LT.NLAYER(3,ILOOP))
     1             PULL = MAX(ABS(FNYF1(3,ILOOP)),ABS(FNYF2(3,ILOOP)))
                SIGWEB = YCOORD*ABS(PULL*WEBFCT)/2.
C BEG MAR 1997
                WOLP   = YCOORD*ABS(PULL)*WEBFCT*WEBFCT*(3./3.14159)/
     1                           (2.*WFOUND(ID,ILOOP))
C END MAR 1997
C BEG APR 1997
C23456789012345678901234567890123456789012345678901234567890123456789012
                SIGPOP = YCOORD*RNGFCE*WEBFCT/2.
                WOLPOP = YCOORD*ABS(RNGFCE)*WEBFCT*WEBFCT*
     1                               (3./3.14159)/(2.*WFOUND(ID,ILOOP))
               ENDIF
               FMY = 0.
               IF (ILOOP.EQ.1.AND.ISTIF(1).GT.0.AND.SIGWEB.EQ.0.0
     1                       .AND.ISEG.NE.IWEB) THEN
C
C  This section is also based on Hetenyi's beam on elastic foundation.
C  However, in the following we assume that the stringer web imposes
C  a line moment on the panel skin. The maximum normal deflection of
C  the beam on the elastic foundation is given in Fig. 31.3 (top), that
C  is, maximum normal deflection w = (Mo*lambda**2/k)*exp(-pi/4)*0.7071.
C  YCOORD has the same meaning as above.
C
C23456789012345678901234567890123456789012345678901234567890123456789012
                  IF (ISEG.EQ.IWEBM) THEN
                     WEBFCT = 
C BEG MAR 1997
C    1                 SQRT(SQRT(WFOUND(ID,ILOOP)/(8.*CZFF1(5,5,ID))))
     1                 SQRT(SQRT(WFOUND(ID,ILOOP)/(8.*CZFF1(5,5,ISEG))))
C END MAR 1997
                     XCOORD = (3.14159/WEBFCT)/TZ(ISEG)
                     YCOORD = 0.
                     XLOW = 1.0
                     XHIGH= 3.0
                     IF (XCOORD.LE.XLOW)  YCOORD = 1.0
                     IF (XCOORD.GE.XHIGH) YCOORD = 0.0
                     IF (XCOORD.GT.XLOW.AND.XCOORD.LT.XHIGH)
     1                   YCOORD = (1.0/(XLOW-XHIGH))*(XCOORD - XHIGH)
                     IF (ISTIF(1).LT.4)
     1                  FMY = CX(5,5,IWEB)*ABS(WDDVAR(1,IWEB))
                     IF (ISTIF(1).EQ.4.AND.NSEGB5.EQ.6)
     1                  FMY = CX(5,5,IWEB)*MAX(ABS(WDDVAR(1,3)),
     1                                         ABS(WDDVAR(11,5)))
                     IF (ISTIF(1).EQ.4.AND.NSEGB5.EQ.8)
     1                  FMY = CX(5,5,IWEB)*MAX(ABS(WDDVAR(1,4)),
     1                                         ABS(WDDVAR(11,6)))
                     IF (ISTIF(1).EQ.5)
     1                  FMY = CX(5,5,IWEB)*MAX(ABS(WDDVAR(1,2)),
     1                                         ABS(WDDVAR(11,4)))
                  ENDIF
                  IF (ISEG.EQ.IWEBP) THEN
                     WEBFCT = 
     1                  SQRT(SQRT(WFOUND(ID,ILOOP)/(8.*CZFF2(5,5,ID))))
                     XCOORD = (3.14159/WEBFCT)/TZ(ISEG)
                     YCOORD = 0.
                     XLOW = 1.0
                     XHIGH= 3.0
                     IF (XCOORD.LE.XLOW)  YCOORD = 1.0
                     IF (XCOORD.GE.XHIGH) YCOORD = 0.0
                     IF (XCOORD.GT.XLOW.AND.XCOORD.LT.XHIGH)
     1                   YCOORD = (1.0/(XLOW-XHIGH))*(XCOORD - XHIGH)
                     IF (ISTIF(1).EQ.1) 
     1                  FMY = CX(5,5,IWEB)*ABS(WDDVAR(11,IWEB))
                     IF (ISTIF(1).EQ.5)
     1                  FMY = CX(5,5,IWEB)*MAX(ABS(WDDVAR(11,2)),
     1                                         ABS(WDDVAR(1,4)))
C                    IF (NNPRT.GE.2) WRITE(8,'(A,I2,1P,3E12.4)')
C    1             ' IWEB,FMY,CX(5,5,IWEB),WDDVAR(11,IWEB)=',
C    1               IWEB,FMY,CX(5,5,IWEB),WDDVAR(11,IWEB)
                  ENDIF
                  SIGWEB = YCOORD*FMY*WEBFCT*WEBFCT*0.7071*EXP(-0.7854)
C BEG MAR 1997
                  WOLM   = YCOORD*FMY*WEBFCT**3*(2./3.14159)
     1                     *0.7071*EXP(-0.7854)/WFOUND(ID,ILOOP)
C END MAR 1997
               ENDIF
               SIGTOT = SIGWEB
C BEG MAR 1997
               TAUTTH = 3.14159*ABS(WOLP + WOLM)*GCYP(ID,ILOOP)
C BEG APR 1997
               TAUTTR = 3.14159*ABS(WOLPOP)*GCXP(ID,ILOOP)
               IF (NNPRT.GE.2) THEN
                IF (ILOOP.EQ.1) WRITE(8,'(A)')
     1        ' **** IN PANEL SKIN OR IN STRINGER SEGMENT ****'
                IF (ILOOP.EQ.2) WRITE(8,'(A)')
     1        ' **** IN RING SEGMENT ****'
C               WRITE(8,'(A,/,1P,4E12.4)')
C    1        ' WEBFCT,WFOUND(ID,ILOOP),CZFF1(5,5),CZFF2(5,5)=',
C    1          WEBFCT,WFOUND(ID,ILOOP),CZFF1(5,5,ISEG),CZFF2(5,5,ISEG)
                WRITE(8,'(A,/,A,I2,A,1P,E12.4)')
     1        ' Action of web bending tending to crush the core or',
     1        ' pull off the facesheet of Seg.',ISEG,
     1        ': SIGWEB = ',SIGWEB
                WRITE(8,'(A,/,A,I2,A,1P,E12.4)')
     1        ' Action of ring web POPRNG tending to crush the core',
     1        ' or pull off the facesheet of Seg.',ISEG,
     1        ': SIGPOP = ',SIGPOP
                WRITE(8,'(A,/,A,I2,A,1P,E12.4)')
     1        ' Action of web inducing yz core shear stress, TAUTTH',
     1        '               in Seg.',ISEG,': TAUTTH = ',TAUTTH
                WRITE(8,'(A,/,A,I2,A,1P,E12.4)')
     1        ' Action of web inducing xz core shear stress, TAUTTR',
     1        '               in Seg.',ISEG,': TAUTTR = ',TAUTTR
C END APR 1997
               ENDIF
C END MAR 1997
C              IF (ABS(WOVERL(M)).GT.0.) THEN
C BEG APR 1997
C              IF (ABS(WOVERL(M)).GT.0.0.OR.TAUTTH.GT.0.0) THEN
               IF (ABS(WOVERL(M)).GT.0.0.OR.TAUTTH.GT.0.0
     1                                  .OR.TAUTTR.GT.0.0) THEN
C END APR 1997
C
C The purpose of the following equations is to compute the facesheet
C pull-off and core crushing stresses caused by amplification of the
C initial face sheet waviness, w0/L = WOVERL(M), during loading of
C the sandwich segment. The equations for SIGNRM (normal stress) and
C TAUNRM (shear stress) are taken from Plantema's book, SANDWICH
C CONSTRUCTIONS, p. 43, Eq.(3), John Wiley, 1966.
C
                 GEPRD = SQRT(GCXP(ID,ILOOP)*EEFF)
C BEG MAR 1997
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG JUN 1999
C                IF (ISEG.LE.IWEB) EIGFCT = 1./(EIGMF1(ISEG,ILOOP) - 1.)
C                IF (ISEG.GT.IWEB) EIGFCT = 1./(EIGMF2(ISEG,ILOOP) - 1.)
                 IF (ISEG.LE.IWEB) EIGFCT = 1./(EIGMX1 - 1.)
                 IF (ISEG.GT.IWEB) EIGFCT = 1./(EIGMX2 - 1.)
C END JUN 1999
C END MAR 1997
                 IF (EIGFCT.LE.0.0.OR.EIGFCT.GT.100.) EIGFCT = 100.
                 SIGNRM = 3.1415927*EIGFCT*ABS(WOVERL(M))*GEPRD
                 TAUNRM = 3.1415927*EIGFCT*ABS(WOVERL(M))*GCXP(ID,ILOOP)
C BEG APR 1997
                 IF (NNPRT.GE.2) THEN
                    IFACE = 1
                    IF (ISEG.GT.IWEB) IFACE = 2
                    WRITE(8,'(A,2I2,A,I2,A,/,A,1P,2E12.4)')
     1            ' Iseg,ILOOP=',ISEG,ILOOP,', Face sheet',IFACE,
     1            ', Facewrinkling Normal, xz-trans.shear stresses:',
     1            '  SIGNRM,TAUNRM=',SIGNRM,TAUNRM
                 ENDIF
C END APR 1997
                 SIGTOT = ABS(SIGWEB) + ABS(SIGNRM)
C BEG APR 1997
                 TAUTTX = ABS(TAUNRM) + ABS(TAUTTR)
C END APR 1997
C BEG MAR 1997
C BEG JUN 1999
C                IF (ISEG.LE.IWEB) EIGFCT = 1./(EIGMF2(ISEG,ILOOP) - 1.)
C                IF (ISEG.GT.IWEB) EIGFCT = 1./(EIGMF1(ISEG,ILOOP) - 1.)
                 IF (ISEG.LE.IWEB) EIGFCT = 1./(EIGMX2 - 1.)
                 IF (ISEG.GT.IWEB) EIGFCT = 1./(EIGMX1 - 1.)
C END JUN 1999
C END MAR 1997
                 IF (EIGFCT.LE.0.0.OR.EIGFCT.GT.100.) EIGFCT = 100.
                 SIGNRM = 3.1415927*EIGFCT*ABS(WOVERL(M))*GEPRD
                 TAUNRM = 3.1415927*EIGFCT*ABS(WOVERL(M))*GCXP(ID,ILOOP)
C BEG APR 1997
                 IF (NNPRT.GE.2) THEN
                    IFACE = 2
                    IF (ISEG.GT.IWEB) IFACE = 1
                    WRITE(8,'(A,2I2,A,I2,A,/,A,1P,2E12.4)')
     1            ' Iseg,ILOOP=',ISEG,ILOOP,', Face sheet',IFACE,
     1            ', Facewrinkling Normal, xz-trans.shear stresses:',
     1            '  SIGNRM,TAUNRM=',SIGNRM,TAUNRM
                 ENDIF
C END APR 1997
                 TAUTTX = MAX(TAUTTX,TAUNRM)
                 SIGTOT = MAX(SIGTOT,SIGNRM)
C
C BEG MAR 1997
                 IF (ISEG.LE.IWEB) EIGFCT = 1./(EIGMY1 - 1.)
                 IF (ISEG.GT.IWEB) EIGFCT = 1./(EIGMY2 - 1.)
C END MAR 1997
                 IF (EIGFCT.LE.0.0.OR.EIGFCT.GT.100.) EIGFCT = 100.
                 TAUNRM = 3.1415927*EIGFCT*ABS(WOVERL(M))*GCYP(ID,ILOOP)
C BEG APR 1997
                 IF (NNPRT.GE.2) THEN
                    IFACE = 1
                    IF (ISEG.GT.IWEB) IFACE = 2
                    WRITE(8,'(A,2I2,A,I2,A,/,A,1P,E12.4)')
     1            ' Iseg,ILOOP=',ISEG,ILOOP,', Face sheet',IFACE,
     1            ', Facewrinkling yz-trans.shear stress:',
     1            '  TAUNRM=',TAUNRM
                 ENDIF
C END APR 1997
C BEG MAR 1997
                 TAUTTY = ABS(TAUNRM) + ABS(TAUTTH)
                 IF (ISEG.LE.IWEB) EIGFCT = 1./(EIGMY2 - 1.)
                 IF (ISEG.GT.IWEB) EIGFCT = 1./(EIGMY1 - 1.)
C END MAR 1997
                 IF (EIGFCT.LE.0.0.OR.EIGFCT.GT.100.) EIGFCT = 100.
                 TAUNRM = 3.1415927*EIGFCT*ABS(WOVERL(M))*GCYP(ID,ILOOP)
C BEG APR 1997
                 IF (NNPRT.GE.2) THEN
                    IFACE = 2
                    IF (ISEG.GT.IWEB) IFACE = 1
                    WRITE(8,'(A,2I2,A,I2,A,/,A,1P,E12.4)')
     1            ' Iseg,ILOOP=',ISEG,ILOOP,', Face sheet',IFACE,
     1            ', Facewrinkling yz-trans.shear stress:',
     1            '  TAUNRM=',TAUNRM
                 ENDIF
C END APR 1997
                 TAUTTY = MAX(TAUTTY,TAUNRM)
                 IF (NNPRT.GE.2) WRITE(8,'(A,I2,A,/,A,/,I3,1P,6E12.4)')
     1          ' Stress from web and initial waviness, matl=',M,':',
     1          '  ISEG,WOVERL(M),GEPRD,SIGWEB,SIGTOT,TAUTTX,TAUTTY=',
     1             ISEG,WOVERL(M),GEPRD,SIGWEB,SIGTOT,TAUTTX,TAUTTY
               ENDIF
               TCORE = TLAYER(K)
               KUPPER = KOUNTT(M)
               DO 1333 KOUNT = 1,KUPPER
                 ITHICK = KOUNT
                 IF (TCORE.LT.THKTAB(KOUNT,M)) GO TO 1334
 1333          CONTINUE
 1334          CONTINUE
               TPLUS = THKTAB(ITHICK,M)
               TMINUS= THKTAB(ITHICK-1,M)
               FNKPLU= FNKTAB(ITHICK,M)
               FNKMIN= FNKTAB(ITHICK-1,M)
               FNK   = ((FNKPLU-FNKMIN)/(TPLUS-TMINUS))*(TCORE-TMINUS)
     1                                          + FNKMIN
               WGTCOR = RHOC(M)
               IF (ICORE(ISEG,ILOOP).NE.0) THEN
                  TOD = THEX(M)/(1.732*HXSIDX(M))
                  WGTCOR = (8./3.)*TOD*RHOC(M)
               ENDIF
               KUPPER = KOUNTP(M)
               DO 1335 KOUNT = 1,KUPPER
                 IWGT = KOUNT
                 IF (WGTCOR.LT.WGTTAB(KOUNT,M)) GO TO 1336
 1335          CONTINUE
 1336          CONTINUE
               WGTPLU = WGTTAB(IWGT,M)
               WGTMIN = WGTTAB(IWGT-1,M)
               CRHPLU = CRHTAB(IWGT,M)
               CRHMIN = CRHTAB(IWGT-1,M)
C   "CRH" is the crushing allowable, obtained from the "look-up" table.
               CRH   = ((CRHPLU-CRHMIN)/(WGTPLU-WGTMIN))*(WGTCOR-WGTMIN)
     1                                          + CRHMIN
               INUMTT = INUMTT + 1
               FSAFE = 1.0
               CRHCON = 10.E+16
               PNORM = 0.
               IF (ISEG.LE.IWEBM) PNORM = ABS(PRESS(ILOADS))
               CRUSHX = CRUSH(ISEG,ILOOP)
               IF (ISEG.EQ.1.AND.ILOOP.EQ.1)
     1            CRUSHX = MAX(CRUSH(ISEG,ILOOP),CRUSH2)
C       PNORM is the normal pressure, which helps to crush the core.
               CRUSHF = CRUSHX + PNORM + SIGTOT
C BEG APR 1997
               IF (SIGPOP.LT.0.0) CRUSHF = CRUSHF + ABS(SIGPOP)
C END APR 1997
C23456789012345678901234567890123456789012345678901234567890123456789012
               IF (NNPRT.GE.2) WRITE(8,'(A,I2,A,/,A,/,I3,1P,7E10.2)')
     1     ' Core crushing allowable CRH and stress CRUSHF,Matl=',M,':',
     1      ' ISEG,CRH,CRUSHF,CRUSH2,CRUSHX,PNORM,SIGTOT,SIGPOP=',
     1        ISEG,CRH,CRUSHF,CRUSH2,CRUSHX,PNORM,SIGTOT,SIGPOP
C       CRHCON is the core crushing constraint. ( margin + 1.0)
               IF (CRUSHF.GT.0.0)
     1           CRHCON = ABS(CRH)/(CRUSHF*FSAFE)
               CALL CONVR2(M,CM)
               CALL CONVR2(ISEG,CISEG)
               CALL CONVRF(FSAFE,CN2)
C BEG APR 1997  (FOLLOWING THREE MOVED UP ABOVE "IF (IDESGN...")
               MIDWRD = 'MIDLENGTH'
               IF (ICASE.EQ.2) MIDWRD = 'PANEL END'
               IF (ATRING.AND.ICASE.EQ.2) MIDWRD = 'AT RINGS '
C END APR 1997
               IF (IDESGN.EQ.0.AND.CRHCON.LT.MAXCON) THEN
                 ICAR = ICAR + 1
                 PCWORD(ICAR) = 'Core crushing margin;'//SRWORD//
     1       ';Iseg='//CISEG//';Matl '//CM//';'//MIDWRD//';FS='//CN2
                 CPLOT(ICAR) = CRHCON - 1.
                 IADDCC(ICAR) = 0
                 FSAFEP(ICAR) = FSAFE
               ENDIF
               IF (IDESGN.EQ.0.AND.CRHCON.GT.EIGMAX) GO TO 1337
               IF (IDESGN.EQ.1.AND.IPOINC(INUMTT).EQ.0) GO TO 1337
               ICONST = ICONST + 1
               IF (IDESGN.EQ.0) IPOINC(INUMTT) = 1
               CONSTR(ICONST) = CRHCON
               WORDB(ICONST) = 'Core crushing margin;'//SRWORD//
     1       ';Iseg='//CISEG//';Matl '//CM//';'//MIDWRD//';FS='//CN2
C BEG APR 2007
               IF (NPRT.GE.0) WRITE(8,'(A,1P,E12.4,2X,A)')
     1       ' Margin=',CONSTR(ICONST)-1.,WORDB(ICONST)
C END APR 2007
C BEG FEB 2007
               IF (NNPRT.GE.2) WRITE(8,'(I4,1P,E12.4,A,A)')
     1         ICONST,CONSTR(ICONST)-1.,' ',WORDB(ICONST)
C END FEB 2007
 1337          CONTINUE
C
               SHLPLU = SHLTAB(IWGT,M)
               SHLMIN = SHLTAB(IWGT-1,M)
C   "SHL" is the "L"-direction (x-z) sandwich core transverse shear
C         allowable, obtained from the "look-up" table. "FNK" is the
C         knockdown for core thickness, also obtained from a "look-up"
C         table.
               SHL=
     1          FNK*(((SHLPLU-SHLMIN)/(WGTPLU-WGTMIN))*(WGTCOR-WGTMIN)
     1                                          + SHLMIN)
               INUMTT = INUMTT + 1
               FSAFE = FSGTRV(M)
               QXMAXX = QXMAX(ISEG,ILOOP)
               IF (ISEG.EQ.1.AND.ILOOP.EQ.1)
     1            QXMAXX = MAX(QXMAX(ISEG,ILOOP),QX2)
               QXMAXX = MAX(QXMAXX,QXXMAX(ISEG,ILOOP)) + TAUTTX
               SHLCON = 10.E+16
C     "SHLCON" is the "L"-direction transverse shear constraint (margin+1)
               IF (QXMAXX.GT.0.0)
     1           SHLCON = ABS(SHL)/(QXMAXX*FSAFE)
C23456789012345678901234567890123456789012345678901234567890123456789012
               IF (NNPRT.GE.2) WRITE(8,'(A,I2,A,/,A,/,2I3,1P,6E12.4)')
     1    ' Core x-z transverse shear allowable and stress,Matl=',M,':',
     1     ' ISEG,ILOOP,SHL,FNK,QXMAXX,QXMAX(ISEG,ILOOP),TAUTTX,FSAFE=',
     1       ISEG,ILOOP,SHL,FNK,QXMAXX,QXMAX(ISEG,ILOOP),TAUTTX,FSAFE
               CALL CONVR2(M,CM)
               CALL CONVR2(ISEG,CISEG)
               CALL CONVRF(FSAFE,CN2)
C BEG APR 1997  (FOLLOWING THREE MOVED UP ABOVE "IF (IDESGN...")
               MIDWRD = 'MIDLENGTH'
               IF (ICASE.EQ.2) MIDWRD = 'PANEL END'
               IF (ATRING.AND.ICASE.EQ.2) MIDWRD = 'AT RINGS '
C END APR 1997
               IF (IDESGN.EQ.0.AND.SHLCON.LT.MAXCON) THEN
                 ICAR = ICAR + 1
                 PCWORD(ICAR) = 'L-dir. sandwich core shear;'//SRWORD//
     1       ';Iseg='//CISEG//';Matl '//CM//';'//MIDWRD//';FS='//CN2
                 CPLOT(ICAR) = SHLCON - 1.
                 IADDCC(ICAR) = 0
                 FSAFEP(ICAR) = FSAFE
               ENDIF
               IF (IDESGN.EQ.0.AND.SHLCON.GT.EIGMAX) GO TO 1338
               IF (IDESGN.EQ.1.AND.IPOINC(INUMTT).EQ.0) GO TO 1338
               ICONST = ICONST + 1
               IF (IDESGN.EQ.0) IPOINC(INUMTT) = 1
               CONSTR(ICONST) = SHLCON
               WORDB(ICONST) = 'L-dir. sandwich core shear;'//SRWORD//
     1       ';Iseg='//CISEG//';Matl '//CM//';'//MIDWRD//';FS='//CN2
C BEG APR 2007
               IF (NPRT.GE.0) WRITE(8,'(A,1P,E12.4,2X,A)')
     1       ' Margin=',CONSTR(ICONST)-1.,WORDB(ICONST)
C END APR 2007
C BEG FEB 2007
               IF (NNPRT.GE.2) WRITE(8,'(I4,1P,E12.4,A,A)')
     1         ICONST,CONSTR(ICONST)-1.,' ',WORDB(ICONST)
C END FEB 2007
 1338          CONTINUE
C
               SHWPLU = SHWTAB(IWGT,M)
               SHWMIN = SHWTAB(IWGT-1,M)
C   "SHW" is the "W"-direction (y-z) sandwich core transverse shear
C         allowable, obtained from the "look-up" table. "FNK" is the
C         knockdown for core thickness, also obtained from a "look-up"
C         table.
               SHW=
     1          FNK*(((SHWPLU-SHWMIN)/(WGTPLU-WGTMIN))*(WGTCOR-WGTMIN)
     1                                          + SHWMIN)
               INUMTT = INUMTT + 1
               FSAFE = FSGTRV(M)
               QYMAXX = QYMAX(ISEG,ILOOP)
               IF (ISEG.EQ.1.AND.ILOOP.EQ.1)
     1            QYMAXX = MAX(QYMAX(ISEG,ILOOP),QY2)
               QYMAXX = MAX(QYMAXX,QYYMAX(ISEG,ILOOP)) + TAUTTY
C     "SHWCON" is the "W"-direction transverse shear constraint (margin+1)
               SHWCON = 10.E+16
               IF (QYMAXX.GT.0.0)
     1           SHWCON = ABS(SHW)/(QYMAXX*FSAFE)
C23456789012345678901234567890123456789012345678901234567890123456789012
               IF (NNPRT.GE.2) WRITE(8,'(A,I2,A,/,A,/,2I3,1P,6E12.4)')
     1    ' Core y-z transverse shear allowable and stress,Matl=',M,':',
     1     ' ISEG,ILOOP,SHW,FNK,QYMAXX,QYMAX(ISEG,ILOOP),TAUTTY,FSAFE=',
     1       ISEG,ILOOP,SHW,FNK,QYMAXX,QYMAX(ISEG,ILOOP),TAUTTY,FSAFE
               CALL CONVR2(M,CM)
               CALL CONVR2(ISEG,CISEG)
               CALL CONVRF(FSAFE,CN2)
C BEG APR 1997  (FOLLOWING THREE MOVED UP ABOVE "IF (IDESGN...")
               MIDWRD = 'MIDLENGTH'
               IF (ICASE.EQ.2) MIDWRD = 'PANEL END'
               IF (ATRING.AND.ICASE.EQ.2) MIDWRD = 'AT RINGS '
C END APR 1997
               IF (IDESGN.EQ.0.AND.SHWCON.LT.MAXCON) THEN
                 ICAR = ICAR + 1
                 PCWORD(ICAR) = 'W-dir. sandwich core shear;'//SRWORD//
     1       ';Iseg='//CISEG//';Matl '//CM//';'//MIDWRD//';FS='//CN2
                 CPLOT(ICAR) = SHWCON - 1.
                 IADDCC(ICAR) = 0
                 FSAFEP(ICAR) = FSAFE
               ENDIF
               IF (IDESGN.EQ.0.AND.SHWCON.GT.EIGMAX) GO TO 1339
               IF (IDESGN.EQ.1.AND.IPOINC(INUMTT).EQ.0) GO TO 1339
               ICONST = ICONST + 1
               IF (IDESGN.EQ.0) IPOINC(INUMTT) = 1
               CONSTR(ICONST) = SHWCON
               WORDB(ICONST) = 'W-dir. sandwich core shear;'//SRWORD//
     1       ';Iseg='//CISEG//';Matl '//CM//';'//MIDWRD//';FS='//CN2
C BEG APR 2007
               IF (NPRT.GE.0) WRITE(8,'(A,1P,E12.4,2X,A)')
     1       ' Margin=',CONSTR(ICONST)-1.,WORDB(ICONST)
C END APR 2007
C BEG FEB 2007
               IF (NNPRT.GE.2) WRITE(8,'(I4,1P,E12.4,A,A)')
     1         ICONST,CONSTR(ICONST)-1.,' ',WORDB(ICONST)
C END FEB 2007
 1339          CONTINUE
               IF (IDESGN.EQ.0) ITNCOR(ISEG,ILOOP) = 1
               IF (ICORE(ISEG,ILOOP).NE.0) THEN
                  PULPLU = PULTAB(IWGT,M)
                  PULMIN = PULTAB(IWGT-1,M)
C   "PUL" is the face sheet pull-off modifier for hexagonal honeycomb
C    cores, obtained from the "look-up" table.
                  PUL=((PULPLU-PULMIN)/(WGTPLU-WGTMIN))*(WGTCOR-WGTMIN)
     1                                          + PULMIN
                  SIGADH = 2.*FPULL(M)*PUL/(1.732*HXSIDX(M))
                  TOD = THEX(M)/(1.732*HXSIDX(M))
                  SIGTST = (8./3.)*TOD*SIGCOR(M)
                  SIGMAA(M) = MIN(SIGADH,SIGTST)
                  IF (IDESGN.EQ.0) THEN
                     ITNCOR(ISEG,ILOOP) = 0
                     IF (SIGTST.LT.SIGADH) ITNCOR(ISEG,ILOOP) = 1
                  ENDIF
               ENDIF
               CRUSHT = 0.
               IF (ISEG.LE.IWEBM.AND.IFLAT.EQ.0.AND.ILOOP.EQ.1)
     1            CRUSHT = CRUSHX
               SIGPUL = CRUSHT + SIGTOT
C BEG APR 1997
               IF (SIGPOP.GT.0.0) SIGPUL = SIGPUL + SIGPOP
C END APR 1997
               INUMTT = INUMTT + 1
               FSAFE = 1.0
C     "PULCON" is the facesheet pull-off constraint  (ITNCOR=0)
C     or the sandwich core tensile stress constraint (ITNCOR=1).
               PULCON = 10.E+16
               IF (SIGPUL.GT.0.0)
     1           PULCON = ABS(SIGMAA(M))/(SIGPUL*FSAFE)
               IF (NNPRT.GE.2) THEN
                IF (ITNCOR(ISEG,ILOOP).EQ.0)
     1           WRITE(8,'(A,I2,A,/,A,1P,E12.4,A,E12.4)')
     1         ' Facesheet pull-off allowable stress for matl=',M,':',
     1         ' SIGMAA(M)=',SIGMAA(M),'; actual stress=',SIGPUL
                IF (ITNCOR(ISEG,ILOOP).EQ.1)
     1           WRITE(8,'(A,I2,A,/,A,1P,E12.4,A,E12.4)')
     1         ' Sandwich core tensile allowable stress, matl=',M,':',
     1         ' SIGMAA(M)=',SIGMAA(M),'; actual stress=',SIGPUL
               ENDIF
               CALL CONVR2(M,CM)
               CALL CONVR2(ISEG,CISEG)
               CALL CONVRF(FSAFE,CN2)
C BEG APR 1997  (FOLLOWING THREE MOVED UP ABOVE "IF (IDESGN...")
               MIDWRD = 'MIDLENGTH'
               IF (ICASE.EQ.2) MIDWRD = 'PANEL END'
               IF (ATRING.AND.ICASE.EQ.2) MIDWRD = 'AT RINGS '
C END APR 1997
               IF (IDESGN.EQ.0.AND.PULCON.LT.MAXCON) THEN
                 ICAR = ICAR + 1
                 IF (ITNCOR(ISEG,ILOOP).EQ.0)
     1          PCWORD(ICAR) = 'face sheet pull-off margin;'//SRWORD//
     1       ';Iseg='//CISEG//';Matl '//CM//';'//MIDWRD//';FS='//CN2
                 IF (ITNCOR(ISEG,ILOOP).EQ.1)
     1          PCWORD(ICAR) = 'sandwichcore tension margin;'//SRWORD//
     1       ';Iseg='//CISEG//';Matl '//CM//';'//MIDWRD//';FS='//CN2
                 CPLOT(ICAR) = PULCON - 1.
                 IADDCC(ICAR) = 0
                 FSAFEP(ICAR) = FSAFE
               ENDIF
               IF (IDESGN.EQ.0.AND.PULCON.GT.EIGMAX) GO TO 1340
               IF (IDESGN.EQ.1.AND.IPOINC(INUMTT).EQ.0) GO TO 1340
               ICONST = ICONST + 1
               IF (IDESGN.EQ.0) IPOINC(INUMTT) = 1
               CONSTR(ICONST) = PULCON
               IF (ITNCOR(ISEG,ILOOP).EQ.0)
     1         WORDB(ICONST) = 'face sheet pull-off margin;'//SRWORD//
     1       ';Iseg='//CISEG//';Matl '//CM//';'//MIDWRD//';FS='//CN2
               IF (ITNCOR(ISEG,ILOOP).EQ.1)
     1         WORDB(ICONST) = 'sandwichcore tension margin;'//SRWORD//
     1       ';Iseg='//CISEG//';Matl '//CM//';'//MIDWRD//';FS='//CN2
C BEG APR 2007
               IF (NPRT.GE.0) WRITE(8,'(A,1P,E12.4,2X,A)')
     1       ' Margin=',CONSTR(ICONST)-1.,WORDB(ICONST)
C END APR 2007
C BEG FEB 2007
               IF (NNPRT.GE.2) WRITE(8,'(I4,1P,E12.4,A,A)')
     1         ICONST,CONSTR(ICONST)-1.,' ',WORDB(ICONST)
C END FEB 2007
 1340          CONTINUE
C BEG FEB 2007
C23456789012345678901234567890123456789012345678901234567890123456789012
               IF (NNPRT.GE.0) WRITE(8,'(/,A,/,A,I2,A,I2,/)')
     1' ****** END SANDWICH WALL BEHAVIOR IN SUBROUTINE BUCPAN *******',
     1       ' for Segment number, ISEG=',ISEG,' ILOOP=',ILOOP
C END FEB 2007
  496    CONTINUE
C END "496" LOOP.
  498 CONTINUE
C END "498" LOOP.
C END NOV 1996    
  500 CONTINUE    
C
C BEG JUN 2004
C*********************************************************************
C BEGIN SECTION INVOLVING SUBSTIFFENER ROLLING WITH SUBSKIN PARTICIPATION.
C*********************************************************************
C
      IF (KLAYER(1,1).EQ.0) GO TO 479
C     IF (MIDEND.NE.1.OR.ICASE.EQ.2) GO TO 479
      IF (ILABLY.NE.9260.AND.ILABLY.NE.9280) go to 479
      IF (ISTIF(1).EQ.5) GO TO 479
      IF (ISOGRD.EQ.1) GO TO 479
C
C Only do substiffener stuff if:
C  1. there exist substiffeners. (KLAYER(1,1).NE.0)
C  2. PANDA2 is doing final buckling analysis (ILABLY=9260 or 9280)
C  3. The panel is not truss-core sandwich (ISTIF(1).NE.5)
C  4. The major stiffeners do not form isogrid (ISOGRD.EQ.0)
C BEG JAN 2005
C23456789012345678901234567890123456789012345678901234567890123456789012
      IF (NNPRT.GE.2) WRITE(8,'(/,A,/,A,/,A,/,A)')
     1' ************* NOTE ************** NOTE ****************',
     1' Entering the part of SUBROUTINE BUCPAN in which buckling',
     1' involving substiffeners is processed (panda2.news ITEM 600).',
     1'  *********** END NOTE ********** END NOTE **************'
C END JAN 2005
C
C BEG MAR 2007
      WIDKNS = WIDKNK
      WIDKNK = 1.0
C END MAR 2007
C radius of curvature...(RADNEW = maximum radius of imperfect panel)
      RSAVE = R
      R = RADNEW
      NLOOP = 1
      PI = 3.1415927
C
C BEGIN "478" LOOP... (loop over 1=skin-stringer module; 2=skin-ring module)
C NOTE: as of Oct 2004 ILOOP remains at 1 only.
C
      DO 478 ILOOP = 1,NLOOP
         ISTART = 1
         IEND   = NSEG(ILOOP)
         IF (ILOOP.EQ.2) THEN
            ISTART = 2
            IF (B2(2).EQ.0.) ISTART = 3
         ENDIF
         IF (ISTART.GT.IEND) GO TO 478
         IWEB = 3
         IF (ISTIF(ILOOP).EQ.5) IWEB = 2
         IWEBM = IWEB - 1
         IWEBP = IWEB + 1
C BEG "476" LOOP...   (loop over number of segments in module)
         DO 476 ISEG = ISTART,IEND
            IF (KLAYER(ISEG,ILOOP).EQ.0) GO TO 476 
            IF (ISEG.EQ.2.AND.IWEB.EQ.3) GO TO 476
            GTSSUB(1,ISEG) = GTX(1,ISEG)
	    GTSSUB(2,ISEG) = GTX(2,ISEG)
            FSAFE = 1.0
C
            IF (IDESGN.EQ.0) THEN
C
C  Initialize results. There are 8 or 16 values. The 8 values correspond
C  to VALUES(4,2), in which 4 is for segments in module and 2 is for ILOOP
C  over 1 = (skin-stringer) and 2 = (skin-ring) module. As of now only the
C  subskin, that is, VALUE(1,1), is used because there are substiffeners 
C  attached only to the panel skin, not to the other segments of the module.
C  The 16 values correspond to VALUE(2,4,2), in which the 4,2 dimensions are
C  for segments in module and ILOOP (as before) and the first dimension is
C  1 for low-wave and 2 for high-wave buckling modes.
C
C  The variables initialized next are defined as follows:
C
C  EIGSUB = buckling load factor for local buckling of subskin between
C           substiffeners with rolling of substiffeners at the domain
C           boundary. The hoop and axial dimensions are the distances
C           between substringers and subrings, respectively.
C
C  EISSUB = buckling between subrings with smeared substringers. Subring
C           rolling included. The hoop dimension is distance between major
C           stringers and the axial dimension the distance between subrings.
C
C  EIRSUB = buckling between substringers with smeared subrings. Substringer
C           rolling included. The axial dimension is distance between major
C           rings and the hoop dimension the distance between substringers.
C
C  TSTSUB = The value of "TEST", which identifies which dimension the domain
C           is "long" in. Please see the paper, THEORETICAL BASIS OF THE
C           PANDA PROGRAM for a discussion of this concept. TSTSUB is the
C           value of "TEST" corresponding to the model leading to EIGSUB.
C
C  TSSSUB = The value of "TEST" corresponding to the model leading to EISSUB.
C           See the paper, Theoretical basis of the PANDA computer program...
C           David Bushnell, Computers & Structures, Vol. 27, pp 541-563, 1987,
C           in particular, see Fig. 9 on p. 554.
C
C  TSRSUB = The value of "TEST" corresponding to the model leading to EIRSUB.
C  SLPSUB = slope of the buckling nodal lines corresponding to model for EIGSUB.
C           See the paper, Theoretical basis of the PANDA computer program...
C           David Bushnell, Computers & Structures, Vol. 27, pp 541-563, 1987,
C           in particular, see Fig. 9 on p. 554.
C  SLSSUB = slope of the buckling nodal lines corresponding to model for EISSUB.
C  SLRSUB = slope of the buckling nodal lines corresponding to model for EIRSUB.
C  NSUB   = number of hoop  halfwaves in the domain for the model for EIGSUB.
C  NSSUB  = number of hoop  halfwaves in the domain for the model for EISSUB.
C  NSRSUB = number of hoop  halfwaves in the domain for the model for EIRSUB.
C  MSUB   = number of axial halfwaves in the domain for the model for EIGSUB.
C  MSSUB  = number of axial halfwaves in the domain for the model for EISSUB.
C  MRSUB  = number of axial halfwaves in the domain for the model for EIRSUB.
C  ESBRLS = buckling load factor for low-m and high-m rolling of substringers.
C  ESBRLR = buckling load factor for low-m and high-m rolling of subrings.
C  DSBRLS = a factor computed in SUBROUTINE BEND used to determine factor of
C           safety for low-m and high-m rolling of substringers.
C  DSBRLS = a factor computed in SUBROUTINE BEND used to determine factor of
C           safety for low-m and high-m rolling of subrings. 
C  FSSUBS = computed factor of safety for low-m and high-m substringer rolling.
C  FSSUBR = computed factor of safety for low-m and high-m subring rolling.
C  MSBRLS = number of halfwaves for low-m and high-m substringer rolling.
C  MSBRLR = number of halfwaves for low-m and high-m subring rolling.
C
               CALL MOVER(9999.,0,EIGSUB,1,8)
               CALL MOVER(9999.,0,EISSUB,1,8)
               CALL MOVER(9999.,0,EIRSUB,1,8)
               CALL MOVER(10.,0,TSTSUB,1,8)
               CALL MOVER(10.,0,TSSSUB,1,8)
               CALL MOVER(10.,0,TSRSUB,1,8)
               CALL MOVER(0.,0,SLPSUB,1,8)
               CALL MOVER(0.,0,SLSSUB,1,8)
               CALL MOVER(0.,0,SLRSUB,1,8)
               CALL MOVER(1,0,NSUB,1,8)
               CALL MOVER(1,0,NSSUB,1,8)
               CALL MOVER(1,0,NRSUB,1,8)
               CALL MOVER(1,0,MSUB,1,8)
               CALL MOVER(1,0,MSSUB,1,8)
               CALL MOVER(1,0,MRSUB,1,8)
               CALL MOVER(9999.,0,ESBRLS,1,16)
               CALL MOVER(9999.,0,ESBRLR,1,16)
               CALL MOVER(0.,0,DSBRLS,1,16)
               CALL MOVER(0.,0,DSBRLR,1,16)
               CALL MOVER(1.,0,FSSUBS,1,16)
               CALL MOVER(1.,0,FSSUBR,1,16)
               CALL MOVER(1,0,MSBRLS,1,16)
               CALL MOVER(1,0,MSBRLR,1,16)
            ENDIF
C
            IF (ILOOP.EQ.1.AND.ISEG.EQ.1) THEN
C
C Get the stress resultants in the skin between substiffeners...
C It is assumed that axial and hoop bending are about the neutral planes
C for bending about both x and y axes.
C NOTE: DELEX is negative axial strain increment due to "local" bending.
C       DELEY is negative hoop  strain increment due to "local" bending.
C       EPSX  is total axial strain in the sub-skin between sub-stiffeners.
C       EPSY  is total hoop  strain in the sub-skin between sub-stiffeners.
C       SUBNX, SUBNY, SUBNXY are axial, hoop, in-plane shear resultants in
C                           the sub-skin between sub-stiffeners:Load Set A
C       SUBNXP,SUBNYP,SBNXYP are axial, hoop, in-plane shear resultants in
C                           the sub-skin between sub-stiffeners:Load Set B
C
               FMLPAN = 0.
	       IF (ISTIF(1).NE.0) FMLPAN = 1.0
	       FMLGEN = 0.
	       IF (ISTIF(2).NE.0) FMLGEN = 1.0
               NNODES = 11
               INODE = 1
               IF (ISEG.EQ.1) INODE = NNODES/2 + 1
C
C  CURCHX, CURCHY are changes in axial, hoop curvature due to amplification
C                 of the buckling modal imperfections when the panel is loaded.
C  CURCXY  is the twist.
C
               CURCHX = ABS(WXX7(1))+FMLPAN*ABS(WXX8)
     1                             + FMLGEN*ABS(WXX9)
               CURCHY = ABS(WYY7(1))+FMLPAN*ABS(WYY8)
     1                              +FMLGEN*ABS(WYY9)
               CURCXY = ABS(WXY7(2))+FMLPAN*ABS(WXY8)
     1                             + FMLGEN*ABS(WXY9)
C
C Set change in twist, CURCXY, to zero because locations of
C maximum twist (CURCXY) are nodal lines in the buckling modal imperfection
C pattern, locations where the changes in curvature, CURCHX and CURCHY,
C are minimum (zero for iso or orthotropic shell structures).
C
               CURCXY = 0.0
C23456789012345678901234567890123456789012345678901234567890123456789012
C  CURVAR is the axial change in curvature due to pressure loading.
C  PWDD   is the hoop change in curvature due to pressure loading.
C
C Load Set A (eigenvalue loading):
C  DELEX, DELEY, DELEXY are the changes in strain in the section of
C                       panel between major stiffeners (smeared substiffeners).
C  EPSX, EPSY, EPSXY are the total strains in the same domain.
C  CX0 are the constitutive coefficients for the panel skin between substiffeners.
C  SUBNX, SUBNY, SUBNXY are the stress resultants, Nx, Ny, Nxy in the panel skin.
C
C BEG APR 2005
               DELCS = CS(1,1)*CS(2,2) - CS(1,2)**2
C END APR 2005
               DELCX = CX(1,1,1)*CX(2,2,1) - CX(1,2,1)**2
               DELE1 = -ABS(CURCHX*CX(1,4,1)/CX(1,1,1))
     1                 + CURVAR*CX(1,4,1)/CX(1,1,1)
               DELE2 = -ABS(CURCHY*CX(2,5,1)/CX(2,2,1))
     1                 + PWDD(INODE,ISEG)*CX(2,5,1)/CX(2,2,1)
               DELE12 = ABS(CURCXY*CX(3,6,1)/CX(3,3,1))
               DELEX = DELE1 - CX0(1,2,1)*DELE2/CX0(1,1,1)
               DELEY = DELE2 - CX0(1,2,1)*DELE1/CX0(2,2,1)
               DELEXY = DELE12*SIGN(1.,PNXY)
C Load Set "A" (eigenvalue) quantities...
C
C BEG APR 2005
               EPSXS = ( CS(2,2)*FNX - CS(1,2)*FNY)/DELCS
               EPSYS = (-CS(1,2)*FNX + CS(1,1)*FNY)/DELCS
C END APR 2005
               EPSX = ( CX(2,2,1)*(PNX-0.0*CX(1,1,1))
     1                - CX(1,2,1)*(PNY-0.0*CX(2,2,1)))/DELCX
               EPSY = (-CX(1,2,1)*(PNX-0.0*CX(1,1,1))
     1                + CX(1,1,1)*(PNY-0.0*CX(2,2,1)))/DELCX
               EPSXY = PNXY/CX(3,3,1)
               SUBNX = CX0(1,1,ISEG)*(EPSX+DELEX) 
     1                                + CX0(1,2,ISEG)*(EPSY+DELEY)
               SUBNY = CX0(1,2,ISEG)*(EPSX+DELEX) 
     1                                + CX0(2,2,ISEG)*(EPSY+DELEY)
               SUBNXY= CX0(3,3,ISEG)*(EPSXY + DELEXY) 
C
               IF (NNPRT.GE.2) WRITE(8,'(/,A,/,1P,6E12.4)')
     1        ' DELE1,DELE2,PNX,PNY,CURCHX,CURCHY=',
     1          DELE1,DELE2,PNX,PNY,CURCHX,CURCHY
               IF (NNPRT.GE.2) WRITE(8,'(A,/,1P,5E12.4)')
     1        ' DELE12,PNXY,CURCXY,EPSXY,SUBNXY=',
     1          DELE12,PNXY,CURCXY,EPSXY,SUBNXY
               IF (NNPRT.GE.2) WRITE(8,'(A,1P,2E12.4)')
     1        ' CURVAR,PWDD=',CURVAR,PWDD(INODE,ISEG)
               IF (NNPRT.GE.2) WRITE(8,'(A,/,1P,6E12.4)')
     1        ' DELEX,DELEY,EPSX,EPSY,SUBNX,SUBNY=',
     1          DELEX,DELEY,EPSX,EPSY,SUBNX,SUBNY
C BEG APR 2005
               IF (NNPRT.GE.2) WRITE(8,'(A,1P,2E12.3)')
     1       ' Overall membrane strain for perfect shell:EPSXS,EPSYS=',
     1                                                   EPSXS,EPSYS
C END APR 2005
               IF (NNPRT.GE.2) WRITE(8,'(A,/,1P,6E12.4)')
     1   ' CX(1,4,1),CX(1,5,1),CX(2,4,1),CX(2,5,1),CX(4,4,1),CX(5,5,1)',
     1     CX(1,4,1),CX(1,5,1),CX(2,4,1),CX(2,5,1),CX(4,4,1),CX(5,5,1)
               IF (NNPRT.GE.2) WRITE(8,'(A,/,1P,5E12.4)')
     1       ' CX0(1,1,1),CX0(1,2,1),CX0(2,2,1),CX0(1,4,1),CX0(2,5,1)=',
     1         CX0(1,1,1),CX0(1,2,1),CX0(2,2,1),CX0(1,4,1),CX0(2,5,1)
C23456789012345678901234567890123456789012345678901234567890123456789012
C Load Set "B" (fixed) quantities...
C SUBNXP, SUBNYP, SUBNXYP are the stress resultants in the panel skin
C                         from Load Set B loading.
C
               EPSXP = ( CX(2,2,1)*RSKNXP - CX(1,2,1)*RSKNYP)/DELCX
               EPSYP = (-CX(1,2,1)*RSKNXP + CX(1,1,1)*RSKNYP)/DELCX
               EPSXYP = 0.0
               SUBNXP = CX0(1,1,ISEG)*EPSXP + CX0(1,2,ISEG)*EPSYP
               SUBNYP = CX0(1,2,ISEG)*EPSXP + CX0(2,2,ISEG)*EPSYP
               SBNXYP= 0.
C
C  End of section in which the stress resultants in the panel skin
C  between substiffeners are obtained for both Load Sets A and B.
C
	    ENDIF
C       (End of ILOOP.EQ.1.AND.ISEG.EQ.1 condition)
C
C   Begin section in which we get properties and loadings of substiffeners.
C
            NPARTR = 0
            NPARTS = 0
            ISTIFX(1) = 0
            ISTIFX(2) = 0
            BSUBS = B0
            BSUBR = A0
C BEG FEB 2009
            CALL MOVER(0.,0,FNUM,1,18)
            CALL MOVER(0.,0,FDEN,1,18)
C END FEB 2009
C
C  Begin loop over 2 sets of substiffeners
C
            DO 3000 JSET = 1,2
               NSF = NSURF(JSET,ISEG,ILOOP)
               M = MATSUB(JSET,ISEG,ILOOP)
               IF (M.EQ.0) GO TO 900
               ANGLEX = THSUB(JSET,ISEG,ILOOP)
               THICK = TSUB(JSET,ISEG,ILOOP)
               HEIGHT= HSUB(JSET,ISEG,ILOOP)
               SPACNG= BSUB(JSET,ISEG,ILOOP)
               FACT  = 1.0
               IF (NSF.NE.0) FACT = -1.0
               UNBAL = 0.
               ZSTART = TX0(ISEG)/2. + FACT*UNBAL
               ECCEN  = -FACT*(0.5*HEIGHT + ZSTART)
C
C  NOTE: thermal effects are not included at present (for substiffener stuff).
C              TLOCAL = TEMP(ISEG,ILOOP)
C              CALL MOVER(FMULT(1,M,ISEG,ILOOP),1,FACTOR(1,M),1,20)
C              E1L = E1(M)*FACTOR(1,M)
C              E2L = E2(M)*FACTOR(2,M)
C               GL = G(M)*FACTOR(3,M)
C              GT1 = G13(M)*FACTOR(5,M)
C              GT2 = G23(M)*FACTOR(6,M)
C              U12L= FNU(M)*FACTOR(4,M)
C
               E1L = E1(M)
               E2L = E2(M)
                GL = G(M)
               GT1 = G13(M)
               GT2 = G23(M)
               U12L= FNU(M)
               IF (THICK.LE.HEIGHT) GJ = GL*HEIGHT*THICK**3/3.
               IF (HEIGHT.LE.THICK) GJ = GL*THICK*HEIGHT**3/3.
               DENOM = 1. - E1L*U12L**2/E2L
               C11SUB = E1L*THICK/DENOM
               C33SUB = GL*THICK
               C44SUB = E1L*THICK**3/(12.*DENOM)
               C45SUB = U12L*C44SUB
               C55SUB = E2L*THICK**3/(12.*DENOM)
               C66SUB = GL*THICK**3/12.
C
               FMCUR = 0.
C Purpose of FMCUR is to remove overconservativeness of prestress state. If the
C skin is compressed more due to bending, then the stiffener must be compressed
C less due to bending, since bending is assumed to be about the neutral plane.
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C
               IF (ABS(ANGLEX).LT.10.0.OR.ISOSUB(JSET,ISEG,ILOOP).NE.0)
     1                                                              THEN
C for substringers or subisogrid...
C The quantities, NSEGS,NENDS,ANGLS,....GJS, are PANDA-variables for substringers.
C The "CALL MOVER(..." statements initialize the PANDA-variables for substringers.
C Some definitions follow:
C  NPARTS = number of segments in the substringer
C  BSUBS  = spacing of the substringer
C  ISTIFX(1) = 3 means that the substringer cross section is rectangular
C  NSEGS = number of substringer segments attached to substringer web.
C  NENDS = control indices for substringer cross-section segments:
C            0 = substringer segment i has no free end.
C            1 = substringer segment i has a free end. 
C  ANGLS = angle with respect to normal to skin of substringer segment. For
C          a blade substringer, ANGLS(1) = 0. deg. for external, 180 deg.
C          for internal substringer.
C  RESLTS = axial stress resultant in substringer segment, Load Set A
C  RPRES  = axial stress resultant in substringer segment, Load Seg B
C  ALS    = height of substringer segment
C  C1S    = axial stiffness/length, C(1,1), of the substringer segment
C  C33S   = in-plane shear stiffness/length, C(3,3), of the substrngr seg.
C  D11S   = axial bending stiffness/length, C(4,4), of the substringr seg.
C  D12S   = C(4,5) of the substringer segment.
C  D22S   = C(5,5) of the substringer segment.
C  GJS    = C(6,6) (twisting stiffness/length of the substringer segment.
C  NSF    = skin surface to which substringer is attached: 0 = layer 1
C                                                          1 = layer n
C  GT1    = transverse shear stiffness, G13, of the substringer
C  GT2    = transverse shear stiffness, G23, of the substringer
C  THSUBS = thickness of the substringer
C
                  NPARTS = 1   
                  BSUBS  = SPACNG
                  ISTIFX(1) = 3
                  NSURFX(1) = NSF
C BEG APR 2005
                  FACTXX = 1.0
                  IF (NSURFX(1).EQ.1) FACTXX = -1
C END APR 2005
                  CALL MOVER(0,0,NSEGS,1,5)
                  CALL MOVER(0,0,NENDS,1,5)
                  CALL MOVER(0.,0,ANGLS,1,5)
                  CALL MOVER(0.,0,RESLTS,1,5)
                  CALL MOVER(0.,0,RPRES,1,5)
                  CALL MOVER(0.,0,ALS,1,5)
                  CALL MOVER(0.,0,C1S,1,5)
                  CALL MOVER(0.,0,C33S,1,5)
                  CALL MOVER(0.,0,D11S,1,5)
                  CALL MOVER(0.,0,D12S,1,5)
                  CALL MOVER(0.,0,D22S,1,5)
                  CALL MOVER(0.,0,GJS,1,5)
                  ANGLS(1) = 0.
                  IF (NSF.NE.0) ANGLS(1) = 180.     
                  NSEGS(1) = 0 
                  NENDS(1) = 1 
                  ALS(1)   = HEIGHT
                  HSUBS = ALS(1)
                  ESUBS = E1L
                  GSUBS = GL
                  TSUBS = THICK
                  C1S(1) = C11SUB 
                  C33S(1)= C33SUB
                  D11S(1)= C44SUB
                  D12S(1)= C45SUB
                  D22S(1)= C55SUB
                  GJS(1) = C66SUB
                  P2S  = 4./HEIGHT**2
                  GTSUBS(1) = GT1
                  GTSUBS(2) = GT2
                  THSUBS    = THICK
C
C   In the following statement, the 0.7*HEIGHT is consistent with the location on
C   the stiffener web used for the major stiffener webs for generating stiffener
C   prestress.
C23456789012345678901234567890123456789012345678901234567890123456789012
C  DELEX, etc. = strain increments due to panel deformation at substringer.
C                (deformations due to 1. imperfection growth during loading
C                 and  2. application of normal pressure.)
C
C BEG APR 2005
                  HEIGH7 = 0.7*HEIGHT + TX0(ISEG)/2.
                  HEIGH0 = 0.0*HEIGHT + TX0(ISEG)/2.
                  HEIGH1 = 1.0*HEIGHT + TX0(ISEG)/2.
                  DELEX  = (-ABS(CURCHX)*FMCUR + CURVAR)*
     1             ABS(-FACTXX*HEIGH7 -CS(1,4)/CS(1,1))
                  DELEX0 = (-ABS(CURCHX) + CURVAR)*
     1             ABS(-FACTXX*HEIGH7 -CS(1,4)/CS(1,1))
                  DELXY0 = ABS(CURCXY)*SIGN(1.,PNXY)*
     1             ABS(-FACTXX*HEIGH7 -CS(3,6)/CS(3,3))
                  DELEX1= (-ABS(CURCHX) + CURVAR)*
     1             ABS(-FACTXX*HEIGH0 -CS(1,4)/CS(1,1))
                  DELEX2= (-ABS(CURCHX) + CURVAR)*
     1             ABS(-FACTXX*HEIGH1 -CS(1,4)/CS(1,1))
C END APR 2005
C
                  IF (ISOSUB(JSET,ISEG,ILOOP).EQ.0) THEN
C The following quantities are needed for buckling and rolling of the substringer
C which is NOT part of an isogrid configuration...
C BEG APR 2005 (no changes yet. but should EPSX be replaced by EPSXS?)
                     RESLTS(1)= E1L*(EPSX+DELEX)*THICK 
                     RESLSS= E1L*(EPSX+DELEX0)*THICK
                     RPRES(1) = E1L*EPSXP*THICK
C END APR 2005
                     TOTS = RESLTS(1)*HEIGHT
                     TOTPS= RPRES(1)*HEIGHT
C                    RESLT(1)= RWBTOT +RWBEIG
C                    RPRE(1) = RWBTOT
                     DELC11 = E1L*THICK*HEIGHT/SPACNG
                     DELC14 = -ECCEN*E1L*THICK*HEIGHT/SPACNG
	             DELC44 = 
     1              ((HEIGHT+ZSTART)**3-ZSTART**3)*E1L*THICK/(3.*SPACNG)
                     DLC66S = GJ/SPACNG
                     WBTOT1(1) = RPRES(1)
                     WBTOT2(1) = RPRES(1)
C BEG APR 2005
                     WBEIG1(1) = E1L*(EPSXS+DELEX1)*THICK
                     WBEIG2(1) = E1L*(EPSXS+DELEX2)*THICK
                     WBTRY1 = E1L*EPSXS*THICK
                     WBTRY2 = WBTRY1
                     IF (WBTRY2.LT.WBEIG2(1)) THEN
                        WBEIG2(1) = WBTRY2
                        IF (WBTRY1.LT.WBEIG1(1)) WBEIG1(1) = WBTRY1
                     ENDIF
C END APR 2005
                     PRELDS(1) =(WBTOT2(1) -WBTOT1(1))/4. +WBTOT1(1)/3.
                     EIGLDS(1) =(WBEIG2(1) -WBEIG1(1))/4. +WBEIG1(1)/3.
                  ENDIF
C
                  IF (ISOSUB(JSET,ISEG,ILOOP).NE.0) THEN
C23456789012345678901234567890123456789012345678901234567890123456789012
C
C The following quantities are needed for buckling and rolling of the substringer
C which IS part of an isogrid configuration...
C
C BEG APR 2005
                    HEIGH7 = 0.7*HEIGHT + TX0(ISEG)/2.
                    HEIGH0 = 0.0*HEIGHT + TX0(ISEG)/2.
                    HEIGH1 = 1.0*HEIGHT + TX0(ISEG)/2.
                    FACTZZ =  1.0
                    IF (CS(2,5)/CS(2,2).LT.0.) FACTZZ = -1.0
                    DELEY0 = (-ABS(CURCHY) + PWDD(INODE,ISEG))*
     1             ABS(FACTZZ*FACTYY*HEIGH7 -CS(2,5)/CS(2,2))
                    DELXY0 = ABS(CURCXY)*SIGN(1.,PNXY)*
     1             ABS(FACTZZ*FACTYY*HEIGH7 -CS(3,6)/CS(3,3))
                    DELEY1= (-ABS(CURCHY) + PWDD(INODE,ISEG))*
     1             ABS(FACTZZ*FACTYY*HEIGH0 -CS(2,5)/CS(2,2))
                    DELEY2= (-ABS(CURCHY) + PWDD(INODE,ISEG))*
     1             ABS(FACTZZ*FACTYY*HEIGH1 -CS(2,5)/CS(2,2))
                    DELXY1 = ABS(CURCXY)*SIGN(1.,PNXY)*
     1             ABS(FACTZZ*FACTYY*HEIGH0 -CS(3,6)/CS(3,3))
                    DELXY2 = ABS(CURCXY)*SIGN(1.,PNXY)*
     1             ABS(FACTZZ*FACTYY*HEIGH1 -CS(3,6)/CS(3,3))
C END APR 2005
                    WBMINX = 1000000.
                    ISOANG = ISOTYP(JSET,ISEG,ILOOP)
                    THETA = 30.*PI/180.
                    IF (ISOANG.EQ.2) THETA = 60.*PI/180.
                    STHET = SIN(THETA)
                    CTHET = COS(THETA)
                    DO 114 IISO = 1,3
                       IF (IISO.EQ.2) STHET = -STHET
                       IF (IISO.EQ.3) THEN
                          IF (ISOANG.EQ.1) THEN
                             STHET = 1.0
                             CTHET = 0
                          ELSE
                             STHET = 0.
                             CTHET = 1.
                          ENDIF
                       ENDIF
                       CTHET2 = CTHET*CTHET
                       SCTHET = STHET*CTHET
                       STHET2 = STHET*STHET
                       EPSISP=
     1                   EPSXP*CTHET2 +EPSYP*STHET2 + EPSXYP*SCTHET
                       WBTOT1(IISO) = E1L*THICK*EPSISP
                       WBTOT2(IISO) = WBTOT1(IISO)
                       EPSIS7=
     1                    (EPSX+DELEX0)*CTHET2 + (EPSY+DELEY0)*STHET2
     1                                         +(EPSXY+DELXY0)*SCTHET
                       EPSISO=
     1                    (EPSX+DELEX1)*CTHET2 + (EPSY+DELEY1)*STHET2 
     1                                         +(EPSXY+DELXY1)*SCTHET
                       WBEIG1(IISO) = E1L*EPSISO*THICK
                       EPSISO=
     1                    (EPSX+DELEX2)*CTHET2 + (EPSY+DELEY2)*STHET2
     1                                         +(EPSXY+DELXY2)*SCTHET
                       WBEIG2(IISO) = E1L*EPSISO*THICK
                       WBEIG7(IISO) = E1L*EPSIS7*THICK
                       WBMINX = MIN(WBMINX,WBEIG7(IISO))
                       PRELDS(IISO) =
     1                  (WBTOT2(IISO) -WBTOT1(IISO))/4. +WBTOT1(IISO)/3.
                       EIGLDS(IISO) =
     1                  (WBEIG2(IISO) -WBEIG1(IISO))/4. +WBEIG1(IISO)/3.
C BEG DEC 2004
                       WBSUBV(1,IISO) = WBEIG1(IISO)
                       WBSUBV(2,IISO) = WBEIG2(IISO)
                       WBSUBF(1,IISO) = WBTOT1(IISO)
                       WBSUBF(2,IISO) = WBTOT2(IISO)
C                      WRITE(8,'(A,I2,1P,2E12.4)')
C    1               ' IISO,WBEIG1(IISO),WBEIG2(IISO)=',
C    1                 IISO,WBEIG1(IISO),WBEIG2(IISO)
C                      WRITE(8,'(A,I2,1P,2E12.4)')
C    1               ' IISO,WBSUBV(1,IISO),WBSUBV(2,IISO)=',
C    1                 IISO,WBSUBV(1,IISO),WBSUBV(2,IISO)
C END DEC 2004
  114               CONTINUE
                    DIFISO = ABS(WBMINX-WBEIG7(1))/ABS(WBMINX)
                    IF (DIFISO.LT.0.001) THEN
                       RESLSS = WBEIG7(1)
                       RPRES(1) = WBTOT1(1)
                       MEMBER = 1
                       GO TO 116
                    ENDIF
                    DIFISO = ABS(WBMINX-WBEIG7(2))/ABS(WBMINX)
                    IF (DIFISO.LT.0.001) THEN
                       RESLSS = WBEIG7(2)
                       RPRES(1) = WBTOT1(2)
                       MEMBER = 2
                       GO TO 116 
                    ENDIF
                    DIFISO = ABS(WBMINX-WBEIG7(3))/ABS(WBMINX)
                    IF (DIFISO.LT.0.001) THEN
                       RESLSS = WBEIG7(3)
                       RPRES(1) = WBTOT1(3)
                       MEMBER = 3
                       GO TO 116
                    ENDIF
  116               CONTINUE
                    TOTS = RESLSS*HEIGHT
                    TOTPS= RPRES(1)*HEIGHT
C BEG DEC 2004
C  Bring down this section from above, because we need substiffener
C  loads for introduction into the modified SUBROUTINE TRIANG.
C
C  Begin section on local buckling of triangular skin between subisogrid.
C
C23456789012345678901234567890123456789012345678901234567890123456789012
                    IF (ISANDS.EQ.0.AND.ISAND.EQ.1) GO TO 763
                    IF (JSET.EQ.1.AND.ISEG.EQ.1.AND.ILOOP.EQ.1) THEN
C
C  GET LOCAL BUCKLING OF TRIANGULAR SKIN BETWEEN SUBISOGRID STIFFENERS
C  ISOANG = orientation of equilateral triangle formed by isogrid members
C  NDOF = number of degrees of freedom in the series expansion for normal
C         buckling modal displacement w given as Eq.(9) in the paper,
C         Global optimum design of externally pressurized isogrid stiffened
C         cylindrical shells with added T-rings, David Bushnell, Int. J.
C         of Non-Linear Mechanics, Vol. 37 (2002), pp 801-831
C
C  NODEX = number of nodes in the X-direction (See Fig. 34 in AIAA paper
C          96-1337-CP, AIAA 37th SDM Meeting, April, 1996, pp 126-182)
C          for numerical integration.
C
C  NODEY = number of nodes in the Y-direction.
C
                     ISOANG = ISOTYP(1,ISEG,ILOOP)
                     IF (NNPRT.GE.2) WRITE(8,'(A,I3)')' ISOANG=',ISOANG
                     SIDE = BSUB(1,ISEG,ILOOP)/0.8660254
C BEG DEC 2004
C                    NDOF = 10
                     NDOF = 15
C                    NODEX = 15
C                    NODEY = 15
                     NODEX = 21
                     NODEY = 21
C END DEC 2004
                     IF (ITYPE.NE.1) THEN
                        NDOF = 15
                        NODEX= 21
                        NODEY= 21
                     ENDIF
                     PPNXY = -SUBNXY
                     IF (ISOANG.EQ.2) THEN
                        PPNX = -SUBNX
                        PPNY = -SUBNY
                        PSKNXP = -SUBNXP
                        PSKNYP = -SUBNYP
                     ELSE
                        PPNX = -SUBNY
                        PPNY = -SUBNX
                        PSKNXP = -SUBNYP
                        PSKNYP = -SUBNXP
                     ENDIF
                     EIGISO = 9999.
C
C                    IF (NNPRT.GE.2) WRITE(8,'(A,1P,3E12.4)')
C    1             ' PPNX,PPNY,PPNXY=',PPNX,PPNY,PPNXY
C
C BEG DEC 2004
                     IEDGE = 0
                     IF (ISTIFX(1).EQ.3) IEDGE = 1
                     CALL TRIANG(IFILE,0,SIDE,60.,CX0(4,4,1),CX0(4,5,1),
     1                        CX0(5,5,1),CX0(4,6,1),CX0(5,6,1),
     1                        CX0(6,6,1),PPNX,PPNY,PPNXY,
     1                        PSKNXP,PSKNYP,1,NODEX,NODEY,NDOF,NNPRT,
     1                        ISOANG,EIGISO,WWW(1),WWW(22501),
     1                        WWW(45001),WWW(46601),WWW(48201),
     1                        CSUBX(4,4),CSUBX(6,6),HEIGHT,
     1                        WBSUBV,WBSUBF,IEDGE)
C END DEC 2004
C
C                    IF (NNPRT.GE.2) WRITE(8,'(A,1P,E12.4)')
C    1                                 ' After TRIANG: EIGISO=',EIGISO
C                    IF (NNPRT.GE.2) WRITE(8,'(A,1P,2E12.4)')
C    1                 ' After TRIANG: TX0(1),TY0(1)=',TX0(1),TY0(1) 
C
                     CALL SHRRED(IREDUC,-PPNX,-PPNY,PPNXY,TX0(1),TY0(1),
     1               GTX0(1,1),EIGISO,0,0,0,0.,0.,1,-PSKNXP,-PSKNYP,15)
C
C23456789012345678901234567890123456789012345678901234567890123456789012
                     IF (NNPRT.GE.2.AND.IREDUC.EQ.1) WRITE(IFILE,*)
     1      ' LOCAL BUCKLING OF PANEL SKIN AFTER KNOCKDOWN FOR T.S.D.=',
     1               EIGISO
                     INUMTT = INUMTT + 1
C BEG DEC 2004
                     FSAFTY = FSLOC
C END DEC 2004 
                     CALL CONVRF(FSAFTY,CN2)
C23456789012345678901234567890123456789012345678901234567890123456789012
                     IF (IDESGN.EQ.0.AND.(EIGISO/FSAFTY).LT.MAXCON) THEN
                        ICAR = ICAR + 1
                        PCWORD(ICAR)=
     1                         'local buckling of subtriangular skin'
                        CPLOT(ICAR) = EIGISO/FSAFTY - 1.
                        IADDCC(ICAR) = 0
                        FSAFEP(ICAR) = FSAFTY
                     ENDIF
                     IF (IDESGN.EQ.0.AND.(EIGISO/FSAFTY).GT.EIGMAX) 
     1                                                     GO TO 762
                     IF (IDESGN.EQ.1.AND.IPOINC(INUMTT).EQ.0) GO TO 762
                     ICONST = ICONST + 1
                     IF (IDESGN.EQ.0) IPOINC(INUMTT) = 1
                     CONSTR(ICONST) = EIGISO/FSAFTY
                     WORDB(ICONST)=
     1            'Local subtriangular skin buckling load factor -1;FS='
     1               //CN2
C BEG APR 2007
                     IF (NPRT.GE.0) WRITE(8,'(A,1P,E12.4,2X,A)')
     1             ' Margin=',CONSTR(ICONST)-1.,WORDB(ICONST)
C END APR 2007
C23456789012345678901234567890123456789012345678901234567890123456789012
                     IF (NNPRT.GE.2)
     1                WRITE(IFILE,'(A,/,A,/,A,I3,A,I2,A,I2)')
     1    ' ***** THE ISOGRID PANEL SKIN BUCKLING MARGIN WAS COMPUTED:',
     1               WORDB(ICONST),
     1         ' ******* CONSTRAINT NO.',ICONST,'; LOAD SET NO.',ILOADS,
     1            '; SUBCASE NO.',ICASE
  762                CONTINUE
                     MSUB(ISEG,ILOOP) = 1
                     NSUB(ISEG,ILOOP) = 1
                    ENDIF
C          (End of JSET.EQ.1.AND.ISEG.EQ.1.AND.ILOOP.EQ.1 condition.)
C
C   End of section on buckling of subtriangular skin for option in which
C   the substiffeners (logically treated as substringers) for an isogrid.
C
  763               CONTINUE
C END DEC 2004 (end of section moved down from above)
                  ENDIF
C               (End of ISOSUB(JSET,ISEG,ILOOP).NE.0 condition for substringer.)
                  GO TO 900  
C23456789012345678901234567890123456789012345678901234567890123456789012
               ELSE
C         (End ABS(ANGLEX).LT.10.0.OR.ISOSUB(JSET,ISEG,ILOOP).NE.0 condition)
C         (Begin .NOT.(ABS(ANGLEX).LT.10.0.OR.ISOSUB(JSET,ISEG,ILOOP).NE.0) condition.
C
C for subrings...
C
C For definitions of quantities, see the substringer section above. The following
C quantities apply to subrings and are analogous.
C
                  NPARTR = 1   
                  BSUBR  = SPACNG
                  ISTIFX(2) = 3
                  NSURFX(2) = NSF
C BEG APR 2005
                  FACTYY = 1.0
                  IF (NSURFX(2).EQ.1) FACTYY = -1
C END APR 2005
                  CALL MOVER(0,0,NSEGR,1,5)
                  CALL MOVER(0,0,NENDR,1,5)
                  CALL MOVER(0.,0,ANGLR,1,5)
                  CALL MOVER(0.,0,RESLTR,1,5)
                  CALL MOVER(0.,0,RPRER,1,5)
                  CALL MOVER(0.,0,ALR,1,5)
                  CALL MOVER(0.,0,C1R,1,5)
                  CALL MOVER(0.,0,C33R,1,5)
                  CALL MOVER(0.,0,D11R,1,5)
                  CALL MOVER(0.,0,D12R,1,5)
                  CALL MOVER(0.,0,D22R,1,5)
                  CALL MOVER(0.,0,GJR,1,5)
                  ANGLR(1) = 0.
                  IF (NSF.NE.0) ANGLR(1) = 180.     
                  NSEGR(1) = 0 
                  NENDR(1) = 1 
                  ALR(1)   = HEIGHT
                  HSUBR = ALR(1)
                  ESUBR = E1L
                  GSUBR = GL
                  TSUBR = THICK
                  C1R(1) = C11SUB
                  C33R(1)= C33SUB
                  D11R(1)= C44SUB
                  D12R(1)= C45SUB
                  D22R(1)= C55SUB
                  GJR(1) = C66SUB
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG APR 2005
                  HEIGH7 = 0.7*HEIGHT + TX0(ISEG)/2.
                  HEIGH0 = 0.0*HEIGHT + TX0(ISEG)/2.
                  HEIGH1 = 1.0*HEIGHT + TX0(ISEG)/2.
                  FACTZZ =  1.0
                  IF (CS(2,5)/CS(2,2).LT.0.) FACTZZ = -1.0
                  DELEY0 = (-ABS(CURCHY) + PWDD(INODE,ISEG))*
     1           ABS(FACTZZ*FACTYY*HEIGH7 -CS(2,5)/CS(2,2))
                  DELXY0 = ABS(CURCXY)*SIGN(1.,PNXY)*
     1           ABS(FACTZZ*FACTYY*HEIGH7 -CS(3,6)/CS(3,3))
                  DELEY1= (-ABS(CURCHY) + PWDD(INODE,ISEG))*
     1           ABS(FACTZZ*FACTYY*HEIGH0 -CS(2,5)/CS(2,2))
                  DELEY2= (-ABS(CURCHY) + PWDD(INODE,ISEG))*
     1           ABS(FACTZZ*FACTYY*HEIGH1 -CS(2,5)/CS(2,2))
                  DELXY1 = ABS(CURCXY)*SIGN(1.,PNXY)*
     1           ABS(FACTZZ*FACTYY*HEIGH0 -CS(3,6)/CS(3,3))
                  DELXY2 = ABS(CURCXY)*SIGN(1.,PNXY)*
     1           ABS(FACTZZ*FACTYY*HEIGH1 -CS(3,6)/CS(3,3))
C END APR 2005
C BEG APR 2005 (no changes yet, but should EPSY be replaced by EPSYS?)
                  RESLTR(1)= E1L*(EPSY+DELEY)*THICK
                  RESLSR= E1L*(EPSY+DELEY0)*THICK
                  RPRER(1) = E1L*EPSYP*THICK
C END APR 2005
                  TOTR = RESLTR(1)*HEIGHT
                  TOTPR= RPRER(1)*HEIGHT
C                 RESLT(1)= RWBTOT +RWBEIG
C                 RPRE(1) = RWBTOT
                  DELC22 = E1L*THICK*HEIGHT/SPACNG
                  DELC25 = -ECCEN*E1L*THICK*HEIGHT/SPACNG
                  DELC55 = 
     1            ((HEIGHT+ZSTART)**3 -ZSTART**3)*E1L*THICK/(3.*SPACNG)
                  DLC66R =  GJ/SPACNG
                  GTSUBR(1) = GT1
                  GTSUBR(2) = GT2
                  THSUBR    = THICK
                  P2R  = 4./HEIGHT**2
                  WBTOT1(2) = RPRER(1)
                  WBTOT2(2) = RPRER(1)
C BEG APR 2005
                  WBEIG1(2) = E1L*(EPSYS+DELEY1)*THICK
                  WBEIG2(2) = E1L*(EPSYS+DELEY2)*THICK
                  WBTRY1 = E1L*EPSYS*THICK
                  WBTRY2 = WBTRY1
                  IF (WBTRY2.LT.WBEIG2(2)) THEN
                     WBEIG2(2) = WBTRY2
                     IF (WBTRY1.LT.WBEIG1(2)) WBEIG1(2) = WBTRY1
                  ENDIF
C END APR 2005
                  PRELDR = (WBTOT2(2) - WBTOT1(2))/4. + WBTOT1(2)/3.
                  EIGLDR = (WBEIG2(2) - WBEIG1(2))/4. + WBEIG1(2)/3.
                  EIGCOL = 10.E+16
                  IF (RESLTR(1).GT.0.0) THEN
                     IF ((RSAVE.GT.0.0.AND.NSF.EQ.0).OR.
     1                   (RSAVE.LT.0.0.AND.NSF.EQ.1)) THEN
C                 Buckling of the subring as a wide column is possible.
C                 The formula for EIGCOL, the ring wide column buckling
C                 load factor, is taken from Warren C. Young's ROARK'S
C                 FORMULAS FOR STRESS AND STRAIN, 6th Edition,
C                 McGraw-Hill Book Co., 1989, p. 676
C                 Section 3c of Table 34: (pa)' = K*PI**2*EI/L**2, in
C                 which K = 3.26, L = HEIGHT, EI = D22R(1), and the
C                 distributed load p is obtained from the relationship,
C                 p*HEIGHT/2 = N1, where N1 is the radial compression
C                 where the ring intersects the shell. This radial
C                 compression is assumed to taper linearly to zero from
C                 the ring root to the ring tip. Also, note that
C                 N1 = RESULTR(1)*HEIGHT/r, where r = abs(RSAVE).
C
                        EIGCOL = 3.26*PI**2*D22R(1)*ABS(RSAVE)/
     1                           (2.*HEIGHT**3*RESLTR(1))
                     ENDIF
                  ENDIF
                  GO TO 900  
               ENDIF
C         (End .NOT.(ABS(ANGLEX).LT.10.0.OR.ISOSUB(JSET,ISEG,ILOOP).NE.0) condition.)
  900          CONTINUE
 3000       CONTINUE
C       (End of JSET = 1,2 loop: loop over substiffener sets)
C
            IF (ISOSUB(1,ISEG,ILOOP).NE.0) GO TO 3100
C
C  The following section is for substiffening in which both substringers and subrings
C  are present and the substiffening configuration is NOT an isogrid.
C
            IF (NPARTS.NE.0.AND.NPARTR.NE.0) THEN
               IF (ILOOP.EQ.1) THEN
                  CALL MOVER(CX0(1,1,ISEG),1,CXSS(1,1),1,36)
                  CALL MOVER(CX0(1,1,ISEG),1,CXSR(1,1),1,36)
                  CXSS(1,1) = CXSS(1,1) + DELC11
                  CXSS(1,4) = CXSS(1,4) + DELC14
                  CXSS(4,4) = CXSS(4,4) + DELC44
                  CXSS(6,6) = CXSS(6,6) + DLC66S
                  CXSR(2,2) = CXSR(2,2) + DELC22
                  CXSR(2,5) = CXSR(2,5) + DELC25
                  CXSR(5,5) = CXSR(5,5) + DELC55
                  CXSR(6,6) = CXSR(6,6) + DLC66R
               ELSE
                  CALL MOVER(CY0(1,1,ISEG),1,CYSS(1,1),1,36)
                  CALL MOVER(CY0(1,1,ISEG),1,CYSR(1,1),1,36)
                  CYSS(1,1) = CYSS(1,1) + DELC11
                  CYSS(1,4) = CYSS(1,4) + DELC14
                  CYSS(4,4) = CYSS(4,4) + DELC44
                  CYSS(6,6) = CYSS(6,6) + DLC66S
                  CYSR(2,2) = CYSR(2,2) + DELC22
                  CYSR(2,5) = CYSR(2,5) + DELC25
                  CYSR(5,5) = CYSR(5,5) + DELC55
                  CYSR(6,6) = CYSR(6,6) + DLC66R
               ENDIF
            ENDIF
C      (End of NPARTS.NE.0.AND.NPARTR.NE.0) condition.)
C
C  The following section applies only to NON-subisogrid configurations...
C
C BEG JAN 2005
C  rolling with skin buckl.
C END JAN 2005
      EFOUND = 0.
      IF (ISANDW(1,1).EQ.1.OR.ISANDW(1,1).EQ.NLAYER(1,1))
     1 EFOUND = WFOUND(1,1)
      IIROLL = 1
      NSTOT = 0   
      IF (NPARTR.EQ.0.AND.NPARTS.EQ.0) GO TO 479
      NSTOT = 4   
      IF (PNX.EQ.0.0.AND.PNY.EQ.0.0) GO TO 479  
C
C  Next, get local buckling of panel skin between substiffeners including
C  rolling of the substiffeners, which have rectangular (blade) cross sections.
C
C23456789012345678901234567890123456789012345678901234567890123456789012
      IF (NNPRT.GE.2) WRITE(8,'(A,/,1P,4E12.4)')
     1' Substiffener prestress: RESLTS(1),RPRES(1),RESLTR(1),RPRER(1)=',
     1                          RESLTS(1),RPRES(1),RESLTR(1),RPRER(1)
C
C  Get contributions to strain energy and work done by prebuckling loads
C  of the substiffener rolling at the edges of the local domain...
C  First, contributions from the substringers...
      CALL ROLL(BSUBS,NPARTS,NENDS,ANGLS,C1S,ALS,NSEGS,1,RESLTS,RPRES, 
     1          ISTIFX(1))
C  Next,  contributions from the subrings...
      CALL ROLL(BSUBR,NPARTR,NENDR,ANGLR,C1R,ALR,NSEGR,2,RESLTR,RPRER, 
     1          ISTIFX(2))
C     
C     WRITE(6,3005)     
 3005 FORMAT(//' LOCAL ROLLING OF SUBSTIFFENER...'/)     
      IF (ISOGRD.EQ.1) GO TO 342
      IARGFL = 0
      IF (IFLAT.NE.0) IARGFL = 1
C
      IF (NNPRT.GE.2) WRITE(IFILE,'(/,A,1P,E12.4)')
     1' Skin buckling with substiffener rolling, C11=',CX0(1,1,1)
      CALL GENSTB(1,BSUBR,BSUBS,SUBNX,SUBNY,SUBNXY,SUBNXP,SUBNYP, 
     1 MSUB(ISEG,ILOOP),NSUB(ISEG,ILOOP),TSTSUB(ISEG,ILOOP),
     1 SLPSUB(ISEG,ILOOP),EIGSUB(ISEG,ILOOP),IDESGN,EIGROL,
     1 CX0(1,1,ISEG),TX0(ISEG),TX0(ISEG),GTX0(1,ISEG),IREDUC,1,IFILE,   
     1 ITUTOR,JJJ,ISTIFX,
     1 RESLTS,RPRES,1,10.E10,0.,FFLAT(16,MIDEND,1),IARGFL,
     1 1,IAGAIN(16,MIDEND),FNEFF(16,MIDEND),7236,EIGRAT(16),
     1 RBB0(16),ILOADS,ICASE)
C23456789012345678901234567890123456789012345678901234567890123456789012
      IF (IRESTY.EQ.1) GO TO 2222
C
      IF (IAGAIN(16,MIDEND).NE.0) THEN
          CALL GENSTB(1,BSUBR,BSUBS,SUBNX,SUBNY,SUBNXY,SUBNXP,SUBNYP,
     1           M2ND(16,MIDEND),N2ND(16,MIDEND),TST2ND(16,MIDEND),
     1           SLP2ND(16,MIDEND),EIG2ND(16,MIDEND),
     1           IDESGN,EIGROL,CX0(1,1,ISEG),TX0(ISEG),TX0(ISEG),
     1           GTX0(1,ISEG),IREDUC,1,IFILE,ITUTOR,JJJ,ISTIFX,RESLTS,
     1           RPRES,1,10.E10,0.,FFLAT(16,MIDEND,2),IARGFL,
     1           2,IAGAIN(16,MIDEND),FNEFF(16,MIDEND),7241,EIGRAT(16),
     1           RBB0(16),ILOADS,ICASE)
C
          IF (IRESTY.EQ.1) GO TO 2222
C
          CALL WGTAVE(SUBNX+SUBNXP,SUBNY+SUBNYP,SUBNXY,
     1                EIG2ND(16,MIDEND),EIGSUB(ISEG,ILOOP),
     1                IAGAIN(16,MIDEND))
      ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
C
      CRLOCP = SLPSUB(ISEG,ILOOP) 
      IF (TSTSUB(ISEG,ILOOP).LT.1.0.AND.ABS(SLPSUB(ISEG,ILOOP)).GT.0.0)
     1  CRLOCP=1./SLPSUB(ISEG,ILOOP)
C
C BEG FEB 2009
      IF (ISEG.EQ.1.AND.ILOOP.EQ.1.AND.MSUB(ISEG,ILOOP).LE.MMAXSB
     1 .AND.MSUB(ISEG,ILOOP).NE.0.AND.IDESGN.EQ.0
     1 .AND.ILABEL.GE.9260.AND.IHILOC.NE.0) THEN
         ISRMOD(1) = 1
         IF (NNPRT.GE.0) WRITE(IFILE,
     1     '(/,A,/,A,/,A,/,A,/,A,I5,A,I5,A,/,A,A,I5,/,A)')
     1 ' Local skin buckling with substiffener rolling',
     1 ' is not recorded as a margin because this type of buckling',
     1 ' has been superseded by the results from the discretized',
     1 ' skin-substringer module model, for which buckling load',
     1 ' factors have been computed in the range from m = ',MMINSB,
     1 ' to m = ',MMAXSB,' axial halfwaves.',
     1 ' The critical local skin',
     1 ' buckling with substiffener-rolling has',
     1   MSUB(1,1),' axial half waves, which lies within this range.'
      ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
      IF (ISRMOD(1).EQ.0) THEN
C END FEB 2009

C  Record the margin corresponding to EIGSUB (local buckling of the
C  panel skin between substiffeners including substiffener rolling):
C
       CALL RECORD(1,1,EIGSUB(ISEG,ILOOP),CRLOCP,
     1 MSUB(ISEG,ILOOP),NSUB(ISEG,ILOOP),ICONST,CONSTR,WORDB,
     1 IFILE,IDESGN,JJJ,1.0,EIGMAX,IPOINC,INUMTT,
     1 FSLOC,ICASE,0,0,VINHOF,MORCON(ILOADS,ICASE),
     1 ENDMID,0,0,1)
C BEG FEB 2009
      ENDIF
C END FEB 2009
C BEG FEB 2007
       IF (ITYPE.EQ.1.AND.NNPRT.GE.2)
     1 WRITE(IFILE,*)' AFTER RECORD42: IDESGN,INUMTT,ICONST=',
     1                                 IDESGN,INUMTT,ICONST
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2007
C
      IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 2222
C BEG OCT 2004
C  store stuff for alternative solution.
      IF (IDESGN.EQ.0.AND.ILABEL.EQ.9260) THEN
         MPANDA(5) = MSUB(ISEG,ILOOP)
         NPANDA(5) = NSUB(ISEG,ILOOP)
         SPANDA(5) = CRLOCP
         EPANDA(5) = EIGSUB(ISEG,ILOOP)
         MPHIGH(5) = MWAVEX(3)
         EPHIGH(5) = EIGMNC(3)
      ENDIF
C END OCT 2004
C
C   End of section on local buckling of panel skin between subrings
C   and substringers with rolling of the substiffeners included.
C*********************************************************************
C END SECTION INVOLVING SUBSTIFFENER ROLLING WITH SUBSKIN PARTICIPATION.
C CONTINUE THE SUBSTIFFENER CODING FOR OTHER BUCKLING MODES
C*********************************************************************
C
 3100 CONTINUE
C
C  Formulas for buckling of substiffeners (see SUB. ENDBUK in BUCKLE library):
C  In this section the substringers or subrings are buckling by themselves
C  without participation of the panel skin. The coding is analogous to that
C  in SUBROUTINE STFEIG for the rectangular stiffener configuration.
C
C  First, do substringers...
C
C BEG JAN 2005
C simp-support of substring.
C END JAN 2005
      IF (ISTIFX(1).EQ.3) THEN
         BSIDE = BSUBR
         IIUP = 1
         IF (ISOSUB(1,ISEG,ILOOP).NE.0) THEN
            IIUP = 3
            BSIDE = SIDE
         ENDIF
         P1OM2 = ((PI/BSIDE)**2)/3.
C23456789012345678901234567890123456789012345678901234567890123456789012
         DO 3150 IISO = 1,IIUP
            IF (IDESGN.EQ.0) ILAMSS(ISEG,ILOOP,IISO) = 0
            USS = D11S(1)*P1OM2*FLOAT(MSUB(ISEG,ILOOP)**2) +GJS(1)*P2S
            IF (NNPRT.GE.2) WRITE(8,'(A,/,1P,3E12.4,I8,1P,2E12.4)')
     1    ' USS,D11S(1),P1OM2,MSUB(ISEG,ILOOP),GJS(1),P2S=',
     1      USS,D11S(1),P1OM2,MSUB(ISEG,ILOOP),GJS(1),P2S
            IF (NNPRT.GE.2) WRITE(8,'(A,1P,2E12.4)')
     1    ' PRELDS(IISO),EIGLDS(IISO)=',PRELDS(IISO),EIGLDS(IISO)
            USPLUS = USS + PRELDS(IISO)
            IF (USPLUS.GE.0.0) THEN
               EIGSST = 10.E+16
               IF (EIGLDS(IISO).LT.0.) EIGSST = -USPLUS/EIGLDS(IISO)
            ENDIF
            IF (USPLUS.LT.0.0.OR.ILAMSS(ISEG,ILOOP,IISO).EQ.1) THEN
               IF (IDESGN.EQ.0) ILAMSS(ISEG,ILOOP,IISO) = 1
               IF ((PRELDS(IISO)+EIGLDS(IISO)).LT.0.0) 
     1                     EIGSST = -USS/(PRELDS(IISO)+EIGLDS(IISO))
            ENDIF
            IF (ISOSUB(1,ISEG,ILOOP).EQ.0) THEN
             IF (NNPRT.GE.2) 
     1       WRITE(8,'(/,A,1P,E12.4,/,A,1P,2E12.4,/,A,1P,2E12.4)')
     1     ' Buckling load factor for substringer,  EIGSST=',EIGSST,
     1   ' Fixedload at root, tip of substringer, WBTOT1(1),WBTOT2(1)=',
     1                                            WBTOT1(1),WBTOT2(1),
     1   ' Eigenload at root, tip of substringer, WBEIG1(1),WBEIG2(1)=',
     1                                            WBEIG1(1),WBEIG2(1)
            ELSE
             IF (NNPRT.GE.2)
     1       WRITE(8,'(/,A,I3,A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4)')
     1     ' Buckling load factor for subisogrid member no. ',IISO,
     1                                            ': EIGSST=',EIGSST,
     1     ' Fixed load at the root of subisogrid member,WBTOT1(IISO)=',
     1                                                   WBTOT1(IISO),
     1     ' Fixed load at the tip  of subisogrid member,WBTOT2(IISO)=',
     1                                                   WBTOT2(IISO)
             IF (NNPRT.GE.2)
     1       WRITE(8,'(A,1P,E12.4,/,A,1P,E12.4)')
     1     ' Eigen load at the root of subisogrid member,WBEIG1(IISO)=',
     1                                                   WBEIG1(IISO),
     1     ' Eigen load at the tip  of subisogrid member,WBEIG2(IISO)=',
     1                                                   WBEIG2(IISO)
            ENDIF
            IF (NNPRT.GE.2) WRITE(8,'(A,1P,E12.4)')
     1  ' Length over which buckling is assumed to occur,BSIDE=',BSIDE
C23456789012345678901234567890123456789012345678901234567890123456789012
            IF (EIGSST.LT.0.0) EIGSST = ABS(EIGSST)
            ESSTSP = EIGSST
C           WBEAVE = RESLTS(1)
            WBEAVE = RESLSS
            IF (ISOSUB(1,ISEG,ILOOP).NE.0)
     1      WBEAVE = 0.7*WBEIG2(IISO) + 0.3*WBEIG1(IISO)
            IF (NNPRT.GE.2) WRITE(8,'(A,I5,A,/,1P,5E12.4)')
     1    ' Input to SHRRED: Member no. IISO=',IISO,
     1                   ' EIGSST,WBEAVE,THSUBS,GTSUBS(1),GTSUBS(2)=',
     1                     EIGSST,WBEAVE,THSUBS,GTSUBS(1),GTSUBS(2)
            CALL SHRRED(IREDUC,WBEAVE,0.,0.,THSUBS,THSUBS,GTSUBS,
     1                  EIGSST,0,1,JJJ,0.,0.,1,0.,0.,16)
            IF (NNPRT.GE.2) WRITE(8,'(A,1P,E12.4,/,A,1P,E12.4)')
     1    ' BEFORE t.s.d. reduction: EIGSST=',ESSTSP,
     1    ' AFTER  t.s.d. reduction: EIGSST=',EIGSST
C
            IF (ISANDS.EQ.0.AND.ISAND.EQ.1) GO TO 467
C
            IF (ISOSUB(1,ISEG,ILOOP).NE.0) THEN
               CALL CONVR2(IISO,CN1)
               INUMTT = INUMTT + 1
               FSAFTY = 1.0
               CALL CONVRF(FSAFTY,CN2)
               IF (IDESGN.EQ.0.AND.(EIGSST/FSAFTY).LT.MAXCON) THEN
                  ICAR = ICAR + 1
                  PCWORD(ICAR)='local buckling of subisogrid'//CN1
                  CPLOT(ICAR) = EIGSST/FSAFTY - 1.
                  IADDCC(ICAR) = 0
                  FSAFEP(ICAR) = FSAFTY
               ENDIF
               IF (IDESGN.EQ.0.AND.(EIGSST/FSAFTY).GT.EIGMAX)
     1                                                  GO TO 764
               IF (IDESGN.EQ.1.AND.IPOINC(INUMTT).EQ.0) GO TO 764
               ICONST = ICONST + 1
               IF (IDESGN.EQ.0) IPOINC(INUMTT) = 1
               CONSTR(ICONST) = EIGSST/FSAFTY
               WORDB(ICONST)=
     1        'buckling load factor of subisogrid'//CN1//'-1;FS='//CN2
C BEG APR 2007
               IF (NPRT.GE.0) WRITE(8,'(A,1P,E12.4,2X,A)')
     1       ' Margin=',CONSTR(ICONST)-1.,WORDB(ICONST)
C END APR 2007
C23456789012345678901234567890123456789012345678901234567890123456789012
  764          CONTINUE
C     (End of subisogrid buckling margin (EIGSST))
C
            ELSE
C
C  Record the margin corresponding to EIGSST (non-subisogrid buckling)...
C  buckling of the substringers without participation of the panel skin.
C
C BEG JAN 2005
C simp-support of substring.
C END JAN 2005
C BEG FEB 2009
C23456789012345678901234567890123456789012345678901234567890123456789012
               IF (ISEG.EQ.1.AND.ILOOP.EQ.1.AND.MSUB(ISEG,ILOOP)
     1           .LE.MMAXSB.AND.MSUB(ISEG,ILOOP).NE.0.AND.IDESGN.EQ.0
     1           .AND.ILABEL.GE.9260.AND.IHILOC.NE.0) THEN
                ISRMOD(2) = 1
                IF (NNPRT.GE.0) WRITE(IFILE,
     1          '(/,A,/,A,/,A,/,A,/,A,/,A,I5,A,I5,A,/,A,I5,/,A)')
     1 ' Buckling of a simply-supported substringer by itself without',
     1 ' participation of the panel skin is not recorded as a margin',
     1 ' because this type of buckling has been superseded by the',
     1 ' results from the discretized skin-substringer module model,',
     1 ' for which buckling load factors have been computed in the',
     1 ' range from m = ',MMINSB,' to m = ',MMAXSB,' axial halfwaves.',
     1 ' The critical substringer buckling mode by itself has',
     1   MSUB(1,1),' axial half waves, which lies within this range.'
               ENDIF
               IF (ISRMOD(2).EQ.0) THEN
C END FEB 2009
               CALL RECORD(0,21,EIGSST,0.,
     1          MSUB(ISEG,ILOOP),0,ICONST,CONSTR,WORDB,
     1          IFILE,IDESGN,JJJ,1.0,EIGMAX,IPOINC,INUMTT,
     1          1.0,ICASE,0,0,VINHOF,MORCON(ILOADS,ICASE),
     1          ENDMID,0,0,1)
C BEG FEB 2009
               ENDIF
C END FEB 2009
C BEG FEB 2007
               IF (ITYPE.EQ.1.AND.NNPRT.GE.2)
     1         WRITE(IFILE,*)' AFTER RECORD43: IDESGN,INUMTT,ICONST=',
     1                                         IDESGN,INUMTT,ICONST
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2007
            ENDIF
            IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 2222
  467       CONTINUE
 3150    CONTINUE
      ENDIF
C   (End of ISTIFX(1).EQ.3 condition: end buckling of substringers
C    without skin participation.)
C
      IF (ISOSUB(1,ISEG,ILOOP).NE.0) GO TO 471
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C
C  The following section is for non-subisogrid configuration...
C  Next, do buckling of subrings, which are always blades (ISTIFX(2)=1)...
C
C BEG JAN 2005
C  simp-support of subrings
C END JAN 2005
      IF (ISTIFX(2).EQ.3) THEN
          IF (IDESGN.EQ.0) ILAMSR(ISEG,ILOOP) = 0
          P1ON2= ((PI/BSUBS)**2)/3.
          USS = D11R(1)*P1ON2*FLOAT(NSUB(ISEG,ILOOP)**2) + GJR(1)*P2R
C         IF (NNPRT.GE.2) WRITE(8,'(A,/,1P,3E12.4,I8,1P,2E12.4)')
C    1  ' USS,D11R(1),P1ON2,NSUB(ISEG,ILOOP),GJR(1),P2R=',
C    1    USS,D11R(1),P1ON2,NSUB(ISEG,ILOOP),GJR(1),P2R
C         IF (NNPRT.GE.2) WRITE(8,'(A,1P,2E12.4)')
C    1  ' PRELDR,EIGLDR=',PRELDR,EIGLDR
          USPLUS = USS + PRELDR
          IF (USPLUS.GE.0.0) THEN
             EIGSRG = 10.E+16
             IF (EIGLDR.LT.0.) EIGSRG = -USPLUS/EIGLDR
          ENDIF
          IF (USPLUS.LT.0.0.OR.ILAMSR(ISEG,ILOOP).EQ.1) THEN
             IF (IDESGN.EQ.0) ILAMSR(ISEG,ILOOP) = 1
             IF ((PRELDR+EIGLDR).LT.0.0) EIGSRG = -USS/(PRELDR+EIGLDR)
          ENDIF
          IF (NNPRT.GE.2)
     1           WRITE(8,'(/,A,1P,E12.4,/,A,1P,2E12.4,/,A,1P,2E12.4)')
     1  ' Buckling load factor for subring,      EIGSRG=',EIGSRG,
     1  ' Fixedload at root, tip of subring,     WBTOT1(2),WBTOT2(2)=',
     1                                           WBTOT1(2),WBTOT2(2),
     1  ' Eigenload at root, tip of subring,     WBEIG1(2),WBEIG2(2)=',
     1                                           WBEIG1(2),WBEIG2(2)
          IF (NNPRT.GE.2) WRITE(8,'(A,1P,E12.4)')
     1  ' Length over which buckling is assumed to occur,BSUBS=',BSUBS
          IF (EIGSRG.LT.0.0) EIGSRG = ABS(EIGSRG)
          ESRGSP = EIGSRG
          IF (NNPRT.GE.2) WRITE(8,'(A,/,1P,5E12.4)')
     1  ' Input to SHRRED: EIGSRG,RESLSR,THSUBR,GTSUBR(1),GTSUBR(2)=',
     1                     EIGSRG,RESLSR,THSUBR,GTSUBR(1),GTSUBR(2)
          CALL SHRRED(IREDUC,RESLSR,0.,0.,THSUBR,THSUBR,GTSUBR,
     1                EIGSRG,0,1,JJJ,0.,0.,1,0.,0.,17)
          IF (NNPRT.GE.2) WRITE(8,'(A,1P,E12.4,/,A,1P,E12.4)')
     1  ' BEFORE t.s.d. reduction: EIGSRG=',ESRGSP,
     1  ' AFTER  t.s.d. reduction: EIGSRG=',EIGSRG
C
          IF (ISANDS.EQ.0.AND.ISAND.EQ.1) GO TO 469
C
C  Record the margin corresponding to EIGSRG: buckling of subrings.
C  without participation of panel skin.
C
C BEG JAN 2005
C simp-support of subrings
C END JAN 2005
          CALL RECORD(0,22,EIGSRG,0.,
     1     0,NSUB(ISEG,ILOOP),ICONST,CONSTR,WORDB,
     1     IFILE,IDESGN,JJJ,1.0,EIGMAX,IPOINC,INUMTT,
     1     1.0,ICASE,0,0,VINHOF,MORCON(ILOADS,ICASE),
     1     ENDMID,0,0,1)
C BEG FEB 2007
          IF (ITYPE.EQ.1.AND.NNPRT.GE.2)
     1    WRITE(IFILE,*)' AFTER RECORD44: IDESGN,INUMTT,ICONST=',
     1                                    IDESGN,INUMTT,ICONST
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2007
          IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 2222
  469     CONTINUE
      ENDIF
C  (End of ISTIFX(2).EQ.3 condition: end buckling of subrings 
C   without skin participation.)
C
C  Next, do the alternative buckling solutions that involve
C  substiffeners...(buckling between major stiffeners, NxM substiffener
C                   "patch".)
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG JAN 2005
C  simp-support altsoln4  intermajorpatch
C END JAN 2005
         IF (IDESGN.EQ.0.AND.ILABEL.EQ.9260) THEN
            ISIGNA(4) = 0
            IALTER(4) = 0
            IDISCR(4) = 0
            BRATS = 0.
            BRATR = 0.
            IF (BSUBS.NE.0.0.OR.BSUBR.NE.0.0) THEN
               IF (BSUBS.GT.0.0) BRATS = B(1)/BSUBS + 0.1
               IF (BSUBR.GT.0.0) BRATR = B(2)/BSUBR + 0.1
               NBAYS = BRATS
               IF (NBAYS.EQ.0) NBAYS = 1
               NBAYR = BRATR
               IF (NBAYR.EQ.0) NBAYR = 1
               IF (NBAYS.GE.3) IDISCR(4) = 1
               IF (NBAYR.GE.3) IDISCR(4) = 1
            ENDIF
         ENDIF
C BEGIN ALTERNATE (trig. series expansions) BUCKLING SOLUTION...
C
C BEG FEB 2007
         IF (NNPRT.GE.2.AND.ICASE.EQ.1.AND.ILABEL.EQ.9260)
     1    WRITE(IFILE,'(A,2I3)')' IDESGN,IDISCR(4)=',IDESGN,IDISCR(4)
C END FEB 2007
         IF (ISOSUB(1,1,1).EQ.0.AND.ILABEL.EQ.9260
     1                         .AND.ICASE.EQ.1.AND.IDISCR(4).EQ.1) THEN
C
            EALTER(4) = 0.
            IF (IDESGN.EQ.0) THEN
               IDISCR(4) = 0
               NUMBST(4) = 0
               NUMBRG(4) = 0
            ENDIF
            SPSTR = 0.
            SPRNG = 0.
            XLONG = B(2) 
            YLONG = B(1) 
C
C  Discrete stringers...
                ECCS = 0.5*(TX0(1) + HSUBS)
                EAS  = ESUBS*TSUBS*HSUBS
                EIYS = ESUBS*HSUBS*TSUBS**3/12.
                GJSS = GSUBS*HSUBS*TSUBS**3/3.
                EIXS = ESUBS*TSUBS*HSUBS**3/12. 
                FNXSTR(1) = RESLTS(1)*HSUBS
                FNXSTR(2) = 0.0 
C               IF (EIGSST.GT.9.9*10**16) THEN
                IF (EIGSST.GT.9.9E+16) THEN
                   FNXSTR(1) = 0.
                   IF (NNPRT.GE.2) WRITE(IFILE,'(A)')
     1   ' Substringer eig.prestress set to zero because EIGSST is huge'
                ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
                FX0STR(1) = RPRES(1)*HSUBS
                FX0STR(2) = 0.0 
                ZNXSTR(1) = ECCS
                ZNXSTR(2) = 0.0
                IF (NSURFX(1).EQ.1) THEN
                   ECCS = -ECCS
                   ZNXSTR(1) = -ZNXSTR(1)
                ENDIF
                SPSTR = BSUBS 
                IDISCR(4) = 1
                IF (IDESGN.EQ.0) THEN
                   YMULT4 = 3.0
                   YLONG = YMULT4*SPSTR
                   NUMBST(4) = 4
                   IF (YLONG.GT.1.1*B(1)) THEN
                       YMULT4 = 2.0
                       YLONG = YMULT4*SPSTR
                       NUMBST(4) = 3
                       IF (YLONG.GT.1.1*B(1)) THEN
                          YMULT4 = 1.0
                          YLONG = YMULT4*SPSTR
                          NUMBST(4) = 2
                          IF (YLONG.GT.1.0001*B(1)) THEN
                             IDISCR(4) = 0
                             YMULT4 = 0
                             YLONG = B(1)
                             NUMBST(4) = 0
                             SPSTR = 0.
                          ENDIF
                       ENDIF
                   ENDIF
                   IF (NBAYS.GE.4) THEN
                      NUMBST(4) = 5
                      YMULT4 = 4.0
                      YLONG = YMULT4*SPSTR
                   ENDIF
                   IF (NBAYS.GE.5) THEN
                      NUMBST(4) = 6
                      YMULT4 = 5.0
                      YLONG = YMULT4*SPSTR
                   ENDIF
C BEG JAN 2005
C23456789012345678901234567890123456789012345678901234567890123456789012
                   IF (NBAYS.GE.6.AND.
     1           (ISTIF(1).EQ.1.OR.ISTIF(1).EQ.2.OR.ISTIF(1).EQ.3)) THEN
                      NUMBST(4) = 7
                      YMULT4 = 6.0
                      YLONG = YMULT4*SPSTR
                   ENDIF
C END JAN 2005
                   NBAYS = YMULT4 + 0.01
C BEG FEB 2007
                   IF (NBAYS.EQ.0) NBAYS = 1
C END FEB 2007
                ELSE
                   IF (YMULT4.LT.0.5) THEN
                      IDISCR(4) = 0
                      YLONG = B(1)
                      SPSTR = 0.
                   ELSE
                      YLONG = YMULT4*SPSTR
                   ENDIF
                ENDIF
                IF (NNPRT.GE.2) THEN
                   WRITE(IFILE,'(/,/,A,A,/,A,I3,A,1P,E12.4)')
     1   ' *** Alternative soln: buckling between major stiffeners,',
     1   ' N x M substiffener "patch" ***',
     1   ' Number of substringer bays=',NBAYS,'; Domain width=',YLONG
                   WRITE(IFILE,'(A,/,1P,7E11.3)')
     1   ' Discrete substringers: EAS,EIXS,EIYS,GJSS,ECCS,SPSTR,YLONG=',
     1                            EAS,EIXS,EIYS,GJSS,ECCS,SPSTR,YLONG
                   WRITE(IFILE,'(A,A,/,1P,6E12.4)')
     1   ' Preload in web: HSUBS,RESLTS(1),RPRES(1),FNXSTR(1)',
     1           ',FX0STR(1),ZNXSTR(1)=',
     1            HSUBS,RESLTS(1),RPRES(1),FNXSTR(1),FX0STR(1),
     1            ZNXSTR(1)
                ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
C
C  Discrete rings...
C
                ECCR = 0.5*(TX0(1) + HSUBR)
                EAR  = ESUBR*TSUBR*HSUBR
                EIYR = ESUBR*HSUBR*TSUBR**3/12.
                GJRR = GSUBR*HSUBR*TSUBR**3/3. 
                EIXR = ESUBR*TSUBR*HSUBR**3/12. 
                FNXRNG(1) = RESLTR(1)*HSUBR
                FNXRNG(2) = 0.0 
                IF (EIGSRG.GT.9.9*10.**16) THEN
                   FNXRNG(1) = 0.
                   IF (NNPRT.GE.2) WRITE(IFILE,'(A)')
     1      ' Subring eig.prestress set to zero because EIGSRG is huge'
                ENDIF
                FX0RNG(1) = RPRER(1)*HSUBR
                FX0RNG(2) = 0.0 
                ZNXRNG(1) = ECCR
                ZNXRNG(2) = 0.0
                IF (NSURFX(2).EQ.1) THEN
                   ECCR = -ECCR
                   ZNXRNG(1) = -ZNXRNG(1)
                ENDIF
                SPRNG = BSUBR 
                IF (IDESGN.EQ.0) THEN
                   XMULT4 = 3.0
                   XLONG = XMULT4*SPRNG
                   NUMBRG(4) = 4
                   IF (XLONG.GT.1.1*B(2)) THEN
                      XMULT4 = 2.0
                      XLONG = XMULT4*SPRNG
                      NUMBRG(4) = 3
                      IF (XLONG.GT.1.1*B(2)) THEN
                         XMULT4 = 1.0
                         XLONG = XMULT4*SPRNG
                         NUMBRG(4) = 2
                         IF (XLONG.GT.1.0001*B(2)) THEN
                            XMULT4 = 0.
                            XLONG = B(2)
                            NUMBRG(4) = 0
                            SPRNG = 0.
                         ELSE
                            IDISCR(4) = 1
                         ENDIF
                      ELSE
                         IDISCR(4) = 1
                      ENDIF
                   ELSE
                      IDISCR(4) = 1
                   ENDIF
                   IF (NBAYR.GE.4) THEN
                      NUMBRG(4) = 5
                      XMULT4 = 4.0
                      XLONG = XMULT4*SPRNG
                   ENDIF
                   IF (NBAYR.GE.5) THEN
                      NUMBRG(4) = 6
                      XMULT4 = 5.0
                      XLONG = XMULT4*SPRNG
                   ENDIF
                   NBAYR = XMULT4 + 0.01
C BEG FEB 2007
                   IF (NBAYR.EQ.0) NBAYR = 1
C END FEB 2007
                ELSE
                   IF (XMULT4.LT.0.5) THEN
                      XLONG = B(2)
                      SPRNG = 0.
                   ELSE
                      XLONG = XMULT4*SPRNG
                   ENDIF
                ENDIF
                IF (NNPRT.GE.2) THEN
                   WRITE(IFILE,'(/,A,I3,A,1P,E12.4)')
     1        ' Number of subring bays=',NBAYR,'; Domain length=',XLONG

                   WRITE(IFILE,'(A,/,1P,7E11.3)')
     1   ' Discrete subrings:     EAR,EIXR,EIYR,GJRR,ECCR,SPRNG,XLONG=',
     1                            EAR,EIXR,EIYR,GJRR,ECCR,SPRNG,XLONG
                   WRITE(IFILE,'(A,A,/,1P,6E12.4,/)')
     1   ' Preload in web: HSUBR,RESLTR(1),RPRER(1),FNXRNG(1)',
     1           ',FX0RNG(1),ZNXRNG(1)=',
     1            HSUBR,RESLTR(1),RPRER(1),FNXRNG(1),FX0RNG(1),
     1            ZNXRNG(1)
                ENDIF
C
            IF (IDISCR(4).EQ.1) THEN
               CALL MOVER(CX0(1,1,1),1,CSGEN,1,36)
               FNXGEN = SUBNX 
               FNYGEN = SUBNY 
               FNXYGN = SUBNXY 
               FNXGPR = SUBNXP 
               FNYGPR = SUBNYP
               IF (NNPRT.GE.2) WRITE(IFILE,'(A,/,1P,5E12.4)')
     1       ' FNXGEN,FNYGEN,FNXYGN,FNXGPR,FNYGPR=',
     1         FNXGEN,FNYGEN,FNXYGN,FNXGPR,FNYGPR
            ENDIF
            TY5 = TX0(1)
            IF (ISOSUB(1,1,1).EQ.1) TY5 = TX(1)
C
            IF (ISTIFX(1).EQ.0.OR.IQUICK.EQ.0)
     1      CALL ALTSOL(XLONG,YLONG,ABS(RADNEW),CSGEN,FNXGEN,FNYGEN,
     1      FNXYGN,FNXGPR,FNYGPR,0.,NNPRT,IFLAT,MPANDA(4),NPANDA(4),
     1      SPANDA(4),EPANDA(4),
     1      ISAND,IREDUC,EALTER(4),TX(1),TY(1),GTSSUB,IFILE,
     1      MPHIGH(4),EPHIGH(4),ILABEL,IQUICK,SPSTR,SPRNG,
     1      EAS,EIXS,EIYS,GJSS,ECCS,EAR,EIXR,EIYR,GJRR,ECCR,
     1      FNXSTR,FX0STR,ZNXSTR,FNXRNG,FX0RNG,ZNXRNG,IDISCR(4),
     1      IDESGN,4,NUMBST(4),NUMBRG(4),
     1      ASPECT(4,1),ASPECT(4,2),ISIGNA(4),IALTER(4),
     1      GTSSUB(1,5),TY5,ISTIFX(2),MPHIGH(4),ICASE,KLAYER(1,1))
C
            IF (IDESGN.EQ.0) THEN
               EGRT10 = 1.0
               EGMR10 = 1.0
               EIGGX4 = EALTER(4)
               IF (ABS(EALTER(4)).LT.10.E+15)
     1                     EGRT10 = ABS(EALTER(4)/EPANDA(4))
               IF (EGRT10.GT.10.0.OR.EGRT10.LT.0.1) THEN
C BEG DEC 2004
                  IF (EALTER(4).GT.0.0)
     1        WRITE(IFILE,'(A,/,A,/,A,/,A,1P,E12.4,/,A,1P,E12.4,/,A)')
     1       ' **** WARNING *** WARNING *** WARNING *** WARNING ***',
     1       ' Peculiar ratio of eigenvalues from (alt./old) theory',
     1      ' for "patch" buckling between major stringers and rings:',
     1       ' Buckling load factor from PANDA-type theory=',EPANDA(4),
     1       ' Buckling load factor from alternate  theory=',EALTER(4),
     1       ' **** WARNING *** WARNING *** WARNING *** WARNING ***'
C END DEC 2004
                  EGRT10 = 1.0
               ENDIF
C
               IF (IALTSV.EQ.1.AND.IALTER(4).EQ.0.AND.
     1               ILABEL.EQ.9260) EGMR10=EGRT10
               IF (NNPRT.GE.3) WRITE(IFILE,'(A,/,1P,4E12.4)')
     1       ' EGRT10,EGMR10,EALTER(4),EPANDA(4)=',
     1         EGRT10,EGMR10,EALTER(4),EPANDA(4)
               IF (ISIGNA(4).EQ.1) EIGLX4 = EALTER(4)
            ENDIF
C
C BEG JAN 2005
C  simp-support altsoln4  intermajorpatch
C END JAN 2005
C BEG FEB 2009
            IF (ISTIFX(1).EQ.0.OR.IQUICK.EQ.0)
C END FEB 2009
     1      CALL RECORD(0,24,EALTER(4),SPANDA(4),MPANDA(4),
     1         NPANDA(4),ICONST,CONSTR,WORDB,IFILE,IDESGN,JJJ,1.0,
     1         EIGMAX,IPOINC,INUMTT,FSLOC,ICASE,0,0,VINHOF,
C BEG MAR 2005
     1         MORCON(ILOADS,ICASE),ENDMID,1,4,1)
C END MAR 2005
C BEG FEB 2007
            IF (ITYPE.EQ.1.AND.NNPRT.GE.2)
     1      WRITE(IFILE,*)' AFTER RECORD45: IDESGN,INUMTT,ICONST=',
     1                                      IDESGN,INUMTT,ICONST
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2007
C
            IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 2222
C
C23456789012345678901234567890123456789012345678901234567890123456789012
         ENDIF
C
C END OF ALTERNATE (trig. series expansion)s BUCKLING SOLUTION FOR
C BUCKLING BETWEEN MAJOR STIFFENERS WITH 3 x 3 BAY PATCH OF SUBSTIFFENERS.
C
C
C  Next, do the alternative buckling solutions for skin buckling between
C  substiffeners with substiffeners along the edges.
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG JAN 2005
C  simp-support altsoln5  skin+edgsubroll
C END JAN 2005
         IF (IDESGN.EQ.0.AND.ILABEL.EQ.9260) THEN
            ISIGNA(5) = 0
            IALTER(5) = 0
            IDISCR(5) = 0
            BRATS = 0.
            BRATR = 0.
            IF (BSUBS.NE.0.0.OR.BSUBR.NE.0.0) THEN
               IF (BSUBS.GT.0.0) BRATS = 1.1
               IF (BSUBR.GT.0.0) BRATR = 1.1 
               NBAYS = BRATS
               IF (NBAYS.EQ.0) NBAYS = 1
               NBAYR = BRATR
               IF (NBAYR.EQ.0) NBAYR = 1
C BEG DEC 2004
               IF (NBAYS.GE.1) IDISCR(5) = 1
C END DEC 2004
            ENDIF
         ENDIF
C BEGIN ALTERNATE (trig. series expansions) BUCKLING SOLUTION...
C
C BEG DEC 2004
         IF (ISOSUB(1,1,1).EQ.0.AND.ILABEL.EQ.9260
     1                         .AND.ICASE.EQ.1.AND.IDISCR(5).EQ.1) THEN
C END DEC 2004
C
            EALTER(5) = 0.
            IF (IDESGN.EQ.0) THEN
               IDISCR(5) = 0
               NUMBST(5) = 0
               NUMBRG(5) = 0
            ENDIF
            SPSTR = 0.
            SPRNG = 0.
            XLONG = BSUBR 
            YLONG = BSUBS 
C
C  Discrete stringers...
                ECCS = 0.5*(TX0(1) + HSUBS)
                EAS  = ESUBS*TSUBS*HSUBS
                EIYS = ESUBS*HSUBS*TSUBS**3/12.
                GJSS = GSUBS*HSUBS*TSUBS**3/3.
                EIXS = ESUBS*TSUBS*HSUBS**3/12. 
                FNXSTR(1) = RESLTS(1)*HSUBS
                FNXSTR(2) = 0.0 
C               IF (EIGSST.GT.9.9*10**16) THEN
                IF (EIGSST.GT.9.9E+16) THEN
                   FNXSTR(1) = 0.
                   IF (NNPRT.GE.2) WRITE(IFILE,'(A)')
     1   ' Substringer eig.prestress set to zero because EIGSST is huge'
                ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
                FX0STR(1) = RPRES(1)*HSUBS
                FX0STR(2) = 0.0 
                ZNXSTR(1) = ECCS
                ZNXSTR(2) = 0.0
                IF (NSURFX(1).EQ.1) THEN
                   ECCS = -ECCS
                   ZNXSTR(1) = -ZNXSTR(1)
                ENDIF
                SPSTR = BSUBS 
                IDISCR(5) = 1
                YMULT5 = 1.0
                YLONG  = BSUBS
                NUMBST(5) = 2
C
                IF (NNPRT.GE.2) THEN
                   WRITE(IFILE,'(/,/,A,A,/,A,I3,A,1P,E12.4)')
     1   ' *** Alternative soln: buckling between substiffeners',
     1   ' with substiffeners along edges ***',
     1   ' Number of substringer bays=',NBAYS,'; Domain width=',YLONG
                   WRITE(IFILE,'(A,/,1P,7E11.3)')
     1   ' Discrete substringers: EAS,EIXS,EIYS,GJSS,ECCS,SPSTR,YLONG=',
     1                            EAS,EIXS,EIYS,GJSS,ECCS,SPSTR,YLONG
                   WRITE(IFILE,'(A,A,/,1P,6E12.4)')
     1   ' Preload in web: HSUBS,RESLTS(1),RPRES(1),FNXSTR(1)',
     1           ',FX0STR(1),ZNXSTR(1)=',
     1            HSUBS,RESLTS(1),RPRES(1),FNXSTR(1),FX0STR(1),
     1            ZNXSTR(1)
                ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
C
C  Discrete rings...
C
                ECCR = 0.5*(TX0(1) + HSUBR)
                EAR  = ESUBR*TSUBR*HSUBR
                EIYR = ESUBR*HSUBR*TSUBR**3/12.
                GJRR = GSUBR*HSUBR*TSUBR**3/3. 
                EIXR = ESUBR*TSUBR*HSUBR**3/12. 
                FNXRNG(1) = RESLTR(1)*HSUBR
                FNXRNG(2) = 0.0 
                IF (EIGSRG.GT.9.9*10.**16) THEN
                   FNXRNG(1) = 0.
                   IF (NNPRT.GE.2) WRITE(IFILE,'(A)')
     1      ' Subring eig.prestress set to zero because EIGSRG is huge'
                ENDIF
                FX0RNG(1) = RPRER(1)*HSUBR
                FX0RNG(2) = 0.0 
                ZNXRNG(1) = ECCR
                ZNXRNG(2) = 0.0
                IF (NSURFX(2).EQ.1) THEN
                   ECCR = -ECCR
                   ZNXRNG(1) = -ZNXRNG(1)
                ENDIF
C
                SPRNG = BSUBR 
                NUMBRG(5) = 2
                XMULT5 = 1.0
                XLONG = BSUBR
C
                IF (NNPRT.GE.2) THEN
                   WRITE(IFILE,'(/,A,I3,A,1P,E12.4)')
     1        ' Number of subring bays=',NBAYR,'; Domain length=',XLONG
                   WRITE(IFILE,'(A,/,1P,7E11.3)')
     1   ' Discrete subrings:     EAR,EIXR,EIYR,GJRR,ECCR,SPRNG,XLONG=',
     1                            EAR,EIXR,EIYR,GJRR,ECCR,SPRNG,XLONG
                   WRITE(IFILE,'(A,A,/,1P,6E12.4,/)')
     1   ' Preload in web: HSUBR,RESLTR(1),RPRER(1),FNXRNG(1)',
     1           ',FX0RNG(1),ZNXRNG(1)=',
     1            HSUBR,RESLTR(1),RPRER(1),FNXRNG(1),FX0RNG(1),
     1            ZNXRNG(1)
                ENDIF
C
            IF (IDISCR(5).EQ.1) THEN
               CALL MOVER(CX0(1,1,1),1,CSGEN,1,36)
               FNXGEN = SUBNX 
               FNYGEN = SUBNY 
               FNXYGN = SUBNXY 
               FNXGPR = SUBNXP 
               FNYGPR = SUBNYP
               IF (NNPRT.GE.2) WRITE(IFILE,'(A,/,1P,5E12.4)')
     1       ' FNXGEN,FNYGEN,FNXYGN,FNXGPR,FNYGPR=',
     1         FNXGEN,FNYGEN,FNXYGN,FNXGPR,FNYGPR
            ENDIF
            TY5 = TX0(1)
C
            CALL ALTSOL(XLONG,YLONG,ABS(RADNEW),CSGEN,FNXGEN,FNYGEN,
     1      FNXYGN,FNXGPR,FNYGPR,0.,NNPRT,IFLAT,MPANDA(5),NPANDA(5),
     1      SPANDA(5),EPANDA(5),
     1      ISAND,IREDUC,EALTER(5),TX0(1),TX0(1),GTX0(1,1),IFILE,
     1      MPHIGH(5),EPHIGH(5),ILABEL,IQUICK,SPSTR,SPRNG,
     1      EAS,EIXS,EIYS,GJSS,ECCS,EAR,EIXR,EIYR,GJRR,ECCR,
     1      FNXSTR,FX0STR,ZNXSTR,FNXRNG,FX0RNG,ZNXRNG,IDISCR(5),
     1      IDESGN,5,NUMBST(5),NUMBRG(5),
     1      ASPECT(5,1),ASPECT(5,2),ISIGNA(5),IALTER(5),
     1      GTX0(1,1),TY5,ISTIFX(2),MPHIGH(5),ICASE,KLAYER(1,1))
C
            IF (IDESGN.EQ.0) THEN
               EGRT11 = 1.0
               EGMR11 = 1.0
               EIGGX5 = EALTER(5)
               IF (ABS(EALTER(5)).LT.10.E+15)
     1                     EGRT11 = ABS(EALTER(5)/EPANDA(5))
               IF (EGRT11.GT.10.0.OR.EGRT11.LT.0.1) THEN
C BEG DEC 2004
                  IF (EALTER(5).GT.0.0)
     1        WRITE(IFILE,'(A,/,A,/,A,/,A,1P,E12.4,/,A,1P,E12.4,/,A)')
     1       ' **** WARNING *** WARNING *** WARNING *** WARNING ***',
     1       ' Peculiar ratio of eigenvalues from (alt./old) theory',
     1       ' for buckling between substiff. (substiff.along edges):',
     1       ' Buckling load factor from PANDA-type theory=',EPANDA(5),
     1       ' Buckling load factor from alternate  theory=',EALTER(5),
     1       ' **** WARNING *** WARNING *** WARNING *** WARNING ***'
C END DEC 2004
                  EGRT11 = 1.0
               ENDIF
C
               IF (IALTSV.EQ.1.AND.IALTER(6).EQ.0.AND.
     1               ILABEL.EQ.9260) EGMR11=EGRT11
               IF (NNPRT.GE.3) WRITE(IFILE,'(A,/,1P,4E12.4)')
     1       ' EGRT11,EGMR11,EALTER(5),EPANDA(5)=',
     1         EGRT11,EGMR11,EALTER(5),EPANDA(5)
               IF (ISIGNA(5).EQ.1) EIGLX5 = EALTER(5)
            ENDIF
C
C BEG JAN 2005
C  simp-support altsoln5  skin+edgsubroll
C END JAN 2005
            CALL RECORD(0,25,EALTER(5),SPANDA(5),MPANDA(5),
     1         NPANDA(5),ICONST,CONSTR,WORDB,IFILE,IDESGN,JJJ,1.0,
     1         EIGMAX,IPOINC,INUMTT,FSLOC,ICASE,0,0,VINHOF,
C BEG MAR 2005
     1         MORCON(ILOADS,ICASE),ENDMID,1,5,1)
C END MAR 2005
C BEG FEB 2007
            IF (ITYPE.EQ.1.AND.NNPRT.GE.2)
     1      WRITE(IFILE,*)' AFTER RECORD46: IDESGN,INUMTT,ICONST=',
     1                                      IDESGN,INUMTT,ICONST
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2007
C
            IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 2222
C
C23456789012345678901234567890123456789012345678901234567890123456789012
         ENDIF
C
C END OF ALTERNATE (trig. series expansion)s BUCKLING SOLUTION FOR
C BUCKLING BETWEEN SUBRINGS AND SUBSTRINGERS 
C END OCT 2004
  342 CONTINUE
C
C     We are finished with substiffener section if either
C     substringers or subrings are absent...
C
      IF (NPARTS.EQ.0.OR.NPARTR.EQ.0) GO TO 479 
C
C  (Begin section in which either substringers or subrings are smeared
C   and rolling of the non-smeared set is included. Note that GENSTB
C   is called with EIGROL as an argument.)
C
      BBBG = B0
      FACWID=1.0
      IARGFL = 0
      IF (IFLAT.NE.0) IARGFL = 1
      IF (IWIDE.EQ.1) THEN
         IARGFL = 1
         R = 10.E+10
         IF (IDESGN.EQ.0.AND.CXSS(4,4).LT.20.*CXSS(5,5)) THEN
           IF (BBIG.LT.2.0*BSUBR.OR.BBIG.GT.0.2*RSAVE) THEN
             WRITE(IFILE,*)' *********** NOTE  NOTE  NOTE  ***********'
             WRITE(IFILE,*)' WIDE-COLUMN MODEL MAY BE TOO CONSERVATIVE'
             WRITE(IFILE,*)' *********** NOTE  NOTE  NOTE  ***********'
           ENDIF
         ENDIF
      ENDIF
      PARX1 = BBBG/BSUBS
      PARX2 = ABS(1.-CX0(4,4,ISEG)/CXSS(4,4))
C BEG "FSLOC" BRANCH...
      IF (FSLOC.GE.0.95) THEN
C23456789012345678901234567890123456789012345678901234567890123456789012
         IF (NNPRT.GE.2) WRITE(IFILE,'(/,A,1P,E12.4,A,1P,E12.4)')
     1 ' Inter-subring buckling/rolling:smeared substringers,C11=',
     1   CXSS(1,1),', radius, R=',R
         IF (NNPRT.GE.2) CALL OUTCIJ(13,1,IFILE,CXSS,TXDUM,ETHDUM)
C
         G1323(1) = GTSSUB(1,ISEG)
         G1323(2) = GTX0(2,ISEG)
         CALL GENSTB(3,BSUBR,BBBG,PNX,SUBNY,SUBNXY,RSKNXP,SUBNYP,
     1     MSSUB(ISEG,ILOOP),NSSUB(ISEG,ILOOP),TSSSUB(ISEG,ILOOP),
     1     SLSSUB(ISEG,ILOOP),EISSUB(ISEG,ILOOP),
     1     IDESGN,EIGROL,CXSS(1,1),TXXX(1,ISEG),  
     1     TX0(ISEG),G1323,IREDUC,1,IFILE,ITUTOR,JJJ,ISTIFX,
     1     RESLTS,RPRES,1,PARX1,PARX2,FFLAT(17,MIDEND,1),IARGFL,
     1     1,IAGAIN(17,MIDEND),FNEFF(17,MIDEND),7256,EIGRAT(17),
     1     RBB0(17),ILOADS,ICASE)

C
         IF (IRESTY.EQ.1) GO TO 2222
C
C23456789012345678901234567890123456789012345678901234567890123456789012
         IF (IAGAIN(17,MIDEND).NE.0) THEN
            CALL GENSTB(3,BSUBR,BBBG,PNX,SUBNY,SUBNXY,RSKNXP,SUBNYP,
     1           M2ND(17,MIDEND),N2ND(17,MIDEND),TST2ND(17,MIDEND),
     1           SLP2ND(17,MIDEND),EIG2ND(17,MIDEND),
     1           IDESGN,EIGROL,CXSS(1,1),TXXX(1,ISEG),TX0(ISEG),G1323,
     1           IREDUC,1,IFILE,ITUTOR,JJJ,ISTIFX,RESLTS,RPRES,1,
     1           PARX1,PARX2,FFLAT(17,MIDEND,2),IARGFL,
     1           2,IAGAIN(17,MIDEND),FNEFF(17,MIDEND),7261,EIGRAT(17),
     1           RBB0(17),ILOADS,ICASE)
C
            IF (IRESTY.EQ.1) GO TO 2222
C
C23456789012345678901234567890123456789012345678901234567890123456789012
            CALL WGTAVE(PNX+RSKNXP,SUBNY+SUBNYP,SUBNXY,
     1         EIG2ND(17,MIDEND),EISSUB(ISEG,ILOOP),IAGAIN(17,MIDEND))
         ENDIF
      ELSE          
C23456789012345678901234567890123456789012345678901234567890123456789012
         IF (NNPRT.GE.2) WRITE(IFILE,'(/,A,1P,E12.4,A,1P,E12.4)')
     1' Inter-subring buckling/rolling:smeared substringers,C11=',
     1  CXSS(1,1),', radius, R=',R
C
         G1323(1) = GTSSUB(1,ISEG)
         G1323(2) = GTX0(2,ISEG)
         CALL GENSTB(3,BSUBR,BBBG,PNX,SUBNY,SUBNXY,RSKNXP,SUBNYP,
     1     MSSUB(ISEG,ILOOP),NSSUB(ISEG,ILOOP),TSSSUB(ISEG,ILOOP),  
     1     SLSSUB(ISEG,ILOOP),EISSUB(ISEG,ILOOP),
     1     IDESGN,EIGROL,CXSS(1,1),TXXX(1,ISEG),
     1     TX0(ISEG),G1323,IREDUC,1,IFILE,ITUTOR,JJJ,ISTIFX,
     1     RESLTS,RPRES,1,PARX1,PARX2,FFLAT(17,MIDEND,1),IARGFL,
     1     1,IAGAIN(17,MIDEND),FNEFF(17,MIDEND),7266,EIGRAT(17),
     1     RBB0(17),ILOADS,ICASE)
C
         IF (IRESTY.EQ.1) GO TO 2222
C
         IF (IAGAIN(17,MIDEND).NE.0) THEN
            CALL GENSTB(3,BSUBR,BBBG,PNX,SUBNY,SUBNXY,RSKNXP,SUBNYP,
     1           M2ND(17,MIDEND),N2ND(17,MIDEND),TST2ND(17,MIDEND),
     1           SLP2ND(17,MIDEND),EIG2ND(17,MIDEND),
     1           IDESGN,EIGROL,CXSS(1,1),TXXX(1,ISEG),TX0(ISEG),G1323,
     1           IREDUC,1,IFILE,ITUTOR,JJJ,ISTIFX,RESLTS,RPRES,1,
     1           PARX1,PARX2,FFLAT(17,MIDEND,2),IARGFL,
     1           2,IAGAIN(17,MIDEND),FNEFF(17,MIDEND),7271,EIGRAT(17),
     1           RBB0(17),ILOADS,ICASE)
C
C23456789012345678901234567890123456789012345678901234567890123456789012
            IF (IRESTY.EQ.1) GO TO 2222
C
            CALL WGTAVE(PNX+RSKNXP,SUBNY+SUBNYP,SUBNXY,
     1         EIG2ND(17,MIDEND),EISSUB(ISEG,ILOOP),IAGAIN(17,MIDEND))
         ENDIF
      ENDIF
C END  "FSLOC" BRANCH.
      CRSSP = SLSSUB(ISEG,ILOOP) 
      IF (TSSSUB(ISEG,ILOOP).LT.1.0.AND.ABS(SLSSUB(ISEG,ILOOP)).GT.0.0)
     1   CRSSP=1./SLSSUB(ISEG,ILOOP)
C
      IF (IDESGN.EQ.0) THEN
         EIGSSX = EISSUB(ISEG,ILOOP)
         CALL EIGMOD(BBBG,FNEFF(17,MIDEND),BSUBS,EISSUB(ISEG,ILOOP),
     1    ITUTOR,IFILE,
     1    CX0(4,4,ISEG),CXSS(4,4),FSAFE2,PNX,SUBNY,SUBNXY,1,0)
          IF (NNPRT.GE.2.AND.ILABEL.GE.9260)
     1       WRITE(IFILE,'(A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4)')
     1' Number of circumferential halfwaves in buckling pattern=',
     1  FNEFF(17,MIDEND),
C23456789012345678901234567890123456789012345678901234567890123456789012
     1' Bucklng load factor BEFORE knockdown for smeared substringers=',
     1  EIGSSX,
     1' Bucklng load factor AFTER  knockdown for smeared substringers=',
     1  EISSUB(ISEG,ILOOP)
      ENDIF
      NRSSF = NSSUB(ISEG,ILOOP)*FACWID
C
C  Record the margin corresponding to EISSUB: buckling between subrings
C  with the substringers smeared. Rolling of the subrings is included.
C  (Note that GENSTB was called with EIGROL as an argument.)
C
C BEG JAN 2005
C  rolling with smear substr
C END JAN 2005
      CALL RECORD(1,3,EISSUB(ISEG,ILOOP),CRSSP,MSSUB(ISEG,ILOOP),NRSSF,
     1  ICONST,
     1  CONSTR,WORDB,IFILE,IDESGN,JJJ,1.0,EIGMAX,IPOINC,INUMTT,
     1  FSPAN,ICASE,0,0,VINHOF,MORCON(ILOADS,ICASE),ENDMID,0,0,1)
C BEG FEB 2007
      IF (ITYPE.EQ.1.AND.NNPRT.GE.2)
     1 WRITE(IFILE,*)' AFTER RECORD47: IDESGN,INUMTT,ICONST=',
     1                                 IDESGN,INUMTT,ICONST
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2007
      IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 2222
C
C BEG OCT 2004
C  store stuff for alternative solution.
      IF (IDESGN.EQ.0.AND.ILABEL.EQ.9260) THEN
         MPANDA(6) = MSSUB(ISEG,ILOOP)
         NPANDA(6) = NRSSF
         SPANDA(6) = CRSSP
         EPANDA(6) = EISSUB(ISEG,ILOOP)
         MPHIGH(6) = MWAVEX(3)
         EPHIGH(6) = EIGMNC(3)
      ENDIF
C
C  Next, do the alternative buckling solutions that involve
C  substiffeners...(buckling between subrings with n-substringer bays.)
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG JAN 2005
C  simp-support altsoln6  inter-subring
C END JAN 2005
         IF (IDESGN.EQ.0.AND.ILABEL.EQ.9260) THEN
            ISIGNA(6) = 0
            IALTER(6) = 0
            IDISCR(6) = 0
            BRATS = 0.
            BRATR = 0.
            IF (BSUBS.NE.0.0.OR.BSUBR.NE.0.0) THEN
               IF (BSUBS.GT.0.0) BRATS = B(1)/BSUBS + 0.1
               IF (BSUBR.GT.0.0) BRATR = 1.1 
               NBAYS = BRATS
               IF (NBAYS.EQ.0) NBAYS = 1
               NBAYR = BRATR
               IF (NBAYR.EQ.0) NBAYR = 1
               IF (NBAYS.GE.3) IDISCR(6) = 1
            ENDIF
         ENDIF
C BEGIN ALTERNATE (trig. series expansions) BUCKLING SOLUTION...
C
         IF (ISOSUB(1,1,1).EQ.0.AND.ILABEL.EQ.9260
     1                         .AND.ICASE.EQ.1.AND.IDISCR(6).EQ.1) THEN
C
            EALTER(6) = 0.
            IF (IDESGN.EQ.0) THEN
               IDISCR(6) = 0
               NUMBST(6) = 0
               NUMBRG(6) = 0
            ENDIF
            SPSTR = 0.
            SPRNG = 0.
            XLONG = BSUBR 
            YLONG = B(1) 
C
C  Discrete stringers...
                ECCS = 0.5*(TX0(1) + HSUBS)
                EAS  = ESUBS*TSUBS*HSUBS
                EIYS = ESUBS*HSUBS*TSUBS**3/12.
                GJSS = GSUBS*HSUBS*TSUBS**3/3.
                EIXS = ESUBS*TSUBS*HSUBS**3/12. 
                FNXSTR(1) = RESLTS(1)*HSUBS
                FNXSTR(2) = 0.0 
C               IF (EIGSST.GT.9.9*10**16) THEN
                IF (EIGSST.GT.9.9E+16) THEN
                   FNXSTR(1) = 0.
                   IF (NNPRT.GE.2) WRITE(IFILE,'(A)')
     1   ' Substringer eig.prestress set to zero because EIGSST is huge'
                ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
                FX0STR(1) = RPRES(1)*HSUBS
                FX0STR(2) = 0.0 
                ZNXSTR(1) = ECCS
                ZNXSTR(2) = 0.0
                IF (NSURFX(1).EQ.1) THEN
                   ECCS = -ECCS
                   ZNXSTR(1) = -ZNXSTR(1)
                ENDIF
                SPSTR = BSUBS 
                IDISCR(6) = 1
                IF (IDESGN.EQ.0) THEN
                   YMULT6 = 3.0
                   YLONG = YMULT6*SPSTR
                   NUMBST(6) = 4
                   IF (YLONG.GT.1.1*B(1)) THEN
                       YMULT6 = 2.0
                       YLONG = YMULT6*SPSTR
                       NUMBST(6) = 3
                       IF (YLONG.GT.1.1*B(1)) THEN
                          YMULT6 = 1.0
                          YLONG = YMULT6*SPSTR
                          NUMBST(6) = 2
                          IF (YLONG.GT.1.0001*B(1)) THEN
                             IDISCR(6) = 0
                             YMULT6 = 0
                             YLONG = B(1)
                             NUMBST(6) = 0
                             SPSTR = 0.
                          ENDIF
                       ENDIF
                   ENDIF
                   IF (NBAYS.GE.4) THEN
                      NUMBST(6) = 5 
                      YMULT6 = 4.0
                      YLONG = YMULT6*SPSTR
                   ENDIF
                   IF (NBAYS.GE.5) THEN
                      NUMBST(6) = 6
                      YMULT6 = 5.0
                      YLONG = YMULT6*SPSTR
                   ENDIF
C BEG JAN 2005
C23456789012345678901234567890123456789012345678901234567890123456789012
                   IF (NBAYS.GE.6.AND.
     1           (ISTIF(1).EQ.1.OR.ISTIF(1).EQ.2.OR.ISTIF(1).EQ.3)) THEN
                      NUMBST(6) = 7
                      YMULT6 = 6.0
                      YLONG = YMULT6*SPSTR
                   ENDIF
C END JAN 2005
                   NBAYS = YMULT6 + 0.01
                ELSE
                   IF (YMULT6.LT.0.5) THEN
C BEG DEC 2004
                      IDISCR(6) = 0
C END DEC 2004
                      YLONG = B(1)
                      SPSTR = 0.
                   ELSE
                      YLONG = YMULT6*SPSTR
                   ENDIF
                ENDIF
                IF (NNPRT.GE.2) THEN
                   WRITE(IFILE,'(/,/,A,A,/,A,I3,A,1P,E12.4)')
     1   ' *** Alternative soln: buckling between major stringers',
     1   ' between subrings; N x 1 bay "patch" ***',
     1   ' Number of substringer bays=',NBAYS,'; Domain width=',YLONG
                   WRITE(IFILE,'(A,/,1P,7E11.3)')
     1   ' Discrete substringers: EAS,EIXS,EIYS,GJSS,ECCS,SPSTR,YLONG=',
     1                            EAS,EIXS,EIYS,GJSS,ECCS,SPSTR,YLONG
                   WRITE(IFILE,'(A,A,/,1P,6E12.4)')
     1   ' Preload in web: HSUBS,RESLTS(1),RPRES(1),FNXSTR(1)',
     1           ',FX0STR(1),ZNXSTR(1)=',
     1            HSUBS,RESLTS(1),RPRES(1),FNXSTR(1),FX0STR(1),
     1            ZNXSTR(1)
                ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
C
C  Discrete rings...
C
                ECCR = 0.5*(TX0(1) + HSUBR)
                EAR  = ESUBR*TSUBR*HSUBR
                EIYR = ESUBR*HSUBR*TSUBR**3/12.
                GJRR = GSUBR*HSUBR*TSUBR**3/3. 
                EIXR = ESUBR*TSUBR*HSUBR**3/12. 
                FNXRNG(1) = RESLTR(1)*HSUBR
                FNXRNG(2) = 0.0 
                IF (EIGSRG.GT.9.9*10.**16) THEN
                   FNXRNG(1) = 0.
                   IF (NNPRT.GE.2) WRITE(IFILE,'(A)')
     1      ' Subring eig.prestress set to zero because EIGSRG is huge'
                ENDIF
                FX0RNG(1) = RPRER(1)*HSUBR
                FX0RNG(2) = 0.0 
                ZNXRNG(1) = ECCR
                ZNXRNG(2) = 0.0
                IF (NSURFX(2).EQ.1) THEN
                   ECCR = -ECCR
                   ZNXRNG(1) = -ZNXRNG(1)
                ENDIF
C
                SPRNG = BSUBR 
                NUMBRG(6) = 2
                XMULT6 = 1.0
                XLONG = BSUBR
C
                IF (NNPRT.GE.2) THEN
                   WRITE(IFILE,'(/,A,I3,A,1P,E12.4)')
     1        ' Number of subring bays=',NBAYR,'; Domain length=',XLONG
                   WRITE(IFILE,'(A,/,1P,7E11.3)')
     1   ' Discrete subrings:     EAR,EIXR,EIYR,GJRR,ECCR,SPRNG,XLONG=',
     1                            EAR,EIXR,EIYR,GJRR,ECCR,SPRNG,XLONG
                   WRITE(IFILE,'(A,A,/,1P,6E12.4,/)')
     1   ' Preload in web: HSUBR,RESLTR(1),RPRER(1),FNXRNG(1)',
     1           ',FX0RNG(1),ZNXRNG(1)=',
     1            HSUBR,RESLTR(1),RPRER(1),FNXRNG(1),FX0RNG(1),
     1            ZNXRNG(1)
                ENDIF
C
            IF (IDISCR(6).EQ.1) THEN
               CALL MOVER(CX0(1,1,1),1,CSGEN,1,36)
               FNXGEN = SUBNX 
               FNYGEN = SUBNY 
               FNXYGN = SUBNXY 
               FNXGPR = SUBNXP 
               FNYGPR = SUBNYP
               IF (NNPRT.GE.2) WRITE(IFILE,'(A,/,1P,5E12.4)')
     1       ' FNXGEN,FNYGEN,FNXYGN,FNXGPR,FNYGPR=',
     1         FNXGEN,FNYGEN,FNXYGN,FNXGPR,FNYGPR
            ENDIF
            TY5 = TX0(1)
C
            IF (ISTIFX(1).EQ.0.OR.IQUICK.EQ.0)
     1      CALL ALTSOL(XLONG,YLONG,ABS(RADNEW),CSGEN,FNXGEN,FNYGEN,
     1      FNXYGN,FNXGPR,FNYGPR,0.,NNPRT,IFLAT,MPANDA(6),NPANDA(6),
     1      SPANDA(6),EPANDA(6),
     1      ISAND,IREDUC,EALTER(6),TX(1),TX0(1),G1323,IFILE,
     1      MPHIGH(6),EPHIGH(6),ILABEL,IQUICK,SPSTR,SPRNG,
     1      EAS,EIXS,EIYS,GJSS,ECCS,EAR,EIXR,EIYR,GJRR,ECCR,
     1      FNXSTR,FX0STR,ZNXSTR,FNXRNG,FX0RNG,ZNXRNG,IDISCR(6),
     1      IDESGN,6,NUMBST(6),NUMBRG(6),
     1      ASPECT(6,1),ASPECT(6,2),ISIGNA(6),IALTER(6),
     1      G1323,TY5,ISTIFX(2),MPHIGH(6),ICASE,KLAYER(1,1))
C
            IF (IDESGN.EQ.0) THEN
               EGRT12 = 1.0
               EGMR12 = 1.0
               EIGGX6 = EALTER(6)
               IF (ABS(EALTER(6)).LT.10.E+15)
     1                     EGRT12 = ABS(EALTER(6)/EPANDA(6))
               IF (EGRT12.GT.10.0.OR.EGRT12.LT.0.1) THEN
C BEG DEC 2004
                  IF (EALTER(6).GT.0.0)
     1        WRITE(IFILE,'(A,/,A,/,A,/,A,1P,E12.4,/,A,1P,E12.4,/,A)')
     1       ' **** WARNING *** WARNING *** WARNING *** WARNING ***',
     1       ' Peculiar ratio of eigenvalues from (alt./old) theory',
     1       ' for "patch" buckling between adjacent subrings:',
     1       ' Buckling load factor from PANDA-type theory=',EPANDA(6),
     1       ' Buckling load factor from alternate  theory=',EALTER(6),
     1       ' **** WARNING *** WARNING *** WARNING *** WARNING ***'
C END DEC 2004
                  EGRT12 = 1.0
               ENDIF
C
               IF (IALTSV.EQ.1.AND.IALTER(6).EQ.0.AND.
     1               ILABEL.EQ.9260) EGMR12=EGRT12
               IF (NNPRT.GE.3) WRITE(IFILE,'(A,/,1P,4E12.4)')
     1       ' EGRT12,EGMR12,EALTER(6),EPANDA(6)=',
     1         EGRT12,EGMR12,EALTER(6),EPANDA(6)
               IF (ISIGNA(6).EQ.1) EIGLX6 = EALTER(6)
            ENDIF
C
C BEG JAN 2005
C  simp-support altsoln6  inter-subring
C END JAN 2005
            CALL RECORD(0,26,EALTER(6),SPANDA(6),MPANDA(6),
     1         NPANDA(6),ICONST,CONSTR,WORDB,IFILE,IDESGN,JJJ,1.0,
     1         EIGMAX,IPOINC,INUMTT,FSLOC,ICASE,0,0,VINHOF,
C BEG MAR 2005
     1         MORCON(ILOADS,ICASE),ENDMID,1,6,1)
C END MAR 2005
C BEG FEB 2007
            IF (ITYPE.EQ.1.AND.NNPRT.GE.2)
     1      WRITE(IFILE,*)' AFTER RECORD48: IDESGN,INUMTT,ICONST=',
     1                                      IDESGN,INUMTT,ICONST
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2007
C
            IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 2222
C
C23456789012345678901234567890123456789012345678901234567890123456789012
         ENDIF
C
C END OF ALTERNATE (trig. series expansion)s BUCKLING SOLUTION FOR
C BUCKLING BETWEEN SUBRINGS AND MAJOR STRINGERS with n-bay substringer patch.
C END OCT 2004
C
C  (End of section: between subrings with smeared substringers,
C   subring rolling included.)
C
C  rolling substringers, smeared subrings...
C BEG JAN 2005
C  rolling with smear subrng
C END JAN 2005
      IF (NNPRT.GE.2) WRITE(IFILE,'(/,A,A,1P,E12.4)')
     1' Buckling w/rolling between substringers with smeared subrings',
     1', C11=',CXSR(1,1)
      IF (NNPRT.GE.2) CALL OUTCIJ(14,1,IFILE,CXSR,TXDUM,ETHDUM)
C
      IARGFL = 0
      IF (IFLAT.NE.0) IARGFL = 1
      G1323(1) = GTX0(1,ISEG)
      G1323(2) = GTSSUB(2,ISEG)
      CALL GENSTB(4,A0,BSUBS,SUBNX,PNY,SUBNXY,SUBNXP,RSKNYP,
     1 MRSUB(ISEG,ILOOP),NRSUB(ISEG,ILOOP),TSRSUB(ISEG,ILOOP),
     1 SLRSUB(ISEG,ILOOP),EIRSUB(ISEG,ILOOP),IDESGN,EIGROL,CXSR(1,1),  
     1 TX0(ISEG),TXXX(2,ISEG),G1323,IREDUC,1,IFILE,ITUTOR,JJJ,ISTIFX,
     1 RESLTS,RPRES,1,10.E10,0.,FFLAT(18,MIDEND,1),IARGFL,
     1 1,IAGAIN(18,MIDEND),FNEFF(18,MIDEND),7276,EIGRAT(18),
     1 RBB0(18),ILOADS,ICASE)
C23456789012345678901234567890123456789012345678901234567890123456789012

C
      IF (IRESTY.EQ.1) GO TO 2222
C
      IF (IAGAIN(18,MIDEND).NE.0) THEN
         CALL GENSTB(4,A0,BSUBS,SUBNX,PNY,SUBNXY,SUBNXP,RSKNYP,
     1           M2ND(18,MIDEND),N2ND(18,MIDEND),TST2ND(18,MIDEND),
     1           SLP2ND(18,MIDEND),EIG2ND(18,MIDEND),
     1           IDESGN,EIGROL,CXSR(1,1),TX0(ISEG),TXXX(2,ISEG),G1323,
     1           IREDUC,1,IFILE,ITUTOR,JJJ,ISTIFX,RESLTS,RPRES,1,
     1           10.E10,0.,FFLAT(18,MIDEND,2),IARGFL,
     1           2,IAGAIN(18,MIDEND),FNEFF(18,MIDEND),7281,EIGRAT(18),
     1           RBB0(18),ILOADS,ICASE)
C
         IF (IRESTY.EQ.1) GO TO 2222
C
          CALL WGTAVE(SUBNX+SUBNXP,PNY+RSKNYP,SUBNXY,
     1       EIG2ND(18,MIDEND),EIRSUB(ISEG,ILOOP),IAGAIN(18,MIDEND))
      ENDIF
C
C23456789012345678901234567890123456789012345678901234567890123456789012
      CRSRP = SLRSUB(ISEG,ILOOP) 
      IF (TSRSUB(ISEG,ILOOP).LT.1.0.AND.ABS(SLRSUB(ISEG,ILOOP)).GT.0.0) 
     1 CRSRP=1./SLRSUB(ISEG,ILOOP)
C
C
C  Record the margin corresponding to EIRSUB: buckling between substringers
C  with the subrings smeared. Rolling of the substringers is included.
C  (Note that GENSTB was called with EIGROL as an argument.)
C
C BEG JAN 2005
C  rolling with smear subrng
C END JAN 2005
      CALL RECORD(1,4,EIRSUB(ISEG,ILOOP),CRSRP,MRSUB(ISEG,ILOOP),
     1 NRSUB(ISEG,ILOOP),ICONST,CONSTR,WORDB,
     1 IFILE,IDESGN,JJJ,1.0,EIGMAX,IPOINC,INUMTT,FSLOC,
     1 ICASE,0,0,VINHOF,MORCON(ILOADS,ICASE),ENDMID,0,0,1)
C BEG FEB 2007
      IF (ITYPE.EQ.1.AND.NNPRT.GE.2)
     1 WRITE(IFILE,*)' AFTER RECORD49: IDESGN,INUMTT,ICONST=',
     1                                 IDESGN,INUMTT,ICONST
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2007
      IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 2222
C
C  (End of section: between substringers with smeared subrings,
C   rolling of substringers included.)
C    
  471 CONTINUE
C
C*********************************************************************
C BEGIN SECTION INVOLVING SUBSTIFFENER ROLLING WITHOUT SKIN PARTICIPATION.
C*********************************************************************
C
      EFOUND = 0.
      IF (ISANDS.EQ.0.AND.ISAND.EQ.1) GO TO 473 
      IF (NPARTS.EQ.0) GO TO 473
      IF (IDESGN.EQ.0) TXTDIF(1,MIDEND) = TOTS-TOTPS
      IF (TXTDIF(1,MIDEND).GT.0.0) GO TO 473 
      IF (NNPRT.GE.2) THEN
         WRITE(IFILE,'(/,A,1P,E12.4)')
     1 ' SUBSTRINGER ROLLING, LOAD SET A+B Nx: WEB=',
     1   RESLSS
         WRITE(IFILE,'(A,1P,E12.4)')
     1 ' SUBSTRINGER ROLLING, LOAD SET B   Nx: WEB=',
     1   RPRES(1)
      ENDIF
C  FIRST DO THE LO-AXIAL WAVENUMBER SUBSTRINGER ROLLING, NO SKIN PARTICIP.
C BEG JAN 2005
C  rolling only of substring
C END JAN 2005
      IF (NNPRT.GE.2) WRITE(IFILE,'(/,A)')
     1' Lo-axial wave substringer rolling without skin participation'
      IF (ISOSUB(1,ISEG,ILOOP).EQ.0)
     1 CALL MINVAL(ROLSTR,A0,ESBRLS(1,ISEG,ILOOP),MSBRLS(1,ISEG,ILOOP),
     1       IDESGN,DSBRLS(1,ISEG,ILOOP),1,GTSUBS,THSUBS,IREDUC,
     1       RESLSS,R,ISTIFX(1),1,11)
      IF (ISOSUB(1,ISEG,ILOOP).EQ.1)
     1 CALL MINVAL(ROLSTR,BSUBS/0.866,ESBRLS(1,ISEG,ILOOP),
     1       MSBRLS(1,ISEG,ILOOP),IDESGN,DSBRLS(1,ISEG,ILOOP),1,
     1       GTSUBS,THSUBS,IREDUC,RESLSS,R,ISTIFX(1),1,12)
      IF (NNPRT.GE.2)
     1 WRITE(8,'(A,1P,E12.4,/,A,1P,E12.4)')
     1' Prebuckling resultant, RESLSS=',RESLSS,
     1' Bucklng load factor,ESBRLS(1,ISEG,ILOOP)=',ESBRLS(1,ISEG,ILOOP)
      IF (ISOSUB(1,ISEG,ILOOP).EQ.0.AND.NNPRT.GE.2)
     1 WRITE(8,'(A,1P,E12.4,/,A,I5)')
     1' Number of halfwaves over the axial distance, A0=',A0,
     1'; MSBRLS(1,ISEG,ILOOP)=',MSBRLS(1,ISEG,ILOOP)
      IF (ISOSUB(1,ISEG,ILOOP).NE.0.AND.NNPRT.GE.2)
     1 WRITE(8,'(A,1P,E12.4,A,I2,/,A,I5)')
     1' Number of halfwaves over the side of isogrid triangle, SIDE=',
     1  SIDE,'; Member No.',MEMBER,
     1'; MSBRLS(1,ISEG,ILOOP)=',MSBRLS(1,ISEG,ILOOP)
C23456789012345678901234567890123456789012345678901234567890123456789012
      IF (IDESGN.EQ.0) THEN
C BEG JAN 2006
C         FSHIGH = 1.6
          FSHIGH = 1.4
C END JAN 2006
          FSLOW  = 1.2*MAX(FSBSTR,0.5)
          DOCHI  = 100.
          DOCLO  = 10.
          IF (ABS(DSBRLS(1,ISEG,ILOOP)).LE.DOCLO) 
     1                     FSSUBS(1,ISEG,ILOOP) = FSHIGH
          IF (ABS(DSBRLS(1,ISEG,ILOOP)).GE.DOCHI) 
     1                     FSSUBS(1,ISEG,ILOOP) = FSLOW
          IF (ABS(DSBRLS(1,ISEG,ILOOP)).GT.DOCLO.AND.
     1        ABS(DSBRLS(1,ISEG,ILOOP)).LT.DOCHI) THEN
             BDOC = (FSHIGH - FSLOW)/(DOCLO - DOCHI)
             ADOC = FSHIGH - BDOC*DOCLO
             FSSUBS(1,ISEG,ILOOP) = ADOC + BDOC*DSBRLS(1,ISEG,ILOOP)
          ENDIF
      ENDIF
      IF (NNPRT.GE.2)
     1     WRITE(IFILE,'(A,I5,1P2E12.4)')
     1   ' SUBSTRINGER ROLLING: MSBRLS(1),DSBRLS(1),FSSUBS(1)=',
     1    MSBRLS(1,ISEG,ILOOP),DSBRLS(1,ISEG,ILOOP),FSSUBS(1,ISEG,ILOOP)
      IF (IDESGN.EQ.0.AND.RESLSS.GE.0.0.AND.RPRES(1).GE.0.0) ISKIPQ(1)=1 
C23456789012345678901234567890123456789012345678901234567890123456789012
C
C  Record the low-m margin corresponding to ESPRLS(1,ISEG,ILOOP):
C  rolling of the substringer without skin participation.
C
C BEG JAN 2005
C  rolling only of substring
C END JAN 2005
C BEG FEB 2009
C23456789012345678901234567890123456789012345678901234567890123456789012
      M1FACT = A0/BSUB(2,1,1)
      MFACT = MMAXSB*M1FACT
      IF (ISEG.EQ.1.AND.ILOOP.EQ.1.AND.ISOSUB(1,1,1).EQ.0.AND.
     1    MSBRLS(1,ISEG,ILOOP).LE.MFACT.AND.MSBRLS(1,ISEG,ILOOP).NE.0
     1    .AND.IDESGN.EQ.0.AND.ILABEL.GE.9260.AND.IHILOC.NE.0) THEN
        ISRMOD(6) = 1
        IF (NNPRT.GE.0) WRITE(IFILE,
     1          '(/,A,/,A,/,A,/,A,/,A,/,A,I5,A,I5,A,/,A,I5,/,A)')
     1 ' Rolling of a simply-supported substringer by itself without',
     1 ' participation of the panel skin is not recorded as a margin',
     1 ' because this type of buckling has been superseded by the',
     1 ' results from the discretized skin-substringer module model,',
     1 ' for which buckling load factors have been computed in the',
     1 ' range from m = ',M1FACT,' to m = ',MFACT,' axial halfwaves.',
     1 ' The critical substringer rolling mode by itself has',
     1  MSBRLS(1,1,1),' axial half waves, which lies within this range.'
      ENDIF
      IF (ISKIPQ(1).EQ.0.AND.ISRMOD(6).EQ.0)
C END FEB 2009
     1 CALL RECORD(2,5,ESBRLS(1,ISEG,ILOOP),DUMMY,MSBRLS(1,ISEG,ILOOP),
     1  0,ICONST,CONSTR,WORDB,IFILE,IDESGN,JJJ,LENMOD,EIGMAX,IPOINC,
     1       INUMTT,FSSUBS(1,ISEG,ILOOP),ICASE,0,0,VINHOF,
     1       MORCON(ILOADS,ICASE),ENDMID,0,0,1)
C BEG FEB 2007
       IF (ITYPE.EQ.1.AND.NNPRT.GE.2)
     1 WRITE(IFILE,*)' AFTER RECORD50: IDESGN,INUMTT,ICONST=',
     1                                 IDESGN,INUMTT,ICONST
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2007
      IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 2222
C
      IF (FSSUBS(1,ISEG,ILOOP).GT.FSLOW) THEN
C  NOW DO THE HIGH-AXIAL WAVENUMBER SUBSTRINGER ROLLING, NO SKIN PARTICIP.
          IF (NNPRT.GE.2) WRITE(IFILE,'(/,A)')
     1 ' high-axial wave substringer rolling without skin participation'
          IF (ISOSUB(1,ISEG,ILOOP).EQ.0) THEN
             IF (IDESGN.EQ.0) MSTART = A0/ALS(1)
             CALL MINVAL(ROLSTR,A0,ESBRLS(2,ISEG,ILOOP),
     1         MSBRLS(2,ISEG,ILOOP),IDESGN,DSBRLS(2,ISEG,ILOOP),MSTART,
     1         GTSUBS,THSUBS,IREDUC,RESLSS,R,ISTIFX(1),1,13)
          ENDIF
          IF (ISOSUB(1,ISEG,ILOOP).EQ.1) THEN
             IF (IDESGN.EQ.0) MSTART = (BSUBS/0.866)/ALS(1)
             CALL MINVAL(ROLSTR,BSUBS/0.866,ESBRLS(2,ISEG,ILOOP),
     1         MSBRLS(2,ISEG,ILOOP),IDESGN,DSBRLS(2,ISEG,ILOOP),MSTART,
     1         GTSUBS,THSUBS,IREDUC,RESLSS,R,ISTIFX(1),1,14)
          ENDIF
C
          IF (NNPRT.GE.2)
     1     WRITE(8,'(A,1P,E12.4,/,A,1P,E12.4)')
     1   ' Prebuckling resultant, RESLSS=',RESLSS,
     1' Bucklng load factor,ESBRLS(2,ISEG,ILOOP)=',ESBRLS(2,ISEG,ILOOP)
          IF (ISOSUB(1,ISEG,ILOOP).EQ.0.AND.NNPRT.GE.2)
     1     WRITE(8,'(A,1P,E12.4,/,A,I5)')
     1   ' Number of halfwaves over the axial distance, A0=',A0,
     1   '; MSBRLS(2,ISEG,ILOOP)=',MSBRLS(2,ISEG,ILOOP)
          IF (ISOSUB(1,ISEG,ILOOP).NE.0.AND.NNPRT.GE.2)
     1     WRITE(8,'(A,1P,E12.4,A,I2,/,A,I5)')
     1  ' Number of halfwaves over the side of isogrid triangle, SIDE=',
     1     SIDE,'; Member No.',MEMBER,
     1   '; MSBRLS(2,ISEG,ILOOP)=',MSBRLS(2,ISEG,ILOOP)
C23456789012345678901234567890123456789012345678901234567890123456789012
C
          IF (MSBRLS(2,ISEG,ILOOP).GT.(MSBRLS(1,ISEG,ILOOP)+1)) THEN
             IF (IDESGN.EQ.0) THEN
                IF (ABS(DSBRLS(2,ISEG,ILOOP)).LE.DOCLO)
     1                     FSSUBS(2,ISEG,ILOOP) = FSHIGH
                IF (ABS(DSBRLS(2,ISEG,ILOOP)).GE.DOCHI)
     1                     FSSUBS(2,ISEG,ILOOP) = FSLOW
                IF (ABS(DSBRLS(2,ISEG,ILOOP)).GT.DOCLO.AND.
     1              ABS(DSBRLS(2,ISEG,ILOOP)).LT.DOCHI) THEN
                      BDOC = (FSHIGH - FSLOW)/(DOCLO - DOCHI)
                      ADOC = FSHIGH - BDOC*DOCLO
                      FSSUBS(2,ISEG,ILOOP) = 
     1                             ADOC + BDOC*DSBRLS(2,ISEG,ILOOP)
                ENDIF
             ENDIF
             IF (NNPRT.GE.2) WRITE(IFILE,'(A,2I5,1P2E12.4)')
     1 ' SUBSTRINGER ROLLING: MSBRLS(2),MSBRLS(1),DSBRLS(2),FSSUBS(2)=',
     1   MSBRLS(2,ISEG,ILOOP),MSBRLS(1,ISEG,ILOOP),DSBRLS(2,ISEG,ILOOP),
     1   FSSUBS(2,ISEG,ILOOP)
             IF (IDESGN.EQ.0.AND.RESLSS.GE.0.0.AND.RPRES(1).GE.0.0) 
     1        ISKIPQ(2) = 1
C23456789012345678901234567890123456789012345678901234567890123456789012
C
C  Record the high-m margin corresponding to ESPRLS(2,ISEG,ILOOP):
C  rolling of the substringer without skin participation.
C
             IF (ISKIPQ(2).EQ.0)
     1       CALL RECORD(3,5,ESBRLS(2,ISEG,ILOOP),DUMMY,
     1         MSBRLS(2,ISEG,ILOOP),0,ICONST,CONSTR,
     1         WORDB,IFILE,IDESGN,JJJ,LENMOD,EIGMAX,IPOINC,INUMTT,
     1         FSSUBS(2,ISEG,ILOOP),ICASE,0,0,VINHOF,
     1         MORCON(ILOADS,ICASE),ENDMID,0,0,1)
C BEG FEB 2007
             IF (ITYPE.EQ.1.AND.NNPRT.GE.2)
     1        WRITE(IFILE,*)' AFTER RECORD51: IDESGN,INUMTT,ICONST=',
     1                                        IDESGN,INUMTT,ICONST
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2007
             IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 2222
          ENDIF
C     (End of MSBRLS(2,ISEG,ILOOP).GT.(MSBRLS(1,ISEG,ILOOP)+1) condition.)
      ENDIF
C   (End of FSSUBS(1,ISEG,ILOOP).GT.FSLOW condition.)
C
  473 CONTINUE    
C
      IF (ISOSUB(1,ISEG,ILOOP).NE.0) go to 479
C
C  The rest of the substiffener buckling is for non-subisogrid configurations
C  only...
C
      EFOUND = 0.
      IF (ISANDS.EQ.0.AND.ISAND.EQ.1) GO TO 474
      IF (NPARTR.EQ.0) GO TO 474 
      IF (IDESGN.EQ.0) TXTDIF(2,MIDEND) = TOTR-TOTPR
      IF (TXTDIF(2,MIDEND).GT.0.0) GO TO 474 
      IF (NNPRT.GE.2) THEN
         WRITE(IFILE,'(/,A,1P,E12.4)')
     1 '   SUBRING   ROLLING, LOAD SET A+B Nx: WEB=',
     1   RESLSR
         WRITE(IFILE,'(A,1P,E12.4)')
     1 '   SUBRING   ROLLING, LOAD SET B   Nx: WEB=',
     1   RPRER(1)
      ENDIF
C
C  FIRST DO THE LO-CIRC. WAVENUMBER SUBRING ROLLING, NO SKIN PARTICIP.
C BEG JAN 2005
C  rolling only of subrings
C END JAN 2005
      IF (NNPRT.GE.2) WRITE(IFILE,'(/,A)')
     1' Lo-circ. wave subring rolling without skin participation'
      CALL MINVAL(ROLRNG,B0,ESBRLR(1,ISEG,ILOOP),MSBRLR(1,ISEG,ILOOP),
     1   IDESGN,DSBRLR(1,ISEG,ILOOP),1,GTSUBR,THSUBR,IREDUC,RESLSR,
     1            R,ISTIFX(2),1,15)
      IF (NNPRT.GE.2) 
     1 WRITE(8,'(A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4,A,I5)')
     1' Prebuckling resultant, RESLSR=',RESLSR,
     1' Bucklng load factor,ESBRLR(1,ISEG,ILOOP)=',ESBRLR(1,ISEG,ILOOP),
     1' Number of halfwaves over the circ. distance, B0=',B0,
     1'; MSBRLR(1,ISEG,ILOOP)=',MSBRLR(1,ISEG,ILOOP)
C23456789012345678901234567890123456789012345678901234567890123456789012
C
      IF (IDESGN.EQ.0) THEN
C BEG JAN 2006
C        FSHIGH = 1.6
         FSHIGH = 1.4
C END JAN 2006
         FSLOW  = 1.2
         DOCHI  = 100.
         DOCLO  = 10.
         IF (ABS(DSBRLR(1,ISEG,ILOOP)).LE.DOCLO)
     1                     FSSUBR(1,ISEG,ILOOP) = FSHIGH
         IF (ABS(DSBRLR(1,ISEG,ILOOP)).GE.DOCHI)
     1                     FSSUBR(1,ISEG,ILOOP) = FSLOW
         IF (ABS(DSBRLR(1,ISEG,ILOOP)).GT.DOCLO.AND.
     1       ABS(DSBRLR(1,ISEG,ILOOP)).LT.DOCHI) THEN
                BDOC = (FSHIGH - FSLOW)/(DOCLO - DOCHI)
                ADOC = FSHIGH - BDOC*DOCLO
                FSSUBR(1,ISEG,ILOOP) = ADOC + BDOC*DSBRLR(1,ISEG,ILOOP)
         ENDIF
      ENDIF
C
      IF (NNPRT.GE.2)
     1   WRITE(IFILE,'(A,I5,1P2E12.4)')
     1 '   SUBRING   ROLLING: MSBRLR(1),DSBRLR(1),FSSUBR(1)=',
     1   MSBRLR(1,ISEG,ILOOP),DSBRLR(1,ISEG,ILOOP),FSSUBR(1,ISEG,ILOOP)
      IF (IDESGN.EQ.0.AND.RESLSR.GE.0.0.AND.RPRER(1).GE.0.0) ISKIPQ(3)=1
C
C  Record the low-m margin corresponding to ESPRLR(1,ISEG,ILOOP):
C  rolling of the subring without skin participation.
C
C BEG JAN 2005
C  rolling only of subrings
C END JAN 2005
      IF (ISKIPQ(3).EQ.0)
     1CALL RECORD(2,6,ESBRLR(1,ISEG,ILOOP),DUMMY,0,MSBRLR(1,ISEG,ILOOP),
     1 ICONST,CONSTR,WORDB,IFILE,IDESGN,JJJ,LENMOD,EIGMAX,IPOINC,INUMTT,
     1 FSSUBR(1,ISEG,ILOOP),ICASE,0,0,VINHOF,MORCON(ILOADS,ICASE),
     1 ENDMID,0,0,1)
C BEG FEB 2007
      IF (ITYPE.EQ.1.AND.NNPRT.GE.2)
     1 WRITE(IFILE,*)' AFTER RECORD52: IDESGN,INUMTT,ICONST=',
     1                                 IDESGN,INUMTT,ICONST
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2007
      IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 2222
C23456789012345678901234567890123456789012345678901234567890123456789012
C
C BEG "FSSUBR(1,ISEG,ILOOP).GT.FSLOW" BRANCH...
      IF (FSSUBR(1,ISEG,ILOOP).GT.FSLOW) THEN
C  NOW DO THE HIGH-CIRC. WAVENUMBER SUBRING ROLLING, NO SKIN PARTICIP.
         IF (IDESGN.EQ.0) NSTART = B0/ALR(1)
         IF (NNPRT.GE.2) WRITE(IFILE,'(/,A)')
     1 ' High-circ. wave subring rolling without skin participation'
        CALL MINVAL(ROLRNG,B0,ESBRLR(2,ISEG,ILOOP),MSBRLR(2,ISEG,ILOOP),
     1   IDESGN,DSBRLR(2,ISEG,ILOOP),NSTART,GTSUBR,THSUBR,IREDUC,
     1   RESLSR,R,ISTIFX(2),1,16)
         IF (NNPRT.GE.2)
     1    WRITE(8,'(A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4,A,I5)')
     1  ' Prebuckling resultant, RESLSR=',RESLSR,
     1' Bucklng load factor,ESBRLR(2,ISEG,ILOOP)=',ESBRLR(2,ISEG,ILOOP),
     1  ' Number of halfwaves over the circ. distance, B0=',B0,
     1  '; MSBRLR(2,ISEG,ILOOP)=',MSBRLR(2,ISEG,ILOOP)
C23456789012345678901234567890123456789012345678901234567890123456789012
C
C BEG "NROLRG.GT.(KWAVES(2,3)+1)" BRANCH...
         IF (MSBRLR(2,ISEG,ILOOP).GT.(MSBRLR(1,ISEG,ILOOP)+1)) THEN
            IF (IDESGN.EQ.0) THEN
                IF (ABS(DSBRLR(2,ISEG,ILOOP)).LE.DOCLO)
     1                     FSSUBR(2,ISEG,ILOOP) = FSHIGH
                IF (ABS(DSBRLR(2,ISEG,ILOOP)).GE.DOCHI)
     1                     FSSUBR(2,ISEG,ILOOP) = FSLOW
                IF (ABS(DSBRLR(2,ISEG,ILOOP)).GT.DOCLO.AND.
     1              ABS(DSBRLR(2,ISEG,ILOOP)).LT.DOCHI) THEN
                        BDOC = (FSHIGH - FSLOW)/(DOCLO - DOCHI)
                        ADOC = FSHIGH - BDOC*DOCLO
                        FSSUBR(2,ISEG,ILOOP) =
     1                             ADOC + BDOC*DSBRLR(2,ISEG,ILOOP)
               ENDIF
            ENDIF
            IF (NNPRT.GE.2)
     1      WRITE(IFILE,'(A,2I5,1P2E12.4)')
     1    ' SUBRING ROLLING: MSBRLR(2),MSBRLR(1),DSBRLR(2),FSSUBR(2)=',
     1   MSBRLR(2,ISEG,ILOOP),MSBRLR(1,ISEG,ILOOP),DSBRLR(2,ISEG,ILOOP),
     1   FSSUBR(2,ISEG,ILOOP)
            IF (IDESGN.EQ.0.AND.RESLSR.GE.0.0.AND.RPRER(1).GE.0.0) 
     1       ISKIPQ(4) = 1
C
C  Record the high-m margin corresponding to ESPRLR(2,ISEG,ILOOP):
C  rolling of the subring without skin participation.
C
            IF (ISKIPQ(4).EQ.0)
     1       CALL RECORD(3,6,ESBRLR(2,ISEG,ILOOP),DUMMY,0,
     1       MSBRLR(2,ISEG,ILOOP),ICONST,CONSTR,WORDB,IFILE,IDESGN,JJJ,
     1       LENMOD,EIGMAX,IPOINC,INUMTT,FSSUBR(2,ISEG,ILOOP),
     1       ICASE,0,0,VINHOF,MORCON(ILOADS,ICASE),ENDMID,0,0,1)
C BEG FEB 2007
             IF (ITYPE.EQ.1.AND.NNPRT.GE.2)
     1       WRITE(IFILE,*)' AFTER RECORD53: IDESGN,INUMTT,ICONST=',
     1                                       IDESGN,INUMTT,ICONST
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2007
            IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 2222
         ENDIF
C END "MSBRLR(2,ISEG,ILOOP).GT.(MSBRLR(1,ISEG,ILOOP)+1)" BRANCH.
      ENDIF
C END "FSSUBR(1,ISEG,ILOOP).GT.FSLOW" BRANCH.
C23456789012345678901234567890123456789012345678901234567890123456789012
C
  474 CONTINUE    
      EFOUND = 0.
      ESBAXI(ISEG,ILOOP) = 10.E16
      NAXI = 0    
      IF (ISANDS.EQ.0.AND.ISAND.EQ.1) GO TO 475 
      IF (NPARTR.EQ.0.OR.IFLAT.NE.0.OR.FSGEN.EQ.0.0) GO TO 475  
      IF (NNPRT.GE.2) WRITE(IFILE,'(/,A)')
     1' Axisymmetric subring rolling without skin participation'
      CALL MINVAL(ROLRNG,B0,ESBAXI(ISEG,ILOOP),NAXI,IDESGN, 
     1              DOCDUM,0,GTSUBR,THSUBR,IREDUC,RESLSR,
     1              R,ISTIFX(2),1,17)
      IF (NNPRT.GE.2) WRITE(8,'(A,1P,E12.4,/,A,1P,E12.4)')
     1' Prebuckling resultant, RESLSR=',RESLSR,
     1' Buckling load factor,  ESBAXI(ISEG,ILOOP)=',ESBAXI(ISEG,ILOOP)
      IF (IDESGN.EQ.0.AND.RESLSR.GE.0.0.AND.RPRER(1).GE.0.0) ISKIPQ(5)=1
C
C  Record the margin corresponding to ESBAXI(ISEG,ILOOP):
C  axisymmetric rolling of the subring without skin participation.
C
      IF (ISKIPQ(5).EQ.0)
     1 CALL RECORD(2,7,ESBAXI(ISEG,ILOOP),DUMMY,0,NAXI,ICONST,CONSTR,
     1 WORDB,IFILE,IDESGN,JJJ,LENMOD,EIGMAX,IPOINC,INUMTT,1.6,
     1       ICASE,0,0,VINHOF,MORCON(ILOADS,ICASE),ENDMID,0,0,1)
C BEG FEB 2007
       IF (ITYPE.EQ.1.AND.NNPRT.GE.2)
     1 WRITE(IFILE,*)' AFTER RECORD54: IDESGN,INUMTT,ICONST=',
     1                                 IDESGN,INUMTT,ICONST
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2007
      IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 2222
C
      IF (ISEG.EQ.1.AND.ILOOP.EQ.1) THEN
         IF (NNPRT.GE.2) WRITE(8,'(A,1P,E12.4)')
     1   ' Wide column buckling load factor for subring,EIGCOL=',EIGCOL
C
C  Record the margin corresponding to EIGCOL:
C  wide column buckling of the subring without skin participation.
C
         CALL RECORD(0,23,EIGCOL,DUMMY,0,NAXI,ICONST,CONSTR,
     1    WORDB,IFILE,IDESGN,JJJ,LENMOD,EIGMAX,IPOINC,INUMTT,1.0,
     1    ICASE,0,0,VINHOF,MORCON(ILOADS,ICASE),ENDMID,0,0,1)
C BEG FEB 2007
         IF (ITYPE.EQ.1.AND.NNPRT.GE.2)
     1   WRITE(IFILE,*)' AFTER RECORD55: IDESGN,INUMTT,ICONST=',
     1                                   IDESGN,INUMTT,ICONST
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2007
         IF (MORCON(ILOADS,ICASE).EQ.1) GO TO 2222
C
      ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
  475 CONTINUE    
C
C*********************************************************************
C END SECTION INVOLVING STIFFENER ROLLING WITHOUT SKIN PARTICIPATION.
C*********************************************************************
C
  476 CONTINUE
C (End of loop over number of segments. presently only one pass, ISTART = 1))
  478 CONTINUE
C (End of loop, ILOOP; presently only one pass: ILOOP = 1)
C BEG MAR 2007
      WIDKNK = WIDKNS
      R = RSAVE
C END MAR 2007
  479 CONTINUE
C
C BEG MAR 2007 (move up inside :"479"
C     R = RSAVE
C END MAR 2007
C     
C*********************************************************************
C END SECTION INVOLVING SUBSTIFFENER ROLLING WITH SKIN PARTICIPATION.
C*********************************************************************
C END JUN 2004
C BEG FEB 1996
 2222 CONTINUE
C END FEB 1996
C BEG NOV 1997
      IPREL = 0
C END NOV 1997
C BEG MAR 2005
C23456789012345678901234567890123456789012345678901234567890123456789012
      IF (IDESGN.EQ.0.AND.NNPRT.GE.2) WRITE(IFILE,'(A)')
     1' ******* LEAVING SUBROUTINE BUCPAN: UNPERTURBED DESIGN ********' 
      IF (IDESGN.EQ.1.AND.NNPRT.GE.2) WRITE(IFILE,'(A)')
     1' ******* LEAVING SUBROUTINE BUCPAN: PERTURBED DESIGN ********'
C END MAR 2005
      RETURN
      END
C
C
C
C BEG AUG 1993
C=DECK      MFILL1
      SUBROUTINE MFILL1(ID,IR,M,N,T,C,ML,NL,TL,CL,MS,NS,TS,CS)
C     PURPOSE IS TO FILL MODE SHAPE ARGUMENTS M,N,T,C FOR GENSTB
C     WITH COMMON BLOCK VALUES, MS,NS,TS,CS OR ML,NL,TL,CL
      M = MS
      N = NS
      T = TS
      C = CS
      IF (ID.EQ.1.AND.IR.NE.0) THEN
         M = ML
         N = NL
         T = TL
         C = CL
         IF (TL.LT.1.0.AND.ABS(CL).GT.0.) C = 1./CL
      ENDIF
      RETURN
      END
C
C
C
C=DECK      MFILL2
      SUBROUTINE MFILL2(ID,IR,M,N,T,C,MS,NS,TS,CS)
C     PURPOSE IS TO FILL COMMON BLOCK MODE, MS,NS,TS,CS, WITH
C     ARGUMENTS M,N,T,C FROM GENSTB.
      IF (ID.EQ.0) THEN
         MS = M
         NS = N
         TS = T
         CS = C
      ENDIF
      RETURN
      END
C END AUG 1993
C
C
C
C=DECK      GENSTB
      SUBROUTINE GENSTB(INDX,A,B,NX,NY,NXY,NXP,NYP,MWAVE,NWAVE,TESTSH,  
     1 CSLOPE,EIGVAL,IDESGN,EIG,C,TX,TY,G1323,IREDUC,IROLL,IFILE,
     1 ITUTOR,JJJ,ISTIF,RESLT,RPRE,ISR,PARX1,PARX2,FFLAT,IFFLAT,
C BEG AUG 2003 
     1 ITHRU,IAGAIN,FNEFF,ILABEL,EIGRAT,RBB0,ILOADS,ICASE)
C END AUG 2003
C     
C     PURPOSE IS TO FIND SHELL LOCAL AND GENERAL INSTABILITY.     
C     
C     
C BEG JULY 2006
      COMMON/INOT4X/INOT4(4)
      COMMON/NMFIXD/NUSER(5),MUSER(5),NOSRCH(5)
C END JULY 2006
C BEG JUN 2006
      COMMON/IXIMPX/IXIMPF(5)
      COMMON/AXWAVX/AXLWAV(5)
      COMMON/AXLRDX/AXLRED
      COMMON/EIG1XX/EIG1EIG(10,20),EIG1SLP(10,20)
C END JUN 2006
C BEG MAR 2005
      COMMON/NUMPAR/NPAR,NVAR,NALLOW,NNNCON,NDEC,NLINK,NESCAP,ITYPE
      COMMON/DWAVQQ/DNWAVX
C END MAR 2005
C BEG DEC 2004
      COMMON/EIGSLY/EIGSLP(100,2),SLPEIG(10,2)
      COMMON/EIGSLZ/SLPRAT(30,5,2),EHILOW(30,5,2)
      COMMON/EIGSLW/KOUNTM
C END DEC 2004
C BEG JUN 2004
      COMMON/ISBSTF/KLAYER(4,2),NSURF(2,4,2),NB2(2,4,2),
     1              ISOSUB(2,4,2),ISOTYP(2,4,2),MATSUB(2,4,2)
C END JUN 2004
C BEG OCT 2001
      COMMON/ITESTX/ITEST,IAMPOV(4)
      COMMON/FNSTR/FNSTAR
      COMMON/RADIMP/RADMOD,FNWAVX,EIGNOS,FNWNOS,RORIG,W0LOC,
     1              W0GLOB,WG1,WG2
      COMMON/RADIM2/WYYAMP,W0PAN,WYYGEN,WYYPAN,WYYLOC
C BEG DEC 2001
      COMMON/RADM13/WG1S,WYYGNS,WYYPNS,WYYLCS,RADNEW
      COMMON/RADM15/SHRFCT
C END DEC 2001
      REAL MFACT,NFACT,NSTAR
C END OCT 2001
C BEG FEB 1996
      COMMON/IRESTX/IRESTY
C END FEB 1996
C BEG OCT 1996
      COMMON/EIGPRL/EIGAMG,EIGAMS,CSLAMG,CSLAMS,FACAMG,FACAMS
      COMMON/OUTP/NNPRT
C END OCT 1996
C BEG MAR 1997
      COMMON/EIGAMZ/IEIGAM
C END MAR 1997
C BEG MAR 1998
C BEG MAY 2007
      DIMENSION MNCHEK(50,20),EIGCHK(50,20),CSLCHK(50,20)
      DIMENSION MNCHKS(50,20),EICHKS(50,20),CSCHKS(50,20)
C END MAY 2007
C END MAR 1998
C BEG APR 1998
C BEG JUN 1998
      COMMON/MWAVEY/MWAVEX(7),NWAVEX(7)
      COMMON/MWAVEZ/SLOPEX(7),EIGMNC(7)
C END JUN 1998
C BEG JAN 2006
      DIMENSION TESTX(7)
C END JAN 2006
C BEG JULY 1998
      DIMENSION EIGMNJ(10),EIGPNA(50),CSLPNA(50)
C END JULY 1998
C END APR 1998
C BEG AUG 2003 (comment out May 1998 common block. move up to bucpan.)
C     COMMON/RBB0X/RBB0(20)
C END AUG 2003 
      COMMON/ISOGR/ISOGRD,ISOANG
      COMMON/WALLD/FKKF(5),ITRANS(4)  
      COMMON/IIIROL/IIROLL,IPRELM,IQUICK
      COMMON/NDEBUG/NPRNT
      COMMON/WALLB/B11,B12,B22,B33
      COMMON /CWALL/C11,C12,C22,C33,C44,C45,C55,C66   
      COMMON/WALLC/C13,C16,C23,C26,C34,C35,C46,C56,IBAL     
      COMMON/PARAM5/ MBAR,NBAR,NXNORM,NYNORM    
      COMMON/PRESHR/NXY0,E0XY,NXYNRM,ISHEAR,SHEAR,CSTART,NXYSKN,CSKIN   
C BEG AUG 2003
      COMMON/NPRNTX/NPRT
C END AUG 2003
      COMMON/GENLOC/NXFIX,NYFIX,NXYFIX,TEST,E0XP,E0YP 
      COMMON/DESVAR/ISPACS(4),R     
      DIMENSION C(6,6),G1323(*),ISTIF(*)
      COMMON/MMAXWV/MMAX
      COMMON/STR2/NPARTS,NSEGS(9),NENDS(9)
      COMMON/RNG2/NPARTR,NSEGR(9),NENDR(9)
      DIMENSION RESLT(*),RPRE(*)
      COMMON/C11SAV/C11SVE
      COMMON/MISCLN/NMATEL,IFLAT,DENS(10) 
      COMMON/GEOM2/SPACNG(2),BB2(2),HH(2),WW(2),W2(2)
      DOUBLE PRECISION THETA,CTHETA,STHETA
C BEG AUG 1993
      COMMON/FACWIX/FACWID
C BEG JULY 1995
      COMMON/ISKPL/ISKIPL,IRMOD,IBLL,ICD7X,ICD8X,ICD9X
      COMMON/ILABLX/ILABLY
C END JULY 1995
C BEG NOV 2001
      COMMON/ILABLZ/ILABLW
C END NOV 2001
C BEG MAR 1998
C BEG APR 1998
C BEG JULY 1998
      COMMON/NSKPL/DNWAVE,DNWAV7,DNWAV8,DNWAV9,EIGVLX
C END JULY 1998
C END APR 1998
C END MAR 1998
C BEG OCT 1998
      COMMON/IDMDNX/IDMWAV(3),IDNWAV(3)
C END OCT 1998
C BEG DEC 1998
      COMMON/I9200X/I9200
C END DEC 1998
      COMMON/MSKPL/DMWAVE,DMWAV7,DMWAV8,DMWAV9
      COMMON/RADIM8/CSLP93,TLOC93,CONLAM,EILCSS,CONSET
      COMMON/RADM82/MLOC93,NLOC93
C BEG MAY 1997
      COMMON/SLPIRX/SLOPIR(4,4,4),SLOPXR(4,4)
C  SLOPIR(i,j,k): i = 1,2 for slopes for NBAR-1 and NBAR+1, respectively
C                 i = 3,4 for slopes for MBAR-1 and MBAR+1, respectively
C  SLOPIR(i,j,k), SLOPXR(j,k):
C END MAY 1997
C                 j = 1,2,3,4 = IRMOD
C                 k = 1,2,3,4 = analysis type IROLEY:
C                               IROLEY = 1 = buckling of perfect
C                               IROLEY = 2 = buckling of imperfect
C                               IROLEY = 3 = wide column test
C                               IROLEY = 4 = buckling for web shear knockdown
      COMMON/IROLEX/IROLEY
C END AUG 1993
C BEG JAN 1994
      COMMON/DONNSW/IDONNL(10)
      COMMON/DONWVE/EIGN1(10),EIGN2(10),EIGN3(10),EIGN4(10)
C END JAN 1994
C BEG MAR 1997
      COMMON/ISANDR/ISAND,ISANDS
C END MAR 1997
C BEG JUL 1999
      COMMON/IEIGNN/IEIGN1,IEIGN2
C END JUL 1999
      REAL NX,NY,NXY    
      REAL NXFIX,NYFIX,NXYFIX 
      REAL NXP,NYP
      REAL NXY0,NXYNRM,NXYSKN 
      REAL NXNORM,NYNORM,NBAR,MBAR,NSAVE,MSAVE  
      REAL NMAXM1,NMINM1
      REAL NCYL
      CHARACTER*70 PHRAS1,PHRAS2
      CHARACTER*5  YESNO
      EXTERNAL EIG
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG JUL 1999
      IEIGN1 = 0
      IEIGN2 = 0
C END JUL 1999
C BEG DEC 1998
      IF (ILABLY.EQ.9200.AND.ILABEL.EQ.7120) I9200 = 0
C BEG OCT 1998
C BEG OCT 2001
C     IF (ILABLY.EQ.9120.AND.ILABEL.EQ.7120) NPRNT = 3
C     IF (ILABLY.EQ.9120.AND.ILABEL.EQ.7140) NPRNT = 3
C END OCT 2001
C BEG NOV 2001
      ILABLW = ILABEL
C     IF (ILABLY.EQ.9140.AND.ILABEL.EQ.7185) NPRNT = 2
C END NOV 2001
C BEG JUN 2004
C     IF (ILABLY.EQ.9260.AND.ILABEL.EQ.7235) NPRNT = INDX
C END JUN 2004
C BEG DEC 2004
C     IF (ILABLY.EQ.9150.AND.ILABEL.EQ.7165) NPRNT = INDX
C END DEC 2004
C BEG AUG 2006
C     IF (ILABLY.EQ.9160.AND.ILABEL.EQ.7175) NPRNT = INDX
C     IF (ILABLY.EQ.9160.AND.ILABEL.EQ.7165) NPRNT = INDX
C END AUG 2006
      IF (NNPRT.GE.2) THEN
C BEG JUN 2006
         IF (ITYPE.EQ.2.AND.IDESGN.EQ.0) THEN
           IF ((ILABLY.EQ.9150.AND.ILABEL.EQ.7165).OR.
     1         (ILABLY.EQ.9260.AND.ILABEL.EQ.7185)) THEN
              CALL MOVER(0.,0,EIG1SLP,1,200)
              CALL MOVER(0.,0,EIG1EIG,1,200)
           ENDIF
         ENDIF
C END JUN 2006
C BEG DEC 2001
C BEG NOV 2003
C BEG DEC 2005
C BEG AUG 2006
         IF (ILOADS.EQ.1.AND.ICASE.EQ.1.AND.ILABLY.EQ.9150
     1    .AND.(ILABEL.EQ.7165.OR.ILABEL.EQ.7175)) THEN
C END AUG 2006
C23456789012345678901234567890123456789012345678901234567890123456789012
         WRITE(8,'(/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' PANDA2 can optimize imperfect stiffened panels and shells [4].',
     1' Imperfections are assumed to be in the shapes of the general,',
     1' inter-ring, and local buckling modes obtained from the "PANDA-',
     1' type" model [2]. This section of PANDA2 applies to stiffened',
     1' panels with a general buckling modal imperfection, that is, an',
     1' imperfection shape that is determined from a model in which',
     1' the stiffeners are smeared out. A general buckling modal',
     1' imperfection in a stiffened shell has two major effects:'
         WRITE(8,'(/,A,/,A,/,A,/,A,/,A)')
     1' 1. The imperfect stiffened panel or shell bends as soon as any',
     1' loading is applied. This bending causes significant',
     1' redistribution of stresses between the panel skin and the',
     1' various stiffener parts, thus affecting significantly many',
     1' local and inter-ring buckling and stress constraints.'
C23456789012345678901234567890123456789012345678901234567890123456789012
         WRITE(8,'(/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' 2. The "effective" curvature of an imperfect cylindrical panel',
     1' or shell depends on the amplitude of the initial imperfection,',
     1' on the circumferential wavelength of the critical buckling',
     1' mode of the perfect and of the imperfect shell, and on the',
     1' amount that the initial imperfection grows as the loading',
     1' increases from zero to the design load. The "effective"',
     1' circumferential radius of curvature of the imperfect and',
     1' loaded shell is larger than its nominal radius of curvature',
     1' because this radius corresponds to the maximum local radius of',
     1' a typical inward circumferential lobe of the initial and',
     1' subsequently load-amplified buckling modal imperfection.'
         WRITE(8,'(/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' In PANDA2 this larger local radius of curvature is assumed to',
     1' be the governing radius in the buckling equations pertaining',
     1' to the imperfect shell. For each type of buckling modal',
     1' imperfection (general, inter-ring, local) PANDA2 computes a',
     1' "knockdown" factor based on the ratio:',
     1' (buckling load factor: panel with its "effective" radius)/',
     1' (buckling load factor: panel with its nominal radius)'
C23456789012345678901234567890123456789012345678901234567890123456789012
         WRITE(8,'(/,A,/,A,/,/,A,/,A,/,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' In the following "imperfection sensitivity" calculations',
     1' PANDA2 does the following (using Donnell shell theory):',
     1' 1. Computes the buckling load factor for a PERFECT panel',
     1'    from PANDA-type theory [2].',
     1' 2  Computes the buckling load factor for a PERFECT panel',
     1'    from ARBOCZ theory. Equations are from "The effect of',
     1'    initial imperfections on shell stability - an updated',
     1'    review" by Johann Arbocz, Faculty of Aerospace Engineering,',
     1'    Delft University of Technology, Report LR-695, Sept.1992.',
     1'    in particular, see Equation No. (3.61) in that report.',
     1'    This ARBOCZ theory is also described briefly in [5].'
         WRITE(8,'(/,A,/,A,/,/,A,/,A,/,A,/,A,/,A,/,/,A,/,A,/,A,/,A)')
     1' 3. Computes the buckling load factor for an IMPERFECT panel',
     1'    from ARBOCZ theory.',
     1' 4. Computes the buckling load factor for an IMPERFECT panel',
     1'    from PANDA-type theory [2]. This is done iteratively',
     1'    since the "effective" circumferential radius of curvature',
     1'    of the imperfect panel depends on the buckling load',
     1'    factor that is being computed.',
     1' 5. Decides (partly depending on user-provided input) on',
     1'    whether to use the buckling mode for the PERFECT shell or',
     1'    the buckling mode of the IMPERFECT shell as the', 
     1'    imperfection shape.'
C23456789012345678901234567890123456789012345678901234567890123456789012
         WRITE(8,'(/,A,/,A,/,A,/,/,A,/,A,/,A,/,/,A,/,A,/,A,/,A)')
     1' 6. Computes the curvature changes and twist, Wxx, Wyy, Wxy,',
     1'    generated because of prebuckling bending of the imperfect',
     1'    shell as it is loaded by the design load.',
     1' 7. Presents a summary of "knockdown" factors to be used in',
     1'    connection with local, inter-ring, and general buckling of',
     1'    the stiffened shell.',
     1' For more information on the behavior of imperfect stiffened',
     1' shells, please see the following news items in the file,',
     1' ..doc/panda2/news: 377, 456, 525, 553, 564, 594, and 596.',
     1' Also, please read the papers [4] and [5].'
C
        WRITE(8,'(/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' SOME DEFINITIONS:',
     1' GENSTB = subroutine that computes PANDA-type buckling loads',
     1' ARBOCZ = subroutine that computes ARBOCZ theory buckling loads',
     1' t.s.d. = transverse shear deformation effect',
     1' NX, NY, NXY=axial, hoop, in-plane shear prebuckling resultants',
     1' ILOADS = load combination number (up to 5 load combos allowed)',
     1' ICASE  = subcase number (1 means midbay; 2 means at rings)',
     1' LOAD SET A = "eigenvalue loads" (in load-geometric matrix)',
     1' LOAD SET B = "constant" loads (contribute to stiffness matrix)',
     1' Four digit label starting with 9 (9xxx): SUBROUTINE BUCPAN',
     1' is called from Label 9xxx in SUBROUTINE STRUCT or STRIMP',
     1' Four digit label starting with 7 (7xxx): SUBROUTINE GENSTB',
     1' is called from Label 7xxx in SUBROUTINE BUCPAN'
C23456789012345678901234567890123456789012345678901234567890123456789012
        WRITE(8,'(A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' IDESGN = 0 for current design; = 1 for perturbed design',
     1' ISAND  = 0 for Donnell shell theory; 1 for Sanders theory',
     1' INDX   = 2 for general buckling',
     1' IFFLAT = 0 for curved (cylindrical) panel; 1 for flat panel',
     1' EILC91 = buckling load factor for PERFECT panel',
     1' EILOC9 = buckling load factor for IMPERFECT panel',
     1' WYYAMP = buckling modal imperfection is amplified by WYYAMP',
     1'          due to the applied load',
     1' RNGKNZ = knockdown factor to compensate for unconservativeness',
     1'          of smearing rings',
     1' R(radwav) = "effective" circumferential radius of curvature',
     1'             of the imperfect shell as loaded by the design',
     1'             load combination, NX, NY, NXY. THIS IS IMPORTANT!'
        WRITE(8,'(A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' EIGVAL = eigenvalue with fractional wavenumbers and',
     1'          "fractional" slope',
     1' EIGVLX = original eigenvalue: no "fractional" refinement',
     1' JJJ+1  = design iteration number.',
     1' DMWAVE = fractional axial halfwaves',
     1' DNWAVE = fractional circ. halfwaves',
     1' MBAR   = number of axial halfwaves (floating point)',
     1' NBAR   = number of circumferential halfwaves (floating point)',
     1' MWAVEX = number of axial halfwaves (integer)',
     1' NWAVEX = number of circumferential halfwaves (integer)',
     1' SLOPEX = slope of buckling nodal lines(assumed to be straight)',
     1' EIGMNC = buckling load factors (eigenvalues)'
C23456789012345678901234567890123456789012345678901234567890123456789012
        WRITE(8,
     1   '(A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' W0GLOB = out-of-roundness +general buckling modal imperfection',
     1' WG1    = out-of-roundness (n = 2 imperfection, prismatic)',
     1' WG2    = general buckling modal imperfection',
     1' W0PAN  = inter-ring ("panel") buckling modal imperfection',
     1' W0LOC  = local (panel skin between stiffeners) buckling modal',
     1'          imperfection',
     1' m,n,s  = axial halfwaves, circumferential halfwaves, slope in',
     1'          the buckling mode shape',
     1' eig1   = one eigenvalue when there are multiple minima with',
     1'          respect to (m,n,s)',
     1' eig2   = the other eigenvalue when there are multiple minima',
     1' (eig2-eig1)/abs(eig2-eig1) = ratio that, when its sign',
     1'          changes, tells the user that there has been an abrupt',
     1'          change in the critical buckling mode shape, which may',
     1'          give rise to very large constraint gradients.'
C23456789012345678901234567890123456789012345678901234567890123456789012
        WRITE(8,'(A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' MWAVE  = number of axial halfwaves (integer)',
     1' NWAVE  = number of circumferential halfwaves (integer)',
     1' CSLOPE = slope of buckling nodal lines(assumed to be straight)',
     1' TEST   = control for type of buckling mode, PANDA-type model:',
     1'          TEST < 1.0 means that Fig. 9(b) of [2] applies.',
     1'          TEST > 1.0 means that Fig. 9(a) of [2] applies.',
     1' Wxx,Wyy,Wxy = changes in curvature and twist of the imperfect',
     1'               shell as loaded by the design load',
     1' L      = axial length of the  buckling domain',
     1' CIRC   = circumferential arc length of the buckling domain',
     1' Eq.(3.61) = ARBOCZ theory buckling equation; Eq.(19) of [5]'
C
         WRITE(8,'(/,A,/,/,A,A,/,A,A,/,A,A,/,A,A)')
     1' NOTE: In the following output there occur listings in the form',
     1' EIGMNC=  2.25E+00  2.25E+00  2.57E+00  2.98E+00  2.57E+00',
     1'  2.25E+00  1.00E+17',
     1' SLOPEX=  4.73E-01  4.73E-01  0.00E+00  1.58E-01  0.00E+00',
     1'  4.73E-01  0.00E+00',
     1' MWAVEX=    1         1         7         6         7',
     1'         1         0',
     1' NWAVEX=    3         3         1         4         1',
     1'         3         0'
         WRITE(8,'(/,A,/,A,/,A,/,A,/,A,A,/,A,/,A,/,A)')
     1' These data represent the buckling load factors, EIGMNC, and',
     1' mode shapes, (SLOPEX,MWAVEX,NWAVEX), corresponding to the',
     1' critical values found from searching for minima with respect',
     1' to (m,n,slope) over seven (m,n) subspaces:',
     1' (low-m, low-n), (low-m, high-m), (high-m, low-n),',
     1' (high-m, high-n), etc.',
     1' in which (m=MWAVEX,n=NWAVEX,slope=SLOPEX) = (axial halfwaves,',
     1' circumferential halfwaves, slope of buckling nodal lines).',
     1' Please see ..doc/panda2.news Items 415 and 443 for details.'
C23456789012345678901234567890123456789012345678901234567890123456789012
         WRITE(8,'(/,A,A,/,/,A,/,A,/,A,A,/,A,A,/,A,A,/,A)')
     1' ANOTHER NOTE: In the following output there may also occur',
     1' listings in the form:',
     1' Computation of fractional circumferential wavenumber, DNWAVE:',
     1' after knockdown factor=  9.3779E-01 for smeared stringers',
     1' Orig. crit. waves and eigenv.,MBAR,NBAR,  ESXNW1=      1.',
     1'      3.  2.1122E+00',
     1' Decrement in circ. wavenumber,MBAR,NBAR-1,ESXNW2=      1.',
     1'      2.  2.2875E+00',
     1' Increment in circ. wavenumber,MBAR,NBAR+1,ESXNW3=      1.',
     1'      4.  2.2609E+00',
     1' Fractional circumferential wavenumber,    DNWAVE=  4.1013E-02'
         WRITE(8,'(/,A,/,A,/,A,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' "Fractional" wavenumbers, m+dm = MBAR + DMWAVE and',
     1' n + dn = NBAR + DNWAVE, are used in PANDA2 in order to try',
     1' to smooth the behavior with respect to buckling mode shape,',
     1' (m,n,slope).',
     1' The redistribution of stresses and stress resultants between',
     1' panel skin and stiffener parts as an imperfect shell bends',
     1' under loading depends upon the curvature changes and twist,',
     1' Wxx, Wyy, Wxy, which involve the second derivatives of the',
     1' mode shape and hence the products m^2, n^2, and m*n. If the',
     1' critical buckling mode shape has few halfwaves (m,n), then',
     1' Wxx, Wxy, Wxy change dramatically when m and/or n change by 1.'
C23456789012345678901234567890123456789012345678901234567890123456789012
         WRITE(8,'(A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' This dramatic change causes a dramatic change in many of the',
     1' stress and buckling constraints. Such changes give rise to',
     1' very large constraint gradients and "jumpy" margins from',
     1' design iteration to iteration, making it very difficult to',
     1' find a "global" optimum design. The use of fractional wave',
     1' numbers, DMWAVE and DNWAVE, smooths the constraints because',
     1' a small change in the design leads to a correspondingly',
     1' small change in MBAR + DMWAVE and NBAR + DNWAVE and thus a',
     1' small change in Wxx, Wyy, Wxy at the design load.'
         WRITE(8,'(/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' In order to obtain a "fractional" wavenumbers, PANDA2 first',
     1' computes buckling load factors for n, n-1, and n+1 with m',
     1' fixed and for m, m-1, m+1 with n fixed, then uses parabolic',
     1' interpolation for m,n to obtain the "fractional" wave numbers',
     1' such as the quantity DNWAVE listed above. "Fractional" wave',
     1' numbers are not computed unless the critical m and/or n are',
     1' at least 3. Please see ..doc/panda2.news Items 125g, 367, 412',
     1' 449, and 453 for more details about "fractional" wavenumbers.'
C23456789012345678901234567890123456789012345678901234567890123456789012
        WRITE(8,'(/,A,A,/,/,A,/,A,/,A,/,A,A,/,A,A,/,A,/,A)')
     1' A THIRD NOTE: In the following output there may also occur',
     1' listings in the form:',
     1' ***** Multiple Minima Eigenvalues: Two different mode shapes:',
     1'         [MWAVEX(1),NWAVEX(1)] and [MWAVEX(3),NWAVEX(3)] *****',
     1' Two buckling mode shapes for ILOADS,ICASE=  1  1',
     1' Axial halfwaves: first mode, MWAVEX(1)= 1; second mode,',
     1' MWAVEX(3)= 7',
     1' Circ. halfwaves: first mode, NWAVEX(1)= 3; second mode,',
     1' NWAVEX(3)= 1',
     1' JJJ+1,  eig2,         eig1,     (eig2-eig1)/abs(eig2-eig1)=',
     1'   1   2.5715E+00    2.2525E+00       1.0000E+00'
        WRITE(8,'(/,A,A,/,A,A,/,A,/,A)')
     1' ***** Multiple Minima Eigenvalues vs Slope for Mode (M,N)=',
     1'     1     3 *****',
     1' Normalized ratio, (eig2-eig1)/abs(eig2-eig1)= -1.0000E+00',
     1' for iteration no.  1',
     1' I,SLOPE,EIGENVALUE=  1  4.7076E-01  2.2526E+00',
     1' I,SLOPE,EIGENVALUE=  2  1.9665E+00  2.2476E+00'
C23456789012345678901234567890123456789012345678901234567890123456789012
        WRITE(8,'(/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1' This output informs the user about potential abrupt changes in',
     1' the critical general buckling mode shape with possibly very',
     1' small changes in the design. The first seven lines have to do',
     1' with possible abrupt changes in (m,n); the second four lines',
     1' have to do with a possible abrupt change in the slope of the',
     1' buckling nodal lines for given (m,n). Abrupt changes of either',
     1' of these types from design iteration to iteration may cause',
     1' "jumpy" margins and make it very difficult to determine a',
     1' "global" optimum design. See Item 596 in panda2.news for more.'
C
         WRITE(8,'(/,A)')
     1' Now start the "imperfection" section for general instability:'
         ENDIF
C        End of(ILOADS.EQ.1.AND.ICASE.EQ.1.AND.ILABLY.EQ.9150
C             .AND.(ILABEL.EQ.7165.OR.ILABEL.EQ.7175)) condition
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C
C BEG DEC 2005
         IF (ILOADS.EQ.1.AND.ICASE.EQ.1.AND.ILABLY.EQ.9260
     1                                 .AND.ILABEL.EQ.7185) THEN
            WRITE(8,'(/,A)')' Now start the various buckling analyses.'
C
            IF (ISAND.EQ.0) WRITE(8,'(/,A)')
     1    ' Buckling load factors are computed from Donnell theory'
            IF (ISAND.EQ.1) WRITE(8,'(/,A)')
     1    ' Buckling load factors are computed from Sanders theory'
            IF (ISAND.EQ.2) WRITE(8,'(/,A)')
     1    ' Buckling load factors are computed from Marlowe theory'
         ENDIF
C        End of (ILOADS.EQ.1.AND.ICASE.EQ.1.AND.ILABLY.EQ.9260
C    1                      .AND.ILABEL.EQ.7185) condition
C END DEC 2005
         IF (ILABLY.EQ.9150) WRITE(8,'(/,A)')
     1 ' Buckling of PERFECT panel...'
         IF (ILABLY.EQ.9160) WRITE(8,'(A)')
     1 ' Buckling of IMPERFECT panel...'
C END DEC 2005
C23456789012345678901234567890123456789012345678901234567890123456789012
         WRITE
     1     (8,'(A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,A,/,8I8,/,A,/,1P,3E14.6)')
     1' ******** ENTERING GENSTB: PANDA-type buckling model ********',
     1' PANDA-type buckling theory is described in the journal paper:',
     1' D. Bushnell, "Theoretical basis of the PANDA computer program"',
     1' Computers & Structures, Vol. 27, No. 4, pp. 541-563, 1987',
     1' Also see Items 415 and 443 in ...panda2/doc/panda2.news.',
     1' ILABEL = unique "CALL GENSTB" within SUBROUTINE BUCPAN',
     1' ILABLY = label number near where SUBROUTINE BUCPAN is called.',
     1'   ILABEL, ILABLY, IDESGN,  ISAND,   INDX,   ITHRU,  IROLL ',
     1'   IFFLAT =',
     1    ILABEL, ILABLY, IDESGN,  ISAND,   INDX,   ITHRU,  IROLL,
     1    IFFLAT,
     1'  Radius  R,   Axial length, A,   Width  B',
     1        R,             A,              B
C END NOV 2003
C BEG MAR 2005
C23456789012345678901234567890123456789012345678901234567890123456789012
         WRITE(IFILE,'(A,/,A,1P,E12.4,/,A,E12.4,/,A,E12.4,/,A,E12.4)')
     1   ' Initial imperfections for general, panel, local buckling=',
     1   ' Total out-of-roundness + modal,    W0GLOB =',W0GLOB,
     1   ' Out-of-roundness,                    WG1  =',WG1,
     1   ' General buckling modal,              WG2  =',WG2,
     1   ' Inter-ring buckling modal,          W0PAN =',W0PAN
         WRITE(IFILE,'(A,1P,E12.4)')
     1   ' Local buckling modal,               W0LOC =',W0LOC
C END MAR 2005
         IF (IFFLAT.EQ.1) WRITE(8,'(A)')
     1 ' ***** NOTE: Panel is modelled as if it were flat. *****'
C END DEC 2001
C BEG OCT 2001
         IF (ISAND.EQ.0) WRITE(8,'(A)')
     1 ' ***** Donnell theory is used in this section (ISAND=0)'
         IF (ISAND.EQ.1) WRITE(8,'(A)')
     1 ' ***** Sanders theory is used in this section (ISAND=1)'
         IF (ISAND.EQ.2) WRITE(8,'(A)')
     1 ' ***** Marlowe theory is used in this section (ISAND=2)'
         FNXYP = 0.
         WRITE(8,'(A,1P,3E12.4,/,A,1P,3E12.4)')
     1 ' Load Set A: Nx,  Ny,  Nxy=',  NX,NY,NXY,
     1 ' Load Set B: Nxo, Nyo, Nxyo=', NXP,NYP,FNXYP
C BEG AUG 2006
         WRITE(8,'(A,/,1P,3E12.4,/,1P,3E12.4,/,1P,3E12.4)')
     1 ' Membrane stiffnesses ((C(i,j),j=1,3),i=1,3)=',
     1   C(1,1), C(1,2), C(1,3),
     1   C(2,1), C(2,2), C(2,3),
     1   C(3,1), C(3,2), C(3,3)
C END AUG 2006
      ENDIF
C  End of IF (NNPRT.GE.2) section.
C END OCT 1998   
C BEG APR 1998
      CALL MOVER(10.E+16,0,EIGMNC,1,7)
      CALL MOVER(0.,0,SLOPEX,1,7)
      CALL MOVER(0,0,MWAVEX,1,7)
      CALL MOVER(0,0,NWAVEX,1,7)
C BEG JAN 2006
      CALL MOVER(0.,0,TESTX,1,7)
C END JAN 2006
      IF (NPRNT.EQ.INDX) WRITE(8,'(A,1P,7E10.2)')
     1  ' EIGMNC=',(EIGMNC(I),I=1,7)
C END APR 1998
      IIROLL = IROLL
      RBB = ABS(R)/B   
      NBAR = NWAVE
      MBAR = MWAVE
      TEST = TESTSH     
      PI = 3.1415927    
C     
      FTEST = SQRT(NX**2 + NY**2 + NXY**2)
      EIGVAL = 10.E16
      IF (NX.GE.0.0.AND.(ABS(NY).LT.(0.001*FTEST).OR.NY.GE.0.).AND.
     1    ABS(NXY).LT.(0.01*FTEST)) RETURN
      NXNORM = NX 
      NYNORM = NY 
      NXYNRM = NXY
C
      CALL GTRANS(INDX,C,ISTIF)
      CALL FILLC(C)
C
      IF (NPRNT.NE.0) THEN
         WRITE(8,*)' INDX,IROLL=',INDX,IROLL
         WRITE(8,'(A,1P,5E12.4)')' A,B,NX,NY,NXY =',A,B,NX,NY,NXY
         WRITE(8,'(A,1P,6E12.4)')' [C(I,I),I=1,6]=',
     1   C(1,1),C(2,2),C(3,3),C(4,4),C(5,5),C(6,6)
      ENDIF
C
      IF (NPRNT.EQ.INDX) THEN
         WRITE(8,'(A,1P,6E12.4)') ' C11,NX,NY,NXY,NXP,NYP=',
     1                             C11,NX,NY,NXY,NXP,NYP
         WRITE(8,*)' IPRELM,INDX,IROLL=',IPRELM,INDX,IROLL
         WRITE(8,1010) R,((C(I,J),J=1,6),I=1,6)
 1010    FORMAT(/' GENERAL INSTAB. MODEL. RADIUS OF CURV., R=',1PE12.4/
     1' SMEARED STIFFENER C(i,j) ='/(1P,6E12.4))
      ENDIF
C
      PX = NX/C11
      PY = NY/C11
      PXY= NXY/C11
C
      NXFIX = NXP/C11 
      NYFIX = NYP/C11 
C     
      C11SVE = C11
      CALL CNORM(C)
C
C     ESTABLISH WHETHER SKEWED BUCKLE ANALYSIS IS REQUIRED...     
C     
      ISHEAR = 0  
      ANORM = SQRT(NX**2 +NY**2)
      IF (ABS(NXY).GT.0.01*ANORM) ISHEAR = 1    
      IF (ABS(NXYFIX).GT.0.01*ANORM) ISHEAR = 1
      IF (ISHEAR.EQ.0.AND.NX.GT.0.0.AND.NY.GT.0.0) RETURN
C     
      IBAL = 0
C BEG MAR 1998 (The "0.01"s below used to be 0.05)
      IF (ABS(C13).GT.0.01*C11) IBAL = 1  
      IF (ABS(C23).GT.0.01*C22) IBAL = 1  
      IF (ABS(C34).GT.0.01*C44) IBAL = 1  
      IF (ABS(C35).GT.0.01*C55) IBAL = 1  
      IF (ABS(C16).GT.0.01*C66) IBAL = 1  
      IF (ABS(C26).GT.0.01*C66) IBAL = 1  
C BEG JAN 1994
C     IF (ABS(C46).GT.0.01*C66) IBAL = 1  
C     IF (ABS(C56).GT.0.01*C66) IBAL = 1
      SC4466 = SQRT(C44*C66)
      SC5566 = SQRT(C55*C66)
C BEG JULY 1998
C     IF (ABS(C46).GT.0.01*SC4466.AND.ABS(C56).GT.0.01*SC5566) IBAL=1  
      IF (ABS(C46).GT.0.01*SC4466.OR.ABS(C56).GT.0.01*SC5566) IBAL=1  
C END JULY 1998
C END MAR 1998
C END JAN 1994
C     
C BEG MAY 1998
C BEG AUG 2003
C     IF (IDESGN.EQ.1) WRITE(8,'(A,I2)')' ****** ISAND=',ISAND
C END AUG 2003
      ISNDSX = ISAND
      IF (IDESGN.EQ.0) RBB0 = RBB
      IF (RBB0.GT.10.0) ISAND = 0
C BEG AUG 2003
C     IF (IDESGN.EQ.1) WRITE(8,'(A,I2)')' ****** ISAND=',ISAND
C END AUG 2003
C END MAY 1998
      IF (IDESGN.EQ.0) GO TO 7
      IF (ITHRU.EQ.1) IARGTH = 0
      IF (ITHRU.EQ.2) IARGTH = IAGAIN
      CALL EIG(A,B,NBAR,MBAR,PX,PY,PXY,CSLOPE,IDESGN,EIGVAL,
     1 INDX,FFLAT,IARGTH,1)
C BEG APR 1997 (MOVE THESE DOWN AFTER WE DO SHRRED!!!)
C     IF (PARX2.GT.0.1.AND.ISOGRD.EQ.0) THEN
C          ESXNEW = EIGVAL
C          CALL EIGKNK(PARX1,PARX2,NBAR,EIGVAL,PX,PY,PXY,
C    1                 ESXNEW,IFILE,NPRNT,INDX,1,ITUTOR)
C          EIGVAL = ESXNEW
C     ENDIF
C END APR 1997
C BEG MAR 1998
      IF (ITUTOR.EQ.1.OR.NPRNT.EQ.INDX)
C END MAR 1998
     1 WRITE(8,*)' MBAR,NBAR,CSLOPE,EIGVAL=',MBAR,NBAR,CSLOPE,EIGVAL
      GO TO 105
    7 CONTINUE
C
      IF (ITHRU.EQ.1) IAGAIN = 0
      IF (IFFLAT.EQ.0) THEN
         FFLAT = 0.
         IKOUNT = 0
      ELSE
         FFLAT = 1.
         IKOUNT = 1
         RBB = 10000.
      ENDIF
   81 CONTINUE
C
C   GET BENDING STIFFNESS COEFFICIENTS ABOUT NEUTRAL AXES..
C
      C44N = ABS(C44 - B11**2/C11)
      C55N = ABS(C55 - B22**2/C22)
C BEG MAY 1998
      IF (C55N.LE.0.) C55N = 0.000001*C44N
C END MAY 1998
C
C   THE TEST FOR WHICH DIRECTION THE PANEL IS LONG IN MUST BE MADE
C   WITH RESPECT TO THE NEUTRAL AXES IN THE 1 AND 2 DIRECTIONS.
C   THE TEST FOR WHICH DIRECTION THE PANEL IS LONG IN SHOULD INCLUDE
C   THE EFFECT OF CURVATURE OF THE PANEL.
C
      C44MLT = 1.0
      IF (IAGAIN.NE.2.AND.FFLAT.GT.0.5) RBB = 10000.
      IF ((FFLAT.LT.0.5.OR.IAGAIN.EQ.2).AND.IFLAT.EQ.0
     1                .AND.(ISHEAR.EQ.1.OR.IBAL.EQ.1)) THEN
         AR     = ABS(R)
         THETA  = B/(2.*AR)
         STHETA = SIN(THETA)
         CTHETA = COS(THETA)
         DCENT  = AR*(STHETA/THETA - CTHETA)
         FIBASE = AR**3*(THETA -3.*CTHETA*STHETA +2.*THETA*CTHETA**2)
         FICENT = FIBASE - B*DCENT**2
         C44MLT = 1. + C11*FICENT/(B*C44N)
         IF (C44MLT.LT.1.0) C44MLT = 1.0
      ENDIF
      TEST = (A/B)*SQRT(C55N/(C44N*C44MLT))
C
      IF (NPRNT.EQ.INDX) THEN
         WRITE(8,*)' IAGAIN     =',IAGAIN
         WRITE(8,*)' A,B,RBB    =',A,B,RBB
         WRITE(8,*)' B11,B22    =',B11,B22
         WRITE(8,*)' C11,C22    =',C11,C22
         WRITE(8,*)' C44,C55    =',C44,C55
         WRITE(8,*)' C44N,C55N  =',C44N,C55N
         WRITE(8,*)' TEST,C44MLT=',TEST,C44MLT
      ENDIF
C     
C  FOLLOWING STATEMENT WAS COMMENTED OUT IN MARCH 1990...
C     IF (ITRANS(INDX).NE.0.AND.TEST.GT.0.99) TEST = 0.99
      IF (RBB.LT.1.0.AND.TEST.GT.1.0) TEST = 1./TEST  
      IF (IAGAIN.EQ.2.AND.TEST.LE.1.0) TEST = 1.1
      IF (FFLAT.LT.0.5.AND.IAGAIN.EQ.1.AND.TEST.GT.0.9) TEST = 0.9
      IF (NPRNT.EQ.INDX) WRITE(8,*)' TEST,C44MLT=',TEST,C44MLT
C BEG NOV 2001
C BEG DEC 2001
      IF ((ILABLY.EQ.9140.OR.ILABLY.EQ.9260).AND.NNPRT.GE.2) THEN
        WRITE(8,'(A,/,1P,5E12.4)')
     1'      R/B,      C44MLT,      C44N,      C55N,      FFLAT=',
     1       RBB,      C44MLT,      C44N,      C55N,      FFLAT
        WRITE(8,'(A,A,1P,E8.2,/,A,A,/,A,A,/,A)')
     1' Test for direction panel is long:',
     1' TEST=(A/B)*SQRT(C55N/(C44N*C44MLT))=',TEST,
     1' If TEST > 0.99 then d = 0;  c = SLOPE',
     1' (panel is long in x-direction, Fig.(9a).',
     1' If TEST < 0.99 then d = SLOPE; c = 0.',
     1' (panel is long in y-direction, Fig.(9b).',
     1' See Eq.(51) and Fig. 9 of "Theoretical basis..." paper (1987).'
      ENDIF
C END DEC 2001
C23456789012345678901234567890123456789012345678901234567890123456789012
C END NOV 2001
C BEG MAR 1998
      NLARGE = 0
      ISNDSV = ISAND
      TESTSV = TEST
      TESTMX = TEST
      ITESTM = 0
      ITSTXX = 1
C BEG APR 1998
      ITESTY = 0
      EIGTST = 10.E+21
      EIGRAT = 1.0
C END APR 1998
      IF (IFFLAT.EQ.1) ITSTXX = 0
      IF (NY.LT.0.0.AND.ABS(NY).GE.0.5*ABS(NX)) ITSTXX = 0
      IF (ABS(NXY).GT.ABS(NX)) ITSTXX = 0
C BEG APR 1998
      IF (ITSTXX.EQ.1.AND.IRMOD.NE.0) ITESTY = 1
C END APR 1998
      IF (IRMOD.EQ.2.OR.IRMOD.EQ.3) ITSTXX = 0
      IF (IRMOD.EQ.1.AND.RBB.LT.1.0) ITSTXX = 0
C BEG APR 1998
      IF (ITSTXX.EQ.1) ITESTY = 0
C END APR 1998
C BEG MAY 2007
      CALL MOVER(0,0,MNCHEK,1,1000)
      CALL MOVER(10.E+20,0,EIGCHK,1,1000)
      CALL MOVER(0.,0,CSLCHK,1,1000)
      CALL MOVER(0,0,MNCHKS,1,1000)
      CALL MOVER(10.E+20,0,EICHKS,1,1000)
      CALL MOVER(0.,0,CSCHKS,1,1000)
C BEG APR 1998
      MMXCHK = 1
      NMXCHK = 1
      IF (IFFLAT.EQ.0) THEN
         MMXCHK = 10
         IF (ISAND.EQ.0.AND.(A/B).GT.10.) MMXCHK = 20
         IF (IBAL.EQ.0.AND.ISHEAR.EQ.0.AND.(A/B).GT.5.) MMXCHK=50
C BEG MAY 2007
C        NMXCHK = 10
         NMXCHK = 20
C END MAY 2007
         IF (ISAND.NE.0) THEN
            IF (ISHEAR.EQ.1.OR.IBAL.EQ.1) THEN
               MMXCHK = 3
               NMXCHK = 3
               IF ((B/ABS(R)).GT.1.0) THEN
                  MMXCHK = 6
                  NMXCHK = 6
               ENDIF
            ENDIF
         ENDIF
         NMMINK = 1
         IF ((B/ABS(R)).GE.0.9) THEN
            NMMINK = 2.*B/ABS(R) + 0.21
C BEG MAY 2007
C           IF (NMMINK.GT.10) NMMINK = 10
            IF (NMMINK.GT.20) NMMINK = 20
C END MAY 2007
         ENDIF
         NMXCHK = NMMINK
         IF ((B/A).LE.1.0) THEN
            IF (ISAND.NE.0.AND.NMXCHK.EQ.2
     1                     .AND.(IBAL.EQ.1.OR.ISHEAR.EQ.1)) MMXCHK = 10
            IF (NMXCHK.EQ.1.AND.(IBAL.EQ.1.OR.ISHEAR.EQ.1)) MMXCHK = 20
         ELSE
            MMXCHK = FLOAT(NMXCHK)*A/B
            IF (MMXCHK.GT.50) MMXCHK = 50
C BEG DEC 2005
            IF (MMXCHK.LT.1) MMXCHK = 1
C           IF (MMXCHK.LT.2) MMXCHK = 2
C END DEC 2005
C BEG MAY 2007
C           IF (MMXCHK.LE.2) NMXCHK = 10
            IF (MMXCHK.LE.2) NMXCHK = 20
C END MAY 2007
C BEG OCT 2006
            IF ((B/ABS(R)).GE.2.0.AND.MMXCHK.LE.10) MMXCHK = 10
C END OCT 2006
         ENDIF
C BEG NOV 2006
C BEG MAY 2007
C        IF ((B/ABS(R)).GE.2.0.AND.NMXCHK.LE.10) NMXCHK = 10
         IF ((B/ABS(R)).GE.2.0.AND.NMXCHK.LE.20) NMXCHK = 20
C END MAY 2007
C END NOV 2006
      ENDIF
C  End of IF (IFFLAT.EQ.0) section.
C END APR 1998
C BEG DEC 2005
C     IF (NPRT.GE.2) WRITE(8,'(A,A,I3,A,I3)')
C    1' Upper bounds of axial,circ. halfwave ranges to check:',
C    1' MMXCHK=',MMXCHK,', NMXCHK=',NMXCHK
C END DEC 2005
      RFCYLX = 1.1
C END MAR 1998
      NMINA = 1
      PI = 3.14159
      RFCYL = PI*ABS(R)/B
      IF (IAGAIN.NE.2.AND.FFLAT.GT.0.5) RFCYL = 10000.
C BEG MAR 1998
      IF (RFCYL.LT.RFCYLX.AND.(ISAND.EQ.0.OR.IRMOD.NE.0)) NMINA = 2
C END MAR 1998
      FNMINA = NMINA
C BEG JULY 1998
      THEFF = SQRT(C44N*12./C22)
      BLL = 2.73*SQRT(ABS(R)*THEFF)
      MBLL = A/BLL
      FMBLL = MBLL
C END JULY 1998
C     
C     FIRST FIND MINIMUM WITH MBAR SMALL...     
C     
      IF (NPRNT.EQ.INDX) WRITE(8,*)' FIRST EXPLORE SMALL MBAR RANGE...'
      FLX0 = PI*SQRT(SQRT(R*R*C44N/C22))   
      FMTST1 = A/FLX0   
      IF (IAGAIN.NE.2.AND.FFLAT.GT.0.5) FMTST1 = 0.
      FMTST2 = (A/B)*SQRT(SQRT(C55N/C44N))  
      FMTST = AMAX1(FMTST1,FMTST2)  
      MTEST = FMTST + 0.5
C
C  FOLLOWING STATEMENT ADDED 10TH MARCH, 1986, BECAUSE OF INADEQUATE
C  SEARCH FOR CRITICAL BUCKLING LOAD VS. AXIAL HALF WAVENUMBER...
C
      MTEST = MAX(MTEST,2)
C
C
      MBAR = 1.0  
      M = 1 
C BEG JULY 1998
      EIGSV2 = 10.E+18
C END JULY 1998
      FNTST1 = (B/A)*SQRT(SQRT(C44N/C55N))  
      FNTST = AMAX1(FNMINA,FNTST1)
      NBAR = FNTST
C
C  FOLLOWING STATEMENT ADDED 10 MARCH, 1986 TO CORRECT ERROR IN SEARCH
C
      NBAR = NMINA
C BEG MAR 1998
      IF (RFCYL.LT.RFCYLX) NBAR = 2.
C END MAR 1998
C
C
      INCR = 1. + 0.03*NBAR
      N = NBAR    
      NMAX = MAX0(100,N*5)    
      NMIN = NMINA    
      NBAR = N    
      NMINM1 = NBAR     
      FINCR = INCR
      SINCR = 1.0 
      MSAVE = 1.  
      ICHEK = 0   
    9 CONTINUE    
C BEG MAR 1998
      IF (NBAR.LT.50.) CSLOPE = 0.0
C END MAR 1998
C     EIGS22 = 0.
C BEG JULY 2006
      IF (INDX.EQ.2.AND.IPRELM.EQ.3.AND.IRMOD.NE.0
     1             .AND.NOSRCH(ILOADS).EQ.1) THEN
         NBAR = NUSER(ILOADS)
         MBAR = MUSER(ILOADS)
C BEG JUN 2007
         MMSML = MUSER(ILOADS)
         NNSML = NUSER(ILOADS)
C END JUN 2007
      ENDIF
C END JULY 2006
      CALL EIG(A,B,NBAR,MBAR,PX,PY,PXY,CSLOPE,IDESGN,EIGSAV,
     1 INDX,FFLAT,IAGAIN,0)
C BEG JULY 2006
      IF (INDX.EQ.2.AND.IPRELM.EQ.3.AND.IRMOD.NE.0
     1             .AND.NOSRCH(ILOADS).EQ.1) THEN
         TESTSH = TEST
         MWAVE = MBAR + 0.1
         NWAVE = NBAR + 0.1
         IARGTH = IAGAIN
         CALL EIG(A,B,NBAR,MBAR,PX,PY,PXY,CSLOPE,IDESGN,EIGVAL,
     1    INDX,FFLAT,IAGAIN,1)
         DO 2954 I = 1,7
            EIGMNC(I) = 10.E+16
            SLOPEX(I) = 0.
            MWAVEX(I) = 0
            NWAVEX(I) = 0
            TESTX(I)  = 0.
 2954    CONTINUE
         EIGMNC(1) = EIGVAL
         SLOPEX(1) = CSLOPE
         MWAVEX(1) = MBAR
         NWAVEX(1) = NBAR
C BEG JAN 2007
         IF (ISAND.EQ.0) WRITE(8,'(/,A)')
     1 ' Buckling load factors are computed from Donnell theory'
         IF (ISAND.EQ.1) WRITE(8,'(/,A)')
     1 ' Buckling load factors are computed from Sanders theory'
         IF (ISAND.EQ.2) WRITE(8,'(/,A)')
     1 ' Buckling load factors are computed from Marlowe theory'
         WRITE(IFILE,'(A,/,A,/,A,2I6)')
     1 ' General instability.',
     1 ' NOTE: The user has chosen to fix (MWAVEX,NWAVEX) at the',
     1 '       values (MUSER,NUSER) =',MUSER(ILOADS),NUSER(ILOADS)
C        WRITE(IFILE,'(A,/,A,/,A,/,A,/,A,2I6)')
C    1 ' General instability.',
C    1 ' Donnell theory is always used in this section of PANDA2',
C    1 ' where imperfection sensitivity is being computed.',
C    1 ' NOTE: The user has chosen to fix (MWAVEX,NWAVEX) at the',
C    1 '       values (MUSER,NUSER) =',MUSER(ILOADS),NUSER(ILOADS)
C END JAN 2007
         WRITE(IFILE,'(A,1P,7E10.2)')' EIGMNC=',(EIGMNC(I),I=1,7)
         WRITE(IFILE,'(A,1P,7E10.2)')' SLOPEX=',(SLOPEX(I),I=1,7)
         WRITE(IFILE,'(A,1P,I5,6I10)')' MWAVEX=',(MWAVEX(I),I=1,7)
         WRITE(IFILE,'(A,1P,I5,6I10)')' NWAVEX=',(NWAVEX(I),I=1,7)
         DNWAVE = 0.
         DMWAVE = 0.
         EIGVLX = EIGVAL
         ESXNW1 = EIGVAL
         IF (PARX2.GT.0.1.AND.ISOGRD.EQ.0) THEN
            CALL EIGKNK(PARX1,PARX2,NBAR,EIGVAL,PX,PY,PXY,
     1                  ESXNW1,IFILE,NPRNT,INDX,1,0)
            FKNEIG = ESXNW1/EIGVAL
         ENDIF
C BEG AUG 2006
C        IF (IDESGN.EQ.0.AND.IFLAT.EQ.0
C    1                  .AND.ILABEL.EQ.7165.AND.ILABLY.EQ.9150) THEN
C BEG JUN 2007
C        IF (IDESGN.EQ.0.AND.IFLAT.EQ.0.AND.ILABLY.EQ.9150
C    1                  .AND.(ILABEL.EQ.7165.OR.ILABEL.EQ.7175)) THEN
         IF (IDESGN.EQ.0.AND.IFLAT.EQ.0.AND.(ILABLY.EQ.9150
     1 .OR.(ILABLY.EQ.9240.AND.ISTIF(1).EQ.0.AND.ISTIF(2).EQ.0))
     1                  .AND.(ILABEL.EQ.7165.OR.ILABEL.EQ.7175)) THEN
C END JUN 2007
C END AUG 2006
C         We are in imperfection sensitivity section:
C         general buckling of perfect shell.
            AXLRED = 1.0
            IF (MWAVE.NE.0.AND.IXIMPF(ILOADS).NE.0) THEN
               AXLTST = A/FLOAT(MWAVE)
               AXLRED = AXLTST/AXLWAV(ILOADS)
            ENDIF
            IF (NNPRT.GE.0) WRITE(8,
     1   '(/,A,/,A,/,A,/,A,/,A,1P,E12.4,/,A,1P,E12.4,/,A,I3,/,A,/)')
     1    ' ********* NOTE ********* NOTE ********** NOTE *********',
     1    ' Factor by which general buckling modal imperfection',
     1    ' amplitude will be changed for the purpose of computing',
     1    ' the effective radius of curvature of the initially',
     1    ' imperfect and loaded panel, AXLRED =',AXLRED,
     1    ' Axial length in this model of the panel, A = ',A,
     1    ' Axial halfwaves in critical general mode, MWAVE=',MWAVE,
     1    ' ******* END NOTE ****** END NOTE ****** END NOTE *********'
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG AUG 2006
            C44C55N = C44N/C55N
            AXLENG = A/FLOAT(MMSML)
            IF (MMSML.EQ.1.AND.INOT4(IRMOD).EQ.0)  INOT4(IRMOD) = 1
            IF (C44C55N.GT.2.0.AND.INOT4(IRMOD).EQ.0)
     1                                             INOT4(IRMOD) = 1
            IF (AXLENG.GE.2.0*ABS(R).AND.INOT4(IRMOD).EQ.0)
     1                                             INOT4(IRMOD) = 1
            IF (NNPRT.GE.2)
     1         WRITE(8,'(/,A,/,5I7,/,A,1P,E12.4,/,A,1P,E12.4)')
     1    '  ILABLY, ILABEL, IRMOD, MMSML, INOT4(IRMOD)=',
     1      ILABLY,ILABEL,IRMOD,MMSML,INOT4(IRMOD),
     1    ' Axial/hoop bending stiffnesses, C44N/C55N=',C44C55N,
     1    ' Axial halfwavelength of buckle, AXLENG=',AXLENG
            IF (NNPRT.GE.2.AND.INOT4(IRMOD).EQ.1)
     1WRITE(8,'(A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1    ' Rather than arbitrarily set the amplitude factor for',
     1    ' the growth of the buckling modal imperfection equal to',
     1    ' 4.0 (WYYAMP = 4.0), which is ordinarily done for shells',
     1    ' under almost pure axial compression, the strategy',
     1    ' described in the PANDA2 news Item No. 662 will be pursued.',
     1    ' This strategy is thought to be valid because of one or',
     1    ' more of the following conditions:',
     1    '  1. The critical number of axial halfwaves, m = 1.',
     1    '  2. The axial bending stiffness is more than 2 times the',
     1    '     hoop bending stiffness. (C44n/C55n > 2.0).',
     1    '  3. The axial halfwavelength of the critical buckling mode',
     1    '     is greater than or equal to the shell diameter.',
     1    ' The effect is to make optimum designs less conservative.'
C
C           CURCHG = 0.
C           IF (NNPRT.GE.2) THEN
C
C  CALCULATE RADIUS OF CURVATURE AS MODIFIED BY INITIAL LOCAL OR GLOBAL
C  IMPERFECTION W0 AND CIRCUMFERENTIAL WAVENUMBER PARAMETER N.
C     
C              PI = 3.1415927
C              MFACT = FLOAT(MMSML)*PI/A
C              FMFACT = MFACT
C              NFACT = FLOAT(NNSML)*PI/B
C              NSTAR = NFACT
C              AMPMOD = 1.0
C              WGARG = WG1
C              IF (IRMOD.EQ.1) THEN
C                 WIMPX = W0LOC
C                 IF (ISTIF(1).NE.0.OR.ISTIF(2).NE.0) WGARG = 0.
C              ENDIF
C              IF (IRMOD.EQ.2.OR.IRMOD.EQ.4) WIMPX = WG2
C              IF (IRMOD.EQ.3) THEN
C                 WIMPX = W0PAN
C                 IF (ISTIF(2).NE.0) WGARG = 0.
C              ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
C              IF (ABS(WIMPX).GT.0.0.AND.NFACT.GT.0.0.AND.MFACT.GT.0.0)
C    1            AMPMOD = ABS(0.2/WIMPX)*MIN(1./FMFACT,1./NSTAR)
C              IF (AMPMOD.GT.1.0) AMPMOD = 1.0
C  IRMOD = 1 means local buckling; 2 means general buck.; 3 means panel buck.
C              IF (IRMOD.EQ.1.AND.
C    1                 (W0LOC.NE.0.0.OR.WYYGEN.NE.0.0.OR.WYYPAN.NE.0.)) 
C    1         CALL RADWAV(ABS(WYYGEN)+ABS(WYYPAN),RORIG,WYYAMP,
C    1                 AMPMOD*W0LOC,NSTAR,RPX,WGARG,IAMPOV(IRMOD))
C              IF ((IRMOD.EQ.2.OR.IRMOD.EQ.4).AND.W0GLOB.NE.0.)
C    1         CALL RADWAV(0.0,RORIG,WYYAMP,AXLRED*AMPMOD*WG2,NSTAR,RPX,
C    1                  WGARG,IAMPOV(IRMOD))
C              IF (IRMOD.EQ.3.AND.(W0PAN.NE.0.0.OR.WYYGEN.NE.0.0))
C    1         CALL RADWAV(WYYGEN,RORIG,WYYAMP,AMPMOD*W0PAN,NSTAR,RPX,
C    1                  WGARG,IAMPOV(IRMOD))
C              CURCHG = ABS(1./RORIG) - ABS(1./RPX)
C23456789012345678901234567890123456789012345678901234567890123456789012
C              WRITE(8,'(/,A,/,A,A,1P,E12.4,A)')
C    1       ' IN GENSTB:',
C    1       ' Radius of curvature computed from RADWAV',
C    1       ' ******** R(radwav)=',RPX,' *********'
C
C              CURRAD = ABS(1./RORIG)
C              WYYOUT = WG1S*4./RORIG**2
C              CURMOD = CURRAD - ABS(CURCHG)
C              IF (CURMOD.LE.0.01*CURRAD) CURMOD = 0.001*CURRAD
C              RADNEW = (RORIG/ABS(RORIG))/CURMOD
C              RADDIF = ABS(RADNEW - RORIG)/ABS(RORIG)
C              IF (RADDIF.GT.0.0001) THEN
C                 IF (IRMOD.EQ.1) WRITE(8,'(A,/,A,/,1P6E11.3)')
C    1 ' The radius of curvature is modified by initial imperfections:',
C    1 ' Orig.radius  Mod.radius  WYYGEN    WYYOUT    WYYPAN    CURCHG',
C    1   RORIG, RADNEW, ABS(WYYGEN), ABS(WYYOUT), ABS(WYYPAN),
c    1   ABS(CURCHG)
C
C                 IF (IRMOD.EQ.2.OR.IRMOD.EQ.4)
C    1            WRITE(8,'(A,/,A,/,1P6E11.3)')
C    1 ' The radius of curvature is modified by initial imperfections:',
C    1 ' Orig.radius  Mod.radius  CURCHG    WYYOUT    WYYPAN    WYYLOC',
C    1   RORIG, RADNEW, ABS(CURCHG), ABS(WYYOUT), ABS(WYYPAN),
C    1   ABS(WYYLOC)
C
C                 IF (IRMOD.EQ.3) WRITE(8,'(A,/,A,/,1P6E11.3)')
C    1 ' The radius of curvature is modified by initial imperfections:',
C    1 ' Orig.radius  Mod.radius  WYYGEN    WYYOUT    CURCHG    WYYLOC',
C    1   RORIG, RADNEW, ABS(WYYGEN), ABS(WYYOUT), ABS(CURCHG),
C    1   ABS(WYYLOC)
C              ENDIF
C           ENDIF
C  End of IF (NNPRT.GE.2) condition 
C23456789012345678901234567890123456789012345678901234567890123456789012
C END AUG 2006
         ENDIF
C end of (IDESGN.EQ.0.AND.IFLAT.EQ.0.AND.ILABLY.EQ.9150
C                    .AND.(ILABEL.EQ.7165.OR.ILABEL.EQ.7175)) condition
C
         GO TO 2955
      ENDIF
C end of (INDX.EQ.2.AND.IPRELM.EQ.3.AND.IRMOD.NE.0
C                  .AND.NOSRCH(ILOADS).EQ.1) condition
C END JULY 2006
C BEG MAR 1998
      I = MBAR
      J = NBAR
C BEG MAY 1998
C BEG OCT 2001
      IF (J.GT.0.AND.I.LE.50.AND.J.LE.10.AND.I.GT.0) THEN
C END OCT 2001
       IF (MNCHEK(I,J).EQ.0) THEN
         MNCHEK(I,J) = 1
         EIGCHK(I,J) = EIGSAV
         CSLCHK(I,J) = CSLOPE
       ENDIF
      ENDIF
C END MAY 1998
C END MAR 1998
C BEG FEB 1996
      IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
      NSAVE = NBAR
      MSAVE = MBAR
      CSAVE = CSLOPE    
      FNBR = NBAR + FINCR     
      IF (FNBR.LT.3.) CSLOPE = 0.0
      NNDIV= FNBR
      NDIV = NNDIV/ABS(INCR)
      NMOD = MOD(NDIV,3)
      IF (FNBR.LT.50.AND.NMOD.EQ.0) CSLOPE = 0.
      IF (M.EQ.1) NMAXM1 = FNBR     
      CALL EIG(A,B,FNBR,MBAR,PX,PY,PXY,CSLOPE,IDESGN,EIGVAL,
     1 INDX,FFLAT,IAGAIN,0)
C BEG MAR 1998
      I = MBAR
      J = FNBR
C BEG MAY 1998
C BEG OCT 2001
      IF (J.GT.0.AND.I.LE.50.AND.J.LE.10.AND.I.GT.0) THEN
C END OCT 2001
       IF (MNCHEK(I,J).EQ.0) THEN
         MNCHEK(I,J) = 1
         EIGCHK(I,J) = EIGVAL
         CSLCHK(I,J) = CSLOPE
       ENDIF
      ENDIF
C END MAY 1998
C END MAR 1998
C BEG FEB 1996
      IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
      ESVNEW = EIGVAL
      ES1NEW = EIGSAV
      IF (PARX2.GT.0.1.AND.ICHEK.EQ.1.AND.M.EQ.1.AND.ISOGRD.EQ.0) THEN
         CALL EIGKNK(PARX1,PARX2,NSAVE,EIGSAV,PX,PY,PXY,ES1NEW,
     1                  IFILE,NPRNT,INDX,0,0)
         CALL EIGKNK(PARX1,PARX2,FNBR, EIGVAL,PX,PY,PXY,ESVNEW,
     1                  IFILE,NPRNT,INDX,0,0)
      ENDIF
C BEG JAN 1994
      IF (IDONNL(INDX).EQ.0.AND.(INDX.EQ.2.OR.INDX.EQ.3)) THEN
         FNCYL = NSAVE*RFCYL
         NNCYL  = FNCYL +0.5
C BEG OCT 1996
         IF (NNCYL.GT.4) GO TO 2221
C END OCT 1996
         IF (NNCYL.EQ.2) EIGN2(INDX) = ES1NEW
         IF (NNCYL.EQ.3) EIGN3(INDX) = ES1NEW
         IF (NNCYL.EQ.4) EIGN4(INDX) = ES1NEW
         FNCYL = FNBR*RFCYL
         NNCYL  = FNCYL +0.5
C BEG OCT 1996
         IF (NNCYL.GT.4) GO TO 2221
C END OCT 1996
         IF (NNCYL.EQ.2) EIGN2(INDX) = ESVNEW
         IF (NNCYL.EQ.3) EIGN3(INDX) = ESVNEW
         IF (NNCYL.EQ.4) EIGN4(INDX) = ESVNEW
         NBAR = FNBR
         GO TO 30
      ENDIF
C END JAN 1994
      IF (ESVNEW.LE.ES1NEW) THEN
         NBAR = FNBR
         GO TO 30
      ENDIF
C     
C     ES1NEW.LT.ESVNEW BRANCH...    
C     
      FINCR = - FINCR   
      SINCR = -1.0
      N = NBAR    
      IF (N.EQ.NMINA) GO TO 40    
      GO TO 35    
C     
   30 CONTINUE    
      MSAVE = MBAR
C     
      NSAVE = NBAR
      CSAVE = CSLOPE    
      EIGSAV = EIGVAL   
      IF (N.GT.NMAX.AND.EIGVAL.EQ.10.E16) GO TO 40    
C BEG JULY 1998
      IF ((N.GE.NMAX.AND.ICHEK.EQ.1).OR.
     1    (N.LE.NMIN.AND.ICHEK.EQ.1)) THEN
         IF (EIGSV2.LT.EIGSAV) GO TO 405
         GO TO 408
      ENDIF
C END JULY 1998
C BEG MAR 1998
      IF (N.GT.10000) GO TO 40
C END MAR 1998
C     
   35 CONTINUE    
C     
      NBAR = NBAR + FINCR
      INCR = (1. + 0.03*NBAR)*SINCR
      FINCR = INCR
      N = NBAR    
      IF (N.LT.NMINA) GO TO 40    
      IF (M.EQ.1) NMINM1 = AMIN1(NMINM1,NBAR)   
      IF (M.EQ.1) NMAXM1 = AMAX1(NMAXM1,NBAR)   
C
      IF (NBAR.LT.3.) CSLOPE = 0.0
      NDIV = N/ABS(INCR)
      NMOD = MOD(NDIV,3)
      IF (NBAR.LT.50.AND.NMOD.EQ.0) CSLOPE = 0.
      CALL EIG(A,B,NBAR,MBAR,PX,PY,PXY,CSLOPE,IDESGN,EIGVAL,
     1 INDX,FFLAT,IAGAIN,0)
C BEG MAR 1998
      I = MBAR
      J = NBAR
C BEG MAY 1998
C BEG OCT 2001
      IF (J.GT.0.AND.I.LE.50.AND.J.LE.10.AND.I.GT.0) THEN
C END OCT 2001
       IF (MNCHEK(I,J).EQ.0) THEN
         MNCHEK(I,J) = 1
         EIGCHK(I,J) = EIGVAL
         CSLCHK(I,J) = CSLOPE
       ENDIF
      ENDIF
C END MAY 1998
C END MAR 1998
C BEG FEB 1996
      IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
      ESVNEW = EIGVAL
      ES1NEW = EIGSAV
      IF (PARX2.GT.0.1.AND.ICHEK.EQ.1.AND.M.EQ.1.AND.ISOGRD.EQ.0) THEN
         CALL EIGKNK(PARX1,PARX2,NSAVE,EIGSAV,PX,PY,PXY,ES1NEW,
     1                  IFILE,NPRNT,INDX,0,0)
         CALL EIGKNK(PARX1,PARX2,NBAR, EIGVAL,PX,PY,PXY,ESVNEW,
     1                  IFILE,NPRNT,INDX,0,0)
      ENDIF
C BEG JAN 1994
      IF (IDONNL(INDX).EQ.0.AND.(INDX.EQ.2.OR.INDX.EQ.3)) THEN
         FNCYL = NSAVE*RFCYL
         NNCYL  = FNCYL +0.5
C BEG OCT 1996
         IF (NNCYL.GT.4) GO TO 2221
C END OCT 1996
         IF (NNCYL.EQ.2) EIGN2(INDX) = ES1NEW
         IF (NNCYL.EQ.3) EIGN3(INDX) = ES1NEW
         IF (NNCYL.EQ.4) EIGN4(INDX) = ES1NEW
         FNCYL = NBAR*RFCYL
         NNCYL  = FNCYL +0.5
C BEG OCT 1996
         IF (NNCYL.GT.4) GO TO 2221
C END OCT 1996
         IF (NNCYL.EQ.2) EIGN2(INDX) = ESVNEW
         IF (NNCYL.EQ.3) EIGN3(INDX) = ESVNEW
         IF (NNCYL.EQ.4) EIGN4(INDX) = ESVNEW
C BEG OCT 1996
         IF (NNCYL.EQ.4) GO TO 2221
         IF (NNCYL.LT.2) GO TO 2221
C END OCT 1996
         NMOD = MOD(N,3)
         IF (RBB.LT.1.0.AND.NMOD.EQ.0) THEN
            IF (TEST.LT.0.99.AND.ABS(CSLOPE).GT.1.5) THEN
C              CSLOPE = 0.0
            ENDIF
         ENDIF
         GO TO 30
      ENDIF
C  End of IF (IDONNL(INDX).EQ.0.AND.(INDX.EQ.2.OR.INDX.EQ.3)) section.
C END JAN 1994
      IF (ESVNEW.LE.ES1NEW) THEN
         NMOD = MOD(N,3)
         IF (RBB.LT.1.0.AND.NMOD.EQ.0) THEN
            IF (TEST.LT.0.99.AND.ABS(CSLOPE).GT.1.5) THEN
C              CSLOPE = 0.0
            ENDIF
         ENDIF
         GO TO 30
      ENDIF
C     
   40 CONTINUE    
C     
      MMAX = MTEST/2    
      IF (N.GT.4) MMAX = N*2  
      IF (N.GT.NMAX.AND.EIGVAL.EQ.10.E16) MMAX = MAX(MTEST,10)
      IF (EIGSV2.LT.EIGSAV.AND.M.GT.1) GO TO 405
      MINCR = 1. + 0.1*MBAR   
      FMINCR = MINCR    
      MBAR = MBAR + FMINCR    
      M = MBAR    
      IF (M.GT.MMAX) GO TO 408
      NBAR = NSAVE
C BEG FEB 1998
      IF (N.GT.NMAX.AND.EIGVAL.EQ.10.E16) THEN
         NBAR = NMINA
C BEG MAR 1998
         IF (RFCYL.LT.RFCYLX) NBAR = 2.
C END MAR 1998
      ENDIF
C END FEB 1998
      SINCR = 1.0 
      INCR = 1. + 0.03*NBAR
      FINCR = INCR
      MMAXM1 = MBAR     
      CSLOPE = CSAVE    
      CSAVE2 = CSAVE    
      EIGSV2 = EIGSAV   
      MSAVE2 = MSAVE    
      NSAVE2 = NSAVE    
C BEG AUG 1994
      IF (NPRNT.EQ.INDX) WRITE(8,*)
     1   ' BEFORE 405: ICHEK,KOUNT,EIGSAV,MSAVE,NSAVE,CSAVE=',
     1                 ICHEK,KOUNT,EIGSAV,MSAVE,NSAVE,CSAVE
C END AUG 1994
      GO TO 9     
C     
  405 CONTINUE    
      EIGSAV = EIGSV2   
      CSAVE = CSAVE2    
      MSAVE = MSAVE2    
      NSAVE = NSAVE2    
C BEG AUG 1994
      IF (NPRNT.EQ.INDX) WRITE(8,*)
     1   ' BEFORE 408: ICHEK,KOUNT,EIGSAV,MSAVE,NSAVE,CSAVE=',
     1                 ICHEK,KOUNT,EIGSAV,MSAVE,NSAVE,CSAVE
C END AUG 1994
  408 CONTINUE    
C BEG MAR 1998
C23456789012345678901234567890123456789012345678901234567890123456789012
      MSAVEX = MSAVE
      NSAVEX = NSAVE
      IF (NPRNT.EQ.INDX) THEN
         WRITE(8,'(A,/,A,1P,2I6,2I5,3E11.3)')
     1' (low-m) mode: ICHEK ISAND  m    n      s        EIGSAV    TEST',
     1'            ', ICHEK,ISAND,MSAVEX,NSAVEX,CSAVE,EIGSAV,TEST
      ENDIF
C END MAR 1998
C BEG APR 1998
      EIGMNC(1) = EIGSAV
      SLOPEX(1) = CSAVE
      MWAVEX(1) = MSAVEX
      NWAVEX(1) = NSAVEX
C BEG JAN 2006
      TESTX(1) = TEST
C END JAN 2006
      IF (NPRNT.EQ.INDX) WRITE(8,'(A,1P,7E10.2)')
     1  ' EIGMNC=',(EIGMNC(I),I=1,7)
C END APR 1998
      MBAR = 1.   
      M = 1 
      IF (ICHEK.EQ.1) GO TO 415
      IF (NMINM1.GE.3.0) GO TO 410  
      BL1 = B/NMAXM1
      BL2 = 0.2*ABS(R)
      IF (IAGAIN.NE.2.AND.FFLAT.GT.0.5) BL2=10000.*BL1
      BL3 = 0.2*A
      IF (BL1.LT.BL2.AND.BL1.LT.BL3) GO TO 420
C     
C      CHECK FOR HIGH-N RANGE....   
C     
      IF (NPRNT.EQ.INDX) WRITE(8,*)' Now check for high NBAR range...'
C BEG MAR 1998
      ISAND = 0
C END MAR 1998
      NBAR = MAX((B/BL2),(B/BL3))
      INCR = 1. + .03*NBAR
      FINCR= INCR 
      N = NBAR    
      NMAX = MAX0(100,N*5)    
      NBAR = N    
      NMIN = NMAXM1     
      GO TO 413   
C     
  410 CONTINUE    
C     
C     CHECK FOR LOW-N RANGE....     
C     
      IF (NPRNT.EQ.INDX) WRITE(8,*)' Now check for low NBAR range...'
      NBAR = 2.0  
      N = NBAR
      FINCR = 1.0 
      INCR = FINCR
      NMAX = NMINM1     
      NMINM1 = FNMINA
  413 SINCR = 1.0 
      CSLOPE = 0. 
      NSAVE1 = NSAVE    
      MSAVE1 = MSAVE    
      CSAVE1 = CSAVE    
      EIGSV1 = EIGSAV   
      ICHEK = 1   
C BEG AUG 1994
      IF (NPRNT.EQ.INDX) WRITE(8,*)
     1   ' BEFORE 415: ICHEK,KOUNT,EIGSAV,MSAVE,NSAVE,CSAVE=',
     1                 ICHEK,KOUNT,EIGSAV,MSAVE,NSAVE,CSAVE
C END AUG 1994
      GO TO 9     
  415 CONTINUE    
C BEG MAR 1998
      IF (ICHEK.EQ.1.AND.ISAND.NE.ISNDSV) THEN
         MSAVEX = MSAVE
         NSAVEX = NSAVE
         IF (NPRNT.EQ.INDX) THEN
          WRITE(8,'(A)')' **(high-n) with ISAND set to zero(Donnell)***'
          WRITE(8,'(A,/,A,1P,2I6,2I5,3E11.3)')
     1' (low-m) mode: ICHEK ISAND  m    n      s        EIGSAV    TEST',
     1'            ', ICHEK,ISAND,MSAVEX,NSAVEX,CSAVE,EIGSAV,TEST
         ENDIF
         ISAND = ISNDSV
         CSAVE = 0.
         CALL EIG(A,B,NSAVE,MSAVE,PX,PY,PXY,CSAVE,IDESGN,EIGSAV,
     1   INDX,FFLAT,IAGAIN,0)
C23456789012345678901234567890123456789012345678901234567890123456789012
         IF (NPRNT.EQ.INDX) THEN
          WRITE(8,'(A)')' ***(high-n) with ISAND changed to orig. value'
          WRITE(8,'(A,/,A,1P,2I6,2I5,3E11.3)')
     1' (low-m) mode: ICHEK ISAND  m    n      s        EIGSAV    TEST',
     1'            ', ICHEK,ISAND,MSAVEX,NSAVEX,CSAVE,EIGSAV,TEST
         ENDIF
      ENDIF
C END MAR 1998
C     
      ESVNEW = EIGSAV
      ES1NEW = EIGSV1
      IF (PARX2.GT.0.1.AND.ISOGRD.EQ.0) THEN
         FNSV1 = NSAVE1
         CALL EIGKNK(PARX1,PARX2,NSAVE,EIGSAV,PX,PY,PXY,ESVNEW,
     1                  IFILE,NPRNT,INDX,1,0)
         CALL EIGKNK(PARX1,PARX2,FNSV1,EIGSV1,PX,PY,PXY,ES1NEW,
     1                  IFILE,NPRNT,INDX,1,0)
      ENDIF
C BEG MAR 1998
C23456789012345678901234567890123456789012345678901234567890123456789012
      MSAVEX = MSAVE
      NSAVEX = NSAVE
      IF (NPRNT.EQ.INDX) THEN
          WRITE(8,'(A,/,A,1P,2I6,3E11.3)')
     1' (low-m, low-n) mode:  m     n     s         EIGSV1     ES1NEW',
     1'                  ', MSAVE1,NSAVE1,CSAVE1,EIGSV1,ES1NEW
          WRITE(8,'(A,/,A,1P,2I6,3E11.3)')
     1' (low-m, high-n) mode: m     n     s         EIGSAV     ESVNEW',
     1'                  ', MSAVEX,NSAVEX,CSAVE,EIGSAV,ESVNEW
      ENDIF
C END MAR 1998
C BEG APR 1998
      EIGMNC(1) = EIGSV1
      SLOPEX(1) = CSAVE1
      MWAVEX(1) = MSAVE1
      NWAVEX(1) = NSAVE1
C BEG JAN 2006
      TESTX(1)  = TEST
C END JAN 2006
      EIGMNC(2) = EIGSAV
      SLOPEX(2) = CSAVE
      MWAVEX(2) = MSAVEX
      NWAVEX(2) = NSAVEX
C BEG JAN 2006
      TESTX(2)  = TEST
C END JAN 2006
      IF (NPRNT.EQ.INDX) WRITE(8,'(A,1P,7E10.2)')
     1  ' EIGMNC=',(EIGMNC(I),I=1,7)
C END APR 1998
      IF (ESVNEW.LT.ES1NEW) GO TO 420     
      EIGSAV = EIGSV1   
      CSAVE = CSAVE1    
      MSAVE = MSAVE1    
      NSAVE = NSAVE1    
C BEG AUG 1994
      IF (NPRNT.EQ.INDX) WRITE(8,*)
     1   ' BEFORE 420: ICHEK,KOUNT,EIGSAV,MSAVE,NSAVE,CSAVE=',
     1                 ICHEK,KOUNT,EIGSAV,MSAVE,NSAVE,CSAVE
C END AUG 1994
  420 CONTINUE    
C     
C     NOW CHECK FOR MINIMUM CRITICAL LOAD CORRESPONDING TO HIGHER M...  
C     
C BEG APR 1998
      TEST = TESTSV
C END APR 1998
      ICHEK = 0   
      NMIN = NMINA    
      SINCR = 1.0 
C BEG MAR 1998
      INCR  = SINCR
C END MAR 1998
      NMAX = 10000
      IF (MTEST.LE.1) GO TO 50
C     
C     CHECK FOR MINIMUM CRITICAL LOAD AT HI VALUES OF AXIAL WAVES, MBAR 
C     
C BEG MAR 1997
C   REMOVE "WRITE" STATEMENT AND MOVE DOWN AFTER "NBAR = NMINA"
C END MAR 1997
      MBAR = MTEST
      MMAX = MAX0(100,MTEST*5)
      NBAR = NMINA    
C BEG MAR 1998
      IF (RFCYL.LT.RFCYLX) NBAR = 2.
C END MAR 1998
C BEG MAR 1997
      IF (NPRNT.EQ.INDX) THEN
         WRITE(8,*) ' MBAR,1000*MMAX,NBAR=',MBAR,1000*MMAX,NBAR
         WRITE(8,*) '   NEXT EXPLORE LARGE MBAR RANGE...'
      ENDIF
C END MAR 1997
C BEG MAR 1998  
      NMAXM1 = 1.0
      ISAND = ISNDSV
      ITESTM = 0
C BEG APR 1998
      ITESTQ = ITSTXX
      IF (ITESTY.EQ.1) ITESTQ = ITESTY
      IF (ITESTQ.EQ.1.AND.TEST.LT.0.99.AND.MTEST.GT.2) THEN
C END APR 1998
         TEST = 1.1
         TESTMX = TEST
         ITESTM = 1
C BEG DEC 2005
C23456789012345678901234567890123456789012345678901234567890123456789012
C        IF (NPRNT.EQ.INDX) WRITE(8,'(A,1P,E12.4)')
         IF (NNPRT.GE.2) THEN
           WRITE(8,'(/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,1P,E12.4)')
     1   ' The following section is entered only if TEST < 1.0 and the',
     1   ' number of axial halfwaves is at least 3. (TEST < 1.0 means',
     1   ' that the buckling mode from PANDA-type theory is of the',
     1   ' type shown in Fig.9(b),p.554 of the "Theoretical basis..."',
     1   ' paper. TEST > 1.0 means that Fig.9(a) applies.)', 
     1   ' In this section a ratio, EIGRAT = EIGTST/EIGTS2, is',
     1   ' obtained in which EIGTST = eigenvalue with TEST > 1.0 and',
     1   '                   EIGTS2 = eigenvalue with TEST < 1.0.',
     1   ' The ratio EIGRAT is always 1.0 unless EIGTST < EIGTS2.',
     1   ' High m range: New value of "TEST" is assigned: TEST = ',TEST
         ENDIF
C END DEC 2005
C BEG APR 1998
         IF (ITESTY.EQ.0) THEN
C BEG MAY 2007
            CALL MOVER(MNCHEK,1,MNCHKS,1,1000)
            CALL MOVER(EIGCHK,1,EICHKS,1,1000)
            CALL MOVER(CSLCHK,1,CSCHKS,1,1000)
C END MAY 2007
         ENDIF
C END APR 1998
      ENDIF
C END MAR 1998
C BEG APR 1998
      IF (TEST.LT.0.99.AND.ITESTY.EQ.1) THEN
         ITESTY = 0
         GO TO 420
      ENDIF
C END APR 1998
   44 CONTINUE
C BEG MAR 1998  
      IF (NBAR.LT.3.) CSLOPE = 0.0
      NDIV = N/ABS(INCR)
      NMOD = MOD(NDIV,3)
      IF (NBAR.LT.50.AND.NMOD.EQ.0) CSLOPE = 0.
C END MAR 1998
      CALL EIG(A,B,NBAR,MBAR,PX,PY,PXY,CSLOPE,IDESGN,EIGVAL,
     1 INDX,FFLAT,IAGAIN,0)
C BEG JULY 1998
C     IF (NBAR.LT.0.001) THEN
C        IF (MBAR.LT.FMBLL) EIGVAL = 10.E+16
C        IF (TEST.GE.1.0.AND.ABS(CSLOPE).GT.1.0) EIGVAL = 10.E+16
C     ENDIF
C END JULY 1998
C BEG MAR 1998
C BEG APR 1998
C23456789012345678901234567890123456789012345678901234567890123456789012
      IF (ITESTY.EQ.0) THEN
         I = MBAR
         J = NBAR
C BEG MAY 1998
C BEG OCT 2001
         IF (J.GT.0.AND.I.LE.50.AND.J.LE.10.AND.I.GT.0) THEN
C END OCT 2001
          IF (MNCHEK(I,J).EQ.0) THEN
            MNCHEK(I,J) = 1
            EIGCHK(I,J) = EIGVAL
            CSLCHK(I,J) = CSLOPE
          ENDIF
         ENDIF
C END MAY 1998
      ENDIF
C END APR 1998
C END MAR 1998
C BEG FEB 1996
      IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
      CALL MINM(A,B,PX,PY,PXY,CSLOPE,IDESGN,MBAR,NBAR,EIGVAL,     
C BEG APR 1998
     1 INDX,EIG,PARX1,PARX2,FFLAT,IAGAIN,MNCHEK,EIGCHK,CSLCHK,ITESTY)  
C END APR 1998
C BEG JULY 1998
      IF (NBAR.LT.0.001) THEN
         IF (MBAR.LT.FMBLL) EIGVAL = 10.E+16
         IF (TEST.GE.1.0.AND.ABS(CSLOPE).GT.1.0) EIGVAL = 10.E+16
      ENDIF
C END JULY 1998
C BEG FEB 1996
      IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
      M = MBAR    
C BEG MAR 1998
      IF (ICHEK.EQ.0.AND.ITESTM.EQ.1.AND.M.LT.2) THEN
C BEG APR 1998
         IF (ITESTY.EQ.0) THEN
C BEG MAY 2007
            CALL MOVER(MNCHKS,1,MNCHEK,1,1000)
            CALL MOVER(EICHKS,1,EIGCHK,1,1000)
            CALL MOVER(CSCHKS,1,CSLCHK,1,1000)
C END MAY 2007
         ENDIF
         ITESTY = 0
C END APR 1998
         ITESTM = 0
         TEST = TESTSV
         IF (NPRNT.EQ.INDX) WRITE(8,'(A,1P,E12.4)')
     1 ' high m range: Value of "TEST" re-assigned: TEST = ',TEST
         MBAR = MTEST
         NBAR = NMINA    
         IF (RFCYL.LT.RFCYLX) NBAR = 2.
         GO TO 44
      ENDIF
C END MAR 1998
      KOUNT = 1   
C     
   45 CONTINUE    
C     
C     CHANGE NBAR...    
C     
      KOUNT = KOUNT + 1 
      CCSAV = CSLOPE    
      EIGSSV = EIGVAL   
      MMSAV = MBAR
      NNSAV = NBAR
      FNNSAV = NNSAV
C BEG AUG 1994
      IF (NPRNT.EQ.INDX) WRITE(8,*)
     1   ' BEFORE 46: ICHEK,KOUNT,EIGSSV,MMSAV,NNSAV,CCSAV=',
     1                ICHEK,KOUNT,EIGSSV,MMSAV,NNSAV,CCSAV
C END AUG 1994
   46 CONTINUE    
      INCR = (1.0 + 0.03*NBAR)*SINCR
C BEG MAR 1998
      IF (INCR.EQ.0) INCR = 1
C END MAR 1998
      FINCR = INCR
      NBAR = NBAR + FINCR     
      IF (RBB.GT.1.0) THEN
C BEG MAR 1998
         IF (FNNSAV.NE.0.0) MBAR = MBAR*NBAR/FNNSAV
C END MAR 1998
         IF (MBAR.LT.1.0) MBAR = 1.1
      ENDIF
      M = MBAR
      N = NBAR 
C BEG MAR 1998
      IF (ICHEK.EQ.0.AND.ITESTM.EQ.0.AND.N.EQ.0) GO TO 47
      IF (ICHEK.EQ.0.AND.N.EQ.-1) GO TO 47
      IF (N.LE.NMIN.AND.ICHEK.EQ.1) GO TO 455   
C END MAR 1998   
      IF (N.GE.NMAX.AND.ICHEK.EQ.1) GO TO 455   
C BEG MAR 1998
      IF (N.GT.10000) GO TO 50
C END MAR 1998
C BEG DEC 1998
      IF (M.GT.10000) GO TO 50
C END DEC 1998
      IF (N.GT.100.AND.EIGVAL.EQ.10.E16) GO TO 50
      IF (N.GT.10.AND.M.GT.MMAX.AND.EIGVAL.EQ.10.E16) GO TO 50
      IF (M.EQ.1) M = 2 
      MBAR = M    
C BEG MAR 1998
      NMAXM1 = AMAX1(NMAXM1,NBAR)
      IF (NBAR.LT.3.) CSLOPE = 0.0
      NDIV = N/ABS(INCR)
      NMOD = MOD(NDIV,3)
      IF (NBAR.LT.50.AND.NMOD.EQ.0) CSLOPE = 0.
C END MAR 1998
      CALL EIG(A,B,NBAR,MBAR,PX,PY,PXY,CSLOPE,IDESGN,EIGVAL,
     1 INDX,FFLAT,IAGAIN,0)
C BEG JULY 1998
C     IF (NBAR.LT.0.001) THEN
C        IF (MBAR.LT.FMBLL) EIGVAL = 10.E+16
C        IF (TEST.GE.1.0.AND.ABS(CSLOPE).GT.1.0) EIGVAL = 10.E+16
C     ENDIF
C END JULY 1998
C BEG MAR 1998
C BEG APR 1998
      IF (ITESTY.EQ.0) THEN
         I = MBAR
         J = NBAR
C BEG MAY 1998
C BEG OCT 2001
         IF (J.GT.0.AND.I.LE.50.AND.J.LE.10.AND.I.GT.0) THEN
C END OCT 2001
          IF (MNCHEK(I,J).EQ.0) THEN
            MNCHEK(I,J) = 1
            EIGCHK(I,J) = EIGVAL
            CSLCHK(I,J) = CSLOPE
          ENDIF
         ENDIF
C END MAY 1998
      ENDIF
C END APR 1998
C END MAR 1998
C BEG FEB 1996
      IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
      CALL MINM(A,B,PX,PY,PXY,CSLOPE,IDESGN,MBAR,NBAR,EIGVAL,     
C BEG APR 1998
     1 INDX,EIG,PARX1,PARX2,FFLAT,IAGAIN,MNCHEK,EIGCHK,CSLCHK,ITESTY)  
C END APR 1998
C BEG JULY 1998
      IF (NBAR.LT.0.001) THEN
         IF (MBAR.LT.FMBLL) EIGVAL = 10.E+16
         IF (TEST.GE.1.0.AND.ABS(CSLOPE).GT.1.0) EIGVAL = 10.E+16
      ENDIF
C END JULY 1998
C BEG FEB 1996
      IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
      M = MBAR    
C BEG MAR 1998
      IF (ICHEK.EQ.0.AND.ITESTM.EQ.1.AND.M.LT.2) THEN
C BEG APR 1998
         IF (ITESTY.EQ.0) THEN
C BEG MAY 2007
            CALL MOVER(MNCHKS,1,MNCHEK,1,1000)
            CALL MOVER(EICHKS,1,EIGCHK,1,1000)
            CALL MOVER(CSCHKS,1,CSLCHK,1,1000)
         ENDIF
         ITESTY = 0
C END APR 1998
         ITESTM = 0
         TEST = TESTSV
         IF (NPRNT.EQ.INDX) WRITE(8,'(A,1P,E12.4)')
     1 ' high m range: Value of "TEST" re-assigned: TEST = ',TEST
         MBAR = MTEST
         NBAR = NMINA    
         IF (RFCYL.LT.RFCYLX) NBAR = 2.
         GO TO 44
      ENDIF
C END MAR 1998
C
      IF (EIGVAL.LE.EIGSSV) THEN
         NMOD = MOD(N,3)
         IF (RBB.LT.1.0.AND.NMOD.EQ.0) THEN
            IF (TEST.LT.0.99.AND.ABS(CSLOPE).GT.1.5) THEN
            ENDIF
         ENDIF
         GO TO 45
      ENDIF
C
C BEG MAR 1998
      IF (ICHEK.EQ.0) THEN
         IF (ISAND.EQ.0) GO TO 47
         IF (IRMOD.NE.0) GO TO 47
         IF (RFCYL.GE.RFCYLX) GO TO 47
         IF (KOUNT.EQ.2.AND.N.LT.3) GO TO 47
         IF (KOUNT.GT.2.AND.SINCR.GT.0.) GO TO 47
         IF (SINCR.LT.0.0) GO TO 47
      ENDIF
      IF (ICHEK.EQ.1) THEN
         IF (KOUNT.EQ.2.AND.N.LT.3) GO TO 455
         IF (KOUNT.GT.2.AND.SINCR.GE.0.) GO TO 455
         IF (SINCR.LE.0.0) GO TO 455
      ENDIF
C END MAR 1998
      CSLOPE = CCSAV    
      NBAR = NNSAV
      MBAR = MMSAV
      SINCR = -1.0
      GO TO 46    
   47 CONTINUE    
C BEG MAR 1998
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG DEC 2005
C     IF (NPRNT.EQ.INDX) THEN
      IF (NNPRT.GE.2) THEN
C END DEC 2005
          IF (ICHEK.EQ.0) WRITE(8,'(A)')' ***(low-n)***'
          WRITE(8,'(A,/,A,1P,2I6,2I5,3E11.3)')
     1' (high-m) mode:ICHEK ISAND  m    n      s      EIGENVALUE  TEST',
     1'            ', ICHEK,ISAND,MMSAV,NNSAV,CCSAV,EIGSSV,TEST
      ENDIF
C END MAR 1998
C BEG APR 1998
      IF (ITESTY.EQ.1) THEN
         ITESTY = 0
         EIGTST = EIGSSV
         MMTST  = MMSAV
         NNTST  = NNSAV
         CCTST  = CCSAV
C BEG DEC 2005
C        IF (NPRNT.EQ.INDX) WRITE(8,'(A,1P,E12.4)')
         IF (NNPRT.GE.2) WRITE(8,'(A,1P,E12.4)')
     1 ' EIGTST needed for EIGRAT = EIGTST/EIGTS2: EIGTST=',EIGTST
C END DEC 2005
         GO TO 420
      ELSE
         IF (ICHEK.EQ.0) THEN
            IF (EIGSSV.GT.0.)  EIGRAT = EIGTST/EIGSSV
            IF (EIGRAT.GT.1.0) EIGRAT = 1.0
C BEG DEC 2005
C           IF (NPRNT.EQ.INDX) WRITE(8,'(A,1P,E12.4)')
C BEG JAN 2006
            IF (NNPRT.GE.2.AND.IRMOD.NE.0) WRITE(8,'(A,1P,E12.4)')
     1    ' EIGTS2 needed for EIGRAT = EIGTST/EIGTS2: EIGTS2=',EIGSSV
C END JAN 2006
C BEG JUN 2007
C           IF (NNPRT.GE.2) WRITE(8,'(A,1P,E12.4,/)')
            IF (NNPRT.GE.2.OR.(NNPRT.GE.0.AND.EIGRAT.LT.1.0))
     1                      WRITE(8,'(A,1P,E12.4,/)')
     1    ' Ratio needed in ARBOCZ: EIGTST/EIGTS2= EIGRAT=',EIGRAT
C END JUN 2007
C END DEC 2005
         ENDIF
      ENDIF
      EIGMNC(3) = EIGSSV
      SLOPEX(3) = CCSAV
      MWAVEX(3) = MMSAV
      NWAVEX(3) = NNSAV
C BEG JAN 2006
      TESTX(3)  = TEST
C END JAN 2006
      IF (NPRNT.EQ.INDX) WRITE(8,'(A,1P,7E10.2)')
     1  ' EIGMNC=',(EIGMNC(I),I=1,7)
C END APR 1998
      NLARGE = NMAXM1   
C BEG MAR 1998
      EIGSV1 = 10.E+16
      NSAVE1 = 1
C END MAR 1998
C     
C     CHECK FOR HIGH-N RANGE...     
C     
      IF (NPRNT.EQ.INDX) WRITE(8,*)' Now check for high NBAR range...'
      FNBAR1 = B/(0.4*ABS(R))  
C     FNBAR2 = (B/A)*SQRT(SQRT(C44N/C55N))*FLOAT(MTEST)/2.0
      FNBAR2 = 0.0
      NBAR = MAX(FNBAR1,FNBAR2)
      IF (IAGAIN.NE.2.AND.FFLAT.GT.0.5) NBAR = 0.
      N = NBAR    
      IF (N.LE.NLARGE) GO TO 460    
      NBAR = N    
      MBAR = MTEST
      NMIN = NLARGE     
      NMAX = MAX0(100,N*5)    
      ICHEK = 1   
C BEG MAR 1998
      ISAND = 0
      TEST = TESTSV
C END MAR 1998
      CSLOPE = 0.0
      NSAVE1 = NNSAV    
      MSAVE1 = MMSAV    
      CSAVE1 = CCSAV    
      EIGSV1 = EIGSSV   
C BEG AUG 1994
      IF (NPRNT.EQ.INDX) WRITE(8,*)
     1  ' BEFORE 455: ICHEK,KOUNT,EIGSV1,MSAVE1,NSAVE1,CSAVE1=',
     1                ICHEK,KOUNT,EIGSV1,MSAVE1,NSAVE1,CSAVE1
C END AUG 1994
      GO TO 44    
C     
  455 CONTINUE  
C BEG MAR 1998
      IF (ICHEK.EQ.1.AND.ISAND.NE.ISNDSV) THEN
         IF (NPRNT.EQ.INDX) THEN
          WRITE(8,'(A)')' **(high-n) with ISAND set to zero(Donnell)***'
          WRITE(8,'(A,/,A,1P,2I6,2I5,3E11.3)')
     1' (high-m) mode:ICHEK ISAND  m    n      s        EIGSAV    TEST',
     1'            ', ICHEK,ISAND,MMSAV,NNSAV,CCSAV,EIGSSV,TEST
         ENDIF
         FNNSAV = NNSAV
         FMMSAV = MMSAV
         ISAND = ISNDSV
         CCSAV = 0.
         CALL EIG(A,B,FNNSAV,FMMSAV,PX,PY,PXY,CCSAV,IDESGN,EIGSSV,
     1   INDX,FFLAT,IAGAIN,0)
C23456789012345678901234567890123456789012345678901234567890123456789012
         IF (NPRNT.EQ.INDX) THEN
          WRITE(8,'(A)')' ***(high-n) with ISAND changed to orig. value'
          WRITE(8,'(A,/,A,1P,2I6,2I5,3E11.3)')
     1' (high-m) mode:ICHEK ISAND  m    n      s        EIGSAV    TEST',
     1'            ', ICHEK,ISAND,MMSAV,NNSAV,CCSAV,EIGSSV,TEST
         ENDIF
      ENDIF
C END MAR 1998
      ESVNEW = EIGSSV
      ES1NEW = EIGSV1
      IF (PARX2.GT.0.1.AND.ISOGRD.EQ.0) THEN
         FNSV1 = NSAVE1
         FNSV2 = NNSAV
         CALL EIGKNK(PARX1,PARX2,FNSV2,EIGSSV,PX,PY,PXY,ESVNEW,
     1                  IFILE,NPRNT,INDX,1,0)
         CALL EIGKNK(PARX1,PARX2,FNSV1,EIGSV1,PX,PY,PXY,ES1NEW,
     1                  IFILE,NPRNT,INDX,1,0)
      ENDIF
C BEG MAR 1998
C23456789012345678901234567890123456789012345678901234567890123456789012
      IF (NPRNT.EQ.INDX) THEN
          WRITE(8,'(A,/,A,1P,2I6,3E11.3)')
     1' (high-m, low-n) mode: m     n     s         EIGSV1     ES1NEW',
     1'                  ', MSAVE1,NSAVE1,CSAVE1,EIGSV1,ES1NEW
          WRITE(8,'(A,/,A,1P,2I6,3E11.3)')
     1' (high-m,high-n) mode: m     n     s         EIGSSV     ESVNEW',
     1'                  ', MMSAV,NNSAV,CCSAV,EIGSSV,ESVNEW
      ENDIF
C
C BEG APR 1998
      EIGMNC(3) = EIGSV1
      SLOPEX(3) = CSAVE1
      MWAVEX(3) = MSAVE1
      NWAVEX(3) = NSAVE1
C BEG JAN 2006
      TESTX(3)  = TEST
C END JAN 2006
      EIGMNC(4) = EIGSSV
      SLOPEX(4) = CCSAV
      MWAVEX(4) = MMSAV
      NWAVEX(4) = NNSAV
C BEG JAN 2006
      TESTX(4)  = TEST
C END JAN 2006
      IF (NPRNT.EQ.INDX) WRITE(8,'(A,1P,7E10.2)')
     1  ' EIGMNC=',(EIGMNC(I),I=1,7)
C BEG OCT 2001
      IF (NPRNT.EQ.INDX) WRITE(8,'(A,I8)')' MMXCHK=',MMXCHK
C END OCT 2001
C END APR 1998
      IF (ESVNEW.LT.1.001*ES1NEW) THEN
         ITESTM = 0
         GO TO 460
      ENDIF
C END MAR 1998
      EIGSSV = EIGSV1   
      CCSAV = CSAVE1    
      MMSAV = MSAVE1    
      NNSAV = NSAVE1    
C BEG AUG 1994
      IF (NPRNT.EQ.INDX)
     1 WRITE(8,*) ' BEFORE 460: ICHEK,KOUNT,EIGSSV,MMSAV,NNSAV,CCSAV=',
     1                          ICHEK,KOUNT,EIGSSV,MMSAV,NNSAV,CCSAV
C END AUG 1994
  460 CONTINUE    
      ESVNEW = EIGSSV
      ES1NEW = EIGSAV
      IF (PARX2.GT.0.1.AND.ISOGRD.EQ.0) THEN
         FNSV2 = NNSAV
         CALL EIGKNK(PARX1,PARX2,FNSV2,EIGSSV,PX,PY,PXY,ESVNEW,
     1                  IFILE,NPRNT,INDX,1,0)
         CALL EIGKNK(PARX1,PARX2,NSAVE,EIGSAV,PX,PY,PXY,ES1NEW,
     1                  IFILE,NPRNT,INDX,1,0)
      ENDIF
C BEG AUG 1994
      IF (NPRNT.EQ.INDX) WRITE(8,*)
     1   ' AFTER 460: ICHEK,EIGSSV,ESVNEW,EIGSAV,ES1NEW=',
     1                ICHEK,EIGSSV,ESVNEW,EIGSAV,ES1NEW
C END AUG 1994
      FACT = 1.001
C BEG AUG 1993
      IF (IRMOD.NE.0.AND.IRMOD.NE.1) FACT = 1.0
      IF (IDESGN.EQ.0.AND.IRMOD.EQ.2.AND.ISTIF(2).NE.0) THEN
         MLOC93 = MMSAV + 0.1
         NLOC93 = NNSAV + 0.1
         EILCSS = EIGSSV
         CSLP93 = CCSAV
         TLOC93 = TEST
         IF (TLOC93.LT.1.0.AND.ABS(CSLP93).GT.0.0) THEN
            CSLP93=1./CSLP93
         ENDIF
      ENDIF
C END AUG 1993
      IF (ESVNEW.GE.FACT*ES1NEW) GO TO 50
      IF (IRMOD.EQ.4) GO TO 50
C     
      MBAR = MMSAV
      NBAR = NNSAV
      EIGVAL = EIGSSV   
      CSLOPE = CCSAV    
C BEG MAR 1998
      IF (ITESTM.EQ.1) THEN
         ITESTM = 2
         IF (NPRNT.EQ.INDX) WRITE(8,'(A,1P,E12.4)')
     1 ' The high - m eigenvalue is critical. New "TEST" = ',TESTMX
      ENDIF
C END MAR 1998
C BEG AUG 1994
      IF (NPRNT.EQ.INDX)
     1 WRITE(8,*) ' BEFORE 50: ICHEK,KOUNT,EIGVAL,MBAR,NBAR,CSLOPE=',
     1                         ICHEK,KOUNT,EIGVAL,MBAR,NBAR,CSLOPE
C END AUG 1994
      GO TO 100   
C     
   50 CONTINUE    
C     
      MBAR = MSAVE
      NBAR = NSAVE
      EIGVAL = EIGSAV   
      CSLOPE = CSAVE    
C BEG AUG 1994
      IF (NPRNT.EQ.INDX)
     1 WRITE(8,*) ' AFTER  50: ICHEK,KOUNT,EIGVAL,MBAR,NBAR,CSLOPE=',
     1                         ICHEK,KOUNT,EIGVAL,MBAR,NBAR,CSLOPE
C END AUG 1994
C     
  100 CONTINUE    
C     
C BEG MAR 1998
      IF (IDESGN.EQ.0) THEN
         EIGVLS = EIGVAL
         ISAND = ISNDSV
         TEST = TESTSV
C BEG APR 1998
C   POSSIBLY CHECK FOR HI NUMBER OF AXIAL WAVES WITH ZERO NODAL SLOPE..
         IF (IFFLAT.EQ.0.AND.(IBAL.NE.0.OR.ISHEAR.NE.0)) THEN
            IBALS = IBAL
            ISHEAS = ISHEAR
            IBAL = 0
            ISHEAR = 0
            INCR = MWAVEX(3)/10
C BEG JULY 1998
            IF (ISAND.EQ.0) INCR = MWAVEX(3)/30
C END JULY 1998
            IF (INCR.EQ.0) INCR = 1
            MMINIM = MWAVEX(3)/3
            IF (MMINIM.EQ.0) MMINIM = 1
            MMAXIM = 1.5*FLOAT(MWAVEX(3))
            IF (MMAXIM.LT.3) MMAXIM = 3
C23456789012345678901234567890123456789012345678901234567890123456789012
            IF (NPRNT.EQ.INDX) WRITE(8,'(A,/,A,4I7)')
     1 ' Search over (m,n) with slope = 0. NMXCHK,MMINIM,MMAXIM,INCR=',
     1 '                                  ',NMXCHK,MMINIM,MMAXIM,INCR
C BEG JULY 1998
            NUP = NMXCHK
            IF (IFLAT.EQ.0.AND.NUP.EQ.1) NUP = 2
            DO 531 J = 1,NUP
             JJ = J
 5305        CONTINUE
             EIGMNJ(JJ) = 10.E+16
C END JULY 1998
             DO 530 I = MMINIM,MMAXIM,INCR
               CSLDUM = 0.
               FFI = I
C BEG JULY 1998
               FFJ = JJ
C END JULY 1998
               CALL EIG(A,B,FFJ,FFI,PX,PY,PXY,CSLDUM,IDESGN,
     1                 EIGMN0,INDX,FFLAT,IAGAIN,0)
C BEG JULY 1998
               EIGMNJ(JJ) = MIN(EIGMN0,EIGMNJ(JJ))
C END JULY 1998
               IF (EIGMN0.LT.EIGMNC(5)) THEN
                  MWAVEX(5) = I
C BEG JULY 1998
                  NWAVEX(5) = JJ
C END JULY 1998
                  SLOPEX(5) = 0.
                  EIGMNC(5) = EIGMN0
C BEG JAN 2006
                  TESTX(5)  = TEST
C END JAN 2006
               ENDIF
  530        CONTINUE
C BEG JULY 1998
C BEG DEC 2003
C            IF (JJ.GT.1.AND.JJ.LE.10.AND.JJ.GE.NUP
             IF (JJ.GT.1.AND.JJ.LT.10.AND.JJ.GE.NUP
C END DEC 2003
     1                 .AND.EIGMNJ(JJ).LT.EIGMNJ(JJ-1)
     1                 .AND.EIGMNJ(JJ).LE.1.00001*EIGMNC(5)) THEN
               JJ = JJ + 1
               GO TO 5305
             ENDIF
C END JULY 1998
  531       CONTINUE
C23456789012345678901234567890123456789012345678901234567890123456789012
            IF (NPRNT.EQ.INDX) WRITE(8,'(A,/,A,1P,E12.4,2I4,1P,E12.4)')
     1   ' Minimum eigenvalue and mode shape, (m,n,slope) with slope=0',
     1    ' EIGMNC(5),MWAVEX(5),NWAVEX(5),SLOPEX(5)=',
     1      EIGMNC(5),MWAVEX(5),NWAVEX(5),SLOPEX(5)
            IBAL = IBALS
            ISHEAR = ISHEAS
            IF (EIGMNC(5).LT.EIGMNC(3)) THEN
               EIGMNC(3) = EIGMNC(5)
               MWAVEX(3) = MWAVEX(5)
               NWAVEX(3) = NWAVEX(5)
               SLOPEX(3) = SLOPEX(5)
C BEG JAN 2006
               TESTX(3)  = TESTX(5)
C END JAN 2006
            ENDIF
            IF (EIGMNC(5).LT.EIGVAL) THEN
               EIGVAL = EIGMNC(5)
               MBAR   = MWAVEX(5)
               NBAR   = NWAVEX(5)
               CSLOPE = SLOPEX(5)
            ENDIF
         ENDIF
C   End of IF (IFFLAT.EQ.0.AND.(IBAL.NE.0.OR.ISHEAR.NE.0)) section.
C
C   NOW CHECK EIGENVALUES CORRESPONDING TO THE (M,N) COMBINATIONS NOT
C   PREVIOUSLY PROCESSED...
         EIGCHM = 10.E+16
         IF (NPRNT.EQ.INDX) WRITE(8,'(/,A,/,A,2I4)')
     1 ' Next, check eigenvalues corresponding to some (m,n)',
     1 ' combinations not previously explored: MMXCHK,NMXCHK=',
     1   MMXCHK,NMXCHK
C BEG OCT 2001
C BEG MAY 2007
C        IF (MMXCHK.GT.50.OR.NMXCHK.GT.10) THEN
         IF (MMXCHK.GT.50.OR.NMXCHK.GT.20) THEN
C END MAY 2007
            WRITE(8,'(A,/,A,2I8,/,A)')
     1    ' ********* Bad MMXCHK or NMXCHK. Run aborting *******',
     1    '    MMXCHK,NMXCHK=',MMXCHK,NMXCHK,
     1    ' ****************************************************'
            CALL ERREX
         ENDIF
C END OCT 2001
         DO 540 I = 1,MMXCHK
C BEG DEC 2005
C BEG OCT 2006
C        IF (NNPRT.GE.2.AND.ITYPE.EQ.2.AND.IDESGN.EQ.0) THEN
C         IF ((ILABLY.EQ.9150.AND.ILABLW.EQ.7165).OR.
C    1         (ILABLY.EQ.9260.AND.ILABLW.EQ.7185)) THEN
C23456789012345678901234567890123456789012345678901234567890123456789012
C            IF (I.EQ.1) WRITE(8,'(/,A,/,A,2I4)')
C    1     ' Next, check eigenvalues corresponding to some (m,n)',
C    1     ' combinations not previously explored: MMXCHK,NMXCHK=',
C    1       MMXCHK,NMXCHK
C            WRITE(8,'(A,I3,A,I3,A,/,(20I3))')
C    1   ' MNCHEK(m=',I,',n) = 0 for "yes" 1 for "no" checking; n=1 to',
C    1     NMXCHK,':',(MNCHEK(I,J),J=1,NMXCHK)
C         ENDIF
C        ENDIF
C END OCT 2006
C END DEC 2005
         DO 535 J = 1,NMXCHK
            IF (J.LT.NMINA) GO TO 534
            IF (MNCHEK(I,J).EQ.1) GO TO 534
            IF (J.LT.3) CSLCHK(I,J) = 0.0
            NDIV = J
            NMOD = MOD(NDIV,3)
            IF (NMOD.EQ.0) CSLCHK(I,J) = 0.
            XNBAR = J
            XMBAR = I
            CALL EIG(A,B,XNBAR,XMBAR,PX,PY,PXY,CSLCHK(I,J),IDESGN,
     1               EIGCHK(I,J),INDX,FFLAT,IAGAIN,0)
  534       CONTINUE
            EIGCHM = MIN(EIGCHM,EIGCHK(I,J))
  535    CONTINUE
  540    CONTINUE
         IF (MMXCHK.GT.1) THEN
            EIGSML = 10.E+16
            DO 542 J = 1,NMXCHK
               IF (EIGCHK(MMXCHK,J).LT.EIGSML) THEN
                  EIGSML = EIGCHK(MMXCHK,J)
                  NNSML  = J
               ENDIF
  542       CONTINUE
            EIGSM2 = 10.E+16
            MMX1 = MMXCHK - 1
            DO 5421 J = 1,NMXCHK
               IF (EIGCHK(MMX1,J).LT.EIGSM2) THEN
                  EIGSM2 = EIGCHK(MMX1,J)
               ENDIF
 5421       CONTINUE
C BEG JULY 1998
            IF (NPRNT.EQ.INDX) WRITE(8,'(A,I2,/,A,/,1P,4E12.4)')
     1    ' IN GENSTB FOR ISAND=',ISAND,' EIGSML,EIGSM2,EIGCHM,EIGVAL=',
     1                                    EIGSML,EIGSM2,EIGCHM,EIGVAL
C END JULY 1998
            IF (EIGSML.LT.EIGSM2.AND.EIGSML.LE.EIGCHM.AND.
     1                 (EIGSML.LE.2.*EIGVAL.OR.ISAND.EQ.0)) THEN
               IF (NNPRT.GE.2.OR.NPRNT.EQ.INDX)
C BEG JULY 1998
     1             WRITE(8,'(A,/,A,I3,A,/,A,I3,A,/,A,/,A,I3)')
C23456789012345678901234567890123456789012345678901234567890123456789012
     1 ' In GENSTB:',
C END JULY 1998
     1 ' The eigenvalue corresponding to m=MMXCHK=',MMXCHK,' axial',
     1 ' halfwaves and n=',NNSML,' circ. halfwaves is critical and is',
     1 ' at the upper end of the final search for missed eigenvalues.',
     1 ' Therefore, we must continue the search over m > ',MMXCHK
C
               KOUNT = 0
               XMBAR = MMXCHK
               XMBARS= MMXCHK
               CSLHMS= CSLCHK(MMXCHK,NNSML)
               XNBAR = NNSML
               EIGSVH = EIGSML
  544          CONTINUE
               KOUNT = KOUNT + 1
               INCR = 0.2*XMBAR + 0.1
               IF (INCR.LT.1) INCR = 1
               XMBAR = XMBAR + INCR 
               NDIV = XMBAR - 1.
               NMOD = MOD(NDIV,3)
               IF (NMOD.EQ.0) CSLHIM = 0.
               IF (KOUNT.EQ.1) CSLHIM = 0.
C23456789012345678901234567890123456789012345678901234567890123456789012
               CALL EIG(A,B,XNBAR,XMBAR,PX,PY,PXY,CSLHIM,IDESGN,
     1                  EIGHIM,INDX,FFLAT,IAGAIN,0)
C BEG JULY 1998
               IF (NPRNT.EQ.INDX) WRITE(8,'(A,1P,4E12.4)')
     1       ' EIGHIM,XMBAR,XNBAR,CSLHIM=',EIGHIM,XMBAR,XNBAR,CSLHIM
C END JULY 1998
               IF (EIGHIM.LT.EIGSVH) THEN
                  EIGSVH = EIGHIM
                  XMBARS = XMBAR
                  CSLHMS = CSLHIM
                  IF (KOUNT.LT.30) GO TO 544
               ENDIF
               IF (EIGSVH.LE.EIGVAL) THEN
                  EIGVAL = EIGSVH
                  MBAR   = XMBARS
                  NBAR   = XNBAR
                  CSLOPE = CSLHMS
               ENDIF
               EIGMNC(6) = EIGSVH
               MWAVEX(6) = XMBARS
               NWAVEX(6) = XNBAR
               SLOPEX(6) = CSLHMS
C BEG JAN 2006
               TESTX(6)  = TEST
C END JAN 2006
            ENDIF
C      End of IF (EIGSML.LT.EIGSM2.AND.EIGSML.LE.EIGCHM.AND.
C    1           (EIGSML.LE.2.*EIGVAL.OR.ISAND.EQ.0)) section 
         ENDIF
C   End of IF (MMXCHK.GT.1) section
C END APR 1998
         IF (NPRNT.EQ.INDX) WRITE(IFILE,'(A,/,A,/,A)')
     1   ' BUCKLING MODES AND LOAD FACTORS CORRESPONDING TO',
     1   '  LOW NUMBER OF AXIAL (M) AND HOOP (N) HALFWAVES',
     1   '   M   N    SLOPE     EIGENVALUE   LOWEST EIGENVALUE'
         DO 547 I = 1,MMXCHK
         DO 543 J = 1,NMXCHK
            IF (NPRNT.EQ.INDX) WRITE(IFILE,'(1P,2I4,1P,3E12.4)')
     1         I,J,CSLCHK(I,J),EIGCHK(I,J),EIGVAL
            IF (EIGCHK(I,J).LT.EIGMNC(6)) THEN
               EIGMNC(6) = EIGCHK(I,J)
               MWAVEX(6) = I
               NWAVEX(6) = J
               SLOPEX(6) = CSLCHK(I,J)
C BEG JAN 2006
               TESTX(6)  = TEST
C END JAN 2006
            ENDIF
            IF (EIGCHK(I,J).LE.0.0.OR.EIGVAL.LE.EIGCHK(I,J)) GO TO 543
            EIGVAL = EIGCHK(I,J)
            CSLOPE = CSLCHK(I,J)
            MBAR   = I
            NBAR   = J
  543    CONTINUE
  547    CONTINUE
C BEG JULY 1998
C  Possibly check for helicoidal buckling....
         EIGMNC(7) = 10.E+16
         IF (IFLAT.EQ.0.AND.(B/ABS(R)).GT.2.0.AND.IRMOD.EQ.0
     1     .AND.NWAVEX(3).NE.0.AND.MWAVEX(3).GE.1.AND.ISAND.NE.0) THEN
            IF (NPRNT.EQ.INDX) WRITE(IFILE,'(/,A)')
     1    ' Next, check for helicoidal buckling (n = 0 circ. waves)...'
            TESTSX = TEST
            TEST = 10.
            EIGMNM = 10.E+16
            MWAVXI = 0.1*MWAVEX(3)
            IF (MWAVXI.LT.1) MWAVXI = 1
            MWVX3M = MWAVEX(3) - MWAVXI
            MWVX3P = MWAVEX(3) + MWAVXI
            IF (MWVX3M.LT.1) MWVX3M = 1
            IMX = 0
            DO 5472 I = MWVX3M,MWVX3P,MWAVXI
               IMX=IMX + 1
C BEG OCT 2001
               IF (IMX.GT.50) GO TO 5472
C END OCT 2001
               CSLPNA(IMX) = 0.
               EIGPNA(IMX) = 10.E+16
               XMBAR = I
               XNBAR = 0.
               CALL EIG(A,B,XNBAR,XMBAR,PX,PY,PXY,CSLPNA(IMX),IDESGN,
     1                  EIGPNA(IMX),INDX,FFLAT,IAGAIN,0)
               IF (XMBAR.LT.FMBLL) EIGPNA(IMX) = 10.E+16
               IF (ABS(CSLPNA(IMX)).GT.0.5) EIGPNA(IMX) = 10.E+16
               EIGMNM = MIN(EIGMNM,EIGPNA(IMX))
 5472       CONTINUE
            IMX = 0
            DO 5474 I = MWVX3M,MWVX3P,MWAVXI
               IMX=IMX + 1
C BEG OCT 2001
               IF (IMX.GT.50) GO TO 5474
C END OCT 2001
               DIFF = ABS(EIGMNM - EIGPNA(IMX))/EIGMNM
               IF (DIFF.LT.0.0001) THEN
                  MWAVEX(7) = I
                  NWAVEX(7) = 0
                  SLOPEX(7) = CSLPNA(IMX)
                  EIGMNC(7) = EIGPNA(IMX)
C BEG JAN 2006
                  TESTX(7)  = TEST
C END JAN 2006
                  GO TO 5475
               ENDIF
 5474       CONTINUE
 5475       CONTINUE
            IF (EIGMNC(7).LT.EIGVAL) THEN
               EIGVAL = EIGMNC(7)
               CSLOPE = SLOPEX(7)
               MBAR   = MWAVEX(7)
               NBAR   = NWAVEX(7)
               TESTSX = 10.
               ITESTM = 0
               EIGRAT = 1.
            ENDIF
            TEST = TESTSX
         ENDIF
C    End of IF (IFLAT.EQ.0.AND.(B/ABS(R)).GT.2.0.AND.IRMOD.EQ.0
C    1  .AND.NWAVEX(3).NE.0.AND.MWAVEX(3).GE.1.AND.ISAND.NE.0) section 
C END JULY 1998
C BEG APR 1998 
C        IF (NPRNT.EQ.INDX.OR.(NNPRT.GE.2.AND.ILABLY.EQ.9260)) THEN
C BEG JAN 2006 
C        IF (NPRNT.EQ.INDX.OR.NNPRT.GE.2) THEN
         IF (NPRNT.EQ.INDX.OR.NNPRT.GE.2.OR.
     1   (ILABLY.EQ.9140.AND.ILABEL.EQ.7185.AND.NNPRT.GE.1
     1                  .AND.IRMOD.EQ.0.AND.IDESGN.EQ.0)) THEN
C BEG JAN 2007
C23456789012345678901234567890123456789012345678901234567890123456789012
            IF (IDESGN.EQ.0.AND.ILABLY.EQ.9150.AND.ILABEL.EQ.7165) THEN
               WRITE(IFILE,'(/,A,A)')
     1       ' At 9150 in STRIMP, 7165 in BUCPAN,',
     1       ' General instability, PERFECT shell:'
               IF (ISAND.EQ.0) WRITE(8,'(/,A)')
     1       ' Buckling load factors are computed from Donnell theory'
               IF (ISAND.EQ.1) WRITE(8,'(/,A)')
     1       ' Buckling load factors are computed from Sanders theory'
               IF (ISAND.EQ.2) WRITE(8,'(/,A)')
     1       ' Buckling load factors are computed from Marlowe theory'
C              WRITE(IFILE,'(A,A,/,A,/,A)')
C    1       ' At 9150 in STRIMP, 7165 in BUCPAN,',
C    1       ' General instability, PERFECT shell:',
C    1       ' Donnell theory is always used in this section of PANDA2',
C    1       ' where imperfection sensitivity is being computed.'
            ENDIF
C END JAN 2007
C
            IF (ILABLY.EQ.9140.AND.ILABEL.EQ.7185
     1                  .AND.IRMOD.EQ.0.AND.IDESGN.EQ.0)
     1      WRITE(IFILE,'(/,A,A)')
     1    ' At 9140 in STRUCT, 7185 in BUCPAN,',
     1    ' General instability, PERFECT shell:'
C END JAN 2006
            WRITE(8,'(A,1P,7E10.2)')' EIGMNC=',(EIGMNC(I),I=1,7)
            WRITE(8,'(A,1P,7E10.2)')' SLOPEX=',(SLOPEX(I),I=1,7)
            WRITE(8,'(A,1P,I5,6I10)')' MWAVEX=',(MWAVEX(I),I=1,7)
            WRITE(8,'(A,1P,I5,6I10)')' NWAVEX=',(NWAVEX(I),I=1,7)
C BEG JAN 2006
            WRITE(8,'(A,1P,7E10.2)')' TESTX =',(TESTX(I),I=1,7)
C END JAN 2006
         ENDIF
C BEG JUN 1999
         EIGSML = 10.E+26
         MMSML = 1
         CCSML = 0.
C END JUN 1999
         DO 549 I = 1,7
C BEG APR 2011
            FKNEIG = 1.0
            IF (MWAVEX(I).NE.0) THEN
C
C              do the following only if there are smeared stringers
C              (not isogrid) and only if we are at 9260 in STRUCT.
C              INDX = 2 means "general buckling', INDX=3 means
C              buckling between rings with smeared stringers.
C
               IF (ISTIF(1).NE.0.AND.ISOGRD.EQ.0.AND.ILABLY.EQ.9260
     1                          .AND.(INDX.EQ.2.OR.INDX.EQ.3)) THEN
                 EIGAFT = EIGMNC(I)
                 IF (PARX2.GT.0.1.AND.ISOGRD.EQ.0) THEN
                    FNWAVE = NWAVEX(I)
                    CALL EIGKNK(PARX1,PARX2,FNWAVE,EIGMNC(I),
     1                PX,PY,PXY,EIGAFT,IFILE,NPRNT,INDX,1,0)
                    FKNEIG = EIGAFT/EIGMNC(I)
C                   WRITE(8,'(A,2I5,1P,3E12.4)')
C    1            ' ILABLY, I, EIGMNC(I),EIGAFT,FKNEIG=',
C    1              ILABLY, I, EIGMNC(I),EIGAFT,FKNEIG
                    IF (FKNEIG.GT.1.0) FKNEIG = 1.0
                 ENDIF
               ENDIF
C
C              end of doing only if there are smeared stringers
C              and only if we are at 9260 in SUBROUTINE STRUCT.
C
               IF (FKNEIG*EIGMNC(I).LT.EIGSML) THEN
                  EIGSML = FKNEIG*EIGMNC(I)
                  EIGORI = EIGMNC(I)
                  MMSML  = MWAVEX(I)
                  NNSML  = NWAVEX(I)
                  CCSML  = SLOPEX(I)
               ENDIF
            ENDIF
C END APR 2011
  549    CONTINUE
         IF (NPRNT.EQ.INDX) WRITE(8,'(A,/,1P,E12.4,2I6,1P,3E12.4)')
     1 ' AFTER 549: EIGSML,MMSML,NNSML,CCSML,EIGVLS,EIGVAL=',
     1              EIGSML,MMSML,NNSML,CCSML,EIGVLS,EIGVAL
         EIGDIF = ABS(EIGVLS - EIGVAL)/ABS(EIGVAL)
         IF (ITESTM.EQ.2.AND.EIGDIF.LT.0.01) TEST = TESTMX
         IF (EIGDIF.GT.0.01) THEN
            EIGRAT = 1.0
            IF (NPRNT.EQ.INDX) WRITE(8,'(A,1P,E12.4)')
     1    ' Ratio needed in ARBOCZ: EIGTST/EIGTS2= EIGRAT=',EIGRAT
         ENDIF
C BEG APR 2011
         IF (MBAR.LT.0.999.OR.ILABLY.EQ.9260) THEN
            MBAR = MMSML
            NBAR = NNSML
            CSLOPE = CCSML
            EIGVAL = EIGORI
         ENDIF
C END APR 2011
         IF (NPRNT.EQ.INDX) THEN
            WRITE(8,'(A,1P,E12.4)') ' Final value of "TEST" = ',TEST
            WRITE(8,'(A,/,A,1P,4E12.4)')
     1    ' Refine solution. Current values are:',
     1    ' MBAR,NBAR,CSLOPE,EIGVAL=',MBAR,NBAR,CSLOPE,EIGVAL
         ENDIF
C END APR 1998
C BEG JUN 1999
C BEG APR 2011 (comment them out here; move them up)
C        IF (MBAR.LT.0.999) THEN
C           MBAR = MMSML
C           NBAR = NNSML
C           CSLOPE = CCSML
C           EIGVAL = EIGSML
C        ENDIF
C END APR 2011
C END JUN 1999
C BEG JUN 2006
C BEG AUG 2006
C        IF (IFLAT.EQ.0.AND.ILABEL.EQ.7165.AND.ILABLY.EQ.9150) THEN
         IF (IFLAT.EQ.0.AND.(ILABEL.EQ.7165.OR.ILABEL.EQ.7175)
     1                                    .AND.ILABLY.EQ.9150) THEN
C END AUG 2006
C         We are in imperfection sensitivity section:
C         general buckling of perfect shell.
            AXLRED = 1.0
            IF (MMSML.NE.0.AND.IXIMPF(ILOADS).NE.0) THEN
               AXLTST = A/FLOAT(MMSML) 
               AXLRED = AXLTST/AXLWAV(ILOADS)
            ENDIF
            IF (NNPRT.GE.3) WRITE(8,
     1   '(/,A,/,A,/,A,/,A,/,A,1P,E12.4,/,A,1P,E12.4,/,A,I3,/,A,/)')
     1    ' ********* NOTE ********* NOTE ********** NOTE *********',
     1    ' Factor by which general buckling modal imperfection',
     1    ' amplitude will be changed for the purpose of computing',
     1    ' the effective radius of curvature of the initially',
     1    ' imperfect and loaded panel, AXLRED =',AXLRED,
     1    ' Axial length in this model of the panel, A = ',A,
     1    ' Axial halfwaves in critical general mode, MMSML=',MMSML,
     1    ' ******* END NOTE ****** END NOTE ****** END NOTE *********'
C23456789012345678901234567890123456789012345678901234567890123456789012
         ENDIF
C END JUN 2006
C BEG JULY 2006
         IF (IRMOD.NE.0.AND.ILABEL.NE.7140.AND.ILABLY.NE.9160
     1                 .AND.ILABLY.NE.9220.AND.ILABLY.LE.9240) THEN
            C44C55N = C44N/C55N
            AXLENG = A/FLOAT(MMSML)
            IF (MMSML.EQ.1.AND.INOT4(IRMOD).EQ.0)  INOT4(IRMOD) = 1
            IF (C44C55N.GT.2.0.AND.INOT4(IRMOD).EQ.0)
     1                                             INOT4(IRMOD) = 1
            IF (AXLENG.GE.2.0*ABS(R).AND.INOT4(IRMOD).EQ.0)
     1                                             INOT4(IRMOD) = 1
            IF (NNPRT.GE.2)
     1         WRITE(8,'(/,A,/,5I7,/,A,1P,E12.4,/,A,1P,E12.4)')
     1    '  ILABLY, ILABEL, IRMOD, MMSML, INOT4(IRMOD)=',
     1      ILABLY,ILABEL,IRMOD,MMSML,INOT4(IRMOD),
     1    ' Axial/hoop bending stiffnesses, C44N/C55N=',C44C55N,
     1    ' Axial halfwavelength of buckle, AXLENG=',AXLENG
            IF (NNPRT.GE.2.AND.INOT4(IRMOD).EQ.1)
     1WRITE(8,'(A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1    ' Rather than arbitrarily set the amplitude factor for',
     1    ' the growth of the buckling modal imperfection equal to',
     1    ' 4.0 (WYYAMP = 4.0), which is ordinarily done for shells',
     1    ' under almost pure axial compression, the strategy',
     1    ' described in the PANDA2 news Item No. 662 will be pursued.',
     1    ' This strategy is thought to be valid because of one or',
     1    ' more of the following conditions:',
     1    '  1. The critical number of axial halfwaves, m = 1.',
     1    '  2. The axial bending stiffness is more than 2 times the',
     1    '     hoop bending stiffness. (C44n/C55n > 2.0).',
     1    '  3. The axial halfwavelength of the critical buckling mode',
     1    '     is greater than or equal to the shell diameter.',
     1    ' The effect is to make optimum designs less conservative.'
         ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
C END JULY 2006
      ENDIF
C  End of IF (IDESGN.EQ.0) section
C END MAR 1998
C BEG JUN 2004
      IF (ILABLY.EQ.9260.AND.NNPRT.GE.2) THEN
         WRITE(8,'(A,1P,2E12.4)')
     1 ' Before refinement (before CALL EIG), EIGVAL,CSLOPE=',
     1                                        EIGVAL,CSLOPE
      ENDIF
C END JUN 2004
C BEG MAY 1997
C BEG JUN 2006
C     IF (ILABLY.EQ.9260.AND.ILABEL.EQ.7185) THEN
C        NPRNTS = NPRNT
C        NPRNT = INDX
C        WRITE(8,*) A,B,NBAR,MBAR
C        WRITE(8,*) PX,PY,PXY,CSLOPE
C        WRITE(8,*) INDX,FFLAT,IAGAIN
C     ENDIF
C END JUN 2006
      CALL EIG(A,B,NBAR,MBAR,PX,PY,PXY,CSLOPE,IDESGN,EIGVAL,
     1 INDX,FFLAT,IAGAIN,1)
C BEG JUN 2006
C     IF (ILABLY.EQ.9260.AND.ILABEL.EQ.7185) THEN
C        NPRNT = NPRNTS
C     ENDIF
C END JUN 2006
C BEG DEC 2004
C23456789012345678901234567890123456789012345678901234567890123456789012
C     NPRNTS = NPRNT
      IF (IDESGN.EQ.0.AND.ILABLY.EQ.9150.AND.ILABEL.EQ.7165) THEN
C BEG MAR 2005
         IF (ABS(WG2).GT.0.0001.AND.NNPRT.GE.0) THEN
C BEG JAN 2006 
C BEG JAN 2007
C23456789012345678901234567890123456789012345678901234567890123456789012
            WRITE(IFILE,'(/,A,A)')
     1    ' At 9150 in STRIMP, 7165 in BUCPAN,',
     1    ' General instability, PERFECT shell:'
            IF (ISAND.EQ.0) WRITE(8,'(/,A)')
     1    ' Buckling load factors are computed from Donnell theory'
            IF (ISAND.EQ.1) WRITE(8,'(/,A)')
     1    ' Buckling load factors are computed from Sanders theory'
            IF (ISAND.EQ.2) WRITE(8,'(/,A)')
     1    ' Buckling load factors are computed from Marlowe theory'
C           WRITE(IFILE,'(A,A,/,A,/,A)')
C    1    ' At 9150 in STRIMP, 7165 in BUCPAN,',
C    1    ' General instability, PERFECT shell:',
C    1    ' Donnell theory is always used in this section of PANDA2',
C    1    ' where imperfection sensitivity is being computed.' 
C END JAN 2007
C END JAN 2006 
            WRITE(IFILE,'(A,1P,7E10.2)')' EIGMNC=',(EIGMNC(I),I=1,7)
            WRITE(IFILE,'(A,1P,7E10.2)')' SLOPEX=',(SLOPEX(I),I=1,7)
            WRITE(IFILE,'(A,1P,I5,6I10)')' MWAVEX=',(MWAVEX(I),I=1,7)
            WRITE(IFILE,'(A,1P,I5,6I10)')' NWAVEX=',(NWAVEX(I),I=1,7)
C BEG JAN 2006
            WRITE(IFILE,'(A,1P,7E10.2)')' TESTX =',(TESTX(I),I=1,7)
C END JAN 2006
         ENDIF
C END MAR 2005
         JJJ1 = JJJ + 1
         EHILOW(JJJ1,ILOADS,ICASE) = 0.
         IF (EIGMNC(1).LT.10.E+05.AND.EIGMNC(3).LT.10.E+05
     1                          .AND.MWAVEX(3).NE.MWAVEX(1)) THEN
            EIGDIQ = EIGMNC(3) - EIGMNC(1)
            IF (ABS(EIGDIQ).GT.0.) THEN
               EHILOW(JJJ1,ILOADS,ICASE) = EIGDIQ/ABS(EIGDIQ)
            ELSE
               EHILOW(JJJ1,ILOADS,ICASE) = 1.
            ENDIF
            IF (NNPRT.GE.0) WRITE(8,'(/,A,/,A,I5,A,I5,A,/)')
     1    ' *** PART 1: general instability imperfection sensitivity:',
     1    ' *** At statement label ',ILABLY,' in STRIMP; At label',
     1      ILABEL,' in BUCPAN *****'
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG JAN 2006
            IF (NNPRT.GE.0) WRITE(8,'(/,A,/,A)')
     1' ***** Multiple Minima Eigenvalues: Two different mode shapes:',
     1'         [MWAVEX(1),NWAVEX(1)] and [MWAVEX(3),NWAVEX(3)] *****'
C END JAN 2006
           IF (NNPRT.GE.0)
     1     WRITE(8,'(A,2I3,/,A,I6,A,I6,/,A,I6,A,I6,/,A,/,I4,1P,3E12.4)')
     1    ' Two buckling mode shapes for ILOADS,ICASE=',ILOADS,ICASE,
     1    ' Axial halfwaves: first mode, MWAVEX(1)=',MWAVEX(1),
     1                   '; second mode, MWAVEX(3)=',MWAVEX(3),
     1    ' Circ. halfwaves: first mode, NWAVEX(1)=',NWAVEX(1),
     1                   '; second mode, NWAVEX(3)=',NWAVEX(3),
     1    ' JJJ+1,  eig2,       eig1,     (eig2-eig1)/abs(eig2-eig1)=',
     1      JJJ1,EIGMNC(3),EIGMNC(1),EHILOW(JJJ1,ILOADS,ICASE)
         ENDIF
C        NPRNT = INDX
         CSLOUT=0.
         CALL EIG(A,B,NBAR,MBAR,PX,PY,PXY,CSLOUT,IDESGN,EIGOUT,
     1    INDX,FFLAT,IAGAIN,2)
         KM1 = KOUNTM - 1
         KMP = 0
         DO 301 I = 2,KM1
            IF (EIGSLP(I,2).LT.EIGSLP(I-1,2).AND.
     1          EIGSLP(I,2).LT.EIGSLP(I+1,2)) THEN
               KMP = KMP + 1
               SLPEIG(KMP,1) = EIGSLP(I,1)
               SLPEIG(KMP,2) = EIGSLP(I,2)
C              WRITE(8,'(A,I3,1P,2E12.4)')
C    1       ' KOUNT2,SLOPE,EIGENVALUE=',I,EIGSLP(I,1),EIGSLP(I,2)
            ENDIF
  301    CONTINUE
         JJJ1 = JJJ+1
         SLPRAT(JJJ1,ILOADS,ICASE) = 0.
         IF (KMP.GT.1) THEN
            SLPDIF = SLPEIG(2,2) -SLPEIG(1,2)
            IF (ABS(SLPDIF).GT.0.0) THEN
               SLPRAT(JJJ1,ILOADS,ICASE) = SLPDIF/ABS(SLPDIF)
            ELSE
               SLPRAT(JJJ1,ILOADS,ICASE) = 1.
            ENDIF
            MMODE = MBAR
            NMODE = NBAR
            IF (NNPRT.GE.0) THEN
             WRITE(8,'(/,A,2I6,A,/,A,1P,E12.4,A,I3)')
     1    ' ***** Multiple Minima Eigenvalues vs Slope for Mode (M,N)=',
     1       MMODE,NMODE,' *****',
     1     ' Normalized ratio, (eig2-eig1)/abs(eig2-eig1)=',
     1       SLPRAT(JJJ1,ILOADS,ICASE),' for iteration no.',JJJ1
             DO 302 I = 1,KMP
               WRITE(8,'(A,I3,1P,2E12.4)')
     1       ' I,SLOPE,EIGENVALUE=',I,SLPEIG(I,1),SLPEIG(I,2)
  302        CONTINUE
             WRITE(8,'(A)')
     1     ' *****************************************************'
            ENDIF
         ENDIF
C        NPRNT = NPRNTS
      ENDIF
C  End of IF (IDESGN.EQ.0.AND.ILABLY.EQ.9150.AND.ILABEL.EQ.7165) section 
C23456789012345678901234567890123456789012345678901234567890123456789012
C END DEC 2004
C BEG JUN 2004
      IF (ILABLY.EQ.9260.AND.NNPRT.GE.2) THEN
         WRITE(8,'(A,1P,2E12.4)')
     1 '  After refinement ( after CALL EIG), EIGVAL,CSLOPE=',
     1                                        EIGVAL,CSLOPE
      ENDIF
C END JUN 2004
C BEG JULY 1998 (additional refinement needed for imperfection study)
      NWAVX = NBAR + 0.1
      IF (FACWID.GT.0.0) NWAVX = NWAVX*FACWID
C BEG NOV 2003
C     IF (IRMOD.NE.0.AND.NWAVX.GE.2.AND.NWAVX.LE.35) THEN
      IF (IRMOD.NE.0.AND.NWAVX.GE.2.AND.NWAVX.LE.500) THEN
C END NOV 2003
         CSLNP1 = CSLOPE
         CALL EIG(A,B,NBAR+1.,MBAR,PX,PY,PXY,CSLNP1,IDESGN,EIGNP1,
     1    INDX,FFLAT,IAGAIN,1)
         EIGNM1 = 10.E+16
         IF ((NBAR-1.).GE.0.99999.AND.EIGNP1.GT.EIGVAL) THEN
            CSLNM1 = CSLOPE
            CALL EIG(A,B,NBAR-1.,MBAR,PX,PY,PXY,CSLNM1,IDESGN,EIGNM1,
     1        INDX,FFLAT,IAGAIN,1)
         ENDIF
         IF (EIGNP1.LT.EIGVAL) THEN
            NBAR = NBAR+1.0
            CSLOPE = CSLNP1
            EIGVAL = EIGNP1
C BEG MAR 2005
C23456789012345678901234567890123456789012345678901234567890123456789012
            IF (NNPRT.GE.2) WRITE(8,'(A,/,A,1P,4E12.4)')
     1    ' In refinement section: eigenvalue for NBAR+1.0 is critical',
     1    ' MBAR,NBAR,CSLOPE,EIGVAL=',MBAR,NBAR,CSLOPE,EIGVAL
C END MAR 2005
         ENDIF
         IF (EIGNM1.LT.EIGVAL) THEN
            NBAR = NBAR-1.0
            CSLOPE = CSLNM1
            EIGVAL = EIGNM1
C BEG MAR 2005
C23456789012345678901234567890123456789012345678901234567890123456789012
            IF (NNPRT.GE.2) WRITE(8,'(A,/,A,1P,4E12.4)')
     1    ' In refinement section: eigenvalue for NBAR-1.0 is critical',
     1    ' MBAR,NBAR,CSLOPE,EIGVAL=',MBAR,NBAR,CSLOPE,EIGVAL
C END MAR 2005
         ENDIF
      ENDIF
C  End of IF (IRMOD.NE.0.AND.NWAVX.GE.2.AND.NWAVX.LE.500) section
C
      MWAVX = MBAR + 0.1
C BEG NOV 2003
C     IF (IRMOD.NE.0.AND.MWAVX.GE.2.AND.MWAVX.LE.35) THEN
      IF (IRMOD.NE.0.AND.MWAVX.GE.2.AND.MWAVX.LE.500) THEN
C END NOV 2003
         CSLMP1 = CSLOPE
         CALL EIG(A,B,NBAR,MBAR+1.,PX,PY,PXY,CSLMP1,IDESGN,EIGMP1,
     1    INDX,FFLAT,IAGAIN,1)
         EIGMM1 = 10.E+16
         IF ((MBAR-1.).GE.0.99999.AND.EIGMP1.GT.EIGVAL) THEN
            CSLMM1 = CSLOPE
            CALL EIG(A,B,NBAR,MBAR-1.,PX,PY,PXY,CSLMM1,IDESGN,EIGMM1,
     1        INDX,FFLAT,IAGAIN,1)
         ENDIF
         IF (EIGMP1.LT.EIGVAL) THEN
            MBAR = MBAR+1.0
            CSLOPE = CSLMP1
            EIGVAL = EIGMP1
C BEG MAR 2005
C23456789012345678901234567890123456789012345678901234567890123456789012
            IF (NNPRT.GE.2) WRITE(8,'(A,/,A,1P,4E12.4)')
     1    ' In refinement section: eigenvalue for MBAR+1.0 is critical',
     1    ' MBAR,NBAR,CSLOPE,EIGVAL=',MBAR,NBAR,CSLOPE,EIGVAL
C END MAR 2005
         ENDIF
         IF (EIGMM1.LT.EIGVAL) THEN
            MBAR = MBAR-1.0
            CSLOPE = CSLMM1
            EIGVAL = EIGMM1
C BEG MAR 2005
C23456789012345678901234567890123456789012345678901234567890123456789012
            IF (NNPRT.GE.2) WRITE(8,'(A,/,A,1P,4E12.4)')
     1    ' In refinement section: eigenvalue for MBAR-1.0 is critical',
     1    ' MBAR,NBAR,CSLOPE,EIGVAL=',MBAR,NBAR,CSLOPE,EIGVAL
C END MAR 2005
         ENDIF
      ENDIF
C  End of IF (IRMOD.NE.0.AND.MWAVX.GE.2.AND.MWAVX.LE.500) section
C END JULY 1998
C END MAY 1997
      TESTSH = TEST     
      MWAVE = MBAR + 0.1
      NWAVE = NBAR + 0.1
      IARGTH = IAGAIN
  105 CONTINUE
C BEG OCT 1998
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG OCT 2001
      FKNEIG = 1.0
C BEG JUN 2004
      CURCHG = 0.
C BEG JAN 2007 (comment out the (NNPRT.GE.2.OR.KLAYER(1,1).NE.0) brackets)
C     IF (NNPRT.GE.2.OR.KLAYER(1,1).NE.0) THEN
C END JAN 2007
C END JUN 2004
C
C  CALCULATE RADIUS OF CURVATURE AS MODIFIED BY INITIAL LOCAL OR GLOBAL
C  IMPERFECTION W0 AND CIRCUMFERENTIAL WAVENUMBER PARAMETER N.
C     
         IF (IRMOD.NE.0) THEN
            MFACT = MWAVE*PI/A
            FMFACT = MFACT
            NFACT = NWAVE*PI/B
            NSTAR = NFACT
C           IF (NFACT.GT.0.AND.MFACT.GT.0)
C    1         NSTAR = 1./(1./NFACT + FNSTAR*ABS(CSLOPE)/MFACT)
            AMPMOD = 1.0
            WGARG = WG1
            IF (IRMOD.EQ.1) THEN
               WIMPX = W0LOC
               IF (ISTIF(1).NE.0.OR.ISTIF(2).NE.0) WGARG = 0.
            ENDIF
            IF (IRMOD.EQ.2.OR.IRMOD.EQ.4) WIMPX = WG2
            IF (IRMOD.EQ.3) THEN
               WIMPX = W0PAN
               IF (ISTIF(2).NE.0) WGARG = 0.
            ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
            IF (ABS(WIMPX).GT.0.0.AND.NFACT.GT.0.0.AND.MFACT.GT.0.0)
     1         AMPMOD = ABS(0.2/WIMPX)*MIN(1./FMFACT,1./NSTAR)
            IF (AMPMOD.GT.1.0) AMPMOD = 1.0
C BEG JUN 2004
C  IRMOD = 1 means local buckling; 2 means general buck.; 3 means panel buck.
            IF (IRMOD.EQ.1.AND.
     1                 (W0LOC.NE.0.0.OR.WYYGEN.NE.0.0.OR.WYYPAN.NE.0.)) 
     1      CALL RADWAV(ABS(WYYGEN)+ABS(WYYPAN),RORIG,WYYAMP,
     1                 AMPMOD*W0LOC,NSTAR,RPX,WGARG,IAMPOV(IRMOD))
            IF ((IRMOD.EQ.2.OR.IRMOD.EQ.4).AND.W0GLOB.NE.0.)
C BEG JUN 2006
C    1      CALL RADWAV(0.0,RORIG,WYYAMP,AMPMOD*WG2,NSTAR,RPX,
     1      CALL RADWAV(0.0,RORIG,WYYAMP,AXLRED*AMPMOD*WG2,NSTAR,RPX,
C END JUN 2006
     1                  WGARG,IAMPOV(IRMOD))
C END JUN 2004
            IF (IRMOD.EQ.3.AND.(W0PAN.NE.0.0.OR.WYYGEN.NE.0.0))
     1      CALL RADWAV(WYYGEN,RORIG,WYYAMP,AMPMOD*W0PAN,NSTAR,RPX,
     1                  WGARG,IAMPOV(IRMOD))
C BEG JUN 2004
            CURCHG = ABS(1./RORIG) - ABS(1./RPX)
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG DEC 2005
            IF (NNPRT.GE.2) THEN
               WRITE(8,'(/,A,/,A,A,1P,E12.4,A)')
     1       ' IN GENSTB:',
     1    ' Radius of curvature computed from RADWAV',
     1    ' ******** R(radwav)=',RPX,' *********'
               WRITE(8,'(/,A,1P,E12.4,/,A,2I6,1P,2E12.4)')
     1    ' Change in curvature: ABS(1./RORIG) - ABS(1./R(radwav))=',
     1      CURCHG,
     1    ' MWAVE,NWAVE,CSLOPE,EIGVAL=',MWAVE,NWAVE,CSLOPE,EIGVAL
            ENDIF
C END DEC 2005
C
            CURRAD = ABS(1./RORIG)
            WYYOUT = WG1S*4./RORIG**2
C           CURMOD = CURRAD - ABS(WYYGEN) -ABS(WYYOUT)
C    1                   - ABS(WYYPAN) -ABS(CURCHG)
            CURMOD = CURRAD - ABS(CURCHG)
            IF (CURMOD.LE.0.01*CURRAD) CURMOD = 0.001*CURRAD
            RADNEW = (RORIG/ABS(RORIG))/CURMOD
            RADDIF = ABS(RADNEW - RORIG)/ABS(RORIG)
            IF (NNPRT.GE.0.AND.RADDIF.GT.0.0001) THEN
               IF (IRMOD.EQ.1) WRITE(8,'(A,/,A,/,1P6E11.3)')
     1 ' The radius of curvature is modified by initial imperfections:',
     1 ' Orig.radius  Mod.radius  WYYGEN    WYYOUT    WYYPAN    CURCHG',
     1   RORIG, RADNEW, ABS(WYYGEN), ABS(WYYOUT), ABS(WYYPAN),
     1   ABS(CURCHG)
C
               IF (IRMOD.EQ.2.OR.IRMOD.EQ.4)
     1    WRITE(8,'(A,/,A,/,1P6E11.3)')
     1 ' The radius of curvature is modified by initial imperfections:',
     1 ' Orig.radius  Mod.radius  CURCHG    WYYOUT    WYYPAN    WYYLOC',
     1   RORIG, RADNEW, ABS(CURCHG), ABS(WYYOUT), ABS(WYYPAN),
     1   ABS(WYYLOC)
C
               IF (IRMOD.EQ.3) WRITE(8,'(A,/,A,/,1P6E11.3)')
     1 ' The radius of curvature is modified by initial imperfections:',
     1 ' Orig.radius  Mod.radius  WYYGEN    WYYOUT    CURCHG    WYYLOC',
     1   RORIG, RADNEW, ABS(WYYGEN), ABS(WYYOUT), ABS(CURCHG),
     1   ABS(WYYLOC)
            ENDIF
C
            IF (NNPRT.GE.2.AND.ILABEL.NE.7010.AND.ILABEL.NE.7055)
     1      WRITE(8,'(A,1P,E12.4,A,/,A,/,A)')
     1    ' EIGVAL=',EIGVAL,' (before knockdown for smeared stringers',
     1   '                      and before knockdown for t.s.d.',
     1   '                      and before knockdown for smeared rings)'
C END JUN 2004
C BEG NOV 2001
C           IF (ILABLY.EQ.9160) THEN
C              WRITE(8,'(A,I3,/,1P,4E12.4)')
C    1       ' IRMOD,WYYGEN,RORIG,WYYAMP,AMPMOD=',
C    1         IRMOD,WYYGEN,RORIG,WYYAMP,AMPMOD
C              WRITE(8,'(A,I3,/,1P,4E12.4)')
C    1       ' IAMPOV(IRMOD),WIMPX,NSTAR,FMFACT,W0LOC=',
C    1         IAMPOV(IRMOD),WIMPX,NSTAR,FMFACT,W0LOC
C              WRITE(8,'(A,1P,3E12.4)')' NFACT,MFACT,WGARG=',
C    1                                   NFACT,MFACT,WGARG
C              CALL EXIT
C           ENDIF
C END NOV 2001
         ENDIF
C    End of IF (IRMOD.NE.0) section
C BEG JAN 2007 (comment out the (NNPRT.GE.2.OR.KLAYER(1,1).NE.0) brackets)
C     ENDIF
C END JAN 2007
C  End of IF (NNPRT.GE.2.OR.KLAYER(1,1).NE.0) section
C23456789012345678901234567890123456789012345678901234567890123456789012
C END OCT 2001
C END OCT 1998
C BEG AUG 1993
C  GET INCREMENTAL CIRC. WAVENUMBER FOR USE IN CALCULATING CURVATURE
C  CHANGES OF IMPERFECT SHELLS
C BEG MAR 1998
      EIGVLX = EIGVAL
C END MAR 1998
C BEG MAY 2006
 6543 CONTINUE
      NWAVX = NWAVE
C END MAY 2006
      IF (FACWID.GT.0.0) NWAVX = NWAVE*FACWID
C BEG OCT 1998
      IF (ILABEL.EQ.7140) GO TO 4050
      DNWAVE = 0.
C END OCT 1998
C BEG NOV 2003
C     IF (IRMOD.NE.0.AND.NWAVX.GE.2.AND.NWAVX.LE.35) THEN
      IF (IRMOD.NE.0.AND.NWAVX.GE.2.AND.NWAVX.LE.500) THEN
C END NOV 2003
C BEG MAR 2005
         CSLTRY = CSLOPE
         CALL EIG(A,B,NBAR,MBAR,PX,PY,PXY,CSLTRY,0,EIGVAL,
     1            INDX,FFLAT,IARGTH,1)
C END MAR 2005
         ESXNW1 = EIGVAL
C BEG MAY 2006
         CSLNW1 = CSLTRY
         SMRNW1 = 1.0
         IF (PARX2.GT.0.1.AND.ISOGRD.EQ.0) THEN
            CALL EIGKNK(PARX1,PARX2,NBAR,EIGVAL,PX,PY,PXY,
     1                  ESXNW1,IFILE,NPRNT,INDX,1,0)
            SMRNW1 = ESXNW1/EIGVAL
         ENDIF
C END MAY 2006
         IF (IDESGN.EQ.0) CSLTRY = CSLOPE
         IF (IDESGN.EQ.1) CSLTRY = SLOPIR(1,IRMOD,IROLEY)
C        WRITE(8,*)' IDESGN,INDX,CSLTRY,NBAR,MBAR,ESXNW1=',
C    1               IDESGN,INDX,CSLTRY,NBAR,MBAR,ESXNW1
C BEG MAR 2005
C        IF (ILABLY.EQ.9150.AND.ILABEL.EQ.7165)
C    1   WRITE(8,'(A,A,1P,E12.4)')' Before CALL EIG(...,NBAR-1,...',
C    1 ' Slope=',CSLTRY
C        IF (ILABLY.EQ.9150.AND.ILABEL.EQ.7165) NPRNT = 2
C        CALL EIG(A,B,NBAR-1.,MBAR,PX,PY,PXY,CSLTRY,IDESGN,EIGS22,
C        NPRNTS = NPRNT
C        IF (INDX.EQ.2.AND.ILABEL.EQ.7165.AND.ILABLY.EQ.9150)
C    1   NPRNT = INDX
         IF (IDESGN.EQ.0) CSLTRY = 0.
         CALL EIG(A,B,NBAR-1.,MBAR,PX,PY,PXY,CSLTRY,0,EIGS22,
     1            INDX,FFLAT,IARGTH,1)
         IF (IDESGN.EQ.0)
     1   CALL EIG(A,B,NBAR-1.,MBAR,PX,PY,PXY,CSLTRY,0,EIGS22,
     1            INDX,FFLAT,IARGTH,1)
C        NPRNT = NPRNTS
C        IF (ILABLY.EQ.9150.AND.ILABEL.EQ.7165) NPRNT = 0
C        IF (ILABLY.EQ.9150.AND.ILABEL.EQ.7165)
C    1   WRITE(8,'(A,A,1P,E12.4)')' After  CALL EIG(...,NBAR-1,...',
C    1 ' Slope=',CSLTRY
C END MAR 2005
C BEG FEB 1996
         IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
         ESXNW2 = EIGS22
C BEG MAY 2006
         CSLNW2 = CSLTRY
         SMRNW2 = 1.0
         IF (PARX2.GT.0.1.AND.ISOGRD.EQ.0) THEN
            CALL EIGKNK(PARX1,PARX2,NBAR-1.,EIGS22,PX,PY,PXY,
     1                  ESXNW2,IFILE,NPRNT,INDX,1,0)
            SMRNW2 = ESXNW2/EIGS22
         ENDIF
C END MAY 2006
C        WRITE(8,*)' AFTER  EIG:NBAR-1: IDESGN,CSLTRY=',IDESGN,CSLTRY
         IF (IDESGN.EQ.0) SLOPIR(1,IRMOD,IROLEY) = CSLTRY
         IF (IDESGN.EQ.0) CSLTRY = CSLOPE
         IF (IDESGN.EQ.1) CSLTRY = SLOPIR(2,IRMOD,IROLEY)
C        WRITE(8,*)' BEFORE EIG:NBAR+1: IDESGN,CSLTRY=',IDESGN,CSLTRY
C BEG MAR 2005
C        CALL EIG(A,B,NBAR+1.,MBAR,PX,PY,PXY,CSLTRY,IDESGN,EIGSAV,
         IF (IDESGN.EQ.0) CSLTRY = 0.
         CALL EIG(A,B,NBAR+1.,MBAR,PX,PY,PXY,CSLTRY,0,EIGSAV,
     1            INDX,FFLAT,IARGTH,1)
         IF (IDESGN.EQ.0)
     1   CALL EIG(A,B,NBAR+1.,MBAR,PX,PY,PXY,CSLTRY,0,EIGSAV,
     1            INDX,FFLAT,IARGTH,1)
C END MAR 2005
C BEG FEB 1996
         IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
         ESXNW3 = EIGSAV
C BEG MAY 2006
         CSLNW3 = CSLTRY
         SMRNW3 = 1.0
         IF (PARX2.GT.0.1.AND.ISOGRD.EQ.0) THEN
            CALL EIGKNK(PARX1,PARX2,NBAR+1.,EIGSAV,PX,PY,PXY,
     1                  ESXNW3,IFILE,NPRNT,INDX,1,0)
            SMRNW3 = ESXNW3/EIGSAV
         ENDIF
C END MAY 2006
         IF (IDESGN.EQ.0) SLOPIR(2,IRMOD,IROLEY) = CSLTRY
C        WRITE(8,*)' AFTER  EIG:NBAR+1: IDESGN,CSLTRY=',IDESGN,CSLTRY
         Y1 = ESXNW2 - ESXNW1
         Y3 = ESXNW3 - ESXNW1
         IF ((Y1+Y3).GT.0.0) DNWAVE = 0.5*(Y1-Y3)/(Y1+Y3)
C        IF (Y1.LT.0.) DNWAVE = -1.0
C        IF (Y3.LT.0.) DNWAVE = +1.0
         IF (Y1.LT.0.0.AND.Y3.LT.0.0) DNWAVE = 0.
         IF (ABS(DNWAVE).GE.1.0) DNWAVE = 1.0*DNWAVE/ABS(DNWAVE)
         IF (NWAVX.LE.2.AND.DNWAVE.LT.0.0) DNWAVE = 0.
C BEG MAR 1998
C BEG APR 1998
         IF (ESXNW2.GT.10.*ESXNW1) DNWAVE = 0.
         IF (ESXNW3.GT.10.*ESXNW1) DNWAVE = 0.
C END APR 1998
C END MAR 1998
C        WRITE(8,*)' PX,PY,PXY,ESXNW2,ESXNW3=',PX,PY,PXY,ESXNW2,ESXNW3
C        WRITE(8,*)' FACWID,NWAVE,NWAVX=',FACWID,NWAVE,NWAVX
C        WRITE(8,*)' IDESGN,DNWAVE=',IDESGN,DNWAVE
C BEG OCT 1998
C BEG OCT 2001
C23456789012345678901234567890123456789012345678901234567890123456789012
         FKNEIG = ESXNW1/EIGVAL
C BEG MAR 2005
C        NNPRTS = NNPRT
C        IF (INDX.EQ.2.AND.ILABEL.EQ.7165.AND.ILABLY.EQ.9150) NNPRT = 2
C END MAR 2005
         IF (NNPRT.GE.2)
     1    WRITE(8,'(/,A,/,A,1P,E12.4,A,/,A,0P,2F8.0,1P,E12.4,
     1     /,A,0P,2F8.0,1P,E12.4,/,A,0P,2F8.0,1P,E12.4,/,A,1P,E12.4)')
     1' Computation of fractional circumferential wavenumber, DNWAVE:',
     1' after knockdown factor=',FKNEIG,' for smeared stringers',
C END OCT 2001
     1' Orig. crit. waves and eigenv.,MBAR,NBAR,  ESXNW1=',
     1                                MBAR,NBAR,ESXNW1,
     1' Decrement in circ. wavenumber,MBAR,NBAR-1,ESXNW2=',
     1                                MBAR,NBAR-1.,ESXNW2,
     1' Increment in circ. wavenumber,MBAR,NBAR+1,ESXNW3=',
     1                                MBAR,NBAR+1.,ESXNW3,
     1' Fractional circumferential wavenumber,    DNWAVE=',
     1                                            DNWAVE
C BEG MAY 2006
C23456789012345678901234567890123456789012345678901234567890123456789012
         IF (NNPRT.GE.2)
     1    WRITE(8,'(/,A,/,A,1P,2E12.4,/,A,1P,2E12.4,/,A,1P,2E12.4)')
     1  ' Corresponding slopes and knockdowns for smeared stringers:',
     1  ' Original slope CSLNW1 and knockdown SMRNW1=',CSLNW1,SMRNW1,
     1  ' Original slope CSLNW2 and knockdown SMRNW2=',CSLNW2,SMRNW2,
     1  ' Original slope CSLNW3 and knockdown SMRNW3=',CSLNW3,SMRNW3
C END MAY 2006
C BEG MAR 2005
C        NNPRT = NNPRTS
C END MAR 2005
C END OCT 1998
      ENDIF
C  End of IF (IRMOD.NE.0.AND.NWAVX.GE.2.AND.NWAVX.LE.500) section
C
C  GET INCREMENTAL AXIAL WAVENUMBER FOR USE IN CALCULATING CURVATURE
C  CHANGES OF IMPERFECT SHELLS
      DMWAVE = 0.
C BEG NOV 2003
C     IF (IRMOD.NE.0.AND.MWAVE.GE.2.AND.MWAVE.LE.35) THEN
      IF (IRMOD.NE.0.AND.MWAVE.GE.2.AND.MWAVE.LE.500) THEN
C END NOV 2003
C BEG MAR 2005
         CSLTRY = CSLOPE
         CALL EIG(A,B,NBAR,MBAR,PX,PY,PXY,CSLTRY,0,EIGVAL,
     1            INDX,FFLAT,IARGTH,1)
C END MAR 2005
         ESXMW1 = EIGVAL
C BEG OCT 1998
C        IF (IDESGN.EQ.0.AND.PARX2.GT.0.1.AND.ISOGRD.EQ.0)
         IF (                PARX2.GT.0.1.AND.ISOGRD.EQ.0)
C END OCT 1998
     1      CALL EIGKNK(PARX1,PARX2,NBAR,EIGVAL,PX,PY,PXY,
     1                  ESXMW1,IFILE,NPRNT,INDX,1,0)
         IF (IDESGN.EQ.0) CSLTRY = CSLOPE
         IF (IDESGN.EQ.1) CSLTRY = SLOPIR(3,IRMOD,IROLEY)
C BEG MAR 2005
C        CALL EIG(A,B,NBAR,MBAR-1.,PX,PY,PXY,CSLTRY,IDESGN,EIGS22,
         IF (IDESGN.EQ.0) CSLTRY = 0.
         CALL EIG(A,B,NBAR,MBAR-1.,PX,PY,PXY,CSLTRY,0,EIGS22,
     1            INDX,FFLAT,IARGTH,1)
         IF (IDESGN.EQ.0)
     1   CALL EIG(A,B,NBAR,MBAR-1.,PX,PY,PXY,CSLTRY,0,EIGS22,
     1            INDX,FFLAT,IARGTH,1)
C END MAR 2005
C BEG FEB 1996
         IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
         ESXMW2 = EIGS22
         IF (PARX2.GT.0.1.AND.ISOGRD.EQ.0)
     1      CALL EIGKNK(PARX1,PARX2,NBAR,EIGS22,PX,PY,PXY,
     1                  ESXMW2,IFILE,NPRNT,INDX,1,0)
         IF (IDESGN.EQ.0) SLOPIR(3,IRMOD,IROLEY) = CSLTRY
         IF (IDESGN.EQ.0) CSLTRY = CSLOPE
         IF (IDESGN.EQ.1) CSLTRY = SLOPIR(4,IRMOD,IROLEY)
C BEG MAR 2005
C        CALL EIG(A,B,NBAR,MBAR+1.,PX,PY,PXY,CSLTRY,IDESGN,EIGSAV,
         IF (IDESGN.EQ.0) CSLTRY = 0.
         CALL EIG(A,B,NBAR,MBAR+1.,PX,PY,PXY,CSLTRY,0,EIGSAV,
     1            INDX,FFLAT,IARGTH,1)
         IF (IDESGN.EQ.0)
     1   CALL EIG(A,B,NBAR,MBAR+1.,PX,PY,PXY,CSLTRY,0,EIGSAV,
     1            INDX,FFLAT,IARGTH,1)
C END MAR 2005
C BEG FEB 1996
         IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
         ESXMW3 = EIGSAV
         IF (PARX2.GT.0.1.AND.ISOGRD.EQ.0)
     1      CALL EIGKNK(PARX1,PARX2,NBAR,EIGSAV,PX,PY,PXY,
     1                  ESXMW3,IFILE,NPRNT,INDX,1,0)
         IF (IDESGN.EQ.0) SLOPIR(4,IRMOD,IROLEY) = CSLTRY
C BEG OCT 1998
C        Y1 = EIGS22 - EIGVAL
C        Y3 = EIGSAV - EIGVAL
         Y1 = ESXMW2 - ESXMW1
         Y3 = ESXMW3 - ESXMW1
C END OCT 1998
         IF ((Y1+Y3).GT.0.0) DMWAVE = 0.5*(Y1-Y3)/(Y1+Y3)
C        IF (Y1.LT.0.) DMWAVE = -1.0
C        IF (Y3.LT.0.) DMWAVE = +1.0
         IF (Y1.LT.0.0.AND.Y3.LT.0.0) DMWAVE = 0.
         IF (ABS(DMWAVE).GE.1.0) DMWAVE = 1.0*DMWAVE/ABS(DMWAVE)
         IF (MWAVE.LE.2.AND.DMWAVE.LT.0.0) DMWAVE = 0.
C BEG MAR 1998
C BEG OCT 1998
C        IF (EIGSS2.GT.2.*EIGVAL) DMWAVE = 0.
C        IF (EIGSAV.GT.2.*EIGVAL) DMWAVE = 0.
         IF (ESXMW2.GT.2.*ESXMW1) DMWAVE = 0.
         IF (ESXMW3.GT.2.*ESXMW1) DMWAVE = 0.
C END OCT 1998
C END MAR 1998
C BEG OCT 1998
C BEG OCT 2001
C23456789012345678901234567890123456789012345678901234567890123456789012
         FKNEIG = ESXMW1/EIGVAL
         IF (NNPRT.GE.2)
     1     WRITE(8,'(/,A,/,A,1P,E12.4,A,/,A,0P,2F8.0,1P,E12.4,
     1     /,A,0P,2F8.0,1P,E12.4,/,A,0P,2F8.0,1P,E12.4,/,A,1P,E12.4)')
     1' Computation of fractional number of axial halfwaves, DMWAVE:',
     1' after knockdown factor=',FKNEIG,' for smearing stringers',
C END OCT 2001
     1' Orig. crit. waves and eigenv.,MBAR,NBAR,  ESXMW1=',
     1                                MBAR,NBAR,ESXMW1,
     1' Decrement in axial wavenumber,MBAR-1,NBAR,ESXMW2=',
     1                                MBAR-1.,NBAR,ESXMW2,
     1' Increment in axial wavenumber,MBAR+1,NBAR,ESXMW3=',
     1                                MBAR+1.,NBAR,ESXMW3,
     1' Fractional number of axial halfwaves,     DMWAVE=',
     1                                            DMWAVE
C END OCT 1998
C BEG JUN 2006
C        IF (IDESGN.EQ.0.AND.IFLAT.EQ.0.
C BEG AUG 2006
         IF (IFLAT.EQ.0.AND.ILABLY.EQ.9150
     1                 .AND.(ILABEL.EQ.7165.OR.ILABEL.EQ.7175)) THEN
C END AUG 2006
C         We are in imperfection sensitivity section:
C         general buckling of perfect shell.
            AXLRED = 1.0
            IF (IXIMPF(ILOADS).NE.0) THEN
               AXLTST = A/(MBAR+DMWAVE)
               AXLRED = AXLTST/AXLWAV(ILOADS)
            ENDIF
            IF (NNPRT.GE.0) WRITE(8,
     1 '(/,A,/,A,/,A,/,A,/,A,1P,E12.4,/,A,1P,E12.4,/,A,1P,E12.4,/,A,/)')
     1    ' ********* NOTE ********* NOTE ********** NOTE *********',
     1    ' Factor by which general buckling modal imperfection',
     1    ' amplitude will be changed for the purpose of computing',
     1    ' the effective radius of curvature of the initially',
     1    ' imperfect and loaded panel, AXLRED =',AXLRED,
     1    ' Axial length in this model of the panel, A = ',A,
     1    ' Axial halfwaves in critical general mode, MBAR+DMWAVE=',
     1      MBAR+DMWAVE,
     1    ' ******* END NOTE ****** END NOTE ****** END NOTE *********'
C23456789012345678901234567890123456789012345678901234567890123456789012
C
            IF (NNPRT.GE.2.AND.ITYPE.EQ.2.AND.IDESGN.EQ.0) THEN
               WRITE(8,'(/,A,A,/,A,/,A,/,A)')
     1       ' Halfwavenumbers m and n, nodal line slope, SLOPE, and',
     1       ' eigenvalues',
     1       ' (NOTE: No knockdown factors have yet been applied)',
     1       '   Axial    Circumf.  nodal line     eigenvalue',
     1       ' halfwaves halfwaves    slope      from Sub. EIG1'
               WRITE(8,'((I6,I10,1P,2E15.4))')
C BEG MAY 2007
     1         ((I,J,EIG1SLP(I,J),EIG1EIG(I,J), J=1,20),I=1,10)
C END MAY 2007
            ENDIF
         ENDIF
C END JUN 2006
      ENDIF
C  End of IF (IRMOD.NE.0.AND.MWAVE.GE.2.AND.MWAVE.LE.500) section
C
C BEG MAY 1997
C  THIS CODING WAS ADDED IN ORDER TO GET BETTER NODAL LINE SLOPE
C  CORRESPONDING TO THE FRACTIONAL WAVENUMBERS, DNWAVE AND DMWAVE.
      IF (IRMOD.NE.0.AND.(DNWAVE.NE.0.0.OR.DMWAVE.NE.0.0)) THEN
         IF (IDESGN.EQ.0) CSLTRY = CSLOPE
         IF (IDESGN.EQ.1) CSLTRY = SLOPXR(IRMOD,IROLEY)
C BEG MAR 1998
         CSLTRS = CSLTRY
C BEG OCT 1998
         IDOIT = 1
         IF (IDESGN.EQ.1) THEN
            IF (ILABLY.EQ.9160) THEN
               IF (IDMWAV(1).EQ.1) THEN
                  IDOIT = 0
               ELSE
                  DMWAVE = 0.
               ENDIF
               IF (IDNWAV(1).EQ.1) THEN
                  IDOIT = 0
               ELSE
                  DNWAVE = 0.
               ENDIF
            ENDIF
C
            IF (ILABLY.EQ.9220) THEN
               IF (IDMWAV(2).EQ.1) THEN
                  IDOIT = 0
               ELSE
                  DMWAVE = 0.
               ENDIF
               IF (IDNWAV(2).EQ.1) THEN
                  IDOIT = 0
               ELSE
                  DNWAVE = 0.
               ENDIF
            ENDIF
C
            IF (ILABLY.EQ.9251) THEN
               IF (IDMWAV(3).EQ.1) THEN
                  IDOIT = 0
               ELSE
                  DMWAVE = 0.
               ENDIF
               IF (IDNWAV(3).EQ.1) THEN
                  IDOIT = 0
               ELSE
                  DNWAVE = 0.
               ENDIF
            ENDIF
         ENDIF
C  End of IF (IDESGN.EQ.1) section.
C END OCT 1998
C BEG MAR 2005
C        CALL EIG(A,B,NBAR+DNWAVE,MBAR+DMWAVE,PX,PY,PXY,CSLTRY,IDESGN,
C        NPRNTS = NPRNT
C        IF (INDX.EQ.2.AND.ILABEL.EQ.7165.AND.ILABLY.EQ.9150)
C    1   NPRNT = INDX
         IF (IDESGN.EQ.0) CSLTRY = 0
         CALL EIG(A,B,NBAR+DNWAVE,MBAR+DMWAVE,PX,PY,PXY,CSLTRY,0,
     1            EIGVLY,INDX,FFLAT,IARGTH,1)
         IF (IDESGN.EQ.0)
     1   CALL EIG(A,B,NBAR+DNWAVE,MBAR+DMWAVE,PX,PY,PXY,CSLTRY,0,
     1            EIGVLY,INDX,FFLAT,IARGTH,1)
C        NPRNT = NPRNTS
C END MAR 2005
C BEG OCT 1998
         EIGOPT = EIGVLY
C BEG MAY 2006
         SMROPT = 1.0
         IF (PARX2.GT.0.1.AND.ISOGRD.EQ.0) THEN
            CALL EIGKNK(PARX1,PARX2,NBAR+DNWAVE,EIGVLY,PX,PY,PXY,
     1                  EIGOPT,IFILE,NPRNT,INDX,1,0)
            SMROPT = EIGOPT/EIGVLY
         ENDIF
C END MAY 2006
C23456789012345678901234567890123456789012345678901234567890123456789012
         IF (NNPRT.GE.2) WRITE(8,'(/,A,/,A,1P,3E12.4,/,A,1P,3E12.4)')
     1' Compare fractional waves, eigv. and original waves, eigv:',
     1' Fractional:NBAR+DNWAVE,MBAR+DMWAVE,EIGOPT=',
     1             NBAR+DNWAVE,MBAR+DMWAVE,EIGOPT,
     1' Original:  NBAR,       MBAR,       ESXNW1=',
     1             NBAR,MBAR,ESXNW1
C BEG MAR 2005
         IF (NNPRT.GE.2) WRITE(8,'(A,1P,E12.4,A,1P,E12.4)')
     1 ' "Fractional" slope=, CSLTRY=',CSLTRY,
     1 '; "Original" slope=, CSLTRS=',CSLTRS
C BEG MAY 2006
         IF (NNPRT.GE.2) WRITE(8,'(A,1P,E12.4,/)')
     1 ' Knockdown for smeared stringers, SMROPT = ',SMROPT
C END MAY 2006
         EIGMLT = 1.0
C BEG MAY 2006
         IF (ABS(WG2).GT.0.001.AND.(ILABLY.EQ.9150.OR.ILABLY.EQ.9160)
C    1                        .AND.ILABEL.EQ.7165) EIGMLT = 1.1
C    1                        .AND.ILABEL.EQ.7165) EIGMLT = 1.2
     1                        .AND.ILABEL.EQ.7165) EIGMLT = 1.0
C END MAY 2006
C        IF (IDOIT.EQ.1.AND.EIGOPT.GT.ESXNW1) THEN
         IF (IDOIT.EQ.1.AND.EIGOPT.GT.EIGMLT*ESXNW1) THEN
C END MAR 2005
C END OCT 1998
            DNWAVE = 0.
            DMWAVE = 0.
            CSLTRY = CSLTRS
            EIGVAL = EIGVLX
         ELSE
C BEG OCT 2001
C BEG MAR 2005
C           IF (EIGVLY.LE.EIGVLX) THEN
            IF (EIGVLY.LE.EIGMLT*EIGVLX) THEN
C END MAR 2005
               EIGVAL = EIGVLY
            ELSE
               DNWAVE = 0.
               DMWAVE = 0.
               CSLTRY = CSLTRS
               EIGVAL = EIGVLX
               IF (NNPRT.GE.2)
     1         WRITE(8,'(A,/,A,1P,2E12.4,/,A,A,/,A,1P,4E12.4)')
     1       ' "Refined" and original eigenvalues before knockdown',
     1       '                  for smeared stringers, EIGVLY,EIGVLX=',
     1                                                 EIGVLY,EIGVLX,
     1       ' "Refined" eigenv. is higher than original.',
     1       ' Restoring original eigenv.and mode:',
     1       ' DNWAVE,DMWAVE,CSLOPE,EIGVAL=  ',
     1         DNWAVE,DMWAVE,CSLOPE,EIGVAL
            ENDIF
C END OCT 2001
         ENDIF
C END MAR 1998
C BEG OCT 1998
         IF (NNPRT.GE.2) WRITE(8,'(A,1P,2E12.4)')
     1 ' Final values of DMWAVE, DNWAVE on leaving GENSTB=',
     1   DMWAVE,DNWAVE
C END OCT 1998
         IF (IRESTY.EQ.1) GO TO 2222
         IF (IDESGN.EQ.0) THEN
            SLOPXR(IRMOD,IROLEY) = CSLTRY
C BEG JULY 1998  (Comment following statement out. Leads to wrong perturb.)
C BEG MAR 2005
            CSLOPE = CSLTRY
C           IF (ITYPE.NE.1) CSLOPE = CSLTRY
C END MAR 2005
C END JULY 1998
         ENDIF
C BEG MAY 2006
C BEG AUG 2006
C        IF (IDESGN.EQ.0.AND.(NBAR+1.).LT.4.0.AND.DNWAVE.EQ.0.0
C    1      .AND.ILABEL.EQ.7165.AND.ESXNW3.LT.1.05*ESXNW1) THEN
         IF (IDESGN.EQ.0.AND.(NBAR+1.).LT.4.0.AND.DNWAVE.EQ.0.0
     1      .AND.(ILABEL.EQ.7165.OR.ILABEL.EQ.7175)
     1                         .AND.ESXNW3.LT.1.05*ESXNW1) THEN
C END AUG 2006
            CSLOPE = CSLNW3 
            NBAR = NBAR + 1.
            NWAVE = NBAR
            IF (NNPRT.GE.2) WRITE(8,'(/,A,/,A)')
     1    ' Use higher circumferential wavenumber for critical',
     1    ' buckling mode. Recomputing fractional wavenumbers.'
            GO TO 6543
         ENDIF
C END MAY 2006
      ENDIF
C  End of IF (IRMOD.NE.0.AND.(DNWAVE.NE.0.0.OR.DMWAVE.NE.0.0)) section
C BEG MAR 2005
C BEG JAN 2006
      IF (FACWID.LE.1.0) THEN
       IF (IDESGN.EQ.0.AND.ILABEL.EQ.7185.AND.ILABLY.EQ.9140
     1    .AND.IRMOD.EQ.0) THEN
         NWAVX = NWAVEX(1)
         NBAR  = NWAVX
         MBAR  = MWAVEX(1)
         TEST  = TESTX(1)
C        WRITE(IFILE,'(A,I5)') ' NWAVX=',NWAVX
       ENDIF
      ENDIF
C END JAN 2006
      IF (IDESGN.EQ.0.AND.ILABEL.EQ.7185.AND.ILABLY.EQ.9140
     1  .AND.IRMOD.EQ.0.AND.NWAVX.GE.2.AND.NWAVX.LT.7) THEN
C BEG JAN 2006
C        NPRNTS = NPRNT
C        NPRNT = INDX
C END JAN 2006
         CSLTRY = 0.0 
         CALL EIG(A,B,NBAR,MBAR,PX,PY,PXY,CSLTRY,0,EIGRX0,
     1            INDX,FFLAT,IARGTH,1)
         EIGRX1 = EIGRX0
         IF (PARX2.GT.0.1.AND.ISOGRD.EQ.0)
     1      CALL EIGKNK(PARX1,PARX2,NBAR,EIGRX0,PX,PY,PXY,
     1                  EIGRX1,IFILE,NPRNT,INDX,1,0)
         CSLTRY = 0.0
         CALL EIG(A,B,NBAR-1.,MBAR,PX,PY,PXY,CSLTRY,0,EIGRX0,
     1            INDX,FFLAT,IARGTH,1)
         EIGRX2 = EIGRX0
         IF (PARX2.GT.0.1.AND.ISOGRD.EQ.0)
     1      CALL EIGKNK(PARX1,PARX2,NBAR-1.,EIGRX0,PX,PY,PXY,
     1                  EIGRX2,IFILE,NPRNT,INDX,1,0)
         CSLTRY = 0.0
         CALL EIG(A,B,NBAR+1.,MBAR,PX,PY,PXY,CSLTRY,0,EIGRX0,
     1            INDX,FFLAT,IARGTH,1)
         EIGRX3 = EIGRX0
         IF (PARX2.GT.0.1.AND.ISOGRD.EQ.0)
     1      CALL EIGKNK(PARX1,PARX2,NBAR+1.,EIGRX0,PX,PY,PXY,
     1                  EIGRX3,IFILE,NPRNT,INDX,1,0)
         Y1 = EIGRX2 - EIGRX1
         Y3 = EIGRX3 - EIGRX1
         IF ((Y1+Y3).GT.0.0) DNWAVX = 0.5*(Y1-Y3)/(Y1+Y3)
         IF (Y1.LT.0.0.AND.Y3.LT.0.0) DNWAVX = 0.
         IF (ABS(DNWAVX).GE.1.0) DNWAVX = 1.0*DNWAVX/ABS(DNWAVX)
         IF (NWAVX.LE.2.AND.DNWAVX.LT.0.0) DNWAVX = 0.
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG JAN 2006 (temporary)
         IF (NNPRT.GE.2) WRITE(8,'(/,A,A)')
     1 ' The following "fractional" eigenvalues are AFTER knockdown',
     1 ' for smeared stringers.'
         IF (NNPRT.GE.2)
     1    WRITE(8,'(A,1P,E12.4,/,A,0P,2F8.0,1P,E12.4,
     1     /,A,0P,2F8.0,1P,E12.4,/,A,0P,2F8.0,1P,E12.4,/,A,1P,E12.4)')
     1' Computation of fractional circumferential wavenumber, DNWAVX:',
     1  DNWAVX,
     1' Orig. crit. waves and eigenv.,MBAR,NBAR,  EIGRX1=',
     1                                MBAR,NBAR,EIGRX1,
     1' Decrement in circ. wavenumber,MBAR,NBAR-1,EIGRX2=',
     1                                MBAR,NBAR-1.,EIGRX2,
     1' Increment in circ. wavenumber,MBAR,NBAR+1,EIGRX3=',
     1                                MBAR,NBAR+1.,EIGRX3,
     1' Fractional circumferential wavenumber,    DNWAVX=',
     1                                            DNWAVX
C BEG JAN 2006
C         WRITE(8,'(A,1P,E12.4,3I3)')
C    1    ' TEST,ISAND,ISNDSV,ISANDS = ',TEST,ISAND,ISNDSV,ISANDS
C         WRITE(8,'(A,1P,3E12.4)')
C    1    ' Loading in shell for fract.: PX, PY, PXY=', PX,PY,PXY
C         NPRNT = NPRNTS
C END JAN 2006
      ENDIF
C  End of  IF (IDESGN.EQ.0.AND.ILABEL.EQ.7185.AND.ILABLY.EQ.9140
C          .AND.IRMOD.EQ.0.AND.NWAVX.GE.2.AND.NWAVX.LT.7) section
C END MAR 2005
C
C END MAY 1997
C END AUG 1993
C BEG OCT 1998
 4050 CONTINUE
C END OCT 1998
C
C     WRITE(6,*)' INDX,IDESGN,IFLAT,ISHEAR,IKOUNT=',
C    1            INDX,IDESGN,IFLAT,ISHEAR,IKOUNT
C     WRITE(6,*)' FFLAT,EIGVAL,CSLOPE,TEST=',FFLAT,EIGVAL,CSLOPE,TEST
C     WRITE(6,*)' MWAVE,NWAVE=',MWAVE,NWAVE
      SLOPEP = CSLOPE
      IF (TESTSH.LE.0.99.AND.ABS(CSLOPE).GT.0.0) SLOPEP = 1./CSLOPE
      FCUR = 0.
      IF ((IAGAIN.EQ.2.OR.FFLAT.LT.0.5).AND.IFLAT.EQ.0) FCUR = 1.
C BEG MAR 1998 (Remove the "flat plate" section. It is not always valid)
C     IF (IDESGN.EQ.0.AND.IFLAT.EQ.0.AND.IFFLAT.EQ.0
C    1               .AND.ISHEAR.EQ.1.AND.IAGAIN.NE.2) THEN
C        IF (IKOUNT.EQ.0) THEN
C           IF (TEST.LE.0.99.AND.NWAVE.EQ.1) THEN
C              IF (ITUTOR.NE.0.OR.NPRNT.EQ.INDX) WRITE(IFILE,13) 
C    1            ITHRU,IAGAIN,FCUR*R,A,B,TEST,C44MLT,NX,NY,NXY,NXP,NYP
C              IF (ITUTOR.NE.0.OR.NPRNT.EQ.INDX) WRITE(IFILE,16) 
C    1            EIGVAL,MWAVE,NWAVE,SLOPEP
C  16          FORMAT(/' EIGENVALUE, MODE SHAPE:'/
C    1'  Buckling load factor,                        EIGVAL=',1PE12.4/
C    1'  Number of halfwaves in axial length, A:           M=', I6/
C    1'  Number of halfwaves in circumferential length, B: N=', I6/
C    1'  Slope of nodal lines in buckling mode,        SLOPE=',1PE12.4)
C
C   MUST CHECK EIGENVALUE FOR FLAT PLATE TO ENSURE IT'S NOT HIGHER...
C              EIGCUR = EIGVAL
C              MCUR   = MWAVE
C              NCUR   = NWAVE
C              CCUR   = CSLOPE
C              CCURP  = SLOPEP
C              TCUR   = TESTSH
C              RBB    = 10000.
C              FFLAT  = 1.0
C              IKOUNT = 1
C              GO TO 81
C           ELSE
C              IF (NWAVE.EQ.1.AND.ITHRU.EQ.1) IAGAIN = 1
C              GO TO 110
C           ENDIF
C        ELSE
C           IF (ITUTOR.NE.0.OR.NPRNT.EQ.INDX) THEN
C              WRITE(IFILE,13) 
C    1          ITHRU,IAGAIN,FCUR*R,A,B,TEST,C44MLT,NX,NY,NXY,NXP,NYP
C              WRITE(IFILE,16) EIGVAL,MWAVE,NWAVE,SLOPEP
C              IF (EIGVAL.GT.EIGCUR) WRITE(IFILE,17) EIGVAL
C  17       FORMAT(/' BUCKLING LOAD FACTOR NEGLECTING THE CURVATURE'/
C    1              ' IS HIGHER THAN THAT INCLUDING IT BECAUSE THE'/
C    1              ' BOUNDARY CONDITIONS ALONG THE GENERATORS ARE'/
C    1              ' VIOLATED BY THE ASSUMED BUCKLING MODE SHAPE'/
C    1              ' FOR THE MODEL IN WHICH CURVATURE IS INCLUDED.'/
C    1              ' USE THE FLAT PLATE BUCKLING LOAD FACTOR:'/
C    1              ' EIGVAL(CURVATURE SET TO ZERO)=',1PE12.4)
C           ENDIF
C
C           IF (EIGVAL.LE.EIGCUR) THEN
C              IF (ITUTOR.NE.0.OR.NPRNT.EQ.INDX) WRITE(IFILE,18) EIGCUR
C  18       FORMAT(/' BUCKLING LOAD FACTOR NEGLECTING THE CURVATURE'/
C    1              ' IS LOWER THAN THAT INCLUDING THE CURVATURE.'/
C    1              ' USE THE CURVED SHELL BUCKLING LOAD FACTOR:'/
C    1              ' EIGVAL(CURVATURE INCLUDED)   =',1PE12.4)
C              EIGVAL = EIGCUR
C              MWAVE  = MCUR
C              NWAVE  = NCUR
C              MBAR   = MWAVE
C              NBAR   = NWAVE
C              CSLOPE = CCUR
C              SLOPEP = CCURP
C              TESTSH = TCUR
C              RBB    = ABS(R)/B
C              FCUR = 1.
C              FFLAT  = 0.
C              IKOUNT = 0
C           ENDIF
C           IF (NWAVE.EQ.1.AND.ITHRU.EQ.1) IAGAIN = 2
C        ENDIF
C 110 CONTINUE
C     ENDIF
C END MAR 1998 (End of removed "flat plate" section)
      IARGTH = IAGAIN
C  
      IF (IDESGN.EQ.0.AND.ITHRU.EQ.1) FNEFF = NBAR
C                 (FOLLOWING MANY STATEMENTS COMMENTED OUT BECAUSE
C                  THE STRATEGY OF CALCULATING FNEFF IS RENDERED
C                  INCORRECT BECAUSE OF CHANGES IN THE STRATEGY OF
C                  HANDLING KNOCKDOWN FOR SMEARING MADE IN APRIL 1990)
C
C     IF (IDESGN.EQ.0.AND.ITHRU.EQ.1.AND.(INDX.EQ.2.OR.INDX.EQ.3)) THEN
C        INCR = 1. + 0.1*NBAR
C        FINCR = INCR
C        WBAR = (B/(NBAR+FINCR))/SPACNG(1)
C        IF (WBAR.LT.2.5.AND.NBAR.GT.1.5) THEN
C           CALCULATE "EFFECTIVE" CIRC. WAVENUMBER, FNEFF, FOR USE IN EIGMOD.
C           TEST = TESTSH
C           EIGV1 = EIGVAL
C           CSL1 = 0.
C           CALL EIG(A,B,NBAR+FINCR,MBAR,PX,PY,PXY,CSL1,IDESGN,EIGV1,
C    1               INDX,FFLAT,IAGAIN,0)
C BEG FEB 1996
C           IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
C           CSL1 = 0.
C           EIGV2 = EIGVAL
C           CALL EIG(A,B,NBAR-FINCR,MBAR,PX,PY,PXY,CSL1,IDESGN,EIGV2,
C    1               INDX,FFLAT,IAGAIN,0)
C BEG FEB 1996
C           IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
C           X1 = NBAR
C           Y1 = EIGVAL
C           X2 = NBAR+FINCR
C           Y2 = EIGV1
C           X3 = NBAR-FINCR
C           Y3 = EIGV2
C           A12= 4.*(Y1 - Y2)
C           A13= 4.*(Y1 - Y3)
C           A23= 4.*(Y2 - Y3)
C           FNEFF = 0.5*(A13*X2*X2 -A12*X3*X3 -A23*X1*X1)/
C    1                  (A13*X2    -A12*X3    -A23*X1)
C        ENDIF
C     ENDIF
C     PI = 3.14159
C     NCYL = NBAR*PI*ABS(R)/B
C     AMBAR = A/MBAR
C     DONNEL = 1.0
C     PTEST = ABS(PY) - ABS(PX)
C     IF (NCYL.GT.1.5.AND.NCYL.LT.20.) DONNEL = (NCYL*NCYL-1.)/NCYL**2
C     EIGVAL = DONNEL*EIGVAL
C     
C BEG JULY 2006
 2955 CONTINUE
C END JULY 2006
      EIGVLS = EIGVAL
      AMBAR = A/MBAR
C BEG MAR 1998
      FNDEN = AMAX1(1.,NBAR)
      BNBAR = B/FNDEN
      IF (ITRANS(INDX).EQ.0) THEN
C BEG OCT 1998
         NPRDX = 0
C BEG DEC 2000
C        IF (ILABLY.EQ.9260.OR.ILABLY.EQ.9280) NPRDX = NNPRT
C BEG NOV 2003
         IF (ILABLY.EQ.9260.OR.ILABLY.EQ.9280.OR.ILABLY.EQ.9290
C END NOV 2003
     1   .OR.ILABLY.EQ.9220.OR.ILABLY.EQ.9160) NPRDX = NNPRT
C END DEC 2000
C BEG OCT 2001
         IF (NNPRT.GE.2) THEN
            WRITE(IFILE,'(A,1P,4E12.4)')
     1    ' Teff(1),Teff(2),G13,G23=',TX,TY,G1323(1),G1323(2)
C BEG AUG 2005
            IF (ILABLY.NE.9260.AND.ILABEL.NE.7010.AND.ILABEL.NE.7055
     1     .AND.ILABLY.NE.9120.AND.ILABLY.NE.9140.AND.ILABLY.NE.9255
     1     .AND.ILABEL.NE.7140)
     1      WRITE(IFILE,'(A,A,/,A,1P,E12.4)')
     1    ' EIGVAL,EIGVLX are eigenvalues before knockdown for',
     1    ' smearing the stringers',
     1    ' and/or rings, that is, before knockdown by the factor,',
     1      FKNEIG
C BEG DEC 2005
            WRITE(IFILE,'(/,A,/,A,A,/,A)')
     1    ' If EIGVAL and EIGVLX are different:',
     1    ' EIGVAL = eigenvalue with fractional wavenumbers and',
     1    ' "fractional" slope',
     1    ' EIGVLX = original eigenvalue: no "fractional" refinement'
C END DEC 2005
            WRITE(IFILE,'(A,1P,2E12.4)')
     1    ' EIGVAL,EIGVLX before knockdown for t.s.d.=',EIGVAL,EIGVLX
C BEG JUN 2006
            IF (ITYPE.EQ.2.AND.IDESGN.EQ.0.AND.IFLAT.EQ.0
     1                    .AND.ILABLY.EQ.9260.AND.ILABEL.EQ.7185) THEN
               WRITE(8,'(/,A,A,/,A,/,A,/,A)')
     1       ' Halfwavenumbers m and n, nodal line slope, SLOPE, and',
     1       ' eigenvalues',
     1       ' (NOTE: No knockdown factors have yet been applied)',
     1       '   Axial    Circumf.  nodal line     eigenvalue',
     1       ' halfwaves halfwaves    slope      from Sub. EIG1'
               WRITE(8,'((I6,I10,1P,2E15.4))')
C BEG MAY 2007
     1         ((I,J,EIG1SLP(I,J),EIG1EIG(I,J), J=1,20),I=1,10)
C END MAY 2007
            ENDIF
C END JUN 2006
         ENDIF
C END AUG 2005
C END OCT 2001
C BEG DEC 2001
         EIGVLB = EIGVAL
C END DEC 2001
         CALL SHRRED(IREDUC,NX,NY,NXY,TX,TY,G1323,EIGVAL,NPRDX,1,JJJ,
     1               AMBAR,BNBAR,1,NXP,NYP,18)
C END OCT 1998
C BEG DEC 2001
         SHRFCT = 1.0
C BEG OCT 2004
C23456789012345678901234567890123456789012345678901234567890123456789012
         IF ((ILABLY.EQ.9260.OR.ILABLY.EQ.9280)
     1   .AND.ILABEL.GE.7185.AND.ILABEL.LE.7200) SHRFCT = EIGVAL/EIGVLB
C END OCT 2004
         IF (SHRFCT.GT.1.0) SHRFCT = 1.0
C END DEC 2001
         CALL SHRRED(IREDUC,NX,NY,NXY,TX,TY,G1323,EIGVLX,0,1,JJJ,
     1               AMBAR,BNBAR,1,NXP,NYP,19)
C BEG OCT 2001
         IF (NNPRT.GE.2) THEN
            WRITE(IFILE,'(A,1P,2E12.4)')
     1    ' EIGVAL,EIGVLX after  knockdown for t.s.d.=',EIGVAL,EIGVLX
C BEG AUG 2005
            IF (ILABLY.NE.9260.AND.ILABEL.NE.7010.AND.ILABEL.NE.7055
     1     .AND.ILABLY.NE.9120.AND.ILABLY.NE.9140.AND.ILABLY.NE.9255
     1     .AND.ILABEL.NE.7140)
     1      WRITE(IFILE,'(A,1P,2E12.4,/,A)')
     1    ' EIGVAL,EIGVLX after knockdown for smearing stringers=',
     1      EIGVAL*FKNEIG,EIGVLX*FKNEIG,
     1 '               but before knockdown for smearing rings.'
C END AUG 2005
C BEG NOV 2003
            WRITE(IFILE,'(A,1P,E12.4)')
     1    ' EIGRAT = EIGTST/EIGTS2 = ',EIGRAT
C END NOV 2003
         ENDIF
C END OCT 2001
      ENDIF
C END MAR 1998
C
C     
C NEW OUTPUT IN CASE ITUTOR.NE.0.  THIS BLOCK GOES INTO GENSTB ON
C DECEMBER 30,1984
C
C BEG NOV 2003
C BEG MAR 1998
C     IF (ITUTOR.NE.0.OR.NPRNT.EQ.INDX) THEN
C END MAR 1998
      IF (NNPRT.GE.2.AND.ILABLY.EQ.9260.AND.ILABLY.EQ.7235) THEN
C END NOV 2003
C
         YESNO = '  YES'
         IF (IREDUC.EQ.0) YESNO = '   NO'
C
         GO TO (2,3,4,5),INDX
    2    PHRAS1='Local buckling (simple support along stiffener lines).'
         GO TO 6
    3    PHRAS1='General buckling (simple support at all boundaries).'
         GO TO 6
    4    PHRAS1='Smeared stringers, between rings (s.s. along rings).'
         GO TO 6
    5    PHRAS1=' between stringers (ss along stringers).'
C
    6    IROLL1 = IROLL + 1
         GO TO (8,10),IROLL1
    8    PHRAS2='Rolling of non-smeared stiffeners is not included.'
         GO TO 11
   10    PHRAS2='Rolling of non-smeared stiffeners is included.'
C
   11    CONTINUE
C
         WRITE(IFILE,12) PHRAS1,PHRAS2
   12    FORMAT(/' We are now in SUBROUTINE GENSTB, which is called'/
     1 ' from SUBROUTINE BUCPAN. PANDA-type "closed form" analysis.'/
     1 ' In this particular call to SUBROUTINE GENSTB we obtain'/
     1 ' a buckling load factor for buckling of the following type:'//
     1 1X,A70/1X,A70)
C
         IF (ITHRU.EQ.1) THEN
            IF (IARGTH.EQ.0.AND.IFLAT.EQ.0.AND.IFFLAT.EQ.0
     1                     .AND.ISHEAR.EQ.1) WRITE(IFILE,121)
            IF (IARGTH.EQ.1) WRITE(IFILE,122)
            IF (IARGTH.EQ.2) WRITE(IFILE,123)
         ELSE
            IF (IARGTH.EQ.0) WRITE(IFILE,124)
            IF (IARGTH.EQ.1) WRITE(IFILE,125)
            IF (IARGTH.EQ.2) WRITE(IFILE,126)
         ENDIF
  121    FORMAT(/' IAGAIN=0: THERE WILL BE NO AVERAGING OF EIGENVALUES'/
     1'           FROM (c.ne.0,d=0) and (c=0,d.ne.0) MODELS FOR THIS'/
     1'           BUCKLING MODE. (For a discussion of these two models'/
     1'           see the article on PANDA in Computers and Structures'/
     1'           vol. 27, 1987: Fig. 9 on page 554.  This averaging'/
     1'           is done only if the panel is curved, if there is in-'/
     1'           plane shear loading, and if the critical number of'/
     1'           halfwaves in the circumferential direction is one.)')
  122    FORMAT(/' ITHRU=1,IAGAIN=1: EIGENVALUES FROM (c.ne.0,d=0) and'/
     1'           (c=0,d.ne.0) MODELS (see Fig.9, p554, C and S, 1987)'/
     1'           WILL BE AVERAGED FOR THIS BUCKLING MODE. IN THIS RUN'/
     1'           OF GENSTB THE (c.ne.0, d=0) MODEL IS USED, THAT IS,'/
     1'           THE PANEL IS ASSUMED TO BE LONG IN THE X-DIRECTION.'/
     1'           IN THE FOLLOWING RUN OF GENSTB THE (c=0, d.ne.0)'/
     1'           MODEL WILL BE USED, THAT IS, THE PANEL WILL BE'/
     1'           ASSUMED LONG IN THE Y-DIRECTION.')
  123    FORMAT(/' ITHRU=1,IAGAIN=2: EIGENVALUES FROM (c=0,d.ne.0) and'/
     1'           (c.ne.0,d=0) MODELS (see Fig.9, p554, C and S, 1987)'/
     1'           WILL BE AVERAGED FOR THIS BUCKLING MODE. IN THIS RUN'/
     1'           OF GENSTB THE (c=0, d.ne.0) MODEL IS USED, THAT IS,'/
     1'           THE PANEL IS ASSUMED TO BE LONG IN THE Y-DIRECTION.'/
     1'           IN THE FOLLOWING RUN OF GENSTB THE (c.ne.0, d=0)'/
     1'           MODEL WILL BE USED, THAT IS, THE PANEL WILL BE'/
     1'           ASSUMED LONG IN THE X-DIRECTION.')
  124    FORMAT(/' ITHRU = 2:  ERROR  ERROR  ERROR  (IAGAIN=0)')
  125    FORMAT(/' ITHRU = 2: PANEL ASSUMED TO BE LONG IN THE Y'/
     1'            DIRECTION, THAT IS THE (c=0, d.ne.0) MODEL IS USED.')
  126    FORMAT(/' ITHRU = 2: PANEL ASSUMED TO BE LONG IN THE X'/
     1'            DIRECTION, THAT IS THE (c.ne.0, d=0) MODEL IS USED.')
C
         WRITE(IFILE,13)
     1        ITHRU,IAGAIN,FCUR*R,A,B,TESTSH,C44MLT,NX,NY,NXY,NXP,NYP
C
   13    FORMAT(/' ITHRU=',I1,', IAGAIN=',I1,
     1': DIMENSIONS AND LOADS...'//
     1'  Radius of curvature of panel (if flat, R=0.),     R=',1PE12.4/
     1'  Axial, circumferential lengths, this buckling model=',1P2E12.4/
     1'  Panel length test parameters,          TEST,C44MLT =',1P2E12.4/
     1'  Eigenvalue in-plane loads/length of edge, Nx,Ny,Nxy=',1P3E12.4/
     1'  Fixed      in-plane loads/length of edge, Nxo, Nyo =',1P2E12.4)
C23456789012345678901234567890123456789012345678901234567890123456789012
C
         IF (IROLL.EQ.1) THEN
            IF (ISTIF(ISR).NE.3) THEN
               WRITE(IFILE,132) RESLT(1),RPRE(1),RESLT(2),RPRE(2)
            ELSE
               WRITE(IFILE,133) RESLT(1),RPRE(1)
            ENDIF
  132       FORMAT(/' RESULTANTS IN WEB(S) AND OUTSTANDING FLANGE:'/
     1'  Total resultant in web (Load sets A+B),    RESLT(1)=',1PE12.4/
     1'  Fixed resultant in web (Load set B only),   RPRE(1)=',1PE12.4/
     1'  Total resultant in flange (Load sets A+B), RESLT(2)=',1PE12.4/
     1'  Fixed resultant in flange (Load set B only),RPRE(2)=',1PE12.4)
  133       FORMAT(/' RESULTANTS IN BLADE:'/
     1'  Total resultant in blade (Load sets A+B),  RESLT(1)=',1PE12.4/
     1'  Fixed resultant in blade (Load set B only), RPRE(1)=',1PE12.4)
         ENDIF
C
         WRITE(IFILE,1301) C(1,1),C(2,2),C(3,3),
     1                   C(4,4),C(5,5),C(6,6),TX,TY,G1323(1),G1323(2),
     1                   FNEFF,YESNO
C
 1301    FORMAT(/' C(i,j) AND OTHER PROPERTIES:'/
     1'  Constitutive matrix diagonal, [C(i,i), i=1,6]      =',1P6E12.4/
     1'  Effective thickness, x-face, transverse shearing   =',1PE12.4/
     1'  Effective thickness, y-face, transverse shearing   =',1PE12.4/
     1'  Transverse shear stiffness components, G13, G23    =',1P2E12.4/
     1'  Effective no. of circ. halfwaves for EIGMOD,  NEFF =',1PE12.4/
     1'  Is transverse shear deformation weakening included?=',A//
     1'  Buckling load factors and no. of halfwaves (M = axial, N = circ
     1umferential):')
C
         IF (ITRANS(INDX).EQ.0) 
     1         WRITE(IFILE,131) EIGVLS,MWAVE,NWAVE,SLOPEP
  131    FORMAT(
     1'    Neglecting transverse shear deformation weakening=',1PE12.4,
     1' (M =',I3,', N =',I3,') halfwaves. Nodal line slope=',1PE12.4)
         IF (IREDUC.EQ.1) WRITE(IFILE,14) EIGVAL,MWAVE,NWAVE,SLOPEP
   14    FORMAT(
     1'    Including  transverse shear deformation weakening=',1PE12.4,
     1' (M =',I3,', N =',I3,') halfwaves. Nodal line slope=',1PE12.4)
         WRITE(IFILE,15)
   15    FORMAT(' ******************************************************
     1****************************************************************')
C
      ENDIF
C
C BEG APR 1997
      IF (IDESGN.EQ.1) THEN
C BEG MAR 1998
         IF (ITUTOR.EQ.1.OR.NPRNT.EQ.INDX)
     1      WRITE(8,*)' PARX2,ISOGRD=',PARX2,ISOGRD
C END MAR 1998
         IF (PARX2.GT.0.1.AND.ISOGRD.EQ.0) THEN
              ESXNEW = EIGVAL
              CALL EIGKNK(PARX1,PARX2,NBAR,EIGVAL,PX,PY,PXY,
     1                    ESXNEW,IFILE,NPRNT,INDX,1,ITUTOR)
C BEG OCT 1998
C BEG NOV 2003
              IF (NNPRT.GE.2.AND.ILABLY.GE.9260)
C ENG NOV 2003
     1           WRITE(IFILE,'(A,1P,E12.4,/,A,1P,E12.4)')
     1' Buckling load factor BEFORE knockdown for smeared stringers =',
     1  EIGVAL,
     1' Buckling load factor AFTER  knockdown for smeared stringers =',
     1  ESXNEW
C END OCT 1998
              EIGVAL = ESXNEW
C BEG MAR 1998
              ESXNEW = EIGVLX
              CALL EIGKNK(PARX1,PARX2,NBAR,EIGVLX,PX,PY,PXY,
     1                    ESXNEW,IFILE,NPRNT,INDX,1,ITUTOR)
              EIGVLX = ESXNEW
C END MAR 1998
         ENDIF
      ENDIF
C END APR 1997
C BEG OCT 1996
 2221 CONTINUE
C BEG MAR 1997
C     IF (ILABLY.EQ.9110.AND.INDX.EQ.2) THEN
      IF (ILABLY.EQ.9110.AND.INDX.EQ.2.AND.IEIGAM.EQ.0) THEN
         IEIGAM = 1
C END MAR 1997
C   Need eigenvalue EIGAMG for amplification of global thermal distortion
C   and global distortion from normal pressure. We only need to do
C   (n,m)=(1,1), and we need to search over "slope" domain...
         IF (IDESGN.EQ.0) CSLAMG = 0.
         EIGAMG = 10.E+16
         CALL EIG(A,B,1.,1.,PX,PY,0.0,CSLAMG,IDESGN,EIGAMG,INDX,
     1            FFLAT,IARGTH,0)
         IF (PARX2.GT.0.1.AND.ISOGRD.EQ.0) THEN
              ESXNEW = EIGAMG
              CALL EIGKNK(PARX1,PARX2,1.,EIGAMG,PX,PY,0.0,
     1                    ESXNEW,IFILE,NPRNT,INDX,1,0)
              EIGAMG = ESXNEW
         ENDIF
         EIGVLS = EIGAMG
         IF (ITRANS(INDX).EQ.0)
     1      CALL SHRRED(IREDUC,NX,NY,0.0,TX,TY,G1323,EIGAMG,0,1,JJJ,
C BEG OCT 1996
C BEG NOV 1997
     1                  A,B,1,NXP,NYP,20)
C END NOV 1997
C END OCT 1996
C BEG MAR 1997
C        IF (IDESGN.EQ.0) FACAMG = (1./FLOAT(MWAVE))**2
         IF (IDESGN.EQ.0) FACAMG = 1.0
C END MAR 1997
         IF (NNPRT.GE.2)
     1   WRITE(IFILE,'(A,I6,1P,3E12.4)')
     1      ' (m,n)=(1,1): GLOBAL MWAVE,EIGAMG,SLOPE,FACAMG=',
     1                            MWAVE,EIGAMG,CSLAMG,FACAMG
      ENDIF
C
C BEG MAR 1997
C     IF (ILABLY.EQ.9120.AND.INDX.EQ.3) THEN
      IF (ILABLY.EQ.9120.AND.INDX.EQ.3.AND.IEIGAM.EQ.0) THEN
         IEIGAM = 1
C END MAR 1997
C   Need eigenvalue EIGAMS for amplification of inter-ring thermal distortion
C   and inter-ring distortion from normal pressure. We only need to do
C   (n,m)=(1,1), and we need to search over "slope" domain...
         IF (IDESGN.EQ.0) CSLAMS = 0.
         EIGAMS = 10.E+16
         CALL EIG(A,B,1.,1.,PX,PY,0.0,CSLAMS,IDESGN,EIGAMS,INDX,
     1            FFLAT,IARGTH,0)
         IF (PARX2.GT.0.1.AND.ISOGRD.EQ.0) THEN
              ESXNEW = EIGAMS
              CALL EIGKNK(PARX1,PARX2,1.,EIGAMS,PX,PY,0.0,
     1                    ESXNEW,IFILE,NPRNT,INDX,1,0)
              EIGAMS = ESXNEW
         ENDIF
         EIGVLS = EIGAMS
         IF (ITRANS(INDX).EQ.0)
     1      CALL SHRRED(IREDUC,NX,NY,0.0,TX,TY,G1323,EIGAMS,0,1,JJJ,
C BEG OCT 1996
C BEG NOV 1997
     1                  A,B,1,NXP,NYP,21)
C END NOV 1997
C END OCT 1996
C BEG MAR 1997
C        IF (IDESGN.EQ.0) FACAMS = (1./FLOAT(NWAVE))**2
         IF (IDESGN.EQ.0) FACAMS = 1.0
C END MAR 1997
         IF (NNPRT.GE.2)
     1   WRITE(IFILE,'(A,1P,3E12.4)')
     1      ' (m,n)=(1,1): INTER-RING EIGAMS,SLOPE,FACAMS=',
     1                                EIGAMS,CSLAMS,FACAMS
      ENDIF
C END OCT 1996
C BEG FEB 1996
 2222 CONTINUE
C END FEB 1996
C BEG MAY 1998
      ISAND = ISNDSX
C END MAY 1998
C BEG OCT 2001
C BEG APR 2007
      IF (NPRNT.EQ.INDX) THEN
       WRITE(IFILE,'(A,1P,E12.4)')' LEAVING GENSTB: EIGVLX=',EIGVLX
       WRITE(IFILE,'(A,1P,E12.4)')' LEAVING GENSTB: EIGVAL=',EIGVAL
      ENDIF
C END APR 2007
C END OCT 2001
      RETURN
      END   
C
C
C
C=DECK      EIGKNK
      SUBROUTINE EIGKNK(PARX1,PARX2,NBAR,EIGVAL,PX,PY,PXY,EIGNEW,
C BEG APR 1997
     1                  IFILE,NPRNT,INDX,IPRINT,ITUTOR)
C END APR 1997
C
C   PURPOSE IS TO KNOCK DOWN THE EIGENVALUE TO ACCOUNT FOR THE
C   FACT THAT SMEARING THE STRINGERS IS SOMEWHAT UNCONSERVATIVE.
C   SEE SUBROUTINE EIGMOD FOR A FULLER EXPLANATION.
C
C BEG MAR 2007
      COMMON/GEOM3/ISTIF(2),NLAYER(4,2),NSEG(2),INTEXT(2)
      COMMON/ECCRRR/ECCARR(4),EIEFF2,FNCRIT,ECCN,WIDKNK
      COMMON/SHRFCX/SHRFAC,SMRFAC
C END MAR 2007
C BEG OCT 2006
      COMMON/ICONSX/ICONSV
C END OCT 2006
C BEG NOV 2003
      COMMON/ILABLX/ILABLY
      COMMON/OUTP/NNPRT
C END NOV 2003
      COMMON/DISKKK/DISKNK
      REAL NBAR
C
C      PXPY = SQRT(PX*PX + PY*PY)
C      IF (ABS(PXY).LT.0.25*PXPY) FACT = 1.0
C      IF (ABS(PXY).GT.1.0*PXPY)  FACT = 1.55
C      IF (ABS(PXY).GE.0.25*PXPY.AND.ABS(PXY).LE.1.0*PXPY) THEN
C         RATIO = ABS(PXY)/PXPY
C         FACT  = 0.933333*RATIO + 0.766667
C      ENDIF
       EIGNEW = EIGVAL
C BEG JAN 2005 (The 1.17647 = 1/0.85; the 1.066333 comes from STAGS comparison)
       IF (NBAR.EQ.0.) THEN
          IF (INDX.NE.2) THEN
             FSAFE2 = 1.17647
          ELSE
             FSAFE2 = 1.066333
          ENDIF
C BEG OCT 2006
          IF (ICONSV.LT.1) FSAFE2 = 1.0
C END OCT 2006
          EIGNEW = EIGVAL/FSAFE2
C BEG MAR 2007
          SMRFAC = ABS(EIGNEW/EIGVAL)
          IF (SHRFAC.GT.0.01) THEN
             IF ((ISTIF(2).EQ.0.AND.INDX.EQ.2).OR.
     1        INDX.EQ.3) SMRFAC = MIN(SMRFAC,WIDKNK/SHRFAC)
          ENDIF
          IF (SMRFAC.GT.1.0) SMRFAC = 1.0
          EIGNEW = EIGVAL*SMRFAC
C END MAR 2007
          RETURN
       ENDIF
C END JAN 2005
       WBAR = PARX1/NBAR
       FACT = DISKNK
       FSAFE= (1.-FACT)*WBAR + 2.5*FACT - 1.5
       IF (WBAR.LE.1.5) FSAFE = FACT
       IF (WBAR.GT.2.5) FSAFE = 1.0
       FSAFE2 = 1. +(FSAFE-1.)*PARX2
       IF (FSAFE2.LT.1.0) FSAFE2 = 1.0
C BEG JAN 2005 (The 1.17647 = 1/0.85; the 1.066333 comes from STAGS comparison)
C BEG OCT 2006
       IF (ICONSV.EQ.1) THEN
C END OCT 2006
          IF (INDX.NE.2) THEN
             FSAFE2 = MAX(FSAFE2,1.17647)
          ELSE
             FSAFE2 = MAX(FSAFE2,1.066333)
          ENDIF
C BEG OCT 2006
       ENDIF
C END OCT 2006
C END JAN 2005
       EIGNEW = EIGVAL/FSAFE2
C BEG MAR 2007
       SMRFAC = ABS(EIGNEW/EIGVAL)
       IF (SHRFAC.GT.0.01) THEN
          IF ((ISTIF(2).EQ.0.AND.INDX.EQ.2).OR.
     1     INDX.EQ.3) SMRFAC = MIN(SMRFAC,WIDKNK/SHRFAC)
       ENDIF
       IF (SMRFAC.GT.1.0) SMRFAC = 1.0
       EIGNEW = EIGVAL*SMRFAC
C END MAR 2007
C
C BEG APR 1997
C      IF (IPRINT.EQ.1.AND.NPRNT.EQ.INDX) THEN
C BEG NOV 2003
C      IF ((IPRINT.EQ.1.AND.NPRNT.EQ.INDX).OR.ITUTOR.EQ.1) THEN
C BEG MAR 2005
       IF (NNPRT.GE.3.AND.(ILABLY.EQ.9150.OR.ILABLY.EQ.9260)) THEN
C END MAR 2005
C END NOV 2003
C END APR 1997
          WRITE(IFILE,10)
          WRITE(IFILE,15) DISKNK
   10     FORMAT(/' We are in SUBROUTINE EIGKNK, called from GENSTB.'/
     1 ' The purpose is to modify the buckling load factor in order'/
     1 ' to account for possible nonconservativeness involved in'/
     1 ' smearing the stiffeners. If there are not at least 2.5'/
     1 ' stiffeners per half-wavelength of the buckling pattern, the'/
     1 ' eigenvalue from the smeared-stiffener (PANDA-type) analysis'/
     1 ' is divided by a factor FSAFE2, which is calculated thus:')
   15     FORMAT(
     1 '       WBAR = (WIDTH/NWAVES)/SPACNG'/
     1 '       FSAFE= (1.-FACT)*WBAR + 2.5*FACT - 1.5 '/
     1 ' in which the quantity FACT equals',1PE12.4,'.'/
     1 '       IF (WBAR.LE.1.5) FSAFE = FACT'/
     1 '       IF (WBAR.GT.2.5) FSAFE = 1.0'/
     1 '       FSAFE2 = 1. +(FSAFE-1.)*ABS(1.-C44/CS44)'/
     1 '       FSAFE2 = MAX(FSAFE2,1.17647)'/
     1 '       EIGNEW = EIGVAL/FSAFE2'/)
          WRITE(IFILE,20) PARX1,NBAR,WBAR,FSAFE,PARX2,
     1                    FSAFE2,EIGVAL,EIGNEW
   20     FORMAT(' in which'/
     1 ' Width of the panel/(stringer spacing),  WIDTH/SPACNG=',1PE12.4/
     1 ' Effective number of half-waves across WIDTH,  NWAVES=',1PE12.4/
     1 ' Ratio of buckling half-wavelength to spacing,   WBAR=',1PE12.4/
     1 ' First modification factor,                     FSAFE=',1PE12.4/
     1 ' Axial bending stiffness factor,        (1.-C44/CS44)=',1PE12.4/
     1 ' Factor by which the eigenvalue obtained from the'/
     1 '   smeared-stiffener model should be divided,  FSAFE2=',1PE12.4/
     1 ' Eigenvalue from the smeared-stiffener model,  EIGVAL=',1PE12.4/
     1 ' Reduced eigenvalue,           EIGVAL/FSAFE2 = EIGNEW=',1PE12.4)
       ENDIF
C
      RETURN
      END
C
C
C
C=DECK      EIGMOD
      SUBROUTINE EIGMOD(CIRC,NWAVES,SPACNG,EIGVAL,ITUTOR,IFILE,
     1                  C44,CS44,FSAFE2,PX,PY,PXY,ICNTRL,INDX)
C
C BEG MAR 2007
      COMMON/GEOM3/ISTIF(2),NLAYER(4,2),NSEG(2),INTEXT(2)
      COMMON/ECCRRR/ECCARR(4),EIEFF2,FNCRIT,ECCN,WIDKNK
      COMMON/SHRFCX/SHRFAC,SMRFAC
C END MAR 2007
C BEG OCT 2006
      COMMON/ICONSX/ICONSV
C END OCT 2006
C BEG NOV 2003
      COMMON/ILABLX/ILABLY
      COMMON/OUTP/NNPRT
C END NOV 2003
      COMMON/ISOGR/ISOGRD,ISOANG
      COMMON/NDEBUG/NPRNT
      COMMON/DISKKK/DISKNK
      REAL NWAVES
C
C  PROVIDE KNOCKDOWN FOR CASE IN WHICH SMEARING STRINGERS LEADS TO
C  UNCONSERVATIVE RESULTS...(ADDED JULY 29, 1987), MODIFIED 19 NOV. 1988
C
       IF (ISOGRD.NE.0) RETURN
C BEG JAN 2005
       IF (NWAVES.EQ.0.) THEN
          IF (ICNTRL.EQ.1) THEN
             FSAFE2 = 1.17647
          ELSE
             FSAFE2 = 1.066333
          ENDIF
C BEG OCT 2006
          IF (ICONSV.LT.1) FSAFE2 = 1.0
C END OCT 2006
          EIGNEW = EIGVAL/FSAFE2
C BEG MAR 2007
          SMRFAC = ABS(EIGNEW/EIGVAL)
          IF (SHRFAC.GT.0.01) THEN
             IF ((ISTIF(2).EQ.0.AND.INDX.EQ.2).OR.
     1        INDX.EQ.3) SMRFAC = MIN(SMRFAC,WIDKNK/SHRFAC)
          ENDIF
          IF (SMRFAC.GT.1.0) SMRFAC = 1.0
          EIGNEW = EIGVAL*SMRFAC
C END MAR 2007
          EIGVAL = EIGNEW
          RETURN
       ENDIF
C END JAN 2005
C 
       FN = NWAVES
       WBAR = (CIRC/FN)/SPACNG
C      PXPY = SQRT(PX*PX + PY*PY)
C      IF (ABS(PXY).LT.0.25*PXPY) FACT = 1.0
C      IF (ABS(PXY).GT.1.0*PXPY)  FACT = 1.55
C      IF (ABS(PXY).GE.0.25*PXPY.AND.ABS(PXY).LE.1.0*PXPY) THEN
C         RATIO = ABS(PXY)/PXPY
C         FACT  = 0.933333*RATIO + 0.766667
C      ENDIF
       FACT = DISKNK
       FSAFE= (1.-FACT)*WBAR + 2.5*FACT - 1.5
       IF (WBAR.LE.1.5) FSAFE = FACT
       IF (WBAR.GT.2.5) FSAFE = 1.0
       FSAFE2 = 1. +(FSAFE-1.)*ABS(1.-C44/CS44)
C BEG JAN 2005 (The 1.17647 = 1/0.85; the 1.066333 comes from STAGS comparison)
C BEG OCT 2006
       IF (ICONSV.EQ.1) THEN
C END OCT 2006
          IF (ICNTRL.EQ.1) THEN
             FSAFE2 = MAX(FSAFE2,1.17647)
          ELSE
             FSAFE2 = MAX(FSAFE2,1.066333)
          ENDIF
C BEG OCT 2006
       ENDIF
C END OCT 2006
C END JAN 2005
       EIGNEW = EIGVAL/FSAFE2
C BEG MAR 2007
       SMRFAC = ABS(EIGNEW/EIGVAL)
       IF (SHRFAC.GT.0.01) THEN
          IF ((ISTIF(2).EQ.0.AND.INDX.EQ.2).OR.
     1     INDX.EQ.3) SMRFAC = MIN(SMRFAC,WIDKNK/SHRFAC)
       ENDIF
       IF (SMRFAC.GT.1.0) SMRFAC = 1.0
       EIGNEW = EIGVAL*SMRFAC
C END MAR 2007
C BEG NOV 2003
C      IF (ITUTOR.NE.0.OR.NPRNT.NE.0) THEN
       IF (NNPRT.GE.3.AND.ILABLY.EQ.9260) THEN
C END NOV 2003
          WRITE(IFILE,10)
          WRITE(IFILE,15) DISKNK
   10     FORMAT(/' We are in SUBROUTINE EIGMOD, called from BUCPAN.'/
     1 ' The purpose is to modify the buckling load factor in order'/
     1 ' to account for possible nonconservativeness involved in'/
     1 ' smearing the stiffeners. If there are not at least 2.5'/
     1 ' stiffeners per half-wavelength of the buckling pattern, the'/
     1 ' eigenvalue from the smeared-stiffener (PANDA-type) analysis'/
     1 ' is divided by a factor FSAFE2, which is calculated thus:')
   15     FORMAT(
     1 '       WBAR = (WIDTH/NWAVES)/SPACNG'/
     1 '       FSAFE= (1.-FACT)*WBAR + 2.5*FACT - 1.5 '/
     1 ' in which the quantity FACT equals ',1PE12.4,'.'/ 
     1 '       IF (WBAR.LE.1.5) FSAFE = FACT'/
     1 '       IF (WBAR.GT.2.5) FSAFE = 1.0'/
     1 '       FSAFE2 = 1. +(FSAFE-1.)*ABS(1.-C44/CS44)'/
     1 '       FSAFE2 = MAX(FSAFE2,1.17647)'/
     1 '       EIGNEW = EIGVAL/FSAFE2'/)
          WRITE(IFILE,20) CIRC,NWAVES,SPACNG,WBAR,FSAFE,C44,CS44,
     1                    FSAFE2,EIGVAL,EIGNEW
   20     FORMAT(' in which'/
     1 ' Width of the panel (or length, if rings only), WIDTH=',1PE12.4/
     1 ' Effective number of half-waves across WIDTH,  NWAVES=',1PE12.4/
     1 ' Spacing of the stiffeners,                    SPACNG=',1PE12.4/
     1 ' Ratio of buckling half-wavelength to spacing,   WBAR=',1PE12.4/
     1 ' First modification factor,                     FSAFE=',1PE12.4/
     1 ' Bending stiffness of panel skin normal to WIDTH, C44=',1PE12.4/
     1 ' Bending stiffness with smeared stiffeners,      CS44=',1PE12.4/
     1 ' Factor by which the eigenvalue obtained from the'/
     1 '   smeared-stiffener model should be divided,  FSAFE2=',1PE12.4/
     1 ' Eigenvalue from the smeared-stiffener model,  EIGVAL=',1PE12.4/
     1 ' Reduced eigenvalue,           EIGVAL/FSAFE2 = EIGNEW=',1PE12.4)
C
       ENDIF
C 
      EIGVAL = EIGNEW
      RETURN
      END
C
C
C
C=DECK      WGTAVE
      SUBROUTINE WGTAVE(PNX,PNY,PNXY,EIG2ND,EIGLOC,IAGAIN)
C
C  PURPOSE IS TO OBTAIN WEIGHTED AVERAGE FOR EIGENVALUE FROM TWO MODELS,
C  ONE IN WHICH THE PANEL IS CURVED AND THE OTHER IN WHICH IT IS FLAT.
C
      IF (IAGAIN.EQ.2.AND.ABS(EIG2ND).LT.ABS(EIGLOC)) RETURN
      IF (IAGAIN.EQ.1.AND.ABS(EIG2ND).GT.ABS(EIGLOC)) RETURN
      IF (IAGAIN.EQ.0) RETURN
C     FX1 = 1.0
C     IF (PNX.GT.0.) FX1 = 0.
C     FX2 = 1.0
C     IF (PNY.GT.0.) FX2 = 0.
C     XDEN = SQRT(FX1*PNX**2+FX2*PNY**2)
C     XW = 100.
C     IF (XDEN.GT.0.) XW= ABS(PNXY)/XDEN
      WEIGHT = 0.5
C     IF (IAGAIN.NE.2.AND.XW.LT.1.0) WEIGHT = 0.5*XW
C BEG MAR 1998
      IF (EIG2ND.GE.EIGLOC) THEN
         WEIGHT = 0.5*(EIGLOC/EIG2ND)**2
         EIGLOC = (1.-WEIGHT)*EIGLOC + WEIGHT*EIG2ND
      ELSE
         WEIGHT = 0.5*(EIG2ND/EIGLOC)**2
         EIGLOC = WEIGHT*EIGLOC + (1.-WEIGHT)*EIG2ND
      ENDIF
C END MAR 1998
      RETURN
      END
C
C
C
C=DECK      ARBOCZ
      SUBROUTINE ARBOCZ(ILABEL,INDX,IDESGN,IFILE,NPRT,L,CIRC,R,
     1       EIGPAN,ITUTOR,IREDUC,TX,TY,G1323,
     1       C,W0,NX,NY,NXY,NXF,NYF,NXYF,CSLOPE,MWAVE,NWAVE,WCRIT,
C BEG MAR 1997
     1       MPANDA,NPANDA,SPANDA,EIGVAL,PARX1,PARX2,ISLOPE,
C BEG JULY 2006
     1       ICUBIC,JCUBIC,IARBOC,ILOADS)
C END JULY 2006
C END MAR 1997
C
C  PURPOSE IS TO FIND BUCKLING LOAD OF AXISYMMETRICALLY IMPERFECT
C  CYLINDRICAL SHELL.  EQUATIONS ARE FROM "The effect of initial
C  imperfections on shell stability - an updated review", by
C  Johann Arbocz, Faculty of Aerospace Engineering, Delft University
C  of Technology, Report LR-695, Sept. 1992: Equation no. (3.61)
C
C BEG JULY 2006
      COMMON/NMFIXD/NUSER(5),MUSER(5),NOSRCH(5)
C END JULY 2006
C BEG JUL 1999
      COMMON/EIG7ZX/EIG7Z
      COMMON/IIG7ZX/IEIG7Z
C END JUL 1999
C BEG MAR 1998
      COMMON/ISANDR/ISAND,ISANDS
C BEG MAY 2007
      DIMENSION MNCHEK(50,20),EIGCHK(50,20),CSLCHK(50,20)
C END MAY 2007
C END MAR 1998
C BEG APR 1998
      DIMENSION MWAVEX(7),NWAVEX(7),SLOPEX(7),EIGMNC(7)
      COMMON/EIGAXX/EIGAXY
C END APR 1998
C BEG JAN 2006
      DIMENSION TESTX(7)
C END JAN 2006
C BEG JULY 1998
      COMMON/ERATMX/ERATMN
      DIMENSION ERATIO(7),EIGMNJ(10),EIGPNA(50),CSLPNA(50)
C END JULY 1998
C BEG FEB 1996
      COMMON/IRESTX/IRESTY
C END FEB 1996
      COMMON/BNDLAY/BLL
      COMMON/ISOGR/ISOGRD,ISOANG
      COMMON/NDEBUG/NPRNT
      COMMON/MMAXWV/MMAX
      DIMENSION C(6,6), A(3,3), ASBAR(3,3), B(3,3), BS(3,3)
      DIMENSION BB(3,3),BSBAR(3,3),D(3,3), DS(3,3), DSBAR(3,3)
      DIMENSION G1323(*)
      REAL NMAXM1,NMINM1,MBAR,NBAR,NSAVE,MSAVE
      REAL NU,L,NCRIT,NX,NY,NXY,NXF,NYF,NXYF,NXBAR,NXBARF
C ***********************
C  DEBUG OUTPUT:
      NPRNT = 0
C     IF (ILABEL.EQ.9150) NPRNT = INDX
C     IF (ILABEL.EQ.9151) NPRNT = INDX
C     IF (ILABEL.EQ.9210) NPRNT = INDX
C     IF (ILABEL.EQ.9211) NPRNT = INDX
C     IF (ILABEL.EQ.9240) NPRNT = INDX
C     IF (ILABEL.EQ.9241) NPRNT = INDX
C BEG DEC 2005
C     IF (ILABEL.EQ.9242) NPRNT = INDX
C END DEC 2005
C BEG MAR 1998
C BEG NOV 2003
C23456789012345678901234567890123456789012345678901234567890123456789012

C BEG DEC 2003
      IF (NPRT.GE.2) WRITE(IFILE,'(A,/,A,/,A,/,A,/,A,/,A,/,A)')
     1 ' *********** ENTERING ARBOCZ: "ARBOCZ" theory ***********',
     1' THE PURPOSE IS TO FIND BUCKLING LOAD OF AN AXISYMMETRICALLY',
     1' IMPERFECT CYLINDRICAL SHELL. Equations are from "The effect of',
     1' initial imperfections on shell stability - an updated review"',
     1' by Johann Arbocz, Faculty of Aerospace Engineering, Delft',
     1' University of Technology, Report LR-695, Sept. 1992. In',
     1' particular, see Equation No. (3.61).'
C END DEC 2003
      IF (NPRT.GE.2) WRITE(IFILE,
     1 '(A,/,A,/,A,/,A,/,A,/,A,1P,E12.4,/,A,3I5,1P,E12.4,/,A,/,A)')
     1' "ARBOCZ" theory is described in the AIAA paper 96-1337-CP',
     1' D. Bushnell, "Recent enhancements to PANDA2", Proc. 37th AIAA',
     1' SDM Meeting, pp 126-182, 1996. See especially pp. 131-136.',
     1 ' NOTE: Eigenvalues are NORMALIZED by the buckling load from',
     1'        the PANDA-type theory computed in SUBROUTINE GENSTB,',
     1'        that is, by the load factor EIGPAN =',EIGPAN,
     1 ' IN ARBOCZ: ILABEL,INDX,NPRNT,W0=',ILABEL,INDX,NPRNT,W0,
     1' NOTE: The normalizer, EIGPAN, includes knockdown for smeared',
     1' stringers, but the "ARBOCZ" eigenvalues do not yet include it.'
C END NOV 2003
C BEG JUL 1999
C BEG NOV 2003
         IF (NPRT.GE.2) WRITE(8,'(A,1P,3E12.4,/,A,1P,3E12.4,/,A,A)')
     1 ' Load Set A: Nx,  Ny,  Nxy=',  NX/EIGPAN,NY/EIGPAN,NXY/EIGPAN,
     1 ' Load Set B: Nxo, Nyo, Nxyo=', NXF,NYF,FNXYF,
     1 ' NORMALIZED eigenvalues, EIGMNC, EIGAXY; modes, SLOPEX,MWAVEX',
     1 ' NWAVEX from ARBOCZ theory:'
C END NOV 2003
C END JUL 1999
C END MAR 1998
C ***********************
C BEG MAR 1998
      ISANDZ = ISAND
      ISAND = 0
C END MAR 1998
C BEG APR 1998
      CALL MOVER(10.E+16,0,EIGMNC,1,7)
      CALL MOVER(0.,0,SLOPEX,1,7)
      CALL MOVER(0,0,MWAVEX,1,7)
      CALL MOVER(0,0,NWAVEX,1,7)
C BEG JAN 2006
      CALL MOVER(0.,0,TESTX,1,7)
C END JAN 2006
      IF (NPRNT.EQ.INDX) WRITE(8,'(A,1P,7E10.2)')
     1  ' EIGMNC=',(EIGMNC(I),I=1,7)
C END APR 1998
      PI = 3.1415927
C     NU = C(1,2)/C(1,1)
      NU = 0.0
C     WRITE(8,*)' C(1,2),C(2,2),NU=',C(1,2),C(2,2),NU
      CC = SQRT(3.*(1.-NU**2))
      C44N = ABS(C(4,4) - C(1,4)**2/C(1,1))
      C55N = ABS(C(5,5) - C(2,5)**2/C(2,2))
C BEG MAY 1998
      IF (C55N.LE.0.) C55N = 0.000001*C44N
C END MAY 1998
      T  = SQRT(12.*C44N/C(1,1))
      E  = C(1,1)*(1.-NU**2)/T
      ECC = -1.0
      IF (R.LT.0.0) ECC = 1.0
      ABSR = ABS(R)
      RT2C = ABSR*T/(2.*CC)
      COEFN = CC*ABSR/(E*T**2)
      COEFP = COEFN*ABSR
      XIBAR =  ABS(W0)/T
C BEG JULY 1998
      IF (XIBAR.LT.0.003) XIBAR = 0.
C END JULY 1998
      PBAR = -COEFP*NY/ABSR
      PBARF= -COEFP*NYF/ABSR
      TBAR =  COEFN*NXY
      TBARF=  COEFN*NXYF
C BEG OCT 1998
      FNYMLT = 1.
      IF (NY.GT.0.0) FNYMLT = 0.
      FNNORM = SQRT(NX**2 + FNYMLT*NY**2 + NXY**2)
      DNX = 0.0
      IF (ABS(NX).LT.0.001*FNNORM) DNX = -0.001*FNNORM
      NXBAR = -COEFN*(NX + DNX)
C END OCT 1998
      NXBARF= -COEFN*NXF
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG FEB 1996
      IF (ITUTOR.EQ.1.OR.NPRNT.EQ.INDX) THEN
         WRITE(IFILE,5) W0,NX/EIGPAN,NY/EIGPAN,NXY/EIGPAN,
     1                 R,L,CIRC,C44N,C55N,C(1,1),C(1,4),T,E,EIGPAN
    5    FORMAT(/' IN ARBOCZ: CERTAIN QUANTITIES THAT GOVERN BUCKLING'/
     1 '  amplitude of initial imperfection,               W0=',1PE12.4/
     1 '  axial resultant (eigenvalue part of axial load), Nx=',1PE12.4/
     1 '  hoop  resultant (eigenvalue part of hoop  load), Ny=',1PE12.4/
     1 '  in-plane shear resultant (eigenvalue part),     Nxy=',1PE12.4/
     1 '  radius of cylindrical panel,                      R=',1PE12.4/
     1 '  length of part of cylindrical panel studied here, L=',1PE12.4/
     1 '  width  of part of cylindrical panel studied    CIRC=',1PE12.4/
     1 '  bending stiffness about axial neutral plane,   C44N=',1PE12.4/
     1 '  bending stiffness about hoop  neutral plane,   C55N=',1PE12.4/
     1 '  axial stiffness,                             C(1,1)=',1PE12.4/
     1 '  axial resultant, axial curv. change coupling C(1,4)=',1PE12.4/
     1 '  thickness used in the normalization,              T=',1PE12.4/
     1 '  modulus, E used in the normalization,             E=',1PE12.4/
     1 '  buckling load factor from PANDA2 theory,     EIGPAN=',1PE12.4)
          WRITE(8,1010) R,((C(I,J),J=1,6),I=1,6)
 1010     FORMAT(/' GENERAL INSTAB. MODEL. RADIUS OF CURV., R=',1PE12.4/
     1  ' SMEARED STIFFENER C(i,j) ='/(1P,6E12.4))
          WRITE(8,1011) PBAR,PBARF,TBAR,TBARF,NXBAR,NXBARF
 1011     FORMAT(/' NORMALIZED LOADING='/
     1  ' Normalized pressure, Load Set A=(cR**2/Et**2)*Ny/R =',1PE12.4/
     1  ' Normalized pressure, Load Set B=(cR**2/Et**2)*Nyo/R=',1PE12.4/
     1  ' Normalized shear,    Load Set A=(cR/Et**2)*Nxy     =',1PE12.4/
     1  ' Normalized shear,    Load Set B=(cR/Et**2)*Nxyo    =',1PE12.4/
     1  ' Normalized axialload,Load Set A=(cR/Et**2)*Nx      =',1PE12.4/
     1  ' Normalized axialload,Load Set B=(cR/Et**2)*Nxo     =',1PE12.4)
      ENDIF
C END FEB 1996
C
      ISHEAR = 0  
      IBAL = 0    
      IF (ISLOPE.EQ.1) THEN
         ANORM = SQRT(NX**2 +NY**2)
         IF (ABS(NXY).GT.0.01*ANORM) ISHEAR = 1    
         IF (ABS(NXYF).GT.0.01*ANORM) ISHEAR = 1
C BEG MAR 1998 (The "0.01"s below used to be 0.05)
         IF (ISHEAR.EQ.0.AND.NX.GT.0.0.AND.NY.GT.0.0) GO TO 2222
         IF (ABS(C(1,3)).GT.0.01*C(1,1)) IBAL = 1  
         IF (ABS(C(2,3)).GT.0.01*C(2,2)) IBAL = 1  
         IF (ABS(C(3,4)).GT.0.01*C(4,4)) IBAL = 1  
         IF (ABS(C(3,5)).GT.0.01*C(5,5)) IBAL = 1  
         IF (ABS(C(1,6)).GT.0.01*C(6,6)) IBAL = 1  
         IF (ABS(C(2,6)).GT.0.01*C(6,6)) IBAL = 1  
         SC4466 = SQRT(C(4,4)*C(6,6))
         SC5566 = SQRT(C(5,5)*C(6,6))
C BEG JULY 1998
C        IF (ABS(C(4,6)).GT.0.01*SC4466
C    1                  .AND.ABS(C(5,6)).GT.0.01*SC5566) IBAL = 1
         IF (ABS(C(4,6)).GT.0.01*SC4466
     1                  .OR.ABS(C(5,6)).GT.0.01*SC5566) IBAL = 1
C END JULY 1998
C END MAR 1998
      ENDIF
C
      DO 10 J = 1,3
      DO 10 I = 1,3
         A(I,J) = C(I,J)
         B(I,J) = ECC*C(I,J+3)
         D(I,J) = C(I+3,J+3)
   10 CONTINUE
C
C     WRITE(IFILE,*)' A,B,D Matrices...'
C     DO 13 I = 1,3
C        WRITE(IFILE,11) (A(I,J),J=1,3),
C    1                   (B(I,J),J=1,3),(D(I,J),J=1,3)
C  11    FORMAT(1P3E10.2,3X,1P3E10.2,3X,1P3E10.2)
C  13 CONTINUE
      CALL INVERT(A,3,ISING)
      CALL MOVER(0.,0,BS,1,9)
      DO 20 J = 1,3
      DO 20 I = 1,3
      DO 20 K = 1,3
         BS(I,J) = BS(I,J) - A(I,K)*B(K,J)
   20 CONTINUE
C
      CALL MOVER(0.,0,BB,1,9)
      DO 25 J = 1,3
      DO 25 I = 1,3
      DO 25 K = 1,3
         BB(I,J) = BB(I,J) + B(I,K)*BS(K,J)
   25 CONTINUE
C
C     WRITE(IFILE,*)' A(-1),BS,BB Matrices...'
C     DO 28 I = 1,3
C        WRITE(IFILE,11) (A(I,J),J=1,3),
C    1                   (BS(I,J),J=1,3),(BB(I,J),J=1,3)
C  28 CONTINUE
C
      DO 33 J = 1,3
      DO 33 I = 1,3
         DS(I,J) = D(I,J) + BB(I,J)
   33 CONTINUE
C
      ET = E*T
      CCT = 2.*CC/T
      CCT2= 4.*CC**2/(E*T**3)
      DO 53 J = 1,3
      DO 53 I = 1,3
         ASBAR(I,J) = ET*A(I,J)
         BSBAR(I,J) = CCT*BS(I,J)
         DSBAR(I,J) = CCT2*DS(I,J)
   53 CONTINUE
C     WRITE(IFILE,*)' ASBAR,BSBAR,DSBAR Matrices...'
C     DO 55 I = 1,3
C        WRITE(IFILE,11) (ASBAR(I,J),J=1,3),
C    1                   (BSBAR(I,J),J=1,3),(DSBAR(I,J),J=1,3)
C  55 CONTINUE
C
      IF (IDESGN.EQ.1) GO TO 103
C
      EIGSVE = 1.E+16
      I = 0
   63 CONTINUE
      I = I + 1
      W = FLOAT(I)
      ALPHA2 = RT2C*(W*PI/L)**2
      EIGAXL = 0.5*(ALPHA2*DSBAR(1,1)
     1              +(1.+BSBAR(2,1)*ALPHA2)**2/(ALPHA2*ASBAR(2,2)))
      IF (EIGAXL.LT.EIGSVE) THEN
         EIGSVE = EIGAXL
         WCRIT  = W
         ICRIT  = I
         IF (I.LT.10000) GO TO 63
      ELSE
         EIGAXL = EIGSVE
      ENDIF
C     IF (NPRT.GE.2) THEN
C        NCRIT = EIGAXL/COEFN
C        WRITE(IFILE,70) NCRIT, ICRIT
C     ENDIF
      IF (ICRIT.GE.10000) WRITE(IFILE,75)
   75 FORMAT(/' ******** WARNING **********'/
     1' VERY LARGE NUMBER OF AXIAL HALFWAVES.'/
     1' ENTIRE RANGE WAS NOT EXPLORED.'/
     1' ******** END WARNING *********')
      IMAX = MAX(5*ICRIT,500)
      IMAX = MIN(2000,IMAX)
      EIGCRT = EIGAXL
      EIGMIN = EIGAXL
      DO 80 I = 1,IMAX
         W = FLOAT(I)
         ALPHA2 = RT2C*(W*PI/L)**2
         EIGAXL = 0.5*(ALPHA2*DSBAR(1,1)
     1              +(1.+BSBAR(2,1)*ALPHA2)**2/(ALPHA2*ASBAR(2,2)))
         EIGMIN = MIN(EIGMIN,EIGAXL)
   80 CONTINUE
      IF (EIGMIN.LT.(0.98*EIGCRT)) THEN
         DO 90 I = 1,IMAX
            W = FLOAT(I)
            ALPHA2 = RT2C*(W*PI/L)**2
            EIGAXL = 0.5*(ALPHA2*DSBAR(1,1)
     1              +(1.+BSBAR(2,1)*ALPHA2)**2/(ALPHA2*ASBAR(2,2)))
            DIFF = ABS(EIGAXL-EIGMIN)/ABS(EIGMIN)
            IF (DIFF.LT.0.0001) THEN
               EIGCRT = EIGMIN
               WCRIT  = W
               ICRIT  = I
C              IF (NPRT.GE.2) THEN
C                 NCRIT = EIGCRT/COEFN
C                 WRITE(IFILE,70) NCRIT, ICRIT
C              ENDIF
               GO TO 101
            ENDIF
   90    CONTINUE
  101    CONTINUE
      ENDIF
  103 CONTINUE
C
      ALPHA2 = RT2C*(WCRIT*PI/L)**2
      EIGCRT = 0.5*(ALPHA2*DSBAR(1,1)
     1              +(1.+BSBAR(2,1)*ALPHA2)**2/(ALPHA2*ASBAR(2,2)))
      ICRIT  = WCRIT
C BEG APR 1998
      IF (ITUTOR.EQ.1.OR.NPRNT.EQ.INDX) THEN
         NCRIT = EIGCRT/COEFN
         WRITE(IFILE,70) NCRIT, ICRIT
C END APR 1998
   70    FORMAT(/
     1 ' CRITICAL AXISYMMETRIC AXIAL BUCKLING LOAD, PERFECT SHELL:'/
     1 '  Nx(crit) = ',1PE12.4,'; No. of axial halfwaves=',I6)
      ENDIF
      SRT2C = SQRT(RT2C)
      MBAR = MWAVE
      NBAR = NWAVE
C     IF (W0.NE.0.0) THEN
C        MBAR = WCRIT/2.
C        IF (MBAR.LT.1.0) MBAR = 1.0
C     ENDIF
C
      IF (IDESGN.EQ.1) THEN
C BEG APR 1998
         IFINAL = 1
         IFINAX = 1
C END APR 1998
         CALL EIGARB(IFILE,IDESGN,INDX,XIBAR,C,CC,WCRIT,ALPHA2,MBAR,L,
     1    NBAR,NPRNT,CIRC,ABSR,SRT2C,ASBAR,BSBAR,DSBAR,EIGCRT,PBAR,
C BEG MAR 1997
     1    PBARF,NXBAR,NXBARF,TBAR,TBARF,CSLOPE,ISHEAR,IBAL,EIGVAL,
C BEG APR 1998
     1    IFINAL,ICUBIC,JCUBIC,IFINAX)
C END APR 1998
C END MAR 1997
C BEG APR 1997  (MOVE THIS DOWN AFTER "SHRRED")
C        IF (PARX2.GT.0.1.AND.ISOGRD.EQ.0) THEN
C             ESXNEW = EIGVAL
C             CALL EIGKNK(PARX1,PARX2,NBAR,EIGVAL,NXBAR,PBAR/ABSR,TBAR,
C    1                    ESXNEW,IFILE,NPRNT,INDX,1,0)
C             EIGVAL = ESXNEW
C        ENDIF
C END APR 1997
         GO TO 100
      ENDIF
C
C  LOOP OVER NUMBER OF AXIAL HALFWAVES M AND CIRCUMFERENTIAL WAVES N
C  AND SLOPE OF BUCKLING
C  NODAL LINES SLOPE (SEARCH OVER SLOPE IS DONE INSIDE EIGARB)...
C BEG MAR 1998
      NLARGE = 0
C BEG MAY 2007
      CALL MOVER(0,0,MNCHEK,1,1000)
      CALL MOVER(10.E+20,0,EIGCHK,1,1000)
      CALL MOVER(0.,0,CSLCHK,1,1000)
C END MAY 2007
C BEG APR 1998
      MMXCHK = 10
      IF (ISAND.EQ.0.AND.(L/CIRC).GT.10.) MMXCHK = 20
      IF (IBAL.EQ.0.AND.ISHEAR.EQ.0.AND.(L/CIRC).GT.5.) MMXCHK = 50
C BEG MAY 2007
C     NMXCHK = 10
      NMXCHK = 20
C END MAY 2007
      IF (ISAND.NE.0) THEN
         IF (ISHEAR.EQ.1.OR.IBAL.EQ.1) THEN
            MMXCHK = 3
            NMXCHK = 3
            IF ((CIRC/ABS(R)).GT.1.0) THEN
               MMXCHK = 6
               NMXCHK = 6
            ENDIF
         ENDIF
      ENDIF
      NMMINK = 1
      IF ((CIRC/ABS(R)).GE.0.9) THEN
         NMMINK = 2.*CIRC/ABS(R) + 0.21
C BEG MAY 2007
C        IF (NMMINK.GT.10) NMMINK = 10
         IF (NMMINK.GT.20) NMMINK = 20
C END MAY 2007
      ENDIF
      NMXCHK = NMMINK
      IF ((CIRC/L).LE.1.0) THEN
         IF (ISAND.NE.0.AND.NMXCHK.EQ.2
     1                  .AND.(IBAL.EQ.1.OR.ISHEAR.EQ.1)) MMXCHK = 10
         IF (NMXCHK.EQ.1.AND.(IBAL.EQ.1.OR.ISHEAR.EQ.1)) MMXCHK = 20
      ELSE
         MMXCHK = FLOAT(NMXCHK)*L/CIRC
         IF (MMXCHK.GT.50) MMXCHK = 50
C BEG DEC 2005
         IF (MMXCHK.LT.1) MMXCHK = 1
C        IF (MMXCHK.LT.2) MMXCHK = 2
C END DEC 2005
C BEG MAY 2007
C        IF (MMXCHK.LE.2) NMXCHK = 10
         IF (MMXCHK.LE.2) NMXCHK = 20
C END MAY 2007
      ENDIF
C END APR 1998
C BEG MAY 2007
      IF ((CIRC/ABS(R)).GE.2.0.AND.NMXCHK.LE.20) NMXCHK = 20
C END MAY 2007
C BEG DEC 2005
C     IF (NPRT.GE.2) WRITE(8,'(A,A,I3,A,I3)')
C    1' Upper bounds of axial,circ. halfwave ranges to check:',
C    1' MMXCHK=',MMXCHK,', NMXCHK=',NMXCHK
C END DEC 2005
      RFCYLX = 1.1
C END MAR 1998
      CSLOPE = 0.
      NMINA = 1
      RFCYL = PI*ABS(R)/CIRC
C BEG MAR 1998
      IF (RFCYL.LT.RFCYLX) NMINA = 2
C END MAR 1998
      FNMINA = NMINA
C     
C     FIRST FIND MINIMUM WITH MBAR SMALL...     
C     
      IF (NPRNT.EQ.INDX) WRITE(8,*)' FIRST EXPLORE SMALL MBAR RANGE...'
      FLX0 = PI*SQRT(SQRT(R*R*C44N/C(2,2)))
C BEG SEP 1995
      FMTST1 = MIN(L/FLX0,2.*L/BLL)
C END SEP 1995
      FMTST2 = (L/CIRC)*SQRT(SQRT(C55N/C44N))  
      FMTST = AMAX1(FMTST1,FMTST2)  
      MTEST = FMTST + 0.5
C
C  FOLLOWING STATEMENT ADDED 10TH MARCH, 1986, BECAUSE OF INADEQUATE
C  SEARCH FOR CRITICAL BUCKLING LOAD VS. AXIAL HALF WAVENUMBER...
C
      MTEST = MAX(MTEST,2)
C     WRITE(IFILE,*)' MTEST,FLX0,L      =',MTEST,FLX0,L
C     WRITE(IFILE,*)' CIRC,FMTST1,FMTST2=',CIRC,FMTST1,FMTST2
C
      MBAR = 1.0  
      M = 1 
C BEG JULY 1998
      EIGSV2 = 10.E+18
C END JULY 1998
      FNTST1 = (CIRC/L)*SQRT(SQRT(C44N/C55N))  
      FNTST = AMAX1(FNMINA,FNTST1)
      NBAR = NMINA
C BEG MAR 1998
      IF (RFCYL.LT.RFCYLX) NBAR = 2.
C END MAR 1998
      INCR = 1. + 0.03*NBAR
      N = NBAR    
      NMAX = MAX(100,N*5)
      NMAX = MIN(NMAX,2*NPANDA)
      NMIN = NMINA    
      NBAR = N    
      NMINM1 = NBAR     
      FINCR = INCR
      SINCR = 1.0 
      MSAVE = 1.  
      ICHEK = 0   
    9 CONTINUE    
C
C BEG MAR 1998
      IF (NBAR.LT.50.) CSLOPE = 0.0
C END MAR 1998
C BEG APR 1998
      IFINAL = 0
      IFINAX = 0
C END APR 1998
C BEG JULY 2006
      IF (INDX.EQ.2.AND.NOSRCH(ILOADS).EQ.1) THEN
         NBAR = NUSER(ILOADS)
         MBAR = MUSER(ILOADS)
      ENDIF
C END JULY 2006
      CALL EIGARB(IFILE,IDESGN,INDX,XIBAR,C,CC,WCRIT,ALPHA2,MBAR,L,
     1    NBAR,NPRNT,CIRC,ABSR,SRT2C,ASBAR,BSBAR,DSBAR,EIGCRT,PBAR,
C BEG MAR 1997
     1    PBARF,NXBAR,NXBARF,TBAR,TBARF,CSLOPE,ISHEAR,IBAL,EIGSAV,
C BEG APR 1998
     1    IFINAL,ICUBIC,JCUBIC,IFINAX)
C END APR 1998
C END MAR 1997
C BEG JULY 2006
      IF (INDX.EQ.2.AND.NOSRCH(ILOADS).EQ.1) THEN
         MWAVE = MBAR + 0.1
         NWAVE = NBAR + 0.1
         IFINAL = 1
         IFINAX = 0
         CALL EIGARB(IFILE,IDESGN,INDX,XIBAR,C,CC,WCRIT,ALPHA2,MBAR,L,
     1    NBAR,NPRNT,CIRC,ABSR,SRT2C,ASBAR,BSBAR,DSBAR,EIGCRT,PBAR,
     1    PBARF,NXBAR,NXBARF,TBAR,TBARF,CSLOPE,ISHEAR,IBAL,EIGVAL,
     1    IFINAL,ICUBIC,JCUBIC,IFINAX)
         DO 2954 I = 1,7
            EIGMNC(I) = 10.E+16
            SLOPEX(I) = 0.
            MWAVEX(I) = 0
            NWAVEX(I) = 0
 2954    CONTINUE
         EIGMNC(1) = EIGVAL
         SLOPEX(1) = CSLOPE
         MWAVEX(1) = MBAR
         NWAVEX(1) = NBAR
         WRITE(IFILE,'(A,/,A,/,A,2I6)')
     1 ' General instability from ARBOCZ theory.',
     1 ' NOTE: The user has chosen to fix (MWAVEX,NWAVEX) at the',
     1 '       values (MUSER,NUSER) =',MUSER(ILOADS),NUSER(ILOADS)
         WRITE(IFILE,'(A,1P,7E10.2)')' EIGMNC=',(EIGMNC(I),I=1,7)
         WRITE(IFILE,'(A,1P,7E10.2)')' SLOPEX=',(SLOPEX(I),I=1,7)
         WRITE(IFILE,'(A,1P,I5,6I10)')' MWAVEX=',(MWAVEX(I),I=1,7)
         WRITE(IFILE,'(A,1P,I5,6I10)')' NWAVEX=',(NWAVEX(I),I=1,7)
         GO TO 2955 
      ENDIF
C END JULY 2006
C BEG MAR 1998
      I = MBAR
      J = NBAR
C BEG MAY 1998
C BEG OCT 2001
      IF (J.GT.0.AND.I.LE.50.AND.J.LE.10.AND.I.GT.0) THEN
C END OCT 2001
       IF (MNCHEK(I,J).EQ.0) THEN
         MNCHEK(I,J) = 1
         EIGCHK(I,J) = EIGSAV
         CSLCHK(I,J) = CSLOPE
       ENDIF
      ENDIF
C END MAY 1998
C END MAR 1998
C BEG FEB 1996
      IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
C
      NSAVE = NBAR
      MSAVE = MBAR
      CSAVE = CSLOPE    
      FNBR = NBAR + FINCR     
      IF (FNBR.LT.3.) CSLOPE = 0.0
      NNDIV= FNBR
      NDIV = NNDIV/ABS(INCR)
      NMOD = MOD(NDIV,3)
      IF (FNBR.LT.50.AND.NMOD.EQ.0) CSLOPE = 0.
      IF (M.EQ.1) NMAXM1 = FNBR     
C
C BEG APR 1998
      IFINAL = 0
      IFINAX = 0
C END APR 1998
      CALL EIGARB(IFILE,IDESGN,INDX,XIBAR,C,CC,WCRIT,ALPHA2,MBAR,L,
     1    FNBR,NPRNT,CIRC,ABSR,SRT2C,ASBAR,BSBAR,DSBAR,EIGCRT,PBAR,
C BEG MAR 1997
     1    PBARF,NXBAR,NXBARF,TBAR,TBARF,CSLOPE,ISHEAR,IBAL,EIGVAL,
C BEG APR 1998
     1    IFINAL,ICUBIC,JCUBIC,IFINAX)
C END APR 1998
C END MAR 1997
C BEG MAR 1998
      I = MBAR
      J = FNBR
C BEG MAY 1998
C BEG OCT 2001
      IF (J.GT.0.AND.I.LE.50.AND.J.LE.10.AND.I.GT.0) THEN
C END OCT 2001
       IF (MNCHEK(I,J).EQ.0) THEN
         MNCHEK(I,J) = 1
         EIGCHK(I,J) = EIGVAL
         CSLCHK(I,J) = CSLOPE
       ENDIF
      ENDIF
C END MAY 1998
C END MAR 1998
C BEG FEB 1996
      IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
C
      ESVNEW = EIGVAL
      ES1NEW = EIGSAV
      IF (PARX2.GT.0.1.AND.ICHEK.EQ.1.AND.M.EQ.1.AND.ISOGRD.EQ.0) THEN
         CALL EIGKNK(PARX1,PARX2,NSAVE,EIGSAV,NXBAR,PBAR/ABSR,TBAR,
     1                  ES1NEW,IFILE,NPRNT,INDX,0,0)
         CALL EIGKNK(PARX1,PARX2,FNBR, EIGVAL,NXBAR,PBAR/ABSR,TBAR,
     1                  ESVNEW,IFILE,NPRNT,INDX,0,0)
      ENDIF
      IF (ESVNEW.LE.ES1NEW) THEN
         NBAR = FNBR
         GO TO 30
      ENDIF
C     
C     ES1NEW.LT.ESVNEW BRANCH...    
C     
      FINCR = - FINCR   
      SINCR = -1.0
      N = NBAR    
      IF (N.EQ.NMINA) GO TO 40    
      GO TO 35    
C     
   30 CONTINUE    
      MSAVE = MBAR
      NSAVE = NBAR
      CSAVE = CSLOPE    
      EIGSAV = EIGVAL
C BEG SEP 1995
C     IF (N.GT.NMAX.AND.EIGVAL.EQ.10.E16) GO TO 40
      IF (N.GT.NMAX) GO TO 40
C END SEP 1995
C BEG MAR 1998
      IF (N.GT.10000) GO TO 40
C END MAR 1998
C BEG JULY 1998
      IF ((N.GE.NMAX.AND.ICHEK.EQ.1).OR.
     1    (N.LE.NMIN.AND.ICHEK.EQ.1)) THEN
         IF (EIGSV2.LT.EIGSAV) GO TO 405
         GO TO 408
      ENDIF
C END JULY 1998
C     
   35 CONTINUE    
C     
      NBAR = NBAR + FINCR
      INCR = (1. + 0.03*NBAR)*SINCR
      FINCR = INCR
      N = NBAR    
      IF (N.LT.NMINA) GO TO 40    
      IF (M.EQ.1) NMINM1 = AMIN1(NMINM1,NBAR)   
      IF (M.EQ.1) NMAXM1 = AMAX1(NMAXM1,NBAR)   
C
      IF (NBAR.LT.3.) CSLOPE = 0.0
      NDIV = N/ABS(INCR)
      NMOD = MOD(NDIV,3)
      IF (NBAR.LT.50.AND.NMOD.EQ.0) CSLOPE = 0.
C
C BEG APR 1998
      IFINAL = 0
      IFINAX = 0
C END APR 1998
      CALL EIGARB(IFILE,IDESGN,INDX,XIBAR,C,CC,WCRIT,ALPHA2,MBAR,L,
     1    NBAR,NPRNT,CIRC,ABSR,SRT2C,ASBAR,BSBAR,DSBAR,EIGCRT,PBAR,
C BEG MAR 1997
     1    PBARF,NXBAR,NXBARF,TBAR,TBARF,CSLOPE,ISHEAR,IBAL,EIGVAL,
C BEG APR 1998
     1    IFINAL,ICUBIC,JCUBIC,IFINAX)
C END APR 1998
C END MAR 1997
C BEG MAR 1998
      I = MBAR
      J = NBAR
C BEG MAY 1998
C BEG OCT 2001
      IF (J.GT.0.AND.I.LE.50.AND.J.LE.10.AND.I.GT.0) THEN
C END OCT 2001
       IF (MNCHEK(I,J).EQ.0) THEN
         MNCHEK(I,J) = 1
         EIGCHK(I,J) = EIGVAL
         CSLCHK(I,J) = CSLOPE
       ENDIF
      ENDIF
C END MAY 1998
C END MAR 1998
C BEG FEB 1996
      IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
C
      ESVNEW = EIGVAL
      ES1NEW = EIGSAV
      IF (PARX2.GT.0.1.AND.ICHEK.EQ.1.AND.M.EQ.1.AND.ISOGRD.EQ.0) THEN
         CALL EIGKNK(PARX1,PARX2,NSAVE,EIGSAV,NXBAR,PBAR/ABSR,TBAR,
     1                  ES1NEW,IFILE,NPRNT,INDX,0,0)
         CALL EIGKNK(PARX1,PARX2,NBAR, EIGVAL,NXBAR,PBAR/ABSR,TBAR,
     1                  ESVNEW,IFILE,NPRNT,INDX,0,0)
      ENDIF
      IF (ESVNEW.LE.ES1NEW) THEN
         NMOD = MOD(N,3)
         GO TO 30
      ENDIF
C     
   40 CONTINUE    
C     
      MMAX = MTEST/2
C BEG SEP 1995
C     IF (N.GT.4) MMAX = N*2
C     IF (N.GT.NMAX.AND.EIGVAL.EQ.10.E16) MMAX = MAX(MTEST,10)
      IF (N.GT.NMAX) MMAX = MAX(MTEST,10)
C END SEP 1995
      MMAX = MAX(MMAX,2*MPANDA)
C BEG DEC 2005
C     WRITE(IFILE,*)' N,MMAX,EIGVAL  =',N,MMAX,EIGVAL
C     WRITE(IFILE,*)' EIGSV2,EIGSAV,M=',EIGSV2,EIGSAV,M
C END DEC 2005
      IF (EIGSV2.LT.EIGSAV.AND.M.GT.1) GO TO 405
      MINCR = 1. + 0.1*MBAR   
      FMINCR = MINCR    
      MBAR = MBAR + FMINCR    
      M = MBAR    
      IF (M.GT.MMAX) GO TO 408
      NBAR = NSAVE
C BEG SEP 1995
C     IF (N.GT.NMAX.AND.EIGVAL.EQ.10.E16) NBAR = NMINA
C BEG FEB 1998
      IF (N.GT.NMAX) THEN
         NBAR = NMINA
C BEG MAR 1998
         IF (RFCYL.LT.RFCYLX) NBAR = 2.
C END MAR 1998
      ENDIF
C END FEB 1998
C END SEP 1995
      SINCR = 1.0 
      INCR = 1. + 0.03*NBAR
      FINCR = INCR
      MMAXM1 = MBAR     
      CSLOPE = CSAVE    
      CSAVE2 = CSAVE    
      EIGSV2 = EIGSAV   
      MSAVE2 = MSAVE    
      NSAVE2 = NSAVE    
      IF (NPRNT.EQ.INDX) WRITE(8,*)
     1   ' BEFORE 405: ICHEK,KOUNT,EIGSAV,MSAVE,NSAVE,CSAVE=',
     1                 ICHEK,KOUNT,EIGSAV,MSAVE,NSAVE,CSAVE
      GO TO 9     
C     
  405 CONTINUE    
      EIGSAV = EIGSV2   
      CSAVE = CSAVE2    
      MSAVE = MSAVE2    
      NSAVE = NSAVE2    
      IF (NPRNT.EQ.INDX) WRITE(8,*)
     1   ' BEFORE 408: ICHEK,KOUNT,EIGSAV,MSAVE,NSAVE,CSAVE=',
     1                 ICHEK,KOUNT,EIGSAV,MSAVE,NSAVE,CSAVE
  408 CONTINUE    
C BEG MAR 1998
C23456789012345678901234567890123456789012345678901234567890123456789012
      MSAVEX = MSAVE
      NSAVEX = NSAVE
      IF (NPRNT.EQ.INDX) THEN
          WRITE(8,'(A,/,A,1P,2I6,2I5,3E11.3)')
     1' (low-m) mode: ICHEK ISAND  m    n      s        EIGSAV    TEST',
     1'            ', ICHEK,ISAND,MSAVEX,NSAVEX,CSAVE,EIGSAV,TEST
      ENDIF
C END MAR 1998
C BEG APR 1998
      EIGMNC(1) = EIGSAV
      SLOPEX(1) = CSAVE
      MWAVEX(1) = MSAVEX
      NWAVEX(1) = NSAVEX
C BEG JAN 2006
      TESTX(1)  = TEST
C END JAN 2006
      IF (NPRNT.EQ.INDX) WRITE(8,'(A,1P,7E10.2)')
     1  ' EIGMNC=',(EIGMNC(I),I=1,7)
C END APR 1998
C BEG JUL 1999
      IF (IDESGN.EQ.0.AND.ILABEL.EQ.9242.AND.EIG7Z.GT.EIGMNC(1)) THEN
         IEIG7Z = 1
         RETURN
      ENDIF
C END JUL 1999
      MBAR = 1.   
      M = 1 
      IF (ICHEK.EQ.1) GO TO 415     
      IF (NMINM1.GE.3.0) GO TO 410  
      BL1 = CIRC/NMAXM1
      BL2 = 0.2*ABS(R)
      BL3 = 0.2*L
      IF (BL1.LT.BL2.AND.BL1.LT.BL3) GO TO 420
C     
C      CHECK FOR HIGH-N RANGE....   
C     
      IF (NPRNT.EQ.INDX) WRITE(8,*)' Now check for high NBAR range...'
      NBAR = MAX((CIRC/BL2),(CIRC/BL3))
      INCR = 1. + .03*NBAR
      FINCR= INCR
      N = NBAR
      NMAX = MAX(100,N*5)
      NMAX = MIN(NMAX,5*NPANDA)
      NBAR = N
      NMIN = NMAXM1
      GO TO 413
C
  410 CONTINUE
C
C     CHECK FOR LOW-N RANGE....
C
      IF (NPRNT.EQ.INDX) WRITE(8,*)' Now check for low NBAR range...'
      NBAR = 2.0
      N = NBAR
      FINCR = 1.0
      INCR = FINCR
      NMAX = NMINM1
      NMINM1 = FNMINA
  413 SINCR = 1.0
      CSLOPE = 0.
      NSAVE1 = NSAVE
      MSAVE1 = MSAVE
      CSAVE1 = CSAVE
      EIGSV1 = EIGSAV
      ICHEK = 1
      IF (NPRNT.EQ.INDX) WRITE(8,*)
     1   ' BEFORE 415: ICHEK,KOUNT,EIGSAV,MSAVE,NSAVE,CSAVE=',
     1                 ICHEK,KOUNT,EIGSAV,MSAVE,NSAVE,CSAVE
      GO TO 9
  415 CONTINUE
C
      ESVNEW = EIGSAV
      ES1NEW = EIGSV1
      IF (PARX2.GT.0.1.AND.ISOGRD.EQ.0) THEN
         FNSV1 = NSAVE1
         CALL EIGKNK(PARX1,PARX2,NSAVE,EIGSAV,NXBAR,PBAR/ABSR,TBAR,
     1                  ESVNEW,IFILE,NPRNT,INDX,1,0)
         CALL EIGKNK(PARX1,PARX2,FNSV1,EIGSV1,NXBAR,PBAR/ABSR,TBAR,
     1                  ES1NEW,IFILE,NPRNT,INDX,1,0)
      ENDIF
C BEG MAR 1998
C23456789012345678901234567890123456789012345678901234567890123456789012
      MSAVEX = MSAVE
      NSAVEX = NSAVE
      IF (NPRNT.EQ.INDX) THEN
          WRITE(8,'(A,/,A,1P,2I6,3E11.3)')
     1' (low-m, low-n) mode:  m     n     s         EIGSV1     ES1NEW',
     1'                  ', MSAVE1,NSAVE1,CSAVE1,EIGSV1,ES1NEW
          WRITE(8,'(A,/,A,1P,2I6,3E11.3)')
     1' (low-m, high-n) mode: m     n     s         EIGSAV     ESVNEW',
     1'                  ', MSAVEX,NSAVEX,CSAVE,EIGSAV,ESVNEW
      ENDIF
C END MAR 1998
C BEG APR 1998
      EIGMNC(1) = EIGSV1
      SLOPEX(1) = CSAVE1
      MWAVEX(1) = MSAVE1
      NWAVEX(1) = NSAVE1
C BEG JAN 2006
      TESTX(1)  = TEST
C END JAN 2006
      EIGMNC(2) = EIGSAV
      SLOPEX(2) = CSAVE
      MWAVEX(2) = MSAVEX
      NWAVEX(2) = NSAVEX
C BEG JAN 2006
      TESTX(2)  = TEST
C END JAN 2006
      IF (NPRNT.EQ.INDX) WRITE(8,'(A,1P,7E10.2)')
     1  ' EIGMNC=',(EIGMNC(I),I=1,7)
C END APR 1998
C BEG JUL 1999
      IF (IDESGN.EQ.0.AND.ILABEL.EQ.9242.AND.
     1     (EIG7Z.GT.EIGMNC(1).OR.EIG7Z.GT.EIGMNC(2))) THEN
         IEIG7Z = 1
         RETURN
      ENDIF
C END JUL 1999
      IF (ESVNEW.LT.ES1NEW) GO TO 420
      EIGSAV = EIGSV1
      CSAVE = CSAVE1
      MSAVE = MSAVE1
      NSAVE = NSAVE1
      IF (NPRNT.EQ.INDX) WRITE(8,*)
     1   ' BEFORE 420: ICHEK,KOUNT,EIGSAV,MSAVE,NSAVE,CSAVE=',
     1                 ICHEK,KOUNT,EIGSAV,MSAVE,NSAVE,CSAVE
  420 CONTINUE
C
C     NOW CHECK FOR MINIMUM CRITICAL LOAD CORRESPONDING TO HIGHER M...
C
      ICHEK = 0
      NMIN = NMINA
      SINCR = 1.0
C BEG MAR 1998
      INCR  = SINCR
C END MAR 1998
C     NMAX = 10000
      NMAX = 10*NPANDA
      IF (MTEST.LE.1) GO TO 50
C
C     CHECK FOR MINIMUM CRITICAL LOAD AT HI VALUES OF AXIAL WAVES, MBAR 
C
      IF (NPRNT.EQ.INDX) WRITE(8,*)' NEXT EXPLORE LARGE MBAR RANGE...'
      MBAR = MTEST
      MMAX = MAX(100,MTEST*5)
C     MMAX = MIN(MMAX,10*MPANDA)
      NBAR = NMINA
C BEG MAR 1998
      IF (RFCYL.LT.RFCYLX) NBAR = 2.
      NMAXM1 = 1.0
C END MAR 1998
      CSLOPE = 0.
   44 CONTINUE
C BEG MAR 1998  
      IF (NBAR.LT.3.) CSLOPE = 0.0
C BEG APR 1998
      IF (MBAR.LT.3.0.AND.NBAR.LT.5.0) CSLOPE = 0.0
C END APR 1998
      NDIV = N/ABS(INCR)
      NMOD = MOD(NDIV,3)
      IF (NBAR.LT.50.AND.NMOD.EQ.0) CSLOPE = 0.
C END MAR 1998
C BEG APR 1998
      IFINAL = 0
      IFINAX = 0
C END APR 1998
      CALL EIGARB(IFILE,IDESGN,INDX,XIBAR,C,CC,WCRIT,ALPHA2,MBAR,L,
     1    NBAR,NPRNT,CIRC,ABSR,SRT2C,ASBAR,BSBAR,DSBAR,EIGCRT,PBAR,
C BEG MAR 1997
     1    PBARF,NXBAR,NXBARF,TBAR,TBARF,CSLOPE,ISHEAR,IBAL,EIGVAL,
C BEG APR 1998
     1    IFINAL,ICUBIC,JCUBIC,IFINAX)
C END APR 1998
C END MAR 1997
C BEG MAR 1998
      I = MBAR
      J = NBAR
C BEG MAY 1998
C BEG OCT 2001
      IF (J.GT.0.AND.I.LE.50.AND.J.LE.10.AND.I.GT.0) THEN
C END OCT 2001
       IF (MNCHEK(I,J).EQ.0) THEN
         MNCHEK(I,J) = 1
         EIGCHK(I,J) = EIGVAL
         CSLCHK(I,J) = CSLOPE
       ENDIF
      ENDIF
C END MAY 1998
C END MAR 1998
C BEG FEB 1996
      IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
C
      CALL MINMA(IFILE,IDESGN,INDX,XIBAR,C,CC,WCRIT,ALPHA2,MBAR,L,
     1    NBAR,NPRNT,CIRC,ABSR,SRT2C,ASBAR,BSBAR,DSBAR,EIGCRT,PBAR,
C BEG MAR 1997
     1    PBARF,NXBAR,NXBARF,TBAR,TBARF,CSLOPE,ISHEAR,IBAL,EIGVAL,
     1    ICUBIC,JCUBIC,MNCHEK,EIGCHK,CSLCHK)
C END MAR 1997
C BEG FEB 1996
      IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
C
      M = MBAR
      KOUNT = 1
C
   45 CONTINUE
C
C     CHANGE NBAR...
C
      KOUNT = KOUNT + 1
      CCSAV = CSLOPE
      EIGSSV = EIGVAL
      MMSAV = MBAR
      NNSAV = NBAR
      FNNSAV = NNSAV
      IF (NPRNT.EQ.INDX) WRITE(8,*)
     1   ' BEFORE 46: ICHEK,KOUNT,EIGSSV,MMSAV,NNSAV,CCSAV=',
     1                ICHEK,KOUNT,EIGSSV,MMSAV,NNSAV,CCSAV
   46 CONTINUE
      INCR = (1.0 + 0.03*NBAR)*SINCR
C BEG MAR 1998
      IF (INCR.EQ.0) INCR = 1
C END MAR 1998
      FINCR = INCR
      NBAR = NBAR + FINCR
      RBB = ABS(R)/CIRC
      IF (RBB.GT.1.0) THEN
C BEG MAR 1998
         IF (FNNSAV.NE.0.0) MBAR = MBAR*NBAR/FNNSAV
C END MAR 1998
         IF (MBAR.LT.1.0) MBAR = 1.1
      ENDIF
      M = MBAR
      N = NBAR    
C BEG MAR 1998
      IF (N.LE.NMIN.AND.ICHEK.EQ.1) GO TO 455   
C END MAR 1998   
      IF (N.GE.NMAX.AND.ICHEK.EQ.1) GO TO 455
      IF (N.GT.100.AND.EIGVAL.EQ.10.E16) GO TO 50
C BEG SEP 1995
C BEG MAR 1998
      IF (N.GT.10000) GO TO 50
C END MAR 1998
C BEG DEC 1998
      IF (M.GT.10000) GO TO 50
C END DEC 1998
C     IF (N.GT.10.AND.M.GT.MMAX.AND.EIGVAL.EQ.10.E16) GO TO 50
      IF (N.GT.10.AND.M.GT.MMAX) GO TO 50
C END SEP 1995
      IF (M.EQ.1) M = 2
      MBAR = M
C BEG MAR 1998
      NMAXM1 = AMAX1(NMAXM1,NBAR)
      IF (NBAR.LT.3.) CSLOPE = 0.0
C BEG APR 1998
      IF (MBAR.LT.3.0.AND.NBAR.LT.5.0) CSLOPE = 0.0
C END APR 1998
      NDIV = N/ABS(INCR)
      NMOD = MOD(NDIV,3)
      IF (NBAR.LT.50.AND.NMOD.EQ.0) CSLOPE = 0.
C END MAR 1998
C BEG APR 1998
      IFINAL = 0
      IFINAX = 0
C END APR 1998
      CALL EIGARB(IFILE,IDESGN,INDX,XIBAR,C,CC,WCRIT,ALPHA2,MBAR,L,
     1    NBAR,NPRNT,CIRC,ABSR,SRT2C,ASBAR,BSBAR,DSBAR,EIGCRT,PBAR,
C BEG MAR 1997
     1    PBARF,NXBAR,NXBARF,TBAR,TBARF,CSLOPE,ISHEAR,IBAL,EIGVAL,
C BEG APR 1998
     1    IFINAL,ICUBIC,JCUBIC,IFINAX)
C END APR 1998
C END MAR 1997
C BEG MAR 1998
      I = MBAR
      J = NBAR
C BEG MAY 1998
C BEG OCT 2001
      IF (J.GT.0.AND.I.LE.50.AND.J.LE.10.AND.I.GT.0) THEN
C END OCT 2001
       IF (MNCHEK(I,J).EQ.0) THEN
         MNCHEK(I,J) = 1
         EIGCHK(I,J) = EIGVAL
         CSLCHK(I,J) = CSLOPE
       ENDIF
      ENDIF
C END MAY 1998
C END MAR 1998
C BEG FEB 1996
      IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
C
      CALL MINMA(IFILE,IDESGN,INDX,XIBAR,C,CC,WCRIT,ALPHA2,MBAR,L,
     1    NBAR,NPRNT,CIRC,ABSR,SRT2C,ASBAR,BSBAR,DSBAR,EIGCRT,PBAR,
C BEG MAR 1997
     1    PBARF,NXBAR,NXBARF,TBAR,TBARF,CSLOPE,ISHEAR,IBAL,EIGVAL,
     1    ICUBIC,JCUBIC,MNCHEK,EIGCHK,CSLCHK)
C END MAR 1997
C BEG FEB 1996
      IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
C
      M = MBAR
C
      IF (EIGVAL.LE.EIGSSV) THEN
         NMOD = MOD(N,3)
         GO TO 45
      ENDIF
C
      IF (ICHEK.EQ.0) GO TO 47
C BEG MAR 1998
      IF (KOUNT.GT.2.AND.SINCR.GE.0.) GO TO 455
      IF (SINCR.LE.0.0) GO TO 455
C END MAR 1998
      CSLOPE = CCSAV
      NBAR = NNSAV
      MBAR = MMSAV
      SINCR = -1.0
      GO TO 46
   47 CONTINUE
C BEG MAR 1998
C23456789012345678901234567890123456789012345678901234567890123456789012
      IF (NPRNT.EQ.INDX) THEN
          IF (ICHEK.EQ.0) WRITE(8,'(A)')' ***(low-n)***'
          WRITE(8,'(A,/,A,1P,2I6,2I5,3E11.3)')
     1' (high-m) mode:ICHEK ISAND  m    n      s        EIGSAV    TEST',
     1'            ', ICHEK,ISAND,MMSAV,NNSAV,CCSAV,EIGSSV,TEST
      ENDIF
C END MAR 1998
C BEG APR 1998
      EIGMNC(3) = EIGSSV
      SLOPEX(3) = CCSAV
      MWAVEX(3) = MMSAV
      NWAVEX(3) = NNSAV
      IF (NPRNT.EQ.INDX) WRITE(8,'(A,1P,7E10.2)')
     1  ' EIGMNC=',(EIGMNC(I),I=1,7)
C END APR 1998
C BEG JUL 1999
      IF (IDESGN.EQ.0.AND.ILABEL.EQ.9242.AND.EIG7Z.GT.EIGMNC(3)) THEN
         IEIG7Z = 1
         RETURN
      ENDIF
C END JUL 1999
      NLARGE = NMAXM1
C BEG MAR 1998
      EIGSV1 = 10.E+16
      NSAVE1 = 1
C END MAR 1998
C
C     CHECK FOR HIGH-N RANGE...
C
      IF (NPRNT.EQ.INDX) WRITE(8,*)' Now check for high NBAR range...'
      FNBAR1 = CIRC/(0.4*ABS(R))
C     FNBAR2 = (CIRC/L)*SQRT(SQRT(C44N/C55N))*FLOAT(MTEST)/2.0
      FNBAR2 = 0.0
      NBAR = MAX(FNBAR1,FNBAR2)
      N = NBAR
      IF (N.LE.NLARGE) GO TO 460
      NBAR = N
      MBAR = MTEST
      NMIN = NLARGE
      NMAX = MAX0(100,N*5)
      ICHEK = 1
      CSLOPE = 0.0
      NSAVE1 = NNSAV
      MSAVE1 = MMSAV
      CSAVE1 = CCSAV
      EIGSV1 = EIGSSV
      IF (NPRNT.EQ.INDX) WRITE(8,*)
     1  ' BEFORE 455: ICHEK,KOUNT,EIGSV1,MSAVE1,NSAVE1,CSAVE1=',
     1                ICHEK,KOUNT,EIGSV1,MSAVE1,NSAVE1,CSAVE1
      GO TO 44
C
  455 CONTINUE
      ESVNEW = EIGSSV
      ES1NEW = EIGSV1
      IF (PARX2.GT.0.1.AND.ISOGRD.EQ.0) THEN
         FNSV1 = NSAVE1
         FNSV2 = NNSAV
         CALL EIGKNK(PARX1,PARX2,FNSV2,EIGSSV,NXBAR,PBAR/ABSR,TBAR,
     1                  ESVNEW,IFILE,NPRNT,INDX,1,0)
         CALL EIGKNK(PARX1,PARX2,FNSV1,EIGSV1,NXBAR,PBAR/ABSR,TBAR,
     1                  ES1NEW,IFILE,NPRNT,INDX,1,0)
      ENDIF
C BEG MAR 1998
C23456789012345678901234567890123456789012345678901234567890123456789012
      IF (NPRNT.EQ.INDX) THEN
          WRITE(8,'(A,/,A,1P,2I6,3E11.3)')
     1' (high-m, low-n) mode: m     n     s         EIGSV1     ES1NEW',
     1'                  ', MSAVE1,NSAVE1,CSAVE1,EIGSV1,ES1NEW
          WRITE(8,'(A,/,A,1P,2I6,3E11.3)')
     1' (high-m,high-n) mode: m     n     s         EIGSSV     ESVNEW',
     1'                  ', MMSAV,NNSAV,CCSAV,EIGSSV,ESVNEW
      ENDIF
C END MAR 1998
C BEG APR 1998
      EIGMNC(3) = EIGSV1
      SLOPEX(3) = CSAVE1
      MWAVEX(3) = MSAVE1
      NWAVEX(3) = NSAVE1
C BEG JAN 2006
      TESTX(3)  = TEST
C END JAN 2006
      EIGMNC(4) = EIGSSV
      SLOPEX(4) = CCSAV
      MWAVEX(4) = MMSAV
      NWAVEX(4) = NNSAV
C BEG JAN 2006
      TESTX(4)  = TEST
C END JAN 2006
      IF (NPRNT.EQ.INDX) WRITE(8,'(A,1P,7E10.2)')
     1  ' EIGMNC=',(EIGMNC(I),I=1,7)
C END APR 1998
C BEG JUL 1999
      IF (IDESGN.EQ.0.AND.ILABEL.EQ.9242.AND.
     1     (EIG7Z.GT.EIGMNC(3).OR.EIG7Z.GT.EIGMNC(4))) THEN
         IEIG7Z = 1
         RETURN
      ENDIF
C END JUL 1999
      IF (ESVNEW.LT.1.001*ES1NEW) GO TO 460
      EIGSSV = EIGSV1
      CCSAV = CSAVE1
      MMSAV = MSAVE1
      NNSAV = NSAVE1
      IF (NPRNT.EQ.INDX)
     1 WRITE(8,*) ' BEFORE 460: ICHEK,KOUNT,EIGSSV,MMSAV,NNSAV,CCSAV=',
     1                          ICHEK,KOUNT,EIGSSV,MMSAV,NNSAV,CCSAV
  460 CONTINUE
      ESVNEW = EIGSSV
      ES1NEW = EIGSAV
      IF (PARX2.GT.0.1.AND.ISOGRD.EQ.0) THEN
         FNSV2 = NNSAV
         CALL EIGKNK(PARX1,PARX2,FNSV2,EIGSSV,NXBAR,PBAR/ABSR,TBAR,
     1                  ESVNEW,IFILE,NPRNT,INDX,1,0)
         CALL EIGKNK(PARX1,PARX2,NSAVE,EIGSAV,NXBAR,PBAR/ABSR,TBAR,
     1                  ES1NEW,IFILE,NPRNT,INDX,1,0)
      ENDIF
      IF (NPRNT.EQ.INDX) WRITE(8,*)
     1   ' AFTER 460: ICHEK,EIGSSV,ESVNEW,EIGSAV,ES1NEW=',
     1                ICHEK,EIGSSV,ESVNEW,EIGSAV,ES1NEW
      FACT = 1.001
      IF (ESVNEW.GE.FACT*ES1NEW) GO TO 50
      MBAR = MMSAV
      NBAR = NNSAV
      EIGVAL = EIGSSV
      CSLOPE = CCSAV
      IF (NPRNT.EQ.INDX)
     1 WRITE(8,*) ' BEFORE 50: ICHEK,KOUNT,EIGVAL,MBAR,NBAR,CSLOPE=',
     1                         ICHEK,KOUNT,EIGVAL,MBAR,NBAR,CSLOPE
      GO TO 100
C
   50 CONTINUE
C
      MBAR = MSAVE
      NBAR = NSAVE
      EIGVAL = EIGSAV
      CSLOPE = CSAVE
      IF (NPRNT.EQ.INDX)
     1 WRITE(8,*) ' AFTER  50: ICHEK,KOUNT,EIGVAL,MBAR,NBAR,CSLOPE=',
     1                         ICHEK,KOUNT,EIGVAL,MBAR,NBAR,CSLOPE
  100 CONTINUE
C BEG MAR 1998
      IF (IDESGN.EQ.0) THEN
C BEG APR 1998
C   POSSIBLY CHECK FOR HI NUMBER OF AXIAL WAVES WITH ZERO NODAL SLOPE..
         IF (IBAL.NE.0.OR.ISHEAR.NE.0) THEN
C BEG JULY 1998
            INCR = MWAVEX(3)/30
C END JULY 1998
            IF (INCR.EQ.0) INCR = 1
            MMINIM = MWAVEX(3)/3
            IF (MMINIM.EQ.0) MMINIM = 1
            MMAXIM = 1.5*FLOAT(MWAVEX(3))
            IF (MMAXIM.LT.3) MMAXIM = 3
C23456789012345678901234567890123456789012345678901234567890123456789012
            IF (NPRNT.EQ.INDX) WRITE(8,'(A,/,A,4I7)')
     1 ' Search over (m,n) with slope = 0. NMXCHK,MMINIM,MMAXIM,INCR=',
     1 '                                  ',NMXCHK,MMINIM,MMAXIM,INCR
C BEG JULY 1998
            NUP = NMXCHK
            IF (NUP.EQ.1) NUP = 2
            DO 531 J = 1,NUP
             JJ = J
 5305        CONTINUE
             EIGMNJ(JJ) = 10.E+16
C END JULY 1998
             DO 530 I = MMINIM,MMAXIM,INCR
               CSLDUM = 0.
               FFI = I
C BEG JULY 1998
               FFJ = JJ
C END JULY 1998
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG APR 1998
               IFINAL = 0
               IFINAX = 0
C END APR 1998
               CALL EIGARB(IFILE,IDESGN,INDX,XIBAR,C,CC,WCRIT,ALPHA2,
     1         FFI,L,FFJ,NPRNT,CIRC,ABSR,SRT2C,ASBAR,BSBAR,DSBAR,EIGCRT,
     1         PBAR,PBARF,NXBAR,NXBARF,TBAR,TBARF,CSLDUM,0,0,
C BEG APR 1998
     1         EIGMN0,IFINAL,ICUBIC,JCUBIC,IFINAX)
C END APR 1998
C BEG JULY 1998
               EIGMNJ(JJ) = MIN(EIGMN0,EIGMNJ(JJ))
C END JULY 1998
               IF (EIGMN0.LT.EIGMNC(5)) THEN
                  MWAVEX(5) = I
C BEG JULY 1998
                  NWAVEX(5) = JJ
C END JULY 1998
                  SLOPEX(5) = 0.
                  EIGMNC(5) = EIGMN0
C BEG JAN 2006
                  TESTX(5)  = TEST
C END JAN 2006
               ENDIF
  530        CONTINUE
C BEG JULY 1998
C BEG DEC 2003
C            IF (JJ.GT.1.AND.JJ.LE.10.AND.JJ.GE.NUP
             IF (JJ.GT.1.AND.JJ.LT.10.AND.JJ.GE.NUP
C END DEC 2003
     1                 .AND.EIGMNJ(JJ).LT.EIGMNJ(JJ-1)
     1                 .AND.EIGMNJ(JJ).LE.1.00001*EIGMNC(5)) THEN
               JJ = JJ + 1
               GO TO 5305
             ENDIF
C END JULY 1998
  531       CONTINUE
C23456789012345678901234567890123456789012345678901234567890123456789012
            IF (NPRNT.EQ.INDX) WRITE(8,'(A,/,A,1P,E12.4,2I4,1P,E12.4)')
     1   ' Minimum eigenvalue and mode shape, (m,n,slope) with slope=0',
     1    ' EIGMNC(5),MWAVEX(5),NWAVEX(5),SLOPEX(5)=',
     1      EIGMNC(5),MWAVEX(5),NWAVEX(5),SLOPEX(5)
            IF (EIGMNC(5).LT.EIGMNC(3)) THEN
               EIGMNC(3) = EIGMNC(5)
               MWAVEX(3) = MWAVEX(5)
               NWAVEX(3) = NWAVEX(5)
               SLOPEX(3) = SLOPEX(5)
C BEG JAN 2006
               TESTX(3)  = TESTX(5)
C END JAN 2006
            ENDIF
            IF (EIGMNC(5).LT.EIGVAL) THEN
               EIGVAL = EIGMNC(5)
               MBAR   = MWAVEX(5)
               NBAR   = NWAVEX(5)
               CSLOPE = SLOPEX(5)
            ENDIF
C BEG JUL 1999
            IF (IDESGN.EQ.0.AND.ILABEL.EQ.9242
     1                     .AND.EIG7Z.GT.EIGVAL) THEN
               IEIG7Z = 1
               RETURN 
            ENDIF
C END JUL 1999
         ENDIF
C   NOW CHECK EIGENVALUES CORRESPONDING TO THE (M,N) COMBINATIONS NOT
C   PREVIOUSLY PROCESSED...
         EIGCHM = 10.E+16
         IF (NPRNT.EQ.INDX) WRITE(8,'(/,A,/,A,2I4)')
     1 ' Next, check eigenvalues corresponding to some (m,n)',
     1 ' combinations not previously explored: MMXCHK,NMXCHK=',
     1   MMXCHK,NMXCHK
         DO 540 I = 1,MMXCHK
C BEG DEC 2005
C23456789012345678901234567890123456789012345678901234567890123456789012
C        IF (NPRT.GE.2) WRITE(8,'(A,I3,A,I3,A,/,(20I3))')
C    1 ' MNCHEK(m=',I,',n) = 0 for "yes" 1 for "no" checking; n=1 to',
C    1   NMXCHK,':',(MNCHEK(I,J),J=1,NMXCHK)
C END DEC 2005
         DO 535 J = 1,NMXCHK
            IF (J.LT.NMINA) GO TO 534
            IF (MNCHEK(I,J).EQ.1) GO TO 534
            IF (J.LT.3) CSLCHK(I,J) = 0.0
C BEG APR 1998
            IF (I.LT.3.AND.J.LT.5) CSLCHK(I,J) = 0.0
C END APR 1998
            NDIV = J
            NMOD = MOD(NDIV,3)
            IF (NMOD.EQ.0) CSLCHK(I,J) = 0.
            XNBAR = J
            XMBAR = I
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG APR 1998
            IFINAL = 0
            IFINAX = 0
C END APR 1998
            CALL EIGARB(IFILE,IDESGN,INDX,XIBAR,C,CC,WCRIT,ALPHA2,XMBAR,
     1       L,XNBAR,NPRNT,CIRC,ABSR,SRT2C,ASBAR,BSBAR,DSBAR,EIGCRT,
     1       PBAR,PBARF,NXBAR,NXBARF,TBAR,TBARF,CSLCHK(I,J),ISHEAR,IBAL,
C BEG APR 1998
     1       EIGCHK(I,J),IFINAL,ICUBIC,JCUBIC,IFINAX)
C END APR 1998
  534       CONTINUE
            EIGCHM = MIN(EIGCHM,EIGCHK(I,J))
  535    CONTINUE
  540    CONTINUE
         IF (MMXCHK.GT.1) THEN
            EIGSML = 10.E+16
            DO 542 J = 1,NMXCHK
               IF (EIGCHK(MMXCHK,J).LT.EIGSML) THEN
                  EIGSML = EIGCHK(MMXCHK,J)
                  NNSML  = J
               ENDIF
  542       CONTINUE
            EIGSM2 = 10.E+16
            MMX1 = MMXCHK - 1
            DO 5421 J = 1,NMXCHK
               IF (EIGCHK(MMX1,J).LT.EIGSM2) THEN
                  EIGSM2 = EIGCHK(MMX1,J)
               ENDIF
 5421       CONTINUE
C BEG JULY 1998
            IF (NPRNT.EQ.INDX) WRITE(8,'(A,I2,/,A,/,1P,4E12.4)')
     1    ' IN ARBOCZ FOR ISAND=',ISAND,' EIGSML,EIGSM2,EIGCHM,EIGVAL=',
     1                                    EIGSML,EIGSM2,EIGCHM,EIGVAL
C END JULY 1998
            IF (EIGSML.LT.EIGSM2.AND.EIGSML.LE.EIGCHM.AND.
     1                 (EIGSML.LE.2.*EIGVAL.OR.ISAND.EQ.0)) THEN
               IF (NPRT.GE.2.OR.NPRNT.EQ.INDX)
C BEG JULY 1998
     1             WRITE(8,'(A,/,A,I3,A,/,A,I3,A,/,A,/,A,I3)')
C23456789012345678901234567890123456789012345678901234567890123456789012
     1 ' In ARBOCZ:',
C END JULY 1998
     1 ' The eigenvalue corresponding to m=MMXCHK=',MMXCHK,' axial',
     1 ' halfwaves and n=',NNSML,' circ. halfwaves is critical and is',
     1 ' at the upper end of the final search for missed eigenvalues.',
     1 ' Therefore, we must continue the search over m > ',MMXCHK
C
               KOUNT = 0
               XMBAR = MMXCHK
               XMBARS= MMXCHK
               CSLHMS= CSLCHK(MMXCHK,NNSML)
               XNBAR = NNSML
               EIGSVH = EIGSML
  544          CONTINUE
               KOUNT = KOUNT + 1
               INCR = 0.2*XMBAR + 0.1
               IF (INCR.LT.1) INCR = 1
               XMBAR = XMBAR + INCR 
               NDIV = XMBAR - 1.
               NMOD = MOD(NDIV,3)
               IF (NMOD.EQ.0) CSLHIM = 0.
               IF (KOUNT.EQ.1) CSLHIM = 0.
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG APR 1998
               IFINAL = 0
               IFINAX = 0
C END APR 1998
               CALL EIGARB(IFILE,IDESGN,INDX,XIBAR,C,CC,WCRIT,ALPHA2,
     1         XMBAR,L,XNBAR,NPRNT,CIRC,ABSR,SRT2C,ASBAR,BSBAR,DSBAR,
     1         EIGCRT,PBAR,PBARF,NXBAR,NXBARF,TBAR,TBARF,CSLHIM,ISHEAR,
C BEG APR 1998
     1         IBAL,EIGHIM,IFINAL,ICUBIC,JCUBIC,IFINAX)
C END APR 1998
C BEG JULY 1998
               IF (NPRNT.EQ.INDX) WRITE(8,'(A,1P,4E12.4)')
     1       ' EIGHIM,XMBAR,XNBAR,CSLHIM=',EIGHIM,XMBAR,XNBAR,CSLHIM
C END JULY 1998
               IF (EIGHIM.LT.EIGSVH) THEN
                  EIGSVH = EIGHIM
                  XMBARS = XMBAR
                  CSLHMS = CSLHIM
                  IF (KOUNT.LT.30) GO TO 544
               ENDIF
               IF (EIGSVH.LE.EIGVAL) THEN
                  EIGVAL = EIGSVH
                  MBAR   = XMBARS
                  NBAR   = XNBAR
                  CSLOPE = CSLHMS
               ENDIF
C BEG JULY 1998
C23456789012345678901234567890123456789012345678901234567890123456789012
               IF (NPRNT.EQ.INDX) WRITE(8,'(A,/,2I4,5E12.4)')
     1     ' MWAVEX(5),NWAVEX(5),EIGMNC(5),EIGSVH,XMBARS,XNBAR,CSLHMS=',
     1       MWAVEX(5),NWAVEX(5),EIGMNC(5),EIGSVH,XMBARS,XNBAR,CSLHMS
               IF (0.8*EIGSVH.LT.EIGMNC(5)
     1                               .AND.1.2*EIGSVH.GT.EIGMNC(5)) THEN
                  IF (0.8*XMBARS.LT.FLOAT(MWAVEX(5)).AND.
     1                1.2*XMBARS.GT.FLOAT(MWAVEX(5))) THEN
                     IF (  (XNBAR-1.).LE.FLOAT(NWAVEX(5))
     1                .AND.(XNBAR+1.).GE.FLOAT(NWAVEX(5))) THEN
                        EIGSVH = EIGMNC(5)
                        XMBARS = MWAVEX(5)
                        XNBAR  = NWAVEX(5)
                        CSLHMS = SLOPEX(5)
                     ENDIF
                  ENDIF
               ENDIF
C END JULY 1998
               EIGMNC(6) = EIGSVH
               MWAVEX(6) = XMBARS
               NWAVEX(6) = XNBAR
               SLOPEX(6) = CSLHMS
C BEG JAN 2006
               TESTX(6)  = TEST
C END JAN 2006
            ENDIF
         ENDIF
         IF (NPRNT.EQ.INDX) WRITE(IFILE,'(A,/,A,/,A)')
     1   ' BUCKLING MODES AND LOAD FACTORS CORRESPONDING TO',
     1   '  LOW NUMBER OF AXIAL (M) AND HOOP (N) HALFWAVES',
     1   '   M   N    SLOPE     EIGENVALUE   LOWEST EIGENVALUE'
         DO 547 I = 1,MMXCHK
         DO 543 J = 1,NMXCHK
            IF (NPRNT.EQ.INDX) WRITE(IFILE,'(1P,2I4,1P,3E12.4)')
     1         I,J,CSLCHK(I,J),EIGCHK(I,J),EIGVAL
            IF (EIGCHK(I,J).LT.EIGMNC(6)) THEN
               EIGMNC(6) = EIGCHK(I,J)
               MWAVEX(6) = I
               NWAVEX(6) = J
               SLOPEX(6) = CSLCHK(I,J)
C BEG JAN 2006
               TESTX(6)  = TEST
C END JAN 2006
            ENDIF
C END APR 1998
            IF (EIGCHK(I,J).LE.0.0.OR.EIGVAL.LE.EIGCHK(I,J)) GO TO 543
            EIGVAL = EIGCHK(I,J)
            CSLOPE = CSLCHK(I,J)
            MBAR   = I
            NBAR   = J
  543    CONTINUE
  547    CONTINUE
C BEG JULY 1998
C  Possibly check for helicoidal buckling....
         EIGMNC(7) = 10.E+16
C        IF ((CIRC/ABS(R)).GT.2.0) THEN
C           IF (NPRNT.EQ.INDX) WRITE(IFILE,'(/,A)')
C    1    ' Next, check for helicoidal buckling (n = 0 circ. waves)...'
C           EIGMNM = 10.E+16
C           DO 5472 I = 1,MMXCHK
C              IF (I.LE.3) CSLPNA(I) = 0.
C              EIGPNA(I) = 10.E+16
C              MMOD = MOD(I,3)
C              IF (MMOD.EQ.0) CSLPNA(I) = 0.
C              XMBAR = I
C              XNBAR = 0.
C              IFINAL = 0
C              IFINAX = 0
C              CALL EIGARB(IFILE,IDESGN,INDX,XIBAR,C,CC,WCRIT,ALPHA2,
C    1         XMBAR,L,XNBAR,NPRNT,CIRC,ABSR,SRT2C,ASBAR,BSBAR,DSBAR,
C    1         EIGCRT,PBAR,PBARF,NXBAR,NXBARF,TBAR,TBARF,CSLPNA(I),
C    1         ISHEAR,IBAL,EIGPNA(I),IFINAL,ICUBIC,JCUBIC,IFINAX)
C              EIGMNM = MIN(EIGMNM,EIGPNA(I))
C5472       CONTINUE
C           DO 5474 I = 1,MMXCHK
C              DIFF = ABS(EIGMNM - EIGPNA(I))/EIGMNM
C              IF (DIFF.LT.0.0001) THEN
C                 MWAVEX(7) = I
C                 NWAVEX(7) = 0
C                 SLOPEX(7) = CSLPNA(I)
C                 EIGMNC(7) = EIGPNA(I)
C BEG JAN 2006
C                 TESTX(7)  = TEST
C END JAN 2006

C                 GO TO 5475
C              ENDIF
C5474       CONTINUE
C5475       CONTINUE
C           IF (EIGMNC(7).LT.EIGVAL) THEN
C              EIGVAL = EIGMNC(7)
C              CSLOPE = SLOPEX(7)
C              MBAR   = MWAVEX(7)
C              NBAR   = NWAVEX(7)
C           ENDIF
C        ENDIF
C END JULY 1998
C BEG APR 1998
         IF (W0.EQ.0.0) THEN
            EIGAXY = EIGCRT/COEFN
            IF (NX.NE.0.0) EIGAXY = EIGCRT/(COEFN*ABS(NX))
         ENDIF
C BEG DEC 2003
C        IF (NPRT.GE.2.AND.ILABEL.NE.9242) THEN
C           WRITE(8,'(A,1P,7E10.2)')' EIGMNC=',(EIGMNC(I),I=1,7)
C           WRITE(8,'(A,1P,E12.4)')' EIGAXY=',EIGAXY
C        ENDIF
C END DEC 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG JULY 1998
         DO 548 I = 1,7
C END JULY 1998
            DIFF = ABS(EIGAXY - EIGMNC(I))/ABS(EIGMNC(I))
C BEG MAY 1998
C BEG JULY 1998
            ERATIO(I) = 1.0
            DCOMPR = 0.010
            IF (EIGMNC(I).GT.EIGAXY) DCOMPR = 0.005
            IF (EIGMNC(I).LT.1.0.AND.DIFF.LT.DCOMPR.AND.RBB.GT.0.6
     1                                            .AND.W0.NE.0.0) THEN
C END JULY 1998
C END MAY 1998
               IF (NPRT.GE.2) THEN
         WRITE(8,'(A,I1,A,1P,E12.4,A,/,A,1P,E14.4,A,/,A,I1,A/,A,/,A,A)')
     1  ' The eigenvalue, EIGMNC(',I,')=',EIGMNC(I),' is very close to',
     1  ' the eigenvalue, EIGAXY= ',EIGAXY,' for axisymmetric buckling',
     1  ' of the perfect shell. Therefore, EIGMNC(',I,') is being',
     1  ' reset to a large number so that it will not be included in',
     1  ' the collection of eigenvalues from which the critical one',
     1  ' will be selected.'
               ENDIF
C BEG JULY 1998
               IF (EIGMNC(I).LT.EIGAXY) ERATIO(I) = EIGMNC(I)/EIGAXY
C END JULY 1998
               EIGMNC(I) = 10.E+16
            ENDIF
 548     CONTINUE
C BEG JULY 1998
C BEG DEC 2005
C        IF (NPRT.GE.2.AND.ILABEL.NE.9242) THEN
         IF (NPRT.GE.2) THEN
C END DEC 2005
            WRITE(8,'(A,1P,7E10.2)')' EIGMNC=',(EIGMNC(I),I=1,7)
            WRITE(8,'(A,1P,7E10.2)')' ERATIO=',(ERATIO(I),I=1,7)
C END JULY 1998
            WRITE(8,'(A,1P,7E10.2)')' SLOPEX=',(SLOPEX(I),I=1,7)
            WRITE(8,'(A,1P,I5,6I10)')' MWAVEX=',(MWAVEX(I),I=1,7)
            WRITE(8,'(A,1P,I5,6I10)')' NWAVEX=',(NWAVEX(I),I=1,7)
C BEG JAN 2006
            WRITE(8,'(A,1P,7E10.2)')' TESTX =',(TESTX(I),I=1,7)
C END JAN 2006
         ENDIF
C BEG JUN 1999
         EIGSML = 10.E+26
         MMSML = 1
         CCSML = 0.
C END JUN 1999
C BEG JULY 1998
         ERATMN = 1.0
         DO 549 I = 1,7
            ERATMN = MIN(ERATMN,ERATIO(I))
C END JULY 1998
C BEG JUN 1999
            IF (EIGMNC(I).LT.EIGSML.AND.MWAVEX(I).NE.0) THEN
C END JUN 1999
               EIGSML = EIGMNC(I)
               MMSML  = MWAVEX(I)
               NNSML  = NWAVEX(I)
               CCSML  = SLOPEX(I)
            ENDIF
  549    CONTINUE
C BEG JULY 1998
         IF (NPRNT.EQ.INDX) WRITE(8,'(A,/,1P,E11.3,2I5,1P,4E11.3)')
     1 ' AFTER 549: EIGSML,MMSML,NNSML,CCSML,EIGAXY,EIGVAL,W0=',
     1              EIGSML,MMSML,NNSML,CCSML,EIGAXY,EIGVAL,W0
C END JULY 1998
C23456789012345678901234567890123456789012345678901234567890123456789012
         DIFF = ABS(EIGAXY - EIGVAL)/ABS(EIGVAL)
C BEG MAY 1998
C BEG JULY 1998
         DCOMPR = 0.010
         IF (EIGVAL.GT.EIGAXY) DCOMPR = 0.005
         IF (EIGVAL.LT.1.0.AND.DIFF.LT.DCOMPR.AND.RBB.GT.0.6
     1                                      .AND.W0.NE.0.0) THEN
C END JULY 1998
C END MAY 1998
            IF (NPRT.GE.2) THEN
               WRITE(8,'(A,1P,E12.4,A,/,A,1P,E12.4,A,/,A,/,A)')
     1       ' The eigenvalue, EIGVAL=',EIGVAL,' is very close to',
     1       ' the eigenvalue, EIGAXY=',EIGAXY,' for axisymmetric',
     1       ' buckling of the perfect shell. Therefore, the next-to-',
     1       ' critical eigenvalue will be used.'
            ENDIF
            EIGVAL = EIGSML
            MBAR = MMSML
            NBAR = NNSML
            CSLOPE = CCSML
         ENDIF
C BEG JUN 1999
         IF (MBAR.LT.0.999) THEN
            MBAR = MMSML
            NBAR = NNSML
            CSLOPE = CCSML
            EIGVAL = EIGSML
         ENDIF
C END JUN 1999
         IF (NPRNT.EQ.INDX) WRITE(8,'(A,/,1P,5E12.4)')
     1 ' EIGVAL,MBAR,NBAR,CSLOPE,EIGAXY=',
     1   EIGVAL,MBAR,NBAR,CSLOPE,EIGAXY
C BEG APR 1998
         IFINAL = 1
         IFINAX = 0
C END APR 1998
         CALL EIGARB(IFILE,IDESGN,INDX,XIBAR,C,CC,WCRIT,ALPHA2,MBAR,L,
     1    NBAR,NPRNT,CIRC,ABSR,SRT2C,ASBAR,BSBAR,DSBAR,EIGCRT,PBAR,
     1    PBARF,NXBAR,NXBARF,TBAR,TBARF,CSLOPE,ISHEAR,IBAL,EIGVAL,
C BEG APR 1998
     1    IFINAL,ICUBIC,JCUBIC,IFINAX)
C END APR 1998
C23456789012345678901234567890123456789012345678901234567890123456789012
C BEG NOV 2003
         IF (NPRT.GE.2)
     1   WRITE(8,'(A,I5,A,I2,A,1P,4E9.2,/,A,1P,E12.4,/,A,1P,E12.4)')
     1 ' IN ARBOCZ:',ILABEL,': INDX=',INDX,': R,L,CIRC,W0=',R,L,CIRC,W0,
     1 ' Axisymmetric NORMALIZED eigenvalue of perfect shell,  Nxcrit=',
     1   EIGAXY,
     1 ' Critical NORMALIZED eigenvalue with use of Eq.(3.61), EIGVAL=',
     1   EIGVAL
C END NOV 2003
         DIFF = ABS(EIGAXY - EIGVAL)/ABS(EIGVAL)
C BEG MAY 1998
C BEG JULY 1998
         DCOMPR = 0.010
         IF (EIGVAL.GT.EIGAXY) DCOMPR = 0.005
         IF (EIGVAL.LT.1.0.AND.DIFF.LT.DCOMPR.AND.RBB.GT.0.6
     1                                      .AND.W0.NE.0.0) THEN
C END JULY 1998
C END MAY 1998
            IF (NPRT.GE.2) THEN
               WRITE(8,'(A,1P,E12.4,A,/,A,1P,E12.4,A,/,A,/,A,/,A)')
     1       ' The eigenvalue, EIGVAL=',EIGVAL,' is very close to',
     1       ' the eigenvalue, EIGAXY=',EIGAXY,' for axisymmetric',
     1       ' buckling of the perfect shell. Therefore, EIGVAL is',
     1       ' being reset to unity. Ignore the result from Arbocz',
     1       ' theory for the imperfect panel.'
            ENDIF
            EIGVAL=1.0
            IARBOC = 1
         ENDIF
      ENDIF
C BEG JULY 1998
      IF (IDESGN.EQ.1.AND.IARBOC.EQ.1) EIGVAL = 1.0
C END JULY 1998
C END APR 1998
      MWAVE = MBAR + 0.1
      NWAVE = NBAR + 0.1
C
C     IF (IDESGN.EQ.0.AND.XIBAR.NE.0.0) THEN
C    1               .AND.ISHEAR.EQ.0.AND.IBAL.EQ.0) THEN
C  CHECK FOR BUCKLING FOR M,N IN RANGE WHERE IMPERFECTION MATTERS MOST...
C        MMMAX = WCRIT/2. + 0.2
C        IF (MMMAX.LT.1) MMMAX = 1
C        MMMIN = WCRIT/2.
C        IF (MMMIN.LT.1) MMMIN = 1
C        NNMAX = 2*NPANDA
C        MMMIN = 1
C        MMMAX = WCRIT
C        NNMAX = 100
C        EIGMIN = EIGVAL
C        SLOPE = 0.
C        DO 160 M = MMMIN,MMMAX
C        DO 159 N = 1,NNMAX
C         MBAR = M
C         NBAR = N
C         IF (NBAR.LT.3.) SLOPE = 0.0
C         NDIV = N
C         NMOD = MOD(NDIV,3)
C         IF (NBAR.LT.50.AND.NMOD.EQ.0) SLOPE = 0.
C
C BEG APR 1998
C         IFINAL = 0
C         IFINAX = 0
C END APR 1998
C         CALL EIGARB(IFILE,IDESGN,INDX,XIBAR,C,CC,WCRIT,ALPHA2,MBAR,L,
C    1    NBAR,NPRNT,CIRC,ABSR,SRT2C,ASBAR,BSBAR,DSBAR,EIGCRT,PBAR,
C BEG MAR 1997
C    1    PBARF,NXBAR,NXBARF,TBAR,TBARF,SLOPE,ISHEAR,IBAL,EIGV,
C BEG APR 1998
C    1    IFINAL,ICUBIC,JCUBIC,IFINAX)
C END APR 1998
C END MAR 1997
C BEG FEB 1996
C         IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
C         IF (EIGV.LT.EIGMIN) THEN
C            NSAVE = NBAR
C            MSAVE = MBAR
C            CSAVE = SLOPE
C         ENDIF
C         EIGMIN = MIN(EIGMIN,EIGV)
C 159    CONTINUE
C 160    CONTINUE
C        IF (EIGMIN.LT.EIGVAL) THEN
C           MWAVE = MSAVE + 0.1
C           NWAVE = NSAVE + 0.1
C           CSLOPE = CSAVE
C           EIGVAL = EIGMIN
C        ENDIF
C     ENDIF
C
C BEG JULY 1998
      EIGVAL = EIGVAL*ERATMN
C END JULY 1998
C BEG JULY 2006
 2955 CONTINUE
C END JULY 2006
      EIGVLS = EIGVAL
      AMBAR = L/MBAR
      BNBAR = CIRC/NBAR
      CALL SHRRED(IREDUC,NX,NY,NXY,TX,TY,G1323,EIGVAL,0,0,0,
C BEG OCT 1996
C BEG NOV 1997
     1                  AMBAR,BNBAR,1,NXF,NYF,22)
C END NOV 1997
C END OCT 1996
C
C BEG OCT 1998
      IF (NPRT.GE.2.AND.IREDUC.EQ.1)
     1   WRITE(IFILE,1100) EIGVLS,EIGVAL,MWAVE,NWAVE,CSLOPE
      IF (NPRT.GE.2.AND.IREDUC.EQ.0)
     1   WRITE(IFILE,1101) EIGVLS,MWAVE,NWAVE,CSLOPE
C END OCT 1998
C BEG NOV 2003
C23456789012345678901234567890123456789012345678901234567890123456789012
 1100 FORMAT(/' NORMALIZED BUCKLING LOAD FACTORS FROM ARBOCZ THEORY:'/
     1'  NORMALIZED buckling load factor neglecting trans.shear.def.=',
     1 1PE12.4/
     1'  NORMALIZED buckling load factor including  trans.shear.def.=',
     1 1PE12.4/
     1'  Buckling mode shape: axial m, hoop n, slope =',2I5,1PE12.4)
 1101 FORMAT(/' NORMALIZED BUCKLING LOAD FACTORS FROM ARBOCZ THEORY:'/
     1'  NORMALIZED buckling load factor neglecting trans.shear.def.=',
     1 1PE12.4/
     1'  NORMALIZED buckling mode shape: axial m, hoop n, slope =',2I5,
     1 1PE12.4)
C END NOV 2003
C BEG APR 1997  (MOVED FROM ABOVE)
      IF (IDESGN.EQ.1) THEN
         IF (PARX2.GT.0.1.AND.ISOGRD.EQ.0) THEN
              ESXNEW = EIGVAL
              CALL EIGKNK(PARX1,PARX2,NBAR,EIGVAL,NXBAR,PBAR/ABSR,TBAR,
     1                    ESXNEW,IFILE,NPRNT,INDX,1,ITUTOR)
C BEG OCT 1998
C BEG NOV 2003
              IF (NPRT.GE.2) WRITE(IFILE,'(A,1P,E12.4,/,A,1P,E12.4)')
     1' NORMALIZED load factor BEFORE knockdown for smeared stringers=',
     1  EIGVAL,
     1' NORMALIZED load factor AFTER  knockdown for smeared stringers=',
     1  ESXNEW
C END NOV 2003
C END OCT 1998
              EIGVAL = ESXNEW
         ENDIF
      ENDIF
C END APR 1997
C BEG FEB 1996
 2222 CONTINUE
C END FEB 1996
C BEG MAR 1998
      ISAND = ISANDZ
C END MAR 1998
      RETURN
      END
C
C
C
C=DECK      EIGARB
      SUBROUTINE EIGARB(IFILE,IDESGN,INDX,XIBAR,C,CC,WCRIT,ALPHA2,
     1  M,L,N,NPRNT,CIRC,R,SRT2C,ASBAR,BSBAR,DSBAR,EIGCRT,PBAR,PBARF,
C BEG MAR 1997
     1  NXBAR,NXBARF,TBAR,TBARF,SLOPE,ISHEAR,IBAL,EIGVAL,
C BEG MAY 1997
     1  IFINAL,ICUBIC,JCUBIC,IFINAX)
C END MAY 1997
C END MAR 1997
C
C BEG DEC 2005
C  For given values of (m,n) = (axial halfwaves, circumferential
C  halfwaves), buckling eigenvalues are computed in SUBROUTINE EIGARB
C  for a wide range of SLOPE = slope of the buckling nodal lines.
C  SUBROUTINE EIGARB calls SUBROUTINE ARBAPP, which in turn calls
C  SUBROUTINE ARBIMP. The purpose of these is to derive the coefficients
C  of the cubic polynomial, Eq. (3.61), from the equations in the appendix
C  of the Arbocz report, J. Arbocz, "The effect of initial imperfections
C  on shell stability - an updated review", Delft University Faculty of
C  aerospace Engineering report, LR-695, September 1992. SUBROUTINE
C  ARBIMP calls SUBROUTINE CUBIC, in which the cubic equation 3.61
C  is solved for the lowest positive root (eigenvalue).
C
C  The method used to solve the cubic eq.3.61 in the Arbocz report
C  is described on pp 103-104 of:
C  CRC Standard Mathematical Tables, Student Edition, 18th Edition,
C  S. M. Selby, Editor, The Chemical Rupper Company, Cleveland, OH 44128
C END DEC 2005
C  PURPOSE IS TO DERIVE THE CUBIC POLYNOMIAL COEFFICIENTS FROM THE
C  EQUATIONS IN THE APPENDIX OF THE ARBOCZ REPORT AND FROM EQ. (3.61),
C  AND THEN TO SOLVE THE CUBIC EQUATION FOR THE LOWEST EIGENVALUE.
C
      DIMENSION C(6,6)
C BEG FEB 1996
      COMMON/IRESTX/IRESTY
C END FEB 1996
      COMMON/LWRUPR/VARLOW(50),VARHI(50),CLINK(50,5),VLINK(50),VBV(99)
      COMMON/NUMPAR/NPAR,NVAR,NALLOW,NNNCON,NDEC,NLINK,NESCAP,ITYPE
      COMMON/PARAMS/PAR(99),VAR(50),ALLOW(50),CONST(99),DEC(50),ESC(50)
      COMMON/OPTVAR/IDEC(50),ILV(50),IDLINK(50,5),ISCAPE(50),JTERMS(50)
      COMMON/WORDS/WORDP(99),WORDV(50),WORDA(50),WORDC(99),WORDD(50)
      COMMON/ECHECK/ICHECK
      CHARACTER*80 WORDP,WORDV,WORDA,WORDC,WORDD
      DIMENSION EIGALL(200),SLPALL(200)
      LOGICAL IBOOL
      DIMENSION ASBAR(3,3),BSBAR(3,3),DSBAR(3,3)
      REAL L,M,N,NXBAR,NXBARF,NXEIG,NYEIG,NXYEIG
C
      EIGVAL = 10.E16   
      EIGSAV = EIGVAL   
      SLOPSV = SLOPE    
      SLOP0 = SLOPE
      PI = 3.1415927
      KOUNT = 0
      KOUNT2= 0
      SUM = TBARF + TBAR
      SGN = 1.0   
      IF (SUM.LT.0.0) SGN = -1.0    
      FINCR = 0.01*SGN  
C BEG MAY 1997
      FPROD0 = 1.2
      IF (IFINAX.EQ.1) FPROD0 = 1.02
      FPROD = FPROD0
C END MAY 1997
      ITHRU = 0
      ICHECS = 0.
      SLPMAX = 30.
C
   10 CONTINUE
      EIGSVV = EIGSAV
      EIGSAV = EIGVAL
      KOUNT = KOUNT + 1
      KOUNT2= KOUNT2+ 1
      S   = SLOPE
      CALL ARBAPP(IFILE,INDX,NPRNT,XIBAR,CC,WCRIT,ALPHA2,M,PI,CIRC,
     1            L,N,S,R,SRT2C,ASBAR,BSBAR,DSBAR,EIGCRT,PBAR,PBARF,
C BEG MAR 1997
     1            NXBAR,NXBARF,TBAR,TBARF,EIGVAL,
     1            IDESGN,IFINAL,ICUBIC,JCUBIC)
C END MAR 1997
C
C BEG DEC 2005
C     IF (S.NE.0.0.AND.NPRNT.EQ.INDX) THEN
      IF (NPRNT.EQ.INDX) THEN
C END DEC 2005
         WRITE(8,7011) M,N,SLOPE,R,EIGVAL
 7011    FORMAT(' M,N,S,R,EIG=', 1P,5E12.4)
      ENDIF
C
C ********** NOTE *********** NOTE ************ NOTE ***********
C BEG FEB 1996
      IF (EIGVAL.LT.0.0) EIGVAL = 10.E+17*ABS(EIGVAL)
C END FEB 1996
C ********** NOTE *********** NOTE ************ NOTE ***********
      IF (EIGVAL.LT.0.0) THEN
         IF (NPRNT.EQ.INDX) WRITE(IFILE,220) N,M,S,EIGVAL
  220    FORMAT(' N,M,S,EIG=',1P4E12.4)
         IIERR = 0
         IBOOL = (N.GT.1.1)
         IF (IBOOL) IIERR = 1
         IF (IIERR.EQ.1) THEN
            CALL OUTOPT(IFILE,NVAR,IDEC,ISCAPE,ILV,CLINK,IDLINK,
     1                  VARLOW,VARHI,VAR,WORDV,
     1 '         SUMMARY OF INFORMATION FROM OPTIMIZATION ANALYSIS      
     1  ',57)
C
            DETTER = C(1,1)*C(2,2) - C(1,2)*C(1,2)
            WRITE(IFILE,250)
     1             INDX,L,CIRC,N,M,S,EIGVAL,-NXBARF,-PBARF,TBARF,
     1             -NXBAR,-PBAR,TBAR
            WRITE(IFILE,251)
     1             C(1,1),C(2,2),C(3,3),C(4,4),C(5,5),C(6,6),DETTER
         ENDIF
C
  250    FORMAT(//' ************* NEGATIVE BUCKLING LOAD(S) **********'/
     1' We are now in the ARBOCZ (closed form) analysis branch.'/
     1' We are now in SUBROUTINE EIGARB. Relevant parameters have the'/
     1' the following values:'/
     1'   Indicator for type of buckling, INDX               =',I10/
     1'    (1=local; 2=general; 3=smeared stringers; 4=smeared rings)'/
     1'   Axial length of part of panel being evaluated, a   =',1PE12.4/
     1'   Circ. length of part of panel being evaluated, b   =',1PE12.4/
     1'   Number of circumferential halfwaves in this part, n=',1PE12.4/
     1'   Number of      axial      halfwaves in this part, m=',1PE12.4/
     1'   Slope of the buckling nodal lines, SLOPE           =',1PE12.4/
     1'   NORMALIZED buckling load factor, EIGVAL            =',1PE12.4/
     1'   Fixed axial resultant (Load Set B),         Nx(pre)=',1PE12.4/
     1'   Fixed hoop  resultant (Load Set B),         Ny(pre)=',1PE12.4/
     1'   Fixed shear resultant (Load Set B),        Nxy(pre)=',1PE12.4/
     1'   Eigenvalue axial resultant (Load Set A),    Nx(eig)=',1PE12.4/
     1'   Eigenvalue hoop  resultant (Load Set A),    Ny(eig)=',1PE12.4/
     1'   Eigenvalue shear resultant (Load Set A),   Nxy(eig)=',1PE12.4)
  251 FORMAT (/,   
     1' Tangent stiffness terms, CTAN...'/
     1'   Axial stiffness,                             C(1,1)=',1PE12.4/
     1'   Hoop  stiffness,                             C(2,2)=',1PE12.4/
     1'   In-plane shear stiffness,                    C(3,3)=',1PE12.4/
     1'   Axial bending  stiffness,                    C(4,4)=',1PE12.4/
     1'   Hoop  bending  stiffness,                    C(5,5)=',1PE12.4/
     1'   Torsional      stiffness,                    C(6,6)=',1PE12.4/
     1'   C11*C22 - C12**2 (must be positive!) C11*C22-C12**2=',1PE12.4)
C
      IF (IIERR.EQ.1) WRITE(8,260)
  260 FORMAT(/' CHECK FOR THE FOLLOWING:'/
     1'   1. Are the signs of your applied loads correct?'/
     1'   2. Do you have a Load Set B that is more than large enough'/
     1'      to cause buckling by itself? (If you suspect that the'/
     1'      pressure is causing this trouble, rerun with the pressure'/
     1'      in Load Set A instead of Load Set B.)'/
     1'   3. Are thermal resultants large enough to cause buckling by'/
     1'      themselves? (If so, move thermal loads to Load Set A).'/
     1'   4. Are any terms on the diagonal of the tangent stiffness'/
     1'      matrix CTAN negative? If so, there is something wrong'/
     1'      with the calculation of the constitutive law. (Contact'/
     1'      Dave Bushnell, (415) 424-3237 ).'/
     1'   5. Is C11*C22 - C12**2 negative? If so, there is something'/
     1'      wrong with the local postbuckling solution (contact Dave'/
     1'      Bushnell, (415) 424-3237).'//
     1' IF THE DIFFICULTY IS NOT ITEMS 4 OR 5, YOU MIGHT FIRST TRY TO'/
     1' AVOID THE PROBLEM BY INCREASING THE LOAD COMPONENTS IN'/
     1' LOAD SET A.'/)
C BEG FEB 1996
C BEG FEB 1999
         CALL LOADBA(10)
C END FEB 1999
         IF (IRESTY.EQ.1) THEN
            WRITE(8,*)' THIS MESSAGE PRINTED FROM SUBROUTINE EIGARB.'
            GO TO 2222
         ENDIF
C END FEB 1996
         IF (IIERR.EQ.1) CALL ERREX
   32    CONTINUE
      ENDIF
C
      IF (IDESGN.EQ.1) GO TO 320    
      IF (ISHEAR.EQ.0.AND.IBAL.EQ.0) GO TO 320
      IF (EIGVAL.GE.EIGSAV.AND.KOUNT.GT.1.AND.ITHRU.EQ.0) GO TO 200  
      IF (ITHRU.EQ.1) THEN
         EIGALL(KOUNT2) = EIGVAL
         SLPALL(KOUNT2) = SLOPE
         IF (ICHECS.EQ.1.AND.SLOPE.GE.0.) FPROD = 1.2
      ENDIF
      IF (ABS(SLOPE).GT.SLPMAX) GO TO 300
      SLOPSV = SLOPE    
C     
C     ITERATE ON THE SLOPE OF THE BUCKLING PATTERN... 
C     
  110 CONTINUE
      SLOPC = SLOPE     
      IF (ABS(SLOPC).LE.0.1) SLOPE = SLOPE + FINCR    
      IF (ABS(SLOPC).GT.0.1) SLOPE = SLOPE*FPROD
      GO TO 10    
C     
  200 CONTINUE    
      IF (EIGVAL.EQ.EIGSAV.OR.KOUNT.GT.2) GO TO 300     
      SLOPE = SLOPSV    
      EIGVAL = EIGSAV   
      FINCR =  -FINCR   
      IF (ABS(SLOPE).GT.0.1) FPROD = 1./FPROD  
      GO TO 110   
C     
  300 CONTINUE    
C     
      SLOPE = SLOPSV    
      EIGVAL = EIGSAV   
C
      IF (ITHRU.EQ.1) THEN
         EIGALL(KOUNT2) = EIGVAL
         SLPALL(KOUNT2) = SLOPE
      ENDIF
      ICHECS = ICHECK
      IF (SLOP0.EQ.0.0) ICHECS=1
      IF (ICHECS.EQ.1.AND.ITHRU.EQ.0) THEN
         IF (NPRNT.EQ.INDX) WRITE(8,302)
  302    FORMAT(/' CHECK WIDE RANGE OF SLOPE FOR MINIMUM EIGENVALUE.')
         SLPMIN = -20.
         IF (SGN.GT.0.0.AND.TBAR.GT.0.1*ABS(NXBAR)
     1         .AND.C(4,6).GE.0.) SLPMIN = 0.
         SLPMAX = 20.1
         ITHRU  = 1
         SLOP1  = SLOPE
         EIGEV1 = EIGVAL
         KOUNT  = 0
         KOUNT2 = 0
         SLOPE  = SLPMIN
         EIGVAL = 10.E16
         FINCR = 0.05
         FPROD = 1./1.2 
         IF (SLOPE.GE.0.) FPROD = 1.2
         GO TO 10
      ENDIF
      IF (ICHECS.EQ.1.AND.ITHRU.EQ.1) THEN
         EIGMIN = EIGEV1
         DO 305 I = 1,KOUNT2
            EIGMIN = MIN(EIGMIN,EIGALL(I))
  305    CONTINUE
         DIFF = ABS(EIGEV1 - EIGMIN)/ABS(EIGEV1)
         IF (DIFF.LT.0.01) THEN
            EIGVAL = EIGEV1
            SLOPE  = SLOP1
            GO TO 320
         ELSE
            DO 310 I = 1,KOUNT2
             DIFF = ABS(EIGMIN - EIGALL(I))/ABS(EIGMIN)
             IF (DIFF.LT.0.0001) THEN
               EIGVAL = EIGALL(I)
               SLOPE  = SLPALL(I)
               IF (NPRNT.EQ.INDX) 
     1            WRITE(8,308) EIGEV1,SLOP1,EIGVAL,SLOPE
  308          FORMAT(' CRITICAL EIGENVALUE SMALLER THAN THAT FOUND'/
     1       ' BY INITIAL SEARCH:'/
     1       '  PREVIOUS VALUE AND SLOPE:  EIGEV1, SLOP1 =',1P,2E12.4/
     1       '  MINIMUM  VALUE AND SLOPE:  EIGVAL, SLOPE =',1P,2E12.4/)
               GO TO 320
             ENDIF
  310       CONTINUE
         ENDIF
      ENDIF
C 
  320 CONTINUE    
      IF (NPRNT.EQ.INDX) WRITE(8,7010) N,M,SLOPE,EIGVAL
 7010 FORMAT(' N,M,S,EIGVAL=',1P,4E12.4)
C
      NXEIG = -NXBAR
      NYEIG = -PBAR*R
      NXYEIG=  TBAR
      DONNEL = 1.0
C     IF (NPRNT.EQ.INDX) WRITE(8,*)' NXEIG,NYEIG,NXYEIG=',
C    1                               NXEIG,NYEIG,NXYEIG
      CALL DONELL(L,CIRC,N,M,NXEIG,NYEIG,NXYEIG,DONNEL,
     1           0.,0,INDX,R)
C     WRITE(8,*)' N,M,EIGVAL,DONNEL=',N,M,EIGVAL,DONNEL
      EIGVAL = DONNEL*EIGVAL
C
C BEG FEB 1996
 2222 CONTINUE
C END FEB 1996
      RETURN
      END
C
C
C
C=DECK      ARBAPP
      SUBROUTINE ARBAPP(IFILE,INDX,NPRNT,XIBAR,CC,WCRIT,ALPHA2,M,PI,
     1            CIRC,L,N,S,R,SRT2C,ASBAR,BSBAR,DSBAR,EIGCRT,PBAR,
C BEG MAR 1997
     1            PBARF,NXBAR,NXBARF,TBAR,TBARF,EIGVAL,
     1            IDESGN,IFINAL,ICUBIC,JCUBIC)
C END MAR 1997
C
C  PURPOSE IS TO DERIVE THE CUBIC POLYNOMIAL COEFFICIENTS FROM THE
C  EQUATIONS IN THE APPENDIX OF THE ARBOCZ REPORT AND FROM EQ. (3.61),
C  AND THEN TO SOLVE THE CUBIC EQUATION FOR THE LOWEST EIGENVALUE.
C  ALSO, THE LINEAR EQUATION FOR BUCKLING OF THE PERFECT SHELL IS SOLVED.
C  L is the length of the cylindrical shell, which is simply supported.
C  CC is the quantity c = sqrt(3(1-nu**2)), where nu = C(1,2)/C(1,1).
C  ALPHA2 is the quantity given by Eq. (B.16) with m replaced by i (called
C         WCRIT here), the number of axial halfwaves in an axisymmetric 
C                      buckling mode.
C  THE NORMALIZED AMPLITUDE OF THE INITIAL AXISYMMETRIC IMPERFECTION
C  IS CALLED XIBAR. WCRIT IS THE NUMBER OF AXIAL HALFWAVES IN AN
C  AXISYMMETRIC BUCKLING MODE. EIGCRT IS THE BUCKLING LOAD GIVEN BY
C  EQ.(3.13) IN ARBOCZ' REPORT. M IS THE NUMBER OF AXIAL HALFWAVES IN
C  THE NONAXISYMMETRIC BUCKLING MODE; N*PI*R/CIRC IS THE NUMBER OF FULL
C  CIRCUMFERENTIAL WAVES IN THE COMPLETE (360-DEGREES) CYLINDRICAL SHELL.
C  S IS THE SLOPE OF THE NODAL LINES IN THE BUCKLING PATTERN, CALLED
C  THE KHOT SKEWEDNESS PARAMETER IN ARBOCZ' 1992 REPORT. R IS THE RADIUS
C  OF THE CYLINDRICAL SHELL. ASBAR,BSBAR,DSBAR ARE THE SEMI-INVERTED
C  THICKNESS-INTEGRATED CONSTITUTIVE COEFFICIENTS GIVEN BY EQS.(A.12).
C  SRT2C = SQRT[R*T/(2.*c)] (see Eqs.(B.1)). PBAR, NXBAR, TBAR ARE THE
C  "EIGENVALUE" PRESSURE, AXIAL RESULTANT, IN-PLANE SHEAR RESULTANT,
C  RESPECTIVELY. PBARF, NXBARF, TBARF ARE THE FIXED PRESSURE, AXIAL
C  RESULTANT, IN-PLANE SHEAR RESULTANT. (NOTE: THE "EIGENVALUE" LOAD
C  COMPONENTS, PBAR, NXBAR, TBAR, HAVE PREVIOUSLY BEEN MULTIPLIED BY
C  THE BUCKLING LOAD FACTOR FOR THE PERFECT SHELL ALREADY COMPUTED BY
C  PANDA2. THEREFORE, THE EIGENVALUES OBTAINED FROM SUBROUTINE ARBOCZ
C  REPRESENT DIFFERENCES FROM THE PANDA2 PREDICTION FOR THE PERFECT
C  SHELL. FOR EXAMPLE, AN EIGENVALUE OF 1.00 HERE WOULD SIGNIFY THAT
C  THE CRITICAL BUCKLING LOAD FROM SUBROUTINE ARBOCZ AGREES PERFECTLY
C  WITH THAT FROM PANDA2 FOR THE PERFECT SHELL (POSSIBLY WITH STRESSES
C  REDISTRIBUTED AS DISCUSSED IN ITEM   OF PANDA2.NEWS).) EIGVAL IS
C  THE PREDICTED EIGENVALUE.
C
      DIMENSION ASBAR(3,3),BSBAR(3,3),DSBAR(3,3)
      REAL L,M,N,NXBAR,NXBARF
      DOUBLE PRECISION B1,B2,B3,B4,EEE,FFF,GGG,HHH
      DOUBLE PRECISION T3MN,T5MN,T4PN,T6PN
C BEG MAR 1998
C23456789012345678901234567890123456789012345678901234567890123456789012
      DOUBLE PRECISION FNPAN,AM1,AP1,AM2,AM3,AM4,AP2,AP3,AP4
      DOUBLE PRECISION GEAMN,GOAMN,GEAPN,GOAPN,GEBMN,GOBMN,GEBPN,GOBPN
      DOUBLE PRECISION GEDMN,GODMN,GEDPN,GODPN,T1MN,T2PN
C END MAR 1998
C
C  from Eqs. (B.1) of the 1992 Arbocz report:
C
      FNPAN = N*PI*R/CIRC
      AM1 = (M*PI/L + FNPAN*S/R)*SRT2C
      AP1 = (M*PI/L - FNPAN*S/R)*SRT2C
      B1  = FNPAN*SRT2C/R
      AM2 = AM1**2
      AM3 = AM1**3
      AM4 = AM1**4
      AP2 = AP1**2
      AP3 = AP1**3
      AP4 = AP1**4
      B2  = B1**2
      B3  = B1**3
      B4  = B1**4
C
C  from Eqs. (B.2 - B.13) of the 1992 Arbocz report:
C
      GEAMN = ASBAR(2,2)*AM4 +(2.*ASBAR(1,2)+ASBAR(3,3))*AM2*B2
     1                       +ASBAR(1,1)*B4
      GOAMN = 2.*ASBAR(2,3)*AM3*B1 + 2.*ASBAR(1,3)*AM1*B3
      GEAPN = ASBAR(2,2)*AP4 +(2.*ASBAR(1,2)+ASBAR(3,3))*AP2*B2
     1                       +ASBAR(1,1)*B4
      GOAPN = 2.*ASBAR(2,3)*AP3*B1 + 2.*ASBAR(1,3)*AP1*B3
      GEBMN = BSBAR(2,1)*AM4 
     1                  +(BSBAR(1,1)+BSBAR(2,2)-2.*BSBAR(3,3))*AM2*B2
     1                  +BSBAR(1,2)*B4
      GOBMN = (2.*BSBAR(2,3)-BSBAR(3,1))*AM3*B1
     1                  +(2.*BSBAR(1,3)-BSBAR(3,2))*AM1*B3
      GEBPN = BSBAR(2,1)*AP4 
     1                  +(BSBAR(1,1)+BSBAR(2,2)-2.*BSBAR(3,3))*AP2*B2
     1                  +BSBAR(1,2)*B4
      GOBPN = (2.*BSBAR(2,3)-BSBAR(3,1))*AP3*B1
     1                  +(2.*BSBAR(1,3)-BSBAR(3,2))*AP1*B3
      GEDMN = DSBAR(1,1)*AM4 +2.*(DSBAR(1,2)+2.*DSBAR(3,3))*AM2*B2
     1                       +DSBAR(2,2)*B4
      GODMN = 4.*DSBAR(1,3)*AM3*B1 + 4.*DSBAR(2,3)*AM1*B3
      GEDPN = DSBAR(1,1)*AP4 +2.*(DSBAR(1,2)+2.*DSBAR(3,3))*AP2*B2
     1                       +DSBAR(2,2)*B4
      GODPN = 4.*DSBAR(1,3)*AP3*B1 + 4.*DSBAR(2,3)*AP1*B3
C
C  from Eqs. (B.14) of the 1992 Arbocz report:
C
      T1MN = GEDMN - GODMN
      T2PN = GEDPN + GODPN
      T3MN = GEBMN - GOBMN + AM2
      T4PN = GEBPN + GOBPN + AP2
      T5MN = GEAMN + GOAMN
      T6PN = GEAPN - GOAPN
C
C  coefficients in Eqs. (2.47) and (3.61) of the 1992 Arbocz report
C
C     IF (NPRNT.EQ.INDX) THEN
C        WRITE(8,*)' T1MN,T2MN,T3MN=',T1MN,T2MN,T3MN
C        WRITE(8,*)' T4PN,T5MN,T6PN=',T4PN,T5MN,T6PN
C        WRITE(8,*)' CIRC,R,FNPAN=',CIRC,R,FNPAN
C        WRITE(8,*)' SRT2C,B1,B4=',SRT2C,B1,B4
C        WRITE(8,*)' AM1,AP1,AM4,AP4=',AM1,AP1,AM4,AP4
C     ENDIF
      EEE = 0.5*(T1MN +T2PN +T3MN**2/T5MN +T4PN**2/T6PN)
      FFF = -(AM2 + AP2)
      GGG = -2.*B2
      HHH = -2.*(AM1 - AP1)*B1
C
C  buckling of perfect shell (XIBAR is the normalized imperfection amplt):
C
      IF (XIBAR.EQ.0.0) THEN
         EIGVAL = -(EEE +NXBARF*FFF +PBARF*GGG +TBARF*HHH)/
     1             (NXBAR*FFF +PBAR*GGG +TBAR*HHH)
C BEG MAR 1997
C BEG FEB 1996
C        IF (NPRNT.EQ.INDX) THEN
C           WRITE(8,1012) EIGVAL,EEE,FFF,GGG,HHH
C1012       FORMAT(' EIGVAL,EEE,FFF,GGG,HHH=',1P5E11.3)
C        ENDIF
C END FEB 1996
C END MAR 1997
         RETURN
      ENDIF
C
      CALL ARBIMP(IFILE,INDX,NPRNT,XIBAR,CC,WCRIT,ALPHA2,M,PI,CIRC,
     1            L,N,S,R,SRT2C,ASBAR,BSBAR,DSBAR,EIGCRT,PBAR,PBARF,
     1            NXBAR,NXBARF,TBAR,TBARF,B1,B2,B3,B4,EEE,FFF,GGG,HHH,
C BEG MAR 1997
     1            T3MN,T5MN,T4PN,T6PN,EIGVAL,
     1            IDESGN,IFINAL,ICUBIC,JCUBIC)
C END MAR 1997
C
      RETURN
      END
C
C
C
C=DECK      ARBIMP
      SUBROUTINE ARBIMP(IFILE,INDX,NPRNT,XIBAR,CC,WCRIT0,ALPHA2,M,PI,
     1       CIRC,L,N,S,R,SRT2C,ASBAR,BSBAR,DSBAR,EIGCRT,PBAR,PBARF,
     1       NXBAR,NXBARF,TBAR,TBARF,B1,B2,B3,B4,EEE,FFF,GGG,HHH,
C BEG MAR 1997
     1         T3MN,T5MN,T4PN,T6PN,EIGVAL,IDESGN,IFINAL,ICUBIC,JCUBIC)
C END MAR 1997
C
C  PURPOSE IS TO DERIVE THE CUBIC POLYNOMIAL COEFFICIENTS FROM THE
C  EQUATIONS IN THE APPENDIX OF THE ARBOCZ REPORT AND FROM EQ. (3.61),
C  AND THEN TO SOLVE THE CUBIC EQUATION FOR THE LOWEST EIGENVALUE.
C
      DIMENSION ASBAR(3,3),BSBAR(3,3),DSBAR(3,3)
      REAL L,M,N,NXBAR,NXBARF
      DOUBLE PRECISION CONST,FLIN,QUAD,CUBIK
      DOUBLE PRECISION B1,B2,B3,B4,EEE,FFF,GGG,HHH
      DOUBLE PRECISION T3MN,T5MN,T4PN,T6PN
      DOUBLE PRECISION AAA,BBB,CCC,DDD,AEDX,BDX,PPP
C BEG MAR 1998
C23456789012345678901234567890123456789012345678901234567890123456789012
      DOUBLE PRECISION FNPAN,AIPM1,AIMM1,AIPM2,AIMM2,AIPM3,AIMM3
      DOUBLE PRECISION AIPM4,AIMM4,AIPP1,AIMP1,AIPP2,AIMP2,AIPP3,AIMP3
      DOUBLE PRECISION AIPP4,AIMP4
      DOUBLE PRECISION GEAMPN,GOAMPN,GEAMMN,GOAMMN,GEAPPN,GOAPPN
      DOUBLE PRECISION GEAPMN,GOAPMN,GEBMMN,GOBMMN,GEBPMN,GOBPMN
      DOUBLE PRECISION T3IPMN,T4IMMN,T5IMPN,T5IPMN,T6IMMN,T6IPPN
      DOUBLE PRECISION GEBMPN,GOBMPN,GEBPPN,GOBPPN,T3IMPN,T4IPPN,AAA2
C END MAR 1998
C BEG APR 1998
      IFINLS = IFINAL
C END APR 1998
C
C  from Eqs. (C.15, C.16) of the 1992 Arbocz report:
C
C     IF (NPRNT.EQ.INDX) THEN
C        WRITE(8,*)' PI,M,N=',PI,M,N
C        WRITE(8,*)' XIBAR,EIGCRT,ALPHA2=',XIBAR,EIGCRT,ALPHA2
C        WRITE(8,*)' WCRIT,CC,SRT2C=',WCRIT,CC,SRT2C
C        WRITE(8,*)' B1,B2,B3=',B1,B2,B3
C        WRITE(8,*)' L,R,B4=',L,R,B4
C        WRITE(8,*)' T3MN,T5MN=',T3MN,T5MN
C        WRITE(8,*)' T4PN,T6PN=',T4PN,T6PN
C        WRITE(8,*)' EEE,FFF=',EEE,FFF
C        WRITE(8,*)' GGG,HHH=',GGG,HHH
C        WRITE(8,*)' NXBAR,PBAR,TBAR=',NXBAR,PBAR,TBAR
C     ENDIF
C
      WCRIT = WCRIT0
C BEG MAR 1998
      IF (WCRIT0.GT.1.0) THEN
C END MAR 1998
         RT2C  = SRT2C**2
         WCRIT = 2*M
         ALPHA2 = RT2C*(WCRIT*PI/L)**2
         EIGCRT = 0.5*(ALPHA2*DSBAR(1,1)
     1              +(1.+BSBAR(2,1)*ALPHA2)**2/(ALPHA2*ASBAR(2,2)))
      ENDIF
C
      FNPAN = N*PI*R/CIRC
      AIPM1 = ((WCRIT+M)*PI/L + FNPAN*S/R)*SRT2C
      AIMM1 = ((WCRIT-M)*PI/L - FNPAN*S/R)*SRT2C
      AIPM2 = AIPM1**2
      AIMM2 = AIMM1**2
      AIPM3 = AIPM1**3
      AIMM3 = AIMM1**3
      AIPM4 = AIPM1**4
      AIMM4 = AIMM1**4
C
C  from Eqs. (C.17, C.18) of the 1992 Arbocz report:
C
      AIPP1 = ((WCRIT+M)*PI/L - FNPAN*S/R)*SRT2C
      AIMP1 = ((WCRIT-M)*PI/L + FNPAN*S/R)*SRT2C
      AIPP2 = AIPP1**2
      AIMP2 = AIMP1**2
      AIPP3 = AIPP1**3
      AIMP3 = AIMP1**3
      AIPP4 = AIPP1**4
      AIMP4 = AIMP1**4
C
C  from Eqs. (C.7 - C.14) of the 1992 Arbocz report:
C
      GEAMPN = ASBAR(2,2)*AIPM4 +(2.*ASBAR(1,2)+ASBAR(3,3))*AIPM2*B2
     1                       +ASBAR(1,1)*B4
      GOAMPN = 2.*ASBAR(2,3)*AIPM3*B1 + 2.*ASBAR(1,3)*AIPM1*B3
      GEAMMN = ASBAR(2,2)*AIMM4 +(2.*ASBAR(1,2)+ASBAR(3,3))*AIMM2*B2
     1                       +ASBAR(1,1)*B4
      GOAMMN = 2.*ASBAR(2,3)*AIMM3*B1 + 2.*ASBAR(1,3)*AIMM1*B3
      GEAPPN = ASBAR(2,2)*AIPP4 +(2.*ASBAR(1,2)+ASBAR(3,3))*AIPP2*B2
     1                       +ASBAR(1,1)*B4
      GOAPPN = 2.*ASBAR(2,3)*AIPP3*B1 + 2.*ASBAR(1,3)*AIPP1*B3
      GEAPMN = ASBAR(2,2)*AIMP4 +(2.*ASBAR(1,2)+ASBAR(3,3))*AIMP2*B2
     1                       +ASBAR(1,1)*B4
      GOAPMN = 2.*ASBAR(2,3)*AIMP3*B1 + 2.*ASBAR(1,3)*AIMP1*B3
C
C  from Eqs. (C.29 - C.32) of the 1992 Arbocz report:
C
      GEBMMN = BSBAR(2,1)*AIMM4 
     1                  +(BSBAR(1,1)+BSBAR(2,2)-2.*BSBAR(3,3))*AIMM2*B2
     1                  +BSBAR(1,2)*B4
      GOBMMN = (2.*BSBAR(2,3)-BSBAR(3,1))*AIMM3*B1
     1                  +(2.*BSBAR(1,3)-BSBAR(3,2))*AIMM1*B3
      GEBPMN = BSBAR(2,1)*AIMP4 
     1                  +(BSBAR(1,1)+BSBAR(2,2)-2.*BSBAR(3,3))*AIMP2*B2
     1                  +BSBAR(1,2)*B4
      GOBPMN = (2.*BSBAR(2,3)-BSBAR(3,1))*AIMP3*B1
     1                  +(2.*BSBAR(1,3)-BSBAR(3,2))*AIMP1*B3
C
C  from Eqs. (C.23 - C.28) of the 1992 Arbocz report:
C
      T3IPMN = GEBPMN - GOBPMN + AIMP2
      T4IMMN = GEBMMN + GOBMMN + AIMM2
      T5IMPN = GEAMPN + GOAMPN
      T5IPMN = GEAPMN + GOAPMN
      T6IMMN = GEAMMN - GOAMMN
      T6IPPN = GEAPPN - GOAPPN
C
C  from Eqs. (C.39 - C.42) of the 1992 Arbocz report (bold A,B,C,D):
C
      AAA = 0.5*CC*ALPHA2*B2*(T3IPMN/T5IPMN +T4IMMN/T6IMMN
     1                                     +T3MN/T5MN +T4PN/T6PN)
      BBB = CC*B2*(1. + BSBAR(2,1)*ALPHA2)/ASBAR(2,2)
      CCC = 0.5*CC**2*ALPHA2**2*B4*(1./T5IMPN +1./T6IMMN
     1                             +1./T6IPPN +1./T5IPMN)
      DDD = 0.5*CC**2*ALPHA2**2*B4*(1./T6IMMN +1./T5IPMN)
C
C  Kronecker deltas (see Eqs.(3.21) of the 1992 Arbocz report):
C
      DELI2M = 0.0
      DIFF = ABS(2.*M - WCRIT)/ABS(M)
      IF (DIFF.LT.0.001) DELI2M = 1.0
      DELIM = 0.
      DIFF = ABS(M - WCRIT)/ABS(M)
      IF (DIFF.LT.0.001) DELIM = 1.0
      DELKHT = 0.
      IF (S.EQ.0.0) DELKHT = 1.0
C
C  terms containing the imperfection XIBAR in Eq. (3.61) in the Arbocz
C  report:
      PPP = (CCC - DDD*DELIM*DELKHT)*(EIGCRT*XIBAR)**2
      AEDX = AAA*EIGCRT*DELI2M*XIBAR
      BDX = BBB*DELI2M*XIBAR
C
C     IF (INDX.EQ.NPRNT) THEN
C        WRITE(IFILE,*)' AAA,BBB,CCC,DDD=',AAA,BBB,CCC,DDD
C        WRITE(IFILE,*)' XIBAR,EIGCRT=',XIBAR,EIGCRT
C        WRITE(IFILE,*)' DELI2M,DELIM,DELKHT=',DELI2M,DELIM,DELKHT
C        WRITE(IFILE,*)' EEE,FFF,GGG       =',EEE,FFF,GGG
C        WRITE(IFILE,*)' HHH,AEDX,BDX      =',HHH,AEDX,BDX
C        WRITE(IFILE,*)' PPP,EIGCRT,PBAR   =',PPP,EIGCRT,PBAR
C        WRITE(IFILE,*)' PBARF,NXBAR,NXBARF=',PBARF,NXBAR,NXBARF
C        WRITE(IFILE,*)' TBAR,TBARF,CUBIK  =',TBAR,TBARF,CUBIK
C        WRITE(IFILE,*)' QUAD,FLIN,CONST =',QUAD,FLIN,CONST
C     ENDIF
C
C  get the coefficients of the cubic polynomial for the buckling
C  load factor, EIGVAL (see Eq.(3.61)):
C
      CALL EQ361(EEE,FFF,GGG,HHH,AEDX,BDX,PPP,EIGCRT,PBAR,PBARF,
     1           NXBAR,NXBARF,TBAR,TBARF,CUBIK,QUAD,FLIN,CONST)
C
C  solve the cubic equation for the lowest positive real root:
C
C BEG APR 1998
C     IF (M.EQ.2.0.AND.N.EQ.4.0.AND.S.GT.-0.18.AND.S.LT.-0.14
C    1            .AND.NPRNT.EQ.INDX) IFINAL = 1
C END APR 1998
C BEG DEC 2005
C     IF (M.EQ.2.0.AND.N.EQ.2.0.AND.S.EQ.0.0
C    1            .AND.NPRNT.EQ.INDX) IFINAL = 1
C END DEC 2005
C END APR 1998
C BEG MAR 1997
C     CALL CUBIC(CONST,FLIN,QUAD,CUBIK,EIGV1)
      CALL CUBIC(CONST,FLIN,QUAD,CUBIK,EIGV1,
     1           IDESGN,ICUBIC,JCUBIC,IFINAL,NPRNT,INDX)
C END MAR 1997
C BEG MAR 1998
      IF (IFINAL.EQ.1.AND.NPRNT.EQ.INDX)
     1   WRITE(8,'(A,/,1P,5E12.4)')' CONST,FLIN,QUAD,CUBIK,EIGV1=',
     1                               CONST,FLIN,QUAD,CUBIK,EIGV1
C END MAR 1998
C
C  Results are sensitive to the sign of the imperfection. Find 
C  eigenvalue with use of the opposite sign for XIBAR. Only the
C  terms AEDX and BDX are affected, and these simply change sign:
C
      CALL EQ361(EEE,FFF,GGG,HHH,-AEDX,-BDX,PPP,EIGCRT,PBAR,PBARF,
     1           NXBAR,NXBARF,TBAR,TBARF,CUBIK,QUAD,FLIN,CONST)
C
C  solve the cubic equation for the lowest positive real root:
C
C BEG MAR 1997
C     CALL CUBIC(CONST,FLIN,QUAD,CUBIK,EIGV2)
      CALL CUBIC(CONST,FLIN,QUAD,CUBIK,EIGV2,
     1           IDESGN,ICUBIC,JCUBIC,IFINAL,NPRNT,INDX)
C END MAR 1997
C BEG MAR 1998
      IF (IFINAL.EQ.1.AND.NPRNT.EQ.INDX)
     1   WRITE(8,'(A,/,1P,5E12.4)')' CONST,FLIN,QUAD,CUBIK,EIGV2=',
     1                               CONST,FLIN,QUAD,CUBIK,EIGV2
C END MAR 1998
      EIGV1 = MIN(EIGV1,EIGV2)
C
      EIGV3 = EIGV1
C BEG MAR 1998
      IF (WCRIT0.EQ.1.0) THEN
C END MAR 1998
C
C  THE FOLLOWING ARE NEEDED FOR THE EVALUATION OF THE COEFFICIENT "A2"
C  IN EQ. (E.41) in the 1992 Arbocz report. THESE ARE NOT GIVEN IN THE
C  ARBOCZ REPORT. CHECK WITH JOHANN FOR CORRECTNESS.
C
         GEBMPN = BSBAR(2,1)*AIPM4 
     1                  +(BSBAR(1,1)+BSBAR(2,2)-2.*BSBAR(3,3))*AIPM2*B2
     1                  +BSBAR(1,2)*B4
         GOBMPN = (2.*BSBAR(2,3)-BSBAR(3,1))*AIPM3*B1
     1                  +(2.*BSBAR(1,3)-BSBAR(3,2))*AIPM1*B3
         GEBPPN = BSBAR(2,1)*AIPP4 
     1                  +(BSBAR(1,1)+BSBAR(2,2)-2.*BSBAR(3,3))*AIPP2*B2
     1                  +BSBAR(1,2)*B4
         GOBPPN = (2.*BSBAR(2,3)-BSBAR(3,1))*AIPP3*B1
     1                  +(2.*BSBAR(1,3)-BSBAR(3,2))*AIPP1*B3
C
         T3IMPN = GEBMPN - GOBMPN + AIPM2
         T4IPPN = GEBPPN + GOBPPN + AIPP2
C
C  The coefficient "A2" in Eq.(E.41):
         AAA2= 0.5*CC*ALPHA2*B2*(T4IPPN/T6IPPN +T3IMPN/T5IMPN
     1                                     +T3MN/T5MN +T4PN/T6PN)
C
C  The following is for evaluation of buckling of axisymmetrically
C  imperfect cylindrical shell from Eq. (E.15) rather than Eq. (3.61)
C
C  Oddness operator:
         THETAI = 1.0
         I = WCRIT
         IMOD = MOD(I,2)
         IF (IMOD.EQ.0) THETAI = 0.0
C
C  New coefficients AEDX and BDX for sinusoidal axisymmetric imperf:
C
         AEDX = 0.
         BDX  = 0.
         IF (THETAI.GT.0.0) THEN
            AEDX = 2.*XIBAR*EIGCRT*(AAA/(WCRIT-2.*M) +AAA2/(WCRIT+2.*M)
     1                              -(AAA+AAA2)/WCRIT)/PI
            BDX =  2.*XIBAR*BBB*(1./(WCRIT-2.*M) +1./(WCRIT+2.*M)
     1                              -2./WCRIT)/PI
         ENDIF
C
C  get the coefficients of the cubic polynomial for the buckling
C  load factor, EIGVAL (see Eqs.(E.15 and 3.61)):
C
         CALL EQ361(EEE,FFF,GGG,HHH,AEDX,BDX,PPP,EIGCRT,PBAR,PBARF,
     1              NXBAR,NXBARF,TBAR,TBARF,CUBIK,QUAD,FLIN,CONST)
C
C  solve the cubic equation for the lowest positive real root:
C
C BEG MAR 1997
C        CALL CUBIC(CONST,FLIN,QUAD,CUBIK,EIGV3)
         CALL CUBIC(CONST,FLIN,QUAD,CUBIK,EIGV3,
     1           IDESGN,ICUBIC,JCUBIC,IFINAL,NPRNT,INDX)
C END MAR 1997
C BEG MAR 1998
      IF (IFINAL.EQ.1.AND.NPRNT.EQ.INDX)
     1   WRITE(8,'(A,/,1P,5E12.4)')' CONST,FLIN,QUAD,CUBIK,EIGV3=',
     1                               CONST,FLIN,QUAD,CUBIK,EIGV3
C END MAR 1998
C
C  Again, the prediction is sensitive to the sign of the imperfection,
C  XIBAR. As before, only the terms AEDX and BDX are affected, and these
C  terms change sign only.
C
         CALL EQ361(EEE,FFF,GGG,HHH,-AEDX,-BDX,PPP,EIGCRT,PBAR,PBARF,
     1              NXBAR,NXBARF,TBAR,TBARF,CUBIK,QUAD,FLIN,CONST)
C
C  solve the cubic equation for the lowest positive real root:
C
C BEG MAR 1997
C        CALL CUBIC(CONST,FLIN,QUAD,CUBIK,EIGV4)
         CALL CUBIC(CONST,FLIN,QUAD,CUBIK,EIGV4,
     1           IDESGN,ICUBIC,JCUBIC,IFINAL,NPRNT,INDX)
C END MAR 1997
C BEG MAR 1998
      IF (IFINAL.EQ.1.AND.NPRNT.EQ.INDX)
     1   WRITE(8,'(A,/,1P,5E12.4)')' CONST,FLIN,QUAD,CUBIK,EIGV4=',
     1                               CONST,FLIN,QUAD,CUBIK,EIGV4
C END MAR 1998
C
         EIGV3 = MIN(EIGV3,EIGV4)
C
C        IF (NPRNT.EQ.INDX) WRITE(8,*)' EIGV1,EIGV3=',EIGV1,EIGV3
      ENDIF
C
      EIGVAL = MIN(EIGV1,EIGV3)
C
C BEG APR 1998
      IFINAL = IFINLS
C END APR 1998
      RETURN
      END
C
C
C
C=DECK      EQ361
      SUBROUTINE EQ361(E,F,G,H,A,B,P,EA,PV,PF,NX,NXF,T,TF,
     1                 CUBIK,QUAD,FLIN,CONST)
C
C  PURPOSE IS TO DERIVE THE COEFFICIENTS OF THE CUBIC POLYNOMIAL
C  IN ARBOCZ'S EQ(3.61).
C
      REAL NX,NXF
      DOUBLE PRECISION CONST,FLIN,QUAD,CUBIK
      DOUBLE PRECISION E,F,G,H,A,B,P
      DOUBLE PRECISION C1,C2,C3,C4,C5,EAN
C
      EAN = EA - NXF
      C1 = E + NXF*F + PF*G + TF*H
      C2 = A*EAN + B*NXF*EAN + P
      C3 = NX*F + PV*G +T*H
      C4 = B*NX*EAN - A*NX - B*NX*NXF
      C5 = -B*NX**2
C
      CONST  = C1*EAN**2 + C2
      FLIN   = C3*EAN**2 -2.*C1*EAN*NX + C4
      QUAD   = C1*NX**2  -2.*C3*EAN*NX + C5
      CUBIK  = C3*NX**2
C
      RETURN
      END
C
C
C
C=DECK      MINMA  
      SUBROUTINE MINMA(IFILE,IDESGN,INDX,XIBAR,C,CC,WCRIT,ALPHA2,MBAR,
     1  L,NBAR,NPRNT,CIRC,R,SRT2C,ASBAR,BSBAR,DSBAR,EIGCRT,PBAR,PBARF,
C BEG MAR 1997
     1  NXBAR,NXBARF,TBAR,TBARF,CSLOPE,ISHEAR,IBAL,EIGVAL,
     1  ICUBIC,JCUBIC,MNCHEK,EIGCHK,CSLCHK)
C END MAR 1997
C     
C     PURPOSE IS TO FIND CRITICAL NUMBER OF HALFWAVES M IN THE AXIAL    
C     DIRECTION.  
C     
C        MBAR = M = NUMBER OF AXIAL HALF-WAVES  
C      EIGVAL = CURRENT VALUE OF EIGENVALUE.    
C     
C BEG FEB 1996
      COMMON/IRESTX/IRESTY
C END FEB 1996
C BEG MAR 1998
      DIMENSION MNCHEK(50,10),CSLCHK(50,10),EIGCHK(50,10)
C END MAR 1998
      COMMON/MMAXWV/MMAX
      DIMENSION C(6,6),ASBAR(3,3),BSBAR(3,3),DSBAR(3,3)
      REAL L,NXBAR,NXBARF,MBAR,NBAR,MBARS,MBARP,MBARM
C
C     IF (NPRNT.EQ.INDX) THEN
C        WRITE(IFILE,*)' UPON ENTERING SUBROUTINE MINMA...'
C        WRITE(IFILE,*)' EIGVAL,MBAR,NBAR  =',EIGVAL,MBAR,NBAR
C        WRITE(IFILE,*)' IBAL,ISHEAR       =',IBAL,ISHEAR
C        WRITE(IFILE,*)' L,CIRC,R          =',L,CIRC,R
C        WRITE(IFILE,*)' NXBAR,PBAR,TBAR   =',NXBAR,PBAR,TBAR
C        WRITE(IFILE,*)' NXBARF,PBARF,TBARF=',NXBARF,PBARF,TBARF
C     ENDIF
      EIGVM = 2.*EIGVAL 
      MBARS = MBAR
      M = MBAR    
      IPRCNT = 0.1*MBAR
      PRCNTM = IPRCNT
      PRCNTM = AMAX1(1.0, PRCNTM)
      SLOPE = CSLOPE    
      MBARP = MBAR + PRCNTM   
C
C BEG APR 1998
      IF (IDESGN.EQ.0) SLOPE = 0.0
C END APR 1998
C BEG APR 1998
      IFINAL = 0
      IFINAX = 0
C END APR 1998
      CALL EIGARB(IFILE,IDESGN,INDX,XIBAR,C,CC,WCRIT,ALPHA2,MBARP,L,
     1   NBAR,NPRNT,CIRC,R,SRT2C,ASBAR,BSBAR,DSBAR,EIGCRT,PBAR,PBARF,
C BEG MAR 1997
     1   NXBAR,NXBARF,TBAR,TBARF,SLOPE,ISHEAR,IBAL,EIGVP,
C BEG APR 1998
     1    IFINAL,ICUBIC,JCUBIC,IFINAX)
C END APR 1998
C END MAR 1997
C BEG MAR 1998
      I = MBARP
      J = NBAR
C BEG MAY 1998
C BEG OCT 2001
      IF (J.GT.0.AND.I.LE.50.AND.J.LE.10.AND.I.GT.0) THEN
C END OCT 2001
       IF (MNCHEK(I,J).EQ.0) THEN
         MNCHEK(I,J) = 1
         EIGCHK(I,J) = EIGVP
         CSLCHK(I,J) = SLOPE
       ENDIF
      ENDIF
C END MAY 1998
C END MAR 1998
C BEG FEB 1996
      IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
C
      IF (EIGVP.GT.EIGVAL) GO TO 10 
      INCR =  PRCNTM     
      SINCR = 1.0 
      FINCR = INCR
      EIGVAL = EIGVP    
      CSLOPE = SLOPE    
C     
      GO TO 30    
   10 CONTINUE    
      IF (M.EQ.1) GO TO 100
      SLOPE = CSLOPE    
      MBARM = MBAR - PRCNTM   
C BEG FEB 1996
      IF (M.GT.1) THEN
C BEG APR 1998
         IF (IDESGN.EQ.0) SLOPE = 0.0
C END APR 1998
C BEG APR 1998
      IFINAL = 0
      IFINAX = 0
C END APR 1998
       CALL EIGARB(IFILE,IDESGN,INDX,XIBAR,C,CC,WCRIT,ALPHA2,MBARM,L,
     1   NBAR,NPRNT,CIRC,R,SRT2C,ASBAR,BSBAR,DSBAR,EIGCRT,PBAR,PBARF,
C BEG MAR 1997
     1   NXBAR,NXBARF,TBAR,TBARF,SLOPE,ISHEAR,IBAL,EIGVM,
C BEG APR 1998
     1    IFINAL,ICUBIC,JCUBIC,IFINAX)
C END APR 1998
C END MAR 1997
C BEG MAR 1998
       I = MBARM
       J = NBAR
C BEG MAY 1998
C BEG OCT 2001
       IF (J.GT.0.AND.I.LE.50.AND.J.LE.10.AND.I.GT.0) THEN
C END OCT 2001
        IF (MNCHEK(I,J).EQ.0) THEN
          MNCHEK(I,J) = 1
          EIGCHK(I,J) = EIGVM
          CSLCHK(I,J) = SLOPE
        ENDIF
       ENDIF
C END MAY 1998
C END MAR 1998
       IF (IRESTY.EQ.1) GO TO 2222
      ENDIF
C END FEB 1996
C
      IF (EIGVM.GT.EIGVAL.OR.M.LE.1) GO TO 100  
      INCR =  -PRCNTM    
      SINCR = -1.0
      FINCR = INCR
      EIGVAL = EIGVM    
      CSLOPE = SLOPE    
C  
C BEG APR 1998
   30 CONTINUE   
      KOUNT = 0
      MBAR = MBAR + FINCR     
   35 CONTINUE
      KOUNT = KOUNT + 1
      MBARS = MBAR
C END APR 1998
      MBAR = MBAR + FINCR     
      M = MBAR    
      IF (M.LE.1) GO TO 100   
C BEG SEP 1995
C     IF (M.GT.MMAX.AND.EIGVAL.EQ.10.E16) GO TO 100   
      IF (M.GT.MMAX) GO TO 100
C END SEP 1995
C     
      SLOPE = CSLOPE    
C BEG MAR 1998
      IF (IDESGN.EQ.0) THEN
         IF (MBAR.LT.3.) SLOPE = 0.0
C BEG APR 1998
         MMOD = MOD(KOUNT,3)
         IF (MMOD.EQ.0) SLOPE = 0.
C END APR 1998
      ENDIF
C END MAR 1998
C
C BEG APR 1998
      IFINAL = 0
      IFINAX = 0
C END APR 1998
      CALL EIGARB(IFILE,IDESGN,INDX,XIBAR,C,CC,WCRIT,ALPHA2,MBAR,L,
     1   NBAR,NPRNT,CIRC,R,SRT2C,ASBAR,BSBAR,DSBAR,EIGCRT,PBAR,PBARF,
C BEG MAR 1997
     1   NXBAR,NXBARF,TBAR,TBARF,SLOPE,ISHEAR,IBAL,EIGV,
C BEG APR 1998
     1    IFINAL,ICUBIC,JCUBIC,IFINAX)
C END APR 1998
C END MAR 1997
C BEG MAR 1998
      I = MBAR
      J = NBAR
C BEG MAY 1998
C BEG OCT 2001
      IF (J.GT.0.AND.I.LE.50.AND.J.LE.10.AND.I.GT.0) THEN
C END OCT 2001
       IF (MNCHEK(I,J).EQ.0) THEN
         MNCHEK(I,J) = 1
         EIGCHK(I,J) = EIGV
         CSLCHK(I,J) = SLOPE
       ENDIF
      ENDIF
C END MAY 1998
C END MAR 1998
C BEG FEB 1996
      IF (IRESTY.EQ.1) GO TO 2222
C END FEB 1996
C
      IF (EIGV.GT.EIGVAL) GO TO 100 
      PRCNTM = 0.1*MBAR 
      INCR =(1.0 + PRCNTM)*SINCR    
      FINCR = INCR
      EIGVAL = EIGV     
      CSLOPE = SLOPE    
      GO TO 35    
C     
  100 CONTINUE    
      MBAR = MBARS
C BEG FEB 1996
 2222 CONTINUE
C END FEB 1996
      RETURN
      END   

