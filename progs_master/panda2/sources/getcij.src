C=DECK      GETCIJ
      SUBROUTINE GETCIJ(INTEXT,IPRINT,IFILE,ISTIF,B,B2,H,W,W2,
     1                  CX,CY,CS,ZPARTX,ZPARTY,THERMX,THERMY,THERMS,
     1                  GTX,GTY,GTS,TEFF,CSINV,ETHRMX,ETHRMY,
     1                  ICOCUR,ETHERM,CRACK,IFILE4,IPROMP,IOUT,
C BEG 26 JAN 1989
     1                  NPRT,NSEG,F,G,CSN,CSWIDE,CSREDU,TBASE,IMOD,
     1                  TEMP,FMULT,THSMRX,THSMRY,ETSMRX,ETSMRY,IBPRE,
C BEG JULY 1989
     1                  IQUICK,NNODES,IMTEMP,FSLOC,WIMPG,P,FSGEN)
C END JULY 1989
C END 26 JAN 1989
C
C PURPOSE IS TO CALCULATE CONSTITUTIVE MATRICES CX(i,j,k), CY(i,j,k),
C AND  CS(i,j) FOR UNIQUE SEGMENTS IN SKIN-STRINGER MODULE (CX), UNIQUE
C SEGMENTS IN SKIN-RING MODULE (CY), AND SKIN-SMEARED STIFFENER (CS).
C
C ALSO (AUGUST 1984) CALCULATE EFFECTIVE TRANSVERSE SHEAR STIFFNESSES
C GTX(2,k), GTY(2,k), AND GTS(2), WHERE "X", "Y", AND "S" HAVE THE
C SAME MEANING AS FOR CX, CY, AND CS.
C
C ALSO (SEPT. 1984) CALCULATE THERMAL RESIDUAL STRAINS AND CHANGES IN
C CURVATURE ETHRMX(6,5), ETHRMY(6,5)ETHERM(6) WHERE "X", "Y", AND "S"
C HAVE THE SAME MEANING AS FOR CX, CY, AND CS.
C
C ALSO (SEPT 30, 1986) GET CBOSOR FOR USE IN KNOCKDOWN FACTOR GENERATION.
C
C BEG APR 2007
      COMMON/IBPRSX/IBPRES
C END APR 2007
C BEG MAR 2007
      COMMON/ECCRRR/ECCARR(4),EIEFF,FNCRIT,ECCN,WIDKNK
      COMMON/IZSTIX/IZSTIF(2)
      COMMON/GNNSTB/EIGGEN,EIGLOC,EIGTST,FBOUND,LENMOD
      REAL LENMOD
C END MAR 2007
C BEG AUG 1998
      COMMON/STFSTF/STFL1,STFL2,STFM1,STFM2,STMM1,STMM2,STORS1,STORS2
C END AUG 1998
C BEG APR 1996
      COMMON/GEOM6/IFAY(2),ITRTOT,IRESET,NLOADS,NSTEPS,WMAXXX,NCROSS,
     1       NOPLOT,KMAX,ILAYPL,XMAX,XMIN,YMAX,YMIN,N3DPLT,NOBJ,NSTRNS,
     1       NPLTST,NABSCI,IDIAG,ITRALL,IFAYT(2),IBEAM,IMISCL(5)
C END APR 1996
C BEG JUN 1996
      COMMON/ETCRXX/ETCURX(6),THCURX(6,5)
C BEG OCT 1996
      COMMON/UNBALX/UNBAL(4,2),DBEND1(4,2),DBEND2(4,2)
C END OCT 1996
C END JUN 1996
C BEG JULY 1996
      COMMON/GEOM0/B0(2),B20(2),H0(2),W0(2),W20(2)
C END JULY 1996
      COMMON/NEUTRL/DNEUTX,DNEUTY,DSURF
      COMMON/GEOM1/AXIAL,CIRC,R
      COMMON/THICK/TX(5),TY(5)
C BEG OCT 2001 (change common block name because of same variable name
      COMMON/CBOSRX/CXB(6,6,5),CYB(6,6),CSB(6,6),CSWB(6,6),CSRB(6,6)
C END OCT 2001
      COMMON/SEGS/NSEGB5,M2,I5(95),I2,I2G
      COMMON/TANSTF/C11TAN(23,8),C12TAN(23,8),C22TAN(23,8),C33TAN(23,8)
C BEG JAN 1991
      COMMON/OPTPRT/IPRTOP
C END JAN 1991
C BEG AUG 1991
      COMMON/ISKNRD/IEFFSK
C END AUG 1991
      DIMENSION ISTIF(*),B(*),B2(*),H(*),W(*),W2(*),INTEXT(*),THERMS(*)
      DIMENSION NSEG(*),F(5,2,5),G(5,2,5),CSN(6,6)
      DIMENSION CX(6,6,5),CY(6,6,5),CS(6,6),THERMX(6,5),THERMY(6,5)
      DIMENSION CSINV(6,6),ETHRMX(6,5),ETHRMY(6,5),DUMMY(6)
      DIMENSION GTX(2,5),GTY(2,5), GTS(2),TEFF(2),CRACK(99,5,2)
      DIMENSION ZPARTX(*),ZPARTY(*),TBASE(2)
      DIMENSION ICOCUR(*),ETHERM(*)
      DIMENSION CSWIDE(6,6),FDUM(5,2,5),GDUM(5,2,5),THMDUM(6),GTDUM(2)
      DIMENSION ETHDUM(6),TEFDUM(2),ZXDUM(10),ZYDUM(10),CXDUM(6,6,5)
C BEG JAN 1995
      DIMENSION BDUM(2),CSDUM(6,6)
C BEG DEC 2000
      DIMENSION TYTEMP(5)
C END DEC 2000
C BEG FEB 1999
      COMMON/EFFWID/BLLN,ETHOOP,ETHALL
C END FEB 1999
C END JAN 1995
      DIMENSION CSREDU(6,6)
C
C BEG 26 JAN 1989
      DIMENSION THSMRX(6,5),THSMRY(6,5),ETSMRX(6,5),ETSMRY(6,5)
C BEG NOV 1992
      DIMENSION TEMP(4,2),FMULT(20,10,4,2)
C END NOV 1992
C BEG  1 MAY 1989
      COMMON/CWEBFL/CXWEB,CXFLNG,CYWEB,CYFLNG
C END  1 MAY 1989
C BEG JULY 1989
      COMMON/LWRUPR/VLB(50),VUB(50),CLINK(50,5),VLINK(50),VBV(99)
      COMMON/OPTVAR/IDV(50),ILV(50),IDLINK(50,5),IEV(50),JTERMS(50)
      COMMON/ADDRSS/IADDV(50),IADDP(99),IADDA(50),IADDC(99),IADDD(50)
      COMMON/NUMPAR/IPAR,NVAR,IALLOW,ICONST,NDEC,NLINK,NESCAP,ITYPE
      COMMON/PARAMS/PAR(99),VAR(50),ALLOW(50),CONST(99),DEC(50),ESC(50)
      COMMON/WORDS/WORDP(99),WORDV(50),WORDA(50),WORDC(99),WORDD(50)
C BEG AUG 1992
      COMMON/EDGCON/PEDG
      LOGICAL PEDG
      COMMON/ISOGR/ISOGRD,ISOANG
      DIMENSION ETSMDM(6,5),THSMDM(6,5),CYDUM(6,6,5),THDUMY(6,5)
      DIMENSION GTXDUM(2,5),GTYDUM(2,5)
C END AUG 1992
C BEG NOV 1992
C BEG JUN 1996
      DIMENSION THCURY(6,5),THSMR3(6,5)
C END JUN 1996
C BEG FEB 2004
      COMMON/ISBSTF/KLAYER(4,2),NSURF(2,4,2),NB2(2,4,2),
     1              ISOSUB(2,4,2),ISOTYP(2,4,2),MATSUB(2,4,2)
      COMMON/SUBSPC/SPCNG(2,4,2),CX0(6,6,5),CY0(6,6,5),
     1    THRMX0(6,5),THRMY0(6,5),TCURX0(6,5),TCURY0(6,5),
     1    TX0(5),TY0(5),GTX0(2,5),GTY0(2,5),TXX(2,5),TYY(2,5),
     1    GTSSUB(2,5)
C END FEB 2004
C BEG OCT 2004
      COMMON/CSKINX/CSKIN(6,6),TSKINX(5),TSKINY(5)
C END OCT 2004
C BEG FEB 2005
      COMMON/CSORIG/CS0(6,6)
C END FEB 2005
      COMMON/ICODIX/ICODIF(2)
      LOGICAL ICODIF,ICO12,ITHDIF,ITHCUR
C END NOV 1992
      CHARACTER*80 WORDP,WORDV,WORDA,WORDC,WORDD
C END JULY 1989
C END 26 JAN 1989
C BEG JUN 2004
C     IF (NPRT.GE.2) WRITE(8,'(A,1P,2E12.4)')
C    1' ENTERING GETCIJ: B2(1),B2(2) =', B2(1),B2(2)
C END JUN 2004
      IPCIJ = 0
C BEG JAN 1991
      IF (IPRINT.GT.0.OR.NPRT.GE.2.OR.IPRTOP.EQ.1) IPCIJ = 1
C END JAN 1991
      REWIND IFILE4
C     IF (IPRINT.GT.0)
C    1 CALL DATUM(IFILE4,12,0,0,INT,REALL,CHARAC,IOUT,0,IPROMP)
C
C****************************************************************
C BEGIN CALCULATION OF 6X6 INTEGRATED CONSTITUTIVE MATRIX C(i,j)
C FOR EACH SEGMENT OF THE SKIN-STRINGER MODULE AND SKIN-RING MODULE.
C****************************************************************
C
C BEG NOV 1992
C BEG NOV 1992
      ICODIF(1) = .FALSE.
      ICODIF(2) = .FALSE.
      CALL MOVER(0.,0,THSMR3,1,30)
      CALL MOVER(0.,0,THCURX,1,30)
      CALL MOVER(0.,0,THCURY,1,30)
      CALL MOVER(0.,0,THERMX,1,30)
      CALL MOVER(0.,0,THERMY,1,30)
      CALL MOVER(0.,0,THSMRX,1,30)
      CALL MOVER(0.,0,THSMRY,1,30)
C BEG JUN 1996
      CALL MOVER(0.,0,ETCURX,1,6)
      CALL MOVER(0.,0,UNBAL,1,8)
C BEG OCT 1996
      CALL MOVER(0.,0,DBEND1,1,8)
      CALL MOVER(0.,0,DBEND2,1,8)
C END OCT 1996
C END JUN 1996
C END NOV 1992
C BEG FEB 2004
      CALL MOVER(0.,0,CX0,1,180)
      CALL MOVER(0.,0,CY0,1,180)
      CALL MOVER(0.,0,THRMX0,1,30)
      CALL MOVER(0.,0,THRMY0,1,30)
      CALL MOVER(0.,0,TCURX0,1,30)
      CALL MOVER(0.,0,TCURY0,1,30)
C END FEB 2004
      CALL SEGCIJ(IPCIJ,IFILE,CX,CY,THERMX,THERMY,TBASE,GTX,GTY,
     1   ETHRMX,ETHRMY,CSINV,CRACK,IPRINT,IFILE4,IOUT,IPROMP,IMOD,
     1   TEMP,FMULT,THSMRX,THSMRY,ETSMRX,ETSMRY,NNODES,IMTEMP,B2(2),
C BEG FEB 2004
     1   THCURX,THCURY,B,H,W,W2,CX0,CY0,THRMX0,THRMY0,
     1   TCURX0,TCURY0,KLAYER,SPCNG,B2,TX0,TY0,TXX,TYY,GTX0,GTY0,
     1   GTSSUB)
C END FEB 2004
C END NOV 1992
C BEG APR 2007
C     IF (NPRT.GE.2) THEN
C        WRITE(8,'(A)')
C    1 ' Just after CALL SEGCIJ(IFILE,1,B,...: CX0(1,1,1)='
C        CALL OUTCIJ(0,1,8,CX0(1,1,1),TXDUM,EHXDUM)
C        WRITE(8,'(A)')' CX0(1,1,2)='
C        CALL OUTCIJ(0,1,8,CX0(1,1,2),TXDUM,EHXDUM)
C        WRITE(8,'(A)')' CX0(1,1,3)='
C        CALL OUTCIJ(0,1,8,CX0(1,1,3),TXDUM,EHXDUM)
C     ENDIF
C END APR 2007
C BEG OCT 2004
      CALL MOVER(CX0,1,CSKIN,1,36)
      CALL MOVER(TX0,1,TSKINX,1,5)
      CALL MOVER(TY0,1,TSKINY,1,5)
C END OCT 2004
C BEG  1 MAY 1989
      CXWEB = CX(1,1,3)
      CXFLNG= CX(1,1,4)
      CYWEB = CY(1,1,3)
      CYFLNG= CY(1,1,4)
C END 26 JAN 1989
C
C BEG JULY 1989
      IF (ISTIF(1).EQ.5) THEN
         CXWEB = CX(1,1,2)
         CXFLNG= CX(1,1,3)
      ENDIF
      IF (ISTIF(2).EQ.5) THEN
         CYWEB = CY(1,1,2)
         CYFLNG= CY(1,1,3)
      ENDIF
C END JULY 1989
C
      CALL MOVER(0.,0,F,1,50)
      CALL MOVER(0.,0,G,1,50)
      F(2,1,4) = 1.
      F(3,2,4) = 1.
      G(4,1,4) = 1.
      G(5,2,4) = 1.
      CALL MOVER(F(1,1,4),1,F(1,1,5),1,10)
      CALL MOVER(G(1,1,4),1,G(1,1,5),1,10)
      CALL MOVER(THERMX,1,THERMS,1,6)
      CALL MOVER(ETHRMX,1,ETHERM,1,6)
      CALL MOVER(CX,1,CS,1,36)
C BEG JUN 1996
C23456789012345678901234567890123456789012345678901234567890123456789012
      CALL MOVER(THCURX,1,THCURX(1,5),1,6)
C BEG FEB 1999
C     IF (PEDG.AND.ISTIF(1).EQ.0.AND.ISTIF(2).EQ.0) THEN
      IF (PEDG.AND.ISTIF(1).EQ.0) THEN
C END FEB 1999
         CALL STRTHM(1,1,ETCURX,CS,CSINV,THCURX(1,5))
         CALL ETHMOD(CS,ETCURX,THCURX(1,5),1)
      ENDIF
C     WRITE(8,*)' THCURX=',THCURX(1,1),THCURX(2,1)
C     WRITE(8,*)' ETCURX=',ETCURX(1),ETCURX(2)
C END JUN 1996
C
C  APRIL, 1986 WIDE COL. WITH "ZERO SKIN" MOD...
      CALL MOVER(CX,1,CSWIDE,1,36)
      CALL MOVER(CX,1,CSREDU,1,36)
      CALL MOVER(CX,1,CXDUM,1,180)
C BEG 26 JAN 1989
C BEG JUNE 1990
C     FREDUC = 0.3
C END JUNE 1990
C BEG JUNE 1991
      FREDUC = 0.5
C END JUNE 1991
C BEG APR 1996
      IF (ISTIF(1).EQ.5.AND.B2(1).GT.0.)
     1   FREDUC = FREDUC + 0.5*B2(1)/B(1)
C END APR 1996
C BEG AUG 1991
C BEG AUG 1993  (FOLLOWING STATEMENT COMMENTED OUT)
C     IF (IEFFSK.EQ.0) FREDUC = 1.0
C END AUG 1993
C END AUG 1991
C BEG APRIL 1990
C  FOLLOWING STATEMENT COMMENTED OUT...
C     IF (FSLOC.GE.1.0) FREDUC = 1.
C END APRIL 1990
      K = 1
C BEG JULY 1991
      KUP = 2
      IF (ISTIF(1).EQ.0) KUP = 1
      IF (ISTIF(1).EQ.5) THEN
         IF (TEMP(1,1).GT.TEMP(3,1)) K = 3
         IF (WIMPG.GT.0.0) K = 3
         IF (WIMPG.LT.0.0) K = 1
         IF (P.GT.0.0) K = 3
         IF (P.LT.0.0) K = 1
         KUP = 1
      ENDIF
      IBACK = 0
    4 CONTINUE
      DO 5 I = 1,6
      DO 5 J = 1,6
    5 CXDUM(I,J,K) = FREDUC*CX(I,J,K)
C BEG AUG 1991
      IF (FREDUC.LT.0.999) THEN
         CXDUM(4,4,K) = CX(4,4,K)
         CXDUM(5,5,K) = CX(5,5,K)
         CXDUM(6,6,K) = CX(6,6,K)
         CXDUM(1,2,K) = 0.
         CXDUM(2,1,K) = 0.
         CXDUM(1,3,K) = 0.
         CXDUM(2,3,K) = 0.
         CXDUM(3,1,K) = 0.
         CXDUM(3,2,K) = 0.
      ENDIF
C END AUG 1991
      IF (KUP.EQ.2.AND.IBACK.EQ.0) THEN
         IBACK = 1
         K = 2
         GO TO 4
      ENDIF
C END JULY 1991
      CALL MOVER(F,1,FDUM,1,50)
      CALL MOVER(G,1,GDUM,1,50)
C  END APRIL, 1986 WIDE COL. MOD
C
      IF (ISTIF(1).EQ.0) THEN
         CALL MOVER(CX,1,CX(1,1,2),1,36)
         CALL MOVER(THERMX,1,THERMX(1,2),1,6)
         CALL MOVER(THSMRX,1,THSMRX(1,2),1,6)
      ENDIF
C BEG MARCH 1990
      CALL CGCIJP(CX(1,1,1),CY(1,1,1))
      THERMY(1,1) = THERMX(2,1)
      THERMY(2,1) = THERMX(1,1)
      THERMY(3,1) =-THERMX(3,1)
      THERMY(4,1) = THERMX(5,1)
      THERMY(5,1) = THERMX(4,1)
      THERMY(6,1) =-THERMX(6,1)
C BEG NOV 1992
      THCURY(1,1) = THCURX(2,1)
      THCURY(2,1) = THCURX(1,1)
      THCURY(3,1) =-THCURX(3,1)
      THCURY(4,1) = THCURX(5,1)
      THCURY(5,1) = THCURX(4,1)
      THCURY(6,1) =-THCURX(6,1)
C
C  OLD STATEMENTS...
C     THSMRY(1,1) = THSMRX(2,1)
C     THSMRY(2,1) = THSMRX(1,1)
C     THSMRY(3,1) =-THSMRX(3,1)
C     THSMRY(4,1) = THSMRX(5,1)
C     THSMRY(5,1) = THSMRX(4,1)
C     THSMRY(6,1) =-THSMRX(6,1)
C
C  NEW STATEMENTS...
      COCUR2 = ICOCUR(2)
      THSMRY(1,1) = THERMX(2,1) -(1.-COCUR2)*THCURY(1,1)
      THSMRY(2,1) = THERMX(1,1) -(1.-COCUR2)*THCURY(2,1)
      THSMRY(3,1) =-THERMX(3,1) -(1.-COCUR2)*THCURY(3,1)
      THSMRY(4,1) = THERMX(5,1) -(1.-COCUR2)*THCURY(4,1)
      THSMRY(5,1) = THERMX(4,1) -(1.-COCUR2)*THCURY(5,1)
      THSMRY(6,1) =-THERMX(6,1) -(1.-COCUR2)*THCURY(6,1)
C END NOV 1992
C
      GTY(1,1)= GTX(2,1)
      GTY(2,1)= GTX(1,1)
C BEG JUN 1996
      UNBAL(1,2) = UNBAL(1,1)
C END JUN 1996
C BEG OCT 1996
      DBEND1(1,2) = DBEND1(1,1)
      DBEND2(1,2) = DBEND2(1,1)
C END OCT 1996
C
      IF (ISTIF(2).EQ.0.OR.B2(2).EQ.0.) THEN
         CALL CGCIJP(CX(1,1,1),CY(1,1,2))
         THERMY(1,2) = THERMX(2,1)
         THERMY(2,2) = THERMX(1,1)
         THERMY(3,2) =-THERMX(3,1)
         THERMY(4,2) = THERMX(5,1)
         THERMY(5,2) = THERMX(4,1)
         THERMY(6,2) =-THERMX(6,1)
C BEG NOV 1992
         THCURY(1,2) = THCURX(2,1)
         THCURY(2,2) = THCURX(1,1)
         THCURY(3,2) =-THCURX(3,1)
         THCURY(4,2) = THCURX(5,1)
         THCURY(5,2) = THCURX(4,1)
         THCURY(6,2) =-THCURX(6,1)
C
C  OLD STATEMENTS...
C        THSMRY(1,2) = THSMRX(2,1)
C        THSMRY(2,2) = THSMRX(1,1)
C        THSMRY(3,2) =-THSMRX(3,1)
C        THSMRY(4,2) = THSMRX(5,1)
C        THSMRY(5,2) = THSMRX(4,1)
C        THSMRY(6,2) =-THSMRX(6,1)
C
C  NEW STATEMENTS...
         COCUR2 = ICOCUR(2)
         THSMRY(1,2) = THERMX(2,1) -(1.-COCUR2)*THCURY(1,2)
         THSMRY(2,2) = THERMX(1,1) -(1.-COCUR2)*THCURY(2,2)
         THSMRY(3,2) =-THERMX(3,1) -(1.-COCUR2)*THCURY(3,2)
         THSMRY(4,2) = THERMX(5,1) -(1.-COCUR2)*THCURY(4,2)
         THSMRY(5,2) = THERMX(4,1) -(1.-COCUR2)*THCURY(5,2)
         THSMRY(6,2) =-THERMX(6,1) -(1.-COCUR2)*THCURY(6,2)
C END NOV 1992
C BEG JUN 1996
         UNBAL(2,2) = UNBAL(1,1)
C END JUN 1996
C BEG OCT 1996
         DBEND1(2,2) = DBEND1(1,1)
         DBEND2(2,2) = DBEND2(1,1)
C END OCT 1996
      ENDIF
C BEG JUN 1996
      IF (ISTIF(1).EQ.0) UNBAL(2,1) = UNBAL(1,1)
C BEG OCT 1996
      IF (ISTIF(1).EQ.0) DBEND1(2,1) = DBEND1(1,1)
      IF (ISTIF(1).EQ.0) DBEND2(2,1) = DBEND2(1,1)
C END OCT 1996
      IF (ISTIF(1).EQ.0.AND.ISTIF(2).NE.0) THEN
         THSMRX(1,1) = THSMRY(2,1)
         THSMRX(2,1) = THSMRY(1,1)
         THSMRX(3,1) =-THSMRY(3,1)
         THSMRX(4,1) = THSMRY(5,1)
         THSMRX(5,1) = THSMRY(4,1)
         THSMRX(6,1) =-THSMRY(6,1)
         CALL MOVER(THSMRX,1,THSMRX(1,2),1,6)
         CALL STRTHM(2,1,ETSMRX(1,1),CX(1,1,1),CSINV,THSMRX(1,1))
         CALL MOVER(ETSMRX,1,ETSMRX(1,2),1,6)
      ENDIF
      CALL STRTHM(3,1,ETSMRY(1,1),CY(1,1,1),CSINV,THSMRY(1,1))
      CALL STRTHM(4,1,ETSMRY(1,2),CY(1,1,2),CSINV,THSMRY(1,2))
C END JUN 1996
C
C     CALL MOVER(CX,1,CY,1,36)      (COMMENTED OUT MARCH 1990)
C END MARCH 1990
      TEFF(1) = TX(1)
      TEFF(2) = TX(1)
      TY(1)   = TX(1)
      GTS(1)  = GTX(1,1)
      GTS(2)  = GTX(2,1)
      GTDUM(1)=GTS(1)
      GTDUM(2)=GTS(2)
      GTX(1,5)= GTX(1,1)
      GTX(2,5)= GTX(2,1)
      GTY(1,5)= GTX(1,1)
      GTY(2,5)= GTX(2,1)
      DO 10 I = 1,6
      THERMX(I,5) = THERMX(I,1)
      THERMY(I,5) = THERMX(I,1)
      ETHRMX(I,5) = ETHRMX(I,1)
      ETHRMY(I,5) = ETHRMX(I,1)
C BEG 26 JAN 1989
      THSMRX(I,5) = THSMRX(I,1)
      THSMRY(I,5) = THSMRX(I,1)
      ETSMRX(I,5) = ETSMRX(I,1)
      ETSMRY(I,5) = ETSMRX(I,1)
C END 26 JAN 1989
      DO 10 J = 1,6
      CX(I,J,5) = CX(I,J,1)
   10 CY(I,J,5) = CX(I,J,1)
C
C****************************************************************
C END CALCULATION OF 6X6 INTEGRATED CONSTITUTIVE MATRIX C(i,j)
C FOR EACH SEGMENT OF THE SKIN-STRINGER MODULE AND SKIN-RING MODULE.
C****************************************************************
C
C  NEXT, DETERMINE WHETHER OR NOT WE SHOULD MODIFY THE OVERALL THERMAL
C  STRAIN BECAUSE ONE OF THE STIFFENER SETS IS COCURED WITH THE
C  PANEL SKIN WHILE THE OTHER IS NOT.
C
         ICO12 = ICOCUR(1).EQ.1.AND.ICOCUR(2).EQ.0
         ITHCUR= THCURX(1,1).NE.0.0.OR.THCURX(2,1).NE.0.0
     1       .OR.THCURX(1,2).NE.0.0.OR.THCURX(2,2).NE.0.0
     1       .OR.THCURX(1,3).NE.0.0.OR.THCURX(2,3).NE.0.0
     1       .OR.THCURX(1,4).NE.0.0.OR.THCURX(2,4).NE.0.0
         THNUM = SQRT((THERMY(1,1)-THCURY(1,1))**2
     1               +(THERMY(2,1)-THCURY(2,1))**2
     1               +(THERMY(1,2)-THCURY(1,2))**2
     1               +(THERMY(2,2)-THCURY(2,2))**2
     1               +(THERMY(1,3)-THCURY(1,3))**2
     1               +(THERMY(2,3)-THCURY(2,3))**2
     1               +(THERMY(1,4)-THCURY(1,4))**2
     1               +(THERMY(2,4)-THCURY(2,4))**2)
C        THDEN = SQRT(THERMY(1,1)**2 +THERMY(2,1)**2
C    1               +THERMY(1,2)**2 +THERMY(2,2)**2
C    1               +THERMY(1,3)**2 +THERMY(2,3)**2
C    1               +THERMY(1,4)**2 +THERMY(2,4)**2)
         THDEN = SQRT(THSMRY(1,1)**2 +THSMRY(2,1)**2
     1               +THSMRY(1,2)**2 +THSMRY(2,2)**2
     1               +THSMRY(1,3)**2 +THSMRY(2,3)**2
     1               +THSMRY(1,4)**2 +THSMRY(2,4)**2)
         THDIF = 0.
         IF (THDEN.GT.0.0) THDIF = THNUM/THDEN
         ITHDIF= THDIF.LT.0.5
         ICODIF(1) = ICO12.AND.ITHCUR.AND.ITHDIF
C
         ICO12 = ICOCUR(1).EQ.0.AND.ICOCUR(2).EQ.1
         ITHCUR= THCURY(1,1).NE.0.0.OR.THCURY(2,1).NE.0.0
     1       .OR.THCURY(1,2).NE.0.0.OR.THCURY(2,2).NE.0.0
     1       .OR.THCURY(1,3).NE.0.0.OR.THCURY(2,3).NE.0.0
     1       .OR.THCURY(1,4).NE.0.0.OR.THCURY(2,4).NE.0.0
         THNUM = SQRT((THERMX(1,1)-THCURX(1,1))**2
     1               +(THERMX(2,1)-THCURX(2,1))**2
     1               +(THERMX(1,2)-THCURX(1,2))**2
     1               +(THERMX(2,2)-THCURX(2,2))**2
     1               +(THERMX(1,3)-THCURX(1,3))**2
     1               +(THERMX(2,3)-THCURX(2,3))**2
     1               +(THERMX(1,4)-THCURX(1,4))**2
     1               +(THERMX(2,4)-THCURX(2,4))**2)
C        THDEN = SQRT(THERMX(1,1)**2 +THERMX(2,1)**2
C    1               +THERMX(1,2)**2 +THERMX(2,2)**2
C    1               +THERMX(1,3)**2 +THERMX(2,3)**2
C    1               +THERMX(1,4)**2 +THERMX(2,4)**2)
         THDEN = SQRT(THSMRX(1,1)**2 +THSMRX(2,1)**2
     1               +THSMRX(1,2)**2 +THSMRX(2,2)**2
     1               +THSMRX(1,3)**2 +THSMRX(2,3)**2
     1               +THSMRX(1,4)**2 +THSMRX(2,4)**2)
         THDIF = 0.
         IF (THDEN.GT.0.0) THDIF = THNUM/THDEN
         ITHDIF= THDIF.LT.0.5
         ICODIF(2) = ICO12.AND.ITHCUR.AND.ITHDIF
C        IF (IPCIJ.EQ.1.AND.IMOD.EQ.0)
C    1      WRITE(IFILE,*)' ICODIF(1),ICODIF(2)=',ICODIF(1),ICODIF(2)
C
C BEG MAR 2007
C Compute the centroid ECCN for the skin-stringer module cross section 
C and the skin-stringer bending stiffness, EIEFF
C and the buckling load per circumferential length, FNCRIT
C
      EIEFF = TX(1)**3/8. 
      IF (IMOD.EQ.0.AND.ISTIF(1).NE.5.AND.ISTIF(1).NE.0) THEN
       FN  = 1.
       CTH = 1.
       SLONG = H(1)
       FL1 = B(1) - B2(1) 
       IF (IZSTIF(1).EQ.1) FL1 = B(1)
       FL2 = B2(1)
       FL3 = H(1)
       FL4 = W(1)
       IF (ISTIF(1).EQ.4) THEN
        SLONG = SQRT(H(1)**2 + (W2(1)-W(1))**2/4.)
        FL3 = 2.*SLONG
        CTH = H(1)/SLONG
        STH = 0.5*(W2(1)-W(1))/SLONG
        FN = 2.
        IF (IFAY(1).EQ.1) THEN
           FL2 = B2(1) - W2(1)
           FL1 = B(1) - FL2
        ENDIF
       ENDIF
C
       IF (ISTIF(1).EQ.5) THEN
         BB2 = B(1) - 2.*B2(1)
         SLONG = SQRT(0.25*BB2**2 + H(1)**2)
         CTH = H(1)/SLONG
         FN = 2.
       ENDIF
C
       EAEFF1 = (CX(1,1,1) - CX(1,2,1)**2/CX(2,2,1))*FL1
       EAEFF2 = (CX(1,1,2) - CX(1,2,2)**2/CX(2,2,2))*FL2
       EAEFF3 = (CX(1,1,3) - CX(1,2,3)**2/CX(2,2,3))*FL3
       EAEFF4 = 0.
       IF (ISTIF(1).NE.3)
     1 EAEFF4 = (CX(1,1,4) - CX(1,2,4)**2/CX(2,2,4))*FL4
       EASUM  = EAEFF1 +EAEFF2 +EAEFF3 +EAEFF4
C
       ECC1 = 0.
       ECC2 = (TX(2)-TX(1))/2.
       IF (IZSTIF(1).EQ.1) ECC2 = TX(1)/2. + TX(2)/2.
       ECC3 = TX(2) - TX(1)/2.
       IF (IZSTIF(1).EQ.1) ECC3 = ECC2
       IF (ISTIF(1).EQ.4) ECC3 = TX(2)/2. 
       ECC4 = ECC3 + H(1)
       ECC3 = ECC3 + H(1)/2.
       ECCARR(1) = ECC1
       ECCARR(2) = ECC2
       ECCARR(3) = ECC3
       ECCARR(4) = ECC4
C
       ECCN =  (EAEFF1*ECC1 +EAEFF2*ECC2
     1        +EAEFF3*ECC3 +EAEFF4*ECC4)/EASUM
C
       IF (NPRT.GE.1) WRITE(IFILE,'(/,A,1P,E12.4)')
     1' Location of skin-stringer module centroid, ECCN=',ECCN
C
       C441N = CX(4,4,1) - CX(1,4,1)**2/CX(1,1,1)
       C442N = CX(4,4,2) - CX(1,4,2)**2/CX(1,1,2)
       C444N = 0.
       IF (ISTIF(1).NE.3)
     1 C444N = CX(4,4,4) - CX(1,4,4)**2/CX(1,1,4)
C
       EIEFF = (EAEFF1*(ECC1-ECCN)**2 +EAEFF2*(ECC2-ECCN)**2
     1       +EAEFF3*(ECC3-ECCN)**2 +EAEFF4*(ECC4-ECCN)**2)/B(1)
     1       + C441N + C442N + C444N
     1       +EAEFF3*(H(1)/SLONG)*H(1)**2/(8.*B(1))
C
       IF (NPRT.GE.1) WRITE(IFILE,'(A,/,A,1P,E12.4)')
     1' Effective skin-stringer module EI per length',
     1' of circumferential arc of the panel, EIEFF=',EIEFF

       FNCRIT = EIEFF*3.141592654**2/B(2)**2
       IF (NPRT.GE.1)
     1  WRITE(IFILE,'(A,/,A,1P,E12.4,/,A,/,A,/,A,/,A,1P,E12.4)')
     1' Inter-ring skin-stringer single module treated as an Euler',
     1' column: buckling load/circ.arclength, FNCRIT=',FNCRIT,
     1' Compare FNCRIT to the wide-column buckling load. That gives',
     1' you an idea what the combined knockdown factor should',
     1' be for (1) smearing the stringers, + (2) the effect of t.s.d.',
     1' The effective length of the Euler column is B(2)=',
     1  B(2)
C
      ENDIF
C  End of (IMOD.EQ.0) condition
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C
C END MAR 2007
C
C****************************************************************
C BEGIN CALCULATION OF 6X6 INTEGRATED CONSTITUTIVE MATRIX Cx(i,j,5),
C FOR PANEL WITH SMEARED STRINGERS ONLY; Cy(i,j,5) FOR SMEARED
C RINGS ONLY; and CS(i,j) FOR SMEARED STRINGERS AND RINGS.
C****************************************************************
C
C     IF (IPRINT.EQ.1)
C    1 CALL DATUM(IFILE4,14,0,0,INT,REALL,CHARAC,IOUT,0,IPROMP)
      IF (ISTIF(1).NE.0) THEN
C SMEARED STRINGERS ONLY: CX(I,J,5)
C        IF (IPRINT.EQ.1)
C    1    CALL DATUM(IFILE4,16,0,0,INT,REALL,CHARAC,IOUT,0,IPROMP)
C BEG JUN 1996
C        IF (NPRT.GE.2)
C    1      CALL OUTTHM(IFILE,1,NSEG,THSMRX,ETSMRX,THSMRY,ETSMRY)
C END JUN 1996
C BEG JUN 2004
C BEG JUN 2004
C BEG MAY 2005
C BEG APR 2007
C        IF (NPRT.GE.2) THEN
C           WRITE(8,'(A)')
C    1    ' Just before CALL SMRCIJ(IFILE,1,B,...: CX0(1,1,1)='
C           CALL OUTCIJ(0,1,8,CX0(1,1,1),TXDUM,EHXDUM)
C           WRITE(8,'(A)')' CX0(1,1,2)='
C           CALL OUTCIJ(0,1,8,CX0(1,1,2),TXDUM,EHXDUM)
C           WRITE(8,'(A)')' CX0(1,1,3)='
C           CALL OUTCIJ(0,1,8,CX0(1,1,3),TXDUM,EHXDUM)
C END APR 2007
C           WRITE(8,'(/,A)')' CY0(1,1,1)='
C           CALL OUTCIJ(0,1,8,CY0(1,1,1),TXDUM,EHXDUM)
C           WRITE(8,'(/,A)')' CY0(1,1,2)='
C           CALL OUTCIJ(0,1,8,CY0(1,1,2),TXDUM,EHXDUM)
C           WRITE(8,'(/,A)')' CY0(i,j,3)='
C           CALL OUTCIJ(0,1,8,CY0(1,1,3),TXDUM,EHXDUM)
C           WRITE(8,'(/,A)')' CY0(i,j,4)='
C           CALL OUTCIJ(0,1,8,CY0(1,1,4),TXDUM,EHXDUM)
C        ENDIF
C END MAY 2005
C
         CALL SMRCIJ(IFILE,1,B,B2,H,W,W2,NSEG,ISTIF,INTEXT,
     1             TBASE,CX0,CY0,CX(1,1,5),THSMRX,THSMRY,THERMX(1,5),
     1             ZPARTX,ZPARTY,GTX,GTY,GTX(1,5),TEFF,F(1,1,1),
     1             G(1,1,1),0,NNODES,TEMP,IMTEMP)
         IF (KLAYER(1,1).NE.0) 
     1   CALL CMBINE(NPRT,1,1,CX(1,1,1),CX0(1,1,1),CX(1,1,5))
C END JUN 2004
C BEG FEB 1999
         IF (ISOGRD.EQ.0) CALL MOVER(THERMX(1,5),1,THSMRX(1,5),1,6)
C END FEB 1999
C BEG JUN 1996
C  Compute thermal curing strain vector ETCURX if there are no rings
C  and if the panel is curved and if the stringers are cocured. We need
C  the hoop thermal curing strain ETCURX(2) in order to subtract it
C  out later in STRUCT just before SUBROUTINE SKIN is called for the
C  thermal stresses. ETCURX(2) is thus subtracted out because it is now
C  assumed in PANDA2 that the boundary conditions are applied to the
C  already cured curved panel.
C BEG FEB 1999
C        IF (PEDG.AND.ICOCUR(1).EQ.1.AND.ISTIF(2).EQ.0) THEN
         IF (PEDG.AND.ICOCUR(1).EQ.1) THEN
C END FEB 1999
C BEG JUN 2004
            CALL SMRCIJ(IFILE,1,B,B2,H,W,W2,NSEG,ISTIF,INTEXT,
     1               TBASE,CX0,CY0,CSDUM,THCURX,THCURY,THCURX(1,5),
     1               ZXDUM,ZYDUM,GTX,GTY,GTDUM,TEFDUM,FDUM(1,1,1),
     1               GDUM(1,1,1),0,NNODES,TEMP,IMTEMP)
            IF (KLAYER(1,1).NE.0)
     1      CALL CMBINE(NPRT,1,2,CX(1,1,1),CX0(1,1,1),CSDUM)
C END JUN 2004
            CALL STRTHM(5,1,ETCURX,CSDUM,CSINV,THCURX(1,5))
            CALL ETHMOD(CSDUM,ETCURX,THCURX(1,5),2)
C           WRITE(8,*)' THCURX=',THCURX(1,1),THCURX(2,1)
C           WRITE(8,*)' ETCURX=',ETCURX(1),ETCURX(2)
         ENDIF
C END JUN 1996
C
C BEG AUG 1992
         IF (ISOGRD.EQ.1) THEN
           TEFF(2) = TEFF(1)
C BEG MAR 1995
C BEG JUN 2004
           CALL ISOGRX(IFILE,CX0,CX(1,1,5),IMTEMP,NNODES,TEMP,FMULT,
     1     GTX,GTX(1,5),TX(5),ETHRMX,THERMX(1,5),ETHRMX(1,5),
     1     THSMRX(1,5),ETSMRX(1,5),1.0)
C          IF (KLAYER(1,1).NE.0)
C    1     CALL CMBINE(NPRT,1,3,CX(1,1,1),CX0(1,1,1),CX(1,1,5))
C END JUN 2004
C END MAR 1995
         ENDIF
C END AUG 1992

C        IF (IPRINT.EQ.1)
C    1   CALL DATUM(IFILE4,17,0,0,INT,REALL,CHARAC,IOUT,0,IPROMP)
C BEG AUG 1992
         IF (ISOGRD.EQ.0)
     1    CALL STRTHM(6,1,ETHRMX(1,5),CX(1,1,5),CSINV,THERMX(1,5))
C BEG NOV 1992
         IF (ISTIF(2).NE.0.OR.PEDG.OR.IBPRES.EQ.1.OR.IBPRES.EQ.2)
     1      CALL ETHMOD(CX(1,1,5),ETHRMX(1,5),THERMX(1,5),3)
C END NOV 1992
         IF (IMOD.EQ.0)
     1   CALL OUTCIJ(1,IPCIJ,IFILE,CX(1,1,5),THERMX(1,5),ETHRMX(1,5))
C
C  APRIL, 1986 MOD... CALCULATE WIDE COL. C(I,J) WITH ZERO STIFF. SKIN.
C        IF (IPRINT.EQ.1)
C    1    CALL DATUM(IFILE4,18,0,0,INT,REALL,CHARAC,IOUT,0,IPROMP)
C BEG JUN 2004
         CALL SMRCIJ(IFILE,1,B,B2,H,W,W2,NSEG,ISTIF,INTEXT,
     1               TBASE,CX0,CY0,CSWIDE,THSMRX,THSMRY,THMDUM,
     1               ZXDUM,ZYDUM,GTX,GTY,GTDUM,TEFDUM,FDUM(1,1,1),
     1               GDUM(1,1,1),0,NNODES,TEMP,IMTEMP)
         IF (KLAYER(1,1).NE.0)
     1   CALL CMBINE(NPRT,1,3,CX(1,1,1),CX0(1,1,1),CSWIDE)
C END JUN 2004
C BEG AUG 1992
         IF (ISOGRD.EQ.1) THEN
C BEG MAR 1995
C BEG JUN 2004
C          IF (NPRT.GE.2) WRITE(8,'(A)')' Before CALL ISOGRX..'
           CALL ISOGRX(IFILE,CX0,CSWIDE,IMTEMP,NNODES,TEMP,FMULT,GTX,
     1           GTDUM,TEFDUM(1),ETHRMX,THMDUM,ETHDUM,THSMDM,ETSMDM,
     1           FREDUC)
C          IF (KLAYER(1,1).NE.0)
C    1      CALL CMBINE(NPRT,1,4,CX(1,1,1),CX0(1,1,1),CSWIDE)
         ENDIF
C END JUN 2004
C END MAR 1995
         IF (ISOGRD.EQ.0) CALL STRTHM(7,1,ETHDUM,CSWIDE,CSINV,THMDUM)
C END AUG 1992
C BEG NOV 1992
         IF (ISTIF(2).NE.0.OR.PEDG.OR.IBPRES.EQ.1.OR.IBPRES.EQ.2)
     1      CALL ETHMOD(CSWIDE,ETHDUM,THMDUM,4)
C END NOV 1992
         IF (IMOD.EQ.0)
     1    CALL OUTCIJ(5,IPCIJ,IFILE,CSWIDE,THMDUM,ETHDUM)
         IF (ISTIF(2).EQ.0) CALL MOVER(CSWIDE,1,CSREDU,1,36)
C END OF APRIL, 1986 WIDE COL. MOD.
C
C BEG NOV 1992
         IF (ISTIF(2).EQ.0) THEN
            DO 20 I = 1,6
            DO 20 J = 1,6
   20          CS(I,J)   = CX(I,J,5)
            GTS(1) = GTX(1,5)
            GTS(2) = GTX(2,5)
            CALL MOVER(F(1,1,1),1,F(1,1,5),1,10)
            CALL MOVER(G(1,1,1),1,G(1,1,5),1,10)
            CALL MOVER(ETHRMX(1,5),1,ETHERM,1,6)
            CALL MOVER(THERMX(1,5),1,THERMS,1,6)
            CALL MOVER(F(1,1,1),1,F(1,1,4),1,10)
            CALL MOVER(G(1,1,1),1,G(1,1,4),1,10)
         ENDIF
C END NOV 1992
      ENDIF
C
      IF (ISTIF(2).NE.0) THEN
C BEG JAN 1995
         IF (PEDG) THEN
C  GET AXIAL "BOUNDARY LAYER" LENGTH FOR PORTION OF SHELL BETWEEN RINGS.
C  THIS IS NEEDED FOR AXISYMMETRIC PREBUCKLING THERMAL DEFORMATIONS..
            CN44 = ABS(CX(4,4,5) - CX(1,4,5)**2/CX(1,1,5))
            THEFF = SQRT(CN44*12./CX(2,2,5))
            BLLN   = 2.73*SQRT(ABS(R)*THEFF)
            BDUM(1) = B(1)
            B2COEF = 0.
            CYOCX = CY(5,5,2)/CX(4,4,1)
            IF (CYOCX.GT.10.) B2COEF = 1.0
            IF (CYOCX.GT.1.0.AND.CYOCX.LT.10.0) B2COEF = (CYOCX-1.)/9.
            BDUM(2) = 0.75*BLLN + B2COEF*B2(2)
            IF (BDUM(2).GT.B(2)) BDUM(2) = B(2)
            BLLN = BDUM(2)
         ENDIF
C END JAN 1995
C SMEARED RINGS ONLY: CY(I,J,5)
C        IF (IPRINT.EQ.1.AND.ISTIF(1).EQ.0)
C    1    CALL DATUM(IFILE4,16,0,0,INT,REALL,CHARAC,IOUT,0,IPROMP)
         CALL MOVER(THSMRX,1,THSMR3,1,30)
         IF (ICOCUR(1).EQ.0.AND.ICOCUR(2).EQ.1) THEN
            DO 13 J = 1,2
            DO 13 I = 1,6
               THSMR3(I,J) = THERMX(I,1)
   13       CONTINUE
         ENDIF
         IF (ICODIF(1)) CALL MOVER(0.,0,THSMR3,1,30)
C BEG JUN 1996
C        IF (NPRT.GE.2)
C    1      CALL OUTTHM(IFILE,2,NSEG,THSMR3,ETSMRX,THSMRY,ETSMRY)
C END JUN 1996
C BEG JUN 2004
C BEG JUN 2004
C BEG MAY 2005
C        IF (NPRT.GE.2) THEN
C           WRITE(8,'(A)')
C    1    ' Just before CALL SMRCIJ(IFILE,2,B,...: CX0(i,j,1)='
C           CALL OUTCIJ(0,1,8,CX0(1,1,1),TXDUM,EHXDUM)
C           WRITE(8,'(A)')  ' CX0(i,j,2)='
C           CALL OUTCIJ(0,1,8,CX0(1,1,2),TXDUM,EHXDUM)
C           WRITE(8,'(/,A)')' CY0(i,j,1)='
C           CALL OUTCIJ(0,1,8,CY0(1,1,1),TXDUM,EHXDUM)
C           WRITE(8,'(/,A)')' CY0(i,j,2)='
C           CALL OUTCIJ(0,1,8,CY0(1,1,2),TXDUM,EHXDUM)
C           WRITE(8,'(/,A)')' CY0(i,j,3)='
C           CALL OUTCIJ(0,1,8,CY0(1,1,3),TXDUM,EHXDUM)
C           WRITE(8,'(/,A)')' CY0(i,j,4)='
C           CALL OUTCIJ(0,1,8,CY0(1,1,4),TXDUM,EHXDUM)
C           WRITE(8,'(/,A)')' CY(i,j,5) before  "CALL SMRCIJ"='
C           CALL OUTCIJ(0,1,8,CY(1,1,5),TXDUM,EHXDUM)
C        ENDIF
C END MAY 2005
C23456789012345678901234567890123456789012345678901234567890123456789012
C        IF (NPRT.GE.2) THEN
C           WRITE(8,'(A,1P,3E12.4)')' TBASE(1),ZPARTX(1),ZPARTY(1)=',
C    1                                TBASE(1),ZPARTX(1),ZPARTY(1)
C           WRITE(8,'(A,1P,3E12.4)')' TBASE(2),ZPARTX(2),ZPARTY(2)=',
C    1                                TBASE(2),ZPARTX(2),ZPARTY(2)
C           WRITE(8,'(A,/,1P,5E12.4)')
C    1    ' B(1),B2(1),H(1),W(1),W2(1)=',
C    1      B(1),B2(1),H(1),W(1),W2(1)
C
C           WRITE(8,'(A,/,1P,5E12.4)')
C    1    ' B(2),B2(2),H(2),W(2),W2(2)=',
C    1      B(2),B2(2),H(2),W(2),W2(2)
C        ENDIF
C
         CALL SMRCIJ(IFILE,2,B,B2,H,W,W2,NSEG,ISTIF,INTEXT,
     1         TBASE,CX0,CY0,CY(1,1,5),THSMR3,THSMRY,THERMY(1,5),
     1         ZPARTX,ZPARTY,GTX,GTY,GTY(1,5),TEFF,F(1,1,2),
     1         G(1,1,2),0,NNODES,TEMP,IMTEMP)
C BEG MAY 2005
C        IF (NPRT.GE.2) THEN
C           WRITE(8,'(/,A)')' CY(i,j,5) after  "CALL SMRCIJ"='
C           WRITE(8,'(A)')  ' CY(i,j,5) before "CALL CMBINE"='
C           CALL OUTCIJ(0,1,8,CY(1,1,5),TXDUM,EHXDUM)
C        ENDIF
C END MAY 2005
         IF (KLAYER(1,1).NE.0)
     1   CALL CMBINE(NPRT,2,1,CY(1,1,1),CY0(1,1,1),CY(1,1,5))
C END JUN 2004
C BEG MAY 2005
C        IF (NPRT.GE.2) THEN
C           WRITE(8,'(/,A)')' CY(i,j,5) after "CALL CMBINE"='
C           CALL OUTCIJ(0,1,8,CY(1,1,5),TXDUM,EHXDUM)
C        ENDIF
C END MAY 2005
C
C        IF (IPRINT.EQ.1.AND.ISTIF(1).EQ.0)
C    1   CALL DATUM(IFILE4,17,0,0,INT,REALL,CHARAC,IOUT,0,IPROMP)
         CALL STRTHM(8,1,ETHRMY(1,5),CY(1,1,5),CSINV,THERMY(1,5))
C BEG NOV 1992
         IF (ISTIF(1).NE.0.OR.PEDG.OR.IBPRES.EQ.1.OR.IBPRES.EQ.2)
     1      CALL ETHMOD(CY(1,1,5),ETHRMY(1,5),THERMY(1,5),5)
         IF (IMOD.EQ.0)
     1   CALL OUTCIJ(2,IPCIJ,IFILE,CY(1,1,5),THERMY(1,5),ETHRMY(1,5))
         IF (ISTIF(1).EQ.0) THEN
C BEG AUG 1993
C           CALL MOVER(CY(1,1,5),1,CSREDU,1,36)
            CALL MOVER(CXDUM(1,1,1),1,CXDUM(1,1,2),1,36)
            CALL CGCIJP(CXDUM(1,1,1),CYDUM(1,1,1))
            IF (B2(2).EQ.0.) CALL CGCIJP(CXDUM(1,1,1),CYDUM(1,1,2))
            IF (B2(2).NE.0.) CALL MOVER(CY(1,1,2),1,CYDUM(1,1,2),1,36)
            CALL MOVER(CY(1,1,3),1,CYDUM(1,1,3),1,36)
            CALL MOVER(CY(1,1,4),1,CYDUM(1,1,4),1,36)
C BEG JUN 2004
C           IF (NPRT.GE.2) WRITE(8,'(A)')' Before CALL SMRCIJ(..2..)'
            CALL SMRCIJ(IFILE,2,B,B2,H,W,W2,NSEG,ISTIF,INTEXT,
     1               TBASE,CX0,CY0,CSREDU,THSMR3,THSMRY,THMDUM,
     1               ZXDUM,ZYDUM,GTX,GTY,GTDUM,TEFDUM,FDUM(1,1,1),
     1               GDUM(1,1,1),0,NNODES,TEMP,IMTEMP)
            IF (KLAYER(1,1).NE.0)
     1      CALL CMBINE(NPRT,2,2,CY(1,1,1),CY0(1,1,1),CSREDU)
C END JUN 2004
            CALL STRTHM(9,1,ETHDUM,CSREDU,CSINV,THMDUM)
            IF (PEDG.OR.IBPRES.EQ.1.OR.IBPRES.EQ.2)
     1         CALL ETHMOD(CSREDU,ETHDUM,THMDUM,6)
            IF (IMOD.EQ.0)
     1       CALL OUTCIJ(6,IPCIJ,IFILE,CSREDU,THMDUM,ETHDUM)
C END AUG 1993
C BEG JAN 1995
            IF (PEDG) THEN
C   THE PURPOSE HERE IS TO COMPUTE THE OVERALL THERMAL HOOP STRAIN, ETHDUM(2),
C   FROM THE MODEL IN WHICH THE FICTITIOUS RING SPACING IS BDUM(2).
C   ETHDUM(2) WILL BE NEEDED LATER IN STRUCT TO COMPUTE AXISYMMETRIC
C   PREBUCKLING THERMAL DISTORTIONS OF RING-STIFFENED CYLINDRICAL PANELS.
C BEG AUG 1998
               STFL2S = STFL2
               STFM2S = STFM2
               STMM2S = STMM2
               STRS2S = STORS2
C END AUG 1998
C BEG JUN 2004
               CALL SMRCIJ(IFILE,2,BDUM,B2,H,W,W2,NSEG,ISTIF,INTEXT,
     1               TBASE,CX0,CY0,CSDUM,THSMR3,THSMRY,THMDUM,
     1               ZXDUM,ZYDUM,GTX,GTY,GTDUM,TEFDUM,FDUM(1,1,1),
     1               GDUM(1,1,1),0,NNODES,TEMP,IMTEMP)
               IF (KLAYER(1,1).NE.0)
     1         CALL CMBINE(NPRT,2,3,CY(1,1,1),CY0(1,1,1),CSDUM)
C END JUN 2004
C BEG AUG 1998
               STFL2 = STFL2S
               STFM2 = STFM2S
               STMM2 = STMM2S
               STORS2 = STRS2S
C END AUG 1998
               CALL STRTHM(10,1,ETHDUM,CSDUM,CSINV,THMDUM)
               IF (PEDG.OR.IBPRES.EQ.1.OR.IBPRES.EQ.2)
     1            CALL ETHMOD(CSDUM,ETHDUM,THMDUM,7)
C              IF (IMOD.EQ.0)
C    1          CALL OUTCIJ(8,IPCIJ,IFILE,CSDUM,THMDUM,ETHDUM)
               ETHOOP = ETHDUM(2)
C BEG FEB 1999
C              IF (NPRT.GE.2) WRITE(IFILE,'(A,1P,E12.4)')
C    1       ' Thermal hoop strain, ETHOOP (used in SUB. SKIN)=',ETHOOP
C END FEB 1999
            ENDIF
C END JAN 1995
C           CALL MOVER(THSMR3,1,THSMRX,1,30)
            DO 30 I = 1,6
            DO 30 J = 1,6
   30          CS(I,J)   = CY(I,J,5)
            GTS(1) = GTY(1,5)
            GTS(2) = GTY(2,5)
            CALL MOVER(F(1,1,2),1,F(1,1,5),1,10)
            CALL MOVER(G(1,1,2),1,G(1,1,5),1,10)
            CALL MOVER(ETHRMY(1,5),1,ETHERM,1,6)
            CALL MOVER(THERMY(1,5),1,THERMS,1,6)
            CALL MOVER(F(1,1,2),1,F(1,1,4),1,10)
            CALL MOVER(G(1,1,2),1,G(1,1,4),1,10)
         ENDIF
C END NOV 1992
      ENDIF
C
      IF (ISTIF(1).NE.0.AND.ISTIF(2).NE.0) THEN
C SMEARED STRINGERS AND RINGS: CS(I,J)
C BEG AUG 1992
         CALL MOVER(THSMRX,1,THSMR3,1,30)
         IF (ICOCUR(1).EQ.0.AND.ICOCUR(2).EQ.1) THEN
            DO 14 J = 1,2
            DO 14 I = 1,6
               THSMR3(I,J) = THERMX(I,J)
   14       CONTINUE
         ENDIF
C BEG JUN 1996
         IF (ISOGRD.EQ.0) THEN
C           IF (NPRT.GE.2)
C    1         CALL OUTTHM(IFILE,3,NSEG,THSMR3,ETSMRX,THSMRY,ETSMRY)
C BEG JUN 2004
            CALL SMRCIJ(IFILE,3,B,B2,H,W,W2,NSEG,ISTIF,INTEXT,
     1             TBASE,CX0,CY0,CS,THSMR3,THSMRY,THERMS,ZPARTX,ZPARTY,
     1             GTX,GTY,GTS,TEFF,F(1,1,3),G(1,1,3),0,NNODES,TEMP,
     1             IMTEMP)
            IF (KLAYER(1,1).NE.0)
     1      CALL CMBINE(NPRT,3,1,CX(1,1,1),CX0(1,1,1),CS)
C END JUN 2004
         ENDIF
C END JUN 1996
C
         IF (ISOGRD.EQ.1) THEN
            CALL MOVER(CX(1,1,5),1,CXDUM(1,1,1),1,36)
            CALL MOVER(CX(1,1,5),1,CXDUM(1,1,2),1,36)
            CALL MOVER(0.,0,CXDUM(1,1,3),1,36)
            CALL MOVER(0.,0,CXDUM(1,1,4),1,36)
            CALL MOVER(THSMRX(1,5),1,THSMDM(1,1),1,6)
            CALL MOVER(THSMRX(1,5),1,THSMDM(1,2),1,6)
            CALL MOVER(0.,0,THSMDM(1,3),1,6)
            CALL MOVER(0.,0,THSMDM(1,4),1,6)
C BEG DEC 2003
            CALL CGCIJP(CX(1,1,5),CYDUM(1,1,1))
            CALL CGCIJP(CX(1,1,5),CYDUM(1,1,2))
C END DEC 2003
            CALL MOVER(CY(1,1,3),1,CYDUM(1,1,3),1,36)
            CALL MOVER(CY(1,1,4),1,CYDUM(1,1,4),1,36)
            THDUMY(1,1) = THSMRX(2,5)
            THDUMY(2,1) = THSMRX(1,5)
            THDUMY(3,1) =-THSMRX(3,5)
            THDUMY(4,1) = THSMRX(5,5)
            THDUMY(5,1) = THSMRX(4,5)
            THDUMY(6,1) =-THSMRX(6,5)
            THDUMY(1,2) = THSMRX(2,5)
            THDUMY(2,2) = THSMRX(1,5)
            THDUMY(3,2) =-THSMRX(3,5)
            THDUMY(4,2) = THSMRX(5,5)
            THDUMY(5,2) = THSMRX(4,5)
            THDUMY(6,2) =-THSMRX(6,5)
            DO 15 I = 1,6
            DO 15 J = 3,4
   15       THDUMY(I,J) = THSMRY(I,J)
            GTXDUM(1,1) = GTX(1,5)
            GTXDUM(2,1) = GTX(2,5)
            GTXDUM(1,2) = GTX(1,5)
            GTXDUM(2,2) = GTX(2,5)
            GTYDUM(1,1) = GTX(2,5)
            GTYDUM(2,1) = GTX(1,5)
            GTYDUM(1,2) = GTX(2,5)
            GTYDUM(2,2) = GTX(1,5)
            DO 16 I = 1,2
            DO 16 J = 3,4
            GTXDUM(I,J) = 0.
   16       GTYDUM(I,J) = GTY(I,J)
C BEG DEC 2000
            CALL MOVER(TY,1,TYTEMP,1,5)
            TY(2) = TEFF(1) + TY(2) - TY(1)
            TY(1) = TEFF(1)
C END DEC 2000
C BEG JUN 2004
C           IF (NPRT.GE.2) WRITE(8,'(A)')
C    1    ' ISOGRD=1: Before CALL SMRCIJ(..2..)'
            CALL SMRCIJ(IFILE,2,B,B2,H,W,W2,NSEG,ISTIF,INTEXT,
     1      TBASE,CXDUM,CYDUM,CS,THSMDM,THDUMY,THERMS,ZPARTX,ZPARTY,
     1      GTXDUM,GTYDUM,GTS,TEFF,F(1,1,3),G(1,1,3),0,NNODES,TEMP,
     1      IMTEMP)
C           IF (KLAYER(1,1).NE.0)
C    1      CALL CMBINE(NPRT,2,4,CX(1,1,1),CX0(1,1,1),CS)
C END JUN 2004
C BEG DEC 2000
            GTS(1) = GTX(1,5)
            CALL MOVER(TYTEMP,1,TY,1,5)
C END DEC 2000
            CALL MOVER(CS,1,CSREDU,1,36)
         ENDIF
C END AUG 1992
C BEG NOV 1992
         CALL STRTHM(11,1,ETHERM,CS,CSINV,THERMS)
         IF (PEDG.OR.IBPRES.EQ.1.OR.IBPRES.EQ.2)
     1      CALL ETHMOD(CS,ETHERM,THERMS,8)
C
         IF (ICODIF(1)) CALL MOVER(ETHRMX(1,5),1,ETHERM,1,6)
         IF (ICODIF(2)) CALL MOVER(ETHRMY(1,5),1,ETHERM,1,6)
C END NOV 1992
         IF (IMOD.EQ.0)
     1    CALL OUTCIJ(3,IPCIJ,IFILE,CS,THERMS,ETHERM)
C BEG JAN 1995
         ETHOOP = ETHERM(2)
C END JAN 1995
C BEG FEB 1999
C        IF (NPRT.GE.2) WRITE(IFILE,'(A,1P,E12.4)')
C    1 ' Thermal hoop strain, ETHOOP (used in SUB. SKIN)=',ETHOOP
C END FEB 1999
C
C        IF (IPRINT.EQ.1)
C    1    CALL DATUM(IFILE4,19,0,0,INT,REALL,CHARAC,IOUT,0,IPROMP)
C BEG AUG 1992
         IF (ISOGRD.EQ.0) THEN
C BEG JUN 2004
            CALL SMRCIJ(IFILE,3,B,B2,H,W,W2,NSEG,ISTIF,INTEXT,
     1               TBASE,CX0,CY0,CSREDU,THSMR3,THSMRY,THMDUM,
     1               ZXDUM,ZYDUM,GTX,GTY,GTDUM,TEFDUM,FDUM(1,1,1),
     1               GDUM(1,1,1),0,NNODES,TEMP,IMTEMP)
            IF (KLAYER(1,1).NE.0)
     1      CALL CMBINE(NPRT,3,2,CX(1,1,1),CX0(1,1,1),CSREDU)
C END JUN 2004
C
            CALL STRTHM(12,1,ETHDUM,CSREDU,CSINV,THMDUM)
            IF (PEDG.OR.IBPRES.EQ.1.OR.IBPRES.EQ.2)
     1         CALL ETHMOD(CSREDU,ETHDUM,THMDUM,9)
            IF (IMOD.EQ.0)
     1       CALL OUTCIJ(6,IPCIJ,IFILE,CSREDU,THMDUM,ETHDUM)
C BEG JAN 1995
            IF (PEDG) THEN
C   THE PURPOSE HERE IS TO COMPUTE THE OVERALL THERMAL HOOP STRAIN, ETHDUM(2),
C   FROM THE MODEL IN WHICH THE FICTITIOUS RING SPACING IS BDUM(2).
C   ETHDUM(2) WILL BE NEEDED LATER IN STRUCT TO COMPUTE AXISYMMETRIC
C   PREBUCKLING THERMAL DISTORTIONS OF RING-STIFFENED CYLINDRICAL PANELS.
C BEG AUG 1998
               STFL2S = STFL2
               STFM2S = STFM2
               STMM2S = STMM2
               STRS2S = STORS2
C END AUG 1998
C BEG JUN 2004
               CALL SMRCIJ(IFILE,3,BDUM,B2,H,W,W2,NSEG,ISTIF,INTEXT,
     1               TBASE,CX0,CY0,CSDUM,THSMR3,THSMRY,THMDUM,
     1               ZXDUM,ZYDUM,GTX,GTY,GTDUM,TEFDUM,FDUM(1,1,1),
     1               GDUM(1,1,1),0,NNODES,TEMP,IMTEMP)
               IF (KLAYER(1,1).NE.0)
     1         CALL CMBINE(NPRT,3,3,CX(1,1,1),CX0(1,1,1),CSDUM)
C END JUN 2004
C BEG AUG 1998
               STFL2 = STFL2S
               STFM2 = STFM2S
               STMM2 = STMM2S
               STORS2 = STRS2S
C END AUG 1998
               CALL STRTHM(13,1,ETHDUM,CSDUM,CSINV,THMDUM)
               IF (PEDG.OR.IBPRES.EQ.1.OR.IBPRES.EQ.2)
     1            CALL ETHMOD(CSDUM,ETHDUM,THMDUM,10)
C BEG FEB 1999
C              IF (IMOD.EQ.0.AND.NPRT.GE.2)
C    1          CALL OUTCIJ(8,IPCIJ,IFILE,CSDUM,THMDUM,ETHDUM)
               IF (ICODIF(1)) CALL MOVER(ETHRMX(1,5),1,ETHDUM,1,6)
               IF (ICODIF(2)) CALL MOVER(ETHRMY(1,5),1,ETHDUM,1,6)
               ETHOOP = ETHDUM(2)
C              IF (NPRT.GE.2) WRITE(IFILE,'(A,1P,E12.4)')
C    1       ' Thermal hoop strain, ETHOOP (used in SUB. SKIN)=',ETHOOP
C END FEB 1999
            ENDIF
C END JAN 1995
         ENDIF
C END AUG 1992
C BEG NOV 1992
C        CALL MOVER(THSMR3,1,THSMRX,1,30)
         CALL MOVER(F(1,1,3),1,F(1,1,5),1,10)
         CALL MOVER(G(1,1,3),1,G(1,1,5),1,10)
         CALL MOVER(F(1,1,3),1,F(1,1,4),1,10)
         CALL MOVER(G(1,1,3),1,G(1,1,4),1,10)
      ENDIF
C  MANY STATEMENTS REMOVED FROM HERE AND MOVED UP.
C END NOV 1992
C BEG FEB 2005
      CALL MOVER(CS,1,CS0,1,36)
C END FEB 2005
C
C****************************************************************
C END CALCULATION OF 6X6 INTEGRATED CONSTITUTIVE MATRIX Cx(i,j,5),
C FOR PANEL WITH SMEARED STRINGERS ONLY; Cy(i,j,5) FOR SMEARED
C RINGS ONLY; and CS(i,j) FOR SMEARED STRINGERS AND RINGS.
C****************************************************************
C
C BEG MAR 1995
      IF (ISTIF(1).EQ.0.AND.ISTIF(2).EQ.0) THEN
         IF (PEDG.OR.IBPRES.EQ.1.OR.IBPRES.EQ.2)
     1      CALL ETHMOD(CS,ETHERM,THERMS,11)
      ENDIF
C END MAR 1995
C

C  BEG NOV 1992
C    SEVERAL STATEMENTS REMOVED FROM HERE AND MOVED UP.
C  END NOV 1992
C
C  FIND NEUTRAL PLANES CORRESPNDING TO X AND Y RESULTANTS...
C
C     IF (IPRINT.EQ.1)
C    1  CALL DATUM(IFILE4,21,0,0,INT,REALL,CHARAC,IOUT,0,IPROMP)
C BEG AUG 1992
      CALL NEUTAX(CS,1.0,0.0,DNEUTX)
      CALL NEUTAX(CS,0.0,1.0,DNEUTY)
C     DNEUTX = -CS(1,4)/CS(1,1)
C     DNEUTY = -CS(2,5)/CS(2,2)
C END AUG 1992
C 
C BEG 26 JAN 1989
C
      DSURF = DNEUTX
C
C END 26 JAN 1989
C

C     IF (IPRINT.EQ.1)
C    1  CALL DATUM(IFILE4,23,0,0,INT,REALL,CHARAC,IOUT,0,IPROMP)
      CALL CSHIFT(CS,DSURF,CSN)
C
      IF (IMOD.EQ.0)
     1 CALL OUTCIJ(4,IPCIJ,IFILE,CSN,THERMS,ETHERM)
C
C BEG 26 JAN 1989
C
      DO 50 I = 1,6
         IF (CSN(I,I).LT.0.0) THEN
            WRITE(IFILE,48)
C BEG JULY 1989
   48    FORMAT(/' ******** BAD CONSTITUTIVE LAW C(i,j) **************'/
     1' There is at least one C(i,i) that is negative. This means that'/
     1' there is an error in the derivation of the constitutive law'/
     1' for panel skin with smeared stiffeners.   Run must be aborted.'/
     1' Inspect your input data carefully.  Are there any thicknesses'/
     1' that are negative because of bad linking relationships?  If'/
     1' you cannot find any error in your use of PANDA2, call David'/
     1' Bushnell at Lockheed (415) 424-3237 or write and send your'/
     1' input data for this case to David Bushnell, D93-30/251,'/
     1' Lockheed Palo Alto Research Lab, 3251 Hanover St., Palo Alto,'/
     1' California 94304'/
     1' ****************** BAD CONSTITUTIVE LAW C(i,j) **************'/)
C
       CALL OUTOPT(IFILE,NVAR,IDV,IEV,ILV,CLINK,IDLINK,VLB,VUB,VAR,WORDV
     1,' SUMMARY OF INFORMATION FOR OPTIMIZATION ANALYSIS AT ABORT TIME  
     1  ',57)
       CALL OUTCIJ(4,1,IFILE,CSN,THERMS,ETHERM)
C
C END JULY 1989
            CALL ERREX
         ENDIF
   50 CONTINUE
C
C END 26 JAN 1989
C
C  GET BOSOR-TYPE CIJ FOR USE IN PANDA FOR GETTING KNOCKDOWN FACTORS
C  FOR EFFECTS OF IN-PLANE SHEAR AND ANISOTROPIC-TYPE C(I,J)..
C
      CALL BOSCIJ(CX(1,1,1),CXB(1,1,1))
      CALL BOSCIJ(CX(1,1,2),CXB(1,1,2))
C BEG JULY 1989
      IF (ISTIF(1).EQ.5) CALL BOSCIJ(CX(1,1,3),CXB(1,1,3))
C END JULY 1989
      CALL BOSCIJ(CX(1,1,5),CXB(1,1,5))
      CALL BOSCIJ(CY(1,1,2),CYB(1,1))
      CALL BOSCIJ(CS(1,1),CSB(1,1))
      CALL BOSCIJ(CSWIDE(1,1),CSWB(1,1))
      CALL BOSCIJ(CSREDU(1,1),CSRB(1,1))
C
C  FILL C11TAN, C12TAN,C22TAN,C33TAN ARRAYS...
C
      DO 100 ISEG = 1,NSEGB5
C BEG JULY 1996
C BEG JUN 2004
         CALL IDSEG(ISTIF(1),ISEG,NSEGB5,B20(1),W20(1),J,IFAY)
C END JUN 2004
C END JULY 1996
         I5I = I5(ISEG)
         DO 90 I = 1,I5I
C BEG APR 1996
            CX11 = CX(1,1,J)
            IF (ISTIF(1).EQ.5.AND.IFAYT(1).EQ.1.
     1                       .AND.(ISEG.EQ.5.OR.ISEG.EQ.6))
     1      CX11 = CX(1,1,J) + CX(1,1,2)
            C11TAN(I,ISEG) = CX11
C END APR 1996
            C12TAN(I,ISEG) = CX(1,2,J)
            C22TAN(I,ISEG) = CX(2,2,J)
            C33TAN(I,ISEG) = CX(3,3,J)
   90    CONTINUE
  100 CONTINUE
C
      RETURN
      END
C
C
C
C=DECK      SEGCIJ
      SUBROUTINE SEGCIJ(IPCIJ,IFILE,CX,CY,THERMX,THERMY,TBASE,
     1     GTX,GTY,ETHRMX,ETHRMY,CSINV,CRACK,ITUTOR,IFILE4,IOUT,
     1     IPROMP,IMOD,TEMP,FMULT,THSMRX,THSMRY,ETSMRX,ETSMRY,NNODES,
C BEG FEB 2004
     1     IMTEMP,B2,THCURX,THCURY,B,H,W,W2,CX0,CY0,THRMX0,THRMY0,
     1     TCURX0,TCURY0,KLAYER,SPCNG,BB2,TX0,TY0,TXX,TYY,GTX0,GTY0,
     1     GTSSUB)
C END FEB 2004 
C
C  PURPOSE IS TO GET THE C(i,j) FOR THE UNIQUE SEGMENTS OF A MODULE
C  ALSO, THERM, WHICH IS THE THERMAL RESULTANTS AND MOMENTS DUE TO
C  CURING THE COMPOSITE LAMINATE AND TEMPERATURE CHANGES DURING SERVICE.
C
C  ALSO (AUG 84) GET THE TRANSVERSE SHEAR STIFFNESSES GTX(i), i=1,2
C  AND GTY(i), I=1,2 FOR THE UNIQUE SEGMENTS OF A MODULE.
C
C  ALSO (SEP 84) GET THERMAL STRAINS AND CHANGES IN CURVATURE OF THE
C  REFERENCE SURFACE, ETHRMX(6,5)(STRINGER MODULE), ETHRMY(6,5) (RING
C  MODULE.
C
C  The reference surface is the refer. surface for all segments .
C  OUTPUT DATA...
C
C  CX(6,6,5) ARE THE C(i,j) FOR UP TO 5 UNIQUE SEGMENTS THAT COMPOSE A
C            STRINGER-SKIN CROSS-SECTION MODULE
C  CY(6,6,5) ARE THE C(i,j) FOR UP TO 5 UNIQUE SEGMENTS THAT COMPOSE A
C            RING CROSS-SECTION MODULE (CY(6,6,1) NOT CALCULATED
C            BECAUSE THE THIN PART OF THE SKIN IS ACCOUNTED FOR IN
C            CX(6,6,1).
C  GTX(2,5)  ARE THE TRANSVERSE SHEAR STIFFNESSES (1=AXIAL, 2=CIRC.)
C            FOR THE SEGMENTS THAT COMPOSE A STRINGER-SKIN CROSS-SECT.
C  GTY(2,5)  ARE THE TRANSVERSE SHEAR STIFFNESSES FOR RING-SKIN MODULE.
C  THERMX(6,5) ARE THE THERMAL RESULTANTS (N1T, N2T, 0) AND THERMAL
C              MOMENTS (M1T, M2T, 0) THAT ARISE IN THE STRINGER-SKIN
C              CROSS-SECTION MODULE FROM 
C                 1. CURING RESIDUAL STRESSES, AND
C                 2. TEMPERATURE CHANGES DURING SERVICE
C  THERMY(6,5) ARE THE THERMAL RESULTANTS AND MOMENTS IN THE RING-SKIN
C              CROSS-SECTION FROM
C                 1. CURING RESIDUAL STRESSES, AND
C                 2. TEMPERATURE CHANGES DURING SERVICE
C
C  ETHRMX(6,5) ARE THE THERMAL STRAINS (ETX, ETY, ETXY) AND THERMAL
C              CHANGES IN CURVATURE (KTX, KTY, KTXY) THAT ARISE DUE TO
C              THERMX(6,5). ANALOGOUS STATEMENT HOLDS FOR ETHRMY(6,5).
C
C  THCURX(6,5) ARE THE THERMAL RESULTANTS (N1T, N2T, 0) AND THERMAL
C              MOMENTS (M1T, M2T, 0) THAT ARISE IN THE STRINGER-SKIN
C              CROSS-SECTION MODULE FROM 
C                 1. CURING RESIDUAL STRESSES ALONE
C  THCURY(6,5) ARE THE THERMAL RESULTANTS AND MOMENTS IN THE RING-SKIN
C              CROSS-SECTION FROM
C                 1. CURING RESIDUAL STRESSES ALONE
C
C  THSMRX(j,i) ARE GIVEN BY:
C              THSMRX(J,I) = THERMX(J,I) -(1.-COCUR1)*THCURX(J,I)
C              IN WHICH "COCUR1" = 1 IF STRINGERS ARE COCURED, 0 OTHERWISE.
C  ETSMRX(j,i) ARE THE CORRESPONDING THERMAL STRAINS.
C
C  THSMRY(j,i) ARE GIVEN BY:
C              THSMRY(J,I) = THERMY(J,I) -(1.-COCUR2)*THCURY(J,I)
C              IN WHICH "COCUR2" = 1 IF RINGS ARE COCURED, 0 OTHERWISE.
C  ETSMRY(j,i) ARE THE CORRESPONDING THERMAL STRAINS.
C
C BEG JUN 2004
      COMMON/OUTP/NPRT
      DIMENSION TXDUM(6),ETXDUM(6),GTSSUB(2,5)
C END JUN 2004
C BEG FEB 2004
      DIMENSION B(2),H(2),W(2),W2(2),CX0(6,6,5),CY0(6,6,5)
      DIMENSION THRMX0(6,5),THRMY0(6,5),TCURX0(6,5),TCURY0(6,5)
      DIMENSION KLAYER(4,2),SPCNG(2,4,2),BB2(2)
      DIMENSION TX0(5),TY0(5),TXX(2,5),TYY(2,5),GTX0(2,5),GTY0(2,5)
C END FEB 2004
      DIMENSION CX(6,6,5),CY(6,6,5),THERMX(6,5),THERMY(6,5)
      DIMENSION ETHRMX(6,5), ETHRMY(6,5),CSINV(6,6),CRACK(99,5,2)
      DIMENSION GTX(2,5),GTY(2,5),GT1(99),GT2(99)
      DIMENSION E1L(99),E2L(99),GL(99),ZETL(99),U12L(99),RHOL(99)
      DIMENSION A1L(99),A2L(99)
      DIMENSION TL(99),TBASE(*)
C BEG 26 JAN 1989
      COMMON/WEBTH1/CX3(6,6,11),CY3(6,6,11),THRMX3(6,11),THRMY3(6,11)
      COMMON/WEBTH2/TSMRX3(6,11),TSMRY3(6,11),ESMRX3(6,11),ESMRY3(6,11)
      COMMON/WEBTH3/ETRMX3(6,11),ETRMY3(6,11),GTX3(2,11),GTY3(2,11)
      DIMENSION TEMP(4,2),FMULT(20,10,4,2),THCURX(6,5),THCURY(6,5)
      DIMENSION A1CUR(99),A2CUR(99),THSMRX(6,5),THSMRY(6,5)
      DIMENSION ETSMRX(6,5),ETSMRY(6,5)
C END 26 JAN 1989
      COMMON/GEOM6/IFAY(2),IMISCL(28)
      COMMON/THICK/TX(5),TY(5)
      COMMON/GEOM3/ISTIF(2),NLAYER(4,2),NSEG(2),INTEXT(2)
      COMMON/LAYER/MATL(90),LTYPE(99,5,2),T(90),ANGLE(90)
      COMMON/MATER1/E1(20),E2(20),G(20),FNU(20),DENS(20)
      COMMON/MATERT/ALPHA1(20),ALPHA2(20),CURETP(20),ICOCUR(2)
      COMMON/MATRAN/G13(20),G23(20)
      CHARACTER*15 PARTS(4,2)
C BEG MAR 1995
      COMMON/TMATL2/PARMAT(20,10),TEMPJ(10,20,10),FTEMPJ(10,20,10)
      COMMON/MATER7/ISOMAT(20),ISOEFF(20)
      DIMENSION FACTOR(20,10)
C END MAR 1995
C BEG JUN 1996
      DIMENSION NSUBLR(99),THEDUM(6,4),THCURD(6,4),ETHDUM(6,4)
      COMMON/XSANDW/ISANDW(4,2),ICORE(4,2)
C        "F1" signifies "face sheet 1" (top or leftmost face sheet)
C        "F2" signifies "face sheet 2" (bottom or rightmost face sheet)
      COMMON/WSANDW/TXFF1(4),TXFF2(4),CXFF1(6,6,4),CXFF2(6,6,4)
      COMMON/YSANDW/TYFF1(4),TYFF2(4),CYFF1(6,6,4),CYFF2(6,6,4)
      COMMON/ZSANDW/GTXF1(2,4),GTXF2(2,4),GTYF1(2,4),GTYF2(2,4)
      COMMON/ICXYX/ICXY(4,2)
C BEG OCT 1996
      COMMON/UNBALX/UNBAL(4,2),DBEND1(4,2),DBEND2(4,2)
C END OCT 1996
C END JUN 1996
C BEG AUG 1992
      COMMON/ISOGR/ISOGRD,ISOANG
C
      IF (ISOGRD.EQ.0) THEN
         PARTS(4,1) = 'STRINGER FLANGE'
         PARTS(3,1) = 'STRINGER WEB   '
         PARTS(2,1) = 'STRINGER BASE  '
      ELSE
         PARTS(4,1) = 'ISOGRID  FLANGE'
         PARTS(3,1) = 'ISOGRID  WEB   '
         PARTS(2,1) = 'ISOGRID  BASE  '
      ENDIF
C END AUG 1992
      PARTS(1,1) = '  PANEL  SKIN  '
C
      PARTS(4,2) = '  RING   FLANGE'
      PARTS(3,2) = '  RING   WEB   '
      PARTS(2,2) = '  RING   BASE  '
      PARTS(1,2) = '  PANEL  SKIN  '
C
C BEG JULY 1989
      IF (ISTIF(1).EQ.5) THEN
         PARTS(1,1) = '  LOWER  SKIN  '
         PARTS(2,1) = ' TRUSSCORE WEB '
         PARTS(3,1) = '  UPPER  SKIN  '
         PARTS(4,1) = '               '
      ENDIF
C
      IF (ISTIF(2).EQ.5) THEN
         PARTS(1,2) = '  LOWER  SKIN  '
         PARTS(2,2) = ' TRUSSCORE WEB '
         PARTS(3,2) = '  UPPER  SKIN  '
         PARTS(4,2) = '               '
      ENDIF
C END JULY 1989
C
C   MODIFICATION OF JUNE 10, 1986 (USE MIDDLE SURFACE IN SEG. 2
C   IF FMID = 0.  USE MIDDLE SURFACE OF SEG. 1 IN SEG. 2 IF FMID = 1.
C
C
      DO 100 ILOOP = 1,2
C
C
      FMID = 0.
      IF (IFAY(ILOOP).EQ.1) FMID = 1.0
C BEG JULY 1989
      FMID = 0.
C END JULY 1989
      ISTART = 1
      IEND   = NSEG(ILOOP)
      IF (ILOOP.EQ.2) THEN
         ISTART = 2
         IF (B2.EQ.0.) ISTART = 3
         TY(1)  = TX(1)
      ENDIF
      IF (ISTART.GT.IEND) GO TO 100
      FACT = 1.0
      IF (ILOOP.EQ.2.AND.INTEXT(ILOOP).EQ.1) FACT = -1.0
C
      IF (IPCIJ.EQ.1.AND.ILOOP.EQ.1.AND.IMOD.EQ.0) THEN
C BEG AUG 1992
         IF (ISOGRD.EQ.0) THEN
            WRITE(IFILE,10)
   10    FORMAT(//' CONSTITUTIVE MATRIX C(i,j) FOR SKIN-STRINGER MODULE'
     1,22X,'   THERMAL {NT}  ETHERM {ET}')
         ELSE
            WRITE(IFILE,11)
   11    FORMAT(//' CONSTITUTIVE MATRIX C(i,j) FOR SKIN-ISOGRID  MODULE'
     1,22X,'   THERMAL {NT}  ETHERM {ET}')
         ENDIF
C END AUG 1992
      ENDIF
      IF (IPCIJ.EQ.1.AND.ILOOP.EQ.2.AND.IMOD.EQ.0) THEN
C        IF (ITUTOR.EQ.1) THEN
C           REWIND IFILE4
C           CALL DATUM(IFILE4,ISTIF(2)+5,0,0,INT,REALL,CHARAC,IOUT,0,
C    1                 IPROMP)
C        ENDIF
C
         WRITE(IFILE,20)
   20    FORMAT(//' CONSTITUTIVE MATRIX C(i,j) FOR SKIN-RING MODULE',
     1 25X,'   THERMAL {NT}  ETHERM {ET}')
      ENDIF
C BEG JULY 1989
      IWEB = 3
      IF (ISTIF(ILOOP).EQ.5) IWEB = 2
      IWEBM = IWEB - 1
      IWEBP = IWEB + 1
C END JULY 1989
C BEG JUN 2004
C BEG MAY 2005
C     IF (NPRT.GE.2) WRITE(8,'(A,1P,E12.4,3I5)')
C    1 ' B2,ILOOP,ISTART,IEND=', B2,ILOOP,ISTART,IEND
C END MAY 2005
C END JUN 2004
      DO 60 I = ISTART,IEND
C
C BEG MAY 2005
C     WRITE(8,'(A,I5)')' ISEG (that is, I) =',I
C END MAY 2005
C BEG 26 JAN 1989
C  POSSIBLY ACCOUNT FOR VARYING TEMP AND MAT'L PROPS ALONG WEB...
C
C BEG JULY 1989
C BEG DEC 1998
C     IF (IMTEMP.EQ.1.AND.I.EQ.IWEB.AND.
C    1    TEMP(IWEBM,ILOOP).NE.TEMP(IWEBP,ILOOP)) THEN
      IF (IMTEMP.EQ.1.AND.I.EQ.IWEB) THEN
C END DEC 1998
         CALL WEBCIJ(IMOD,IPCIJ,IFILE,ILOOP,TEMP,CRACK,NNODES,
     1   CX(1,1,IWEB),CY(1,1,IWEB),THERMX(1,IWEB),THERMY(1,IWEB),
     1   THSMRX(1,IWEB),THSMRY(1,IWEB),ETHRMX(1,IWEB),ETHRMY(1,IWEB),
     1   ETSMRX(1,IWEB),ETSMRY(1,IWEB),GTX(1,IWEB),GTY(1,IWEB),IWEB)
C END JULY 1989
C BEG APR 2007
         IF (ILOOP.EQ.1) THEN
            CALL MOVER(CX(1,1,IWEB),1,CX0(1,1,IWEB),1,36)
            CALL MOVER(THERMX(1,IWEB),1,THRMX0(1,IWEB),1,6)
            CALL MOVER(THCURX(1,IWEB),1,TCURX0(1,IWEB),1,6)
            TX0(IWEB) = TX(IWEB) 
         ELSE
            CALL MOVER(CY(1,1,IWEB),1,CY0(1,1,IWEB),1,36)
            CALL MOVER(THERMY(1,IWEB),1,THRMY0(1,IWEB),1,6)
            CALL MOVER(THCURY(1,IWEB),1,TCURY0(1,IWEB),1,6)
            TY0(IWEB) = TY(IWEB)
         ENDIF
C END APR 2007
         GO TO 60
      ENDIF
C
C END 26 JAN 1989
C
      NLAY = NLAYER(I,ILOOP)
C BEG MAR 1995
      TSKIN   = 0.
      IF (IMTEMP.NE.0.AND.ISTIF(ILOOP).NE.5.AND.I.LE.IWEBM
     1               .AND.TEMP(2,ILOOP).NE.TEMP(1,ILOOP)) THEN
         DO 22 J = 1,NLAY
            K = LTYPE(J,I,ILOOP)
            TL(J) =  T(K)
            TSKIN = TSKIN + TL(J)
   22    CONTINUE
      ENDIF
      NLTOT = 0
C END MAR 1995
C
      GT1AVE = 0.
      GT2AVE = 0.
      TTOT   = 0.
C
      DO 30 J = 1,NLAY
C
      K = LTYPE(J,I,ILOOP)
      M = MATL(K)
C BEG MAR 1995
      NSUBLA = 1
      IF (IMTEMP.NE.0.AND.ISTIF(ILOOP).NE.5.AND.I.LE.IWEBM
     1               .AND.TEMP(2,ILOOP).NE.TEMP(1,ILOOP)) THEN
         IF (TSKIN.GT.0.0.AND.T(K).GT.0.1*TSKIN)
     1      NSUBLA = T(K)/(.1*TSKIN) + 1.0
      ENDIF
   24 CONTINUE
C BEG JUN 1996
      NSUBLR(J) = NSUBLA
C END JUN 1996
      DO 29 J1 = 1,NSUBLA
      J2 = NLTOT + J1
      IF (J2.GT.99) THEN
       WRITE(IFILE,*) ' IN SEGCIJ: TOO MANY SUBLAYERS. RESET NSUBLA=1'
       NSUBLA = 1
       GO TO 24
      ENDIF
      TL(J2) = T(K)/FLOAT(NSUBLA)
C BEG JUN 2004
C     IF (ILOOP.EQ.2.AND.NPRT.GE.2)
C    1   WRITE(8,'(A,3I5,1P,2E12.4)')
C    1 ' NSUBLA,K,J2,T(K),TL(J2)=',NSUBLA,K,J2,T(K),TL(J2)
      IF (IMTEMP.NE.0.AND.ISTIF(ILOOP).NE.5.AND.I.LE.IWEBM
     1               .AND.TEMP(2,ILOOP).NE.TEMP(1,ILOOP)) THEN
         ZDEEP = TTOT + 0.5*TL(J2)
         ACOEF = (TEMP(1,ILOOP) - TEMP(2,ILOOP))/TSKIN
         BCOEF = TEMP(2,ILOOP)
         TLOCAL = ACOEF*ZDEEP + BCOEF
         DO 23 INPROP = 1,15
            CALL PROPNO(ISOMAT(M),ISOEFF(M),INPROP,IPROP)
            CALL INTERP(IFILE,10,TEMPJ(1,IPROP,M),FTEMPJ(1,IPROP,M),
     1                  TLOCAL,FACTOR(INPROP,M))
C           WRITE(8,*)' M,IPROP,TEMPJ(1,IPROP,M),TEMPJ(2,IPROP,M)=',
C    1                  M,IPROP,TEMPJ(1,IPROP,M),TEMPJ(2,IPROP,M)
C           WRITE(8,*)' M,IPROP,FTEMPJ(1,IPROP,M),FTEMPJ(2,IPROP,M)=',
C    1                  M,IPROP,FTEMPJ(1,IPROP,M),FTEMPJ(2,IPROP,M)
C           WRITE(8,*)' INODE,INPROP,IPROP,M,TLOCAL,FACTOR(INPROP,M)=',
C    1                  INODE,INPROP,IPROP,M,TLOCAL,FACTOR(INPROP,M)
   23    CONTINUE
      ELSE
         TLOCAL = TEMP(I,ILOOP)
         CALL MOVER(FMULT(1,M,I,ILOOP),1,FACTOR(1,M),1,20)
      ENDIF
C END MAR 1995
C
      ACRACK = ABS(CRACK(J,I,ILOOP))
      BCRACK = ACRACK
C
C  MODIFYING THIS SECTION (ACRACK, BCRACK, CCRACK) 22 NOVEMBER, 1986
C  IN ORDER TO GET SOME AGREEMENT WITH SPIER'S GRAPHITE-EPOXY PLATE TESTS.
C     CCRACK = SQRT(SQRT(ACRACK))
      CCRACK = SQRT(ACRACK)
C     IF (CCRACK.LT.0.95) CCRACK = 0.95
      IF (CCRACK.LT.0.5) CCRACK = 0.5
C BEG MAR 1995
      E1L(J2) = CCRACK*E1(M)*FACTOR(1,M)
      IF (CRACK(J,I,ILOOP).LT.0.) E1L(J2) = E1(M)*FACTOR(1,M)
      E2L(J2) = BCRACK**2*E2(M)*FACTOR(2,M)
       GL(J2) =  BCRACK**2*G(M)*FACTOR(3,M)
      GT1(J2) = G13(M)*FACTOR(5,M)
      GT2(J2) = ACRACK*G23(M)*FACTOR(6,M)
      U12L(J2)= BCRACK*FNU(M)*FACTOR(4,M)
C     WRITE(8,*)' ISTIF(ILOOP),IMTEMP,M,I,J,J2,K,ILOOP,T(K)=',
C    1            ISTIF(ILOOP),IMTEMP,M,I,J,J2,K,ILOOP,T(K)
C
C  END OF ACRACK, BCRACK, CCRACK STUFF...
C
      RHOL(J2)= DENS(M)*FACTOR(14,M)
C   THICKNESS MOVED UP FOR THERMAL COMPUTATIONS
      ZETL(J2)= ANGLE(K)
      A1TH = ALPHA1(M)*FACTOR(7,M)
      A2TH = ALPHA2(M)*FACTOR(8,M)
      TCURE = -CURETP(M)
      THALL = TCURE + TLOCAL
      A1L(J2) = A1TH*THALL
      A2L(J2) = A2TH*THALL
      A1CUR(J2) = A1TH*TCURE
      A2CUR(J2) = A2TH*TCURE
C END MAR 1995
C
      TTOT = TTOT + TL(J2)
      GT1AVE = GT1AVE + GT1(J2)*TL(J2)
      GT2AVE = GT2AVE + GT2(J2)*TL(J2)
C
C BEG MAR 1995
   29 CONTINUE
      NLTOT = J2
C END MAR 1995
   30 CONTINUE
C
      GT1AVE = GT1AVE/TTOT
      GT2AVE = GT2AVE/TTOT
C BEG MAR 1995
      DO 35 J = 1,NLTOT
C END MAR 1995
         IF (GT1(J).LT.(.001*GT1AVE)) GT1(J) = .001*GT1AVE
         IF (GT2(J).LT.(.001*GT2AVE)) GT2(J) = .001*GT2AVE
   35 CONTINUE
C
         IF (ILOOP.EQ.1) THEN
           ZREF = 0.
C BEG JULY 1989
           IF (I.EQ.2.AND.ISTIF(1).NE.5) ZREF = FMID*TX(1)/2.
C END JULY 1989
C BEG MAR 1995
           CALL CFB1(NLTOT,ZREF,E1L,E2L,GL,U12L,RHOL,TL,ZETL,CX(1,1,I),
C END MAR 1995
C BEG 26 JAN 1989
     1     TX(I),A1L,A2L,THERMX(1,I),GT1,GT2,GTX(1,I),FACT,
C BEG AUG 1996
     1     A1CUR,A2CUR,THCURX(1,I),0)
C END AUG 1996
C BEG JUN 1996
           ECCREF = -0.5*(CX(1,4,I)/CX(1,1,I) +CX(2,5,I)/CX(2,2,I))
           IF (IMOD.EQ.0) THEN
              ICXY(I,ILOOP) = 0
              IF (ABS(ECCREF).GT.0.01*TX(I)) ICXY(I,ILOOP) = 1
           ENDIF
           IF (ICXY(I,ILOOP).EQ.1) THEN
            UNBAL(I,ILOOP) = ECCREF
C BEG OCT 1996
            DBEND1(I,ILOOP) = -CX(1,4,I)/CX(1,1,I)
            DBEND2(I,ILOOP) = -CX(2,5,I)/CX(2,2,I)
            IF (IPCIJ.GT.0.AND.IMOD.EQ.0.AND.ICXY(I,ILOOP).EQ.1)
     1         WRITE(IFILE,36) I, ECCREF, CX(1,4,I), CX(2,5,I),
     1                         DBEND1(I,ILOOP),DBEND2(I,ILOOP)
   36       FORMAT(/' **** NOTE: Skin-stringer module Isegment',I2,
     1    ' has unbalanced laminate:'/
     1    ' Shift reference surface by amount, ECCREF=',1PE12.4,
     1    ' and recompute Cij'/
     1    ' Original eccentricity terms, Cx(1,4),Cx(2,5)=',1P2E12.4/
     1    ' Axial neutral plane shift,          -C14/C11=',1PE12.4/
     1    ' Hoop  neutral plane shift,          -C25/C22=',1PE12.4)
C END OCT 1996
            CALL CFB1(NLTOT,ECCREF,E1L,E2L,GL,U12L,RHOL,TL,ZETL,
     1      CX(1,1,I),TX(I),A1L,A2L,THERMX(1,I),GT1,GT2,GTX(1,I),FACT,
C BEG AUG 1996
     1      A1CUR,A2CUR,THCURX(1,I),0)
C END AUG 1996
           ENDIF
C END JUN 1996
           COCUR1 = ICOCUR(1)
           DO 37 J = 1,6
              THSMRX(J,I) = THERMX(J,I) -(1.-COCUR1)*THCURX(J,I)
   37      CONTINUE
           CALL STRTHM(14,1,ETHRMX(1,I),CX(1,1,I),CSINV,THERMX(1,I))
           CALL STRTHM(15,0,ETSMRX(1,I),CX(1,1,I),CSINV,THSMRX(1,I))
C END 26 JAN 1989
C BEG AUG 1991
           CTEST1 = ABS(CX(1,6,I))/SQRT(CX(1,1,I)*CX(6,6,I))
           CTEST2 = ABS(CX(2,6,I))/SQRT(CX(2,2,I)*CX(6,6,I))
C BEG AUG 1992
           IF (ISOGRD.EQ.0.AND.IMOD.EQ.0
     1      .AND.(CTEST1.GT.0.1.OR.CTEST2.GT.0.1)) WRITE(IFILE,38) I
C END AUG 1992
   38      FORMAT(' ************** WARNING ************************'/
     1    ' ************** WARNING ************************'/
     1    ' SKIN-STRINGER MODULE SEGMENT NO.',I2,' HAS UNBALANCED'/
C BEG OCT 1991
     1    ' ANGLE PLIES. BUCKLING AND POSTBUCKLING PREDICTIONS MAY'/
C END OCT 1991
     1    ' BE UNCONSERVATIVE BY AN AMOUNT THAT MAY BE UNACCEPTABLE.'/
     1    ' COMPARE THE PANDA2 RESULTS WITH RESULTS FROM STAGS.'/
     1    ' ************** END WARNING ************************'/
     1    ' ************** END WARNING ************************'/)
C END AUG 1991
C BEG AUG 1992
           IF (IPCIJ.GT.0.AND.IMOD.EQ.0) THEN
            IF (ISOGRD.EQ.0) WRITE(IFILE,40) I,PARTS(I,1)
            IF (ISOGRD.EQ.1) WRITE(IFILE,41) I,PARTS(I,1)
C BEG JUN 1996
C23456789012345678901234567890123456789012345678901234567890123456789012
   40       FORMAT(/' UNIQUE SKIN-STRINGER MODULE iSEGMENT NO.',I2,': ',
     1      A15,15X,'  THERMAL {NT}  ETHERM {ET}')
   41       FORMAT(/' UNIQUE SKIN-ISOGRID  MODULE iSEGMENT NO.',I2,': ',
     1      A15,15X,'  THERMAL {NT}  ETHERM {ET}')
C END JUN 1996
           ENDIF
C END AUG 1992
           IF (IMOD.EQ.0)
     1     CALL OUTCIJ(0,IPCIJ,IFILE,CX(1,1,I),THERMX(1,I),ETHRMX(1,I))
C BEG JUN 1996
           IF (ISANDW(I,ILOOP).GT.1.AND.ISANDW(I,ILOOP).LT.NLAY) THEN
C   first do top (or leftmost) face sheet...
              TXFF1(I) = 0.0
              NLAYS = ISANDW(I,ILOOP) - 1
              NLTOTS = NLTOT
              NLTOT = 0
              DO 43 J = 1,NLAYS
                 NLTOT = NLTOT + NSUBLR(J)
                 K = LTYPE(J,I,ILOOP)
                 TXFF1(I) = TXFF1(I) + T(K)
   43         CONTINUE
              ZREF = 0.
              CALL CFB1(NLTOT,ZREF,E1L,E2L,GL,U12L,RHOL,TL,ZETL,
     1                  CXFF1(1,1,I),TXFF1(I),A1L,A2L,THEDUM(1,I),
     1                  GT1,GT2,GTXF1(1,I),FACT,A1CUR,A2CUR,
C BEG AUG 1996
     1                  THCURD(1,I),0)
C END AUG 1996
              IF (IMOD.EQ.0)
     1        CALL OUTCIJ(9,IPCIJ,IFILE,CXFF1(1,1,I),THEDUM(1,I),
     1                    ETHDUM(1,I))
C
C   next do bottom (or rightmost) face sheet...
              J = ISANDW(I,ILOOP)
              K = LTYPE(J,I,ILOOP)
              TXFF2(I) = TX(I) - TXFF1(I) - T(K)
              NSTART = NLTOT + NSUBLR(J) + 1
              NLTOT = NLTOTS - NSTART + 1
              ZREF = 0.
              CALL CFB1(NLTOT,ZREF,E1L(NSTART),E2L(NSTART),GL(NSTART),
     1                  U12L(NSTART),RHOL(NSTART),TL(NSTART),
     1                  ZETL(NSTART),CXFF2(1,1,I),TXFF2(I),
     1                  A1L(NSTART),A2L(NSTART),THEDUM(1,I),
     1                  GT1(NSTART),GT2(NSTART),GTXF2(1,I),FACT,
C BEG AUG 1996
     1                  A1CUR(NSTART),A2CUR(NSTART),THCURD(1,I),0)
C END AUG 1996
              IF (IMOD.EQ.0)
     1        CALL OUTCIJ(10,IPCIJ,IFILE,CXFF2(1,1,I),THEDUM(1,I),
     1                    ETHDUM(1,I))
           ENDIF
C          End of IF (ISANDW(I,ILOOP)
C END JUN 1996
C BEG FEB 2004
C BEG JUN 2004
           TX0(I) = TTOT
           TY0(1) = TX0(1)
C          IF (NPRT.GE.2)
C    1            WRITE(8,'(A,I5,1P,E12.4)')' I,TX0(I)=',I,TX0(I)
           CALL MOVER(CX(1,1,I),1,CX0(1,1,I),1,36)
           IF (ISTIF(1).EQ.0) CALL MOVER(CX(1,1,1),1,CX0(1,1,2),1,36)
           IF (ILOOP.EQ.1.AND.I.EQ.1) THEN
              CALL CGCIJP(CX0(1,1,1),CY0(1,1,1))
              CALL CGCIJP(CX0(1,1,1),CY0(1,1,2))
           ENDIF
           CALL MOVER(CX(1,1,I),1,CX0(1,1,I),1,36)
           CALL MOVER(THERMX(1,I),1,THRMX0(1,I),1,6)
           CALL MOVER(THCURX(1,I),1,TCURX0(1,I),1,6)
C END JUN 2004
           IF (KLAYER(I,ILOOP).NE.0) THEN
              BX = B(2) - BB2(2)
              BY = B(1) - BB2(1)
              IF (I.EQ.IWEBP) BY = W(ILOOP)
              IF (I.EQ.IWEB) THEN
                 IF (ISTIF(ILOOP).LE.3) BY = H(ILOOP)
                 IF (ISTIF(ILOOP).EQ.4) XSLANT=(W2(ILOOP)-W(ILOOP))/2.
                 IF (ISTIF(ILOOP).EQ.5) 
     1                              XSLANT=(B(ILOOP)-2.*BB2(ILOOP))/2.
                 BY = SQRT(XSLANT**2 + H(ILOOP)**2)
              ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012

              IF (I.EQ.IWEBM) THEN
                 IF (ISTIF(ILOOP).LE.3) BY = BB2(ILOOP)
                 IF (ISTIF(ILOOP).EQ.4) BY = W2(ILOOP)
                 IF (ISTIF(ILOOP).EQ.5) BY = B(ILOOP) - BB2(ILOOP)
              ENDIF
              TXX(1,I) = TTOT
              TXX(2,I) = TTOT
              GTX0(1,I) = GTX(1,I)
              GTX0(2,I) = GTX(2,I)
              CALL SUBSTF(IFILE,IWEB,IPCIJ,I,ILOOP,TTOT,UNBAL(I,ILOOP),
     1        CX0(1,1,I),CX(1,1,I),TEMP,FACTOR,FMULT,THRMX0(1,I),
     1        THERMX(1,I),ETHRMX(1,I),TCURX0(1,I),THCURX(1,I),
     1        GTX0(1,I),GTX(1,I),BX,BY,SPCNG(1,I,ILOOP),TXX(1,I))
              TX(I) = TXX(1,I)
           ENDIF
C END FEB 2004
C BEG OCT 2004
           IF (I.EQ.1) THEN
              GTSSUB(1,5) = GTX(1,1)
              GTSSUB(2,5) = GTX0(1,1)
           ENDIF
C END OCT 2004
         ENDIF
C        End of IF (ILOOP.EQ.1)
C
         IF (ILOOP.EQ.2) THEN
C BEG JUN 2004
C          IF (NPRT.GE.2) WRITE(8,'(A,1P,4E12.4)')
C    1   ' E1L(1),E2L(1),GL(1),TL(1)=',E1L(1),E2L(1),GL(1),TL(1)
C END JUN 2004
           ZREF = 0.
C BEG JULY 1989
           IF (I.EQ.2.AND.ISTIF(2).NE.5) ZREF = FMID*TY(1)/2.
C END JULY 1989
C BEG MAR 1995
           CALL CFB1(NLTOT,ZREF,E1L,E2L,GL,U12L,RHOL,TL,ZETL,CY(1,1,I),
C END MAR 1995
C BEG 26 JAN 1989
     1     TY(I),A1L,A2L,THERMY(1,I),GT1,GT2,GTY(1,I),FACT,
C BEG AUG 1996
     1     A1CUR,A2CUR,THCURY(1,I),0)
C END AUG 1996
C BEG JUN 2004
C BEG MAY 2005
C          IF (NPRT.GE.2) THEN
C             WRITE(8,'(A,2I5,1P,E12.4,A)')
C    1      ' ILOOP,ISEG,B2=',ILOOP,I,B2,'; CY(1,1,I)='
C             CALL OUTCIJ(0,1,8,CY(1,1,I),TXDUM,ETXDUM)
C          ENDIF
C END MAY 2005
C END JUN 2004
C BEG JUN 1996
           ECCREF = -0.5*(CY(1,4,I)/CY(1,1,I) +CY(2,5,I)/CY(2,2,I))
           IF (IMOD.EQ.0) THEN
              ICXY(I,ILOOP) = 0
              IF (ABS(ECCREF).GT.0.01*TY(I)) ICXY(I,ILOOP) = 1
           ENDIF
           IF (ICXY(I,ILOOP).EQ.1) THEN
            UNBAL(I,ILOOP) = ECCREF
C BEG OCT 1996
            DBEND1(I,ILOOP) = -CY(1,4,I)/CY(1,1,I)
            DBEND2(I,ILOOP) = -CY(2,5,I)/CY(2,2,I)
            IF (IPCIJ.GT.0.AND.IMOD.EQ.0.AND.ICXY(I,ILOOP).EQ.1)
     1         WRITE(IFILE,435) I, ECCREF, CY(1,4,I), CY(2,5,I),
     1                         DBEND1(I,ILOOP),DBEND2(I,ILOOP)
  435       FORMAT(/' **** NOTE: Skin-ring module Isegment',I2,
     1    ' has unbalanced laminate:'/
     1    ' Shift reference surface by amount, ECCREF=',1PE12.4,
     1    ' and recompute Cij'/
     1    ' Original eccentricity terms, Cy(1,4),Cy(2,5)=',1P2E12.4/
     1    ' axial (ringaxis) neutral planeshift,-C14/C11=',1PE12.4/
     1    ' transverse neutral plane shift,     -C25/C22=',1PE12.4)
C END OCT 1996
            CALL CFB1(NLTOT,ECCREF,E1L,E2L,GL,U12L,RHOL,TL,ZETL,
     1      CY(1,1,I),TY(I),A1L,A2L,THERMY(1,I),GT1,GT2,GTY(1,I),FACT,
C BEG AUG 1996
     1      A1CUR,A2CUR,THCURY(1,I),0)
C END AUG 1996
           ENDIF
C END JUN 1996
           COCUR2 = ICOCUR(2)
           DO 45 J = 1,6
              THSMRY(J,I) = THERMY(J,I) -(1.-COCUR2)*THCURY(J,I)
   45      CONTINUE
           CALL STRTHM(16,1,ETHRMY(1,I),CY(1,1,I),CSINV,THERMY(1,I))
           CALL STRTHM(17,0,ETSMRY(1,I),CY(1,1,I),CSINV,THSMRY(1,I))
C END 26 JAN 1989
C BEG AUG 1991
           CTEST1 = ABS(CY(1,6,I))/SQRT(CY(1,1,I)*CY(6,6,I))
           CTEST2 = ABS(CY(2,6,I))/SQRT(CY(2,2,I)*CY(6,6,I))
           IF (IMOD.EQ.0.AND.(CTEST1.GT.0.1.OR.CTEST2.GT.0.1))
     1         WRITE(IFILE,48) I
   48      FORMAT(' ************** WARNING ************************'/
     1    ' ************** WARNING ************************'/
     1    ' SKIN-RING MODULE SEGMENT NO.',I2,' HAS UNBALANCED'/
C BEG OCT 1991
     1    ' ANGLE PLIES. BUCKLING AND POSTBUCKLING PREDICTIONS MAY'/
C END OCT 1991
     1    ' BE UNCONSERVATIVE BY AN AMOUNT THAT MAY BE UNACCEPTABLE.'/
     1    ' COMPARE THE PANDA2 RESULTS WITH RESULTS FROM STAGS.'/
     1    ' ************** END WARNING ************************'/
     1    ' ************** END WARNING ************************'/)
C END AUG 1991
           IF (IPCIJ.GT.0.AND.IMOD.EQ.0) WRITE(IFILE,50) I,PARTS(I,2)
C BEG JUN 1996
   50      FORMAT(/' UNIQUE SKIN-RING MODULE iSEGMENT NO.',I2,': ',
     1     A15,18X,'  THERMAL {NT}  ETHERM {ET}')
C END JUN 1996
           IF (IMOD.EQ.0)
     1     CALL OUTCIJ(0,IPCIJ,IFILE,CY(1,1,I),THERMY(1,I),ETHRMY(1,I))
C BEG JUN 1996
           IF (ISANDW(I,ILOOP).GT.1.AND.ISANDW(I,ILOOP).LT.NLAY) THEN
C   first do top (or leftmost) face sheet...
              TYFF1(I) = 0.0
              NLAYS = ISANDW(I,ILOOP) - 1
              NLTOTS = NLTOT
              NLTOT = 0
              DO 44 J = 1,NLAYS
                 NLTOT = NLTOT + NSUBLR(J)
                 K = LTYPE(J,I,ILOOP)
                 TYFF1(I) = TYFF1(I) + T(K)
   44         CONTINUE
              ZREF = 0.
              CALL CFB1(NLTOT,ZREF,E1L,E2L,GL,U12L,RHOL,TL,ZETL,
     1                  CYFF1(1,1,I),TYFF1(I),A1L,A2L,THEDUM(1,I),
     1                  GT1,GT2,GTYF1(1,I),FACT,A1CUR,A2CUR,
C BEG AUG 1996
     1                  THCURD(1,I),0)
C END AUG 1996
              IF (IMOD.EQ.0)
     1        CALL OUTCIJ(11,IPCIJ,IFILE,CYFF1(1,1,I),THEDUM(1,I),
     1                    ETHDUM(1,I))
C
C   next do bottom (or rightmost) face sheet...
              J = ISANDW(I,ILOOP)
              K = LTYPE(J,I,ILOOP)
              TYFF2(I) = TY(I) - TYFF1(I) - T(K)
              NSTART = NLTOT + NSUBLR(J) + 1
              NLTOT = NLTOTS - NSTART + 1
              ZREF = 0.
              CALL CFB1(NLTOT,ZREF,E1L(NSTART),E2L(NSTART),GL(NSTART),
     1                  U12L(NSTART),RHOL(NSTART),TL(NSTART),
     1                  ZETL(NSTART),CYFF2(1,1,I),TYFF2(I),
     1                  A1L(NSTART),A2L(NSTART),THEDUM(1,I),
     1                  GT1(NSTART),GT2(NSTART),GTYF2(1,I),FACT,
C BEG AUG 1996
     1                  A1CUR(NSTART),A2CUR(NSTART),THCURD(1,I),0)
C END AUG 1996
              IF (IMOD.EQ.0)
     1        CALL OUTCIJ(12,IPCIJ,IFILE,CYFF2(1,1,I),THEDUM(1,I),
     1                    ETHDUM(1,I))
           ENDIF
C          End of IF (ISANDW(I,ILOOP)
C END JUN 1996
C BEG FEB 2004
C BEG JUN 2004
           IF (I.EQ.2.AND.I.EQ.ISTART) THEN
              TY0(1) = TX0(1)
              CALL CGCIJP(CX(1,1,1),CY(1,1,1))
           ENDIF
           IF (I.EQ.3.AND.I.EQ.ISTART) THEN
              TY0(1) = TX0(1)
              TY0(2) = TX0(1)
              CALL CGCIJP(CX(1,1,1),CY(1,1,1))
              CALL CGCIJP(CX(1,1,1),CY(1,1,2))
           ENDIF
           CALL MOVER(CY(1,1,I),1,CY0(1,1,I),1,36)
           CALL MOVER(THERMY(1,I),1,THRMY0(1,I),1,6)
           CALL MOVER(THCURY(1,I),1,TCURY0(1,I),1,6)
C          IF (NPRT.GE.2) WRITE(8,'(A,3I5)')
C    1   ' I,ILOOP,KLAYER(I,ILOOP)=',I,ILOOP,KLAYER(I,ILOOP)
C END JUN 2004
           IF (KLAYER(I,ILOOP).NE.0) THEN
              BX = B(1) - BB2(1)
              BY = B(2) - BB2(2)
              IF (I.EQ.IWEBP) BY = W(ILOOP)
              IF (I.EQ.IWEB) THEN
                 IF (ISTIF(ILOOP).LE.3) BY = H(ILOOP)
                 IF (ISTIF(ILOOP).EQ.4) XSLANT=(W2(ILOOP)-W(ILOOP))/2.
                 IF (ISTIF(ILOOP).EQ.5) 
     1                              XSLANT=(B(ILOOP)-2.*BB2(ILOOP))/2.
                 BY = SQRT(XSLANT**2 + H(ILOOP)**2)
              ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012

              IF (I.EQ.IWEBM) THEN
                 IF (ISTIF(ILOOP).LE.3) BY = BB2(ILOOP)
                 IF (ISTIF(ILOOP).EQ.4) BY = W2(ILOOP)
                 IF (ISTIF(ILOOP).EQ.5) BY = B(ILOOP) - BB2(ILOOP)
              ENDIF
              TY0(I) = TTOT
              TYY(1,I) = TTOT
              TYY(2,I) = TTOT
              GTY0(1,I) = GTY(1,I)
              GTY0(2,I) = GTY(2,I)
              CALL SUBSTF(IFILE,IWEB,IPCIJ,I,ILOOP,TTOT,UNBAL(I,ILOOP),
     1        CY0(1,1,I),CY(1,1,I),TEMP,FACTOR,FMULT,THRMY0(1,I),
     1        THERMY(1,I),ETHRMY(1,I),TCURY0(1,I),THCURY(1,I),
     1        GTY0(1,I),GTY(1,I),BX,BY,SPCNG(1,I,ILOOP),TYY(1,I))
              TY(I) = TYY(1,I)
           ENDIF
C END FEB 2004
         ENDIF
C        End of IF (ILOOP.EQ.2)
C
C BEG 26 JAN 1989
C BEG JULY 1989
      IF (I.EQ.IWEB.AND.ILOOP.EQ.1) THEN
         DO 55 INODE = 1,NNODES
            CALL MOVER(CX(1,1,IWEB),1,CX3(1,1,INODE),1,36)
            CALL MOVER(THERMX(1,IWEB),1,THRMX3(1,INODE),1,6)
            CALL MOVER(THSMRX(1,IWEB),1,TSMRX3(1,INODE),1,6)
            CALL MOVER(ETHRMX(1,IWEB),1,ETRMX3(1,INODE),1,6)
            CALL MOVER(ETSMRX(1,IWEB),1,ESMRX3(1,INODE),1,6)
            CALL MOVER(GTX(1,IWEB),1,GTX3(1,INODE),1,2)
   55    CONTINUE
      ENDIF
      IF (I.EQ.IWEB.AND.ILOOP.EQ.2) THEN
         DO 58 INODE = 1,NNODES
            CALL MOVER(CY(1,1,IWEB),1,CY3(1,1,INODE),1,36)
            CALL MOVER(THERMY(1,IWEB),1,THRMY3(1,INODE),1,6)
            CALL MOVER(THSMRY(1,IWEB),1,TSMRY3(1,INODE),1,6)
            CALL MOVER(ETHRMY(1,IWEB),1,ETRMY3(1,INODE),1,6)
            CALL MOVER(ETSMRY(1,IWEB),1,ESMRY3(1,INODE),1,6)
            CALL MOVER(GTY(1,IWEB),1,GTY3(1,INODE),1,2)
   58    CONTINUE
      ENDIF
C
C END JULY 1989
C END 26 JAN 1989
C
   60 CONTINUE
  100 CONTINUE
C
C BEG JUN 2004
      TBASE(1) = TX0(1)
      TBASE(2) = 0.
C END JUN 2004
C BEG JULY 1989
      IF (B2.EQ.0.) TY(2) = TX(1)
C BEG FEB 2007
C     WRITE(8,'(A,I5,A,1P,5E12.4)')
C    1' KLAYER(1,2)=',KLAYER(1,2),',(TY(I),I=1,5)=',
C    1                              (TY(I),I=1,5)
      IF (KLAYER(1,1).EQ.0) THEN
         CALL MOVER(TY,1,TY0,1,5)
      ENDIF
C END FEB 2007
C BEG JUN 2004
      IF (NSEG(1).GT.1.AND.ISTIF(1).NE.5) TBASE(1) = TX0(2)
      IF (NSEG(2).GT.1.AND.ISTIF(2).NE.5) TBASE(2) = TY0(2)
C END JUN 2004
C END JULY 1989
C
      RETURN
      END
C
C
C
C=DECK      CFB1  
      SUBROUTINE CFB1(NLAY,ZREF,E1L,E2L,GL,U12L,RHOL,TL,ZETL,CCC,TD,
C BEG 26 JAN 1989
     1                A1L,A2L,THERM,GT1,GT2,GEFF,FACT,
C BEG AUG 1996
     1                A1CUR,A2CUR,THCUR,IISOGR)
C END AUG 1996
C END 26 JAN 1989
C
C  PURPOSE IS TO CALCULATE C(i,j) AND THERM(J) FOR ONE MULTI-LAYERED
C  SKIN.  THERM(J) CONTAINS THERMAL RESULTANT AND MOMENT FOR UNIT
C  UNIFORM DELTA-TEMPERATURE  (ONE DEGREE RISE ABOVE AMBIENT).
C
C  ALSO (AUG 1984) CALCULATE EFFECTIVE TRANSVERSE SHEAR STIFFNESSES,
C  GEFF(1) AND GEFF(2).
C
      DIMENSION E1L(99),E2L(99),GL(99),ZETL(99),U12L(99),RHOL(99)
      DIMENSION A1L(99),A2L(99),THL(3),THERM(6)
C BEG 26 JAN 1989
      DIMENSION A1CUR(99),A2CUR(99),THC(3),THCUR(6)
C END 26 JAN 1989
      DIMENSION GT1(99),GT2(99),GEFF(2),CT(3,3),CTP(3,3)
      DIMENSION S(99),R(3,3),TL(99),CCC(6,6)  
      DIMENSION CL(3,3),CP(3,3)     
      DIMENSION CCG(3,3),K1(99,2),K2(99,2),K3(99,2),GINTEG(2)
      DIMENSION GNUM(2),SHFACT(2),GTRANS(99,2)
      REAL K1,K2,K3
      DATA DTR,RTD,PI /.017453293, 57.29577951, 3.141592654/
C
      CALL MOVER(0.,0,CCC,1,36)
      CALL MOVER(0.,0,CCG,1,9)
      CALL MOVER(0.,0,THERM,1,6)
      CALL MOVER(0.,0,THCUR,1,6)
      GEFF(1) = 0.
      GEFF(2) = 0.
      GINTEG(1) = 0.
      GINTEG(2) = 0.
      GNUM(1) = 0.
      GNUM(2) = 0.
      SHFACT(1) = 5./6.
      SHFACT(2) = 5./6.
      B = 1.
      A = 1.
      C = 0.
C
      TD = 0.     
      TMS = 0.    
      DO 10 L=1,NLAY    
      U21 = 0.
      IF (E2L(L).GT.0.) U21 = U12L(L)*E1L(L)/E2L(L)   
      UD = 1.-U12L(L)*U21     
      S(L) = E1L(L)/UD  
      TD = TD+TL(L)     
   10 TMS = TMS+TL(L)*RHOL(L) 
C
C BEG JUN 1996
C     ECCREF = FACT*(0.5*TD - ZREF)
C     IF (ZREF.EQ.0.) ECCREF = 0.
      ECCREF = ZREF
C END JUN 1996
C BEG AUG 1996
      IF (IISOGR.EQ.1) ECCREF = 0.5*TD - ZREF
C END AUG 1996
      BI = .5*(TD-TL(1))
      KT = 1
C     ------------------------------------------------------------------
C       INTEGRATION THROUGH TOTAL THICKNESS     
C     ------------------------------------------------------------------
      DO 100 L=1,NLAY   
      CALL MOVER (0,0,CL,1,9) 
      CALL MOVER (0,0,CT,1,9)
      CALL MOVER (0,0,R,1,9)  
      H = - ECCREF - BI   
C     IF (E1L(L).EQ.0.) GO TO 77    
C     ------------------------------------------------------------------
C       LAYER CONSTITUTIVE MATRIX (W.R.T. PHI1(L),PHI2(L))  
C     ------------------------------------------------------------------
      CL(1,1) = S(L)    
      CL(1,2) = U12L(L)*S(L)  
C BEG NOV 2001 (following line moved down; doesn't compile on mercury2)
C     CL(2,1) = CL(1,2) 
C END NOV 2001
      CL(2,2) = 0.
      IF (E1L(L).GT.0.) CL(2,2) = S(L)*E2L(L)/E1L(L)  
      CL(3,3) = GL(L)   
C BEG NOV 2001 (following line from above; didn't compile on mercury2)
      CL(2,1) = CL(1,2)
C END NOV 2001
C
C  TRANSVERSE SHEAR STIFFNESSES
C
      CT(1,1) = GT1(L)
      CT(2,2) = GT2(L)
C
C     COMPUTE STRAIN TRANSFORMATION MATRIX FROM ELEMENT TO FIBER AXES   
C
      ZA = ZETL(L)*DTR  
      CALL RTRSF (A,B,C,ZA,R) 
      CALL CONTRA (R,3,3,CL,3,CP)   
C BEG APR 1993
C     CALL CONTRA (R,3,3,CT,3,CTP)
      CTP(1,1) = R(1,1)*CT(1,1) + R(2,1)*CT(2,2)
      CTP(2,2) = R(1,2)*CT(1,1) + R(2,2)*CT(2,2)
C END APR 1993
C     WRITE(8,*)' L, TL(L),GT1(L),GT2(L)=', L,TL(L),GT1(L),GT2(L)
C     WRITE(8,*)' L, CT(1,1),CT(2,2)    =', L, CT(1,1),CT(2,2)
C     WRITE(8,*)' L, CTP(1,1),CTP(2,2)  =', L, CTP(1,1),CTP(2,2)
C
C  THERMAL RESULTANTS, NT, AND MOMENTS, MT...
C
C TOTAL...
      ET1 = CL(1,1)*A1L(L)+CL(1,2)*A2L(L)
      ET2 = CL(2,1)*A1L(L)+CL(2,2)*A2L(L)
      THL(1) = R(1,1)*ET1+R(2,1)*ET2
      THL(2) = R(1,2)*ET1+R(2,2)*ET2
      THL(3) = R(1,3)*ET1+R(2,3)*ET2
C
C BEG 26 JAN 1989
C FROM CURING...
      ET1 = CL(1,1)*A1CUR(L)+CL(1,2)*A2CUR(L)
      ET2 = CL(2,1)*A1CUR(L)+CL(2,2)*A2CUR(L)
      THC(1) = R(1,1)*ET1+R(2,1)*ET2
      THC(2) = R(1,2)*ET1+R(2,2)*ET2
      THC(3) = R(1,3)*ET1+R(2,3)*ET2
C
C END 26 JAN 1989
   72 DZ = TL(L)  
      ZDZ = H*DZ  
      Z2DZ = DZ*(H**2+DZ**2/12.)    
C     ------------------------------------------------------------------
C       ACCUMULATE CONSTITUTIVE MATRIX (W.R.T. XP,YP) 
C     ------------------------------------------------------------------
      DO 1000 I=1,3     
      DO 1000 J=1,3
C BEG APR 1993
C     CCG(I,J) = CCG(I,J) + CTP(I,J)*DZ
C END APR 1993
      CCC(I,J) = CCC(I,J)+CP(I,J)*DZ
      CCC(I,J+3) = CCC(I,J+3)-CP(I,J)*ZDZ 
      CCC(I+3,J+3) = CCC(I+3,J+3)+CP(I,J)*Z2DZ  
C     WRITE(8,998) L,I,J,CP(I,J),CCC(I,J),CCC(I,J+3),CCC(I+3,J+3)
C 998 FORMAT(' L,I,J,CP,CCCIJ,CCCIJ+,CCCI+J+=',3I4,1P4E12.4)
 1000 CONTINUE    
C
C  TRANSVERSE COMPLIANCES AND THERMAL TERMS...
C
      DO 1100 J = 1,2
         IF (CTP(J,J).LE.0.) THEN
            WRITE(8,*)' BAD VALUE FOR TRANSVERSE SHEAR MODULUS'
            WRITE(8,*)' LAYER, GT1, GT2=',L,GT1(L),GT2(L)
            WRITE(8,*)' CALCULATIONS TERMINATING IN SUB. CFB1.'
            CALL ERREX
         ENDIF
         GEFF(J) = GEFF(J) + TL(L)/CTP(J,J)
 1100 CONTINUE
C
      DO 1102 J = 1,3
C TOTAL...
         THERM(J) = THERM(J) + THL(J)*DZ
         THERM(J+3) = THERM(J+3) - THL(J)*ZDZ
C
C BEG 26 JAN 1989
C CURING...
         THCUR(J) = THCUR(J) + THC(J)*DZ
         THCUR(J+3) = THCUR(J+3) - THC(J)*ZDZ
C END 26 JAN 1989
C
 1102 CONTINUE
C
C  SOME TERMS NEEDED LATER FOR CALCULATING THE TRANSVERSE SHEAR
C  STIFFNESS COEFFICIENTS FOR X AND Y SHEARING. (FOR A HOMOGENEOUS
C  PLATE THE COEFFICIENTS ARE EQUAL TO 5/6).
C
C     ZL = H + TL(L)/2.
C     K1(L,1) = -CCC(1,4) -0.5*ZL*ZL*CP(1,1)
C     K1(L,2) = -CCC(2,5) -0.5*ZL*ZL*CP(2,2)
C     K2(L,1) = 0.5*CP(1,1)
C     K2(L,2) = 0.5*CP(2,2)
C     K3(L,1) = CCC(1,1) - ZL*CP(1,1)
C     K3(L,2) = CCC(2,2) - ZL*CP(2,2)
C     GTRANS(L,1) = CTP(1,1)
C     S(L,2) = CTP(2,2)
C     K4 = 2.*K2
C
C     IF (TD.GT.0.1) THEN
C        WRITE(6,*)' L,A1L(L),A2L(L)=',L,A1L(L),A2L(L)
C        WRITE(6,*)' CL(1,1),CL(1,2),CL(2,1),CL(2,2)=',
C    1C    C    C    CL(1,1),CL(1,2),CL(2,1),CL(2,2)
C        WRITE(6,*)' ET1,ET2=',ET1,ET2
C        WRITE(6,*)' R(1,1),R(1,2),R(2,1),R(2,2)=',
C    1C    C    C    R(1,1),R(1,2),R(2,1),R(2,2)
C        WRITE(6,*)' THL(1),THL(2),DZ,ZDZ=',THL(1),THL(2),DZ,ZDZ
C        WRITE(6,*)' THERM(1), THERM(2)=', THERM(1),THERM(2)
C     ENDIF
C
   77 IF (L.EQ.NLAY) GO TO 100
      BI = BI-.5*(TL(L)+TL(L+1))    
  100 CONTINUE    
C
C  CHANGE SIGN OF C(3,6) TO AGREE WITH BOSOR4 CONVENTION...
C
C     CCC(3,6) = - CCC(3,6)
C     CCC(6,3) =   CCC(3,6)
C
C  COMPLETE TRANSVERSE SHEAR STIFFNESS CALCULATION...
C
      GEFF(1) = TD/GEFF(1)
      GEFF(2) = TD/GEFF(2)
C     WRITE(8,*)' TD, GEFF(1),GEFF(2)=', TD,GEFF(1),GEFF(2)
C
C  SYMMETRIZE CCC...
C
      DO 1200 I = 1,6
      DO 1200 J = I,6
 1200 CCC(J,I) = CCC(I,J)
C
C  NEXT, CALCULATE THE TRANSVERSE SHEAR FACTORS FROM THE THEORY OF
C  BERT. (C. W. Bert, "Simplified analysis of static shear factors
C  for beams of nonhomogeneous cross section", J. Composite Materials,
C  Vol. 7, pp 525-529 (1973), Eq. (13) corrected (numerator should be
C  (AD - B**2)**2).  GINTEG is the integral in the denominator with
C  the factor (Ab - Ba)**2 in the integrand.
C
C     BI = 0.5*(TD - TL(1))
C     DO 200 L = 1,NLAY
C        H = -ECCREF - BI
C        DZ = TL(L)
C        ZDZ = H*DZ
C        Z2DZ = DZ*(H**2 + DZ**2/12.)
C        ZL = H + TL(L)/2.
C        ZLM= H - TL(L)/2.
C        Z3DZ = 0.25*(ZL**4 - ZLM**4)
C        Z4DZ = 0.20*(ZL**5 - ZLM**5)
C
C        DO 180 I = 1,2
C           A = CCC(I,I)
C           B = CCC(I,I+3)
C           FK1 = K1(L,I)
C           FK2 = K2(L,I)
C           FK3 = K3(L,I)
C           FK4 = 2.*FK2
C           CF1 = A*A*FK1*FK1 + B*B*FK3*FK3 -2.*A*B*FK1*FK3
C           CF2 = B*B*FK3*FK4 -2.*A*B*FK1*FK4
C           CF3 = 2.*A*A*FK1*FK2 +B*B*FK4*FK4 -2.*A*B*FK2*FK3
C           CF4 = -2.*A*B*FK2*FK4
C           CF5 = A*A*FK2*FK2
C           GINTEG(I) = GINTEG(I) + (CF1*DZ +CF2*ZDZ +CF3*Z2DZ
C    1                              +CF4*Z3DZ +CF5*Z4DZ)/GTRANS(L,I)
C           GNUM(I) = GNUM(I) +(A*FK1-B*FK3)*DZ
C    1                        - B*FK4*ZDZ + A*FK2*Z2DZ
C           WRITE(8,177) L,I,GTRANS(L,I),ZL,ZLM
C 177       FORMAT(' L,I,GTRANS,ZL,ZLM=',2I4,1P3E12.4)
C           IF (I.EQ.1) WRITE(8,178) L,A,B,FK1,FK2,FK3,DZ,GNUM(1)
C 178       FORMAT(' L,A,B,K1,K2,K3,DZ,GNUM=',I4,1P7E12.4)
C 180    CONTINUE
C        IF (L.EQ.NLAY) GO TO 200
C        BI = BI -.5*(TL(L) + TL(L+1))
C 200 CONTINUE
C
C  NOW WRITE THE TRANSVERSE SHEAR FACTORS FROM BERT'S 1973 PAPER
C  (EQ. (13), CORRECTED):
C
C     DO 300 I = 1,2
C
C        FNUM = (CCC(I,I)*CCC(I+3,I+3) - CCC(I,I+3)**2)**2
C        FNUM = GNUM(I)**2
C        SHFACT(I) = FNUM/(CCG(I,I)*GINTEG(I))
C        WRITE(8,*)' I,CCG(I,I),SHFACT(I)=',I,CCG(I,I),SHFACT(I)
C 300 CONTINUE
C
      RETURN
      END   
C
C
C
C=DECK      CONTRA
      SUBROUTINE CONTRA (T,MT,NT,A,MA,C)  
      DIMENSION T(MT,NT),A(MA,MA),C(NT,NT)
      IF(MT.NE.MA) GO TO 99   
      MC =NT*NT    
      CALL MOVER (0,0,C,1,MC) 
      DO 1 K=1,MA 
      DO 1 L=1,MA 
      V=A(K,L)    
      IF (V.EQ.0.) GO TO 1    
      DO 2 I=1,NT 
      DO 2 J=1,NT 
    2 C(I,J)=C(I,J)+T(K,I)*V*T(L,J) 
    1 CONTINUE    
      RETURN
   99 WRITE (6,111)     
  111 FORMAT (' * DIMENSIONS OF T AND A ARE INCONSISTENT IN'/
     1 ' SUBROUTINE CONTRA *')   
      CALL ERREX   
      END   
C
C
C
C=DECK      RTRSF 
      SUBROUTINE RTRSF(A,B,C,Z,R)   
      DIMENSION R(3,3)  
C    TRANSFORMATION MATRIX FOR STRAINS FROM NONORTHOGONAL TO ORTHOGONAL 
C          WITH ANGLE Z 
      D=A*A*B*B-C*C     
      IF(D.LE.0) GO TO 100    
      D=SQRT(D)   
      CS=C/D
      S=A*B/D     
      CZ=COS(Z)   
      SZ=SIN(Z)   
      B11=CZ-CS*SZ
      B12=-(CS*CZ+SZ)   
      B21=S*SZ    
      B22=S*CZ    
      R(1,1)=B11*B11    
      R(1,2)=B21*B21    
      R(1,3)=B11*B21    
      R(2,1)=B12*B12    
      R(2,2)=B22*B22    
      R(2,3)=B12*B22    
      R(3,1)=2.*B11*B12 
      R(3,2)=2.*B21*B22 
      R(3,3)=B11*B22+B21*B12  
      GO TO 101   
  100 CONTINUE    
      WRITE (6,200)     
  200 FORMAT (//,' ** IMPROPER SHELL GEOMETRY DETECTED BY RTRSF'/
     1 ' A**2*B**2-C**2=0 **')   
      CALL ERREX   
  101 CONTINUE    
      RETURN
      END   
C
C
C
C=DECK      ETHMOD
      SUBROUTINE ETHMOD(CS,ETHERM,THERMS,ICALL)
C
C  PURPOSE IS TO TRANSFORM THERMAL STRAINS AND MOMENTS TO CONFORM
C  TO THE ASSUMPTION THAT THERE ARE NO THERMAL CHANGES IN CURVATURE.
C
      DIMENSION CS(6,6),ETHERM(*),THERMS(*)
      DIMENSION ETCLMP(6),THCLMP(6)
C
C BEG APR 2007
C23456789012345678901234567890123456789012345678901234567890123456789012
C      WRITE(8,'(A,I3,1P,2E12.4)')
C    1' ETHMOD1: ICALL,ETHERM(4),ETHERM(5)=',ICALL,ETHERM(4),ETHERM(5)
C END APR 2007
      CALL MOVER(0.,0,ETCLMP,1,6)
      CALL MOVER(0.,0,THCLMP,1,6)
      F1 = CS(1,4)*ETHERM(4) + CS(1,5)*ETHERM(5)
      F2 = CS(2,4)*ETHERM(4) + CS(2,5)*ETHERM(5)
      DEN = CS(1,1)*CS(2,2)-CS(1,2)*CS(1,2)
      ETCLMP(1) = (CS(2,2)*F1 - CS(1,2)*F2)/DEN
      ETCLMP(2) = (CS(1,1)*F2 - CS(1,2)*F1)/DEN
      THCLMP(4) = CS(1,4)*ETCLMP(1) +CS(2,4)*ETCLMP(2)
     1           -CS(4,4)*ETHERM(4) -CS(4,5)*ETHERM(5)
      THCLMP(5) = CS(1,5)*ETCLMP(1) +CS(2,5)*ETCLMP(2)
     1           -CS(4,5)*ETHERM(4) -CS(5,5)*ETHERM(5)
      ETHERM(1) = ETHERM(1) + ETCLMP(1)
      ETHERM(2) = ETHERM(2) + ETCLMP(2)
      ETHERM(4) = 0.
      ETHERM(5) = 0.
      THERMS(4) = THERMS(4) + THCLMP(4)
      THERMS(5) = THERMS(5) + THCLMP(5)
C
C BEG APR 2007
C23456789012345678901234567890123456789012345678901234567890123456789012
C      WRITE(8,'(A,I3,1P,2E12.4)')
C    1' ETHMOD2: ICALL,ETHERM(4),ETHERM(5)=',ICALL,ETHERM(4),ETHERM(5)
C END APR 2007
      RETURN
      END
C
C
C
C=DECK      OUTCIJ
      SUBROUTINE OUTCIJ(ISMEAR,IPRINT,IFILE,C,THERM,ETHERM)
C
C  PURPOSE IS TO SYMMETRIZE THE CONSTITUTIVE MATRIX, C(i,j)
C  PURPOSE IS TO PRINT OUT CONSTITUTIVE MATRIX, C(i,j)
C  AND THERMAL RESULTANTS AND MOMENTS FROM CURING PROCESS
C
C BEG JULY 1989
      COMMON/GEOM3/ISTIF(2),NLAYER(4,2),NSEG(2),INTEXT(2)
C END JULY 1989
C BEG AUG 1992
      COMMON/ISOGR/ISOGRD,ISOANG
C END AUG 1992
      COMMON/NEUTRL/DNEUTX,DNEUTY,DSURF
      DIMENSION C(6,6),THERM(6),ETHERM(6)
C
      IF (IPRINT.GT.0) THEN
         ISM1 = ISMEAR + 1
C BEG 26 JAN 1989
C BEG JUN 1996
C BEG JUN 2004
C BEG DEC 2004
         GO TO (50,60,70,80,90,97,103,110,130,
     1      150,160,170,180,190,200,210,220,230),ISM1
C END DEC 2004
C END JUN 2004
C END JUN 1996
C END 26 JAN 1989
C
   50    CONTINUE
         GO TO 100
C BEG AUG 1992
   60    CONTINUE
         IF (ISOGRD.EQ.0) WRITE(IFILE,65)
   65    FORMAT(//' C(i,j) with smeared stringers only...',
     1 38X,'THERMAL {NT}  ETHERM {ET}'/
     1' Reference surface is at the refer. surface of the skin midway be
     1tween the stringers.newsITEM 274')
         IF (ISOGRD.EQ.1) WRITE(IFILE,66)
   66    FORMAT(//' C(i,j) with smeared isogrid only...',
     1 38X,'THERMAL {NT}  ETHERM {ET}'/
     1' Reference surface is at the refer. surface of the skin.ITEM274')
C END AUG 1992
         GO TO 100
   70    WRITE(IFILE,75)
   75    FORMAT(//' C(i,j) with smeared rings only...',
     1 42X,'THERMAL {NT}  ETHERM {ET}'/
     1' Reference surface is at the refer. surface of the panel skin.')
         GO TO 100
C BEG AUG 1992
   80    CONTINUE
         IF (ISOGRD.EQ.0) WRITE(IFILE,85)
   85    FORMAT(//' C(i,j) with smeared stringers and rings...',
     1 33X,'THERMAL {NT}  ETHERM {ET}'/
     1' Reference surface is at the refer. surface of the skin midway be
     1tween the stringers.')
         IF (ISOGRD.EQ.1) WRITE(IFILE,86)
   86    FORMAT(//' C(i,j) with smeared isogrid   and rings...',
     1 33X,'THERMAL {NT}  ETHERM {ET}'/
     1' Reference surface is at the refer. surface of the skin.ITEM274')
C END AUG 1992
         GO TO 100
C BEG 26 JAN 1989
C
   90    WRITE(IFILE,95) DSURF
C BEG DEC 2003
   95    FORMAT(//' LOCATION OF THE NEUTRAL PLANE FOR AXIAL LOADING'/
     1' AND C(i,j) WITH SMEARED STIFFENERS. Reference surface for the'/
     1' following C(i,j) is the neutral plane for axial loading.'/
     1' Negative d corresponds to a neutral plane that lies above'/
     1' the plane of the reference surf. of the lowest panel skin.'/
     1' See Fig. 15a on page 502 of Reference [1].'/
     1' d = ', 1P,E12.4/)
C END DEC 2003
C
C END 26 JAN 1989
         GO TO 100
   97    CONTINUE
C BEG JULY 1989
         IF (ISTIF(1).NE.5) WRITE(IFILE,98)
C BEG AUG 1993
   98    FORMAT(//' C(i,j) with smeared stringers and reduced stiffness'
     1/' for Segment 1 of the panel skin.'/)
C END AUG 1993
         WRITE(IFILE,99)
C BEG DEC 2003
   99    FORMAT(/
     1' If FSLOC.LT.0.95 (post-local-buckling allowed) the following'/
     1' C(i,j) are used for the prediction of preliminary general'/
     1' instability, the purpose of which is to establish, for flat'/
     1' panels, how much any axial bowing amplitude grows under the'/
     1' applied axial load.')
C END DEC 2003
C END JULY 1989
         GO TO 100
  103    CONTINUE
  104    WRITE(IFILE,105)
C BEG AUG 1993
C BEG DEC 2003
  105    FORMAT(//' C(i,j) with smeared stringers and rings, with'/
     1' reduced stiffness for segment 1 of the panel skin.'//
     1' If FSLOC.LT.0.95 (post-local-buckling allowed) the following'/
     1' C(i,j) are also used for the prediction of preliminary'/
     1' general instability, the purpose of which is to establish,'/
     1' for a flat panel, how much any axial bowing amplitude grows'/
     1' under the applied axial load.')
C END DEC 2003
C END AUG 1993
C BEG 26 JAN 1989
         GO TO 100
  110    CONTINUE
  115    WRITE(IFILE,120)
  120    FORMAT(//' C(i,j) with smeared stiffeners: no reduction in'/
     1' skin stiffness; no reference surface shift. These C(i,j) are'/
     1' the same as one of the sets of C(i,j) listed above. However,'/
     1' the thermal forces and strains have been modified to account'/
     1' for clamped boundaries in the prebuckling phase')
         WRITE(IFILE,85)
C BEG JAN 1995
         GO TO 100
  130    CONTINUE
  135    WRITE(IFILE,140)
  140    FORMAT(//' C(i,j) with smeared stiffeners but with effective'/
     1' length used for ring spacing. Purpose is to get ETHERM(2) for'/
     1' use in calculating axisymmetric thermal deformation of ring-'/
     1' stiffened cylindrical panels.')
         WRITE(IFILE,85)
C END JAN 1995
C BEG JUN 1996
         GO TO 100
  150    CONTINUE
         WRITE(IFILE,155)
  155    FORMAT(//' C(i,j) for top (or leftmost) face sheet of'/
     1' sandwich wall, skin-stringer module:')
         GO TO 100
  160    CONTINUE
         WRITE(IFILE,165)
  165    FORMAT(//' C(i,j) for bottom (or rightmost) face sheet of'/
     1' sandwich wall, skin-stringer module:')
         GO TO 100
  170    CONTINUE
         WRITE(IFILE,175)
  175    FORMAT(//' C(i,j) for top (or leftmost) face sheet of'/
     1' sandwich wall, skin-ring module:')
         GO TO 100
  180    CONTINUE
         WRITE(IFILE,185)
  185    FORMAT(//' C(i,j) for bottom (or rightmost) face sheet of'/
     1' sandwich wall, skin-ring module:')
C END JUN 1996
C BEG JUN 2004
  190    CONTINUE
         WRITE(IFILE,195)
  195    FORMAT(/' C(i,j) for skin with smeared substringers only.',/,
     1'  Reference surface is at the reference surface of the skin.')
         GO TO 100
  200    CONTINUE
         WRITE(IFILE,205)
  205    FORMAT(/' C(i,j) for skin with smeared subrings only.',/,
     1'  Reference surface is at the reference surface of the skin.')
         GO TO 100
  210    CONTINUE
         WRITE(IFILE,215)
  215    FORMAT(
     1   /' C(i,j) for skin with smeared substringers and subrings.',/,
     1'  Reference surface is at the reference surface of the skin.')
C BEG DEC 2004
         GO TO 100
  220    CONTINUE
         WRITE(IFILE,225)
  225    FORMAT(
     1   /' CSUBX(i,j) for axial substiffeners (or subisogrid member).')
         GO TO 100
  230    CONTINUE
         WRITE(IFILE,235)
  235    FORMAT(
     1   /' CSUBY(i,j) for circumferential substiffeners.')
C END DEC 2004
C23456789012345678901234567890123456789012345678901234567890123456789012
C END JUN 2004
  100    CONTINUE
         IF (ISMEAR.LE.3.OR.ISMEAR.EQ.7)
     1    WRITE(IFILE,420) ((C(I,J),J=1,6),THERM(I),ETHERM(I), I=1,6) 
  420    FORMAT((1P,6E12.4,4X,1P,2E12.4))
         IF (ISMEAR.GT.3.AND.ISMEAR.NE.7)
     1    WRITE(IFILE,430) ((C(I,J),J=1,6),I=1,6)
C END 26 JAN 1989
  430    FORMAT((1P,6E12.4))
      ENDIF
      RETURN
      END
C
C
C
C BEG JUN 1996
C=DECK      OUTTHM
      SUBROUTINE OUTTHM(IFILE,ISMEAR,NSEG,THSMRX,ETSMRX,THSMRY,ETSMRY)
C
C  PURPOSE IS TO PRINT OUT THERMAL STRESSES AND STRAINS USED FOR
C  SMEARED STIFFENER MODELS OF THE PANEL.
C
C23456789012345678901234567890123456789012345678901234567890123456789012
      DIMENSION NSEG(2),THSMRX(6,5),ETSMRX(6,5),THSMRY(6,5),ETSMRY(6,5)
C
      IF (ISMEAR.EQ.1) THEN
         WRITE(IFILE,10)
   10    FORMAT(/' THERMAL QUANTITIES USED FOR SMEARED STRINGERS...'/
     1 ' Segment    Thermal Forces   Thermal Strains'/
     1 ' No. iseg  THSMRX or THSMR3       ETSMRX')
         NSEG1 = NSEG(1)
         DO 30 ISEG = 1,NSEG1
            DO 20 I = 1,6
               WRITE(IFILE,15) ISEG, THSMRX(I,ISEG), ETSMRX(I,ISEG)
   15          FORMAT(I5,1P2E17.4)
   20       CONTINUE
            WRITE(IFILE,*)' '
   30    CONTINUE
      ENDIF
C
      IF (ISMEAR.EQ.2) THEN
         WRITE(IFILE,40)
   40    FORMAT(/' THERMAL QUANTITIES USED FOR SMEARED RINGS...'/
     1 '                 S T R I N G E R S                   R I N G S'/
     1 ' Segment  Thermal Forces   Thermal Strains   Thermal Forces'
     1 '  Thermal Strains'/
     1 ' No.iseg THSMRX or THSMR3       ETSMRX           THSMRY    '
     1 '      ETSMRY')
         NSEG2 = NSEG(2)
         DO 60 ISEG = 1,NSEG2
            DO 50 I = 1,6
               IF (ISEG.LE.2)
     1            WRITE(IFILE,75) ISEG, THSMRX(I,ISEG), ETSMRX(I,ISEG),
     1                                  THSMRY(I,ISEG), ETSMRY(I,ISEG)
               IF (ISEG.GT.2)
     1            WRITE(IFILE,95) ISEG, THSMRY(I,ISEG), ETSMRY(I,ISEG)
   50       CONTINUE
            WRITE(IFILE,*)' '
   60    CONTINUE
      ENDIF
C
C23456789012345678901234567890123456789012345678901234567890123456789012
      IF (ISMEAR.EQ.3) THEN
         WRITE(IFILE,70)
   70    FORMAT(/
     1 ' THERMAL QUANTITIES USED FOR SMEARED STRINGERS AND RINGS...'/
     1 '                 S T R I N G E R S                   R I N G S'/
     1 ' Segment  Thermal Forces   Thermal Strains   Thermal Forces'
     1 '  Thermal Strains'/
     1 ' No.iseg THSMRX or THSMR3       ETSMRX           THSMRY    '
     1 '      ETSMRY')
         NSEG1 = NSEG(1)
         NSEG2 = NSEG(2)
         MINSEG = MIN(NSEG1,NSEG2)
         DO 90 ISEG = 1,MINSEG
            DO 80 I = 1,6
               WRITE(IFILE,75) ISEG, THSMRX(I,ISEG), ETSMRX(I,ISEG),
     1                               THSMRY(I,ISEG), ETSMRY(I,ISEG)
   75          FORMAT(I5,1P4E17.4)
   80       CONTINUE
            WRITE(IFILE,*)' '
   90    CONTINUE
C
         MAXSEG = MAX(NSEG1,NSEG2)
         IF (MAXSEG.GT.MINSEG) THEN
            MINSG1 = MINSEG+1
            DO 120 ISEG = MINSG1,MAXSEG
               DO 110 I = 1,6
                IF (NSEG1.GT.NSEG2)
     1            WRITE(IFILE,15) ISEG, THSMRX(I,ISEG), ETSMRX(I,ISEG)
                IF (NSEG2.GT.NSEG1)
     1            WRITE(IFILE,95) ISEG, THSMRY(I,ISEG), ETSMRY(I,ISEG)
   95             FORMAT(I5,34X,1P2E17.4)
  110          CONTINUE
  120       CONTINUE
         ENDIF
      ENDIF
C
      RETURN
      END
C
C
C
C=DECK      STRTHM
C BEG JUN 2004
      SUBROUTINE STRTHM(ICALL,INDIC,ETHERM,CS,CSINV,THERMS)
C END JUN 2004
C
C  PURPOSE IS TO FIND THE RESIDUAL STRAINS AND CURVATURE CHANGES OF
C  THE REFERENCE SURFACE FROM THERMAL LOADS STORED IN THERMS.
C  THE RESIDUAL STRAINS AND CURVATURE CHANGES ARE STORED IN ETHERM.
C
      DIMENSION ETHERM(*),CS(6,6),CSINV(6,6),THERMS(*)
C
      CALL MOVER(0,0,ETHERM,1,6)
      IF (INDIC.GT.0) THEN
         CALL MOVER(CS,1,CSINV,1,36)
C
         CALL INVERT(CSINV,6,ISING)
         IF (ISING.NE.0) THEN
C BEG JUN 2004
            WRITE(8,'(A,I5)')
     1    ' IN Sub.STRTHM. SINGULAR C(i,j) MATRIX. ICALL=',ICALL
C END JUN 2004
            CALL ERREX
         ENDIF
      ENDIF
C
      DO 3 I = 1,6
      DO 3 J = 1,6
      ETHERM(I) = ETHERM(I) + CSINV(I,J)*THERMS(J)
    3 CONTINUE
C
      RETURN
      END
C
C
C
C BEG AUG 1995
C  SUBROUTINE INVERT REMOVED FROM HERE AND PLACED IN THE UTIL LIBRARY.
C END AUG 1995
C
C
C
C=DECK      NEUTAX
      SUBROUTINE NEUTAX(C,NX,NY,DNEUT)
C
C  Purpose is to find the neutral planes of the panel with smeared
C  stiffeners.
C
C  Input:  C = 6x6 constitutive law for panel with smeared stiffeners
C         NX = axial load/circ. arc (Nx = 1.0 for calc. of DNEUTX, 
C                                         0.0 for calc. of DNEUTY)
C         NY = circ. load/axial arc (Ny = 0.0 for calc. of DNEUTX,
C                                         1.0 for calc. of DNEUTY)
C
C  Output:
C      DNEUT = distance from reference surface of skin to neutral plane
C
      DIMENSION C(6,6)
C
C BEG 26 JAN 1989
C
      REAL NX, NY, KAPPAX, KAPPAY
C
      DEN = C(1,1)*C(2,2) - C(1,2)**2
      IF (NX.EQ.0.) THEN
         B11 = C(2,2)*C(1,4) - C(1,2)*C(2,4)
         B21 = C(1,1)*C(2,4) - C(1,2)*C(1,4)
         C44BAR = C(4,4) -(B11*C(1,4) + B21*C(2,4))/DEN
C BEG MAY 1998
         KAPPAX = 0.
         IF (C44BAR.NE.0.) KAPPAX = (-B21/DEN)/C44BAR
C END MAY 1998
         EPSX   = -(B11*KAPPAX + C(1,2))/DEN
         EPSY   = -(B21*KAPPAX - C(1,1))/DEN
         DNEUT  = -(C(1,5)*EPSX + C(2,5)*EPSY + C(4,5)*KAPPAX)
         RETURN
      ENDIF
C
      IF (NY.EQ.0.) THEN
         B12 = C(2,2)*C(1,5) - C(1,2)*C(2,5)
         B22 = C(1,1)*C(2,5) - C(1,2)*C(1,5)
         C55BAR = C(5,5) -(B12*C(1,5) + B22*C(2,5))/DEN
C BEG MAY 1998
         KAPPAY = 0.
         IF (C55BAR.NE.0.) KAPPAY = (-B12/DEN)/C55BAR
C END MAY 1998
         EPSX   = -(B12*KAPPAY - C(2,2))/DEN
         EPSY   = -(B22*KAPPAY + C(1,2))/DEN
         DNEUT  = -(C(1,4)*EPSX + C(2,4)*EPSY + C(4,5)*KAPPAY)
      ENDIF
C
      RETURN
      END
C
C
C
C=DECK      BOSCIJ
      SUBROUTINE BOSCIJ(CPANDA,CBOSOR)
C
C  PURPOSE IS TO FILL CBOSOR(6,6), THE CONSTITUTIVE LAW THAT WILL BE
C  USED IN CLOSED-FORM PANDA-TYPE BUCKLING ANALYSES THAT ARE CONDUCTED
C  DURING THE GENERATION OF KNOCKDOWN FACTORS TO ACCOUNT FOR IN-PLANE
C  SHEAR AND/OR NON-ZER0 C(1,3),C(1,6), C(2,3),C(2,6), C(3,4),C(3,5),
C  C(4,6), C(5,6) AND THE CORRESPONDING C(J,I).  IN ORDER TO SIMULATE
C  THE DISCRETIZED MODULE MODELS, PANDA-TYPE ANALYSIS IS CONDUCTED WITH
C  CBOSOR INSTEAD OF CPANDA.  THESE RESULTS ARE COMPARED TO THE RESULTS
C  OBTAINED FROM THE PANDA-TYPE ANALYSIS WITH USE OF CPANDA, AND KNOCKDOWN
C  FACTORS OBTAINED FROM THE RATIOS 
C
C     KNOCKDOWN = 
C         (BUCKLING LOAD WITH USE OF CPANDA)/BUCKLING LOAD WITH USE OF CBOSOR)
C
C
      DIMENSION CPANDA(6,6),CBOSOR(6,6)
C
      CALL MOVER(CPANDA,1,CBOSOR,1,36)
C
      CBOSOR(1,3) = 0.0
      CBOSOR(3,1) = 0.0
      CBOSOR(1,6) = 0.0
      CBOSOR(6,1) = 0.0
C
      CBOSOR(2,3) = 0.0
      CBOSOR(3,2) = 0.0
      CBOSOR(2,6) = 0.0
      CBOSOR(6,2) = 0.0
C
      CBOSOR(3,4) = 0.0
      CBOSOR(4,3) = 0.0
      CBOSOR(3,5) = 0.0
      CBOSOR(5,3) = 0.0
C
      CBOSOR(4,6) = 0.0
      CBOSOR(6,4) = 0.0
C
      CBOSOR(5,6) = 0.0
      CBOSOR(6,5) = 0.0
C
      RETURN
      END
C
C
C
C BEG 26 JAN 1989
C
C
C
C=DECK      WEBCIJ
      SUBROUTINE WEBCIJ(IMOD,IPCIJ,IFILE,ILOOP,TEMP,CRACK,NNODES,
     1                  CXAVE,CYAVE,THEAVX,THEAVY,THSAVX,THSAVY,
C BEG JULY 1989
     1                  ETHAVX,ETHAVY,ETSAVX,ETSAVY,GTXAVE,GTYAVE,
     1                  IWEB)
C END JULY 1989
C
C  PURPOSE IS TO OBTAIN Cij, Thermal forces and strains for
C  A WEB WITH TEMPERATURE-DEPENDENT MATERIAL PROPERTIES AND
C  A TEMPERATURE GRADIENT.  WRITTEN BY D. BUSHNELL, APRIL 5, 1989.
C
      DIMENSION CXAVE(6,6),CYAVE(6,6),THEAVX(*),THEAVY(*),THSAVX(*)
      DIMENSION THSAVY(*),ETHAVX(*),ETHAVY(*),ETSAVX(*),ETSAVY(*)
      DIMENSION GTXAVE(*),GTYAVE(*)
      DIMENSION CSINV(6,6),CRACK(99,5,2)
      DIMENSION GT1(99),GT2(99),Y(23)
      DIMENSION E1L(99),E2L(99),GL(99),ZETL(99),U12L(99),RHOL(99)
      DIMENSION A1L(99),A2L(99),TL(99)
      DIMENSION TEMP(4,2),FACTOR(20,10),THCURX(6,11),THCURY(6,11)
      DIMENSION A1CUR(99),A2CUR(99)
      COMMON/WEBTH1/CX(6,6,11),CY(6,6,11),THERMX(6,11),THERMY(6,11)
      COMMON/WEBTH2/THSMRX(6,11),THSMRY(6,11),ETSMRX(6,11),ETSMRY(6,11)
      COMMON/WEBTH3/ETHRMX(6,11),ETHRMY(6,11),GTX(2,11),GTY(2,11)
C BEG AUG 1992
      COMMON/WEBTH5/THALLS(11),TCURE
      COMMON/ISOGR/ISOGRD,ISOANG
C END AUG 1992
      COMMON/THICK/TX(5),TY(5)
      COMMON/GEOM3/ISTIF(2),NLAYER(4,2),NSEG(2),INTEXT(2)
      COMMON/LAYER/MATL(90),LTYPE(99,5,2),T(90),ANGLE(90)
      COMMON/MATER1/E1(20),E2(20),G(20),FNU(20),DENS(20)
      COMMON/MATERT/ALPHA1(20),ALPHA2(20),CURETP(20),ICOCUR(2)
      COMMON/MATER7/ISOMAT(20),ISOEFF(20)
      COMMON/MATRAN/G13(20),G23(20)
      COMMON/TMATL2/PARMAT(20,10),TEMPJ(10,20,10),FTEMPJ(10,20,10)
      CHARACTER*15 PARTS(4,2)
C
C BEG JULY 1989
C BEG AUG 1992
      IF (ISOGRD.EQ.0) THEN
         PARTS(IWEB,1) = 'STRINGER WEB   '
      ELSE
         PARTS(IWEB,1) = 'ISOGRID  WEB   '
      ENDIF
C END AUG 1992
      PARTS(IWEB,2) = '  RING   WEB   '
      IF (ISTIF(ILOOP).EQ.5) THEN
         PARTS(IWEB,ILOOP) = ' TRUSSCORE WEB '
      ENDIF
C
      NLAY = NLAYER(IWEB,ILOOP)
C
      IWEBM = IWEB - 1
      IWEBP = IWEB + 1
      DTEMP = TEMP(IWEBM,ILOOP) - TEMP(IWEBP,ILOOP)
      FDEN = NNODES - 1
C      
      DO 100 INODE = 1,NNODES
C
      FNUM = INODE - 1
      TLOCAL = TEMP(IWEBM,ILOOP) - DTEMP*FNUM/FDEN
      GT1AVE = 0.
      GT2AVE = 0.
      TTOT   = 0.
      CALL MOVER(0.,0,FACTOR,1,200)
C
      DO 30 J = 1,NLAY
C
      K = LTYPE(J,IWEB,ILOOP)
      M = MATL(K)
C
      ACRACK = ABS(CRACK(J,IWEB,ILOOP))
C END JULY 1989
      BCRACK = ACRACK
      CCRACK = SQRT(ACRACK)
      IF (CCRACK.LT.0.5) CCRACK = 0.5
C
      DO 20 INPROP = 1,15
         IF (FACTOR(INPROP,M).EQ.0.) THEN
            CALL PROPNO(ISOMAT(M),ISOEFF(M),INPROP,IPROP)
            CALL INTERP(IFILE,10,TEMPJ(1,IPROP,M),FTEMPJ(1,IPROP,M),
     1                  TLOCAL,FACTOR(INPROP,M))
C           WRITE(8,*)' M,IPROP,TEMPJ(1,IPROP,M),TEMPJ(2,IPROP,M)=',
C    1                  M,IPROP,TEMPJ(1,IPROP,M),TEMPJ(2,IPROP,M)
C           WRITE(8,*)' M,IPROP,FTEMPJ(1,IPROP,M),FTEMPJ(2,IPROP,M)=',
C    1                  M,IPROP,FTEMPJ(1,IPROP,M),FTEMPJ(2,IPROP,M)
C           WRITE(8,*)' INODE,INPROP,IPROP,M,TLOCAL,FACTOR(INPROP,M)=',
C    1                  INODE,INPROP,IPROP,M,TLOCAL,FACTOR(INPROP,M)
         ENDIF
   20 CONTINUE
C
      E1L(J) = CCRACK*E1(M)*FACTOR(1,M)
C BEG JULY 1989
      IF (CRACK(J,IWEB,ILOOP).LT.0.) E1L(J) = E1(M)*FACTOR(1,M)
C END JULY 1989
      E2L(J) = BCRACK**2*E2(M)*FACTOR(2,M)
       GL(J) =  BCRACK**2*G(M)*FACTOR(3,M)
      GT1(J) = G13(M)*FACTOR(5,M)
      GT2(J) = ACRACK*G23(M)*FACTOR(6,M)
      U12L(J)= BCRACK*FNU(M)*FACTOR(4,M)
      RHOL(J)= DENS(M)*FACTOR(14,M)
       TL(J) =  T(K)
      ZETL(J)= ANGLE(K)
      A1TH = ALPHA1(M)*FACTOR(7,M)
      A2TH = ALPHA2(M)*FACTOR(8,M)
      TCURE = -CURETP(M)
      THALL = TCURE + TLOCAL
C BEG AUG 1992
      THALLS(INODE) = THALL
C END AUG 1992
      A1L(J) = A1TH*THALL
      A2L(J) = A2TH*THALL
      A1CUR(J) = A1TH*TCURE
      A2CUR(J) = A2TH*TCURE
      TTOT = TTOT + TL(J)
      GT1AVE = GT1AVE + GT1(J)*TL(J)
      GT2AVE = GT2AVE + GT2(J)*TL(J)
C
   30 CONTINUE
C
      GT1AVE = GT1AVE/TTOT
      GT2AVE = GT2AVE/TTOT
      DO 35 J = 1,NLAY
         IF (GT1(J).LT.(.001*GT1AVE)) GT1(J) = .001*GT1AVE
         IF (GT2(J).LT.(.001*GT2AVE)) GT2(J) = .001*GT2AVE
   35 CONTINUE
C
         IF (ILOOP.EQ.1) THEN
           ZREF = 0.
           CALL CFB1(NLAY,ZREF,E1L,E2L,GL,U12L,RHOL,TL,ZETL,
C BEG JULY 1989
     1     CX(1,1,INODE),TX(IWEB),A1L,A2L,THERMX(1,INODE),GT1,GT2,
C END JULY 1989
C BEG AUG 1996
     1     GTX(1,INODE),0.,A1CUR,A2CUR,THCURX(1,INODE),0)
C END AUG 1996
           COCUR1 = ICOCUR(1)
           DO 37 J = 1,6
            THSMRX(J,INODE)=THERMX(J,INODE)-(1.-COCUR1)*THCURX(J,INODE)
   37      CONTINUE
           CALL STRTHM(18,1,ETHRMX(1,INODE),CX(1,1,INODE),CSINV,
     1                 THERMX(1,INODE))
           CALL STRTHM(19,0,ETSMRX(1,INODE),CX(1,1,INODE),CSINV,
     1                 THSMRX(1,INODE))
C BEG AUG 1992
           IF (IPCIJ.GT.0.AND.IMOD.EQ.0) THEN
              IF (ISOGRD.EQ.0) WRITE(IFILE,40)INODE,PARTS(IWEB,1)
              IF (ISOGRD.EQ.1) WRITE(IFILE,41)INODE,PARTS(IWEB,1)
   40         FORMAT(/' STRINGER WEB NODAL POINT NO.=',I2,': ',
     1        A15,26X,'   THERMAL {NT}  ETHERM {ET}')
   41         FORMAT(/' ISOGRID  WEB NODAL POINT NO.=',I2,': ',
     1        A15,26X,'   THERMAL {NT}  ETHERM {ET}')
           ENDIF
C END AUG 1992
           IF (IMOD.EQ.0)
     1     CALL OUTCIJ(0,IPCIJ,IFILE,CX(1,1,INODE),THERMX(1,INODE),
     1                 ETHRMX(1,INODE))
         ENDIF
C
         IF (ILOOP.EQ.2) THEN
           ZREF = 0.
           CALL CFB1(NLAY,ZREF,E1L,E2L,GL,U12L,RHOL,TL,ZETL,
C BEG JULY 1989
     1     CY(1,1,INODE),TY(IWEB),A1L,A2L,THERMY(1,INODE),GT1,GT2,
C END JULY 1989
C BEG AUG 1996
     1     GTY(1,INODE),0.,A1CUR,A2CUR,THCURY(1,INODE),0)
C END AUG 1996
           COCUR2 = ICOCUR(2)
           DO 45 J = 1,6
            THSMRY(J,INODE)=THERMY(J,INODE)-(1.-COCUR2)*THCURY(J,INODE)
   45      CONTINUE
           CALL STRTHM(20,1,ETHRMY(1,INODE),CY(1,1,INODE),CSINV,
     1                 THERMY(1,INODE))
           CALL STRTHM(21,0,ETSMRY(1,INODE),CY(1,1,INODE),CSINV,
     1                 THSMRY(1,INODE))
C BEG JULY 1989
           IF (IPCIJ.GT.0.AND.IMOD.EQ.0)
     1       WRITE(IFILE,50)INODE,PARTS(IWEB,2)
C END JULY 1989
   50      FORMAT(/'   RING   WEB NODAL POINT NO.=',I2,': ',
     1     A15,26X,'   THERMAL {NT}  ETHERM {ET}')
           IF (IMOD.EQ.0)
     1     CALL OUTCIJ(0,IPCIJ,IFILE,CY(1,1,INODE),THERMY(1,INODE),
     1     ETHRMY(1,INODE))
         ENDIF
  100 CONTINUE
C
C  PERFORM INTEGRATION TO GET AVERAGES:
C
      FINT = NNODES - 1
      IF (ILOOP.EQ.1) THEN
         DO 200 J = 1,6
         DO 120 K = 1,6
         DO 110 INODE = 1,NNODES
  110    Y(INODE) = CX(K,J,INODE)
         CALL SIMPSN(IFILE,NNODES,1.,Y,YINT)
         CXAVE(K,J) = YINT/FINT
  120    CONTINUE
         DO 130 INODE = 1,NNODES
  130    Y(INODE) = THERMX(J,INODE)
         CALL SIMPSN(IFILE,NNODES,1.,Y,YINT)
         THEAVX(J) = YINT/FINT
         DO 140 INODE = 1,NNODES
  140    Y(INODE) = THSMRX(J,INODE)
         CALL SIMPSN(IFILE,NNODES,1.,Y,YINT)
         THSAVX(J) = YINT/FINT
         DO 150 INODE = 1,NNODES
  150    Y(INODE) = ETHRMX(J,INODE)
         CALL SIMPSN(IFILE,NNODES,1.,Y,YINT)
         ETHAVX(J) = YINT/FINT
         DO 160 INODE = 1,NNODES
  160    Y(INODE) = ETSMRX(J,INODE)
         CALL SIMPSN(IFILE,NNODES,1.,Y,YINT)
         ETSAVX(J) = YINT/FINT
  200    CONTINUE
         DO 250 J = 1,2
         DO 220 INODE = 1,NNODES
  220    Y(INODE) = GTX(J,INODE)
         CALL SIMPSN(IFILE,NNODES,1.,Y,YINT)
         GTXAVE(J) = YINT/FINT
  250    CONTINUE
         IP = IWEB
C BEG AUG 1992
         IF (IPCIJ.GT.0.AND.IMOD.EQ.0) THEN
            IF (ISOGRD.EQ.0) WRITE(IFILE,260) IP,PARTS(IWEB,1)
C BEG JUN 1996
C23456789012345678901234567890123456789012345678901234567890123456789012
  260       FORMAT(/' UNIQUE SKIN-STRINGER MODULE iSEGMENT NO.',I2,': ',
     1      A15,15X,'  THERMAL {NT}  ETHERM {ET}')
            IF (ISOGRD.EQ.1) WRITE(IFILE,261) IP,PARTS(IWEB,1)
  261       FORMAT(/' UNIQUE SKIN-ISOGRID  MODULE iSEGMENT NO.',I2,': ',
     1      A15,15X,'  THERMAL {NT}  ETHERM {ET}')
C END JUN 1996
         ENDIF
C END AUG 1992
           IF (IMOD.EQ.0)
     1     CALL OUTCIJ(0,IPCIJ,IFILE,CXAVE,THEAVX,ETHAVX)
      ENDIF
C
      IF (ILOOP.EQ.2) THEN
         DO 400 J = 1,6
         DO 320 K = 1,6
         DO 310 INODE = 1,NNODES
  310    Y(INODE) = CY(K,J,INODE)
         CALL SIMPSN(IFILE,NNODES,1.,Y,YINT)
         CYAVE(K,J) = YINT/FINT
  320    CONTINUE
         DO 330 INODE = 1,NNODES
  330    Y(INODE) = THERMY(J,INODE)
         CALL SIMPSN(IFILE,NNODES,1.,Y,YINT)
         THEAVY(J) = YINT/FINT
         DO 340 INODE = 1,NNODES
  340    Y(INODE) = THSMRY(J,INODE)
         CALL SIMPSN(IFILE,NNODES,1.,Y,YINT)
         THSAVY(J) = YINT/FINT
         DO 350 INODE = 1,NNODES
  350    Y(INODE) = ETHRMY(J,INODE)
         CALL SIMPSN(IFILE,NNODES,1.,Y,YINT)
         ETHAVY(J) = YINT/FINT
         DO 360 INODE = 1,NNODES
  360    Y(INODE) = ETSMRY(J,INODE)
         CALL SIMPSN(IFILE,NNODES,1.,Y,YINT)
         ETSAVY(J) = YINT/FINT
  400    CONTINUE
         DO 450 J = 1,2
         DO 420 INODE = 1,NNODES
  420    Y(INODE) = GTY(J,INODE)
         CALL SIMPSN(IFILE,NNODES,1.,Y,YINT)
         GTYAVE(J) = YINT/FINT
  450    CONTINUE
C BEG JULY 1989
         IP = IWEB
           IF (IPCIJ.GT.0.AND.IMOD.EQ.0)
     1       WRITE(IFILE,460) IP,PARTS(IWEB,2)
C END JULY 1989
C BEG JUN 1996
  460      FORMAT(/' UNIQUE SKIN-RING MODULE iSEGMENT NO.',I2,': ',
     1     A15,18X,'  THERMAL {NT}  ETHERM {ET}')
C END JUN 1996
           IF (IMOD.EQ.0)
     1     CALL OUTCIJ(0,IPCIJ,IFILE,CYAVE,THEAVY,ETHAVY)
      ENDIF
C
      RETURN
      END
C
C
C
C=DECK      PROPNO
      SUBROUTINE PROPNO(ISOMAT,ISOEFF,INPROP,IPROP)
C
C  PURPOSE IS TO TRANSLATE PROPERTY NUMBERS OF FULL PROPERTY
C  VECTOR:
C  1 = MODULUS ALONG FIBERS,       E1       9 = MAX TENSION ALONG FIBERS
C  2 = MODULUS TRANSVERSE TO FIB., E2      10 = MAX COMPRES ALONG FIBERS
C  3 = IN-PLANE SHEAR MODULUS,      G      11 = MAX TENSION NORMAL TO FIB.
C  4 = POISSONS RATIO,             NU      12 = MAX COMPRES NORMAL TO FIB.
C  5 = OUT-OF-PLANE SHEAR MOD.,   G13      13 = MAX IN-PLANE SHEAR
C  6 = OUT-OF-PLANE SHEAR MOD.,   G23      14 = DENSITY, RHO
C  7 = THERMAL COEF. ALONG FIB,ALPHA1      15 = STIFFENER PULL0FF FORCE/LENGTH
C  8 = THERMAL COEF. TRANSVERS,ALPHA2     
C 
C  TO PROPERTY NUMBERS FOR ISOTROPIC MATERIAL:
C
C  1 = YOUNGS MODULUS              E        5 = MAX EFFECTIVE STRESS ALLOWED
C  2 = POISSONS RATIO             NU        6 = DENSITY, RHO
C  3 = OUT-OF-PLANE SHEAR MOD.,  G13        7 = STIFFENER PULLOFF FORCE/LENGTH
C  4 = THERMAL COEFFICIENT,    ALPHA
C
C  OR TO PROPERTY NUMBERS FOR ORTHOTROPIC MATERIAL WITH SINGLE EFFECTIVE
C  STRESS ALLOWABLE:
C
C  SAME AS FOR ORTHOTROPIC MATERIAL EXCEPT THE FOLLOWING:
C
C   9 = MAX. EFFECTIVE STRESS ALLOWED
C  10 = DENSITY, RHO
C  11 = STIFFNER PULLOFF FORCE/LENGTH
C
      IF (ISOMAT.EQ.1) THEN
         IF (INPROP.EQ.1)  IPROP = 1
         IF (INPROP.EQ.2)  IPROP = 1
         IF (INPROP.EQ.3)  IPROP = 1
         IF (INPROP.EQ.4)  IPROP = 2
         IF (INPROP.EQ.5)  IPROP = 3
         IF (INPROP.EQ.6)  IPROP = 3
         IF (INPROP.EQ.7)  IPROP = 4
         IF (INPROP.EQ.8)  IPROP = 4
         IF (INPROP.EQ.9)  IPROP = 5
         IF (INPROP.EQ.10) IPROP = 5
         IF (INPROP.EQ.11) IPROP = 5
         IF (INPROP.EQ.12) IPROP = 5
         IF (INPROP.EQ.13) IPROP = 5
         IF (INPROP.EQ.14) IPROP = 6
         IF (INPROP.EQ.15) IPROP = 7
      ELSE
C
         IPROP = INPROP
C
         IF (ISOEFF.EQ.1) THEN
            IF (INPROP.EQ.10)  IPROP = 9
            IF (INPROP.EQ.11)  IPROP = 9
            IF (INPROP.EQ.12)  IPROP = 9
            IF (INPROP.EQ.13)  IPROP = 9
            IF (INPROP.EQ.14)  IPROP = 10
            IF (INPROP.EQ.15)  IPROP = 11
         ENDIF
C
      ENDIF
      RETURN
      END
C      
C
C
C END 26 JAN 1989
C
C
C
C BEG JUN 2004
C=DECK      SUBSTF
      SUBROUTINE SUBSTF(IFILE,IWEB,IPRINT,ISEG,ILOOP,TSKIN,UNBAL,C,CS,
     1                  TEMP,FACTOR,FMULT,THERM0,THERMS,ETHRMS,
     1                  THCUR0,THCURS,GT,GTS,BX,BY,SPCNG,TXX)
C
C Purpose is to add contribution of substiffeners to constitutive matrix
C CS(i,j) for the panel cross section segments.
C
C substiffener declaration: TSUB(i,k,l) = TSUB(JSET,ISEG,ILOOP), etc.
C TSUB = thickness, HSUB = height, THSUB = angle, BSUB = spacing of substiffeners.
C MATSUB = material type, KLAYER = KLAYER(ISEG,ILOOP) = no. of substif "layers".
C NSURF  = NSURF(JSET,ISEG,ILOOP) =
C          0 substif attached to top of layer 1; 1 = attchd to bottom of layer n.
C NB2    =   NB2(JSET,ISEG,ILOOP) =
C          0 substif not extended into B2 region; 1 = yes, extended into B2 region.
C ISOSUB = ISOSUB(JSET,ISEG,ILOOP) =
C          0 if substiffeners are not isogrid; 1 if substiffeners are isogrid.
C23456789012345678901234567890123456789012345678901234567890123456789012
      DIMENSION TXDUM(6),ETHDUM(6)
      COMMON/OUTP/NPRT
      COMMON/SUBSTX/TSUB(2,4,2),HSUB(2,4,2),THSUB(2,4,2),
     1              BSUB(2,4,2)
      COMMON/ISBSTF/KLAYER(4,2),NSURF(2,4,2),NB2(2,4,2),
     1              ISOSUB(2,4,2),ISOTYP(2,4,2),MATSUB(2,4,2)
      COMMON/CSUBXY/CSUBX(6,6),CSUBY(6,6),THSUBX(6),THSUBY(6),
     1                                    THCSBX(6),THCSBY(6)
C
      COMMON/MATER1/E1(20),E2(20),G(20),FNU(20),DENS(20)
      COMMON/MATERT/ALPHA1(20),ALPHA2(20),CURETP(20),ICOCUR(2)
      COMMON/MATRAN/G13(20),G23(20)
C
      DIMENSION C(6,6),CS(6,6),THERM0(6),THERMS(6),ETHRMS(6)
      DIMENSION THCUR0(6),THCURS(6),GT(2),GTS(2),CSINV(6,6)
      DIMENSION CX(6,6,5),TX(5),ICX(5),THERMX(6,5),THCURX(6,5)
      DIMENSION ETCURS(6),GTISO(2),CNEW(6,6)
C
C  C(i,j) = skin-stiffener cross section before adding substiffeners 
C  CS(i,j)= skin-stiffener cross section after  adding substiffeners
C  THERM0(j) = skin-stiffener thermal forces before adding substiffeners
C  THERMS(j) = skin-stiffener thermal forces after  adding substiffeners
C  THCUR0(j) = skin-stiffener thermal curing forces before substiffeners
C  THCURS(j) = skin-stiffener thermal curing forces after  substiffeners
C  GT(k) = skin-stiffener transverse shear modulus before substiffeners
C  GTS(k)= skin-stiffener transverse shear modulus after  substiffeners
C
      DIMENSION CSTIFF(6,6),THERM(6),THCUR(6),GTTOT(2)
      DIMENSION TEMP(4,2),FMULT(20,10,4,2),FACTOR(20,10)
      DIMENSION SPCNG(2),TXX(2)
C      
      CALL MOVER(C,1,CS,1,36)
      CALL MOVER(THERM0,1,THERMS,1,6)
      CALL MOVER(THCUR0,1,THCURS,1,6)
      CALL MOVER(GT,1,GTS,1,2)
      CALL MOVER(0.,0,CX,1,180)
      CALL MOVER(0.,0,THERMX,1,30)
      CALL MOVER(0.,0,THCURX,1,30)
      CALL MOVER(0.,0,TX,1,5)
C
      SPCNG(1) = BY
      SPCNG(2) = BX
      ISKIN1   = 0
      GTISO(1) = 1.
      GTISO(2) = 1.
C
C     IF (NPRT.GE.2) WRITE(8,'(/,A,3I5)')
C    1' ENTERING SUBSTF: ISEG,ILOOP,KLAYER(ISEG,ILOOP)=',
C    1                   ISEG,ILOOP,KLAYER(ISEG,ILOOP)
      IF (KLAYER(ISEG,ILOOP).EQ.0) RETURN
C
C23456789012345678901234567890123456789012345678901234567890123456789012
      DO 3000 ISUBST = 1,2
C
         IF (ISEG.LE.IWEB.AND.NB2(1,1,1).EQ.1) THEN
C  substiffeners are continued into stiffener base of width B2...
            TSUB(ISUBST,2,ILOOP) = TSUB(ISUBST,1,1)
            HSUB(ISUBST,2,ILOOP) = HSUB(ISUBST,1,1)
            BSUB(ISUBST,2,ILOOP) = BSUB(ISUBST,1,1)
            THSUB(ISUBST,2,ILOOP) = THSUB(ISUBST,1,1)
            IF (ILOOP.EQ.2)
     1      THSUB(ISUBST,2,ILOOP) = ABS(ABS(THSUB(ISUBST,1,1))-90.)
            MATSUB(ISUBST,2,ILOOP) = MATSUB(ISUBST,1,1)
            NSURF(ISUBST,2,ILOOP) = NSURF(ISUBST,1,1)
            ISOTYP(ISUBST,2,ILOOP) = ISOTYP(ISUBST,1,1)
            ISOSUB(ISUBST,2,ILOOP) = ISOSUB(ISUBST,1,1)
            NB2(ISUBST,2,ILOOP) = NB2(1,1,1)
            NB2(2,1,ILOOP) = NB2(1,1,1)
            KLAYER(2,ILOOP) = KLAYER(1,1)
         ENDIF
         IF (ISOSUB(ISUBST,ISEG,ILOOP).NE.0) GO TO 1000
C
C non-isogrid configuration follows:
C        DO 900 ISUBST = 1,2
            M = MATSUB(ISUBST,ISEG,ILOOP)
C           IF (NPRT.GE.2)
C    1      WRITE(8,'(A,2I5)')' ISUBST,Material No.=',ISUBST,M
            IF (M.EQ.0) GO TO 3000 
            ANGLE = THSUB(ISUBST,ISEG,ILOOP)
            IF (ABS(ANGLE).GT.1.0.AND.ABS(ANGLE).LT.89.) THEN
               WRITE(IFILE,'(A,/,A,1P,E12.4)')
     1       ' substiffener angle must be either 0. or 90. degrees',
     1       ' THSUB(ISUBST,ISEG,ILOOP) = angle =',ANGLE
               CALL EXIT
            ENDIF
C
            THICK = TSUB(ISUBST,ISEG,ILOOP)
            HEIGHT= HSUB(ISUBST,ISEG,ILOOP)
            SPACNG= BSUB(ISUBST,ISEG,ILOOP)
            NSF = NSURF(ISUBST,ISEG,ILOOP)
            FACT  = 1.0
            IF (NSF.NE.0) FACT = -1.0
            ZSTART = TSKIN/2. + FACT*UNBAL
            ECCEN  = -FACT*(0.5*HEIGHT + ZSTART)
C
            TLOCAL = TEMP(ISEG,ILOOP)
            CALL MOVER(FMULT(1,M,ISEG,ILOOP),1,FACTOR(1,M),1,20)
C
            E1L = E1(M)*FACTOR(1,M)
            E2L = E2(M)*FACTOR(2,M)
             GL = G(M)*FACTOR(3,M)
            GT1 = G13(M)*FACTOR(5,M)
            GT2 = G23(M)*FACTOR(6,M)
            U12L= FNU(M)*FACTOR(4,M)
            RHOL= DENS(M)*FACTOR(14,M)
            ZETL= 0. 
            A1TH = ALPHA1(M)*FACTOR(7,M)
            A2TH = ALPHA2(M)*FACTOR(8,M)
           TCURE = -CURETP(M)
           THALL = TCURE + TLOCAL
             A1L = A1TH*THALL
             A2L = A2TH*THALL
           A1CUR = A1TH*TCURE
           A2CUR = A2TH*TCURE
            ZREF = 0.
            IF (THICK.LE.HEIGHT) GJ = GL*HEIGHT*THICK**3/3.
            IF (HEIGHT.LE.THICK) GJ = GL*THICK*HEIGHT**3/3.
C           IF (NPRT.GE.2) THEN
C              WRITE(8,'(A,/,I5,1P5E12.4)')
C    1       ' NSF,TSKIN,UNBAL,THICK,HEIGHT,SPACNG=',
C    1         NSF,TSKIN,UNBAL,THICK,HEIGHT,SPACNG
C              WRITE(8,'(A,1P,2E12.4)') ' ZSTART,ECCEN=',ZSTART,ECCEN 
C           ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
C
C  Next, use CFB1 to get substiffener C(i,j) and thermal THERM(j),THCUR(j)...
            CALL CFB1(1,ZREF,E1L,E2L,GL,U12L,RHOL,THICK,ZETL,CSTIFF,
     1      TDUM,A1L,A2L,THERM,GT1,GT2,GTTOT,1.,A1CUR,A2CUR,THCUR,0)
C           IF (NPRT.GE.2) THEN
C              WRITE(8,'(A,I3,A,1P,E12.4,A)')
C    1       ' Calling OUTCIJ for substiffener set ISUBST=',ISUBST,
C    1       ', ZREF=',ZREF,', 6x6 matrix CSTIFF='
C              CALL OUTCIJ(0,1,8,CSTIFF,TXDUM,ETHDUM)
C           ENDIF
C
            FKAP = 2.
            TEFF = TSKIN + HEIGHT
            FS3  = CSTIFF(3,3)/SPACNG
C
            TT3  = THERM(1) -CSTIFF(1,2)*THERM(2)/CSTIFF(2,2)
            STIFT= TT3*HEIGHT/SPACNG
            STIFMT = -ECCEN*STIFT
            TTC3 = THCUR(1) -CSTIFF(1,2)*THCUR(2)/CSTIFF(2,2)
            STIFCT = TTC3*HEIGHT/SPACNG
	    STFCMT = -ECCEN*STIFCT
C
            IF (ABS(ANGLE).LE.10.0) THEN
               ANGLE = 0.0
               THSUB(ISUBST,ISEG,ILOOP) = 0.
               SPCNG(1) = MIN(SPCNG(1),SPACNG)
C
               CS(1,1) = CS(1,1) + E1L*THICK*HEIGHT/SPACNG
               CS(1,4) = CS(1,4) - ECCEN*E1L*THICK*HEIGHT/SPACNG
               CS(4,1) = CS(1,4)
	       CS(4,4) = CS(4,4) 
     1         +((HEIGHT+ZSTART)**3 -ZSTART**3)*E1L*THICK/(3.*SPACNG)
C BEG AUG 2006
C See C66 in Eqs.(40) of "Theoretical basis" paper..
C              CS(6,6) = CS(6,6) + GJ/SPACNG
               CS(6,6) = CS(6,6) + 0.25*GJ/SPACNG
C END AUG 2006
C
               THERMS(1) = THERMS(1) + STIFT
               THCURS(1) = THCURS(1) + STIFCT
               THERMS(3) = THERMS(3) + STIFMT
               THCURS(3) = THCURS(3) + STFCMT
C
               DEN = TSKIN/GT(1) + HEIGHT/FS3
               GTS(1) = FKAP*TEFF/DEN
               IF (GTS(1).GT.GT(1)) GTS(1) = GT(1)
               TXX(1) = TEFF
               IF (ISEG.EQ.1.AND.ILOOP.EQ.1) THEN
                  CALL MOVER(CSTIFF,1,CSUBX,1,36)
                  CALL MOVER(THERM,1,THSUBX,1,6)
                  CALL MOVER(THCUR,1,THCSBX,1,6)
                  IF (NPRT.GE.2)
     1             CALL OUTCIJ(16,1,IFILE,CSUBX,TXDUM,ETHDUM)
               ENDIF
            ENDIF
C
            IF (ABS(ANGLE).GE.80.0) THEN
               ANGLE = 90.
               THSUB(ISUBST,ISEG,ILOOP) = 90.
C
               CS(2,2) = CS(2,2) + E1L*THICK*HEIGHT/SPACNG
               CS(2,5) = CS(2,5) - ECCEN*E1L*THICK*HEIGHT/SPACNG
               CS(5,2) = CS(2,5)
               CS(5,5) = CS(5,5)
     1         +((HEIGHT+ZSTART)**3 -ZSTART**3)*E1L*THICK/(3.*SPACNG)
               CS(6,6) = CS(6,6) + GJ/SPACNG
C23456789012345678901234567890123456789012345678901234567890123456789012
C
               THERMS(2) = THERMS(2) + STIFT
               THCURS(2) = THCURS(2) + STIFCT
               THERMS(5) = THERMS(5) + STIFMT
               THCURS(5) = THCURS(5) + STFCMT
C
               DEN = TSKIN/GT(2) + HEIGHT/FS3
               GTS(2) = FKAP*TEFF/DEN
               IF (GTS(2).GT.GT(2)) GTS(2) = GT(2)
               TXX(2) = TEFF
               IF (ISEG.EQ.1.AND.ILOOP.EQ.1) THEN
                  CALL MOVER(CSTIFF,1,CSUBY,1,36)
                  CALL MOVER(THERM,1,THSUBY,1,6)
                  CALL MOVER(THCUR,1,THCSBY,1,6)
                  IF (NPRT.GE.2)
     1             CALL OUTCIJ(17,1,IFILE,CSUBY,TXDUM,ETHDUM)
               ENDIF
            ENDIF
C
         GO TO 3000
C
 1000    CONTINUE
C
C  ISOGRID configuration...
         IF (ISUBST.GT.1) GO TO 3000
         M = MATSUB(ISUBST,ISEG,ILOOP)
         IF (M.EQ.0) GO TO 3000
         CALL MOVER(0.,0,CSTIFF,1,36)
         THICK = TSUB(ISUBST,ISEG,ILOOP)
         HEIGHT= HSUB(ISUBST,ISEG,ILOOP)
         SPACNG= BSUB(ISUBST,ISEG,ILOOP)
         NSF = NSURF(ISUBST,ISEG,ILOOP)
         FACT  = 1.0
         IF (NSF.NE.0) FACT = -1.0
         IFACT = FACT
         ZSTART = TSKIN/2. + FACT*UNBAL
         ECCEN  = -FACT*(0.5*HEIGHT + ZSTART)
C
         TLOCAL = TEMP(ISEG,ILOOP)
         CALL MOVER(FMULT(1,M,ISEG,ILOOP),1,FACTOR(1,M),1,20)
C BEG DEC 2004
C  We need the C(i,j) for an isogrid member in order to include
C  effect of stiffener of rectangular cross section on local buckling
C  of the triangular skin between isogrid members...
C
         IF (ISEG.EQ.1.AND.ILOOP.EQ.1) THEN
            E1L = E1(M)*FACTOR(1,M)
            E2L = E2(M)*FACTOR(2,M)
             GL = G(M)*FACTOR(3,M)
            GT1 = G13(M)*FACTOR(5,M)
            GT2 = G23(M)*FACTOR(6,M)
            U12L= FNU(M)*FACTOR(4,M)
            RHOL= DENS(M)*FACTOR(14,M)
            ZETL= 0.
            A1TH = ALPHA1(M)*FACTOR(7,M)
            A2TH = ALPHA2(M)*FACTOR(8,M)
            TCURE = -CURETP(M)
            THALL = TCURE + TLOCAL
            A1L = A1TH*THALL
            A2L = A2TH*THALL
            A1CUR = A1TH*TCURE
            A2CUR = A2TH*TCURE
            ZREF = 0.
C
C  Next, use CFB1 to get substiffener C(i,j) and thermal THERM(j),THCUR(j)...
            CALL CFB1(1,ZREF,E1L,E2L,GL,U12L,RHOL,THICK,ZETL,CSUBX,
     1       TDUM,A1L,A2L,THERM,GT1,GT2,GTTOT,1.,A1CUR,A2CUR,THCUR,0)
            CALL MOVER(THERM,1,THSUBX,1,6)
            CALL MOVER(THCUR,1,THCSBX,1,6)
            IF (NPRT.GE.2)
     1      CALL OUTCIJ(16,1,IFILE,CSUBX,TXDUM,ETHDUM)
         ENDIF
c
C END DEC 2004
C
         E1L = E1(M)*FACTOR(1,M)*THICK/SPACNG
         E2L = E1L
         U12L= 1./3.
         GL  = 0.5*E1L/(1.+U12L)
         FKAP = 2.0
         GT1 = FKAP*G(M)*FACTOR(3,M)*THICK/SPACNG
         GT2 = GT1 
         GTISO(ISUBST) = GT1
         RHOL= 3.0*DENS(M)*FACTOR(14,M)*THICK/SPACNG
         ZETL= 0. 
         A1TH = ALPHA1(M)*FACTOR(7,M)
         A2TH = A1TH 
         TCURE = -CURETP(M)
         THALL = TCURE + TLOCAL
         A1L = A1TH*THALL
         A2L = A2TH*THALL
         A1CUR = A1TH*TCURE
         A2CUR = A2TH*TCURE
         ZREF = 0.
         TL = HEIGHT
C        IF (THICK.LE.HEIGHT) GJ = GL*HEIGHT*THICK**3/3.
C        IF (HEIGHT.LE.THICK) GJ = GL*THICK*HEIGHT**3/3.
C
C  Next, use CFB1 to get substiffener C(i,j) and thermal THERM(j),THCUR(j)...
         CALL CFB1(1,ZREF,E1L,E2L,GL,U12L,RHOL,TL,ZETL,CSTIFF,
     1   TDUM,A1L,A2L,THERM,GT1,GT2,GTTOT,1.,A1CUR,A2CUR,THCUR,0)
C
         ISKIN1 = 1
         IF (IFACT.EQ.1) THEN
            TX(1) = HEIGHT
            CALL MOVER(CSTIFF,1,CX(1,1,1),1,36)
            CALL MOVER(THERM,1,THERMX(1,1),1,6)
            CALL MOVER(THCUR,1,THCURX(1,1),1,6)
            TX(2) = TSKIN
            CALL MOVER(C,1,CX(1,1,2),1,36)
            CALL MOVER(THERM0,1,THERMX(1,2),1,6)
            CALL MOVER(THCUR0,1,THCURX(1,2),1,6)
         ELSE 
            TX(1) = TSKIN
            CALL MOVER(C,1,CX(1,1,1),1,36)
            CALL MOVER(THERM0,1,THERMX(1,1),1,6)
            CALL MOVER(THCUR0,1,THCURX(1,1),1,6)
            TX(2) = HEIGHT
            CALL MOVER(CSTIFF,1,CX(1,1,2),1,36)
            CALL MOVER(THERM,1,THERMX(1,2),1,6)
            CALL MOVER(THCUR,1,THCURX(1,2),1,6)
         ENDIF
C
         NCX = 2 
         ICX(1) = 1
         ICX(2) = 2
         ICX(3) = 0
         CALL CSTACK(IFILE,ISEG,CX,THERMX,TX,NCX,ICX,
     1               CS,THERMS,THCURX,THCURS)
         TEFF = TX(1) + TX(2) + TX(3)
         DSHIFT = TEFF/2. - TSKIN/2.
         IF (IFACT.EQ.-1) DSHIFT = -DSHIFT
         CALL CSHIFT(CS,DSHIFT,CNEW)
         CALL MOVER(CNEW,1,CS,1,36)
         TXX(1) = TEFF
         TXX(2) = TEFF
         FKAP = 2
         DEN1 = TSKIN/GT(1) +HSUB(1,ISEG,ILOOP)/GTISO(1)
     1                      +HSUB(2,ISEG,ILOOP)/GTISO(2)
         GTS(1) = FKAP*TEFF/DEN1
         IF (GTS(1).GT.GT(1)) GTS(1) = GT(1)
         DEN2 = TSKIN/GT(2) +HSUB(1,ISEG,ILOOP)/GTISO(1)
     1                      +HSUB(2,ISEG,ILOOP)/GTISO(2)
         GTS(2) = FKAP*TEFF/DEN2
         IF (GTS(2).GT.GT(2)) GTS(2) = GT(2)
C
 3000 CONTINUE
C
      CALL STRTHM(22,1,ETHRMS,CS,CSINV,THERMS)
      IF (IPRINT.GE.1) THEN
         WRITE(IFILE,'(/,A,A)')
     1' C(i,j) for segment with smeared substiffeners',
     1' (See ITEM 600 in ...panda2/doc/panda2.news)'
         IF (ISKIN1.EQ.0) WRITE(IFILE,'(A)')
     1'  Reference surface is the middle surface of the segment skin.'
         IF (ISKIN1.GT.0) WRITE(IFILE,'(A,I2)')
     1'  Substiffeners form isogrid pattern with orientation, ISOTYP=',
     1                                           ISOTYP(1,I,ILOOP)
         IF (ISKIN1.GT.0) WRITE(IFILE,'(A)')
     1'  Reference surface is the middle surface of the skin+stiffeners'
         WRITE(IFILE,'(A,A)')
     1'                                                               ',
     1'                                THERMAL (NT)   ETHERM (ET)'
         CALL OUTCIJ(15,1,IFILE,CS,THERMS,ETHRMS)
      ENDIF
C23456789012345678901234567890123456789012345678901234567890123456789012
      CALL STRTHM(23,0,ETCURS,CS,CSINV,THCURS)
C
      RETURN
      END
C
C
C
C=DECK      CMBINE
      SUBROUTINE CMBINE(NPRT,ISMEAR,ICALL,CX,CX0,CS)
C purpose is to form the sum,
C   CS = CS + CX - CX0
      DIMENSION CX(6,6),CX0(6,6),CS(6,6),TXDUM(6),ETHDUM(6)
C
C     IF (NPRT.GE.2) THEN
C        WRITE(8,'(A,/,A,2I5,/,A)')
C    1 ' ENTERING SUB. CMBINE: ISMEAR,ICALL,CX,CX0,CS=',
C    1 ' ISMEAR,ICALL=',ISMEAR,ICALL,' CX='
C        CALL OUTCIJ(0,1,8,CX,TXDUM,ETHDUM)
C        WRITE(8,'(/,A)')' CX0='
C        CALL OUTCIJ(0,1,8,CX0,TXDUM,ETHDUM)
C        WRITE(8,'(/,A)')' CS='
C        CALL OUTCIJ(0,1,8,CS,TXDUM,ETHDUM)
C        WRITE(8,'(/)')
C     ENDIF
C
      DO 20 I = 1,6
      DO 10 J = 1,6
         CS(I,J) = CS(I,J) + CX(I,J) - CX0(I,J)
   10 CONTINUE
   20 CONTINUE
C     IF (NPRT.GE.2) THEN
C        WRITE(8,'(A)')' After summing:CS='
C        CALL OUTCIJ(0,1,8,CS,TXDUM,ETHDUM)
C     ENDIF
      RETURN
      END
