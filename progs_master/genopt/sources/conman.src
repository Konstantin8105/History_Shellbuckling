C=DECK      CONMAN
C BEG DEC 1990
C BEG NOV 2005
      SUBROUTINE CONMAN(JJJ,KOUNT,XX,XS,WEIGH,WGRD,K,GG,AA,VDOWN,VUP,
     1 IFIN,ITRIAL,WORDV,IDEC,VARIAB,NVAR,NPRINT,IFILE8,IWARNV,VARDEC,
     1 FACTDX,GRADMX)
C END NOV 2005
C END DEC 1990
C
C     PURPOSE IS TO DO OPTIMIZATION BY MATH PROGRAMMING TECHNIQUES.
C     CALLS ADS (VERSION 2.01), WHICH WAS WRITTEN BY VANDERPLATTS (1987)
C
      COMMON/SFACT/SMOVE,SFACTR
C BEG JUN 2013
C     COMMON/CNMN4/VLB(40),VUB(40),SCAL(40)
C     COMMON/ORIGLX/XORIG(40)
      COMMON/CNMN4/VLB(98),VUB(98),SCAL(98)
      COMMON/ORIGLX/XORIG(98)
C END JUN 2013
C BEG NOV 2005
C     DIMENSION WK(11500),IWK(2000)
C BEG JUN 2013
C     DIMENSION WK(60000),IWK(8000)
      DIMENSION WK(500000),IWK(40000)
C END JUN 2013
C     DIMENSION X(62),DF(62),G(140),IDG(140),IC(62),A(41,100),XOLD(62)
C BEG JUN 2013
C     DIMENSION X(152),DF(152),G(140),IDG(140),IC(152),
C    1          A(41,201),XOLD(152)
      DIMENSION X(152),DF(152),G(140),IDG(140),IC(152),
     1          A(98,201),XOLD(152)
C END JUN 2013
C END NOV 2005
C BEG JUN 2013
C     DIMENSION WGRAD(40),GNOML(140),XSAVE(40)
      DIMENSION WGRAD(98),GNOML(140),XSAVE(98)
C END JUN 2013
C BEG NOV 2005
C     DIMENSION XX(*),XS(*),WGRD(*),GG(*),AA(41,100),VDOWN(*),VUP(*)
C BEG JUN 2013
C     DIMENSION XX(*),XS(*),WGRD(*),GG(*),AA(41,150),VDOWN(*),VUP(*)
      DIMENSION XX(*),XS(*),WGRD(*),GG(*),AA(98,201),VDOWN(*),VUP(*)
C23456789012345678901234567890123456789012345678901234567890123456789012
C END JUN 2013
C END NOV 2005
      DIMENSION IDEC(*),VARIAB(*),IWARNV(*),VARDEC(*)
C BEG DEC 1990
      DIMENSION FACTDX(*)
C END DEC 1990
C BEG NOV 2005
      DIMENSION GRDMAX(100),GRADMX(30)
C END NOV 2005
      CHARACTER*80 WORDV(98)
      CHARACTER*12 VARDEC
C
      NDV   = KOUNT
      NCON  = K
C BEG JUN 2013
C     NRA = 41
C     NRA = NDV 
      NRA = 98
C END JUN 2013
C BEG NOV 2005
C     NCOLA = 80
C     NRWK = 11500
C     NRIWK=  2000
C GEG JUN 2013
C     NCOLA = 201
C     NRWK = 60000
C     NRIWK=  8000
      NCOLA = 201 
      NRWK = 500000
      NRIWK= 40000
C END JUN 2013
C END NOV 2005
      ISTRAT = 0
      IOPT   = 5
      IONED  = 7
      IPRINT = 0000
      IF (NPRINT.GE.2) IPRINT = 3550
C BEG NOV 1990  (FOLLOWING COMMENTED OUT. SMOVE DEPENDS ON IMOVE)
C     IF (ITRIAL.EQ.0) SMOVE = 0.1
C END NOV 1990
      SFACTR = 0.8
      CALL MOVERX(0,0,IDG,1,NCON)
      CALL MOVERX(0.,0,VLB,1,NDV)
      CALL MOVERX(0.,0,VUB,1,NDV)
      DO 5 I = 1,NDV
    5 X(I) = XX(I)/ABS(XX(I))
C
C BEG AUG 1990
      CALL VLBVUB(JJJ,NDV,VDOWN,VUP,X,XX,VOX,WORDV,IDEC,VARIAB,NVAR,
     1            IWARNV)
C END AUG 1990
C
C INITIALIZATION CALL TO ADS...
      IGRAD = 1
      INFO  = -2
      CALL ADS(INFO,ISTRAT,IOPT,IONED,IPRINT,IGRAD,NDV,NCON,X,VLB,VUB,
     1         OBJ,G,IDG,NGT,IC,DF,A,NRA,NCOLA,WK,NRWK,IWK,NRIWK)
      IF (INFO.EQ.0) THEN
         WRITE(IFILE8,10)
   10    FORMAT(/' IN CONMAN: ADS BOMBS DURING INITIALIZATION PHASE.')
         RETURN
      ENDIF
C
C INITIALIZE SOME PARAMETERS...
C
      IWK(3) = 10
      IWK(2) =  0
      IWK(4) =  3
C      WK(3) = -.1
       WK(4) = -.01
C
C BEG DEC 1990
      WEIGHT = ABS(WEIGH)
C     OBJ = 1.0
      OBJ = SIGN(1.0,WEIGH)
C END DEC 1990
      DO 20 I = 1,NDV
      X(I) = XX(I)/ABS(XX(I))
      XORIG(I) = XX(I)
      WGRAD(I) = WGRD(I)
      XSAVE(I) = XS(I)/ABS(XX(I))
      DF(I) = WGRAD(I)/WEIGHT
   20 CONTINUE
      DO 30 I = 1,NCON
      G(I) = -GG(I) + 1.0
   30 GNOML(I) = GG(I)
C
C BEG NOV 2005
C     IF (NPRINT.GE.2) THEN
      IF (NPRINT.GE.0) THEN
C END NOV 2005
         WRITE(IFILE8,32) NDV,NCON
   32    FORMAT(/' CONTROL PARAMETERS USED IN ADS...'/
     1  ' NUMBER OF DECISION VARIABLES,                    NDV =',I4/
     1  ' NUMBER OF CONSTRAINT CONDITIONS,                NCON =',I4/)
        WRITE(IFILE8,33)
        WRITE(IFILE8,331) (VARDEC(I)(1:10),I=1,NDV)
        WRITE(IFILE8,332)
   33   FORMAT(/
     1' CONSTRAINTS AND GRADIENTS OF THEM FROM MAIN (UNSCALED)...'/
     1' ================================================================
     1========================================================='/
     1' NO.    CON-                    G R A D I E N T S   O F   C O N S
     1 T R A I N T S'/
     1'       STRAINT                  D E C I S I O N   V A R I A B L E
     1   N U M B E R'/
     1'                    1          2          3          4          5
     1          6          7          8          9         10')
  331 FORMAT('                ',A,' ',A,' ',A,' ',A,' ',A,' ',A,' ',A,
     1' ',A,' ',A,' ',A)
  332 FORMAT(
     1'-----------------------------------------------------------------
     1---------------------------------------------------------')
C BEG NOV 2005
        JJ1 = JJJ + 1
        GRADMX(JJ1) = 0.
C END NOV 2005
        DO 35 I = 1,NCON
           WRITE(IFILE8,34) I,GG(I),(AA(J,I),J=1,NDV)
C BEG NOV 2005
C  34      FORMAT(I3,1PE11.2,(1P10E11.2))
   34      FORMAT(I3,1P11E11.2,/,(14X,1P10E11.2))
           GRDMAX(I) = 0.
           DO 342 J = 1,NDV
              GRDMAX(I) = MAX(GRDMAX(I),ABS(AA(J,I)))
  342      CONTINUE
           GRADMX(JJ1) = MAX(GRADMX(JJ1),GRDMAX(I))
C END NOV 2005
   35   CONTINUE
C BEG NOV 2005
C23456789012345678901234567890123456789012345678901234567890123456789012
        WRITE(IFILE8,'(/,A,I2,A,I2,A,1P,E12.4,/,A,A,/,(1P,5E12.4))')
     1' Absolute value of maximum constraint gradient for iteration no',
     1  JJ1,' = GRADMX(',JJ1,')=',GRADMX(JJ1),
     1' Absolute values of maximum constraint gradients for each',
     1' active constraint:',
     1  (GRDMAX(I),I=1,NCON)
C END NOV 2005
      ENDIF
C     End of (NPRINT.GE.0) condition
C
   37 CONTINUE
      IF (NPRINT.GE.2) THEN
         WRITE(IFILE8,*)' ********** ENTERING ADS **********'
         WRITE(IFILE8,38) INFO,NGT,OBJ,(X(I),I=1,NDV)
   38    FORMAT(' INFO,NGT,OBJ=',2I5,1PE13.5,'; (X(I),I=1,NDV)='/
     1           (1P5E15.6))
C        WRITE(IFILE8,39) NCON, (G(I),I=1,NCON)
C  39    FORMAT(' NCON = ',I5,'; (G(I),I=1,NCON)='/(1P5E15.5))
C        WRITE(IFILE8,392) NDV, (DF(I),I=1,NDV)
C 392    FORMAT(' NDV  = ',I5,';(DF(I),I=1,NDV )='/(1P5E15.5))
      ENDIF
C
      CALL ADS(INFO,ISTRAT,IOPT,IONED,IPRINT,IGRAD,NDV,NCON,X,VLB,VUB,
     1         OBJ,G,IDG,NGT,IC,DF,A,NRA,NCOLA,WK,NRWK,IWK,NRIWK)
      IF (INFO.EQ.0) GO TO 99
C
C BEG DEC 1990
C     OBJ = 1.0
      OBJ = SIGN(1.0,WEIGH)
C END DEC 1990
      DO 40 I = 1,NDV
        DX = X(I) - XSAVE(I)
        OBJ = OBJ + DX*WGRAD(I)/WEIGHT
   40 CONTINUE
      DO 50 J = 1,NCON
   50 G(J) = -GNOML(J) + 1.0
      DO 70 I = 1,NDV
        DX = X(I) - XSAVE(I)
        DO 60 J = 1,NCON
          G(J) = G(J) - DX*AA(I,J)
   60   CONTINUE
   70 CONTINUE
      IF (INFO.EQ.2.AND.NGT.GT.0) THEN
         DO 90 L = 1,NGT
           J = IC(L)
           DO 80 I = 1,NDV
   80      A(I,L) = -AA(I,J)
   90    CONTINUE
         DO 95 I = 1,NDV
   95    DF(I) = WGRAD(I)/WEIGHT
      ENDIF
      GO TO 37
C
   99 CONTINUE
      DO 100 I = 1,NDV
  100 XX(I) = X(I)*ABS(XX(I))
      IFIN = 0
C BEG DEC 1990
      OBJ0 = SIGN(1.,WEIGH)
      ERROR = ABS(OBJ0 - OBJ)/VOX
C END DEC 1990
      IF (ERROR.LT.0.001) IFIN = 1
C
      RETURN
      END
C
C
C
C=DECK      VLBVUB
      SUBROUTINE VLBVUB(JJJ,NDV,VDOWN,VUP,X,XX,VOX,WORDV,IDEC,
     1                  VARIAB,NVAR,IWARNV)
C
C     PURPOSE IS TO UPDATE LOWER AND UPPER BOUNDS OF DESIGN VARIABLES.
C
C BEG AUG 2009
      COMMON/CMOVEX/CMOVE(98)
C END AUG 2009
      COMMON/SFACT/SMOVE,SFACTR
C BEG JUN 2013
C     COMMON/CNMN4/VLB(40),VUB(40),SCAL(40)
      COMMON/CNMN4/VLB(98),VUB(98),SCAL(98)
C END JUN 2013
C BEG NOV 2005
      COMMON/IMODFX/IMODFY
C END NOV 2005
C BEG DEC 1990
      COMMON/BNDLCX/VLBX(98),VUBX(98),RATXX(98)
      COMMON/BNDLCY/RATIOY
C BEG JUN 2013
C     COMMON/XAVEXX/XAVE(40)
      COMMON/XAVEXX/XAVE(98)
C END JUN 2013
C END DEC 1990
      DIMENSION X(1),XX(1),VDOWN(1),VUP(1),IDEC(*),VARIAB(*),IWARNV(*)
      CHARACTER*80 WORDV(98)
C
      IF (JJJ.GT.0) SMOVE = SMOVE*SFACTR
      DO 70 I=1,NDV
         VUPP = VUP(I)/ABS(XX(I))
         VDWN = VDOWN(I)/ABS(XX(I))
         VUB(I)=VUPP
         VLB(I)=VDWN
   70 CONTINUE
      DO 80 I=1,NDV
         VUPP = VUP(I)/ABS(XX(I))
         VDWN = VDOWN(I)/ABS(XX(I))
C BEG DEC 1990
         VUPPX = VUBX(I)/ABS(XX(I))
         VDWNX = VLBX(I)/ABS(XX(I))
         RATIO = XX(I)/ABS(XX(I))
         RATAVE= ABS(XAVE(I)/XX(I))
         FACT  = MAX(1.0,RATAVE)
C BEG NOV 2005
         IF (IMODFY.EQ.0) FACT = 1.0
C END NOV 2005
C
C UPPER BOUND LOGIC...
         YY=(1.+RATIO*SMOVE*FACT)*X(I)
         IF (JJJ.EQ.0.AND.ABS(VUPPX).GT.RATIOY) THEN
            YY = X(I) + 0.1*ABS(VUPPX)
            IF (RATXX(I).LT.1.0) THEN
               YMAX = MAX(YY,0.25*VUPPX)
               IF (YMAX.LT.VUB(I)) VUBX(I)= YMAX*ABS(XX(I))
            ENDIF
         ENDIF
         IF (YY.LT.VUB(I)) VUB(I)=YY
         IF (YY.LT.(X(I)+.0001).AND.(X(I)+.0001).LT.VUPP)
     1   VUB(I) = X(I) + 0.0001
C
C        WRITE(8,*)' UPPER BOUND: I,JJJ=',I,JJJ
C        WRITE(8,*)' VUPPX,SMOVE,RATIO,VUB(I)',VUPPX,SMOVE,RATIO,VUB(I)
C        WRITE(8,*)' X(I),XX(I),YY,VUBX(I)=',X(I),XX(I),YY,VUBX(I)
C
C LOWER BOUND LOGIC...
         YY=(1.-RATIO*SMOVE*FACT)*X(I)
         IF (JJJ.EQ.0.AND.ABS(VDWNX).GT.RATIOY) THEN
            YY = X(I) - 0.1*ABS(VDWNX)
            IF (RATXX(I).LT.1.0) THEN
               YMIN = MIN(YY,0.25*VDWNX)
               IF (YMIN.GT.VLB(I)) VLBX(I)= YMIN*ABS(XX(I))
            ENDIF
         ENDIF
C END DEC 1990
         IF (YY.GT.VLB(I)) VLB(I)=YY
         IF (YY.GT.(X(I)-.0001).AND.(X(I)-.0001).GT.VDWN)
     1   VLB(I)=X(I)-.0001
C 
C        WRITE(8,*)' LOWER BOUND: I,JJJ=',I,JJJ
C        WRITE(8,*)' VDWNX,SMOVE,RATIO,VLB(I)',VDWNX,SMOVE,RATIO,VLB(I)
C        WRITE(8,*)' X(I),XX(I),YY,VLBX(I)=',X(I),XX(I),YY,VLBX(I)
C
   80 CONTINUE
C
C     CHECK FOR MOVE LIMITS ON WINDING ANGLES AND LIMIT THEM
C     TO + OR - 5 DEGREES (XMAX = 5./XX(IDV)) IF JJJ.LE.5;
C     TO + OR - 2 DEGREES (XMAX = 2./XX(IDV)) IF JJJ.GT.5;
C     TO + OR - 1 DEGREE  (XMAX = 1./XX(IDV)) IF JJJ.GT.10.
C
      IDV = 0
      DO 85 I = 1,NVAR
         IF (IDEC(I).EQ.0) GO TO 85
         ADD = 0.
         ILET = INDEX(WORDV(I),'winding')
         ILET2= INDEX(WORDV(I),'layup')
         IF (ILET.NE.0.OR.ILET2.NE.0) ADD = 360.
         VARTOT = VARIAB(I) + ADD
         IF (VARTOT.EQ.0.) GO TO 85
         IDV = IDV + 1
         IF (ILET.NE.0.OR.ILET2.NE.0) THEN
            XMAX = ABS(5./XX(IDV))
            IF (JJJ.GT.5)  XMAX = ABS(2./XX(IDV))
            IF (JJJ.GT.10) XMAX = ABS(1./XX(IDV))
            XDIF = VUB(IDV) - X(IDV)
            IF (XDIF.GT.XMAX) VUB(IDV) = X(IDV) + XMAX
            XDIF = X(IDV) - VLB(IDV)
            IF (XDIF.GT.XMAX) VLB(IDV) = X(IDV) - XMAX
         ENDIF
C BEG AUG 2009
         IF (CMOVE(I).GT.0.0) THEN
            XMAX = ABS(CMOVE(I)/XX(IDV))
            XDIF = VUB(IDV) - X(IDV)
            IF (XDIF.GT.XMAX) VUB(IDV) = X(IDV) + XMAX
            XDIF = X(IDV) - VLB(IDV)
            IF (XDIF.GT.XMAX) VLB(IDV) = X(IDV) - XMAX
         ENDIF
C END AUG 2009
C
C BEG AUG 1990
C  IF ABS(GRADIENT) IS GREATER THAN 5.0 LIMIT THE MOVEMENT EVEN MORE.
C
         IF (IWARNV(I).EQ.1) THEN
            XMAX = 0.01
            XDIF = VUB(IDV) - X(IDV)
            IF (XDIF.GT.XMAX) VUB(IDV) = X(IDV) + XMAX
            XDIF = X(IDV) - VLB(IDV)
            IF (XDIF.GT.XMAX) VLB(IDV) = X(IDV) - XMAX
         ENDIF
   85 CONTINUE
C END AUG 1990
C
      VNORM = 0.0
      XNORM = 0.0
      DO 90 I = 1,NDV
      VNORM = VNORM + (VUB(I) - VLB(I))**2
      XNORM = XNORM + X(I)**2
C     WRITE(8,*)' I, VLB(I), X(I), VUB(I)=', I, VLB(I), X(I), VUB(I)
   90 CONTINUE
      VOX = SQRT(VNORM/XNORM)
C
      RETURN
      END
C
C
C
C=DECK      SETUPX
      SUBROUTINE SETUPX(NVAR,IDEC,VARIAB,VARLOW,VARHI,X,VLB,VUB,KOUNT,
     1                  WORDV)
C
C   PURPOSE IS TO SET UP THE VECTOR X OF DECISION VARIABLES AND THE
C   VECTORS VLB AND VUB (LOWER AND UPPER BOUNDS) FROM THE PARAMETER
C   VECTORS VARIAB, VARLOW, VARHI  AND THE DECISION VARIABLE POINTERS
C   IDEC.
C
C  INPUT DATA...
C
C     NVAR = NUMBER OF PARAMETERS IN THE PROBLEM
C     IDEC = VECTOR OF DECISION VARIABLE INDICATORS:
C            IDEC(K) = 0 MEANS KTH PARAMETER IS NOT A DECISION VARIABLE
C            IDEC(K) = 1 MEANS KTH PARAMETER IS     A DECISION VARIABLE
C
C   VARIAB = PARAMETER LIST
C   VARLOW = LOWER BOUNDS OF PARAMETERS
C   VARHI  = UPPER BOUNDS OF PARAMETERS
C
C  OUTPUT DATA...
C
C        X = VECTOR OF DECISION VARIABLES
C      VLB = LOWER BOUND OF DECISION VARIABLES
C      VUB = UPPER BOUND OF DECISION VARIABLES
C
      DIMENSION VARIAB(*),VARLOW(*),VARHI(*),X(*),VLB(*),VUB(*),IDEC(*)
      CHARACTER*80 WORDV(98)
C
      DO 10 I = 1,NVAR
      VLB(I) = 0.
      VUB(I) = 0.
   10 X(I) = 0.
C
      KOUNT = 0
      DO 50 I = 1,NVAR
      IF (IDEC(I).EQ.0) GO TO 50
      VAR = VARIAB(I)
      VARL= VARLOW(I)
      VARH= VARHI(I)
      ILET = INDEX(WORDV(I),'winding')
      ILET2= INDEX(WORDV(I),'layup')
      IF (ILET.NE.0.OR.ILET2.NE.0) THEN
         VAR = VARIAB(I) + 360.
         VARL= VARLOW(I) + 360.
         VARH= VARHI(I)  + 360.
      ENDIF
      IF (VAR.EQ.0.) GO TO 50
      KOUNT = KOUNT + 1
      X(KOUNT) = VAR
      VLB(KOUNT) = VARL
      VUB(KOUNT) = VARH
   50 CONTINUE
      RETURN
      END
C
C
C
C=DECK      SETUPV
      SUBROUTINE SETUPV(NVAR,IDEC,ILV,IDLINK,CLINK,VARIAB,X,
     1                  WORDV,CPOWR,JMAX)
C
C   PURPOSE IS TO SET UP THE VECTOR VARIAB OF DESIGN PARAMETERS
C   FROM THE VECTOR X OF DECISION VARIABLES AND THE DECISION VARIABLE
C   POINTERS, IDEC.
C   THE POINTERS, ILV, TO LINKED VARIABLES; "LINKED TO" POINTERS,
C   IDLINK; AND LINKING CONSTANTS, CLINK; ARE USED ALSO.
C
C  INPUT DATA...
C
C     NVAR = NUMBER OF PARAMETERS IN THE PROBLEM
C     IDEC = VECTOR OF DECISION VARIABLE INDICATORS:
C            IDEC(K) = 0 MEANS KTH PARAMETER IS NOT A DECISION VARIABLE
C            IDEC(K) = 1 MEANS KTH PARAMETER IS     A DECISION VARIABLE
C     ILV  = VECTOR OF LINKING VARIABLE INDICATORS:
C            ILV(K) =  0 MEANS KTH PARAMETER IS NOT A LINKED VARIABLE
C            ILV(K) =  1 MEANS KTH PARAMETER IS     A LINKED VARIABLE
C****************** begin modification ************************************
C  Jeff Jacoby 12/90
C            ILV(K) =  2 MEANS KTH PARAMETER IS A USER-DEFINED LINKED VAR.
C******************  end modification *************************************
C     IDLINK=VECTOR OF "LINKED TO" INDICATORS:
C            IDLINK(K) = J  MEANS THAT THE KTH PARAMETER IS LINKED TO
C                           THE JTH PARAMETER.
C     CLINK =VECTOR OF LINKING CONSTANTS:
C            VARIAB(K) = SUM(J)[CLINK(K,J)*VARIAB(J)**CPOWR(K,J)]
C
C        X = VECTOR OF DECISION VARIABLES
C
C  OUTPUT DATA...
C
C   VARIAB = PARAMETER LIST
C
C BEG NOV 1990
      COMMON/XLINK0/CLINK0(98)
C END NOV 1990
C BEG AUG 2009 (second dimension of IDLINK, CLINK, and CPOWR
C               changed from 20 to 45)
      DIMENSION VARIAB(*),X(*),IDEC(*),ILV(*),IDLINK(98,45)
      DIMENSION CLINK(98,45),CPOWR(98,45),JMAX(*)
C END AUG 2009
      CHARACTER*80 WORDV(98)
C
      KOUNT = 0
      DO 50 I = 1,NVAR
      IF (IDEC(I).EQ.0) GO TO 50
      SUB = 0.
      ILET = INDEX(WORDV(I),'winding')
      ILET2= INDEX(WORDV(I),'layup')
      IF (ILET.NE.0.OR.ILET2.NE.0) SUB = 360.
      VAR = VARIAB(I) + SUB
      IF (VAR.EQ.0) GO TO 50
      KOUNT = KOUNT + 1
      VARIAB(I) = X(KOUNT) - SUB
   50 CONTINUE
C
      KOUNT = 0
      DO 100 I = 1,NVAR
      IF (ILV(I).EQ.0) GO TO 100
c******************** begin modification **************************
c  An IF statement is used here to provide for user-defined linking
c  Jeff Jacoby 12/90
      IF (ILV(I).EQ.1) THEN
C   Linked, but not with user-defined linking
         KOUNT = KOUNT + 1
         JEND = JMAX(KOUNT)
C BEG JUNE 1990
         IF (JEND.EQ.0) JEND = 1
C END JUNE 1990
         VARIAB(I) = 0.0
         DO 90 J = 1,JEND
           IDL = IDLINK(I,J)
           POWR = CPOWR(I,J)
           NPWR = NINT(POWR)
           VARIAB(I) = VARIAB(I) +CLINK(I,J)*VARIAB(IDL)**NPWR
   90    CONTINUE
      ELSE
C   User-defined linking for the linked variable VARIAB(I)
         CALL USRLNK(VARIAB(I),I,VARIAB)
      ENDIF
C******************* end modification ********************************
C BEG NOV 1990
      VARIAB(I) = VARIAB(I) + CLINK0(I)
C END NOV 1990
  100 CONTINUE
C
      RETURN
      END
C
C
C
C=DECK      NEWY
C BEG DEC 1990
      SUBROUTINE NEWY(NDEC,IDV,IDEC,X,Y,DX,WORDV,NVAR,VARIAB,JJJ,
     1                IWARDX,DX0,FACTDX)
C END DEC 1990
C
C     PURPOSE IS TO CREATE NEW DESIGN VECTOR Y(I), ONE MEMBER OF WHICH
C     IS SLIGHTLY DIFFERENT FROM THAT IN THE ORIGINAL VECTOR X(I).
C
C      INPUT DATA...
C
C      NDEC  = number of decision variables in optimization problem
C        IDV = decision variable under consideration currently
C       IDEC = indicator for decision variable, 0, 1  
C          X = vector of decision variables at current design point
C     IWARDX = warning index: if it is unity there is a large gradient.
C        DX0 = initial perturbation amplitude
C
C      OUTPUT DATA...
C
C          Y = modified vector of decision variables
C         DX = increment in decision variable
      DIMENSION IDEC(*),X(*),Y(*),VARIAB(*)
      CHARACTER*80 WORDV(98)
C
C BEG DEC 1990
      FACT = DX0
      IF (JJJ.GT.10) FACT = DX0/5.
C END DEC 1990
C
C   CHECK TO SEE IF IDVth DECISION VARIABLE IS A WINDING ANGLE, AND
C   IF IT IS SET FACT ACCORDINGLY...
C
      ITESTV = 0
      DO 85 I = 1,NVAR
         IF (IDEC(I).EQ.0) GO TO 85
         ADD = 0.
         ILET = INDEX(WORDV(I),'winding')
         ILET2= INDEX(WORDV(I),'layup')
         IF (ILET.NE.0.OR.ILET2.NE.0) ADD = 360.
         VARTOT = VARIAB(I) + ADD
         IF (VARTOT.EQ.0.) GO TO 85
         ITESTV = ITESTV + 1
         IF ((ILET.NE.0.OR.ILET2.NE.0).AND.ITESTV.EQ.IDV) THEN
            FACT = 0.005
            GO TO 87
         ENDIF
   85 CONTINUE
   87 CONTINUE
C
C BEG DEC 1990
      IF (IWARDX.EQ.1) FACT = 0.005
C END DEC 1990
      DO 100 I = 1,NDEC
      Y(I) = X(I)
      IF (I.NE.IDV) GO TO 100
      RATIO = X(I)/ABS(X(I))
C BEG DEC 1990
      Y(I) = X(I)*(1.+RATIO*FACT*FACTDX)
C END DEC 1990
      DX   = FACT
  100 CONTINUE
      RETURN
      END
C
C
C
C=DECK      GRADG
C BEG AUG 1990
C BEG DEC 1990
C BEG JUN 2013
C     SUBROUTINE GRADG(IBEG,IEND,IDV,DX,G,GSTAR,A,IFILE,NPRINT,
C    1                 NUMVAR,WORDV,XSAVE,IWARNV,WORDB,VARDEC,
C    1                 FACTDX)
      SUBROUTINE GRADG(IBEG,IEND,IDV,DX,G,GSTAR,A,IFILE,NPRINT,
     1                 NUMVAR,WORDV,XSAVE,IWARNV,WORDB,VARDEC,
     1                 FACTDX,NDEC)
C END JUN 2013
C END DEC 1990
C
C     PURPOSE IS TO FIND THE GRADIENT OF THE CONSTRAINT CONDITIONS
C     WITH RESPECT TO THE IDV TH  DESIGN VARIABLE.
C
C BEG JUN 2013
C     DIMENSION GSTAR(*),G(*),A(41,100),WORDB(*),VARDEC(*)
      DIMENSION GSTAR(*),G(*),A(98,201),WORDB(*),VARDEC(*)
C END JUN 2013
      CHARACTER*80 WORDV,WORDB
      CHARACTER*12 VARDEC
C
      K = IEND - IBEG + 1
      DO 10 I = 1,K
      J = I + IBEG - 1
C BEG DEC 1990
      A(IDV,J) = (GSTAR(I) - G(I))/(DX*FACTDX)
C     A(IDV,J) = (GSTAR(I) - G(I))/(DX*FACTDX*ABS(XSAVE)*ABS(G(I)))
C     A(IDV,J) = (GSTAR(I) - G(I))/(DX*FACTDX*ABS(XSAVE))
C END DEC 1990
      IF (NPRINT.GE.2)
     1 WRITE(IFILE,5) NUMVAR,WORDV,IBEG,IEND,I,WORDB(I),VARDEC(IDV),
     1                VARDEC(IDV),DX*FACTDX*100.,GSTAR(I),G(I),J,
     1                A(IDV,J)
    5 FORMAT(//' CONSTRAINT CONDITION GRADIENTS FOR  VARIABLE NO.',I3/
     1' ',A/
     1' STARTING CONSTRAINT NO.,IBEG=',I3,' ENDING CONSTRT, IEND=',I3/
     1' CONSTRAINT CONDITION NUMBER, ICONST =',I3,'   DEFINITION:'/
     1' ',A/
     1' DECISION VARIABLE NAME:                        ',A/
     1' AMOUNT BY WHICH ',A,'  IS PERTURBED: DX(PERCENT)=',1PE12.4/
     1' CONSTRAINT CONDITION FOR PERTURBED DESIGN, GSTAR(I)=',1PE12.4/
     1' CONSTRAINT CONDITION FOR ORIGINAL  DESIGN,     G(I)=',1PE12.4/
     1' GLOBAL CONSTRAINT CONDITION NUMBER, J =',I3/
     1' GLOBAL CONSTRAINT CONDITION GRADIENT,  (GSTAR-G)/DX=',1PE12.4//)
C
C BEG NOV 2005
C     IF (IWARNV.EQ.0.AND.G(I).LT.1.1.AND.ABS(A(IDV,J)).GT.5.0
C    1               .AND.G(I).GT.0.5) THEN
      IF (IWARNV.EQ.0.AND.G(I).LT.1.1.AND.ABS(A(IDV,J)).GT.10.0
     1               .AND.G(I).GT.0.5) THEN
C END NOV 2005
         WRITE(IFILE,7) NUMVAR,XSAVE,WORDV
    7    FORMAT(/' *** WARNING *** WARNING *** WARNING *** WARNING ***'/
     1' BEHAVIOR IS VERY SENSITIVE TO SMALL CHANGES IN VARIABLE NO.',I2/
     1' THE UNPERTURBED VALUE OF WHICH IS ',1PE12.4,' DEFINED AS:'/
     1' ',A/
     1' THE MOVE LIMITS OF THIS DECISION VARIABLE WILL BE SEVERELY'/
     1' CONSTRAINED FOR THE REST OF THE ITERATIONS IN THIS RUN.'/
     1' ****** END WARNING **** END WARNING **** END WARNING ******'/)
        IWARNV = 1
      ENDIF
C END AUG 1990
   10 CONTINUE
      RETURN
      END
C
C
C
C=DECK      ESCAPE
      SUBROUTINE ESCAPE(IFAIL,NVAR,NDEC,NCON,ISCAPE,VARIAB,VARHI,G,
     1                  IESCAP,ILOADS,JACTIV)
C
C  PURPOSE IS TO PUSH DESIGN TOWARD FEASIBLE REGION IF CONMIN CAN'T
C  HANDLE IT.
C
C  INPUT DATA...
C
C   IFAIL = 0 IF CONMIN CHANGED DESIGN, 1  IF CONMIN FAILED
C    NVAR = NUMBER OF DESIGN PARAMETERS
C    NDEC = NUMBER OF DECISION VARIABLES
C    NCON = NUMBER OF CONSTRAINT CONDITIONS
C  ISCAPE = ARRAY OF INDICATORS FOR SUITABILITY OF DESIGN PARAMETER AS
C           AN ESCAPE PARAMETER
C  VARIAB = ARRAY OF DESIGN PARAMETERS
C   VARHI = UPPER BOUND OF DESIGN PARAMETER
C       G = DESIGN MARGINS
C
C  OUTPUT DATA...
C
C  IESCAP = 0 IF NO ESCAPE IS NECESSARY; 1  IF  ESCAPE IS NECESSARY
C
C BEG OCT 2005
      COMMON/PRMOUT/IFILE3,IFILE4,IFILE8,IFILE9,IFIL11
C END OCT 2005
      DIMENSION ISCAPE(*),VARIAB(*),VARHI(*),G(*)
C
      IESCAP = 0
      IF (ILOADS.EQ.1) JACTIV = 0
      ICLOSE = 1
C
C   TEST FOR ACTIVE BEHAVIORAL CONSTRAINTS...
C
      DO 10 I = 1,NCON
      GI = -G(I) + 1.
      IF (GI.LT.-0.1) GO TO 10
      COMPAR = 0.95
      IF (IFAIL.EQ.1) COMPAR = 0.05
      IF (GI.GE.COMPAR) IESCAP = 1
      IF (GI.GT.0.03) ICLOSE = 0
      JACTIV = JACTIV + 1
   10 CONTINUE
C BEG OCT 2005
C23456789012345678901234567890123456789012345678901234567890123456789012
      WRITE(IFILE8,'(A,7I4)')
     1' in ESCAPE: NCON, IESCAP, ICLOSE, IFAIL, JACTIV, NDEC, NVAR=',
     1             NCON, IESCAP, ICLOSE, IFAIL, JACTIV, NDEC, NVAR
      WRITE(IFILE8,'(A,/,(10I4))')' ISCAPE(I),I=1,NVAR=',
     1                             (ISCAPE(I),I=1,NVAR)
      WRITE(IFILE8,'(A,/,(1P,5E12.3))')
     1         ' Before change by FMULT: VARIAB(I),I=1,NVAR=',
     1                                  (VARIAB(I),I=1,NVAR)
      WRITE(IFILE8,'(A,/,(1P,5E12.3))')' VARHI(I),I=1,NVAR=',
     1                                  (VARHI(I),I=1,NVAR)
C END OCT 2005
      IF (IESCAP.EQ.1) GO TO 30
C     IF (NDEC.GE.JACTIV.OR.IFAIL.EQ.0) GO TO 100 (OLD VERSION)
C BEG OCT 2005 (following statement is temporarily commented...
      IF (NDEC.GT.JACTIV.OR.IFAIL.EQ.0) GO TO 100
C END OCT 2005
      IF (ICLOSE.EQ.1) GO TO 100
C
C     ONE OF THE BEHAVIORAL CONSTRAINTS IS BADLY VIOLATED (GI.GE.0.95)
C     OR THE NUMBER OF ACTIVE CONSTRAINTS, JACTIV, IS GREATER THAN OR
C     EQUAL TO THE NUMBER, NDV, OF DECISION VARIABLES.  IT IS NECESSARY
C     TO MODIFY THE DESIGN AND AVOID ADS ITERATIVELY UNTIL
C     (NDEC .GT. JACTIV) OR UNTIL IFAIL = 0.
C
   30 CONTINUE
C
      FMULT = 1.1
C
      IFLAG = 0
      DO 40 I = 1,NVAR
      IF (ISCAPE(I).EQ.0) GO TO 40
      IF (VARIAB(I).GE.VARHI(I) ) GO TO 40
      VARIAB(I) = VARIAB(I)*FMULT
      IFLAG = 1
   40 CONTINUE
C
      WRITE(IFILE8,'(A,/,(1P,5E12.3))')
     1         '  After change by FMULT: VARIAB(I),I=1,NVAR=',
     1                                  (VARIAB(I),I=1,NVAR)
C
      IESCAP = 1
      IF (IFLAG.EQ.0) IESCAP = 0
  100 CONTINUE
      RETURN
      END
