C=DECK      DECIDE
C  PURPOSE IS TO CHOOSE TYPE OF ANALYSIS AND IF OPTIMIZATION, TO
C  CHOOSE DECISION VARIABLES AND LINKED VARIABLES
C
      PROGRAM DECIDE
C
      COMMON/PRMFIL/IFILE,IFILE2,IOUT,IPRM(5)   
      COMMON/PRMOUT/IFILE3,IFILE4,IFILE8,IFILE9,IFIL11   
      COMMON/INDAT/INFILE
C BEG JUL 2009 (second dimension of CLINK(i,j) changed from 5 to 20)
C BEG AUG 2009 (second dimension of CLINK(i,j) changed from 20 to 45)
      COMMON/LWRUPR/VLB(98),VUB(98),CLINK(98,45),VLINK(98),VBV(99)
C END AUG 2009
C END JUL 2009
      COMMON/ADDRSS/IADDV(98),IADDP(99),IADDA(99),IADDC(99),IADDD(98)
      COMMON/NUMPAR/NPAR,NVAR,NALLOW,NCONST,NDEC,NLINK,NESCAP,ITYPE
      COMMON/PARAMS/PAR(99),VAR(98),ALLOW(99),CONST(99),DEC(98),ESC(98)
      COMMON/WORDS1/WORDP(99),WORDV(98),WORDA(99),WORDC(99),WORDD(98)
      COMMON/NUMPR2/ILAR,ICAR,IOAR,IFLAT,NCASES,NPRINT
C BEG AUG 2009
      DIMENSION WORDJQ(45)
C BEG JUN 2013
C     CHARACTER*160 WORDJQ
      CHARACTER*320 WORDJQ
C END JUN 2013
      COMMON/CMOVEX/CMOVE(98)
      COMMON/WORDS2/WORDL(98),WORDE(98),WORDIQ(45)
      COMMON/OPTVAR/IDV(98),ILV(98),IDLINK(98,45),IEV(98),JTERMS(45)
      COMMON/PARAM2/FLAR(98),CAR(99),OAR(98),FSAFE(99),CPWR(98,45)
      COMMON/PARAM3/CINEQ(45,45),DPWREQ(45,45)
      COMMON/PARAM4/IDINEQ(45,45),NINEQ,JINEQ(45),IEQTYP(45)
C END AUG 2009
      COMMON/WORDS3/WORDF(98),WORDB(99),WORDOB(98),WORDS(99)
      COMMON/PWORD/PHRASE
      COMMON/PWORD2/IBLANK
C BEG NOV 1990
      COMMON/XLINK0/CLINK0(98)
      COMMON/BNDLCX/VLBX(98),VUBX(98),RATXX(98)
C BEG JULY 2012
C     DIMENSION X(50) (error found by Frank Weiler)
      DIMENSION X(98)
C END JULY 2012
C END NOV 1990
      DIMENSION ISUBD1(98),ISUBD2(98),ISUBL1(98),ISUBL2(98)
      DIMENSION ISUBE1(98),ISUBE2(98),ISUBIQ(98),ILETTH(98)
C BEG DEC 1990
C BEG AUG 2009
      DIMENSION ISUBT(98),TERM(45,45),TERMC(45,45),IENDTJ(45)
C END AUG 2009
C END DEC 1990
      CHARACTER*80 WORDP,WORDV,WORDA,WORDC,WORDD,WORDL,WORDE,PHRASE
      CHARACTER*80 WORDF, WORDB,WORDOB,WORDS,WORDIQ
C BEG OCT 2005
C     CHARACTER*4 ANSOUT,ANSWER,QUAL
C     CHARACTER*12 CASE
C     CHARACTER*16 CASE2,CASE3
      CHARACTER*4 ANSOUT,ANSWER,QUAL,CHARAC
      CHARACTER*28 CASE
      CHARACTER*32 CASE2,CASE3
C END OCT 2005
      CHARACTER*80 TERM,TERMC
      CHARACTER*7  CLINKP,CPWRP,C0P
      CHARACTER*4 WLTGT
      CHARACTER*2  CIDL,CIVAR,WCPWRP
      CHARACTER*72 ARGSTR
c************ begin modification **********************************
c Introduce new integer variable for choosing type of linking
c Jeff Jacoby 12/90
      integer lnktyp
c************ end modification ************************************
      LOGICAL ANSL1     
#if cnvx
      external signal_handler
      integer dummying, signal
      dummyint = signal(2, signal_handler, -1)
#endif
#if sgi
      integer signal_handler
      external signal_handler
      integer dummyint, signal
      dummyint = signal(2, signal_handler, -1)
#endif
#if star
      integer signal_handler
      external signal_handler
      call signal(2, signal_handler)
#endif
C
C  ESTABLISH NAME FOR THE CASE...
C
      CALL CASSPC(5,CASE)
      I=INDEX(CASE,' ')
      IF(I.NE.0) THEN
         CASE2=CASE(:I-1)//'.OPD'
         CASE3=CASE(:I-1)//'.CBL'
      ELSE
         CASE2=CASE//'.OPD'
         CASE3=CASE//'.CBL'
      ENDIF
      NLET = I - 1
C BEG OCT 2005
C     IF (I.EQ.0) NLET = 12
      IF (I.EQ.0) NLET = 28
C END OCT 2005
C
      IFILE = 2   
      IFILE4= 4
      IFILE7= 7
      IFILE8 = 8
C BEG AUG 1990
      IOUTFL = 3
C BEG VMS
c     OPEN(UNIT=2,FILE='GENOPT:URPROMPT.DAT',STATUS='OLD',READONLY)
C     OPEN(UNIT=4,FILE='PANDA2:TUTORDEC.DAT',STATUS='OLD',READONLY)
C END VMS
C BEG UNIX
      OPEN(UNIT=2,FILE='GENOPT/URPROMPT.DAT',STATUS='OLD')
C     OPEN(UNIT=4,FILE='PANDA2/TUTORDEC.DAT',STATUS='OLD')
C END UNIX
      OPEN(UNIT=3,FILE=CASE,STATUS='UNKNOWN')
      OPEN(UNIT=7,FILE=CASE3,STATUS='UNKNOWN',FORM='UNFORMATTED')
      OPEN(UNIT=8,FILE=CASE2,STATUS='UNKNOWN')
C END AUG 1990
C
      WRITE(6,5) CASE(1:NLET),CASE(1:NLET),CASE(1:NLET),
     1           CASE(1:NLET),CASE(1:NLET)
C BEG JULY 1989
      WRITE(IFILE8,'(A,A,A)')
     1' ***************** THIS IS THE  ',CASE(1:NLET),
     1'.OPD FILE ******************'
C END JULY 1989
      WRITE(IFILE8,5) CASE(1:NLET),CASE(1:NLET),CASE(1:NLET),
     1                CASE(1:NLET),CASE(1:NLET)
    5 FORMAT(//' *****************   DECIDE   *******************'/
     1' The purpose of DECIDE is to permit you to choose decision'/
     1' variables, linked variables, inequality constraints based on'/
     1' dimensions, not behavior, and escape variables for the'/
     1' optimization run or runs to follow. The results of the'/
     1' interactive session are saved in a file called ',A,'.DEC, in'/
     1' which ',A,' is your name for the case. You may find this file'/
     1' useful for future runs of DECIDE in which you want to avoid'/
     1' answering many questions interactively. DECIDE also generates'/
     1' a file called ',A,'.OPD.  ',A,'.OPD contains a summary of'/
     1' optimization parameters. If you choose the tutorial option,'/
     1' ',A,'.OPD contains a complete list of the interactive session,'/
     1' including prompting questions, all "help" paragraphs, your'/
     1' responses to the prompting questions, and evolving lists'/
     1' of optimization parameters as they are chosen by you.'/
     1' ****************************************************'/)
C
      QUAL = '.DEC'
      CALL NFILE(IFILE,INFILE,IOUT,QUAL,IPROMP,IFILE8,CASE,IOUTFL)
C
      CALL GETCOM(IFILE7)
C
      ITYPE = 1
C
C BEG FEB 2012
      IF (NVAR.GT.98) THEN
C END FEB 2012
         WRITE(6,*)' TOO MANY CANDIDATES FOR DECISION VARIABLES.'
         WRITE(6,*)' PLEASE MAKE PROBLEM SMALLER.'
         CALL ERREX
      ENDIF
C
      NINEQ = 0
C BEG AUG 2009
      CALL MOVERX(0.,0,CMOVE,1,NVAR)
C END AUG 2009
      CALL MOVERX(0,0,IDV,1,NVAR)
      CALL MOVERX(0,0,ILV,1,NVAR)
C BEG JUL 2009
      CALL MOVERX(0,0,IDLINK,1,4410)
C END JUL 2009
      CALL MOVERX(0,0,IEQTYP,1,45)
      CALL MOVERX(0,0,JINEQ,1,45)
      CALL MOVERX(0,0,IEV,1,NVAR)
C BEG JUL 2009
      CALL MOVERX(0.,0,CLINK,1,4410)
      CALL MOVERX(0.,0,CPWR,1,4410)
C END JUL 2009
C BEG DEC 1990
      CALL MOVERX(0.,0,CINEQ,1,2025)
      CALL MOVERX(0.,0,DPWREQ,1,2025)
      CALL MOVERX(0,0,IDINEQ,1,2025)
C END DEC 1990
      CALL MOVERX(0.,0,VUB,1,NVAR)
      CALL MOVERX(0.,0,VLB,1,NVAR)
C BEG NOV 1990
      CALL MOVERX(0.,0,CLINK0,1,98)
      CALL MOVERX(0.,0,VUBX,1,NVAR)
      CALL MOVERX(0.,0,VLBX,1,NVAR)
      CALL MOVERX(1.1,0,RATXX,1,NVAR)
C END NOV 1990
      CALL MOVERX(0.,0,VBV,1,99)
      CALL MOVERX(1,0,ISUBD1,1,NVAR)
      CALL MOVERX(0,0,ISUBD2,1,NVAR)
      CALL MOVERX(1,0,ISUBL1,1,NVAR)
      CALL MOVERX(0,0,ISUBL2,1,NVAR)
      CALL MOVERX(1,0,ISUBE1,1,NVAR)
      CALL MOVERX(1,0,ISUBE2,1,NVAR)
      CALL MOVERX(1,0,ISUBT,1,NVAR)
      CALL MOVERX(0,0,ISUBIQ,1,NVAR)
      CALL MOVERX(0,0,ILETTH,1,NVAR)
C
      DO 7 IVAR = 1,NVAR
         ADD = 0.
         ILET = INDEX(WORDV(IVAR),'winding')
         ILET2= INDEX(WORDV(IVAR),'layup')
         IF (ILET.NE.0.OR.ILET2.NE.0) ADD = 360.
         VARTOT = VAR(IVAR) + ADD
         IF (VARTOT.EQ.0.) THEN
            ISUBD2(IVAR) = 1
            ISUBL2(IVAR) = 1
         ENDIF
    7 CONTINUE
C
      ILINK = 0
      IDEC = 0
C BEG JULY 1989
C BEG JUN 2013
C     IDMAX = 40
      IDMAX = 98
C END JUN 2013
C END JULY 1989
      ICONST = 0
C BEG JUN 2013
      ICONSTU = 0
C END JUN 2013
   10 CONTINUE
      IF (IDEC.GT.0) THEN

C     CALL OUTVAR(NVAR,VAR,WORDV,IADDV,'           DECISION VARIABLES CH
C    1OSEN SO FAR                      ',6,60,1,ISUBD1,1)
        ARGSTR = '           DECISION VARIABLES CHO'//
     $           'SEN SO FAR                      '
        CALL OUTVAR(NVAR,VAR,WORDV,IADDV,ARGSTR,6,60,1,ISUBD1,1)

C
        IF (IPROMP.GT.1) THEN

C     CALL OUTVAR(NVAR,VAR,WORDV,IADDV,'           DECISION VARIABLES CH
C    1OSEN SO FAR                      ',IPROMP,65,1,ISUBD1,1)
          ARGSTR = '           DECISION VARIABLES CHO'//
     $             'SEN SO FAR                      '
          CALL OUTVAR(NVAR,VAR,WORDV,IADDV,ARGSTR,IPROMP,65,1,ISUBD1,1)

        ENDIF
      ENDIF
C

C     CALL OUTVAR(NVAR,VAR,WORDV,IADDV,'PARAMETERS FROM WHICH A DECISION
C    1 VARIABLE MUST NOW BE CHOSEN     ',6,60,1,ISUBD2,1)
      ARGSTR = 'PARAMETERS FROM WHICH A DECISION '//
     $         'VARIABLE MUST NOW BE CHOSEN     '
      CALL OUTVAR(NVAR,VAR,WORDV,IADDV,ARGSTR,6,60,1,ISUBD2,1)

      IF (IPROMP.GT.1) THEN

C     CALL OUTVAR(NVAR,VAR,WORDV,IADDV,'PARAMETERS FROM WHICH A DECISION
C    1 VARIABLE MUST NOW BE CHOSEN     ',IPROMP,65,1,ISUBD2,1)
        ARGSTR = 'PARAMETERS FROM WHICH A DECISION '//
     $           'VARIABLE MUST NOW BE CHOSEN     '
        CALL OUTVAR(NVAR,VAR,WORDV,IADDV,ARGSTR,IPROMP,65,1,ISUBD2,1)

      ENDIF
C
      REWIND IFILE
      CALL DATUM(IFILE,510,1,2,IVAR,REALL,CHARAC,IOUT,0,0,0,IPROMP)
      IF (ISUBD2(IVAR).NE.0) THEN
         WRITE(6,*)' BAD CHOICE FOR DECISION VARIABLE, TRY AGAIN.'
         BACKSPACE(IOUT)
         GO TO 10
      ENDIF
C
      DO 20 J = 1,60
   20 PHRASE(J:J) = WORDV(IVAR)(J:J)
      FVAR = IVAR
      IDV(IVAR) = 1
      ISUBD1(IVAR) = 0
      ISUBD2(IVAR) = 1
      ISUBL2(IVAR) = 1
      ISUBE2(IVAR) = 0
      ILET  = INDEX(WORDV(IVAR),'thickness')
      ILET2 = INDEX(WORDV(IVAR),'Thickness')
      ILET3 = INDEX(WORDV(IVAR),'THICKNESS')
      IF (ILET.NE.0.OR.ILET2.NE.0.OR.ILET3.NE.0) ILETTH(IVAR) = 1
C
C BEG JUN 2013
C     CALL GETVAR(0,0,FVAR,IDEC,DEC,WORDD,IADDD)
      CALL GETVAR(0,0,FVAR,IDEC,DEC,WORDD)
C END JUN 2013
      CALL DATUM(IFILE,520,1,1,INT,VLB(IVAR),CHARAC,IOUT,IVAR,0,
     1           1,IPROMP)
C BEG NOV 1990
      IF (VLB(IVAR).EQ.0.) VLB(IVAR) = 0.00001*ABS(VAR(IVAR))
      IF (VAR(IVAR).LT.VLB(IVAR)) THEN
         WRITE(6,12) IVAR,VAR(IVAR),VLB(IVAR)
   12    FORMAT(/' BAD INPUT FOR VARIABLE NO.',I3,':'/
     1           '  INITIAL VALUE FOR THE VARIABLE, (',1PE12.4,')'/
     1           '  IS LESS THAN THE LOWER BOUND,   (',1PE12.4,')')
         CALL ERREX
      ENDIF
C BEG JUN 2013
C     CALL GETVAR(IVAR,0,VLB(IVAR),ICONST,CONST,WORDC,IADDC)
      CALL GETVAR(IVAR,0,VLB(IVAR),ICONST,CONST,WORDC)
C END JUN 2013
      VBV(ICONST) = FVAR
      CALL DATUM(IFILE,530,1,1,INT,VUB(IVAR),CHARAC,IOUT,IVAR,0,
     1           1,IPROMP)
      IF (VUB(IVAR).EQ.0.) VUB(IVAR) = -0.00001*ABS(VAR(IVAR))
      IF (VAR(IVAR).GT.VUB(IVAR)) THEN
         WRITE(6,13) IVAR,VAR(IVAR),VUB(IVAR)
   13    FORMAT(/' BAD INPUT FOR VARIABLE NO.',I3,':'/
     1           '  INITIAL VALUE FOR THE VARIABLE, (',1PE12.4,')'/
     1           '  IS GREATER THAN THE UPPER BOUND,(',1PE12.4,')')
         CALL ERREX
      ENDIF
C END NOV 1990
C
      ILET = INDEX(WORDV(IVAR),'winding')
      ILET2= INDEX(WORDV(IVAR),'layup')
      IF (ILETTH(IVAR).EQ.0.AND.ILET.EQ.0.AND.ILET2.EQ.0) THEN
        IF (VAR(IVAR).EQ.0.0) THEN
         WRITE(6,22) IVAR, VAR(IVAR), CASE(1:NLET)
C BEG NOV 1990
   22    FORMAT(/' ****************  FATAL ERROR  *****************'/
     1'  YOU HAVE CHOSEN VARIABLE NO. ',I3,'  TO BE A DECISION'/
     1'  VARIABLE.  HOWEVER, THE VALUE OF THIS VARIABLE IS',1PE12.4' .'/
     1'  DECISION VARIABLES CANNOT BE EQUAL TO ZERO.'/
     1'  THIS RUN WILL ABORT. IF YOU REALLY WANT THIS VARIABLE AS A'/
     1'  DECISION VARIABLE, THEN GO BACK TO "BEGIN" OR USE "CHANGE" TO'/
     1'  CHANGE ITS VALUE TO SOMETHING DIFFERENT FROM 0.0. USE A VALUE'/
     1'  THAT IS A REASONABLE PERCENTAGE OF A REASONABLE UPPER AND/OR'/
     1'  LOWER BOUND.'/
     1' *************************************************************'/)
         CALL EXIT(1)
        ENDIF
C       IF (ABS(VAR(IVAR)).LT.0.1*VUB(IVAR)) THEN
C        WRITE(6,23) IVAR, VAR(IVAR), VUB(IVAR)
C  23    FORMAT(/' ****************  WARNING  *****************'/
C    1'  YOU HAVE CHOSEN VARIABLE NO. ',I3,'  TO BE A DECISION'/
C    1'  VARIABLE.  HOWEVER, THE ABSOLUTE VALUE OF THIS VARIABLE,',
C    1  1PE12.4' ,'/
C    1'  IS LESS THAN TEN PER CENT OF ITS UPPER BOUND, VUB=',1PE12.4'.'/
C    1'  IF THIS VARIABLE IS NEAR ZERO, THEN IT IS PROBABLY NOT A GOOD'/
C    1'  CHOICE AS A DECISION VARIABLE. IF YOU REALLY WANT THIS'/
C    1'  VARIABLE TO BE A DECISION VARIABLE, AND IF IT IS NEAR ZERO,'/
C    1'  YOU SHOULD EITHER CHANGE ITS INITIAL VALUE AND REDO "BEGIN"'/
C    1'  OR YOU SHOULD USE "CHANGE" TO INCREASE ITS VALUE. USE A VALUE'/
C    1'  THAT IS A REASONABLE PERCENTAGE OF A REASONABLE UPPER BOUND.'/
C    1' ******************** END WARNING ************************'/)
C       ENDIF
      ENDIF
C
C BEG JUN 2013
C     CALL GETVAR(IVAR,0,VUB(IVAR),ICONST,CONST,WORDC,IADDC)
      CALL GETVAR(IVAR,0,VUB(IVAR),ICONSTU,CONST,WORDC)
C     VBV(ICONST) = FVAR
      VBV(ICONSTU) = FVAR
C END JUN 2013
   21 CONTINUE
C BEG AUG 2009
      CALL DATUM(IFILE,533,0,0,INT,REALL,CHARAC,IOUT,0,0,0,IPROMP)
      CALL DATUM(IFILE,535,1,2,INT,REALL,ANSOUT,IOUT,IVAR,0,1,IPROMP)
      IF (ANSL1('Y',ANSOUT,INFILE)) THEN
         CALL DATUM(IFILE,537,1,2,INT,CMOVE(IVAR),ANSOUT,IOUT,IVAR,0,
     1                                                      1,IPROMP)
      ENDIF
C END AUG 2009
C BEG JULY 1989
      IDMORE = IDMAX - IDEC
      IF (IDMORE.LT.IDEC) THEN
         WRITE(6,*)' '
         WRITE(6,'(I4,A)') IDEC,
     1                   ' decision variables have now been identified.'
         WRITE(6,'(I4,A)') IDMAX, ' decision variables are permitted.'
         WRITE(6,'(I4,A)') IDMORE,
     1                   ' additional decision variables are allowed.'
         WRITE(6,*)' '
      ENDIF
      IF (IDMORE.LT.0) THEN
         WRITE(6,*)
     1    ' YOU HAVE TOO MANY DECISION VARIABLES. REDEFINE THE PROBLEM.'
         CALL ERREX
      ENDIF
C END JULY 1989
      CALL DATUM(IFILE,540,1,1,INT,REALL,ANSOUT,IOUT,0,0,0,IPROMP)
      IF (ANSL1('Y',ANSOUT,INFILE)) THEN
         DO 24 I = 1,NVAR
            IF (ISUBD2(I).EQ.0) GO TO 10
   24    CONTINUE
         WRITE(6,*)' NO MORE AVAILABLE DECISION VARIABLE CANDIDATES.'
         WRITE(6,*)' NOW PROCEEDING TO NEXT SECTION.'
      ENDIF
C BEG JULY 1989
      IDMORE = IDMAX - IDEC
      IF (IDMORE.GE.IDEC) THEN
         WRITE(6,*)' '
         WRITE(6,'(I4,A)') IDEC,
     1                   ' decision variables have now been identified.'
         WRITE(6,'(I4,A)') IDMAX, ' decision variables are permitted.'
         WRITE(6,'(I4,A)') IDMORE,
     1                   ' additional decision variables are allowed.'
         WRITE(6,*)' '
      ENDIF
C END JULY 1989
C
      NDEC = IDEC
      NCONST = ICONST
C

C     CALL OUTVAR(NVAR,VAR,WORDV,IADDV,'        DECISION VARIABLES FOR T
C    1HE OPTIMIZATION PROBLEM          ',IFILE8,65,1,ISUBD1,1)
      ARGSTR = '        DECISION VARIABLES FOR TH'//
     $         'E OPTIMIZATION PROBLEM          '
      CALL OUTVAR(NVAR,VAR,WORDV,IADDV,ARGSTR,IFILE8,65,1,ISUBD1,1)

C
C     CALL OUTV2(IFILE8,0,NCONST,VBV,CONST,WORDC,'LOWER AND UPPER BOUNDS
C    1 OF THE DECISION VARIABLES                  ')
      ARGSTR = 'LOWER AND UPPER BOUNDS OF THE DE'//
     $         'CISION VARIABLES                '
      CALL OUTV2(IFILE8,0,NCONST,VBV,CONST,WORDC,ARGSTR)
C
C BEG NOV 1990
      CALL SETUPX(NVAR,IDV,VAR,VLB,VUB,X,VLBX,VUBX,KOUNT,WORDV)
C END NOV 1990
C
C  NEXT, CHOOSE LINKED VARIABLES...
C BEG DEC 1990
      CALL DATUM(IFILE,548,0,0,INT,REALL,CHARAC,IOUT,0,0,0,IPROMP)
C END DEC 1990
      CALL DATUM(IFILE,550,1,2,INT,REALL,ANSOUT,IOUT,0,0,0,IPROMP)
      IF (ANSL1('N',ANSOUT,INFILE)) GO TO 70
C
      KOUNT = 0
C
   30 CONTINUE
C
      KOUNT = KOUNT + 1
C
      JJ = 1
      IF (ILINK.GT.0) THEN

C     CALL OUTVAR(NVAR,VAR,WORDV,IADDV,'             LINKED VARIABLES CH
C    1OSEN SO FAR                      ',6,60,1,ISUBL1,1)
        ARGSTR = '             LINKED VARIABLES CHO'//
     $           'SEN SO FAR                      '
        CALL OUTVAR(NVAR,VAR,WORDV,IADDV,ARGSTR,6,60,1,ISUBL1,1)

        IF (IPROMP.GT.1) THEN

C     CALL OUTVAR(NVAR,VAR,WORDV,IADDV,'             LINKED VARIABLES CH
C    1OSEN SO FAR                      ',IPROMP,65,1,ISUBL1,1)
          ARGSTR = '             LINKED VARIABLES CHO'//
     $             'SEN SO FAR                      '
          CALL OUTVAR(NVAR,VAR,WORDV,IADDV,ARGSTR,IPROMP,65,1,ISUBL1,1)

        ENDIF
      ENDIF
C

C     CALL OUTVAR(NVAR,VAR,WORDV,IADDV,'PARAMETERS FROM WHICH A LINKED V
C    1ARIABLE MUST NOW BE CHOSEN       ',6,60,1,ISUBL2,1)
      ARGSTR = 'PARAMETERS FROM WHICH A LINKED VA'//
     $         'RIABLE MUST NOW BE CHOSEN       '
      CALL OUTVAR(NVAR,VAR,WORDV,IADDV,ARGSTR,6,60,1,ISUBL2,1)

      IF (IPROMP.GT.1) THEN

C     CALL OUTVAR(NVAR,VAR,WORDV,IADDV,'PARAMETERS FROM WHICH A LINKED V
C    1ARIABLE MUST NOW BE CHOSEN       ',IPROMP,65,1,ISUBL2,1)
        ARGSTR = 'PARAMETERS FROM WHICH A LINKED VA'//
     $           'RIABLE MUST NOW BE CHOSEN       '
        CALL OUTVAR(NVAR,VAR,WORDV,IADDV,ARGSTR,IPROMP,65,1,ISUBL2,1)

      ENDIF
C
      REWIND IFILE
      CALL DATUM(IFILE,560,1,2,IVAR,REALL,CHARAC,IOUT,0,0,0,IPROMP)
      IF (ISUBL2(IVAR).NE.0) THEN
         WRITE(6,*)' BAD CHOICE FOR LINKED VARIABLE, TRY AGAIN.'
         BACKSPACE(IOUT)
         KOUNT = KOUNT - 1
         GO TO 30
      ENDIF
C
      CALL CONVR2(IVAR,CIVAR)
      DO 40 J = 1,60
   40 PHRASE(J:J) = WORDV(IVAR)(J:J)
c*************** begin modification ************************************
c  This modification adds the capability of different types of linking.
c  User-defined linking using a new subroutine USRLNK in the BEHAVIOR.F
c  file.  See prompt 565 of URPROMPT.DAT.
c  Jeff Jacoby 12/90
c
c  Ask the user for type of linking (uses prompt no. 565 of URPROMPT.DAT:
      CALL DATUM(IFILE,565,1,2,LNKTYP,REALL,CHARAC,IOUT,0,0,0,IPROMP)
c
      ILV(IVAR) = LNKTYP
c     ILV(IVAR) = 1     (this is now commented out)
c***************  end modification ************************************
      FVAR = IVAR
      ISUBL1(IVAR) = 0
      ISUBL2(IVAR) = 1
      ISUBE2(IVAR) = 1
C
C BEG JUN 2013
C     CALL GETVAR(0,0,FVAR,ILINK,VLINK,WORDL,IADDD)
      CALL GETVAR(0,0,FVAR,ILINK,VLINK,WORDL)
C END JUN 2013
   43 CONTINUE

C     CALL OUTVAR(NVAR,VAR,WORDV,IADDV,'LINKED VARIABLE MUST BE LINKED T
C    1O ONE OR MORE DECISION VARIABLES ',6,60,1,ISUBD1,1)
      ARGSTR = 'LINKED VARIABLE MUST BE LINKED TO'//
     $         ' ONE OR MORE DECISION VARIABLES '
      CALL OUTVAR(NVAR,VAR,WORDV,IADDV,ARGSTR,6,60,1,ISUBD1,1)

      IF (IPROMP.GT.1) THEN

C     CALL OUTVAR(NVAR,VAR,WORDV,IADDV,'LINKED VARIABLE MUST BE LINKED T
C    1O ONE OR MORE DECISION VARIABLES ',IPROMP,65,1,ISUBD1,1)
        ARGSTR = 'LINKED VARIABLE MUST BE LINKED TO'//
     $           ' ONE OR MORE DECISION VARIABLES '
        CALL OUTVAR(NVAR,VAR,WORDV,IADDV,ARGSTR,IPROMP,65,1,ISUBD1,1)

      ENDIF
C
   45 CONTINUE
      CALL DATUM(IFILE,570,1,2,IDLINK(IVAR,JJ),REALL,CHARAC,
     1           IOUT,0,0,0,IPROMP)
      IDL = IDLINK(IVAR,JJ)
      IF (IDV(IDL).NE.1) THEN
         WRITE(6,*)' VARIABLE MUST BE A DECISION VARIABLE. TRY AGAIN.'
         BACKSPACE(IOUT)
         REWIND IFILE
         GO TO 45
      ENDIF
c *************** begin modification ********************************
c  Jeff Jacoby 12/90
c  An IF statement is used to skip over the rest of the prompting
c  if this variable has user-defined linking.
      IF (LNKTYP.EQ.2) GO TO 54
c ***************  end modification *********************************
      CALL DATUM(IFILE,580,1,2,INT,CLINK(IVAR,JJ),CHARAC,
     1           IOUT,0,0,0,IPROMP)
      CALL DATUM(IFILE,584,1,2,INT,CPWR(IVAR,JJ),CHARAC,
     1           IOUT,0,0,0,IPROMP)
      CALL CONVRF(CLINK(IVAR,JJ),CLINKP)
      CALL CONVRF(CPWR(IVAR,JJ),CPWRP)
      CALL CONVR2(IDL,CIDL)
      DO 32 I = 1,80
      TERM(JJ,KOUNT)(I:I) = ' '
   32 CONTINUE
      TERM(JJ,KOUNT) = ' +'//CLINKP//'*VAR('//CIDL//')**('//CPWRP//')'
      CALL BLANKX(TERM(JJ,KOUNT),IENDT)
      IENDTJ(JJ) = IENDT
      IF (JJ.EQ.1) THEN
         CALL BLANKX(WORDV(IVAR),IENDW)
         WRITE(6,'(A,A,A)')
     1   WORDV(IVAR)(1:IENDW),' =',TERM(1,KOUNT)(1:IENDT)
         IF (IPROMP.GT.1) WRITE(IFILE8,'(A,A,A)')
     1    WORDV(IVAR)(1:IENDW),' =',TERM(1,KOUNT)(1:IENDT)
         GO TO 54
      ENDIF
C BEG JUL 2009
      DO 50 I= 1,JJ
C END JUL 2009
      IENDT = IENDTJ(I)
      WRITE(6,'(40X,A)') TERM(I,KOUNT)(1:IENDT)
      IF (IPROMP.GT.1) WRITE(IFILE8,'(40X,A)') TERM(I,KOUNT)(1:IENDT)
   50 CONTINUE
   54 CONTINUE
      JTERMS(KOUNT) = JJ
      CALL DATUM(IFILE,587,1,2,INT,REALL,ANSOUT,IOUT,0,0,0,IPROMP)
      IF (ANSL1('Y',ANSOUT,INFILE)) THEN
         JJ = JJ + 1
C BEG JUL 2009 (JJ.GT.5 changed to JJ.GT.20)
C BEG AUG 2009 (JJ.GT.20 changed to JJ.GT.45)
         IF (JJ.GT.45) THEN
             WRITE(6,*)' MAXIMUM OF 45 TERMS ALLOWED.'
             IF (IPROMP.GT.1)
     1          WRITE(IFILE8,*)' MAXIMUM OF 45 TERMS ALLOWED.'
             CALL EXIT(1)
         ENDIF
C END AUG 2009
C END JUL 2009
         REWIND IFILE
         GO TO 43
      ENDIF
C BEG NOV 1990
      CALL DATUM(IFILE,588,1,2,INT,REALL,ANSOUT,IOUT,0,0,0,IPROMP)
      IF (ANSL1('Y',ANSOUT,INFILE))
     1  CALL DATUM(IFILE,589,1,2,INT,CLINK0(IVAR),CHARAC,IOUT,
     1             0,0,0,IPROMP)
C END NOV 1990
      CALL DATUM(IFILE,590,1,1,INT,REALL,ANSOUT,IOUT,0,0,0,IPROMP)
      IF (ANSL1('Y',ANSOUT,INFILE)) THEN
         DO 60 I = 1,NVAR
            IF (ISUBL2(I).EQ.0) GO TO 30
   60    CONTINUE
         WRITE(6,*)' NO MORE AVAILABLE LINKED VARIABLE CANDIDATES.'
         WRITE(6,*)' NOW PROCEEDING TO NEXT SECTION.'
      ENDIF
C
      NLINK = ILINK

C     CALL OUTVAR(NVAR,VAR,WORDV,IADDV,'          LINKED VARIABLES FOR T
C    1HE OPTIMIZATION PROBLEM          ',IFILE8,65,1,ISUBL1,1)
      ARGSTR = '          LINKED VARIABLES FOR TH'//
     $         'E OPTIMIZATION PROBLEM          '
      CALL OUTVAR(NVAR,VAR,WORDV,IADDV,ARGSTR,IFILE8,65,1,ISUBL1,1)

C
C  END OF SECTION ON LINKED VARIABLES.
C
   70 CONTINUE
C
C  NEXT, ESTABLISH INEQUALITY CONSTRAINTS AMONG VARIABLES THAT
C  ARE DECISION VARIABLES OR CANDIDATES TO BE DECISION VARIABLES.
C  THE INEQUALITY CONSTRAINTS HAVE EITHER OF THE TWO FORMS:
C  1.O > f(v1,v2,v3,...)    or    1.0 < f(v1,v2,v3,...)
C  IN WHICH f(v1,v2,v3,...) = C0 +C1*V1**D1 + C2*V2**D2 + . . .
C
C  NEXT, ESTABLISH INEQUALITY RELATIONS AMONG VARIABLES...
      IF (IPROMP.GT.1) WRITE(IFILE8,*)
     1' START BUILDING THE INEQUALITY CONSTRAINTS BASED ON DIMENSIONS.'
      CALL DATUM(IFILE,595,0,0,INT,REALL,CHARAC,IOUT,0,0,0,IPROMP)
      CALL DATUM(IFILE,600,1,2,INT,REALL,ANSOUT,IOUT,0,0,0,IPROMP)
      IF (ANSL1('N',ANSOUT,INFILE)) GO TO 700
C
      CALL DATUM(IFILE,601,1,1,INT,REALL,ANSOUT,IOUT,0,0,0,IPROMP)
      IF (ANSL1('Y',ANSOUT,INFILE))
     1   CALL DATUM(IFILE,602,0,0,INT,REALL,CHARAC,IOUT,0,0,0,IPROMP)
C
      KOUNT = 0
C
  300 CONTINUE
C
      KOUNT = KOUNT + 1
C BEG JUL 2009 (KOUNT.GT.10 changed to KOUNT.GT.20)
C BEG AUG 2009 (KOUNT.GT.20 changed to KOUNT.GT.45)
      IF (KOUNT.GT.45) THEN
         WRITE(6,*)' YOU ARE ALLOWED ONLY 45 INEQUALITY RELATIONSHIPS.'
         IF (IPROMP.GT.1)
     1   WRITE(IFILE8,*)
     1 ' YOU ARE ALLOWED ONLY 45 INEQUALITY RELATIONSHIPS.'
         CALL EXIT(1)
      ENDIF
C END AUG 2009
C END JUL 2009
C
      REWIND IFILE
      IF (IPROMP.GT.1) WRITE(IFILE8,*) 
     1' **************** INEQUALITY CONSTRAINT NO. ', KOUNT
      CALL DATUM(IFILE,603,1,2,IEQTYP(KOUNT),REALL,CHARAC,IOUT,0,0,
     1           0,IPROMP)
      CALL DATUM(IFILE,604,0,0,INT,REALL,CHARAC,IOUT,0,0,0,IPROMP)
      CALL DATUM(IFILE,606,1,2,INT,CINEQ(1,KOUNT),CHARAC,IOUT,0,0,
     1           0,IPROMP)
C

C     CALL OUTVAR(NVAR,VAR,WORDV,IADDV,'LIST OF VARIABLES FROM WHICH YOU
C    1 MUST NOW CHOOSE ANY ONE         ',6,60,1,ISUBIQ,1)
      ARGSTR = 'LIST OF VARIABLES FROM WHICH YOU '//
     $         'MUST NOW CHOOSE ANY ONE         '
      CALL OUTVAR(NVAR,VAR,WORDV,IADDV,ARGSTR,6,60,1,ISUBIQ,1)

      IF (IPROMP.GT.1) THEN

C     CALL OUTVAR(NVAR,VAR,WORDV,IADDV,'LIST OF VARIABLES FROM WHICH YOU
C    1 MUST NOW CHOOSE ANY ONE         ',IPROMP,65,1,ISUBIQ,1)
        ARGSTR = 'LIST OF VARIABLES FROM WHICH YOU '//
     $           'MUST NOW CHOOSE ANY ONE         '
        CALL OUTVAR(NVAR,VAR,WORDV,IADDV,ARGSTR,IPROMP,65,1,ISUBIQ,1)

      ENDIF
C
      CALL DATUM(IFILE,608,1,2,IVAR,REALL,CHARAC,IOUT,0,0,0,IPROMP)
C
      IDINEQ(1,KOUNT)  = 0
      DPWREQ(1,KOUNT)  = 0.
      IDINEQ(2,KOUNT) = IVAR
      CALL DATUM(IFILE,610,1,2,INT,CINEQ(2,KOUNT),CHARAC,
     1           IOUT,0,0,0,IPROMP)
      CALL DATUM(IFILE,620,1,2,INT,DPWREQ(2,KOUNT),CHARAC,
     1           IOUT,0,0,0,IPROMP)
      CALL CONVRF(CINEQ(1,KOUNT),C0P)
      CALL CONVRF(CINEQ(2,KOUNT),CLINKP)
      CALL CONVRF(DPWREQ(2,KOUNT),CPWRP)
      CALL CONVR2(IVAR,CIDL)
      DO 320 I = 1,80
      TERM(1,KOUNT)(I:I) = ' '
      TERM(2,KOUNT)(I:I) = ' '
      TERMC(2,KOUNT)(I:I)= ' '
  320 CONTINUE
      TERM(1,KOUNT) = C0P
C BEG DEC 1990
      IC0P = 7
      CALL SHIFTC(C0P)
      IF (C0P(1:4).EQ.'0.00') THEN
         C0P = '       '
         IC0P = 1
      ENDIF
      NLET0 = INDEX(C0P,'.00')
      IF (NLET0.NE.0) NLET0 = NLET0-1
      IF (NLET0.EQ.0) NLET0=IC0P
      ICPWRP = 7
      WCPWRP = '**'
      CALL SHIFTC(CPWRP)
      IF (CPWRP(1:4).EQ.'1.00') THEN
         CPWRP = '       '
         ICPWRP = 1
         WCPWRP = '  '
      ENDIF
      NLET1 = INDEX(CPWRP,'.00')
      IF (NLET1.NE.0) NLET1 = NLET1 - 1
      IF (NLET1.EQ.0) NLET1 = ICPWRP
      IF (CINEQ(2,KOUNT).GE.0.) TERM(2,KOUNT) = 
     1      C0P(1:NLET0)//'+'//CLINKP//'*V('//CIDL//')'
     1                                     //WCPWRP//CPWRP(1:NLET1)
      IF (CINEQ(2,KOUNT).LT.0.) TERM(2,KOUNT) = 
     1      C0P(1:NLET0)//CLINKP//'*V('//CIDL//')'
     1                                     //WCPWRP//CPWRP(1:NLET1)
C END DEC 1990
      K = 1
      DO 325 I = 1,80
      IF (TERM(2,KOUNT)(I:I).EQ.' ') GO TO 325
      TERMC(2,KOUNT)(K:K) = TERM(2,KOUNT)(I:I)
      K = K + 1
  325 CONTINUE
      CALL BLANKX(TERMC(2,KOUNT),IENDT)
      IENDTJ(2) = IENDT
      IF (IEQTYP(KOUNT).EQ.1) THEN
         WLTGT = ' 1 >'
      ELSE
         WLTGT = ' 1 <'
      ENDIF
      WRITE(6,'(A,A,A)') WLTGT,TERMC(2,KOUNT)(1:IENDT),' + ...'
      IF (IPROMP.GT.1)
     1 WRITE(IFILE8,'(A,A,A)') WLTGT,TERMC(2,KOUNT)(1:IENDT),' + ...'
      JJ = 2
  430 CONTINUE
      REWIND IFILE
      CALL DATUM(IFILE,630,1,2,INT,REALL,ANSOUT,IOUT,0,0,0,IPROMP)
      IF (ANSL1('N',ANSOUT,INFILE)) GO TO 560
      JJ = JJ + 1
C BEG DEC 1990
C BEG AUG 2009
      IF (JJ.GT.45) THEN
         WRITE(6,*)' MAXIMUM OF 45 TERMS,INCLUDING C0, ALLOWED.'
         IF (IPROMP.GT.1)
     1    WRITE(IFILE8,*)' MAXIMUM OF 45 TERMS,INCLUDING C0, ALLOWED.'
         CALL EXIT(1)
      ENDIF
C END AUG 2009
C END DEC 1990

C     CALL OUTVAR(NVAR,VAR,WORDV,IADDV,'LIST OF VARIABLES FROM WHICH YOU
C    1 MUST NOW CHOOSE ANY ONE         ',6,60,1,ISUBIQ,1)
      ARGSTR = 'LIST OF VARIABLES FROM WHICH YOU '//
     $         'MUST NOW CHOOSE ANY ONE         '
      CALL OUTVAR(NVAR,VAR,WORDV,IADDV,ARGSTR,6,60,1,ISUBIQ,1)

      IF (IPROMP.GT.1) THEN

C     CALL OUTVAR(NVAR,VAR,WORDV,IADDV,'LIST OF VARIABLES FROM WHICH YOU
C    1 MUST NOW CHOOSE ANY ONE         ',IPROMP,65,1,ISUBIQ,1)
        ARGSTR = 'LIST OF VARIABLES FROM WHICH YOU '//
     $           'MUST NOW CHOOSE ANY ONE         '
        CALL OUTVAR(NVAR,VAR,WORDV,IADDV,ARGSTR,IPROMP,65,1,ISUBIQ,1)

      ENDIF
C
      CALL DATUM(IFILE,635,1,2,IVAR,REALL,CHARAC,IOUT,0,0,0,IPROMP)
      IDINEQ(JJ,KOUNT) = IVAR
      CALL DATUM(IFILE,640,1,2,INT,CINEQ(JJ,KOUNT),CHARAC,
     1           IOUT,0,0,0,IPROMP)
      CALL DATUM(IFILE,645,1,2,INT,DPWREQ(JJ,KOUNT),CHARAC,
     1           IOUT,0,0,0,IPROMP)
      CALL CONVRF(CINEQ(JJ,KOUNT),CLINKP)
      CALL CONVRF(DPWREQ(JJ,KOUNT),CPWRP)
      CALL CONVR2(IVAR,CIDL)
      DO 330 I = 1,80
      TERM(JJ,KOUNT)(I:I) = ' '
      TERMC(JJ,KOUNT)(I:I) = ' '
  330 CONTINUE
C BEG DEC 1990
      ICPWRP = 7
      WCPWRP = '**'
      CALL SHIFTC(CPWRP)
      IF (CPWRP(1:4).EQ.'1.00') THEN
         CPWRP = '       '
         ICPWRP = 1
         WCPWRP = '  '
      ENDIF
      NLET1 = INDEX(CPWRP,'.00')
      IF (NLET1.NE.0) NLET1 = NLET1 - 1
      IF (NLET1.EQ.0) NLET1 = ICPWRP
      IF (CINEQ(JJ,KOUNT).GE.0.) TERM(JJ,KOUNT) = 
     1      '+'//CLINKP//'*V('//CIDL//')'//WCPWRP//CPWRP(1:NLET1)
      IF (CINEQ(JJ,KOUNT).LT.0.) TERM(JJ,KOUNT) = 
     1           CLINKP//'*V('//CIDL//')'//WCPWRP//CPWRP(1:NLET1)
C END DEC 1990
      K = 1
      DO 335 I = 1,80
      IF (TERM(JJ,KOUNT)(I:I).EQ.' ') GO TO 335
      TERMC(JJ,KOUNT)(K:K) = TERM(JJ,KOUNT)(I:I)
      K = K + 1
  335 CONTINUE
      CALL BLANKX(TERMC(JJ,KOUNT),IENDT)
C BEG DEC 1990
      IF (IENDT.LT.2) IENDT=80
C END DEC 1990
      IENDTJ(JJ) = IENDT
      WRITE(6,'(1X,A)') WLTGT
      IF (IPROMP.GT.1) WRITE(IFILE8,'(1X,A)') WLTGT
      DO 500 I= 2,JJ
      IENDT = IENDTJ(I)
      WRITE(6,'(5X,A)') TERMC(I,KOUNT)(1:IENDT)
      IF (IPROMP.GT.1) WRITE(IFILE8,'(5X,A)') TERMC(I,KOUNT)(1:IENDT)
  500 CONTINUE
      GO TO 430
  560 CONTINUE
      JINEQ(KOUNT) = JJ
      DO 565 I = 1,80
  565 WORDIQ(KOUNT) = ' '
      WORDIQ(KOUNT) = WLTGT
      IENDW = 4
C BEG AUG 2009
C BEG JUN 2013
C     DO 566 I = 1,160
      DO 566 I = 1,320
C END JUN 2013
  566 WORDJQ(KOUNT) = ' '
      WORDJQ(KOUNT) = WLTGT
      IENDJW = 4
C END AUG 2009
      DO 570 I = 2,JJ
      IENDT = IENDTJ(I)
C BEG AUG 2009
C BEG JUN 2013
C     IF ( (IENDJW+IENDT).GT.160) GO TO 570
      IF ( (IENDJW+IENDT).GT.320) GO TO 570
C END JUN 2013
      WORDJQ(KOUNT) =WORDJQ(KOUNT)(1:IENDJW)//TERMC(I,KOUNT)(1:IENDT)
      CALL BLANKZ(WORDJQ(KOUNT),IENDJW)
      IF ((IENDW+IENDT).GT.75) THEN
         WORDIQ(KOUNT) = WORDIQ(KOUNT)(1:IENDW)//'..etc.'
         GO TO 570
      ENDIF
C END AUG 2009
      WORDIQ(KOUNT) = WORDIQ(KOUNT)(1:IENDW)//TERMC(I,KOUNT)(1:IENDT)
      CALL BLANKX(WORDIQ(KOUNT),IENDW)
C BEG DEC 1990
      IF (IENDW.LT.2) IENDW = 80
C END DEC 1990
C BEG AUG 2009
C BEG JUN 2013
C     IF (IENDJW.LT.2) IENDJW = 160 
      IF (IENDJW.LT.2) IENDJW = 320 
C END JUN 2013
C END AUG 2009
  570 CONTINUE
      CALL DATUM(IFILE,650,1,2,INT,REALL,ANSOUT,IOUT,0,0,0,IPROMP)
      IF (ANSL1('Y',ANSOUT,INFILE)) GO TO 300
      NINEQ = KOUNT
      WRITE(IFILE8,573) NINEQ
  573 FORMAT(/I5,' INEQUALITY CONSTRAINTS WHICH MUST BE SATISFIED'/)
      DO 580 I = 1,NINEQ
C BEG AUG 2009
C     WRITE(IFILE8,'(1X,A)') WORDIQ(I)
      WRITE(IFILE8,'(1X,A)') WORDJQ(I)
C END AUG 2009
  580 CONTINUE
C
C   END OF GENERATION OF INEQUALITY CONSTRAINTS AMONG VARIABLES.
C
  700 CONTINUE
C
      IF (IPROMP.GT.1) WRITE(IFILE8,*)
     1' *********** END OF INPUT FOR ',KOUNT,'  INEQUALITY CONSTRAINTS.'
C
      IESCAP = 0
      CALL DATUM(IFILE,680,1,2,INT,REALL,ANSOUT,IOUT,0,0,0,IPROMP)
      IF (ANSL1('N',ANSOUT,INFILE)) GO TO 100
      CALL DATUM(IFILE,682,1,2,INT,REALL,ANSOUT,IOUT,0,0,0,IPROMP)
      IF (ANSL1('Y',ANSOUT,INFILE)) THEN
         DO 78 I = 1,NVAR
            IF (ILETTH(I).EQ.1.AND.ISUBE2(I).EQ.0) THEN
               DO 72 J = 1,60
   72          PHRASE(J:J) = WORDV(I)(J:J)
               FVAR = I
               IEV(I) = 1
               ISUBE1(I) = 0
               ISUBE2(I) = 1
C BEG JUN 2013
C              CALL GETVAR(0,0,FVAR,IESCAP,ESC,WORDE,IADDD)
               CALL GETVAR(0,0,FVAR,IESCAP,ESC,WORDE)
C END JUN 2013
            ENDIF
   78    CONTINUE
         GO TO 95
      ENDIF
C
   80 CONTINUE
      IF (IESCAP.GT.0) THEN

C     CALL OUTVAR(NVAR,VAR,WORDV,IADDV,'             ESCAPE VARIABLES CH
C    1OSEN SO FAR                      ',6,60,1,ISUBE1,1)
        ARGSTR = '             ESCAPE VARIABLES CHO'//
     $           'SEN SO FAR                      '
        CALL OUTVAR(NVAR,VAR,WORDV,IADDV,ARGSTR,6,60,1,ISUBE1,1)

        IF (IPROMP.GT.1) THEN

C     CALL OUTVAR(NVAR,VAR,WORDV,IADDV,'             ESCAPE VARIABLES CH
C    1OSEN SO FAR                      ',IPROMP,65,1,ISUBE1,1)
          ARGSTR = '             ESCAPE VARIABLES CHO'//
     $             'SEN SO FAR                      '
          CALL OUTVAR(NVAR,VAR,WORDV,IADDV,ARGSTR,IPROMP,65,1,ISUBE1,1)

        ENDIF
      ENDIF
C

C     CALL OUTVAR(NVAR,VAR,WORDV,IADDV,'PARAMETERS FROM WHICH AN ESCAPE 
C    1VARIABLE MUST NOW BE CHOSEN       ',6,60,1,ISUBE2,1)
      ARGSTR = 'PARAMETERS FROM WHICH AN ESCAPE V'//
     $         'ARIABLE MUST NOW BE CHOSEN       '
      CALL OUTVAR(NVAR,VAR,WORDV,IADDV,ARGSTR,6,60,1,ISUBE2,1)

      IF (IPROMP.GT.1) THEN

C     CALL OUTVAR(NVAR,VAR,WORDV,IADDV,'PARAMETERS FROM WHICH AN ESCAPE 
C    1VARIABLE MUST NOW BE CHOSEN       ',IPROMP,65,1,ISUBE2,1)
        ARGSTR = 'PARAMETERS FROM WHICH AN ESCAPE V'//
     $           'ARIABLE MUST NOW BE CHOSEN       '
        CALL OUTVAR(NVAR,VAR,WORDV,IADDV,ARGSTR,IPROMP,65,1,ISUBE2,1)

      ENDIF
C
      REWIND IFILE
      CALL DATUM(IFILE,685,1,2,IVAR,REALL,CHARAC,IOUT,0,0,0,IPROMP)
      IF (ISUBE2(IVAR).NE.0) THEN
         WRITE(6,*)' BAD CHOICE FOR ESCAPE VARIABLE; TRY AGAIN.'
         BACKSPACE(IOUT)
         GO TO 80
      ENDIF
C
      DO 90 J = 1,60
   90 PHRASE(J:J) = WORDV(IVAR)(J:J)
      FVAR = IVAR
      IEV(IVAR) = 1
      ISUBE1(IVAR) = 0
      ISUBE2(IVAR) = 1
C
C BEG JUN 2013
C     CALL GETVAR(0,0,FVAR,IESCAP,ESC,WORDE,IADDD)
      CALL GETVAR(0,0,FVAR,IESCAP,ESC,WORDE)
C END JUN 2013
      CALL DATUM(IFILE,687,1,1,INT,REALL,ANSOUT,IOUT,0,0,0,IPROMP)
      IF (ANSL1('Y',ANSOUT,INFILE)) THEN
         DO 93 I = 1,NVAR
            IF (ISUBE2(I).EQ.0) GO TO 80
   93    CONTINUE
         WRITE(6,*)' NO MORE AVAILABLE ESCAPE VARIABLE CANDIDATES.'
         WRITE(6,*)' NOW PROCEEDING TO NEXT SECTION.'
      ENDIF
C
   95 CONTINUE
      NESCAP = IESCAP

C     CALL OUTVAR(NVAR,VAR,WORDV,IADDV,'          ESCAPE VARIABLES FOR T
C    1HE OPTIMIZATION PROBLEM          ',6,60,1,ISUBE1,1)
      ARGSTR = '          ESCAPE VARIABLES FOR TH'//
     $         'E OPTIMIZATION PROBLEM          '
      CALL OUTVAR(NVAR,VAR,WORDV,IADDV,ARGSTR,6,60,1,ISUBE1,1)

      IF (IPROMP.GT.1) THEN

C     CALL OUTVAR(NVAR,VAR,WORDV,IADDV,'          ESCAPE VARIABLES FOR T
C    1HE OPTIMIZATION PROBLEM          ',IPROMP,65,1,ISUBE1,1)
        ARGSTR = '          ESCAPE VARIABLES FOR TH'//
     $           'E OPTIMIZATION PROBLEM          '
        CALL OUTVAR(NVAR,VAR,WORDV,IADDV,ARGSTR,IPROMP,65,1,ISUBE1,1)

      ENDIF
C

C     CALL OUTVAR(NVAR,VAR,WORDV,IADDV,'          ESCAPE VARIABLES FOR T
C    1HE OPTIMIZATION PROBLEM          ',IFILE8,65,1,ISUBE1,1)
      ARGSTR = '          ESCAPE VARIABLES FOR TH'//
     $         'E OPTIMIZATION PROBLEM          '
      CALL OUTVAR(NVAR,VAR,WORDV,IADDV,ARGSTR,IFILE8,65,1,ISUBE1,1)

C
  100 CONTINUE
C
      CALL OUTOPT(IFILE8,NVAR,IDV,IEV,ILV,CLINK,IDLINK,VLB,VUB,VAR,WORDV
     1,'         SUMMARY OF INFORMATION FOR OPTIMIZATION ANALYSIS       
     1  ',57)
C
  110 CONTINUE
      CALL STORCM(IFILE7)
C
      WRITE(6,200) CASE(1:NLET),CASE(1:NLET),CASE(1:NLET),
     1            CASE(1:NLET),CASE(1:NLET)
      WRITE(IFILE8,200) CASE(1:NLET),CASE(1:NLET),CASE(1:NLET),
     1                  CASE(1:NLET),CASE(1:NLET)
  200 FORMAT(//' DESCRIPTION OF FILES GENERATED/USED BY THIS CASE:'//
     1 1X,A,'.DEC = Summary of interactive session you have just'/
     1'          completed. This file can be edited and used for'/
     1'          future runs of DECIDE.'//
     1 1X,A,'.CBL = Contains the ',A,' data base.'//
     1 1X,A,'.OPD = Output from DECIDE. Please list this file and'/
     1'          inspect it and the ',A,'.DEC file carefully before'/
     1'          proceeding.'//
     1' For further information about files generated during operation'/
     1' of GENOPT give the command HELPG FILES.'//
     1' Next, give the command   MAINSETUP   .')
C
C BEG JULY 1989
      WRITE(IFILE8,'(A,A,A)')
     1' ****************** END OF THE  ',CASE(1:NLET),
     1'.OPD FILE ******************'
C END JULY 1989
      CLOSE(UNIT=IOUT)
      CLOSE(UNIT=7)
      CLOSE(UNIT=8)
C
      END
C
C
C
C=DECK      OUTV2
      SUBROUTINE OUTV2(IFILE,ISIG,NDEC,DEC,VAR,WORDD,TITLE)
C
C  PURPOSE IS TO PRINT OUT TABLE OF DECISION VARIABLES
C
      DIMENSION DEC(*),VAR(*),WORDD(*)
      CHARACTER*80 WORDD
      CHARACTER*65 TITLE
C
      IF (IFILE.NE.6) WRITE(IFILE,5)
    5 FORMAT(1H0)
      WRITE(IFILE,'(1X,A)') TITLE
      WRITE(IFILE,10)
   10 FORMAT(' VARIABLE NO.    DEFINITION VALUE        DEFINITION')
C
      DO 100 I = 1,NDEC
C
      IDEC = DEC(I)
      INDX = I
      IF (ISIG.EQ.1) INDX = IDEC
C BEG MAR 1992
      CALL BLANKX(WORDD(I),ILONG)
      WRITE(IFILE,20) IDEC,VAR(INDX),WORDD(I)(1:ILONG)
   20 FORMAT(I3,16X,1PE12.3,2X,A)
C END MAR 1992
C
  100 CONTINUE
      RETURN
      END
C
C
C
C=DECK      OUTOPT
      SUBROUTINE OUTOPT(IFILE,NVAR,IDV,IEV,ILV,CLINK,IDLINK,VLB,VUB,VAR,
     1 WORDV,TITLE,LENGTH)
C
C  PURPOSE IS TO PRESENT SUMMARY OF CONDITIONS FOR OPTIMIZATION
C
      DIMENSION IDV(*),ILV(*),CLINK(*),IDLINK(*),VLB(*),VUB(*),VAR(*)
      DIMENSION IEV(*)
      CHARACTER*80 WORDV(*)
      CHARACTER*65 TITLE
      CHARACTER*1 ANS1,ANS2,ANS3
C
      WRITE(IFILE,5)
    5 FORMAT(1H0)
      WRITE(IFILE,'(1X,A)') TITLE
      WRITE(IFILE,10)
   10 FORMAT(' VAR. DEC. ESCAPE LINK. LINKED  LINKING   LOWER     CURREN
     1T    UPPER       DEFINITION'/
     1       '  NO. VAR.  VAR.  VAR.    TO   CONSTANT   BOUND      VALUE
     1     BOUND')
C
      DO 100 I = 1,NVAR
C
      ANS1 = 'N'
      IF (IDV(I).EQ.1) ANS1 = 'Y'
      ANS2 = 'N'
      IF (IEV(I).EQ.1) ANS2 = 'Y'
      ANS3 = 'N'
      IF (ILV(I).EQ.1) ANS3 = 'Y'
C
      WRITE(IFILE,20) I,ANS1,ANS2,ANS3,IDLINK(I),CLINK(I),VLB(I),
     1                VAR(I),VUB(I),WORDV(I)(1:LENGTH)
   20 FORMAT(I4,3X,A1,5X,A1,5X,A1,I7,1PE12.2,1PE10.2,1PE11.4,1PE10.2,2X,
     1 A)
C
  100 CONTINUE
      RETURN
      END
