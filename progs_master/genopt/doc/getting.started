
******************** GETTING STARTED ********************

...genopt/doc/getting.started

Getting started with GENOPT using BIGBOSOR4

********************** NOTE **************************
In the following the string, "/home/progs", frequently
occurs. This is the PARENT directory of BOSOR4, BIGBOSOR4,
BOSOR5, PANDA2, and GENOPT on the writer's computer. You
must replace the string, "/home/progs", with whatever is
the PARENT directory of BOSOR4, BIGBOSOR4, BOSOR5, PANDA2,
and GENOPT at your facility.
******************** END NOTE ************************

0. Read the following:

[0] Introduction to the file,

/home/progs/genopt/case/cylinder/behavior.cylinder .

Also read the files:

 ...genopt/case/cylinder/howto.bosdec
 ...genopt/case/cylinder/howto.struct
 ...genopt/case/cylinder/howto.behavior
 ...genopt/case/torisph/howto.stags.pdf
 ...genopt/case/torisph/readme.equivellipse
 ...genopt/case/wavycyl/readme.wavycyl

[1] Bushnell, D., "GENOPT--A program that writes
user-friendly optimization code", International
Journal of Solids and Structures, Vol.26, No. 9/10,
pp. 1173-1210, 1990. Also appeared in a
bound volume of papers from the International Journal of
Solids and Structures published in the memory of Professor
Charles D. Babcock, formerly with the California Institute
of Technology.

[2] Bushnell, D., "BOSOR4: Program for stress, stability,
and vibration of complex, branched shells of revolution",
in STRUCTURAL ANALYSIS SYSTEMS, Vol. 2, edited by A.
Niku-Lari, pp. 25-54, (1986)

[3] Bushnell, D., "Automated optimum design of shells of
revolution with application to ring-stiffened cylindrical
shells with wavy walls", AIAA 41st Structures Meeting, April 2000,
AIAA Paper 2000-1663. Also read Bushnell, D., Lockheed Martin
Missiles and Space Co. Report P525674, November, 1999 (same title),
especially the appendix, which is for the case called "cylinder",
described below.

[3b] Bushnell. D., "Minimum-weight design of imperfect isogrid-
stiffened ellipsoidal shells under uniform external pressure",
50th AIAA Structures Meeting, AIAA Paper 2009-2702, May, 2009
(Inspect the directories and files with names that contain the
string, "sdm50", (e.g. .../genopt/case/torisph/sdm50***) and
the directory, .../genopt/case/torisph/miscellaneous .)

[4] Vanderplaats, G. N., "ADS--a FORTRAN program for
automated design synthesis, Version 2.01", Engineering
Design Optimization, Inc, Santa Barbara, CA, January, 1987

[5] Vanderplaats, G. N. and Sugimoto, H., "A general-purpose
optimization program for engineering design", Computers
and Structures, Vol. 24, pp 13-21, 1986

[6] /home/progs/genopt/case/torisph/equivellipse.DEF file
(generated by execution of GENTEXT with use of the
existing input file, equivellipse.INP in the directory
/home/progs/genopt/case/torisph)
--------------------------------------------------------------------------

********* FOUR STEPS FOR HOW TO SET UP AND RUN GENOPT ************************

****** STEP 1 ******
1. Set up a directory, /home/progs/genoptcase
"genoptcase" is where you will do all your setting up of a generic case
and running of one or more specific cases. When you have run a case successfully
you should save the following files in the directory "genoptcase" (The following
list pertains to a case with generic name "cylinder" and specific name "cyl",
but this instruction pertains to files with any user-specified names):

cylinder.INP      = contains input data for GENTEXT, which sets up the
                    generic case.

behavior.new        (save it in a file called, for example, "behavior.cylinder".
                     If you are overwriting a "saved" file, make sure that your
                     latest version of "behavior.new" is valid. You may have
                     expended a lot of effort creating "behavior.new" and you
                     don't want to lose it!)

behavior.cylinder = contains the "BEHX1", "BEHX2", "BEHX3",..."BEHXn",
                    "USRCON", "USRLNK", "OBJECT", which are the "behavior"
                    subroutines, user-written constraint and linking routines,
                    and subroutine for computation of the objective function.
                    Save behavior.new by: cp behavior.new behavior.cylinder.
                    (Make sure behavior.new is correct!)

struct.new          (save it in a file called, for example, "struct.cylinder".
                     If you are overwriting a "saved" file, make sure that your
                     latest version of "struct.new" is valid. You may have
                     expended a lot of effort creating "struct.new" and you
                     don't want to lose it!)

struct.cylinder   = contains a combination of GENOPT-written code and user-
                    written code. Calls the "BEHXn" and "OBJECT" routines.
                    Save struct.new by: cp struct.new struct.cylinder.
                    (Make sure struct.new is correct!)

cyl.BEG = input data for the "begin" processor     (specific case)
cyl.DEC = input data for the "decide" processor    (specific case)
cyl.OPT = input data for the "mainsetup" processor (specific case)

************************ END OF STEP 1 *************************************


****** STEP 2 ******
2. Set up three directories, 

/home/progs/bosdec
/home/progs/bosdec/sources
/home/progs/bosdec/objects.linux   --->  for 32 bit machines
/home/progs/bosdec/objects.x86_64  --->  for 64 bit machines

"bosdec" should have two subdirectories: "objects.linux" for 32 bit machines
         or "objects.x86_64" for 64 bit machines and "sources"

"bosdec/sources" must contain the following source libraries which are
                 copied from the directory /home/progs/genopt/case/sources

addbosor4.src = BIGBOSOR4 source files (B4READ, B4MAIN, B4POST, etc.)
b4plot.src    = BIGBOSOR4 source files (plotting)
b4util.src    = BIGBOSOR4 source files (BIGBOSOR4 utilities)
bosdec.src    = generic case-dependent source file that creates a valid BOSOR4
                input file for the specific BOSOR4 case. bosdec.src must be
                written by the user for each new generic case. See Ref. [3].
opngen.src    = opens and closes files used in connection with BOSOR4
prompter.src  = BOSOR4 program for prompting input from the user for the specific
                case
resetup.src   = BOSOR4 source file for input for BOSOR4 restarts.

***************** IMPORTANT JULY 2012 NOTE ****************************
The information about "gasp" after this note no longer holds. GENOPT now always
uses the version of SUBROUTINE GASP and the c-routines called by GASP that are
located in the "utility" directory called "UTIL" in the "make" script called
"usermake.{MACHINE}" (e.g. "usermake.x86_64" for LINUX 64-bit architecture).
The "usermake.{MACHINE}" file is located in the directory, ...genopt/execute.
The GENOPT script called "genprograms" (execution of usermake.{MACHINE}) copies
gasp.F, bio_x86_64.c, mach.h, into the "bosdec/sources" directory and stores the
compiled files, gasp_x86_64.o and bio_x86_64.o, there. Hence, after execution
of "genprograms" the following files exist in the directory,...bosdec/sources:
-rw-r--r-- 1 bush bush 681525 Jul  9 06:59 addbosor4.src
-rw-r--r-- 1 bush bush  83694 Jul  9 07:02 b4plot.src
-rw-r--r-- 1 bush bush  90509 Jul  9 07:02 b4util.src
-rw-r--r-- 1 bush bush  52865 Jul  9 07:42 bio_x86_64.c
-rw-rw-r-- 1 bush bush  77536 Jul  9 07:42 bio_x86_64.o
-rw-r--r-- 1 bush bush  42379 Jul  9 07:02 bosdec.src
-rw-r--r-- 1 bush bush  20627 Jul  9 07:42 gasp.F
-rw-rw-r-- 1 bush bush  33424 Jul  9 07:42 gasp_x86_64.o
-rw-r--r-- 1 bush bush   7848 Jul  9 07:42 mach.h
-rw-r--r-- 1 bush bush   6709 Jul  9 07:05 opngen.src
-rw-r--r-- 1 bush bush  24128 Jul  9 07:05 prompter.src
-rw-r--r-- 1 bush bush  13426 Jul  9 07:05 resetup.src
**************** END OF IMPORTANT JULY 2012 NOTE **********************

**************** IGNORE THE FOLLOWING ************************
"bosdec/sources" will also contain files relating to "gasp" which are the block
                 input/output subroutine used throughout BIGBOSOR4.  they are
                 automatically copied from the main utility directory when the
                 user invokes "genprograms" which invokes "usermake.x86_64", etc.

NOTE: The above "gasp" files pertain to the version of SUBROUTINE GASP for operation
on LINUX workstations, both 32-bit and 64-bit. For UNIX workstations, find the appropriate
copies of gasp, etc. in the directory, /home/progs/genopt/case/sources/othergasps .
You may have to change the permissions on the directory "othergasps" for access.

You will find in the "othergasps" directory the following files:

-rw-r--r--   1 bush     bosor      22723 Jul 25  2003 bio.c
-rw-r--r--   1 bush     bosor      22820 Oct  1  1999 bio_alpha.c
-rw-r--r--   1 bush     bosor      41568 Mar  6  2000 bio_alpha.o
-rw-r-----   1 bush     bosor      22693 Aug  3  2003 bio_hp700.c
-rw-r--r--   1 bush     bosor      11056 Nov  8  2005 bio_hp700.o
-rw-r--r--   1 bush     bosor      31175 Nov  2  2005 bio_linux.c
-rw-r--r--   1 bush     bosor      24596 Nov  2  2005 bio_sgi.o
-rw-r--r--   1 bush     bosor      23628 Nov  2  2005 bio_sgi8.c
-rw-r--r--   1 bush     bosor      24600 Nov  8  2005 bio_sgi8.o
-rw-r--r--   1 bush     bosor      23628 Nov  2  2005 bio_sgiold.c
-rw-r--r--   1 bush     bosor      22723 Jul 25  2003 bio_sol.c
-rw-r--r--   1 bush     bosor      27988 Jul 25  2003 bio_sol.o
-rw-r--r--   1 bush     bush       44856 Mar  6 07:05 gasp.hp700.a
-rw-r--r--   1 bush     bosor      26368 Mar  6  2000 gasp_alpha.o
-rw-r--r--   1 bush     bosor      14592 Jan 17 07:21 gasp_hp700.f
-rw-r--r--   1 bush     bosor      28044 Nov  8  2005 gasp_hp700.o
-rw-r--r--   1 bush     bosor      24760 Nov  2  2005 gasp_sgi.o
-rw-r--r--   1 bush     bosor      35504 Nov  8  2005 gasp_sgi8.o
-rw-r--r--   1 bush     bosor      17008 Jul 25  2003 gasp_sol.o

Copy whatever files are appropriate for your workstation into "bosdec/sources"
instead of the "linux" versions if your workstation is running UNIX and not
LINUX .
************** END OF "IGNORE THE FOLLOWING" *************************


Properly initialized, your /home/progs/bosdec/sources directory
must contain the following files (for 64-bit LINUX workstation):

-rw-r--r-- 1 bush bush 675743 Oct  4 11:48 addbosor4.src
-rw-r--r-- 1 bush bush  83694 Oct  3 13:50 b4plot.src
-rw-r--r-- 1 bush bush  90740 Oct  3 13:50 b4util.src
-rw-r--r-- 1 bush bush  52802 Oct  4 14:11 bio_x86_64.c    < not needed here
-rw-rw-r-- 1 bush bush  77552 Oct  4 14:11 bio_x86_64.o    < not needed here
-rw-r--r-- 1 bush bush  23079 Sep  7 09:12 bosdec.src
-rw-rw-r-- 1 bush bush  20120 Oct  4 14:11 gasp.F          < not needed here
-rw-rw-r-- 1 bush bush  30496 Oct  4 14:11 gasp_x86_64.o   < not needed here
-rw-r--r-- 1 bush bush   7848 Oct  4 14:11 mach.h          < not needed here
-rw-r--r-- 1 bush bush   6709 Oct  3 13:52 opngen.src
-rw-r--r-- 1 bush bush  24274 Oct  3 13:53 prompter.src
-rw-r--r-- 1 bush bush  13426 Feb 22  2008 resetup.src

NOTE: The entries labeled "not needed here" are now automatically
added after the execution of the GENOPT script, "genprograms", which
executes the "usermake" file.

These files can be found in the directory, /home/progs/genopt/case/sources  .

Typically, you type a command,

cp /home/progs/genopt/case/sources/opngen.src /home/progs/bosdec/sources/.

in order to get the "opngen.src" file into the proper location.

or, more simply, type the following:

cp /home/progs/genopt/case/sources/* /home/progs/bosdec/sources/.

in order to copy all the "bosdec/sources" source files into the proper location.

********** NOTE **************
EVEN IF YOUR CASE DOES NOT INVOLVE bigbosor4 or bosor4 YOU MUST INCLUDE
THE bigbosor4 SOURCE FILES IN THE DIRECTORY /home/progs/bosdec/sources
BECAUSE THE COMMAND, genprograms, EMPLOYS THE "MAKE" FILE,
/home/progs/genopt/execute/usermake.linux
AND THIS "MAKE" FILE INCLUDES COMPILATION OF bigbosor4 routines EVEN IF
THESE bigbosor4 ROUTINES ARE NOT USED IN YOUR CASE.
******************************* 

In addition to the files listed above, you need a source file called "bosdec.src".
If you want to run one of the sample cases contained in the /home/progs/genopt/case
directory, which includes the following subdirectories:

drwxr-xr-x   2 bush bush   456 Nov  9  2005 cylinder	<--based on BOSOR4 or BIGBOSOR4
drwxr-xr-x   2 bush bush   272 Oct 16  2005 plate
drwxr-xr-x   2 bush bush  1456 Nov 19  2005 sphere
drwxr-xr-x   2 bush bush 10960 Nov  2  2006 torisph	<--based on BOSOR4 or BIGBOSOR4
drwxr-xr-x   2 bush bush   272 Oct  8  2005 wavycyl	<--based on BOSOR4 or BIGBOSOR4

you must copy one or more of the following files into the directory,
/home/progs/bosdec/sources:

 bush  7246 Sep 20  2005 bosdec.cylinder (in the /home/progs/genopt/case/cylinder directory)
 bush 33098 Dec 19  2005 bosdec.ellipse      | (The three files, bosdec.ellipse,
 bush 33223 Jan 11  2006 bosdec.equivellipse |  bosdec.equivellipse, and bosdec.tori are in
 bush 33191 Dec 19  2005 bosdec.tori         |  the /home/progs/genopt/case/torisph directory)
 bush 75972 Sep 20  2005 bosdec.wavycyl  (in the /home/progs/genopt/case/wavycyl directory)

For example, if you want to run the "cylinder" case, you must type the command:

cp /home/progs/genopt/case/cylinder/bosdec.cylinder /home/progs/bosdec/sources/bosdec.src


****************************************************************************************
NOTE: For a new case that involves using BIGBOSOR4 (or BOSOR4) the GENOPT user must
generate a new bosdec.src file from scratch. This might seem to be a
monumental task. To ease the burden, please read the file,

/home/progs/genopt/case/cylinder/howto.bosdec 

for guidance in this important part of your effort.

Also, it will be necessary to augment the file, struct.new, which is
produced by GENTEXT. For guidance with this task, please read the file,

/home/progs/genopt/case/cylinder/howto.struct

Also, it may well be necessary to augment the file, behavior.new, which is
produced by GENTEXT. For guidance with this task, please read the file,

/home/progs/genopt/case/cylinder/howto.behavior

****************************************************************************************

************************ END OF STEP 2 *************************************


********* NOTE ********** NOTE *****************
YOU WON'T HAVE TO DO THE NEXT ITEM, STEP 3, BECAUSE THE INSTALLATION OF genopt
AT YOUR FACILITY ACCOMPLISHES THIS FOR YOU. ITEM 3 IS INCLUDED HERE FOR YOUR
INFORMATION ONLY.
************************************************


****** STEP 3 ******
3. set up a directory, /home/progs/genopt, which contains the following subdirectories.
   (This will already have been done when you or someone else installed GENOPT
   at your facility.):

bin = contains files for executing genopt:
      autochange.com, begin.com change.com, chooseplot.com, cleangen.com, cleanspec.com,
      decide.com, diplot.com, genprograms.com, genprograms.bat, genprompt.com,
      gentext.com, helpg.com, insert.com, mainsestup.com, optimize.com, optimize.bat,
      superopt.com, superopt.bat

case = contains sample cases and BIGBOSOR4 source files:
       cylinder, plate, sphere, wavycyl, torisph, sources

doc  = contains documentation files:
       genopt.abs, genopt.news, genopt.story, howto.install, howto.update, getting.started

sources = contains the following files:
          addcode1.src, addcode2.src, addcode3.src, addcode4.src, addcode5.src,
          ads.src, begin.tmpl, change.tmpl, chauto.src, chplot.src, conman.src,
          decide.src, diplot.src, felippa.src, genprompt.src, helpg.src, ieeexx.c,
          ieeexx_linux.o, insert.src, main.src, mainsetup.src, prompter.src,
          prompter2.src, sig.f, sig_linux.o, stoget.tmpl, store.src, struct.tmpl,
          util.c, util.h, util.src, util_linux.o
          (NOTE: the *.tmpl files are skeletal files that are used by GENOPT,
          which generates corresponding *new files after execution of the
          interactive GENOPT processor,  GENTEXT.)

execute = contains the following executable files, prompt files, and "make" files:
          genprompt.linux, helpg.linux, insert.linux,
          GENOPT.HLP, PROMPT.DAT, PROMPT2.DAT, PROMPT3.DAT, PROMPT4.DAT, URPROMPT.DAT,
          makefile.linux, usermake.linux

libraries.linux = contains archive libraries for genopt processors called
                  genprompt, helpg, insert (*.a)

objects.linux   = contains object libraries for genopt libraries called
                  ads, chauto, chplot, conman, decide, felippa, genprompt,
                  helpg, insert, main, mainsetup, prompter, prompter2, store, util  (*.a)

************************ END OF STEP 3 *************************************



****** STEP 4 ******
4. In order to rerun a case already done previously (for example, the case "cylinder")
do the following:

 Go to the directory:

 /home/progs/bosdec/sources

 and type the command:

 cp /home/progs/genopt/case/cylinder/bosdec.cylinder bosdec.src

 if you haven't done this already.


 Go to the directory

 /home/progs/genoptcase .

 If you want to run the test case called "cylinder",
 copy the file, cylinder.INP, as follows:

 cp /home/progs/genopt/case/cylinder/cylinder.INP .


 Type the following:

genoptlog       (activate the GENOPT command set)

************** NOTE ****************** NOTE ****************** NOTE ***************
MAKE SURE ALWAYS TO SAVE COPIES OF struct.new AND behavior.new THAT YOU HAVE
PUT A LOT OF EFFORT INTO CREATING. THE struct.new AND behavior.new FILES ARE
DESTROYED BY EXECUTION OF "gentext", THE COMMAND YOU TYPE NEXT.
***********************************************************************************

gentext         (provide input for GENOPT, that is, for the generic case)

Enter generic case name: cylinder

 (give as the name for the generic case = "cylinder")

 ARE YOU CORRECTING, ADDING TO, OR USING cylinder.INP ? (TYPE y  OR  n):y

 (reply "y", for YES, you ARE using or correcting a previously established file;
  in this example the already-existing input file for GENOPT is called "cylinder.INP")

 (The use of the file, cylinder.INP, as input to GENTEXT leads, after execution of
  GENTEXT, to the following files:                        purpose of file
-----------------------------------------------------------------------------------
-rw-r--r--  1 bush bush  1850 Oct  8 15:36 cylinder.CHA  code fragment for "change"
-rw-r--r--  1 bush bush   557 Oct  8 15:36 cylinder.COM  labelled common blocks
-rw-r--r--  1 bush bush  5541 Oct  8 15:36 cylinder.CON  code fragments for constraints
-rw-r--r--  1 bush bush  8734 Oct  8 15:36 cylinder.DAT  a copy of cylinder.INP
-rw-r--r--  1 bush bush 20639 Oct  8 15:36 cylinder.DEF  information for user.
-rw-r--r--  1 bush bush 11160 Oct  8 15:36 cylinder.NEW  code fragment for "begin"
-rw-r--r--  1 bush bush  1343 Oct  8 15:36 cylinder.PRO  prompts for specific case.
-rw-r--r--  1 bush bush   733 Oct  8 15:36 cylinder.REA  read labelled common blocks.
-rw-r--r--  1 bush bush    48 Oct  8 15:36 cylinder.SET  code fragment for SETUPC
-rw-r--r--  1 bush bush 10349 Oct  8 15:36 cylinder.SUB  skeletal BEHX1, BEHX2, etc.
-rw-r--r--  1 bush bush   733 Oct  8 15:36 cylinder.WRI  write labelled common blocks

and

-rw-r--r--  1 bush bush 29778 Oct  8 15:36 begin.new
-rw-r--r--  1 bush bush 24785 Oct  8 15:36 behavior.new
-rw-r--r--  1 bush bush 13726 Oct  8 15:36 change.new
-rw-r--r--  1 bush bush  7234 Oct  8 15:36 stoget.new
-rw-r--r--  1 bush bush 14495 Oct  8 15:36 struct.new

The "cylinder.*" files, described in cylinder.DEF, contain fragments
of FORTRAN code, definitions of variables, and prompts. For descriptions
of the contents of these files, please see Table 5 in the file,
cylinder.DEF. (Also Table 5 in the file ..genopt/case/torisph/equivellipse.DEF
contains the same descriptions for a generic case called "equivellipse".)

The "*.new" files contain complete FORTRAN source for processors, "begin" and
"change" and the subroutine stoget, and "skeletons" of subroutines behavior
and struct. It is up to the user to "flesh out" the skeletons, "behavior"
and "struct", that is, write FORTRAN code that leads to computation
of the various behaviors and objective (buckling, stress, vibration, etc.,
and objective).

Also, the user must create a file, /home/progs/bosdec/sources/bosdec.src,
if this has not already been done.

In the case called "cylinder" all this has been done. The complete
FORTRAN coding is contained in the three files,

/home/progs/genopt/case/cylinder/bosdec.cylinder,
/home/progs/genopt/case/cylinder/behavior.cylinder
/home/progs/genopt/case/cylinder/struct.cylinder

In order to re-run this case,
these three files must be copied to the correct locations.
If we are already in the directory, /home/progs/genoptcase,
we type the following:

cp /home/progs/genopt/case/cylinder/bosdec.cylinder /home/progs/bosdec/sources/bosdec.src
(establish the subroutine(s) that generate valid BIGBOSOR4 input files)

cp /home/progs/genopt/case/cylinder/behavior.cylinder  behavior.new 
(establish source code for the behavior)
The computer will ask you, "overwrite `behavior.new'?" and you answer, "y"
because you are overwriting the "skeletal" version of behavior.new with
the completed version of behavior.new.

cp /home/progs/genopt/case/cylinder/struct.cylinder struct.new 
(establish source code that calls the "behavior" subroutines and generates
 corresponding design margins)
The computer will ask you, "overwrite `struct.new'?" and you answer, "y"
because you are overwriting the "skeletal" version of struct.new with
the completed version of struct.new.


 Go to the   /home/progs/genoptcase   directory if you are not there already.


genprograms   (compile the GENOPT-written source code. The
               following processors are generated:)

Here is a list of all your newly created executables (provided "genprograms" doesn't bomb!):
-rwxr-xr-x  1 bush bush 71562 Oct  8 15:56 autochange.linux
-rwxr-xr-x  1 bush bush 139553 Oct  8 15:56 begin.linux
-rwxr-xr-x  1 bush bush 124383 Oct  8 15:56 change.linux
-rwxr-xr-x  1 bush bush 156054 Oct  8 15:56 chooseplot.linux
-rwxr-xr-x  1 bush bush 161231 Oct  8 15:56 decide.linux
-rwxr-xr-x  1 bush bush 104222 Oct  8 15:56 mainsetup.linux
-rwxr-xr-x  1 bush bush 1691559 Oct  8 15:56 optimize.linux
-rwxr-xr-x  1 bush bush 95653 Oct  8 15:56 store.linux


If you want to use input from the specific case, "cyl", type the commands
(assuming you are now in the /home/progs/genoptcase directory):

cp /home/progs/genopt/case/cylinder/cyl.BEG cyl.BEG 
cp /home/progs/genopt/case/cylinder/cyl.DEC cyl.DEC 
cp /home/progs/genopt/case/cylinder/cyl.OPT cyl.OPT 


Next, type the command BEGIN to input data for a new (specific) case.


begin

 THE NAME OF THE PROMPT FILE ASKED FOR NEXT
 IS THE NAME OF THE CLASS OF PROBLEMS THAT THE GENOPT-USER
 HAS CHOSEN, NOT THE NAME OF THE PARTICULAR CASE BEING
 STUDIED HERE. IT IS THE "NAME" PART OF "NAME".PRO.

  ENTER THE GENERIC CASE NAME: cylinder

 FROM HERE ON, WHENEVER THE CASE NAME IS REQUESTED,
 YOU PROVIDE THE NAME OF THE PARTICULAR INSTANCE IN THE CLASS
 OF PROBLEMS THAT YOU ARE NOW STUDYING.  THIS NAME MUST BE
 DIFFERENT FROM THE NAME YOU HAVE JUST PROVIDED ABOVE.

  ENTER THE SPECIFIC CASE NAME: cyl


 ****************   BEGIN   ******************
 Purpose of BEGIN is to permit you to provide a starting design
 in an interactive mode. You give starting dimensions, material
 properties, allowables. The interactive session is stored on
 a file called cyl.BEG, in which cyl is a name that you
 have chosen for the specific case. (The name, cyl must
 remain the same as you use BEGIN, DECIDE, MAINSETUP, OPTIMIZE,
 and CHANGE.)  In future runs of the same or a
 slightly modified case, you will find it convenient to use the
 file cyl.BEG as input.  Rather than answer all the questions
 interactively, you can use cyl.BEG or an edited version of
 cyl.BEG as input to BEGIN.  BEGIN also generates an output
 file called cyl.OPB. OPB lists a summary of the case, and if
 you choose the tutorial option, the questions, helps, and your
 answers for each input datum.
 *************************************************

 Are you correcting, adding to, or using an existing file? y

 (lines skipped to save space)



Next, give the command   DECIDE or CHANGE   .


decide

  ENTER THE SPECIFIC CASE NAME: cyl


 *****************   DECIDE   *******************
 The purpose of DECIDE is to permit you to choose decision
 variables, linked variables, inequality constraints based on
 dimensions, not behavior, and escape variables for the
 optimization run or runs to follow. The results of the
 interactive session are saved in a file called cyl.DEC, in
 which cyl is your name for the case. You may find this file
 useful for future runs of DECIDE in which you want to avoid
 answering many questions interactively. DECIDE also generates
 a file called cyl.OPD.  cyl.OPD contains a summary of
 optimization parameters. If you choose the tutorial option,
 cyl.OPD contains a complete list of the interactive session,
 including prompting questions, all "help" paragraphs, your
 responses to the prompting questions, and evolving lists
 of optimization parameters as they are chosen by you.
 ****************************************************

 Are you correcting, adding to, or using an existing file? y

 (lines skipped to save space)



Next, give the command   MAINSETUP   .

mainsetup

  ENTER THE SPECIFIC CASE NAME: cyl
 Are you correcting, adding to, or using an existing file? y

 (lines skipped to save space)

 Menu of commands: OPTIMIZE, SUPEROPT

 IN ORDER TO AVOID FALSE CONVERGENCE OF THE DESIGN, BE SURE TO
 RUN  "OPTIMIZE"  MANY TIMES DURING AN OPTIMIZATION AND/OR USE
 THE "GLOBAL" OPTIMIZING SCRIPT, "SUPEROPT".



optimize

Enter specific case name: cyl
B (background) or F (foreground): b
H (high) or L (low) priority: l
Diagnostics will be mailed to you upon program termination.

Next, inspect the cyl.OPM and cyl.OPP files. For example, the
first part of the cyl.OPM file is as follows:

start of cyl.OPM file...
-------------------------------------------------------------
      N         $ Do you want a tutorial session and tutorial output?
         0      $ Choose an analysis you DON'T want (1, 2,..), IBEHAV
         0      $ NPRINT= output index (0=GOOD, 1=ok, 2=debug, 3=too much)
         1      $ Choose type of analysis (1=opt., 2=fixed, 3=sensit.) ITYPE
         5      $ How many design iterations in this run (3 to 25)?
      n         $ Take "shortcuts" for perturbed designs (Y or N)?
         2      $ Choose 1 or 2 or 3 or 4 or 5 for IDESIGN
         1      $ Choose 1 or 2 or 3 or 4 or 5 for move limits, IMOVE
      y         $ Do you want default (RATIO=10) for initial move limit jump?
      y         $ Do you want the default perturbation (dx/x = 0.05)?
      n         $ Do you want to have dx/x modified by GENOPT?
      n         $ Do you want to reset total iterations to zero (Type H)?

 ************ END OF THE  cyl.OPT  FILE ***********
 ************ MARCH, 2008 VERSION OF GENOPT ****************
 ******** BEGINNING OF THE  cyl.OPM  FILE *********


 *********************** MAIN PROCESSOR **********************
 The purpose of the mainprocessor, OPTIMIZE, is to perform,
 in a batch mode, the work specified by MAINSETUP for the case
 called cyl.  Results are stored in the file  cyl.OPM.
 Please inspect cyl.OPM before doing more design iterations.
 ************************************************************




 STRUCTURAL ANALYSIS FOR DESIGN ITERATION NO.   0:
0
  STRUCTURAL ANALYSIS WITH UNPERTURBED DECISION VARIABLES
 VAR. DEC. ESCAPE LINK. LINKED  LINKING   LOWER     CURRENT    UPPER       DEFINITION
  NO. VAR.  VAR.  VAR.    TO   CONSTANT   BOUND      VALUE     BOUND
   1   Y     Y     N      0    0.00E+00  1.00E-02 1.0000E+00  3.00E+00  Thickness of the cylindrical shell:
 THICK
 Maximum effective stress from BEHX1: STRESS=  3.6237E+03

 SYMMETRIC BUCKLING LOAD FACTORS AND MODES (BEHX2)
        6.0138E+04(   2)
        4.4295E+04(   3)
        1.3539E+04(   4)
        5.8004E+03(   5)
        3.6518E+03(   6)
        3.2434E+03(   7)
        3.5049E+03(   8)
        4.0859E+03(   9)
        4.8567E+03(  10)
 Critical buckling load factor, BSYM=  3.2434E+03
 Critical number of circumferential waves, NWVCRT=    7
--------------------------------------------------------------------


The complete cyl.OPP file is as follows:

cyl.OPP file
---------------------------------------------------------------------
 *****************  MARCH 2008 VERSION OF GENOPT     ****************
 ***************** THIS IS THE  cyl.OPP FILE ******************

 *********************** STORE PROCESSOR **********************
 The purpose of STORE is to add the latest results for
 margins, design variables, and objective to those for previous
 iterations for the specific case called cyl.  Later, when
 the final design has been obtained, the entire history of the
 design evolution for the specific case cyl can be plotted.
 ************************************************************

  IAUTOC,ITIGHT,IDESGN,ITRLST,ITRTOT,ITRALL= 0 0 2 0 6 0
  IITIGH(i),i=1,3= 0 0 0
  ITRMIN(i),i=1,3= 100000 100000 100000
 casename=cyl: ITER, ITRLST=    5    0


 *********** MARGINS FOR   6 ITERATIONS **********
 1-(STRESS(1 )/STRSSA(1 )) X STRSSF(1 ); F.S.=  1.00 =
  8.7921E-01  8.6579E-01  8.5413E-01  8.4417E-01  8.3576E-01  8.2876E-01
 (BSYM(1 )/BSYMA(1 )) / BSYMF(1 )-1; F.S.=  1.25 =
  1.5947E+00  1.0045E+00  6.4474E-01  4.0662E-01  2.2540E-01  9.9380E-02
 (BANTI(1 )/BANTIA(1 )) / BANTIF(1 )-1; F.S.=  1.25 =
  3.5453E+00  2.4777E+00  1.8298E+00  1.4123E+00  1.1113E+00  8.9414E-01
 (FREQ(1 )/FREQA(1 )) / FREQF(1 )-1; F.S.=  1.00 =
  1.1819E+00  9.8418E-01  7.7136E-01  5.5983E-01  3.8136E-01  2.2857E-01

 ****** DESIGN VARIABLES FOR   6 ITERATIONS ******
 Thickness of the cylindrical shell: THICK =
  1.0000E+00  9.0000E-01  8.2800E-01  7.7501E-01  7.3533E-01  7.0521E-01

 ********** OBJECTIVE FOR   6 ITERATIONS *********
 weight of half of cyl. shell: WEIGHT =
  6.0696E+03  5.4626E+03  5.0256E+03  4.7040E+03  4.4631E+03  4.2803E+03
  Absolute values of maximum constraint gradients, GRDPLT =
  6.7561E+00  5.0403E+00  7.2148E+00  6.0102E+00  5.7645E+00  0.0000E+00

 ==============================================================
 ITERATION                                        NUMBER OF
  NUMBER      OBJECTIVE     THE DESIGN IS...   CRITICAL MARGINS
 --------------------------------------------------------------
 ------------------------------------------------------OPTIMIZE
     1         6.0696E+03         FEASIBLE            0
     2         5.4626E+03         FEASIBLE            0
     3         5.0256E+03         FEASIBLE            0
     4         4.7040E+03         FEASIBLE            0
     5         4.4631E+03         FEASIBLE            0
     6         4.2803E+03         FEASIBLE            0
 ===========================================================================
  VALUES OF DESIGN VARIABLES CORRESPONDING TO BEST FEASIBLE DESIGN
 VAR.   CURRENT
 NO.     VALUE            DEFINITION
  1    7.052E-01  Thickness of the cylindrical shell: THICK
 MARGINS CORRESPONDING TO THE DESIGN (F.S.= FACTOR OF SAFETY)
 MAR.   CURRENT
 NO.     VALUE            DEFINITION
  1    8.288E-01  1-(STRESS(1 )/STRSSA(1 )) X STRSSF(1 ); F.S.=  1.00
  2    9.938E-02  (BSYM(1 )/BSYMA(1 )) / BSYMF(1 )-1; F.S.=  1.25
  3    8.941E-01  (BANTI(1 )/BANTIA(1 )) / BANTIF(1 )-1; F.S.=  1.25
  4    2.286E-01  (FREQ(1 )/FREQA(1 )) / FREQF(1 )-1; F.S.=  1.00

 ***************************************************
 ******************** DESIGN OBJECTIVE *******************
 *************                             ***********
  CORRESPONDING VALUE OF THE OBJECTIVE FUNCTION:
 VAR.   CURRENT
 NO.     VALUE            DEFINITION
  1    4.280E+03  weight of half of cyl. shell: WEIGHT

 *************                          ************
 ******************** DESIGN OBJECTIVE *******************
 *****************************************************
 ITYPE,ITRTOT,ITRMX2,IAUTOC,ITIGHT,IITIGH(1),ITRMIN(1)=
       1       6     150       0       0       0  100000
 ITYPE,ITRTOT,ITRMX2,IAUTOC,ITIGHT,IITIGH(2),ITRMIN(1)=
       1       6     300       0       0       0  100000
 ITYPE,ITRTOT,ITRMX2,IAUTOC,ITIGHT,IITIGH(3),ITRMIN(2)=
       1       6     430       0       0       0  100000
 IN ORDER TO AVOID FALSE CONVERGENCE OF THE DESIGN, BE SURE TO
 RUN  "OPTIMIZE"  MANY TIMES DURING AN OPTIMIZATION.
 ****************** END OF THE  cyl.OPP FILE ******************




Execute "OPTIMIZE" a second time.

optimize

Enter specific case name: cyl
B (background) or F (foreground): b
H (high) or L (low) priority: l
Diagnostics will be mailed to you upon program termination.


Inspect the cyl.OPP file:

cyl.OPP file after second "OPTIMIZE":
-----------------------------------------------------------
 *****************  MARCH 2008 VERSION OF GENOPT     ****************
 ***************** THIS IS THE  cyl.OPP FILE ******************

 *********************** STORE PROCESSOR **********************
 The purpose of STORE is to add the latest results for
 margins, design variables, and objective to those for previous
 iterations for the specific case called cyl.  Later, when
 the final design has been obtained, the entire history of the
 design evolution for the specific case cyl can be plotted.
 ************************************************************

  IAUTOC,ITIGHT,IDESGN,ITRLST,ITRTOT,ITRALL= 0 0 2 6 8 0
  IITIGH(i),i=1,3= 0 0 0
  ITRMIN(i),i=1,3= 100000 100000 100000
 casename=cyl: ITER, ITRLST=    1    6


 *********** MARGINS FOR   8 ITERATIONS **********
 1-(STRESS(1 )/STRSSA(1 )) X STRSSF(1 ); F.S.=  1.00 =
  8.7921E-01  8.6579E-01  8.5413E-01  8.4417E-01  8.3576E-01  8.2876E-01  8.2876E-01  8.2283E-01
 (BSYM(1 )/BSYMA(1 )) / BSYMF(1 )-1; F.S.=  1.25 =
  1.5947E+00  1.0045E+00  6.4474E-01  4.0662E-01  2.2540E-01  9.9380E-02  9.9380E-02  7.3116E-03
 (BANTI(1 )/BANTIA(1 )) / BANTIF(1 )-1; F.S.=  1.25 =
  3.5453E+00  2.4777E+00  1.8298E+00  1.4123E+00  1.1113E+00  8.9414E-01  8.9414E-01  7.3551E-01
 (FREQ(1 )/FREQA(1 )) / FREQF(1 )-1; F.S.=  1.00 =
  1.1819E+00  9.8418E-01  7.7136E-01  5.5983E-01  3.8136E-01  2.2857E-01  2.2857E-01  9.3489E-02

 ****** DESIGN VARIABLES FOR   8 ITERATIONS ******
 Thickness of the cylindrical shell: THICK =
  1.0000E+00  9.0000E-01  8.2800E-01  7.7501E-01  7.3533E-01  7.0521E-01  7.0521E-01  6.8161E-01

 ********** OBJECTIVE FOR   8 ITERATIONS *********
 weight of half of cyl. shell: WEIGHT =
  6.0696E+03  5.4626E+03  5.0256E+03  4.7040E+03  4.4631E+03  4.2803E+03  4.2803E+03  4.1371E+03
  Absolute values of maximum constraint gradients, GRDPLT =
  6.7561E+00  5.0403E+00  7.2148E+00  6.0102E+00  5.7645E+00  0.0000E+00  3.5437E+00  3.8078E+00

 ==============================================================
 ITERATION                                        NUMBER OF
  NUMBER      OBJECTIVE     THE DESIGN IS...   CRITICAL MARGINS
 --------------------------------------------------------------
 ------------------------------------------------------OPTIMIZE
     1         6.0696E+03         FEASIBLE            0
     2         5.4626E+03         FEASIBLE            0
     3         5.0256E+03         FEASIBLE            0
     4         4.7040E+03         FEASIBLE            0
     5         4.4631E+03         FEASIBLE            0
     6         4.2803E+03         FEASIBLE            0
 ------------------------------------------------------OPTIMIZE
     7         4.2803E+03         FEASIBLE            0
     8         4.1371E+03         FEASIBLE            1
 =============================================================================
  VALUES OF DESIGN VARIABLES CORRESPONDING TO BEST FEASIBLE DESIGN
 VAR.   CURRENT
 NO.     VALUE            DEFINITION
  1    6.816E-01  Thickness of the cylindrical shell: THICK
 MARGINS CORRESPONDING TO THE DESIGN (F.S.= FACTOR OF SAFETY)
 MAR.   CURRENT
 NO.     VALUE            DEFINITION
  1    8.228E-01  1-(STRESS(1 )/STRSSA(1 )) X STRSSF(1 ); F.S.=  1.00
  2    7.312E-03  (BSYM(1 )/BSYMA(1 )) / BSYMF(1 )-1; F.S.=  1.25
  3    7.355E-01  (BANTI(1 )/BANTIA(1 )) / BANTIF(1 )-1; F.S.=  1.25
  4    9.349E-02  (FREQ(1 )/FREQA(1 )) / FREQF(1 )-1; F.S.=  1.00

 ***************************************************
 ******************** DESIGN OBJECTIVE *******************
 *************                             ***********
  CORRESPONDING VALUE OF THE OBJECTIVE FUNCTION:
 VAR.   CURRENT
 NO.     VALUE            DEFINITION
  1    4.137E+03  weight of half of cyl. shell: WEIGHT

 *************                          ************
 ******************** DESIGN OBJECTIVE *******************
 *****************************************************
 ITYPE,ITRTOT,ITRMX2,IAUTOC,ITIGHT,IITIGH(1),ITRMIN(1)=
       1       8     150       0       0       0  100000
 ITYPE,ITRTOT,ITRMX2,IAUTOC,ITIGHT,IITIGH(2),ITRMIN(1)=
       1       8     300       0       0       0  100000
 ITYPE,ITRTOT,ITRMX2,IAUTOC,ITIGHT,IITIGH(3),ITRMIN(2)=
       1       8     430       0       0       0  100000
 IN ORDER TO AVOID FALSE CONVERGENCE OF THE DESIGN, BE SURE TO
 RUN  "OPTIMIZE"  MANY TIMES DURING AN OPTIMIZATION.
 ****************** END OF THE  cyl.OPP FILE ******************


Plot some stuff, using as input for "CHOOSEPLOT" the following file:
-------------- cyl.CPL file -----------------------------
      n         $ Do you want a tutorial session and tutorial output?
      y         $ Any design variables to be plotted v. iterations (Y or N)?
         1      $ Choose a variable to be plotted v. iterations (1,2,3,..)
      n         $ Any more design variables to be plotted (Y or N) ?
      y         $ Any design margins to be plotted v. iterations (Y or N)?
         1      $ Choose a margin to be plotted v. iterations (1,2,3,..)
      y         $ Any more margins to be plotted (Y or N) ?
         2      $ Choose a margin to be plotted v. iterations (1,2,3,..)
      y         $ Any more margins to be plotted (Y or N) ?
         3      $ Choose a margin to be plotted v. iterations (1,2,3,..)
      y         $ Any more margins to be plotted (Y or N) ?
         4      $ Choose a margin to be plotted v. iterations (1,2,3,..)
      n         $ Any more margins to be plotted (Y or N) ?
         1      $ Give maximum value (positive) to be included in plot frame.
----------------------------------------------------------------------------


chooseplot

  ENTER THE SPECIFIC CASE NAME: cyl


 ***************** CHOOSEPLOT  *******************
 The purpose of CHOOSEPLOT is to permit you to choose:

    1. Which design parameters (Role 1 variables) are to be
       plotted v. design iterations;

    2. Which design margins are to be plotted v. design
       iterations.

 The results of the interactive session are saved in a file
 called cyl.CPL, in which cyl is your name for the case.
 You may find this file useful for future runs of CHOOSEPLOT
 in which you want to avoid answering many questions
 interactively. CHOOSEPLOT also generates the four files:
 cyl.OPL, cyl.PL3, cyl.PL4, and cyl.PL5 , which are
 described briefly at the end of this run.
 If you choose the tutorial option, cyl.OPL contains a
 complete list of the interactive session, including prompting
 questions, all "help" paragraphs, your responses to the
 prompting questions, and evolving lists of which parameters
 are to be plotted as they are chosen by you.  In addition to
 the parameters chosen here for plotting, CHOOSEPLOT auto-
 matically sets up a file of the objective for plotting.

 Are you correcting, adding to, or using an existing file? y

 (lines skipped to save space)

 NEXT, GIVE THE COMMAND:  DIPLOT   .


diplot

Enter the specific case name: cyl
Print the plot file on the printer called: <lp> (y or n)? n
cyl.PL6: No such file or directory.
cyl.PL7: No such file or directory.
cyl.PL8: No such file or directory.
cyl.PL9: No such file or directory.
cyl.PL10: No such file or directory.
The PostScript files, cyl.3.ps through cyl.10.ps, contain the
graphics for your plot.  They can be printed on any PostScript
printer or viewed on the console with a PostScript previewing
software program.

"diplot" generates the following postscript (*.ps) files:

-rw-rw-r--  1 bush bush 16559 Oct  8 16:47 cyl.3.ps  (margins vs iterations)
-rw-rw-r--  1 bush bush 13126 Oct  8 16:47 cyl.4.ps  (thickness vs iterations)
-rw-rw-r--  1 bush bush 14160 Oct  8 16:47 cyl.5.ps  (objective vs iterations)

Use the command "gv" to view the plots on your screen.



Clean up the "cyl" files (specific case).

cleanspec

Enter specific case name: cyl

(all files present in the "genoptcase" directory are listed)

Clean up the "cylinder" files (generic case).

cleangen

Enter generic case name: cylinder
-rw-r--r--  1 bush bush 15025 Oct  8 15:42 struct.new
-rw-r--r--  1 bush bush 28956 Oct  8 15:41 behavior.new
-rw-r--r--  1 bush bush  8734 Jul 25  2003 cylinder.INP


************** NOTE ****************** NOTE ****************** NOTE ***************
MAKE SURE ALWAYS TO SAVE COPIES OF struct.new AND behavior.new THAT YOU HAVE
PUT A LOT OF EFFORT INTO CREATING. THE struct.new AND behavior.new FILES ARE
DESTROYED BY EXECUTION OF "gentext".
***********************************************************************************


Next, you have the chance to save the FORTRAN source codes:

         behavior.new      and/or      struct.new

You may have done a lot of work modifying these libraries.
Save them by copying them into other files.

Do you want to copy "behavior.new"? (Y or N) y

Do you want to copy "struct.new"? (Y or N) y

Here are the files remaining in /home/progs/genoptcase
-rw-rw-r--  1 bush bush  14160 Oct  8 16:47 cyl.5.ps
-rw-rw-r--  1 bush bush  13126 Oct  8 16:47 cyl.4.ps
-rw-rw-r--  1 bush bush  16559 Oct  8 16:47 cyl.3.ps
-rw-r--r--  1 bush bush  15025 Oct  8 15:42 struct.new
-rw-r--r--  1 bush bush  28956 Oct  8 15:41 behavior.new
-rw-rw-r--  1 bush bush    976 Oct  8 09:28 cyl.CPL
-rw-rw-r--  1 bush bush    660 Jul 30  2003 cyl.OPT
-rw-r--r--  1 bush bush   1193 Jul 25  2003 cyl.BEG
-rw-r--r--  1 bush bush    520 Jul 25  2003 cyl.DEC
-rw-r--r--  1 bush bush   8734 Jul 25  2003 cylinder.INP
-rw-r--r--  1 bush bush  15025 Jul 25  2003 struct.cylinder
-rw-r--r--  1 bush bush  28956 Jul 25  2003 behavior.cylinder
================================================================


************** NOTE ****************** NOTE ****************** NOTE ***************
MAKE SURE ALWAYS TO SAVE COPIES OF struct.new AND behavior.new THAT YOU HAVE
PUT A LOT OF EFFORT INTO CREATING. THE struct.new AND behavior.new FILES ARE
DESTROYED BY EXECUTION OF "gentext".
***********************************************************************************

************************ END OF STEP 4 *************************************



IMPORTANT INFORMATION FOLLOWS
==============================================================
The following paragraphs occur in the *.DEF file (in which
the symbol "*" represents the name of the generic case):
-------------------------------------------------------------
 WHAT TO DO NEXT (THIS IS REALLY IMPORTANT!):
 Next, if necessary, provide the algorithms called for in the
 skeletal subroutines listed in the library BEHAVIOR.NEW. You
 may find useful routines, such as a linear interpolator,
 in the library UTIL.NEW.

 And/Or, if necessary, complete the skeletal routines STRUCT
 and TRANFR.  (You may find useful routines in UTIL.NEW).
 If you are adding subroutine calls to SUBROUTINE STRUCT or
 SUBROUTINE TRANFR, store the subroutines themselves in
 the libraries called ADDCODEn.NEW, n = 1,2,3,...5. (Please
 list one of the ADDCODEn.NEW libraries for instructions.)

 After you have done all this,  give the command GENPROGRAMS.
 GENPROGRAMS will generate the absolute elements needed to
 optimize whatever you have chosen as your objective (see
 OBJECT routine in BEHAVIOR.NEW) in the presence of whatever
 behavior or other factors (e.g. clearance) are quantified by
 user-written subroutines collected in the libraries
 ADDCODEn.NEW  and/or algorithms added to the skeletal
 routines in the library BEHAVIOR.NEW .


 If an error occurs during GENPROGRAMS, check your FORTRAN
 coding. If you have to change something and rerun, make sure
 to save the old version under a different file name so that
 you can efficiently delete all outdated files with names
 *.NEW without losing a lot of good coding! The writer had
 fallen more than once into that trap during development of
 GENOPT.

 If GENPROGRAMS runs without bombing, try test examples within
 the class of problems covered by your FORTRAN contributions
 to GENOPT before assigning specific design development tasks
 to individuals who may be more naive in the field covered by
 your FORTRAN contributions to GENOPT than you are!

 Please see the cases under genopt/case for examples and more
 information.


 USING GENOPT IN GENERAL AND WITH BIGBOSOR4

 Please read the files:

 ...genopt/case/cylinder/howto.bosdec
 ...genopt/case/cylinder/howto.struct
 ...genopt/case/cylinder/howto.behavior
 ...genopt/case/torisph/howto.stags.pdf
 ...genopt/case/torisph/readme.equivellipse
 ...genopt/case/wavycyl/readme.wavycyl

 The main things you must do are the following:

 1. create a file called ..bosdec/sources/bosdec.src, the
 purpose of which is to create a BOSOR4 input file, *.ALL .
 in which "*" represents the users name for the specific case.
 The file, ..genopt/case/torisph/bosdec.equivellipse is a good
 example. Make sure to save bosdec.src by copying it into
 another file. Example: cp bosdec.src bosdec.equivellipse
 Other examples of special "bosdec" files are:
 ...genopt/case/wavycyl/bosdec.wavycyl
 ...genopt/case/torisph/bosdec.ellipse
 ...genopt/case/torisph/bosdec.equivellipse
 ...genopt/case/cylinder/bosdec.cylinder

 2. Flesh out either or both the libraries, struct.new and/or
 behavior.new. In the case, ..genopt/case/torisph, only the
 library struct.new is fleshed out. The library behavior.new is
 not changed from that created automatically by GENOPT. In the
 case, genopt/case/cylinder, both struct.new and behavior.new
 are changed, struct.new in minor ways and behavior.new in
 major ways. Make sure to save struct.new and behavior.new. For
 example: cp struct.new   struct.cylinder
          cp behavior.new behavior.cylinder
 (You must save copies of bosdec.src, struct.new, behavior.new
  because it usually takes quite a bit of effort to modify
  the versions automatically created by GENOPT in order to
  solve your generic class of problems.)
 See the following files for examples of modified libraries:
 ..genopt/case/torisph/struct.tori         (behavior.new is not modified in "torisph")
 ..genopt/case/torisph/struct.ellipse      (behavior.new is not modified in "torisph")
 ..genopt/case/torisph/struct.equivellipse (behavior.new is not modified in "torisph")
 ..genopt/case/cylinder/struct.cylinder
 ..genopt/case/cylinder/behavior.cylinder
 ..genopt/case/wavycyl/struct.wavycyl
 ..genopt/case/wavycyl/behavior.wavycyl
 ..genopt/case/plate/behavior.plate   (struct.new is not modified in the "plate" example)
 ..genopt/case/sphere/behavior.sphere (struct.new is not modified in the "sphere" example)


 3. Execute the GENOPT script called GENPROGRAMS. This script
 "makes" the processors for the user-named generic case. The
 "makefile" called ..genopt/execute/usermake.linux is used. If
 GENPROGRAMS compiles everything successfully, which is not
 likely on your first try because you probably did a lot of
 FORTRAN coding to create bosdec.src, struct.new, behavior.new,
 GENPROGRAMS will end with a list like the following:

 Here is a list of all your newly created executables:
 -rwxr-xr-x  1 bush bush 71562 Oct  8 15:56 autochange.linux
 -rwxr-xr-x  1 bush bush 139553 Oct  8 15:56 begin.linux
 -rwxr-xr-x  1 bush bush 124383 Oct  8 15:56 change.linux
 -rwxr-xr-x  1 bush bush 156054 Oct  8 15:56 chooseplot.linux
 -rwxr-xr-x  1 bush bush 161231 Oct  8 15:56 decide.linux
 -rwxr-xr-x  1 bush bush 104222 Oct  8 15:56 mainsetup.linux
 -rwxr-xr-x  1 bush bush 1691559 Oct  8 15:56 optimize.linux
 -rwxr-xr-x  1 bush bush 95653 Oct  8 15:56 store.linux

 Next, type the command BEGIN to input data for a new specific case.

 If GENPROGRAMS bombs due to fatal compilation errors, or
 even if GENPROGRAMS seems to finish successfully, it is best
 to inspect the file ..genoptcase/usermakelinux.log. If there
 are compilation errors, revise the appropriate source codes,
 bosdec.src and/or struct.new and/or behavior.new, and execute
 GENPROGRAMS again. Keep doing this until everything is okay.

 4. Next, think up a good name for your specific case and run
 BEGIN, DECIDE, MAINSETUP, and OPTIMISE (several times) or
 SUPEROPT. (See the file ..genopt/doc/getting.started and
 the directories, genopt/case/wavycyl, genopt/case/cylinder and genopt/case/torisph,
 for examples.) Even though you had a successful "make" via
 GENPROGRAMS in the previous step, something will doubtless not
 be satisfactory and you will have to or want to make further
 changes to one or more of the source files, bosdec.src,
 struct.new, behavior.new.

************** NOTE ****************** NOTE ****************** NOTE ***************
MAKE SURE ALWAYS TO SAVE COPIES OF struct.new AND behavior.new THAT YOU HAVE
PUT A LOT OF EFFORT INTO CREATING. THE struct.new AND behavior.new FILES ARE
DESTROYED BY EXECUTION OF "gentext".
***********************************************************************************


 THE NEXT STEPS PERTAIN TO THE USE OF GENOPT WITH BIGBOSOR4

 5. You must have the BIGBOSOR4 software in the directory,
 ..bosdec/sources. You need to have the following files there:
 addbosor4.src, b4util.src, opngen.src, prompter.src, gasp.F,
 gasp_linux.o, bio_linux.c, bio_linux.o, b4plot.src, as well as
 the bosdec.src file discussed above.

 6. The "make" file, ..genopt/execute/usermake.linux, must
 include references to the BIGBOSOR4 sofware listed in Step 5.
 Please see the file ..genopt/execute/usermake.linux, which
 already exists. (You do not have to do anything about it!)

 7. Suppose everything compiles correctly during the
 GENPROGRAMS execution, but when you try to run a specific case
 the run bombs. Suppose all of your contributed FORTRAN coding
 is in ..bosdec/sources/bosdec.src and in
       ..genoptcase/struct.new (..genoptcase/behavior.new did
 not need to be modified for your case, as is true for the
 generic case called "torisph" in ..genopt/case/torisph).
 It is very helpful to insert a "CALL EXIT" statement after one
 of the analyses performed in struct.new, then to execute
 GENPROGRAMS again to recompile the temporarily changed
 struct.new. The reason for doing this is explained in the file
 ..genopt/case/torisph/struct.equivellipse and also in the file
 ..genopt/doc/getting.started: you want to be able to make a
 BIGBOSOR4 run to be certain that:
 a. ..bosdec/sources/bosdec.src created a valid BOSOR4 input
    file, and,
 b. the BIGBOSOR4 run did not finish for some reason.

======= More information (from ..genopt/case/torisph/struct.equivellipse) =======
======= pertaining to Step 7. listed just above) ===========

The following comments are taken from the file, 
..genopt/case/torisph/struct.equivellipse:
-------------------------------------------------------------------------
C You can temporarily change struct.new by adding "CALL EXIT" here in
C order to use the iso.ALL file generated by "CALL B4READ" (above) as input
C to a BIGBOSOR4 run. After running BIGBOSOR4, inspect the iso.OUT file and,
C if a "bomb" has occurred in the above part of struct.new, inspect also
C the files, iso_m.ERR and iso.DOC. These inspections will help you find
C a possible bug in the iso.ALL file, which is generated by the call to
C SUBROUTINE BOSDEC above, that is, by the statement above, 
C "CALL BOSDEC(1,ILOADX,INDIC,IMPERF,24)".
C If the run bombed above due to an error in the iso.ALL file, modify the
C file ..bosdec/sources/bosdec.src accordingly and re-execute GENPROGRAMS.
C Then run OPTIMIZE again.
C
C In order to run BIGBOSOR4, do the following:
C 1. go to a different window.
C 2. go to a directory where you want to run BIGBOSOR4.
C 3. copy the file iso.ALL to that directory.
C 4. type the following BIGBOSOR4 commands:
C    bigbosor4log        (activates the BIGBOSOR4 set of commands)
C    bigbosorall         (executes BIGBOSOR4)
C    bosorplot           (generates plots)
C
C Remember to comment out the "CALL EXIT" statement when you have finished
C with your experiment! You can de-comment any of the other "CALL EXIT"
C statements in struct.new if you want to make analogous BIGOBOSOR4 runs
C corresponding to one of the other analysis types performed in struct.new.
C Of course, you should only de-comment one "CALL EXIT" statement at a time.
C
C NOTE: If (ITYPEX.EQ.2), that is, analysis of a fixed design, SUBROUTINE
C       STRUCT automatically produces BIGBOSOR4 input files for each type
C       of analysis performed here. The files have the following names:
C
C       1. linear axisymmetric bifurcation buckling of perfect shell:
C          *.ALL1 (the "*" represents the user-provided specific case name)
C       2. nonlinear axisymmetric stress analysis of mode 1 imperfect shell:
C          *.ALL2 and possibly *.ALL3
C       3. nonlinear axisymmetric stress analysis of mode 2 imperfect shell:
C          *.ALL4 and possibly *.ALL5
C       4. nonlinear axisymmetric collapse of mode 1 imperfect shell:
C          *.ALL6
C       5. nonlinear axisymmetric collapse of mode 2 imperfect shell:
C          *.ALL7
C       6. nonlinear bifurcation buckling of mode 1 imperfect shell.
C          *.ALL8
C       7. nonlinear bifurcation buckling of mode 2 imperfect shell.
C          *.ALL9
C
C       After finding the optimum design, it is useful to make several
C       BIGBOSOR4 runs, using the negative of mode 1 and mode 2
C       imperfections in order to ascertain whether or not these
C       "negative" imperfections lead to more critical stress, collapse,
C       and buckling constraints than the "positive" imperfections.
C
C     CALL EXIT
----------------------------------------------------------------------------



********* NOTE **************** NOTE *****************

IF YOU WANT TO RUN STAGS:

For more information, see the file,

/home/progs/genopt/case/torisph/howto.stags.pdf

howto.stags

March 6, 2008 (NOTE: the howto.stags.pdf file just cited is more recent
                     and has more details. SEE howto.stags.pdf!!!)

The following steps are taken in order to run STAGS cases involving the
user-written SUBROUTINE WALL:

1. Run GENOPT with fixed design in order to generate the file *.STAGS
(eqellipse.STAGS in the case, eqellipse, for example; in general, <casename>.STAGS).

2. Go to the directory from which you want to run STAGS.

3. Copy SUBROUTINE WALL into the directory where you want to run STAGS:
   Example: cp /home/progs/genopt/case/torisph/wall.elastic.src wall.F

3. copy <casename>.STAGS in an analogous manner:
   Example: cp /home/progs/genoptcase/eqellipse.STAGS WALLTHICK.STAGS

3b.We must "source" the stags code now:
   source /home/weiler/stags5/prc/initialize  (for feynman computer)
   source /home/stag5/prc/initialize          (for teller  computer)

4. We must "make" both s1 (STAGS preprocessor) and s2 (STAGS mainprocessor)
   in the directory where we want to run STAGS cases. The appropriate commands are:

   makeuser s1  (generates an executable element called us1)
   makeuser s2  (generates an executable element called us2)

5. We must "make" the utilities STAPL and XYTRANS (STAGS postprocessors)
   in the directory where we want to run STAGS cases. The appropriate commands are:

   makeuser stapl    (generates an executable element called ustapl)
   makeuser xytrans  (generates an executable element called uxytrans)

   *********** NOTE ****************************
   When we use STAPL and XYTRANS, we must type "ustapl  <casename>" and "uxytrans".
   *********************************************

6. Generate the *.inp and *.bin input files for STAGS. These files
   are called <casename>.inp1 and <casename.bin1 (for linear buckling) and
   <casename>.inp2 and <casename>.bin2 (for nonlinear collapse) here.
   See the discussion below for some tips on generating a valid *.inp file.

7. cp /home/progs/genopt/case/torisph/<casename>.{bin1,inp1) <casename>.{bin,inp}
   and later, after completion of the linear buckling run or runs,
   cp /home/progs/genopt/case/torisph/<casename>.{bin2,inp2) <casename>.{bin,inp}
   for the nonlinear collapse analysis of the shell with one or more buckling
   modal imperfections.

8. Run STAGS via the command:

   stags <casename> -1 <path-to-us1> -2 <path-to-us2> -b

   Example: stags eqellipse -1 /home/bush/us1 -2 /home/bush/us2 -b

   NOTE: In order to run STAGS you have to have two valid input
         files, <casename>.bin and <casename>.inp . Examples are
         listed below.


NOTE; Whether STAGS runs an ELASTIC model or an ELASTIC-PLASTIC model
depends on SUBROUTINE WALL. There are two SUBROUTINE WALL files
included here:

-rw-r--r--  1 bush bush   9697 Jan 11  2006 wall.elastic.src
-rw-r--r--  1 bush bush   9697 Jan 11  2006 wall.plastic.src

With the command, diff wall.elastic.src wall.plastic.src > wall.diff

one can see the difference between the two "wall" files:
-----------------------------------------------------------------
211,212c211,212
<       nlip = 0
< c     nlip = 5
---
> c     nlip = 0
>       nlip = 5
218,219c218,219
< c     iplas = 1
<       iplas = 0
---
> c     iplas = 0
>       iplas = 1
244,247c244,247
<       matL(1) = 0
<       matL(2) = 0
< c     matL(1) = 2
< c     matL(2) = 1
---
> c     matL(1) = 0
> c     matL(2) = 0
>       matL(1) = 2
>       matL(2) = 1
-----------------------------------------------------------------

i****************** END NOTE *************************



WHAT IF YOU TRY TO RUN AN OPTIMIZATION OR FIXED DESIGN AND IT BOMBS?

The first thing to do is to check the *.OUT file ("*" = name of specific
case) to see if it has an error message at the end of it. If there is no
*.OUT file, transfer the existing *.ALL file to /home/progs/bigbosor4/work
and execute BIGBOSOR4, as follows:

bigbosor4log	(activate BIGBOSOR4 command set)
bigbosor4all    (case name = "*")

Inspect the *.OUT file to see if there is an error message at the bottom.

Here is an example, involving an externally pressurized ellipsoidal shell
in which the starting thickness of the shell wall is too small. The
following output appears at the end of the *.OUT file:

------------------------------------------------------------------------------------
 PRESSURE MULTIPLIER, P=   9.200000E+01, TEMPERATURE MULTIPLIER,TEMP =   0.000000E+00
 ANGULAR VELOCITY, OMEGA=   0.000000E+00

 PRESTRESS STIFFNESS MATRIX CALCULATED FOR ITERATION NO.   0. START FACTORING AND SOLVING
 Factoring done for iteration   0; Load step, ISTEP=   2
 FACTORING AND SOLVING COMPLETED FOR PRESTRESS ITERATION NO.  0
 ITERATION NO.  0 MAXIMUM DISPLACEMENT=  1.3408E-01
 PRESTRESS STIFFNESS MATRIX CALCULATED FOR ITERATION NO.   1. START FACTORING AND SOLVING
 Factoring done for iteration   1; Load step, ISTEP=   2
 FACTORING AND SOLVING COMPLETED FOR PRESTRESS ITERATION NO.  1
 ITERATION NO.  1 MAXIMUM DISPLACEMENT=  2.0740E+01
 PRESTRESS STIFFNESS MATRIX CALCULATED FOR ITERATION NO.   2. START FACTORING AND SOLVING
 Factoring done for iteration   2; Load step, ISTEP=   2
 FACTORING AND SOLVING COMPLETED FOR PRESTRESS ITERATION NO.  2
 ITERATION NO.  2 MAXIMUM DISPLACEMENT=  7.6182E+01
 PRESTRESS STIFFNESS MATRIX CALCULATED FOR ITERATION NO.   3. START FACTORING AND SOLVING
 Factoring done for iteration   3; Load step, ISTEP=   2
 FACTORING AND SOLVING COMPLETED FOR PRESTRESS ITERATION NO.  3
 ITERATION NO.  3 MAXIMUM DISPLACEMENT=  2.7050E+01
 PRESTRESS STIFFNESS MATRIX CALCULATED FOR ITERATION NO.   4. START FACTORING AND SOLVING
 Factoring done for iteration   4; Load step, ISTEP=   2
 FACTORING AND SOLVING COMPLETED FOR PRESTRESS ITERATION NO.  4
 ITERATION NO.  4 MAXIMUM DISPLACEMENT=  3.2588E+01
 PRESTRESS STIFFNESS MATRIX CALCULATED FOR ITERATION NO.   5. START FACTORING AND SOLVING
 Factoring done for iteration   5; Load step, ISTEP=   2
 FACTORING AND SOLVING COMPLETED FOR PRESTRESS ITERATION NO.  5
 ITERATION NO.  5 MAXIMUM DISPLACEMENT=  2.8119E+01
 PRESTRESS STIFFNESS MATRIX CALCULATED FOR ITERATION NO.   6. START FACTORING AND SOLVING
 Factoring done for iteration   6; Load step, ISTEP=   2
 FACTORING AND SOLVING COMPLETED FOR PRESTRESS ITERATION NO.  6
 ITERATION NO.  6 MAXIMUM DISPLACEMENT=  2.8280E+01
 PRESTRESS STIFFNESS MATRIX CALCULATED FOR ITERATION NO.   7. START FACTORING AND SOLVING
 Factoring done for iteration   7; Load step, ISTEP=   2
 FACTORING AND SOLVING COMPLETED FOR PRESTRESS ITERATION NO.  7
 ITERATION NO.  7 MAXIMUM DISPLACEMENT=  7.3849E+01
 PRESTRESS STIFFNESS MATRIX CALCULATED FOR ITERATION NO.   8. START FACTORING AND SOLVING
 Factoring done for iteration   8; Load step, ISTEP=   2
 FACTORING AND SOLVING COMPLETED FOR PRESTRESS ITERATION NO.  8
 ITERATION NO.  8 MAXIMUM DISPLACEMENT=  1.0639E+03
 PRESTRESS STIFFNESS MATRIX CALCULATED FOR ITERATION NO.   9. START FACTORING AND SOLVING
 Factoring done for iteration   9; Load step, ISTEP=   2
 FACTORING AND SOLVING COMPLETED FOR PRESTRESS ITERATION NO.  9
 ITERATION NO.  9 MAXIMUM DISPLACEMENT=  2.4671E+02
 PRESTRESS STIFFNESS MATRIX CALCULATED FOR ITERATION NO.  10. START FACTORING AND SOLVING
 Factoring done for iteration  10; Load step, ISTEP=   2
 FACTORING AND SOLVING COMPLETED FOR PRESTRESS ITERATION NO. 10
 ITERATION NO. 10 MAXIMUM DISPLACEMENT=  4.0845E+02

 INITIAL LOADS TOO HIGH FOR THIS STRUCTURE. REDUCE THEM AND RERUN.
----------------------------------------------------------------------------------------

The solution of this problem is to make the thickness of the ellipsoidal shell
larger in the *.BEG file.


There is another kind of error that you can easily run into. For example,
if you are running a case with the generic name, "ellipse", and the specific
name, "ellipsespec", and you accidentally type the generic name, "ellipse",
instead of the specific name, "ellipsespec", at the beginning of an execution
of "optimize", the "optimize" run bombs immediately, of course. Unfortunately,
when you then attempt immediately to re-execute "optimize" with use of the
correct specific case name, "ellipsespec", THAT run bombs also, printing the
following message (if you are running the case in the foreground):

   Executing optimize
   open: No such file or directory
   apparent state: unit 12 (unnamed)
   lately writing direct unformatted external IO
   Abort
   Abnormal termination: optimize
   Exit status: 134

This is very annoying, because it means you have to start over from the very
beginning, that is, you have to:

   cleanspec  (clean up files with the specific case name, "ellipsespec")
   cleangen   (clean up files with the generic case name, "ellipse")
   gentext    (use the ellipse.INP file as input)
   (cp struct.ellipse struct.new, that is, restore the correct version of "struct")
   (cp behavior.ellipse behavior.new, that is, restore the correct version of "behavior")
   genprograms 
   begin
   change     (to restore the optimum design you had before your unfortunate error in name))
   decide
   mainsetup
   optimize

So please try NOT to use the generic name when you really want the specific name!

************** NOTE ****************** NOTE ****************** NOTE ***************
ALSO: MAKE SURE ALWAYS TO SAVE COPIES OF struct.new AND	behavior.new THAT YOU HAVE
PUT A LOT OF EFFORT INTO CREATING. THE struct.new AND behavior.new FILES ARE
DESTROYED BY EXECUTION OF "gentext".
***********************************************************************************





------------ how to run the "equivellipse" case -------------------
The directory, /home/progs/genopt/case/torisph , contains the following:

-rw-r--r--   1 bush     bosor      34243 Mar  8  2009 bosdec.equivellipse
-rw-r--r--   1 bush     bosor    3305472 Jan 29 17:14 equivellipse.ppt
-rw-r--r--   1 bush     bosor      70539 Mar  8  2009 howto.stags.pdf
drwxr-xr-x   2 bush     bosor        512 Jan 31 04:19 miscellaneous
-rw-r--r--   1 bush     bosor     122529 Mar  8  2009 readme.equivellipse
-rw-r--r--   1 bush     bosor     737161 Jan 28 13:54 sdm50.report.pdf
drwxr-xr-x   2 bush     bosor       2560 Jan 28 13:03 sdm50pdf.report.appendix
drwxr-xr-x   2 bush     bosor       9216 Jan 27 13:54 sdm50pdf.report.figures
drwxr-xr-x   2 bush     bosor       3584 Jan 28 11:52 sdm50pdf.report.tables
-rw-r--r--   1 bush     bosor     241443 Mar  8  2009 struct.equivellipse

You may have to change the permissions of the 4 directories: 

drwxr-xr-x   2 bush     bosor        512 Jan 31 04:19 miscellaneous
drwxr-xr-x   2 bush     bosor       2560 Jan 28 13:03 sdm50pdf.report.appendix
drwxr-xr-x   2 bush     bosor       9216 Jan 27 13:54 sdm50pdf.report.figures
drwxr-xr-x   2 bush     bosor       3584 Jan 28 11:52 sdm50pdf.report.tables

in order to gain access. The "miscellaneous" directory contains a single
file caleed "sdm50.tar". You first have to "unpack" sdm50.tar by typing:

tar xvf sdm50.tar

Then you will have lots of files in the "miscellaneous" directory.

The following three files you will need in order to run the sample GENERIC 
case called "equivellipse":

equivellipse.INP   and   bosdec.equivellipse   and    struct.equivellipse

To run the sample case, "equivellipse", you must first copy the file, 
equivellipse.INP into the directory, /home/progs/genoptcase, as follows:

cp /home/progs/genopt/case/torisph/miscellaneous/equivellipse.INP 
                                     /home/progs/genoptcase/equivellipse.INP

Then you go to the directory, /home/progs/genoptcase, and execute "gentext":
genoptlog		(activate genopt commands)
gentext			(execute "gentext" using as input "equivellipse.INP"
                         and the GENERIC case name, "equivellipse".).

Next, you have to copy the two files, bosdec.equivellipse and struct.equivellipse
into their proper locations and with their correct names:

cp /home/progs/genopt/case/torisph/miscellaneous/bosdec.equivellipse
                                     /home/progs/bosdec/sources/bosdec.src

and, AFTER YOU HAVE EXECUTED "gentext" with use of equivellipse.INP as input:

cp /home/progs/genopt/case/torisph/miscellaneous/struct.equivellipse
                                     /home/progs/genoptcase/struct.new

Then, from the /home/progs/genoptcase directory, you execute "genprograms":

genprograms

Presumably "genprograms" will work, and you then can copy the sample input
data for the SPECIFIC case (called "eqellipse" here) into the directory,
/home/progs/genoptcase, as follows, for example:

cp /home/progs/genopt/case/torisph/miscellaneous/eqellipse.stiffened.BEG
                                      /home/progs/genoptcase/eqellipse.BEG
cp /home/progs/genopt/case/torisph/miscellaneous/eqellipse.stiffened.CHG
                                      /home/progs/genoptcase/eqellipse.CHG
cp /home/progs/genopt/case/torisph/miscellaneous/eqellipse.stiffened.DEC
                                      /home/progs/genoptcase/eqellipse.DEC
cp /home/progs/genopt/case/torisph/miscellaneous/eqellipse.stiffened.OPT
                                      /home/progs/genoptcase/eqellipse.OPT

Finally, you can execute "BEGIN", "CHANGE", "DECIDE", and "MAINSETUP"/"OPTIMIZE"
or "SUPEROPT" with, respectively, the input files, eqellipse.BEG, eqellipse.CHG,
eqellipse.DEC, and eqellipse.OPT


NOTE: On the hp700 UNIX workstation the .../bosdec/sources directory should
contain the following files:

-rw-r--r--   1 bush       bosor       638843 Mar  7 07:37 addbosor4.src
-rw-r--r--   1 bush       bosor        83498 Mar  7 07:37 b4plot.src
-rw-r--r--   1 bush       bosor        90261 Mar  7 07:37 b4util.src
-rw-r--r--   1 bush       bosor        22723 Mar  7 07:43 bio.c
-rw-r-----   1 bush       bosor        22693 Mar  7 07:44 bio_hp700.c
-rw-r--r--   1 bush       bosor        11056 Mar  7 07:44 bio_hp700.o
-rw-r--r--   1 bush       bosor        34243 Mar  7 07:49 bosdec.src
-rw-r--r--   1 bush       bosor        14592 Mar  7 07:44 gasp.F
-rw-r--r--   1 bush       bosor        28044 Mar  7 07:45 gasp_hp700.o
-rw-r--r--   1 bush       bosor         6310 Mar  7 07:38 opngen.src
-rw-r--r--   1 bush       bosor        22440 Mar  7 07:37 prompter.src
-rw-r--r--   1 bush       bosor        13426 Mar  7 07:38 resetup.src

If the execution of "genprograms" is successful, you will have (on the hp700
UNIX workstation) the following new files in the "genoptcase" directory:

Here is a list of all your newly created executables:
-rwxrwxrwx   1 bush       bosor       188552 Mar  7 07:56 autochange.hp700
-rwxrwxrwx   1 bush       bosor       503312 Mar  7 07:55 begin.hp700
-rwxrwxrwx   1 bush       bosor       270504 Mar  7 07:56 change.hp700
-rwxrwxrwx   1 bush       bosor       297920 Mar  7 07:56 chooseplot.hp700
-rwxrwxrwx   1 bush       bosor       313808 Mar  7 07:56 decide.hp700
-rwxrwxrwx   1 bush       bosor       207776 Mar  7 07:56 mainsetup.hp700
-rwxrwxrwx   1 bush       bosor      3415704 Mar  7 07:56 optimize.hp700
-rwxrwxrwx   1 bush       bosor       258160 Mar  7 07:56 store.hp700

---------------------------------------
Here follows a run stream for "building an archive" containing BIGBOSOR4,
BOSOR4, BOSOR5, PANDA2 and GENOPT:

Go to a directory that is EMPTY and type the command:

~bushnell/bin/build_archive  (execute "build_archive")

"build_archive" is interactive, approximately as follows:

give the name of the parent directory   (build_archive provides a prompt like this)
~bushnell				(your response to buile_archive's prompt)
Which programs do you want to include in the archive?	(build_archive prompts)
bigbosor4 bosor4 bosor5 panda2 genopt			(you respond)
for what workstations?					(build_archive prompts)
linux hp700						(you respond)


This is what actually appears on your screen when you
execute ~bushnell/bin/build_archive:

----------------- begin build_archive execution ---------------------
Please enter the name of the parent directory of D. Bushnell's programs.
Enter return if directory is /user/bush
Enter directory: ~bushnell

build_archive takes all of David Bushnell's programs (BOSOR4, BOSOR5,
PANDA, etc.) and creates a temporary directory structure as it should
appear for distribution to the general public on a UNIX file system.
The following items are distributed:

       1)  All of the latest sources files
       2)  All necessary shell programs for normal program operation
       3)  All documentation
       4)  Sample cases
       5)  Makefiles and Executables for SUN-3, SUN-4, and/or DECstation
           3100/5000 environments as requested.
       6)  Library and Object file directories for each of the three
           computing environments.  These directories are empty when
           installed, but they are needed by the makefile when
           re-making the program.

   In addition to D. Bushnell's programs, three general-purpose public
  domain utility programs are included.  These utilities are used by
  Bushnell's programs.

       1)  xgraph - an x-y plotting program for X-windows
       2)  plotps - an x-y plotting program that produces PostScript
                    output.  Uses same syntax as xgraph.
       3)  gawk   - a full-featured version of the more commonly known
                    awk text-processing interpreter.

  The source files for these utilities are included in their own
  directories, but the executable versions are placed in the ~/bin
  directory.

  Last, but not least, an install script is included at the top level.
  This program is to be run by the client on his/her own machine after
  D. Bushnell's programs have been successfully de-archived.

  A word of caution:  You must have at least 600 Mbytes of free disk space
  available in your working directory in order to archive all of the
  programs in one sitting.

Please enter a list of programs you wish to archive.  If you do not wish
to archive one or more of the programs, just press return.  In this case,
all of the utilities will be archived, but none of the programs.
Enter from the list below.

        bosor4, bigbosor4, bosor5, panda, panda2, & genopt

Enter program list: bigbosor4 bosor4 bosor5 panda2 genopt

Please enter a list of machines you wish your archive to support.  If
you do not wish to support any machines (i.e. you do not want to archive
executables), just press return.  PLEASE NOTE THAT NOT ALL PROGRAMS ARE
SUPPORTED ON ALL MACHINES!

Enter from the list below.

  sun3 - for SUN-3 workstation
  sun4 - for SUN SPARCstation running Sun OS 4.x
   sol - for SUN SPARCstation running Sun OS 5.x (a.k.a. Solaris)
   dec - for DECstation 3100 or 5000
 alpha - for DEC Alpha workstation
 linux - for LINUX operating systems.
  cray - for CRAY ?MP mainframe
   sgi - for Silicon Graphics IRIS workstations
  sgi8 - for Silicon Graphics IRIX 6.5 workstations
 hp700 - for HP 9000/700 workstation
  rs6k - for IBM RS-6000 workstation

Enter machine list: linux hp700

Copy install to /user/bush/temp2/
Copy xgraph/ to /user/bush/temp2/
Copy plotps/ to /user/bush/temp2/
No match
Copy gawk/ to /user/bush/temp2/
Make directory /user/bush/temp2/util/.
   Copy relevant files to /user/bush/temp2/util/.
Make directory /user/bush/temp2/bin/.
   Copy relevant files to /user/bush/temp2/bin/.
Remove directory bigbosor4.
Make bigbosor4 directory.
Archive bigbosor4.
   Copy case/ and doc/ to bigbosor4/
   Make directories execute, bin, sources, libraries.*, and objects.*
   Copy relevant executables and makefiles to bigbosor4/execute.
   Copy relevant shell programs to bigbosor4/bin.
   Copy relevant sources to bigbosor4/sources.
Remove directory bosor4.
Make bosor4 directory.
Archive bosor4.
   Copy case/ and doc/ to bosor4/
   Make directories execute, bin, sources, libraries.*, and objects.*
   Copy relevant executables and makefiles to bosor4/execute.
No match
   Copy relevant shell programs to bosor4/bin.
   Copy relevant sources to bosor4/sources.
Remove directory bosor5.
Make bosor5 directory.
Archive bosor5.
   Copy case/ and doc/ to bosor5/
   Make directories execute, bin, sources, libraries.*, and objects.*
   Copy relevant executables and makefiles to bosor5/execute.
   Copy relevant shell programs to bosor5/bin.
   Copy relevant sources to bosor5/sources.
Remove directory panda2.
Make panda2 directory.
Archive panda2.
   Copy case/ and doc/ to panda2/
   Make directories execute, bin, sources, libraries.*, and objects.*
   Copy relevant executables and makefiles to panda2/execute.
   Copy relevant shell programs to panda2/bin.
   Copy relevant sources to panda2/sources.
mkdir: Failed to make directory "bosor4"; File exists
mkdir: Failed to make directory "sources"; File exists
Remove directory genopt.
Make genopt directory.
Archive genopt.
   Copy case/ and doc/ to genopt/
   Make directories execute, bin, sources, libraries.*, and objects.*
    Program is genopt.  Archive all libraries.linux/*.a files.
    Program is genopt.  Archive all objects.linux/*.a files.
    Program is genopt.  Archive all libraries.hp700/*.a files.
    Program is genopt.  Archive all objects.hp700/*.a files.
   Copy relevant executables and makefiles to genopt/execute.
   Copy relevant shell programs to genopt/bin.
   Copy relevant sources to genopt/sources.

You have now finished creating an image of the actual archive as it will
appear on the client's machine.  Now copy the directories you have
created to tape or to a file as appropriate using tar or a suitable
archive utility.

If you are creating a file archive for ftp-ing or for writing a disc,
give the following command:

       tar cvfl {choose_a_name}.tar *

In order to install and execute at your facility, do the following:

 1. unpack the tar 
    tar xvf {name_you_chose}.tar

 2. execute install from the parent directory:
    <path-to-parent-directory> install

 3. source <path-to-parent-directory>/bin/initialize
---------------- end of build_archive execution ----------------


When "build_archive" is finished, you have the following
directory structure:

drwxr-xr-x  11 bush     bosor        512 Mar  7  2009 bigbosor4/
drwxr-xr-x   2 bush     bosor        512 Mar  7  2009 bin/
drwxr-xr-x  11 bush     bosor        512 Mar  7  2009 bosor4/
drwxr-xr-x  11 bush     bosor        512 Mar  7  2009 bosor5/
drwxr-xr-x   9 bush     bosor       1536 Jun 15  1997 gawk/
drwxr-xr-x  11 bush     bosor        512 Mar  7  2009 genopt/
-rw-rw----   1 bush     bosor       4035 Dec  4  2006 install
drwxr-xr-x  11 bush     bosor        512 Mar  7  2009 panda2/
drwxr-xr-x   2 bush     bosor       1024 Mar  7  2009 plotps/
drwxr-xr-x   2 bush     bosor       3072 Mar  7  2009 util/
drwxr-xr-x   4 bush     bosor       1536 Oct  7  1993 xgraph/

Next, you want to generate a "tar" file containing all the above.
Let's assume you name the "tar" file "bigb4b4b5p2g.linuxhp700.tar":

tar cvfl bigb4b4b5p2g.linuxhp700.tar

The "tar" command above generates the huge file:

-rw-r--r--   1 bush     bosor    578322944 Mar  7  2009 bigb4b4b5p2g.linuxhp700.tar

This huge "tar" file is what the customer starts with.

----------------------------------------



Here follows a summary runstream for installing BIGBOSOR4, BOSOR4, BOSOR5,
PANDA2, and GENOPT on your workstation.

1. put the huge "tar" file, bigb4b4b5p2g.linuxhp700.tar , on the directory
that you want to be the PARENT directory of BIGBOSOR4, BOSOR4, BOSOR5,
PANDA2, and GENOPT. Make sure that PARENT directory is EMPTY!
Then type the command:

tar xvf bigb4b4b5p2g.linuxhp700.tar

You end up with the PARENT directory containing the following::

-rw-r--r--   1 bush     bosor    578322944 Mar  7  2009 bigb4b4b5p2g.linuxhp700.tar
drwxr-xr-x  11 bush     bosor        512 Mar  7  2009 bigbosor4/
drwxr-xr-x   2 bush     bosor        512 Mar  7  2009 bin/
drwxr-xr-x  11 bush     bosor        512 Mar  7  2009 bosor4/
drwxr-xr-x  11 bush     bosor        512 Mar  7  2009 bosor5/
drwxr-xr-x   9 bush     bosor       1536 Jun 15  1997 gawk/
drwxr-xr-x  11 bush     bosor        512 Mar  7  2009 genopt/
-rw-rw----   1 bush     bosor       4035 Dec  4  2006 install
drwxr-xr-x  11 bush     bosor        512 Mar  7  2009 panda2/
drwxr-xr-x   2 bush     bosor       1024 Mar  7  2009 plotps/
drwxr-xr-x   2 bush     bosor       3072 Mar  7  2009 util/
drwxr-xr-x   4 bush     bosor       1536 Oct  7  1993 xgraph/

You can delete the huge file, bigb4b4b5p2g.linuxhp700.tar, if you
have retained a copy of it (just in case you may need it in the future)..


2. Next, you must make "install" executable by typing:

chmod 777 install


3. Next, you "install" the programs by executing "install":

install			(you may need to specify the path to "install")

(In the particular case run here, "install" writes the following stuff
to the screen:)

--------- begin stuff written by "install" ----------------
new parent directory is: /home/progs/work6
Substitute new parent directory for /user/bushnell
   in bin/initialize
/home/progs/work6/bigbosor4 /home/progs/work6
/home/progs/work6/bigbosor4/execute /home/progs/work6/bigbosor4 /home/progs/work6
/home/progs/work6/bigbosor4 /home/progs/work6
/home/progs/work6
/home/progs/work6/bosor4 /home/progs/work6
/home/progs/work6/bosor4/execute /home/progs/work6/bosor4 /home/progs/work6
/home/progs/work6/bosor4 /home/progs/work6
/home/progs/work6
/home/progs/work6/bosor5 /home/progs/work6
/home/progs/work6/bosor5/execute /home/progs/work6/bosor5 /home/progs/work6
/home/progs/work6/bosor5 /home/progs/work6
/home/progs/work6
/home/progs/work6/panda2 /home/progs/work6
/home/progs/work6/panda2/execute /home/progs/work6/panda2 /home/progs/work6
/home/progs/work6/panda2 /home/progs/work6
/home/progs/work6
/home/progs/work6/genopt /home/progs/work6
/home/progs/work6/genopt/execute /home/progs/work6/genopt /home/progs/work6
/home/progs/work6/genopt /home/progs/work6
/home/progs/work6
Make directory temp/
Set modes for files and directories
   top level
   inside bin
   inside util
   inside bigbosor4
      inside case
      inside doc
      inside sources
      inside bin
      inside execute
   inside bosor4
      inside case
      inside doc
      inside sources
      inside bin
      inside execute
   inside bosor5
      inside case
      inside doc
      inside sources
      inside bin
      inside execute
chmod: No match.
   inside panda2
      inside case
chmod: No match.
      inside doc
      inside sources
      inside bin
      inside execute
   inside genopt
      inside case
      inside doc
      inside sources
      inside bin
      inside execute

Installation complete.  Instruct users of D. Bushnell's programs
to type the following command (or insert the following command in
their .login file):

    source /home/progs/work6/bin/initialize	(the path to the
						PARENT directory in this case is
						/home/progs/work6)

This command sets up some aliases and environment variables necessary
to run D. Bushnell's programs.
--------- end of stuff written by "install" ----------------


4. Next, type the following command:

source <path-to-PARENT-directory>/bin/initialize

This command sets up some aliases and environment variables necessary
to run D. Bushnell's programs.


5. BIGBOSOR4, BOSOR4, BOSOR5, PANDA2, and GENOPT should now "work"
at your facility.
-------------------------------------------------------------


Summary of stuff to do to set up a case for GENOPT:

1. Go to the PARENT directory of BIGBOSOR4, BOSOR4, BOSOR5,
PANDA2, and GENOPT. If the bosdec and genoptcase directories
do not exist, type the following:

mkdir genoptcase
mkdir bosdec
cd bosdec
mkdir sources
mkdir objects.<MACHINE>		(<MACHINE> = "linux" or "hp700")
cd sources
cp /home/progs/work6/genopt/case/sources/addbosor4.src .
cp /home/progs/work6/genopt/case/sources/b4plot.src .
cp /home/progs/work6/genopt/case/sources/b4util.src .
cp /home/progs/work6/genopt/case/sources/opngen.src .
cp /home/progs/work6/genopt/case/sources/prompter.src .
cp /home/progs/work6/genopt/case/sources/resetup.src .

If <MACHINE> = linux, then type the following:
cp /home/progs/work6/genopt/case/sources/bio.c .
cp /home/progs/work6/genopt/case/sources/bio_linux.c .
cp /home/progs/work6/genopt/case/sources/bio_linux.o .
cp /home/progs/work6/genopt/case/sources/gasp.F .
cp /home/progs/work6/genopt/case/sources/gasp_linux.o .

If <MACHINE> = hp700, then type the following:
cd /home/progs/work6/genopt/case/sources
chmod 777 othergasps
cd /home/progs/work6/bosdec/sources
cp /home/progs/work6/genopt/case/sources/othergasps/bio.c .
cp /home/progs/work6/genopt/case/sources/othergasps/bio_hp700.c .
cp /home/progs/work6/genopt/case/sources/othergasps/bio_hp700.o .
cp /home/progs/work6/genopt/case/sources/othergasps/gasp_hp700.f gasp.F
cp /home/progs/work6/genopt/case/sources/othergasps/gasp_hp700.o .

Continue...
cd /home/progs/work6/genopt/case/torisph
ls -al		(to see what files/directories are in "torisph"
		 All the directories should be made executable,
		 as follows:)
chmod 777 miscellaneous
chmod 777 sdm50pdf.report.appendix
chmod 777 sdm50pdf.report.figures
chmod 777 sdm50pdf.report.tables

cd miscellaneous
ls -al		(to see what is there. If only the file
		 sdm50.tar is there, do the following:)
tar xvf sdm50.tar (this will generate lots of files. You
                   will need several of them, as below.)

cd /home/progs/work6/bosdec/sources
cp /home/progs/work6/genopt/case/torisph/miscellaneous/bosdec.equivellipse bosdec.src

If <MACHINE> = linux, you should now have the following files
in /home/progs/work6/bosdec/sources:

-rw-r--r--  1 bush bush 638843 Mar  7 12:17 addbosor4.src
-rw-r--r--  1 bush bush  83498 Mar  7 12:18 b4plot.src
-rw-r--r--  1 bush bush  90261 Mar  7 12:18 b4util.src
-rw-r--r--  1 bush bush  22723 Mar  7 12:18 bio.c
-rw-r--r--  1 bush bush  31175 Mar  7 12:18 bio_linux.c
-rw-r--r--  1 bush bush  37152 Mar  7 12:19 bio_linux.o
-rw-r--r--  1 bush bush  34243 Mar  7 12:16 bosdec.src
-rw-r--r--  1 bush bush  15650 Mar  7 12:19 gasp.F
-rw-r--r--  1 bush bush  18364 Mar  7 12:19 gasp_linux.o
-rw-r--r--  1 bush bush   6310 Mar  7 12:18 opngen.src
-rw-r--r--  1 bush bush  22440 Mar  7 12:18 prompter.src
-rw-r--r--  1 bush bush  13426 Mar  7 12:18 resetup.src


Next, if you want to run the GENERIC case called "equivellipse"
followed by the SPECIFIC case called "eqellipse" you do the following:

cd /home/progs/work6/genoptcase
ls -al			(You want to see what's there, probably nothing
                         at first.)
cp /home/progs/work6/genopt/case/torisph/miscellaneous/equivellipse.INP .
cp /home/progs/work6/genopt/case/torisph/miscellaneous/struct.equivellipse .
cp /home/progs/work6/genopt/case/torisph/miscellaneous/eqellipse.stiffened.BEG eqellipse.BEG
cp /home/progs/work6/genopt/case/torisph/miscellaneous/eqellipse.stiffened.CHB eqellipse.CHG
cp /home/progs/work6/genopt/case/torisph/miscellaneous/eqellipse.stiffened.DEC eqellipse.DEC
cp /home/progs/work6/genopt/case/torisph/miscellaneous/eqellipse.stiffened.OPT eqellipse.OPT

ls -al			(to see what's there now)

-rw-r--r--   1 bush bush  10302 Mar  7 12:25 eqellipse.BEG
-rw-r--r--   1 bush bush   5295 Mar  7 12:26 eqellipse.CHG
-rw-r--r--   1 bush bush   6298 Mar  7 12:26 eqellipse.DEC
-rw-r--r--   1 bush bush    911 Mar  7 12:27 eqellipse.OPT
-rw-r--r--   1 bush bush  37724 Mar  7 12:24 equivellipse.INP
-rw-r--r--   1 bush bush 241443 Mar  7 12:25 struct.equivellipse


Now start running GENOPT. First deal with the GENERIC case,
which is called "equivellipse", then with the SPECIFIC case,
which is called "eqellipse".

genoptlog		(activate the GENOPT command set)

The command, genoptlog, writes the following to the screen:

GENOPT commands have been activated.

  gentext      GENOPT user generates a prompt file.
  genprograms  GENOPT user generates (makes) executables:
               begin, decide, mainsetup, optimize,
               change, chooseplot, and diplot.
  begin        End user provides starting data.
  decide       End user chooses decision variables, bounds,
               linked variables, and inequality constraints.
  mainsetup    End user sets up strategy parameters.
  optimize     End user performs optimization.
  change       End user changes some parameters.
  autochange   New values for decision variables randomly
  superopt     End user find global optimum (autochange/optimize)...
  chooseplot   End user chooses which variable to plot vs.
               iterations.
  diplot       End user plots variables vs. iterations.
  insert       GENOPT user adds parameters to the problem.
  cleangen     GENOPT user cleans up GENeric case files.
  cleanspec    End user cleans up SPECific case files.

Please consult the following sources for more about GENOPT:
  1.  genopt.story, howto.run, and genopt.news (in the
      .../genopt/doc directory)
  2.  Sample cases, plate.cas and panel.cas (in the
      .../genopt/case directory)
  3.  NAME.DEF file, where NAME is the generic case name.
  4.  GENOPT.HLP file   (Type "helpg".)

First, type the command, "gentext". Use the file, equivellipse.INP
as input, rather than doing "gentext" interactively:

gentext
ENTER THE GENERIC CASE NAME: equivellipse
ARE YOU CORRECTING, ADDING TO, OR USING equivellipse.INP ? (TYPE y  OR  n): y

(lots of stuff is written to the screen. Inspect the file, equivellipse.DEF).

cp struct.equivellipse struct.new
cp: overwrite `struct.new'? y

genprograms
B (background) or F (foreground):f

(genprograms writes lots of stuff to the screen.
 Most of this is included in the file, usermake.log).

If genprograms finishes successfully, you see
the following on your screen:

---------- genprograms writes the following -----------
Congratulations!  Your code compiled successfully.  You should
now check to make sure that you get correct results from a
simple test case with a known answer before attempting a more
complicated case.

Here is a list of all your newly created executables:
-rwxr-xr-x  1 bush bush 91481 Mar  7 12:36 autochange.linux
-rwxr-xr-x  1 bush bush 266203 Mar  7 12:36 begin.linux
-rwxr-xr-x  1 bush bush 148697 Mar  7 12:36 change.linux
-rwxr-xr-x  1 bush bush 166212 Mar  7 12:36 chooseplot.linux
-rwxr-xr-x  1 bush bush 170603 Mar  7 12:36 decide.linux
-rwxr-xr-x  1 bush bush 109133 Mar  7 12:36 mainsetup.linux
-rwxr-xr-x  1 bush bush 2027392 Mar  7 12:36 optimize.linux
-rwxr-xr-x  1 bush bush 133615 Mar  7 12:36 store.linux

Next, type the command BEGIN to input data for a new case.
----------- end of what genprogram writes to screen -------------

Next, you execute "BEGIN" with eqellipse.BEG as input, followed by
"CHANGE" with eqellipse.CHG as input, followed by
"DECIDE" with eqellipse.DEC as input, followed by
"MAINSETUP" with eqellipse.OPT as input, followed by
"OPTIMIZE" or "SUPEROPT".

You will probably want to edit eqellipse.OPT in order to run
a "fixed" design, that is, ITYPE = 2, instead of ITYPE = 1
before you run OPTIMIZE.

When OPTIMIZE is finished, check the eqellipse.OPM file,
especially the margins, and compare them with the margins
listed in the file:
/home/progs/work6/genopt/case/torisph/miscellaneous/eqellipse.stiffened.opm4


Then type the following commands:

cleanspec
Enter specific case name: eqellipse

cleangen
Enter generic case name: equivellipse


Next, run BIGBOSOR4 corresponding to one of the eqellipse.ALL** files. You
have the following eqellipse.ALL** files to choose from:

-rw-r--r--   1 bush bush  26078 Mar  7 12:43 eqellipse.ALL1
-rw-r--r--   1 bush bush  31243 Mar  7 12:43 eqellipse.ALL2N
-rw-r--r--   1 bush bush  31243 Mar  7 12:43 eqellipse.ALL2P
-rw-r--r--   1 bush bush  31243 Mar  7 12:43 eqellipse.ALL4N
-rw-r--r--   1 bush bush  31243 Mar  7 12:43 eqellipse.ALL4P
-rw-r--r--   1 bush bush  31245 Mar  7 12:43 eqellipse.ALL6N
-rw-r--r--   1 bush bush  31245 Mar  7 12:43 eqellipse.ALL6P
-rw-r--r--   1 bush bush  31245 Mar  7 12:43 eqellipse.ALL7N
-rw-r--r--   1 bush bush  31245 Mar  7 12:43 eqellipse.ALL7P
-rw-r--r--   1 bush bush  31326 Mar  7 12:43 eqellipse.ALL8N
-rw-r--r--   1 bush bush  31326 Mar  7 12:43 eqellipse.ALL8P
-rw-r--r--   1 bush bush  31326 Mar  7 12:43 eqellipse.ALL9N
-rw-r--r--   1 bush bush  31326 Mar  7 12:43 eqellipse.ALL9P

These are all valid input files for BIGBOSOR4. They correspond
to BIGBOSOR4 input for the several analyses conducted in
SUBROUTINE STRUCT, as desribed in the "sdm50pdf.report.****"
directories located in /home/progs/work6/genopt/case/torisph .


To run BIGBOSOR4, type the following:

bigbosor4log		(activate the BIGBOSOR4 command set)

(The following appears on your screen):

BIGBOSOR4 COMMANDS HAVE BEEN ACTIVATED.

The BIGBOSOR4 commands, in the general order in which
you would probably use them, are:

help4           (get information on BOSOR4.)
input           (you provide segment-by-seg. input)
assemble        (concatenates segment data files)
bigbosorall     (batch run of pre, main, post proc.)
bosorplot       (batch run for generating plot files)
resetup         (input for restart run, same model)
bigrestart              (batch run of main & postprocessors)
cleanup         (delete all except for .DOC file)
getsegs         (generate segment files from .DOC)
modify          (modify a segment file)

Please consult the following sources for more
information about BOSOR4:

1.  help4 file  (type help4)
2.  bosor4.story        (good idea to print this file)
3.  bosor4.news (news of BOSOR4 updates)
4.  Documents listed under HELP4 OVERVIEW DOC
----------- end of what bigbosor4log writes to screen -----------

Next, type the following:

cp eqellipse.ALL1 eqellipse.ALL
bigbosorall			(execute BIGBOSOR4)

(bigbosorall produces an output file called "eqellipse.OUT".
Search that file for the string, "EIGENVALUE(". You will see
the following output):

-----------part of eqellipse.OUT file ---------------
 BUCKLING LOADS FOLLOW
 CIRCUMFERENTIAL WAVE NUMBER, N =       0

 EIGENVALUES =
    2.83857E+03    3.52617E+03    4.19022E+03    4.37512E+03    5.81409E+03    6.98523E+03    9.06746E+03


 EIGENVALUES =
    1.08829E+04    1.24395E+04    1.36177E+04

 **** CRITICAL EIGENVALUE AND WAVENUMBER ****
 EIGCRT=  2.8386E+03; NO. OF CIRC. WAVES, NWVCRT=    0
 ****************************************************

 ***** EIGENVALUES AND MODE SHAPES *****
  EIGENVALUE(CIRC. WAVES)
 =======================================
    2.8386E+03(   0)
 =======================================
------------- end of part of eqellipse.OUT file -------------


Want to see plots? Type the following:

bosorplot
Please enter the BIGBOSOR4 case name: eqellipse
Do you want to use Xgraph or create a PostScript file? (Choose X or P) p

(You will see the following on your screen):

One, maybe Two moments please...

Text file(s) have been created containing plot data.  The names of the
files explain to a greater or lesser extent what the data represent.
Some plot files contain data for more than one plot.
1)      eqellipse..EIGENMODE10--N_0
2)      eqellipse..EIGENMODE_1--N_0
3)      eqellipse..EIGENMODE_2--N_0
4)      eqellipse..EIGENMODE_3--N_0
5)      eqellipse..EIGENMODE_4--N_0
6)      eqellipse..EIGENMODE_5--N_0
7)      eqellipse..EIGENMODE_6--N_0
8)      eqellipse..EIGENMODE_7--N_0
9)      eqellipse..EIGENMODE_8--N_0
10)     eqellipse..EIGENMODE_9--N_0
11)     eqellipse..R,Z_EIGENMODE10--N_0
12)     eqellipse..R,Z_EIGENMODE_1--N_0
13)     eqellipse..R,Z_EIGENMODE_2--N_0
14)     eqellipse..R,Z_EIGENMODE_3--N_0
15)     eqellipse..R,Z_EIGENMODE_4--N_0
16)     eqellipse..R,Z_EIGENMODE_5--N_0
17)     eqellipse..R,Z_EIGENMODE_6--N_0
18)     eqellipse..R,Z_EIGENMODE_7--N_0
19)     eqellipse..R,Z_EIGENMODE_8--N_0
20)     eqellipse..R,Z_EIGENMODE_9--N_0
21)     eqellipse..R,Z_RingLocation
CR)     to QUIT
Please choose the number of the file you wish to plot 12

(hit ENTER)
(hit ENTER)

(plot the postscript file called "metafile.ps").

(Next, clean up the BIGBOSOR4 files):

cleanup

This procedure clears out old files and replaces
the 'NAME'.ALL file with the most recent 'NAME'.DOC
file.

WARNING:  DO NOT USE THIS PROCEDURE UNLESS YOU ARE
          SURE THAT YOU HAVE A COMPLETE, GOOD
          'NAME'.DOC FILE.

Enter case name: eqellipse

("cleanup" produces completely annotated eqellipse.ALL
and eqellipse.DOC files):

-rw-r--r--  1 bush bush 77481 Mar  7 13:06 eqellipse.ALL
-rw-r--r--  1 bush bush 77481 Mar  7 12:59 eqellipse.DOC

(The eqellipse.ALL and eqellipse.DOC files are identical.)
--------------- end of how to run "equivellipse" ---------------
