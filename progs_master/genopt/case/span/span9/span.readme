
18 May, 2011, Revised May 16, 2013, re-revised June 28, 2013,
re-re-revised July 11, 2013

MINIMUM WEIGHT OF AXIALLY COMPRESSED 100 x 100 INCH
PRISMATIC "CORRUGATED" PANEL 

See the file, span.runstream for a sample run stream
to optimize a typical configuration and to evaluate
the optimized design with the use of STAGS, a general-
purpose finite element computer program and to obtain
plots of the various buckling modes from BIGBOSOR4.

The panel consists of a number of cylindrical segments
joined in series generator-to-generator, that is, the panel
is a prismatic structure and is modeled as such by BIGBOSOR4.
The panel has a single layer of isotropic material.The
thickness is uniform in each major segment but can
differ from major segment to major segment.

The panel is loaded in uniform axial end shortening,
that is, the applied axial resultant Nx (e.g. lb/in)
is proportional to the thickness. [The input for
loading is the TOTAL axial load (e.g. lb).]

See the plot in the file, fold94.startingdesign.png, for
an end view of the starting design of half the width of
the panel. Plots of this type are obtained from BIGBOSOR4.

See the plot, fold94.optimized.stagsmodel.png for a view of
a STAGS model of the optimized panel. See the plot,
fold94.optimized.genbuck.stags.png for a view of the
general buckling mode of the panel that has previously
been optimized by GENOPT. (STAGS is not used in the
optimization loop.)

Please see the following AIAA paper for a full explanation
of the analysis of true prismatic shells by BIGBOSOR4:

David Bushnell and Robert P. Thornburgh, "Use of GENOPT
and BIGBOSOR4 to optimize weld lands in axially compressed
stiffened cylindrical shells and evaluation of the
optimized designs by STAGS", AIAA Paper AIAA-2010-2927,
AIAA Structures, Structural Dynamics, and Materials
Meeting, Orlando, FL, April, 2010.

Other appropriate references are cited in the span9.PRO
file, parts of which are listed below.

NOTE: "span9" is the generic name for the class of
configurations to be optimized by GENOPT.

Here there are two specific names of configurations
to be optimized:

1. fold94 = "corrugated" panel with 4 cylindrical segments
            over the half-width, WIDTH/2, of the panel and
            with no sub-segments.

2. fold94S= same as fold94 except that there are sub-segments
            in each of the 4 major segments over WIDTH/2.

-----------------------------------------------------
July 11, 2013 addition:
As of November 26, 2013, the following "span" files exist:
-----------------------------------------------------------
-rw-r--r--  1 bush bush 14342656 Nov 26 05:58 2014.ppt
-rw-r--r--  1 bush bush 22702144 Nov 26 05:59 2014allfigures.pdf
-rw-r--r--  1 bush bush    95697 Nov 26 05:59 2014alltables.pdf
-rw-r--r--  1 bush bush   441726 Nov 26 05:59 2014papertext.pdf
-rw-r--r--  1 bush bush    93935 Nov 13 02:22 behavior.span9
-rw-rw-r--  1 bush bush    94055 Nov 13 02:23 behavior.span9.huge
-rw-rw-r--  1 bush bush    92272 Jul 11 16:03 behavior.spanexp
-rw-r--r--  1 bush bush    48764 Sep 11 07:41 bosdec.span9
-rw-r--r--  1 bush bush    70832 Nov 13 03:56 bosdec.span9.hugecyl
-rw-r--r--  1 bush bush    70982 Nov 13 03:59 bosdec.span9.hugecyl.huge
-rw-r--r--  1 bush bush    49209 Sep 11 07:41 bosdec.span9.leftedge
-rw-r--r--  1 bush bush    99271 Nov 23 21:09 bosdec.span9.smoothing
-rw-r--r--  1 bush bush    99417 Nov 23 21:10 bosdec.span9.smoothing.huge
-rw-r--r--  1 bush bush    23218 Jul 11 16:07 bosdec.spanexp
-rw-rw-r--  1 bush bush   174080 May 25  2013 fold91.tar
-rw-rw-r--  1 bush bush   245760 Sep 16 06:13 fold910udwnu.tar
-rw-rw-r--  1 bush bush   122880 Sep 16 06:26 fold910updwn.tar
-rw-rw-r--  1 bush bush   133120 Sep  5 00:28 fold911udwnu.tar
-rw-rw-r--  1 bush bush   286720 Sep 16 06:35 fold911updwn.tar
-rw-rw-r--  1 bush bush    30720 Sep 10 14:15 fold912udwnu.tar
-rw-rw-r--  1 bush bush   143360 Sep 10 14:14 fold912updwn.tar
-rw-rw-r--  1 bush bush   102400 Sep  5 02:36 fold913udwnu.tar
-rw-rw-r--  1 bush bush  5376000 Sep 23 17:30 fold913updwn.tar
-rw-rw-r--  1 bush bush   849920 Sep 10 01:40 fold914updwn.tar
-rw-rw-r--  1 bush bush  1075200 Aug  1 15:36 fold916.tar
-rw-rw-r--  1 bush bush   901120 Jun 19 12:03 fold916supdn.tar
-rw-rw-r--  1 bush bush   573440 Sep  5 12:08 fold916ud.tar
-rw-rw-r--  1 bush bush   225280 Sep  5 01:40 fold916udwnu.tar
-rw-rw-r--  1 bush bush   133120 Sep 16 06:43 fold916updwn.tar
-rw-rw-r--  1 bush bush    61440 May 24  2013 fold92.tar
-rw-rw-r--  1 bush bush   307200 May 24  2013 fold93.tar
-rw-rw-r--  1 bush bush    61440 May 24  2013 fold94.tar
-rw-rw-r--  1 bush bush    92160 Sep 16 06:47 fold94S.tar
-rw-rw-r--  1 bush bush   266240 Jun  4 02:50 fold94supdwn.tar
-rw-rw-r--  1 bush bush    71680 Sep 27 13:29 fold94updown.tar
-rw-rw-r--  1 bush bush    61440 Sep 27 08:01 fold94updwnu.tar
-rw-rw-r--  1 bush bush   307200 May 24  2013 fold95.tar
-rw-rw-r--  1 bush bush    40960 Sep 27 04:39 fold95updown.tar
-rw-rw-r--  1 bush bush    92160 Sep 27 07:11 fold95updwnu.tar
-rw-rw-r--  1 bush bush   808960 May 24  2013 fold96.tar
-rw-rw-r--  1 bush bush   194560 Sep 10 14:09 fold96updown.tar
-rw-rw-r--  1 bush bush    40960 Sep  4 17:13 fold96updwnu.tar
-rw-rw-r--  1 bush bush   686080 May 24  2013 fold97.tar
-rw-rw-r--  1 bush bush   266240 Nov 15 04:47 fold97updown.tar
-rw-rw-r--  1 bush bush    20480 Sep 27 15:49 fold97updwnu.tar
-rw-rw-r--  1 bush bush  1269760 May 27  2013 fold98.tar
-rw-rw-r--  1 bush bush   471040 Jun 27 15:08 fold98alt.tar
-rw-rw-r--  1 bush bush  1157120 Sep 13 05:41 fold98supdwn.tar
-rw-rw-r--  1 bush bush   184320 Sep 11 15:10 fold98updown.tar
-rw-rw-r--  1 bush bush   634880 Sep 16 06:31 fold98updwnu.tar
-rw-rw-r--  1 bush bush   163840 Sep  5 04:40 fold99updwnu.tar
-rw-rw-r--  1 bush bush     2002 Sep 30 16:51 folduniform.input
-rw-rw-r--  1 bush bush    18167 Nov 15 05:06 folduniform.ps
-rw-rw-r--  1 bush bush     1063 Nov 15 04:40 folduniform2.input
-rw-rw-r--  1 bush bush    14696 Nov 15 05:07 folduniform2.ps
-rw-rw-r--  1 bush bush     1368 Nov 15 04:40 folduniform3.input
-rw-rw-r--  1 bush bush    15718 Nov 15 05:08 folduniform3.ps
-rw-rw-r--  1 bush bush    83066 May 15  2013 general.info.tar.gz
-rw-rw-r--  1 bush bush  4945920 Sep 24 12:05 isotruss2.tar
-rw-rw-r--  1 bush bush   849920 Nov  9 20:21 nar294updown.tar
-rw-rw-r--  1 bush bush   788480 Nov 15 07:15 narw91updown.tar
-rw-rw-r--  1 bush bush  1228800 Nov 12 12:11 narw91wide10.tar
-rw-rw-r--  1 bush bush    71680 Nov 13 01:32 narw91wide14.tar
-rw-rw-r--  1 bush bush   358400 Nov  9 01:32 narw92updown.tar
-rw-rw-r--  1 bush bush   440320 Nov  8 16:54 narw93updown.tar
-rw-rw-r--  1 bush bush   532480 Nov 13 04:41 narw94updown.tar
-rw-rw-r--  1 bush bush   890880 Nov  8 04:19 narw95updown.tar
-rw-rw-r--  1 bush bush  1300480 Nov 16 05:12 narw96updown.tar
-rw-rw-r--  1 bush bush   880640 Nov 13 02:43 narw97updown.tar
-rw-rw-r--  1 bush bush   573440 Nov 13 04:12 narw98updown.tar
-rw-rw-r--  1 bush bush    13392 Sep 14 16:35 optcycles0.input
-rw-rw-r--  1 bush bush    29869 Sep 14 16:35 optcycles0.ps
-rw-rw-r--  1 bush bush    10553 Sep 14 16:38 optcycles1.input
-rw-rw-r--  1 bush bush    23738 Sep 14 16:38 optcycles1.ps
-rw-rw-r--  1 bush bush    10735 Sep 14 16:39 optcycles2.input
-rw-rw-r--  1 bush bush    24382 Sep 14 16:39 optcycles2.ps
-rw-rw-r--  1 bush bush    13431 Sep 16 03:13 optcycles913.input
-rw-rw-r--  1 bush bush    21399 Sep 16 03:14 optcycles93.ps
-rw-rw-r--  1 bush bush  1955840 Sep 10 03:18 pandafold.tar
-rw-rw-r--  1 bush bush    61440 Sep 10 03:22 pandaiso.tar
-rw-r--r--  1 bush bush    47576 Nov 17 10:29 span.readme
-rw-r--r--  1 bush bush    96241 May 16  2013 span.runstream
-rw-r--r--  1 bush bush    35003 May 16  2013 span9.DEF
-rw-r--r--  1 bush bush   107998 May 16  2013 span9.INP
-rw-r--r--  1 bush bush    49678 May 16  2013 span9.PRO
-rw-rw-r--  1 bush bush     4578 May 25  2013 span9.glossary
-rw-rw-r--  1 bush bush    35396 Jul 11 16:06 spanexp.DEF
-rw-r--r--  1 bush bush   108083 Jul 11 16:04 spanexp.INP
-rw-r--r--  1 bush bush    19318 Jun 30  2012 struct.span9
-rw-rw-r--  1 bush bush    20516 Jul 11 16:03 struct.spanexp
-rw-rw-r--  1 bush bush   256000 Jul 12 04:13 test3.tar
-rw-rw-r--  1 bush bush   645120 Jun 21 05:39 wide916ud.tar
-rw-rw-r--  1 bush bush   849920 May 24  2013 wide98.tar
-rw-rw-r--  1 bush bush   112640 May 24  2013 wide98updown.tar
-rw-rw-r--  1 bush bush   440320 Jun 22 02:43 wider919ud.tar
-rw-rw-r--  1 bush bush   614400 Jun 24 05:20 wider919updn.tar
-rw-rw-r--  1 bush bush  1013760 Jun 27 07:49 widr919supdn.tar
--------------------------------------------------------------

The first "9" in the names of the specific cases  refers to the
generic name, "span9". The following digits in the nmaes of the
specific cases refer to the number of cylindrical major
segments in the model. An "S" or "s" in the name following the
numbers in the name indicates the presence of cylindrical
sub-segments.

On June 28, 2013, important modifications were made to
behavior.span9 and bosdec.span9: The radius at the left-hand
edge of the prismatic panel was set equal to 0.000001. As a
result, there exists somewhat less jaggety behavior during
optimization cycles.

July 11, 2013:
The generic case called "spanexp" ("span experimental") is
the same as the generic case called "span9" except that
there are separate design margins for local buckling (LOCBUK),
general symmetric buckling (GENSYM) and general anti-symmetric
buckling (BUKASY) for axial wave numbers n = 1 and n = 2 and
n = 3 axial half-waves. For one optimized design (test3) these
margins are as follows:
----------------------------------------------------------
MARGIN CURRENT
 NO.     VALUE            DEFINITION
  3    2.423E-03  (LOCBUK(1 ,1 )/LOCBUKA(1 ,1 )) / LOCBUKF(1 ,1 )-1; F.S.=  2.00
  4    4.885E-02  (LOCBUK(1 ,2 )/LOCBUKA(1 ,2 )) / LOCBUKF(1 ,2 )-1; F.S.=  2.00
  5    1.977E-01  (LOCBUK(1 ,3 )/LOCBUKA(1 ,3 )) / LOCBUKF(1 ,3 )-1; F.S.=  2.00
  6   -4.203E-02  (BUKSYM(1 ,1 )/BUKSYMA(1 ,1 )) / BUKSYMF(1 ,1 )-1; F.S.=  1.50
  7    5.596E-02  (BUKSYM(1 ,2 )/BUKSYMA(1 ,2 )) / BUKSYMF(1 ,2 )-1; F.S.=  1.50
  8    2.990E-01  (BUKSYM(1 ,3 )/BUKSYMA(1 ,3 )) / BUKSYMF(1 ,3 )-1; F.S.=  1.50
  9   -3.428E-02  (BUKASY(1 ,1 )/BUKASYA(1 ,1 )) / BUKASYF(1 ,1 )-1; F.S.=  1.50
 10   -1.756E-02  (BUKASY(1 ,2 )/BUKASYA(1 ,2 )) / BUKASYF(1 ,2 )-1; F.S.=  1.50
 11    7.550E-02  (BUKASY(1 ,3 )/BUKASYA(1 ,3 )) / BUKASYF(1 ,3 )-1; F.S.=  1.50
--------------------------------------------------------------------------------
It was thought that this strategy of providing a separate design margin
for each number of axial half-waves would lead to less jaggety behavior
during design iterations, with convergence to an optimum design with
significantly lower weight than could be achieved with the original
generic "span9" strategy. However, this "experiment" (spanexp) was
not a success. The specific case relating to this experiment is called
"test3". The "spanexp" experiment was terminated, but the relevant
files are still included here for documentation of the attempt.

Corresponding to the generic case called "span9" the buckling design
margins analogous to the 9 margins just listed for "spanexp" are
as follows:
-------------------------------------------------------------------
 MARGIN CURRENT
 NO.     VALUE            DEFINITION
  3   -3.142E-02  (LOCBUK(1 )/LOCBUKA(1 )) / LOCBUKF(1 )-1; F.S.=  2.00
  4   -3.929E-02  (BUKSYM(1 )/BUKSYMA(1 )) / BUKSYMF(1 )-1; F.S.=  1.50
  5   -4.497E-02  (BUKASY(1 )/BUKASYA(1 )) / BUKASYF(1 )-1; F.S.=  1.50
-------------------------------------------------------------------
In the original "span9" formulation the three arrays, LOCBUK, BUKSYM,
and BUKASY, are one-dimensional rather than two-dimensional. The
design margins for the three types of buckling correspond to the
minimum buckling load factor with respect to number of axial half-waves
over whatever axial length of panel is included in the model (either
the full length, LENGTH, in the cases of general buckling or a reduced
length, FACLEN x LENGTH, in the case of local buckling.

Also July 2013:
Another unsuccessful experiment was conducted, this time modifying
the GENOPT processors, store.src, main.src, stoget.tmpl and begin.tmpl.
The modifications are described in Item No. 48 of
 .../genopt/doc/genopt.news. The modifications to store.src were
commented out becase the new strategy for finding a "global"
optimum design often led to optimum designs that were "worse" 
(heavier) than those obtained without the modifications.

Also July 2013 (July 15, 2013):
A "span9" capability was added to analyze a wide panel using the
optimum design obtained from the model in which only WIDTH/2 is
included for optimization. The new capability is embodied in
the new processor called "bosdec2", which is part of the "bosdec"
library for the generic cases "span9" and "span9.leftside". This
modification produces a valid input file for BIGBOSOR4 called
*.BEHX0. The cross-section profile of the wall of the wide
"flat" (flat in the average sense) panel has repeating geometry
as shown at the top of Fig. 11 of the 2014 AIAA paper. In the
Fig. 11 example the geometry repeats 5 times (MMM=5), that is,
the width of the wide panel is 5 x WIDTH, in which WIDTH = 100
inches in the particular example called "fold98updown".
NOTE: The GENOPT user must set MMM in SUBROUTINE BOSDEC2.
In order to run the BIGBOSOR4 model of the wide panel
the End user must first give the command:
cd /home/progs/work4 (change to working directory to run BIGBOSOR4)
bigbosor4log (activate the BIGBOSOR4 set of commands)
cp ../genoptcase/fold98updown.BEHX0 fold98updown.ALL (input file)
bigbosorall (give case name "fold98updown"; run BIGBOSOR4)
vi fold98updown.OUT (search for the string, "EIGENVALUE(")
bosorplot (give the case name "fold98updown", choose item to plot.)
gv metafile.ps (get plot on your screen of the buckling mode)

August 2013 (August 22,2013)
The "wide panel" capability described in the previous paragraph
was expanded to permit the analysis of a huge cylindrical shell
of radius RCYL. The wall of this huge cylindrical shell is a
previously optimized corrugation cross-section profile with
repeating geometry as described in the last paragraph. The
"flat" wide panel is mapped onto a cylindrical surface. An
example is shown in Figs. 33 and 34 of the 2014 AIAA paper.
SUBROUTINE BOSDEC2 was modified to incorporate this new
capability into the "span9" software. The new bosdec2 is
included in the file called "bosdec.span9.hugecyl".
To run "huge cylinder" cases you have to copy
bosdec.span9.hugecyl into bosdec.src and run genprograms.
August 27, 2013: The "huge cylinder" option also works
with the expanded "smoothing" capability described in
the next paragraph.
NOTE: The GENOPT user must set MMM and RCYL in SUBROUTINE
BOSDEC2. For example, the plots in Figs. 33 and 34
correspond to MMM = 5 and RCYL = 318.0 inches.
The directions for running BIGBOSOR4 and obtaining plots
are given at the end of the previous paragraph.

August 2013 (August 20, 2013)
A "span9" capability was added to generate BIGBOSOR4 models
in which extra segments are added to "smooth" away the "corners"
between adjacent major segments. This new "span9" capability
is activated only if there are no sub-segments. If the "corner"
angle is less than 20 degrees there is no extra "smoothing"
segment inserted. If there are two adjacent major segments with
the same "convex up" or "convex down" orientation, smoothing
does not occur. With the "smoothing" option present, it was
necessary to have the left-hand edge at a non-zero radius,
RADIUS (the x-coordinate). Apparently, the BIGBOSOR4 prismatic
panel model does not work if the prismatic profile has zero
slope in the x-direction at the x-coordinate, RADIUS = 0.
Therefore, an "x-shift" (called RSHIFT) was introduced in
which the value of RSHIFT was set equal to WIDTH.
The panel weight, WEIGHT, is computed as if there were
no smoothing. The BIGBOSOR4 smoothed model is generated in
bosdec.span9.smoothing. The file, bosdec.span9.smoothing
is based on symmetry/antisymmetry applied along the left-hand
longitudinal edge. To run "smoothed" cases you have to copy
bosdec.span9.smoothing into bosdec.src and run genprograms.
Smoothed geometry has been explored only for the case called
"fold98updown". The file, bosdec.span9.smoothing now has
RSMOOTH = 1.0, in which RSMOOTH is the radius of the little
cylindrical segments that smooth the transitions from one
major segment to the next, eliminating the "corners".
August 27, 2013: The "smoothing" option also works with
the expanded capability to map the "flat" (flat in an average
sense) panel into a cylindrical panel with radius, RCYL.
NOTE: The GENOPT user must set MMM and RCYL in SUBROUTINE
BOSDEC2. Please see the previous two paragraphs for
directions on how to get results from BIGBOSOR4 for the
huge cylindrical shell with smoothing included.

August 28, 2013
A study of the optimized uniform ("flat") corrugation
mapped onto a cylindrical surface was conducted. The results
from this study are represented by Figs. 38 and 39 of
the 2014 paper.

September 10, 2013
An error was found in SUBROUTINE BOSDEC and corrected as follows:
C
C BEG JUN 2013
C BEG SEP 2013
C     RBEG = 0.000001
      RBEG = WIDTH
C END SEP 2013
C     RBEG = 10.0
      CALL MOVER(0.,0,FOUND,1,295)

The error affected predictions of antisymmetric buckling at
the left-hand edge of the BIGBOSOR4 model, leading to
unconservative predictions.

September 18, 2013
A STAGS model is now generated corresponding to the "smoothed"
model. FORTRAN coding was added to bosdec.span9.smoothing.

September 23, 2013
A new "bigbosor4" code was developed that permits up to 2950
shell segments (increased from 296 shell segments.
This new capability is presently called
"hugebosor4" and does not replace "bigbosor4". The "hugebosor4"
is activated when the user gives the command, "HUGEBOSOR4LOG".
The command set for "hugebosor4" is the same as that for
"bigbosor4", but the FORTRAN coding has been modified, of
course. The modified coding is stored in the files:

.../genopt/case/sources/addbosor4.src.huge
.../genopt/case/sources/b4plot.src.huge
.../genopt/case/sources/b4util.src.huge
.../genopt/case/sources/resetup.src.huge

In order to run GENOPT with the "hugebosor4" capability
(GENOPT/HUGEBOSOR4) do the following:

cp ../genopt/case/sources/addbosor4.src.huge ../bosdec/sources/addbosor4.src
cp ../genopt/case/sources/b4plot.src.huge ../bosdec/sources/b4plot.src
cp ../genopt/case/sources/b4util.src.huge ../bosdec/sources/b4util.src
cp ../genopt/case/sources/resetup.src.huge ../bosdec/sources/resetup.src
cp  behavior.span9.huge ../genoptcase/behavior.new
cp  bosdec.span9.hugecyl.huge ../bosdec/sources/bosdec.src (for "corners")
  or
cp bosdec.span9.smoothing.huge ../bosdec/sources/bosdec.src (for smoothing)

In order to get stand-alone "hugebosor4" results (e.g. plots)
go to a working directory where you want to run "hugebosor4"
and first give the command, HUGEBOSOR4LOG, followed by the
same commands that are used in connection with bigbosor4:
bigbosorall, bosorplot, etc.

The main purpose of "hugebosor4" is to work with GENOPT, in
which context valid input files for "hugebosor4" are gemerated
via the new software, bosdec.span9.hugecyl.huge (no smoothing)
and bosdec.span9.smoothing.huge (yes smoothing).

September 26, 2013

A new choice for IAUTOF was added: IAUTOF = 7. With IAUTOF = 7 (MAINSETUP
execution; the *.OPT file) there are no intervals during a SUPEROPT run
during which the move limit is reduced and the best design found so
far is used as a new starting design. IAUTOF is changed to IAUTOF = 2.

November 8, 2013
New "span9" optimizations were run for specific cases called
"narw9xupdown", x = 2, 3, 4, 5, 6, 7, 8. The panel width is
50 inches instead of 100 inches. Better (smaller WEIGHT) optimum
designs were obtained, probably because there are fewer decision
variables than for the specific cases called "fold9xupdown".

November 13, 2013
An error in logic was found in SUBROUTINE BOSDEC. Previously,
with INDX = 3 (antisymmetric buckling: BUKASY) only a single
model was run, that with left and right edge boundary
conditions equal to antisymmetry - antysymmetry. This
single BUKASY model sometimes led to unconservative
predictions for general antisymmetric buckling. Now there
are three models explored for the determination of BUKASY:
1. antisymmetry - antisymmetry (model 1: *.BEHX3  created)
2. antisymmetry - symmetry     (model 2: *.BEHX32 created)
3. symmetry - antisymmetry     (model 3: *.BEHX33 created)

It was necessary also significantly to modify SUBROUTINE
BEHX3 in the BEHAVIOR.SPAN9 library.
------------------------------------------------------------------

The file, span9.PRO, identifies the problem being solved.
In particular, the beginning of that file describes the
problem. This "beginning-of-that-file" is reproduced here:

------------- beginning of the span9.PRO file ----------------
   5.0 
       We want to determine the minimum amount of material
       required to span a distance of WIDTH for an axially
       compressed structure (a wall or panel) with a "corrugated"
       cross section. The entire width of the "corrugated" panel is
       composed of a number, 2 x NSEG, of so-called "major" segments,
       each of which may be divided into a number, NSUBSEG, of
       sub-segments. Each segment and each sub-segment is a sector
       of a little cylindrical shell the generators of which run
       in the axial (z) direction. The axial length of the
       corrugated panel is LENGTH. Half of the width, WIDTH, of
       the corrugated panel is included in the model, with symmetry
       conditions applied at x = WIDTH/2 in the prebuckling phase
       of the problem and both symmetry and anti-symmetry conditions
       applied in the bifurcation buckling phase of the problem.
        
       The material is isotropic. There is only one layer.
       The thickness is constant within each major segment of
       the "corrugated" panel. The corrugated panel exists in an
       x,y,z coordinate system in which:
       x = the width-wise coordinate (in the WIDTH direction)
       y = the vertical coordinate (normal to the x,z plane)
       z = the length-wise coordinate (in the LENGTH direction).
       The uniform axial compression is applied in the z-direction.
        
       The corrugated panel is optimized subject to the following
       "behavioral" constraints:
        
       1. local buckling which is symmetric about the symmetry
       plane at x = WIDTH/2. Local buckling is computed in
       SUBROUTINE BEHX1. (See the file, behavior.span9.)
        
       2. general buckling which is symmetric about the symmetry
       plane at x = WIDTH/2. General "symmetric" buckling is
       computed in SUBROUTINE BEHX2. (See behavior.span9.)
        
       3. general buckling which is anti-symmetric about the
       symmetry plane at x = WIDTH/2. General "anti-symmetric"
       buckling is computed in SUBROUTINE BEHX3 in behavior.span9.
        
       4. "classical" buckling of each segment of the corrugated
       panel. "Classical" buckling is computed in SUBROUTINE BEHX4.
       The "Classical" buckling formula includes a suitable
       knockdown factor computed from a table of values that
       depend on the radius/thickness of each cylindrical segment
       as given in the 1975 McGraw-Hill book by Brush and Almroth.
        
       5. maximum allowable stress. The stress is that for the
       corrugated panel in a membrane prebuckled state, that is,
       uniform axial compression (uniform end shortening) in the z
       coordinate direction. The stress is computed in SUBROUTINE BEHX5.
        
       The decision variable candidates are:
        
       1. The thickness, THICK, assumed to be constant over
       each major segment, but can be different in each major segment.
        
       2. The projected width, SUBWID, of each major segment. This
       is the width of the major panel segment projected onto the
       x,z plane, that is, the "x-width" of the major segment.
        
       3. The half-angles, PHISEG(i), of the major corrugation
       segments. "half-angle" (in degrees) means half the angle
       spanned by a single cylindrical corrugation segment of the
       corrugated panel. The major segments are joined width-wise
       longitudinal edge-to-edge. The edges all around the perimeter
       of the corrugated panel are simply supported. NOTE: The
       left-hand longitudinal edge has the three displacement
       components, USTAR,VSTAR,WSTAR, constrained and the rotation
       about the generator, CHI, free. USTAR, VSTAR, WSTAR are the
       vertical (y-direction), axial (z-direction), and width-wise
       (x-direction) displacement components, respectively.
       The two curved edges at z = 0 and z = LENGTH are simply
       supported in the classical sense, that is, buckling is
       antisymmetric about those two edges. Another way of
       expressing this is to write that buckling nodal lines
       occur along the two edges at z = 0 and z = LENGTH.
        
       4. The half-angles, PHISUB(i) (degrees), of the sub-segments.
       The longitudinal edges of each sub-segment have the same
       y-coordinates of the major segment that would exist if
       there were no sub-segments. PHISUB(i) is half the angle
       spanned by a sub-corrugation in the ith major segment.
       All the sub-corrugations within a given major segment
       have the same value of PHISUB. PHISUB(i) can be different
       in different major segments. The thicknesses of all sub-
       corrugations in a given major segment are the same.
        
       5. The distances, YPLATE, that the junctions of the major
       segments and the two longitudinal edges of the model, the
       leftmost edge at x = 0 and the rightmost edge at x=WIDTH/2,
       are raised above the x,z plane if the overall arching
       angle, PHIBIG (defined next), is zero. If PHIBIG is greater
       than zero YPLATE are the vertical distances above the overall
       arch at the x-locations of the junctions of the major segments
       and at the left-most and right-most edges of the panel.
       YPLATE is a vector with NSEG+1 components, in which NSEG
       is the number of major segments over the width, WIDTH/2.
        
       6. An overall arching half-angle, PHIBIG (degrees), that
       spans the distance, WIDTH/2, of the corrugated panel. The
       top of the arch (or bottom of the "valley") is located at
       x = WIDTH/2.
        
       The entire corrugated panel is raised above the
       x,z plane by a y-distance equal to YPLATE(1). The purpose
       of YPLATE(1) is to avoid zero, near-zero, and negative
       values of the decision variable candidates, YPLATE(2),
       YPLATE(3), ... , YPLATE(NSEG+1). YPLATE(1) should NOT be
       a decision variable.
        
       Typical values of design variables for an optimum design
       of a corrugated panel with 5 major segments over WIDTH/2
       and no subsegments are listed in the following table:
       VALUES OF DESIGN VARIABLES FOR THE BEST FEASIBLE DESIGN
       VAR. CURRENT
       NO.   VALUE            DEFINITION
       1 6.382E-02 wall thickness of the major segment:   THICK(1)
       2 6.382E-02 wall thickness of the major segment:   THICK(2)
       3 6.382E-02 wall thickness of the major segment:   THICK(3)
       4 6.382E-02 wall thickness of the major segment:   THICK(4)
       5 6.382E-02 wall thickness of the major segment:   THICK(5)
       6 4.408E+00 projected width(x-width) of sub-plate:SUBWID(1)
       7 5.648E+00 projected width(x-width) of sub-plate:SUBWID(2)
       8 1.276E+01 projected width(x-width) of sub-plate:SUBWID(3)
       9 1.319E+01 projected width(x-width) of sub-plate:SUBWID(4)
       10 1.354E+01 projected width(x-width) of sub-plate:SUBWID(5)
       11 3.409E+01 half-angle(deg.) of major corrugation:PHISEG(1)
       12 3.511E+01 half-angle(deg.) of major corrugation:PHISEG(2)
       13 7.877E+01 half-angle(deg.) of major corrugation:PHISEG(3)
       14 8.447E+01 half-angle(deg.) of major corrugation:PHISEG(4)
       15 8.397E+01 half-angle(deg.) of major corrugation:PHISEG(5)
       16 7.000E+01 half-angle (deg.) of sub-corrugation: PHISUB(1)
       17 7.000E+01 half-angle (deg.) of sub-corrugation: PHISUB(2)
       18 7.000E+01 half-angle (deg.) of sub-corrugation: PHISUB(3)
       19 7.000E+01 half-angle (deg.) of sub-corrugation: PHISUB(4)
       20 7.000E+01 half-angle (deg.) of sub-corrugation: PHISUB(5)
       21 3.000E+01 vertical y above (x,y,z) origin if PHIBIG=0:YPLATE(1)
       22 2.301E+01 vertical y above (x,y,z) origin if PHIBIG=0:YPLATE(2)
       23 2.096E+01 vertical y above (x,y,z) origin if PHIBIG=0:YPLATE(3)
       24 1.986E+01 vertical y above (x,y,z) origin if PHIBIG=0:YPLATE(4)
       25 2.022E+01 vertical y above (x,y,z) origin if PHIBIG=0:YPLATE(5)
       26 2.056E+01 vertical y above (x,y,z) origin if PHIBIG=0:YPLATE(6)
       27 8.866E+00 half-angle (deg.) of overall arching: PHIBIG
        
       Note that sub-segment half-angles, PHISUB(i), i=1,5, are
       listed above (variable numbers 16-20) even though in this
       particular case there are no sub-segments.
        
       Typical behavioral constraints (from which the behavioral
       margins are computed) for the optimized design just
       listed are as follows:
       ***** RESULTS FOR LOAD SET NO.  1  ******
       PARAMETERS THAT DESCRIBE BEHAVIOR(e.g. stress,buckling load)
       BEH. CURRENT
       NO.  VALUE            DEFINITION
       1  2.011E+00  local buckling load factor: LOCBUK(1)
       2  1.503E+00  symmetric general buckling: BUKSYM(1)
       3  1.512E+00  antisymmetric general buckling: BUKASY(1)
       4  1.009E+00  classical buckling load factor: CYLBUK(1,1 )
       5  1.554E+00  classical buckling load factor: CYLBUK(1,2 )
       6  1.084E+00  classical buckling load factor: CYLBUK(1,3 )
       7  1.054E+00  classical buckling load factor: CYLBUK(1,4 )
       8  1.022E+00  classical buckling load factor: CYLBUK(1,5 )
       9  2.181E+04  maximum effective stress: STRESS(1)
        
       The first array index in the behavioral variables, LOCBUK,
       BUKSYM, BUKASY, CYLBUK and STRESS, is the load case number.
       In this work there exists only a single load case.
       The second array index in the behavioral variable, CYLBUK,
       is the major segment number.
        
       Typical margins for the same optimized design are:
       ***** RESULTS FOR LOAD SET NO.  1  ******
       MARGINS CORRESPONDING TO CURRENT DESIGN (F.S.= FACTOR OF SAFETY)
       MARGIN CURRENT
       NO.    VALUE            DEFINITION
       1 9.540E-02  6.05-0.10*V(6)-0.10*V(7)-0.10*V(8)-0.10*V(9)-0.10*V(10)-1
       2 4.600E-03 -3.95+0.10*V(6)+0.10*V(7)+0.10*V(8)+0.10*V(9)+0.10*V(10)-1
       3 5.380E-03 (LOCBUK(1)/LOCBUKA(1))/LOCBUKF(1)-1;F.S.=2.00
       4 2.171E-03 (BUKSYM(1)/BUKSYMA(1))/BUKSYMF(1)-1;F.S.=1.50
       5 8.285E-03 (BUKASY(1)/BUKASYA(1))/BUKASYF(1)-1;F.S.=1.50
       6 8.958E-03 (CYLBUK(1,1 )/CYLBUKA(1,1))/CYLBUKF(1,1)-1;F.S.=1.0
       7 5.542E-01 (CYLBUK(1,2 )/CYLBUKA(1,2))/CYLBUKF(1,2)-1;F.S.=1.0
       8 8.370E-02 (CYLBUK(1,3 )/CYLBUKA(1,3))/CYLBUKF(1,3)-1;F.S.=1.0
       9 5.350E-02 (CYLBUK(1,4 )/CYLBUKA(1,4))/CYLBUKF(1,4)-1;F.S.=1.0
       10 2.183E-02 (CYLBUK(1,5 )/CYLBUKA(1,5))/CYLBUKF(1,5)-1;F.S.=1.0
       11 2.057E+00 (STRESSA(1)/STRESS(1))/STRESSF(1)-1; F.S.= 1.50
        
       The first two margins listed above:
       1 9.540E-02  6.05-0.10*V(6)-0.10*V(7)-0.10*V(8)-0.10*V(9)-0.10*V(10)-1
       2 4.600E-03 -3.95+0.10*V(6)+0.10*V(7)+0.10*V(8)+0.10*V(9)+0.10*V(10)-1
       require an explanation.
       The variables, V(6), V(7), V(8), V(9), V(10), are the
       projected widths, SUBWID(1), SUBWID(2), SUBWID(3), SUBWID(4)
       and SUBWID(5), of the 5 major segments. These 5 variables
       are decision variables, and the sum of them should always
       be very close to the half-width, WIDTH/2, of the corrugated
       panel. In order to accomplish this, two inequality
       constraints are introduced during execution of the GENOPT
       processor called "DECIDE":
       1. The overall half-width should be less than 50.5 inches.
       2. The overall half-width should be greater than 49.5 inches.
       In other words,
       50.5 > V(6) + V(7) + V(8) + V(9) + V(10)
       and
       49.5 < V(6) + V(7) + V(8) + V(9) + V(10)
        
       During the development of this application it was found
       that the numerical behavior was improved by multiplying
       both sides of the two inequality constraints by 0.1.
       Therefore, the two new (equivalent) inequality constraints
       are:
       5.05 > 0.1*V(6) + 0.1*V(7) + 0.1*V(8) + 0.1*V(9) + 0.1*V(10)
       4.95 < 0.1*V(6) + 0.1*V(7) + 0.1*V(8) + 0.1*V(9) + 0.1*V(10)
        
       Item No. 603 of the file, .../genopt/execute/URPROMPT.DAT
       (a permanent file independent of the generic case that
       contains prompting phrases and "help" paragraphs for the
       End user) includes the following lines:
        
       603.1 Identify the type of inequality expression (1 or 2)
       603.2
       The inequality relations have either of the two forms:
       Type 1 is:     1.0 > f(v1,v2,v3,...)
       Type 2 is:     1.0 < f(v1,v2,v3,...)
       in which the expression f(v1,v2,v3,...) has the form:
       f(v1,v2,v3,...)=C0 +C1*v1**D1 +C2*v2**D2 +C3*v3**D3 +
       +etc (up to max. of 15 terms).
        
       In this application we always use inequality constraints of
       Type 2: 1.0 < f(v1,v2,v3,...). Therefore, we multiply both
       sides of the first inequality constraint by -1.0, obtaining
       -5.05 < -0.1*V(6) -0.1*V(7) -0.1*V(8) -0.1*V(9) -0.1*V(10)
       Adding 5.05 to both sides of this first inequality gives:
       0.0 <  5.05 -0.1*V(6) -0.1*V(7) -0.1*V(8) -0.1*V(9) -0.1*V(10)
       and then adding 1.0 to both sides of this inequality gives:
       1.0 <  6.05 -0.1*V(6) -0.1*V(7) -0.1*V(8) -0.1*V(9) -0.1*V(10)
       which is in the proper Type 2 form: 1.0 < f(v1,v2,v3,...).
        
       Subtracting 4.95 from both sides of the second inequality
       and then adding 1.0 to both sides of the second inequality
       gives:
       1.0 < -3.95 +0.1*V(6) +0.1*V(7) +0.1*V(8) +0.1*V(9) +0.1*V(10)
        
       These two inequalities correspond to the first two margins
       listed above.
        
       This work was begun on July 19, 2009. The author is
       David Bushnell.
        
       In this project BIGBOSOR4 is used as the structural
       analysis tool. The corrugated panel is modeled as a true
       prismatic shell, as described in the following references:
        
       1. David Bushnell and Robert P. Thornburgh,"Use of GENOPT
       and BIGBOSOR4 to optimize weld lands in axially compressed
       stiffened cylindrical shells and evaluation of the
       optimized designs by STAGS, AIAA Paper 2010-2927, 51st
       AIAA Structures Conference, 2010
        
       2. David Bushnell, "Comparison of a "huge torus" model
       with a true prismatic model for: 1. an axially compressed
       simple monocoque cylindrical shell, 2. an axially
       compressed optimized truss-core sandwich cylindrical
       shell, and 3. an axially compressed optimized internally
       ring and stringer stiffened cylindrical shell with a T-
       stiffened weld land", Unpublished report for NASA Langley
       Research Center, February 12, 2010 and contained in the
       file, ...bigbosor4/case/prismatic/prismaticshell.pdf
        
       3. David Bushnell and Charles Rankin, "Use of GENOPT and
       BIGBOSOR4 to obtain optimum designs of an axially compressed
       cylindrical shell with a composite truss-core sandwich wall",
       AIAA Paper 2011-1811, 52nd AIAA Structures Conference,
       Denver CO, April, 2011
        
       The use of a shell-of-revolution code (BOSOR) to analyze a
       prismatic shell was first explored in the paper: "Stress,
       buckling and vibration of prismatic shells", AIAA Journal,
       Vol.9, No.10, pp 2004-2013, October, 1971, by David bushnell.
        
       The "huge torus" or "huge corrugated annulus" model is a
       "trick" by means of which a shell-of-revolution computer
       program such as BIGBOSOR4 can be used to compute buckling
       of PRISMATIC shells. As of 2010, BIGBOSOR4 now has two
       branches, one for shells of revolution and the other for
       true prismatic panels and shells, not approximate prismatic
       shells modeled as segments of a huge torus.
        
       The INDIC = 4, IPRE = 0 branch of BIGBOSOR4 is used for the
       local and general buckling analyses. The maximum stress is
       computed as if the corrugated panel were subjected
       to uniform end shortening. The prebuckled state of the
       corrugated panel is a membrane state (no prebuckling
       bending). The prebuckling axial stress resultant is
       everywhere proportional to the wall thickness. Since in the
       present model the thickness, THICK(i), is uniform in the ith
       segment, the axial resultant is uniform in the ith segment.
       There is no width-wise resultant because, under the
       uniform axial compression, each corrugated panel segment
       is free to undergo Poisson-ratio expansion in its
       width-wise (x-coordinate) direction.
---------- end of that part of the span9.PRO file ------------------

-----------Another part of the span9.PRO file ----------------------
 155.0 
       Next, you will be asked to provide starting values of
       the decision variables:
        
       1. Thickness, THICK, of a major cylindrical segment, assumed
       to be constant in each major segment of the corrugated panel.
       THICK is a one-dimensional array: THICK(i), i = 1, 2, ..NSEG,
       in which NSEG = the number of major segments over WIDTH/2.
        
       2. Projected widths, SUBWID, of each of the NSEG
       MAJOR segments in the half-model (WIDTH/2) of the corrugated
       panel. SUBWID is the width of a cylindrical major segment as
       projected on the x,z plane, that is, the "x-width".
       NOTE: The sum of NSEG SUBWID(i) must equal WIDTH/2.
        
       3. Half-angle, PHISEG, of each of the NSEG major segments.
       2 x PHISEG(i) is the total angle spanned by the ith major
       corrugation segment. RPLATE(i), a derived quantity, is
       the meridional radius of curvature of a major corrugation
       segment, that is, the radius of the little cylindrical
       sector. RPLATE is constant in that major segment. Hence, each
       major segment is part of a little cylindrical shell the
       generators of which are oriented in the axial (z) direction.
       The sign of the curvature, 1/RPLATE(i), of the ith major
       segment depends on the index, UPDOWN(i) = 1 or 2, that you
       have already supplied [UPDOWN(i) = 1 means "convex surface
       up" (a "hill"), and UPDOWN(i) = 2 means  "convex surface
       down" (a "valley")].
        
       4. Half-angle, PHISUB, of each of the sub-segment corrugations
       within each of the NSEG major segments. 2 x PHISUB(i) is
       the total angle spanned by the ith sub-corrugation. RSUBSEG(j,i),
       a derived quantity, is the meridional radius of curvature of a
       sub-corrugation. For all the NSUBSEG(i) sub-corrugations
       within the ith major segment, PHISUB(i) is the same.
       The sign of the curvature, 1/RSUBSEG(j,i), of the jth sub-
       segment within the ith major segment  depends on the index,
       UPDWNS(j,i) = 1 or 2, that you have already supplied.
       [UPDWNS(j,i)=1 means "convex surface up" (a "hill"), and
       UPDWNS(j,i)=2 means "convex surface down" (a "valley")].
        
       5. Distance, YPLATE, of each of the NSEG-1 panel segment
       junctions above the origin of the x,y,z coordinate system
       and of the left-hand longitudinal edge and of the right-hand
       symmetry plane of the corrugated panel with the assumption
       that PHIBIG = 0 degrees.
       (x = the widthwise coordinate; y = coordinate normal to the
       x-z plane, as if the two longitudinal edges and the
       generators at the major segment junctions all lie in the
       same plane (as if PHIBIG=0 degrees), that is, as if the
       widthwise major segments, SUBWID, all lie in the same plane;
       z = axial coordinate along which the axial compression is
       to be applied.
        
       6. Overall arching half-angle, PHIBIG, over the half-width,
       WIDTH/2, of the corrugated and sub-corrugated panel. The sign
       of the overall curvature, RADBIG, a derived quantity, depends
       on the index, UPDNBIG, that you have already supplied.
-----------End of another part of the span9.PRO file ---------------


The design constraints are:

1. Local buckling load factor, LOCBUK
2. Symmetric general buckling load factor, BUKSYM
3. Anti-symmetric general buckling load factor, BUKASY
4. "Classical" buckling load of each cylindrical "plate" segment, CYLBUK
5. Stress, STRESS

By "symmetric" and "anti-symmetric" are meant symmetry and anti-symmetry
with respect to the mid-width of the "corrugated" panel.

The objective is minimum weight, WEIGHT, of the 100 x 100-inch panel.
Any overall size of panel may be treated. All the examples in this
work are for a panel with a projected length and width of 100 x 100 inches.


IMPORTANT OPTIMIZATION BEHAVIOR

It is often difficult to find "global" optimum designs. SUPEROPT executions 
often lead to local minimum weights in design space that are significantly
higher than that corresponding to the "global" value. Good results are
more likely to be found from SUPEROPT runs if fairly tight bounds are
used for the decision variables (except for thickness, THICK).
What are "fairly tight bounds"? It depends on the problem. It is best to
avoid very small lower bounds because dimensions often get "trapped"
near these small lower bounds in SUPEROPT runs. It is often necessary
to execute multiple SUPEROPT/CHOOSEPLOT runs with given lower and upper
bounds of the decision variables in order to find the "global" optimum
design. It may well be necessary to execute multiple SUPEROPT/CHOOSEPLOT/cleanspec
runs with the use of different lower and upper bounds used
in connection with each SUPEROPT/CHOOSEPLOT/cleanspec execution.
For models with relatively few major segments (less than or equal to four)
those nearest the symmetry plane at WIDTH/2, will probably have "global"
optimum values of PHISEG equal to something like 80 degrees.


An earlier version of the "span" model (span8b) revealed a difficulty
associated with computation of the gradients of the constraint conditions,
especially with respect to the local buckling constraint, LOCBUK. An
optimum design obtained from the "span8b" model was as follows: 
--------------------------------------------------------------------
         DECISION VARIABLES FOR THE OPTIMIZATION PROBLEM
 VAR.   CURRENT
 NO.     VALUE            DEFINITION
  1    9.115E-02  wall thickness of the plate: THICK
  2    7.289E+00  projected width (x-width) of sub-plate: SUBWID(1 )
  3    7.000E+00  projected width (x-width) of sub-plate: SUBWID(2 )
  4    1.772E+01  projected width (x-width) of sub-plate: SUBWID(3 )
  5    1.749E+01  projected width (x-width) of sub-plate: SUBWID(4 )
  6    2.000E+01  half-angle (deg.) of major corrugation: PHISEG(1 )
  7    2.000E+01  half-angle (deg.) of major corrugation: PHISEG(2 )
  8    6.052E+01  half-angle (deg.) of major corrugation: PHISEG(3 )
  9    6.710E+01  half-angle (deg.) of major corrugation: PHISEG(4 )
 15    2.484E+01  vertical distance above (x,y,z) origin: YPLATE(2 )
 16    1.673E+01  vertical distance above (x,y,z) origin: YPLATE(3 )
 17    1.089E+01  vertical distance above (x,y,z) origin: YPLATE(4 )
 18    1.024E+01  vertical distance above (x,y,z) origin: YPLATE(5 )
 19    4.657E+01  half-angle (deg.) of overall arching: PHIBIG
---------------------------------------------------------------------

Corresponding to this optimum design, the local buckling load factors
from the fold84b.OPM file were:
--------------------------------------------------------------------
 LOCAL BUCKLING LOAD FACTORS AND MODES (BEHX1)
        2.4646E+00(   1)
        2.6061E+00(   2)
        2.5372E+00(   3)
        2.5048E+00(   4)
        2.5150E+00(   5)
        2.4699E+00(   6)
        2.3696E+00(   7)
        2.2831E+00(   8)
        2.2160E+00(   9)
        2.1647E+00(  10)
        2.1286E+00(  11)
        2.1085E+00(  12)
        2.1055E+00(  13) <--critical value of LOCBUK for current design
        2.1203E+00(  14)
        2.1531E+00(  15)
 Critical buckling load factor, LOCBUK=  2.1055E+00
 Critical number of circumferential waves, NWVCRT=   13
---------------------------------------------------------------------

Results for local buckling for the same design except that the decision
variable, YPLATE(3), was perturbed by 5 per cent, that is,
YPLATE(3) = 17.566 inches instead of YPLATE(3) = 16.730 inches,
were as follows:
---------------------------------------------------------------------
 LOCAL BUCKLING LOAD FACTORS AND MODES (BEHX1)
        2.2211E+00(   1)
        2.3098E+00(   2)
        1.7906E+00(   3)
        1.5612E+00(   4)
        1.4122E+00(   5)
        1.3140E+00(   6)
        1.2608E+00(   7)
        1.2447E+00(   8) <--critical value of LOCBUK for perturbed design
        1.2580E+00(   9)    YPLATE(3)=17.566 instead of YPLATE(3)=16.730
        1.2946E+00(  10)
        1.3502E+00(  11)
        1.4217E+00(  12)
        1.5067E+00(  13) <--SUBROUTINE BEHX1 uses m=13 axial halfwaves
        1.6037E+00(  14)    for the perturbed design, not m=8
        1.7116E+00(  15)
 Critical buckling load factor, LOCBUK=  1.2447E+00
 Critical number of circumferential waves, NWVCRT=    8
---------------------------------------------------------------------

Note that the number of axial half-waves in the critical local
buckling mode changed dramatically (from 13 to 8) as a result
of a small (5 per cent) change in one of the decision variables.
Also, the critical local buckling load factor changed dramatically.

A way to get around this problem is to change SUBROUTINE BEHX1,
which computes the LOCBUK constraint, so that a search over
m is conducted for the critical (lowest) eigenvalue even when
IMODX = 1. (IMODX = 0 means "current design"; IMODX = 1 means
"perturbed design".) This is done by the following changes in
SUBROUTINE BEHX1:
--------------------------------------------------------------
      CALL B4READ
C BEG JUN 2010 (comment out the "IF")
C     IF (IMODX.EQ.0) THEN
C END JUN 2010
         N0BX = N0B
         NMINBX = N0B
         NMAXBX = NMAXB
         INCRBX = 1
C BEG JUN 2010 (comment out the "IF - ELSE - ENDIF")
C     ELSE
C        NOBX = NWAV1
C        NMINBX = NWAV1
C        NMAXBX = NWAV1
C        INCRBX = 1
C     ENDIF
C END JUN 2010
      REWIND IFILE9
------------------------------------------------------------

This new strategy is now followed in the "span9" model, not only
for local buckling in SUBROUTINE BEHX1 but also for general symmetric
and anti-symmetric buckling in SUBROUTINEs BEHX2 and BEHX3, respectively.
======================================================================

