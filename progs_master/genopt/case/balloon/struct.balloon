C=DECK      STRUCT
      SUBROUTINE STRUCT(IMODX,CONSTX,OBJGEN,CONMAX,NCONSX,IPOINC,
     1 PCWORD,CPLOTX,ILOADX,ISTARX,NUSERC,IBEHV,IDV,IFAST,JJJ1)
C
C  PURPOSE IS TO PERFORM THE ANALYSIS FOR A GIVEN DESIGN AND LOADING.
C  CONSTRAINT CONDITIONS ARE ALSO GENERATED.
C
C  Common blocks already present in the struct.tmpl file, that is,
C  in the "skeletal" file possibly to be augmented by the user:
      COMMON/PRMFIL/IFILEX,IFILE2,IOUT,IPRM(5)
      COMMON/PRMOUT/IFILE3,IFILE4,IFILE8,IFILE9,IFIL11
      COMMON/INDAT/INFILE
      COMMON/LWRUPR/VLBX(98),VUBX(98),CLINKX(98,45),VLINKX(98),VBVX(99)
      COMMON/NUMPAR/IPARX,IVARX,IALLOW,ICONSX,NDECX,NLINKX,NESCAP,ITYPEX
      COMMON/PARAMS/PARX(99),VARX(98),ALLOWX(99),CONSXX(99),DECX(98),
     1              ESCX(98)
      COMMON/WORDS1/WORDPX(99),WORDVX(98),WORDAX(99),WORDCC(99),
     1              WORDDX(98)
      COMMON/WORDS2/WORDLX(98),WORDEX(98),WORDIQ(45)
      COMMON/OPTVAR/IDVX(98),ILVX(98),IDLINK(98,45),IEVX(98),JTERMS(45)
      COMMON/NUMPR2/ILARX,ICARX,IOARX,IFLATX,NCASES,NPRINX
      COMMON/PARAM2/FLARX(98),CARX(99),OARX(98),FSAFEX(99),CPWRX(98,45)
      COMMON/PARAM3/CINEQX(45,45),DPWREQ(45,45)
      COMMON/PARAM4/IDINEQ(45,45),NINEQX,JINEQX(45),IEQTYP(45)
      COMMON/WORDS3/WORDFX(98),WORDBX(99),WORDOB(98),WORDSX(99)
      COMMON/WORDS4/WORDMX(99)
      COMMON/PWORD/PHRASE
      COMMON/PWORD2/IBLANK
      COMMON/ISKIPX/ISKIP(30)
      DIMENSION IBEHV(99)
C
C==========================================================================
C  Start of first part of STRUCT written by "GENTEXT"
C  INSERT ADDITIONAL COMMON BLOCKS HERE: (THESE ARE "GENTEXT" VARIABLES)
      COMMON/FV03/EMOD1(10),IEMOD1
      REAL EMOD1
      COMMON/FV04/EMOD2(10),G12(10),G13(10),G23(10),NU(10),ALPHA1(10)
      REAL EMOD2,G12,G13,G23,NU,ALPHA1
      COMMON/FV01/LENGTH,RADIUS,HEIGHT,RINNER,ROUTER,TINNER,TOUTER
      REAL LENGTH,RADIUS,HEIGHT,RINNER,ROUTER,TINNER,TOUTER
      COMMON/FV10/ALPHA2(10),TEMPER(10),DENSTY(10)
      REAL ALPHA2,TEMPER,DENSTY
      COMMON/FV21/PINNER(20)
      REAL PINNER
      COMMON/FV26/BUCKB4(20),BUCKB4A(20),BUCKB4F(20)
      REAL BUCKB4,BUCKB4A,BUCKB4F
      COMMON/FV29/TENLOS(20),TENLOSA(20),TENLOSF(20)
      REAL TENLOS,TENLOSA,TENLOSF
      COMMON/FV32/STRM1(20,5 ),JSTRM1 ,STRM1A(20,5 ),STRM1F(20,5 )
      REAL STRM1,STRM1A,STRM1F
      COMMON/FV35/STRM2(20,5 ),STRM2A(20,5 ),STRM2F(20,5 )
      REAL STRM2,STRM2A,STRM2F
      COMMON/FV38/STRM3(20,5 ),STRM3A(20,5 ),STRM3F(20,5 )
      REAL STRM3,STRM3A,STRM3F
      COMMON/IV01/NMODUL,ISHAPE,IWEBS
      INTEGER NMODUL,ISHAPE,IWEBS
      COMMON/FV18/TFINNR,TFOUTR,TFWEBS,WEIGHT
      REAL TFINNR,TFOUTR,TFWEBS,WEIGHT
      COMMON/FV22/PMIDDL(20),POUTER(20)
      REAL PMIDDL,POUTER
C
C
      CHARACTER*80 PHRASE,CODPHR,PCWORD
      CHARACTER*80 WORDPX,WORDVX,WORDAX,WORDCX,WORDDX,WORDLX,WORDEX
      CHARACTER*80 WORDFX,WORDBX,WORDOB,WORDSX,WORDMX,WORDCC,WORDIQ
c     CHARACTER*4 ANSOUT,CHARAC,ANSWER
      CHARACTER*2 CIX
      character*2 CJX
      CHARACTER*13 CODNAM
c     DIMENSION ISUBX(100)
c     LOGICAL ANSL1
C
      DIMENSION CONSTX(*),IPOINC(*),PCWORD(*),CPLOTX(*)
C  End of first part of STRUCT written by "GENTEXT"
C==========================================================================
C
C  INSERT ADDITIONAL DIMENSION AND/OR LABELLED COMMON BLOCKS HERE,
C  IF NECESSARY. THESE WOULD BE STATEMENTS THAT ARE CONSISTENT WITH
C  SUBROUTINES THAT YOU OR OTHERS MAY HAVE WRITTEN THAT ARE REQUIRED
C  FOR WHATEVER ANALYSIS YOU ARE PERSUING.  MAKE SURE THAT YOU DO NOT
C  INTRODUCE NAME CONFLICTS WITH THE "GENTEXT" LABELLED COMMON BLOCKS
C  LISTED ABOVE.
C
C  Please note that you do not have to modify STRUCT.NEW if you would
C  rather provide all of your algorithms via the BEHAVIOR.NEW library.
C  (See instructions in BEHAVIOR.NEW).
C
C  If you are using a lot of software previously written either by
C  yourself or others, or if there are a lot of behavioral constraints
C  that are best generated by looping over array indices (such as
C  occurs, for example, with stress constraints in laminates of
C  composite materials), then it may be best to insert your common
C  blocks and dimension statements here, your subroutine calls
C  below (where indicated), and your subroutines in any of the libraries
C  called ADDCODEn.NEW, n = 1,2,...,5.  Please note that you
C  may also have to add statements to SUBROUTINE TRANFR, the
C  purpose of which is described below (in TRANFR).
C
C  The several test cases provided with GENOPT demonstrate different
C  methods:
C
C  PLATE  : leave STRUCT.NEW unchanged and modify BEHAVIOR.NEW
C  SPHERE : leave STRUCT.NEW unchanged and modify BEHAVIOR.NEW
C  TORISPH: leave BEHAVIOR.NEW unchanged except possibly for the objective
C           function (SUBROUTINE OBJECT), modify STRUCT.NEW,
C           possibly add a subroutine library called ADDCODE1.NEW, and
C           possibly augment the usermake.linux file to collect object
C           libraries from other directories. In the "TORISPH" case
C           BEHAVIOR.NEW remains unchanged, no ADDCODE1.NEW library is
C           added, and usermake.linux is not changed.  Instead, the
C           BIGBOSOR4 code is added and SUBROUTINE BOSDEC is written
C           by the genopt user. The BIGBOSOR4 code and SUBROUTINE
C           BOSDEC must be stored in /home/progs/bosdec/sources, as
C           follows:
C    BIGBOSOR4 code:
C     -rw-r--r--  1 bush bush 579671 Feb 29 07:19 addbosor4.src
C     -rw-r--r--  1 bush bush  83175 Feb 22 09:13 b4plot.src
C     -rw-r--r--  1 bush bush  89671 Feb 28 16:20 b4util.src
C     -rw-r--r--  1 bush bush  22723 Feb 10 14:27 bio.c
C     -rw-r--r--  1 bush bush  31175 Feb 10 14:27 bio_linux.c
C     -rw-r--r--  1 bush bush  37152 Feb 10 14:27 bio_linux.o
C     -rw-r--r--  1 bush bush  15650 Feb 10 14:26 gasp.F
C     -rw-r--r--  1 bush bush  18364 Feb 10 14:26 gasp_linux.o
C     -rw-r--r--  1 bush bush   6310 Feb 13 10:12 opngen.src
C     -rw-r--r--  1 bush bush  22440 Feb 10 14:25 prompter.src
C     -rw-r--r--  1 bush bush  13426 Feb 22 09:14 resetup.src
C    BOSDEC.src code:
C     -rw-r--r--  1 bush bush  33851 Mar  1 08:34 bosdec.src
C
C  WAVYCYL: both BEHAVIOR.NEW and STRUCT.NEW are both changed. Otherwise
C           the activity is the same as that described for TORISPH,
C           except, of course, that struct.new is different from
C           that used in connection with TORISPH.
C
C  CYLINDER:same as the description for WAVYCYL.
C
C
C  INSERT YOUR ADDITIONAL COMMON BLOCKS FOR THIS GENERIC CASE HERE:
C
C
C  THE FOLLOWING CODE WAS WRITTEN BY "GENTEXT":
C
C================================================================
C  Start the second portion of STRUCT written by "GENTEXT":
C
      ICARX   = ISTARX
      INUMTT = 0
      ICONSX = 0
      KCONX   = 0
      IF (IMODX.EQ.0) THEN
         CALL MOVERX(0.,0,CONSTX,1,99)
         CALL MOVERX(0, 0,IPOINC,1,1500)
      ENDIF
C
      IF (ILOADX.EQ.1) THEN
C
C  ESTABLISH FIRST ANY CONSTRAINTS THAT ARE INEQUALITY RELATIONSHIPS
C  AMONG THE VARIABLES IN THE ARRAY VARX(*) (THAT IS, VARIABLES THAT
C  ARE EITHER DECISION VARIABLES, LINKED VARIABLES, ESCAPE VARIABLES,
C  OR CANDIDATES FOR ANY OF THESE TYPES OF VARIABLES.
C
         IF (NINEQX.GT.0)
     1        CALL VARCON(WORDIQ,WORDMX,CINEQX,DPWREQ,IDINEQ,
     1        NINEQX,JINEQX,IEQTYP,INUMTT,IMODX,CONMAX,IPOINC,
     1        ICONSX,CONSTX,VARX,PCWORD,CPLOTX,ICARX)
C
C  NEXT, ESTABLISH USER-WRITTEN CONSTRAINTS. AT PRESENT, THE PROGRAM
C  ALLOWS ONLY ONE USER-WRITTEN CONSTRAINT. HOWEVER, THE USER CAN
C  EASILY EXPAND THIS CAPABILITY SIMPLY BY ADDING SUBROUTINES THAT
C  ARE ANALOGOUS TO USRCON (WITH NAMES SUCH AS USRCN2, USRCN3, ETC.
C  TO THE  BEHAVIOR.NEW LIBRARY, AND ADD CALLS TO THESE ADDITIONAL
C  SUBROUTINES FOLLOWING THE CALL TO USRCON IMMEDIATELY BELOW.
C
         CALL USRCON(INUMTT,IMODX,CONMAX,ICONSX,IPOINC,CONSTX,WORDCX,
     1            WORDMX,PCWORD,CPLOTX,ICARX,IFILE8)
C
         NUSERC = ICARX - NINEQX
      ENDIF
C
      IF (NPRINX.GT.0) THEN
         WRITE(IFILE8,'(1X,A,I2,A)')
     1 ' BEHAVIOR FOR ',ILOADX,' ENVIRONMENT (LOAD SET)'
         WRITE(IFILE8,'(A)')'  '
         WRITE(IFILE8,'(A)')
     1 ' CONSTRAINT  BEHAVIOR              DEFINITION'
         WRITE(IFILE8,'(A)')
     1 '   NUMBER     VALUE'
      ENDIF
C
      CALL CONVR2(ILOADX,CIX)
      IF (NPRINX.GT.0) THEN
         WRITE(IFILE8,'(1X,A)')'  '
         WRITE(IFILE8,'(1X,A,I2)')
     1 ' BEHAVIOR FOR LOAD SET NUMBER, ILOADX=',ILOADX
      ENDIF
C
C  End of the second portion of STRUCT written by "GENTEXT"
C=======================================================================
C
C  USER: YOU MAY WANT TO INSERT SUBROUTINE CALLS FROM SOFTWARE DEVELOPED
C        ELSEWHERE FOR ANY CALCULATIONS PERTAINING TO THIS LOAD SET.
C
      CALL OPNGEN
      CALL RWDGEN
C
C=======================================================================
C  Start of the final portion of STRUCT written by "GENTEXT"
C
C  INSERT THE PROGRAM FILE HERE:
C
C  Behavior and constraints generated next for BUCKB4:
C  BUCKB4 = buckling load factor from BIGBOSOR4
C
      PHRASE =
     1 'buckling load factor from BIGBOSOR4'
      CALL BLANKX(PHRASE,IENDP4)
      JXX = 0
      JXX = JXX + 1
      BUCKB4(ILOADX) = 0.0
      IF (IBEHV(JXX).EQ.0) CALL BEHX1
     1 (IFILE8,NPRINX,IMODX,IFAST,ILOADX  ,
     1 'buckling load factor from BIGBOSOR4')
      IF (BUCKB4(ILOADX  ).EQ.0.)  BUCKB4(ILOADX  ) = 1.E+10
      IF (BUCKB4A(ILOADX  ).EQ.0.)  BUCKB4A(ILOADX  ) = 1.0
      IF (BUCKB4F(ILOADX  ).EQ.0.)  BUCKB4F(ILOADX  ) = 1.0
      KCONX = KCONX + 1
      CARX(KCONX) =BUCKB4(ILOADX  )
      WORDCX= '(BUCKB4('//CIX//')/BUCKB4A('//CIX//
     1  ')) / BUCKB4F('//CIX//')'
      CALL CONX(BUCKB4(ILOADX  ),BUCKB4A(ILOADX  ),BUCKB4F(ILOADX  )
     1,'buckling load factor from BIGBOSOR4',
     1 'allowable for buckling load factor from BIGBOSOR4',
     1 'buckling from BIGBOSOR4 factor of safety',
     1 2,INUMTT,IMODX,CONMAX,ICONSX,IPOINC,CONSTX,WORDCX,
     1 WORDMX,PCWORD,CPLOTX,ICARX)
      IF (IMODX.EQ.0) THEN
         CODPHR =
     1 '  buckling load factor from BIGBOSOR4: '
         IENDP4 =39
         CODNAM ='BUCKB4('//CIX//')'
         MLET4 =6 + 4
         WORDBX(KCONX)= CODPHR(1:IENDP4)//CODNAM(1:MLET4)
         IF (NPRINX.GT.0) WRITE(IFILE8,'(I5,6X,G14.7,A,A)')
     1    KCONX,CARX(KCONX),CODPHR(1:IENDP4),CODNAM(1:MLET4)
      ENDIF
  190 CONTINUE
  191 CONTINUE
C
C  Behavior and constraints generated next for TENLOS:
C  TENLOS = load factor for tension loss
C
      PHRASE =
     1 'load factor for tension loss'
      CALL BLANKX(PHRASE,IENDP4)
      JXX = JXX + 1
      TENLOS(ILOADX) = 0.0
      IF (IBEHV(JXX).EQ.0) CALL BEHX2
     1 (IFILE8,NPRINX,IMODX,IFAST,ILOADX  ,
     1 'load factor for tension loss')
      IF (TENLOS(ILOADX  ).EQ.0.)  TENLOS(ILOADX  ) = 1.E+10
      IF (TENLOSA(ILOADX  ).EQ.0.)  TENLOSA(ILOADX  ) = 1.0
      IF (TENLOSF(ILOADX  ).EQ.0.)  TENLOSF(ILOADX  ) = 1.0
      KCONX = KCONX + 1
      CARX(KCONX) =TENLOS(ILOADX  )
      WORDCX= '(TENLOS('//CIX//')/TENLOSA('//CIX//
     1  ')) / TENLOSF('//CIX//')'
      CALL CONX(TENLOS(ILOADX  ),TENLOSA(ILOADX  ),TENLOSF(ILOADX  )
     1,'load factor for tension loss',
     1 'tension loss allowable (Use 1.0)',
     1 'tension loss factor of safety',
     1 2,INUMTT,IMODX,CONMAX,ICONSX,IPOINC,CONSTX,WORDCX,
     1 WORDMX,PCWORD,CPLOTX,ICARX)
      IF (IMODX.EQ.0) THEN
         CODPHR =
     1 '  load factor for tension loss: '
         IENDP4 =32
         CODNAM ='TENLOS('//CIX//')'
         MLET4 =6 + 4
         WORDBX(KCONX)= CODPHR(1:IENDP4)//CODNAM(1:MLET4)
         IF (NPRINX.GT.0) WRITE(IFILE8,'(I5,6X,G14.7,A,A)')
     1    KCONX,CARX(KCONX),CODPHR(1:IENDP4),CODNAM(1:MLET4)
      ENDIF
  210 CONTINUE
  211 CONTINUE
C
C  Behavior and constraints generated next for STRM1:
C  STRM1 = stress component in material 1
C
      IF (JSTRM1 .EQ.0) GO TO 231
      IF (NPRINX.GT.0) THEN
         IF (JSTRM1 .GT.1) THEN
            WRITE(IFILE8,'(1X,A)')'  '
            WRITE(IFILE8,'(1X,A,$)')' BEHAVIOR OVER J = '
            WRITE(IFILE8,'(1X,A)')
     1      'stress component number'
         ENDIF
      ENDIF
      DO 230  J=1,JSTRM1
      CALL CONVR2(J,CJX)
      PHRASE =
     1 'stress component in material 1'
      CALL BLANKX(PHRASE,IENDP4)
      JXX = JXX + 1
      STRM1(ILOADX,J) = 0.0
      IF (IBEHV(JXX).EQ.0) CALL BEHX3
     1 (IFILE8,NPRINX,IMODX,IFAST,ILOADX,J,
     1 'stress component in material 1')
      IF (STRM1(ILOADX,J).EQ.0.)  STRM1(ILOADX,J) = 1.E-10
      IF (STRM1A(ILOADX,J).EQ.0.)  STRM1A(ILOADX,J) = 1.0
      IF (STRM1F(ILOADX,J).EQ.0.)  STRM1F(ILOADX,J) = 1.0
      KCONX = KCONX + 1
      CARX(KCONX) =STRM1(ILOADX,J)
      WORDCX= '(STRM1A('//CIX//','//CJX//')/STRM1('//CIX//','//CJX//
     1  ')) / STRM1F('//CIX//','//CJX//')'
      CALL CONX(STRM1(ILOADX,J),STRM1A(ILOADX,J),STRM1F(ILOADX,J)
     1,'stress component in material 1',
     1 'allowable stress in material 1',
     1 'factor of safety for stress in material 1',
     1 3,INUMTT,IMODX,CONMAX,ICONSX,IPOINC,CONSTX,WORDCX,
     1 WORDMX,PCWORD,CPLOTX,ICARX)
      IF (IMODX.EQ.0) THEN
         CODPHR =
     1 '  stress component in material 1: '
         IENDP4 =34
         CODNAM ='STRM1('//CIX//','//CJX//')'
         MLET4 =5 + 7
         WORDBX(KCONX)= CODPHR(1:IENDP4)//CODNAM(1:MLET4)
         IF (NPRINX.GT.0) WRITE(IFILE8,'(I5,6X,G14.7,A,A)')
     1    KCONX,CARX(KCONX),CODPHR(1:IENDP4),CODNAM(1:MLET4)
      ENDIF
  230 CONTINUE
  231 CONTINUE
C
C  Behavior and constraints generated next for STRM2:
C  STRM2 = stress component in material 2
C
      IF (JSTRM1 .EQ.0) GO TO 246
      IF (NPRINX.GT.0) THEN
         IF (JSTRM1 .GT.1) THEN
            WRITE(IFILE8,'(1X,A)')'  '
            WRITE(IFILE8,'(1X,A,$)')' BEHAVIOR OVER J = '
            WRITE(IFILE8,'(1X,A)')
     1      'stress component number'
         ENDIF
      ENDIF
      DO 245  J=1,JSTRM1
      CALL CONVR2(J,CJX)
      PHRASE =
     1 'stress component in material 2'
      CALL BLANKX(PHRASE,IENDP4)
      JXX = JXX + 1
      STRM2(ILOADX,J) = 0.0
      IF (IBEHV(JXX).EQ.0) CALL BEHX4
     1 (IFILE8,NPRINX,IMODX,IFAST,ILOADX,J,
     1 'stress component in material 2')
      IF (STRM2(ILOADX,J).EQ.0.)  STRM2(ILOADX,J) = 1.E-10
      IF (STRM2A(ILOADX,J).EQ.0.)  STRM2A(ILOADX,J) = 1.0
      IF (STRM2F(ILOADX,J).EQ.0.)  STRM2F(ILOADX,J) = 1.0
      KCONX = KCONX + 1
      CARX(KCONX) =STRM2(ILOADX,J)
      WORDCX= '(STRM2A('//CIX//','//CJX//')/STRM2('//CIX//','//CJX//
     1  ')) / STRM2F('//CIX//','//CJX//')'
      CALL CONX(STRM2(ILOADX,J),STRM2A(ILOADX,J),STRM2F(ILOADX,J)
     1,'stress component in material 2',
     1 'allowable for stress in material 2',
     1 'factor of safety for stress in material 2',
     1 3,INUMTT,IMODX,CONMAX,ICONSX,IPOINC,CONSTX,WORDCX,
     1 WORDMX,PCWORD,CPLOTX,ICARX)
      IF (IMODX.EQ.0) THEN
         CODPHR =
     1 '  stress component in material 2: '
         IENDP4 =34
         CODNAM ='STRM2('//CIX//','//CJX//')'
         MLET4 =5 + 7
         WORDBX(KCONX)= CODPHR(1:IENDP4)//CODNAM(1:MLET4)
         IF (NPRINX.GT.0) WRITE(IFILE8,'(I5,6X,G14.7,A,A)')
     1    KCONX,CARX(KCONX),CODPHR(1:IENDP4),CODNAM(1:MLET4)
      ENDIF
  245 CONTINUE
  246 CONTINUE
C
C  Behavior and constraints generated next for STRM3:
C  STRM3 = stress component in material 3
C
      IF (JSTRM1 .EQ.0) GO TO 261
      IF (NPRINX.GT.0) THEN
         IF (JSTRM1 .GT.1) THEN
            WRITE(IFILE8,'(1X,A)')'  '
            WRITE(IFILE8,'(1X,A,$)')' BEHAVIOR OVER J = '
            WRITE(IFILE8,'(1X,A)')
     1      'stress component number'
         ENDIF
      ENDIF
      DO 260  J=1,JSTRM1
      CALL CONVR2(J,CJX)
      PHRASE =
     1 'stress component in material 3'
      CALL BLANKX(PHRASE,IENDP4)
      JXX = JXX + 1
      STRM3(ILOADX,J) = 0.0
      IF (IBEHV(JXX).EQ.0) CALL BEHX5
     1 (IFILE8,NPRINX,IMODX,IFAST,ILOADX,J,
     1 'stress component in material 3')
      IF (STRM3(ILOADX,J).EQ.0.)  STRM3(ILOADX,J) = 1.E-10
      IF (STRM3A(ILOADX,J).EQ.0.)  STRM3A(ILOADX,J) = 1.0
      IF (STRM3F(ILOADX,J).EQ.0.)  STRM3F(ILOADX,J) = 1.0
      KCONX = KCONX + 1
      CARX(KCONX) =STRM3(ILOADX,J)
      WORDCX= '(STRM3A('//CIX//','//CJX//')/STRM3('//CIX//','//CJX//
     1  ')) / STRM3F('//CIX//','//CJX//')'
      CALL CONX(STRM3(ILOADX,J),STRM3A(ILOADX,J),STRM3F(ILOADX,J)
     1,'stress component in material 3',
     1 'allowable for stress in material 3',
     1 'factor of safety for stress in material 3',
     1 3,INUMTT,IMODX,CONMAX,ICONSX,IPOINC,CONSTX,WORDCX,
     1 WORDMX,PCWORD,CPLOTX,ICARX)
      IF (IMODX.EQ.0) THEN
         CODPHR =
     1 '  stress component in material 3: '
         IENDP4 =34
         CODNAM ='STRM3('//CIX//','//CJX//')'
         MLET4 =5 + 7
         WORDBX(KCONX)= CODPHR(1:IENDP4)//CODNAM(1:MLET4)
         IF (NPRINX.GT.0) WRITE(IFILE8,'(I5,6X,G14.7,A,A)')
     1    KCONX,CARX(KCONX),CODPHR(1:IENDP4),CODNAM(1:MLET4)
      ENDIF
  260 CONTINUE
  261 CONTINUE
C
C  NEXT, EVALUATE THE OBJECTIVE, OBJGEN:
      IF (ILOADX.EQ.1) THEN
         PHRASE ='weight/length of the balloon'
         CALL BLANKX(PHRASE,IENDP4)
         CALL OBJECT(IFILE8,NPRINX,IMODX,OBJGEN,
     1    'weight/length of the balloon')
      ENDIF
      NCONSX = ICONSX
C
      CALL CLSGEN
C
      RETURN
      END
C
C
C
C
C
C  End of the final portion of STRUCT written by "GENTEXT"
C=======================================================================
C
C=DECK      TRANFR
      SUBROUTINE TRANFR(ARG1,ARG2,ARG3,ARG4,ARG5)
C
C  USER:  DO NOT FORGET TO MODIFY THE ARGUMENT LIST OF TRANFR AS
C         APPROPRIATE FOR YOUR CASE!
C
C  PURPOSE IS TO TRANSFER DATA FROM THE LABELLED COMMON BLOCKS
C  SET UP BY THE GENOPT CODE TO LABELLED COMMON OR ARGUMENTS IN
C  THE SUBROUTINE ARGUMENT LIST THAT MATCH PREVIOUSLY WRITTEN CODE
C  BY YOURSELF OR OTHER PROGRAM DEVELOPERS.  THE USER SHOULD ESTABLISH
C  THE ARGUMENT LIST AND/OR LABELLED COMMON BLOCKS THAT MATCH VARIABLES
C  IN THE PREVIOUSLY WRITTEN CODE.  FOR AN EXAMPLE, SEE THE DISCUSSION
C  OF THE CASE CALLED "PANEL".
C
C==========================================================================
C  Start of part of TRANFR written by "GENTEXT"
C  INSERT ADDITIONAL COMMON BLOCKS HERE: (THESE ARE "GENTEXT" VARIABLES)
      COMMON/FV03/EMOD1(10),IEMOD1
      REAL EMOD1
      COMMON/FV04/EMOD2(10),G12(10),G13(10),G23(10),NU(10),ALPHA1(10)
      REAL EMOD2,G12,G13,G23,NU,ALPHA1
      COMMON/FV01/LENGTH,RADIUS,HEIGHT,RINNER,ROUTER,TINNER,TOUTER
      REAL LENGTH,RADIUS,HEIGHT,RINNER,ROUTER,TINNER,TOUTER
      COMMON/FV10/ALPHA2(10),TEMPER(10),DENSTY(10)
      REAL ALPHA2,TEMPER,DENSTY
      COMMON/FV21/PINNER(20)
      REAL PINNER
      COMMON/FV26/BUCKB4(20),BUCKB4A(20),BUCKB4F(20)
      REAL BUCKB4,BUCKB4A,BUCKB4F
      COMMON/FV29/TENLOS(20),TENLOSA(20),TENLOSF(20)
      REAL TENLOS,TENLOSA,TENLOSF
      COMMON/FV32/STRM1(20,5 ),JSTRM1 ,STRM1A(20,5 ),STRM1F(20,5 )
      REAL STRM1,STRM1A,STRM1F
      COMMON/FV35/STRM2(20,5 ),STRM2A(20,5 ),STRM2F(20,5 )
      REAL STRM2,STRM2A,STRM2F
      COMMON/FV38/STRM3(20,5 ),STRM3A(20,5 ),STRM3F(20,5 )
      REAL STRM3,STRM3A,STRM3F
      COMMON/IV01/NMODUL,ISHAPE,IWEBS
      INTEGER NMODUL,ISHAPE,IWEBS
      COMMON/FV18/TFINNR,TFOUTR,TFWEBS,WEIGHT
      REAL TFINNR,TFOUTR,TFWEBS,WEIGHT
      COMMON/FV22/PMIDDL(20),POUTER(20)
      REAL PMIDDL,POUTER
C
C
C  End of part of TRANFR written by "GENTEXT"
C==========================================================================
C  INSERT ADDITIONAL DIMENSION AND/OR LABELLED COMMON BLOCKS HERE,
C  IF NECESSARY. THESE WOULD BE STATEMENTS THAT ARE CONSISTENT WITH
C  SUBROUTINES THAT YOU OR OTHERS MAY HAVE WRITTEN THAT ARE REQUIRED
C  FOR WHATEVER ANALYSIS YOU ARE NOW PERSUING.  MAKE SURE THERE ARE
C  NO NAME CONFLICTS WITH THE "GENTEXT" LABELLED COMMON BLOCKS.
C
C
C  INSERT APPROPRIATE FORTRAN STATEMENTS HERE (DON'T FORGET TO CORRECT
C  THE ARGUMENT LIST OF SUBROUTINE TRANFR!)
C  PROGRAM FILE:
C
C
      RETURN
      END
C
C
C
