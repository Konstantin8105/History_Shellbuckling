
GENOPT RUNSTREAM FOR THE GENERIC CASE "tank"
AND THE SPECIFIC CASE "test"
========================================================

COMMAND				MEANING OF COMMAND

cd /home/progs/genoptcase	go to "genoptcase"
				in order to run GENOPT

genoptlog			activate GENOPT commands

[The following will appear on your screen:]
-----------------------------------------------------
GENOPT commands have been activated.

  gentext      GENOPT user generates a prompt file.
  genprograms  GENOPT user generates (makes) executables:
               begin, decide, mainsetup, optimize,
               change, chooseplot, and diplot.
  begin        End user provides starting data.
  decide       End user chooses decision variables, bounds,
               linked variables, and inequality constraints.
  mainsetup    End user sets up strategy parameters.
  optimize     End user performs optimization.
  change       End user changes some parameters.
  autochange   New values for decision variables randomly
  superopt     End user find global optimum (autochange/optimize)...
  superduperopt     End user executes superopt/chooseplot x times...
  chooseplot   End user chooses which variable to plot vs.
               iterations.
  diplot       End user plots variables vs. iterations.
  insert       GENOPT user adds parameters to the problem.
  cleangen     GENOPT user cleans up GENeric case files.
  cleanspec    End user cleans up SPECific case files.
------------------------------------------------------

COMMAND                         MEANING OF COMMAND

gentext
 GENERIC CASE NAME: tank

[GENOPT user provide input interactively for the generic case,
 called "tank". At the end of this long interactive session
 the following files will exist:]
-------------------------------------------------------
-rw-rw-r-- 1 bush bush  11081 Nov 16 05:32 tank.CHA
-rw-rw-r-- 1 bush bush   2796 Nov 16 05:32 tank.COM <use in bosdec
-rw-rw-r-- 1 bush bush  16185 Nov 16 05:32 tank.CON
-rw-rw-r-- 1 bush bush 155702 Nov 16 05:32 tank.DAT
-rw-rw-r-- 1 bush bush  39212 Nov 16 05:32 tank.DEF <inspect this
-rw-r--r-- 1 bush bush 155703 Nov 16 05:32 tank.INP <save this
-rw-rw-r-- 1 bush bush  81105 Nov 16 05:32 tank.NEW
-rw-rw-r-- 1 bush bush  63078 Nov 16 05:32 tank.PRO <inspect this
-rw-rw-r-- 1 bush bush   4064 Nov 16 05:32 tank.REA
-rw-rw-r-- 1 bush bush   1964 Nov 16 05:32 tank.SET
-rw-rw-r-- 1 bush bush  18147 Nov 16 05:32 tank.SUB
-rw-rw-r-- 1 bush bush   4064 Nov 16 05:32 tank.WRI

-rw-rw-r-- 1 bush bush 105530 Nov 16 05:32 begin.new
-rw-rw-r-- 1 bush bush 117928 Nov 16 06:10 behavior.new <flesh out
-rw-rw-r-- 1 bush bush  25016 Nov 16 05:32 change.new
-rw-rw-r-- 1 bush bush  18575 Nov 16 05:32 stoget.new
-rw-rw-r-- 1 bush bush  48932 Nov 16 05:58 struct.new <flesh out
---------------------------------------------------------

[The GENOPT user must next "flesh out" the skeletal libraries,
struct.new and behavior.new. The GENOPT user must also create
from scratch the library, /home/progs/bosdec/sources/bosdec.src.
The library, bosdec.src (archived version called "bosdec.tank"),
generates valid input files for BIGBOSOR4. The archived versions
of these "fleshed out" libraries are called:
struct.tank, behavior.tank, bosdec.tank
struct.tank and behavior.tank are located in /home/progs/genoptcase
bosdec.tank is located in /home/progs/bosdec/sources]


COMMAND                         MEANING OF COMMAND

genprograms		FORTRAN software is compiled.

[The following might appear on your screen:]
-------------------------------------------------------------
The purpose of genprograms is to generate the executables from the
source files created/modified by the GENOPT user.

make: Nothing to be done for `genoptcase'. [in this example only]

Congratulations!  Your code compiled successfully.  You should
now check to make sure that you get correct results from a
simple test case with a known answer before attempting a more
complicated case.

Here is a list of all your newly created executables:
-rwxrwxr-x 1 bush bush 98115 Nov 16 07:12 autochange.x86_64
-rwxrwxr-x 1 bush bush 278397 Nov 16 05:44 begin.x86_64
-rwxrwxr-x 1 bush bush 152154 Nov 16 05:44 change.x86_64
-rwxrwxr-x 1 bush bush 164203 Nov 16 05:44 chooseplot.x86_64
-rwxrwxr-x 1 bush bush 179523 Nov 16 05:44 decide.x86_64
-rwxrwxr-x 1 bush bush 105256 Nov 16 05:44 mainsetup.x86_64
-rwxrwxr-x 1 bush bush 2115251 Nov 18 05:56 optimize.x86_64
-rwxrwxr-x 1 bush bush 134692 Nov 16 07:12 store.x86_64
-rwxrwxr-x 1 bush bush 72419 Nov 16 05:44 zeroit.x86_64

Next, type the command BEGIN to input data for a new case.
--------------------------------------------------------------

[However, even though the compilation appears (from the
congratulatory statement above) to have been successful,
the GENOPT user must inspect the file called "usermake.log"
to look for FORTRAN errors. Also, even if there are no
FORTRAN errors, there will probably exist a number of
logical errors that the GENOPT user will discover upon
trying to run a specific case for the first time. If there
are FORTRAN errors, the GENOPT user corrects them and then
executes "genprograms" again.]

[If everything appears to be okay it is time to test the
FORTRAN software created by the GENOPT user by running
a SPECIFIC case. In this example the SPECIFIC case is
called "test". Now the End user takes over. Initially
the GENOPT user and the End user are the same person
because initially there will doubtless exist many logical
errors to be eliminated before the processing of SPECIFIC
cases is assigned to a person different from the GENOPT
user. In fact, in most projects the GENOPT user and the
End user will be the same person. That is true in the
present "tank"/"test" case described here and in all
the GENOPT literature generated as of this writing.]


COMMAND                         MEANING OF COMMAND

begin			interactively provide input data
			for the GENOPT processor, BEGIN

[The following two files are created by execution of BEGIN:]
-----------------------------------------------------------
-rw-rw-r-- 1 bush bush 18649 Jan  6 06:45 test.BEG
-rw-rw-r-- 1 bush bush 17378 Jan  7 16:49 test.OPB
----------------------------------------------------------- 

[The file, test.BEG, is an "image" of the interactive
"BEGIN" session. test.BEG can be used for future executions
of BEGIN for the same SPECIFIC case. The file, test.OPB,
contains a summary of "BEGIN" data for the SPECIFIC case.]


COMMAND                         MEANING OF COMMAND

decide			interactively provide input data
			for the GENOPT processor, DECIDE

[The following two files are created by execution of DECIDE:]
-----------------------------------------------------------
-rw-rw-r-- 1 bush bush 17758 Dec 27 12:07 test.DEC
-rw-rw-r-- 1 bush bush 14510 Jan  7 16:49 test.OPD
-----------------------------------------------------------

[The file, test.DEC, is an "image" of the interactive
"DECIDE" session. test.DEC can be used for future executions
of DECIDE for the same SPECIFIC case. The file, test.OPD,
contains a summary of "DECIDE" data for the SPECIFIC case.]


COMMAND                         MEANING OF COMMAND

mainsetup		interactively provide input data
			for the GENOPT processor, MAINSETUP 

[The following file is created by execution of MAINSETUP:]
-----------------------------------------------------------
-rw-rw-r-- 1 bush bush 1059 Jan  9 06:08 test.OPT
-----------------------------------------------------------

[The file, test.OPT, is an "image" of the interactive
"MAINSETUP" session. test.OPT can be used for future
executions of MAINSETUP for the same SPECIFIC case.]

[Next, execute the GENOPT mainprocessor, which is called
"OPTIMIZE". During the initial phases in a GENOPT project
execute "OPTIMIZE" for a "fixed" (given) design, not for
optimization. For the analysis of a "fixed" design use the
analysis type index, ITYPE = 2, as input for MAINSETUP:
 2 $ Choose type of analysis (1=opt., 2=fixed, 3=sensit.) ITYPE
In other words, initially take baby steps in order more
easily to eliminate logical bugs in the "fleshed out" FORTRAN
libraries, struct.new and behavior.new and bosdec.src.]


COMMAND                         MEANING OF COMMAND

optimize		launch a "batch" execution of the	
                        GENOPT processor, OPTIMIZE (ITYPE=2)

[In the initial phases of a GENOPT project the "optimize"
execution will probably "bomb". The GENOPT user must eliminate
the cause of the "bomb", re-execute "genprograms", and re-execute
"optimize". The GENOPT user performs this cycle as many times
as necessary to obtain a successful execution of "optimize".]

[The following files are created by execution of OPTIMIZE
for a "fixed" design (ITYPE = 2 as input to MAINSETUP:]
-----------------------------------------------------------
-rw-rw-r-- 1 bush bush 125238 Jan  9 06:13 test.OPM

and:

-rw-rw-r-- 1 bush bush 101334 Jan  9 06:12 test.BEHX011
-rw-rw-r-- 1 bush bush 101334 Jan  9 06:13 test.BEHX012
-rw-rw-r-- 1 bush bush   5130 Jan  9 06:12 test.BEHX021
-rw-rw-r-- 1 bush bush   5130 Jan  9 06:13 test.BEHX022
-rw-rw-r-- 1 bush bush  68831 Jan  9 06:12 test.BEHX031
-rw-rw-r-- 1 bush bush  68831 Jan  9 06:13 test.BEHX032
-rw-rw-r-- 1 bush bush 101334 Jan  9 06:12 test.BEHX041
-rw-rw-r-- 1 bush bush 101334 Jan  9 06:13 test.BEHX042
-rw-rw-r-- 1 bush bush  59786 Jan  9 06:12 test.BEHX11
-rw-rw-r-- 1 bush bush  59786 Jan  9 06:13 test.BEHX12
-rw-rw-r-- 1 bush bush   4942 Jan  9 06:13 test.BEHX21
-rw-rw-r-- 1 bush bush   4942 Jan  9 06:13 test.BEHX22
-rw-rw-r-- 1 bush bush   5176 Jan  9 06:13 test.BEHX31
-rw-rw-r-- 1 bush bush   5176 Jan  9 06:13 test.BEHX32
-rw-rw-r-- 1 bush bush   5119 Jan  9 06:13 test.BEHX511
-rw-rw-r-- 1 bush bush   5119 Jan  9 06:13 test.BEHX512
-rw-rw-r-- 1 bush bush   5353 Jan  9 06:13 test.BEHX521
-rw-rw-r-- 1 bush bush   5353 Jan  9 06:13 test.BEHX522
-rw-rw-r-- 1 bush bush   5406 Jan  9 06:13 test.BEHX611
-rw-rw-r-- 1 bush bush   5406 Jan  9 06:13 test.BEHX612
-rw-rw-r-- 1 bush bush   5640 Jan  9 06:13 test.BEHX621
-rw-rw-r-- 1 bush bush   5640 Jan  9 06:13 test.BEHX622
-rw-rw-r-- 1 bush bush 101312 Jan  9 06:13 test.BEHX71
-rw-rw-r-- 1 bush bush 101312 Jan  9 06:13 test.BEHX72
-rw-rw-r-- 1 bush bush 107713 Jan  9 06:13 test.BEHX811
-rw-rw-r-- 1 bush bush 107713 Jan  9 06:13 test.BEHX812
-rw-rw-r-- 1 bush bush 107713 Jan  9 06:13 test.BEHX821
-rw-rw-r-- 1 bush bush 107713 Jan  9 06:13 test.BEHX822
-rw-rw-r-- 1 bush bush 107888 Jan  9 06:13 test.BEHX911
-rw-rw-r-- 1 bush bush 107888 Jan  9 06:13 test.BEHX912
-rw-rw-r-- 1 bush bush 107888 Jan  9 06:13 test.BEHX921
-rw-rw-r-- 1 bush bush 107888 Jan  9 06:13 test.BEHX922
-----------------------------------------------------------

[The file, test.OPM, lists the output from OPTIMIZE.
The GENOPT user must inspect this file carefully to
be certain that the results are reasonable. At this early
stage in the GENOPT project the GENOPT user will doubtless
discover that more revisions of the "fleshed out" libraries,
struct.new, behavior.new, and bosdec.src, are required.]

[The many files, test.BEHX*, are valid input files for
BIGBOSOR4. Details of what these files contain are provided
in the file, bigbosor4.input.test.BEHX.files. Also described in
the file, bigbosor4.input.test.BEHX.files, is the sequence of
BIGBOSOR4 executions required in the use of these test.BEHX*
files to obtain results, including plots, from BIGBOSOR4.
Please inspect the file, bigbosor4.input.test.BEHX.files.]


[After the GENOPT user has thoroughly de-bugged the new
FORTRAN software created by him/her in the "fleshed out"
libraries, struct.new, behavior.new, bosdec.src, he/she
is ready to do some optimization.]


COMMAND                         MEANING OF COMMAND

mainsetup               interactively provide input data
                        for the GENOPT processor, MAINSETUP,
			this time with the use of analysis
			type index, ITYPE = 1 (optimization)

optimize                launch a "batch" execution of the
                        GENOPT processor, OPTIMIZE

[For the SPECIFIC case called "test" the OPTIMIZE processor
requires about 20 minutes on the writer's superfast 64-bit
desk-top computer. In the optimization mode of execution,
the GENOPT processor, OPTIMIZE, produces the following two
files:]
----------------------------------------------------------
-rw-rw-r-- 1 bush bush 1562490 Jan  9 06:40 test.OPM
-rw-rw-r-- 1 bush bush 24489 Jan  9 06:40 test.OPP
----------------------------------------------------------

Near the end of the test.OPP file data such as the following
will be listed:

 ********** OBJECTIVE FOR   6 ITERATIONS *********
 total conductance into the tank: CONDCT =
  5.6663E+00  7.9732E+00  8.7266E+00  9.0540E+00  8.2210E+00  8.3451E+00
  Absolute values of maximum constraint gradients, GRDPLT =
  2.1194E+00  8.8661E+00  6.6150E+00  5.9323E+01  5.0250E+01  0.0000E+00

 ==============================================================
 ITERATION                                        NUMBER OF
  NUMBER      OBJECTIVE     THE DESIGN IS...   CRITICAL MARGINS
 --------------------------------------------------------------
 ------------------------------------------------------OPTIMIZE
     1         5.6663E+00      NOT FEASIBLE          13
     2         7.9732E+00      NOT FEASIBLE          11
     3         8.7266E+00      NOT FEASIBLE          11
     4         9.0540E+00      NOT FEASIBLE           9
     5         8.2210E+00      NOT FEASIBLE          10
     6         8.3451E+00     MOSTLY UNFEASIB         7
 =============================================================================


[In the initial phases of a GENOPT project the GENOPT user
should inspect both the *.OPM and *.OPP files. If everything
looks reasonable, the GENOPT user may next execute the GENOPT
processor called SUPEROPT. SUPEROPT executes OPTIMIZE in
a loop for a total of about 470 design iterations. For the
SPECIFIC case called "test" the SUPEROPT process requres
about 24 hours on the writer's superfast desk-top computer.]


COMMAND                         MEANING OF COMMAND

superopt		launch a "batch" execution of the
			GENOPT processor, SUPEROPT 

*************************** NOTE ********************************
In the process of launching each execution of SUPEROPT the End
user is prompted as follows:
-------------------------------------------------
Enter specific case name: test
Enter number of executions of OPTIMIZE
for each execution of AUTOCHANGE (5 or 6 or 7 or 8 or 9 or 10 or ....15):6
B (background), F (foreground): b
H (high) or L (low) priority: l
------------------------------------------------
In every execution of SUPEROPT during this study the End user (the writer)
chose six executions of OPTIMIZE for every execution of AUTOCHANGE.
*****************************************************************

[The GENOPT user can terminate the SUPEROPT execution at
any time if he/she wants to obtain details about the "best"
optimum design determined so far. He/she does not need to
wait until SUPEROPT finishes 24 hours later. The most
important file to inspect is the test.OPP file, especially
the part of the test.OPP file near its end where information
is provided about the best FEASIBLE design and the best
ALMOST FEASIBLE design. The test.OPM file is not as important
for SUPEROPT runs as the test.OPP file because test.OPM is
overwritten with each execution of OPTIMIZE in the SUPEROPT
loop. The test.OPP file contains results from all the many
executions of OPTIMIZE performed since the launching of the
SUPEROPT execution.]

[The GENOPT user or the End user can obtain plots of design
variables, and/or design margins, and and/or design objective
as functions of design iterations as follows:]


COMMAND                         MEANING OF COMMAND

chooseplot		Interactively choose what to plot
			with use of the GENOPT processor
			called CHOOSEPLOT.

[CHOOSEPLOT creates the following files:]
----------------------------------------------------------
-rw-rw-r-- 1 bush bush     222 Nov 19 04:03 test.CPL
----------------------------------------------------------
[In this particular example the test.CPL file contains only
three lines:]
-----------------------------------------------------------
 N  $ Do you want a tutorial session and tutorial output?
 N  $ Any design variables to be plotted v. iterations (Y or N)?
 N  $ Any design margins to be plotted v. iterations (Y or N)?
-----------------------------------------------------------
[Hence, only one plot will exist: the objective function versus
design iterations completed before termination of the SUPEROPT
run by the GENOPT user or End user before the completion of
the very long SUPEROPT execution.]


COMMAND                         MEANING OF COMMAND

diplot			obtain a postscript file, test.5.ps
gv test.5.ps		obtain the plot on your computer screen.

[The file, superoptobjective.png, contains the image of
this plot for a complete execution of SUPEROPT.]


[The GENOPT user or End user will probably next want to save
the "best" FEASIBLE or ALMOST FEASIBLE design after his/her
termination of the SUPEROPT execution or after SUPEROPT has
completed on its own 24 hours later. In order to do this the
GENOPT user or End user first obtains a list of the best
optimum design on his/her screen by looking near the end of
the test.OPP file. For example, here is such a list in the
SPECIFIC case called "test":]
------------------------------------------------------------
  VALUES OF DESIGN VARIABLES CORRESPONDING TO BEST FEASIBLE DESIGN
 VAR.   CURRENT
 NO.     VALUE            DEFINITION
  1    5.997E-02  thickness of the tank aft dome skin: THKAFT
  2    4.742E-02  thickness of the tank cylinder skin: THKMID
  3    3.622E-02  thickness of the forward tank dome skin: THKFWD
  4    8.839E+00  spacing of the tank orthogrid stringers: STRSPC
  5    8.839E+00  spacing of the tank orthogrid rings: RNGSPC
  6    1.409E-01  thickness of the tank orthogrid stringers: STRTHK
  7    1.000E+00  height of the tank orthogrid stringers: STRHI
  8    1.409E-01  thickness of the tank orthogrid rings: RNGTHK
  9    1.000E+00  height of the tank orthogrid rings: RNGHI
 10    1.500E+02  global axial coordinate of tank support ring: ZTANK(1 )
 11    4.500E+02  global axial coordinate of tank support ring: ZTANK(2 )
 12    8.283E+01  global axial coordinate of "ground": ZGRND(1 )
 13    5.097E+02  global axial coordinate of "ground": ZGRND(2 )
 14    6.000E+00  circ.angle (deg.) to pinned tank end of strut: ATANK(1 )
 15    6.000E+00  circ.angle (deg.) to pinned tank end of strut: ATANK(2 )
 16    4.500E+01  circ.angle to pinned "ground" end of strut: AGRND(1 )
 17    4.500E+01  circ.angle to pinned "ground" end of strut: AGRND(2 )
 18    7.261E+00  inner diam. of support tube active at launch: IDTUBE(1 )
 19    7.245E+00  inner diam. of support tube active at launch: IDTUBE(2 )
 20    3.000E+01  axial length of the propellant tank doubler: DUBAXL(1 )
 21    1.101E-01  max.thickness of the propellant tank doubler: DUBTHK(1 )
 22    3.151E-01  thickness of the tank reinforcement ring: TRNGTH(1 )
 23    1.576E+00  height of the tank reinforcement ring: TRNGHI(1 )
 24    6.514E-03  thickness of a lamina: THICK(1 )
 25    6.514E-03  thickness of a lamina: THICK(2 )
 26    6.514E-03  thickness of a lamina: THICK(3 )
 27    6.514E-03  thickness of a lamina: THICK(4 )
 28    6.514E-03  thickness of a lamina: THICK(5 )
 29    6.514E-03  thickness of a lamina: THICK(6 )
 30    6.495E-03  thickness of a lamina: THICK(7 )
 31    6.495E-03  thickness of a lamina: THICK(8 )
 32    6.495E-03  thickness of a lamina: THICK(9 )
 33    6.495E-03  thickness of a lamina: THICK(10)
 34    6.495E-03  thickness of a lamina: THICK(11)
 35    6.495E-03  thickness of a lamina: THICK(12)
 36    1.401E+01  layup angle: ANGLE(1 )
 37   -1.401E+01  layup angle: ANGLE(2 )
 38    6.353E+01  layup angle: ANGLE(3 )
 39   -6.353E+01  layup angle: ANGLE(4 )
 40    1.000E+01  layup angle: ANGLE(5 )
 41   -1.000E+01  layup angle: ANGLE(6 )
 42    6.012E+01  layup angle: ANGLE(7 )
 43   -6.012E+01  layup angle: ANGLE(8 )
 44    1.000E+01  layup angle: ANGLE(9 )
 45   -1.000E+01  layup angle: ANGLE(10)
 46    1.000E+01  layup angle: ANGLE(11)
 47   -1.000E+01  layup angle: ANGLE(12)
------------------------------------------------------------------------

[The GENOPT user or End user enters the appropriate values
during the iteractive session associated with the CHANGE
processor of GENOPT, as follows:


COMMAND                         MEANING OF COMMAND

change			Interactively provide the optimum 
                        design listed above with the use of
                        the GENOPT processor called CHANGE.

[CHANGE creates the following files:]
----------------------------------------------------------
-rw-rw-r-- 1 bush bush    8445 Nov 19 04:23 test.CHG
-rw-rw-r-- 1 bush bush   20332 Nov 19 05:51 test.OPC
----------------------------------------------------------

[The file, test.CHG, is an "image" of the interactive
"CHANGE" session. test.CHG can be used for future
executions of CHANGE for the same SPECIFIC case.

***************** IMPORTANT NOTE **********************
It cannot be overemphasized how important it is to archive
optimum designs via the use of CHANGE. Then, in the future,
it will be possible to use the previously determined
optimum design as a new "starting design" for possibly
further optimization under different conditions than those
that produced the optimum design saved in test.CHG.
*******************************************************

A run stream in which this is done is as follows:]

COMMAND                         MEANING OF COMMAND

cleanspec		Clean up SPECIFIC files.
begin			Execute the GENOPT processor BEGIN
			with use of test.BEG as the input
			file rather than provide data
			interactively one datum at a time.

change			Execute the GENOPT processor CHANGE
			with us of test.CHG as the input
			file rather than provide data
			interactively one datum at a time

decide			Execute the GENOPT processor DECIDE 
			with us of test.DEC as the input
			file rather than provide data
			interactively one datum at a time

mainsetup		Execute the GENOPT processor MAINSETUP 
			with us of test.OPT as the input
			file rather than provide data
			interactively one datum at a time

optimize (or superopt)	Launch a "batch" run of the GENOPT
			mainprocessor, OPTIMIZE (or SUPEROPT)


[Next, the GENOPT user or the End user will want to
perform the analysis of the optimum design with use of
the analysis type, ITYPE = 2, as input in MAINSETUP, that
is, the analysis of a "fixed" design rather than
optimization. In this sample runstream that would be
the analysis of the "fixed" design with the dimensions
given in the file, test.CHG.]



COMMAND                         MEANING OF COMMAND

change			Execute the GENOPT processor CHANGE
			with us of test.CHG as the input
			file rather than provide data
			interactively one datum at a time

mainsetup		Execute the GENOPT processor MAINSETUP
			with us of test.OPT as the input
			file rather than provide data
			interactively one datum at a time.
			Set analysis type, ITYPE = 2

optimize		Launch a "batch" run of the GENOPT
			mainprocessor, OPTIMIZE


[Next, the GENOPT user or the End user may want to obtain
various plots from BIGBOSOR4 corresponding to the various
behaviors represented by the BIGBOSOR4 input files, test.BEHX*,
listed above. These test.BEHX* files now pertain to the optimum
design obtained from SUPEROPT. Please see the file,
bigbosor4.input.test.BEHX.files, for details on how to do this.]
---------------------------------------------------------------

HISTORICAL FOOTNOTE CONCERNING CERTAIN DECEMBER 6 UPDATES (You
do not have to read this "historical" section; it's a detail
included here mostly so that I will be reminded of one of the
important things I did during the development of the "tank"
capability):

SUBROUTINE BOSDEC was modified after the run stream listed above
was executed. The modification was significant. The load components,
PRESS (uniform ullage pressure) and TNKCOOL (propellant tank cool-
down), were introduced into the BIGBOSOR4 models of the propellant
tank with attached springs (the models associated with *.BEHX01x
and *.BEHX041x, x = 1,2; x=load case). The "bosdec" modification
is as follows:
---------------------------------------------------------------
      DO 230 I = 1,NSEGS
         EXSKIN(I) = ETANK
         EYSKIN(I) = ETANK
         UXYSKN(I) = NUTANK
         GSKIN(I) = ETANK/(2.*(1.+NUTANK))
         A1SKIN(I) = ALTNK
         A2SKIN(I) = ALTNK
         SMSKIN(I) = DENTNK
         IDISAB(I) = 1
C BEG DEC 3, 2011
C        IF (INDX.EQ.4.OR.INDX.EQ.5.OR.INDX.EQ.6) IDISAB(I) = 0
         IF (INDX.EQ.5.OR.INDX.EQ.6) IDISAB(I) = 0
C END DEC 3, 2011
  230 CONTINUE
C
--------------------------------------------------------------

The main effects of the modification are:

1. The maximum and minimum loads in the struts are increased
somewhat. This affects primarily stress and buckling of the
struts.

2. The effective spring constants of the struts accounting
for the flexibility of the propellant tank change somewhat.
This affects primarily  the free vibration frequencies of
the strut-supported propellant tank.


TWO BIGBOSOR4/BOSDEC MODELS OF "LUMPING" THE PROPELLANT MASS
INTO THE MIDDLE LAYER OF THE PROPELLANT TANK WALL

The shell-of-revolution analyzer, BIGBOSOR4, does not handle
problems in which the density of the wall material varies
along the meridian of a given shell segment. However, in
the free vibration BIGBOSOR4 "tank" model the mass of the propellant
is "lumped" into one of the three layers (the middle layer)
of the propellant tank wall. For the two ellipsoidal end
domes the amount of propellant mass "lumped" into this
middle layer (which has constant thickness) should vary along
the meridian of each ellipsoidal dome because the radius
from the axis of revolution to the shell wall reference
surface varies along the meridian and the slope of the
shell wall varies along the meridian.

The formula for the effective added mass of the propellant,
rho(add), for a shell of one layer is:

rho(add) = 0.5*(r/t) x sqrt[1.-(dr/ds)^2] x rho(fluid)

in which r = radius at a meridional point from the axis of
revolution to the shell wall reference surface, t = wall
thickness at that meridional point, dr/ds = derivative of r
with respect to the meridional arc length "s", and rho(fluid)
is the mass density of the fluid in the tank. The formula
for the added mass, rho(add), is valid for a point on the
meridian, and rho(add) varies along any meridian of a shell
segment in which the radius, r, varies along the meridian.

For this "tank" project only, so-called "temporary" versions
of BIGBOSOR4 and SUBROUTINE BOSDEC were created. Optimized
designs of most of the specific cases were found from two
BIGBOSOR4/BOSDEC models:

(1) The "regular" model in which the "permanent" versions
of BIGBOSOR4 and SUBROUTINE BOSDEC are used, that is, the
model in which the effective density of shell wall and
"lumped" propellant must be constant within each shell segment.

(2) The "temporary" model in which the "temporary" versions
of BIGBOSOR4 and SUBROUTINE BOSDEC are used, that is, the
model in which the effective density of shell wall and
"lumped" propellant can vary along the meridian within each
shell segment.

APPENDIX 2 lists the FORTRAN differences between the "regular"
(permanent) model and the "temporary" model.

The "regular" BIGBOSOR4 model is stored in the files called
addbosor4.regular and bosdec.tank. The "temporary" model is
stored in the files called addbosor4.density.var and
bosdec.density.var.

In order to execute GENOPT/BIGBOSOR4 with the "regular"
(permanent) model, type the following:

cp /home/progs/genopt/case/tank/addbosor4.regular
   /home/progs/bosdec/sources/addbosor4.src

cp /home/progs/genopt/case/tank/bosdec.tank
   /home/progs/bosdec/sources/bosdec.src

then execute the GENOPT processor called "genprograms"
as follows:

/home/progs/genoptcase/genprograms

then run the specific case with use of the
"regular" model that has been compiled by
the GENOPT processor called "genprograms".


In order to execute GENOPT/BIGBOSOR4 with the "temporary"
model, type the following:

cp /home/progs/genopt/case/tank/addbosor4.density.var
   /home/progs/bosdec/sources/addbosor4.src

cp /home/progs/genopt/case/tank/bosdec.density.var
   /home/progs/bosdec/sources/bosdec.src

then execute "genprograms" as follows:

/home/progs/genoptcase/genprograms

then run the specific case with use of the
"temporary" model that has been compiled
by the GENOPT processor called "genprograms".

*************** IMPORTANT NOTE ********************
The temporary versions of BIGBOSOR4 and BOSDEC, when
executed with ITYPE = 2 (fixed design) in the *.OPT
file, produce the files, *.BEHXxxx, just as do the
permanent versions of BIGBOSOR4 and BOSDEC. However,
it is emphasized that the two files pertaining to
free vibration of the tank/strut system, *.BEHX11 and
*.BEHX12, when used as input files for BIGBOSOR4 in
the analyses described in the file,
bigbosor4.input.test.BEHX.files,
produce inappropriate results because the effective
mass of the tank wall does not include the "lumped"
mass of the propellant whenever the *.BEHX11 and *.BEHX12
files have been generated via the temporary versions
of BIGBOSOR4 and BOSDEC. Therefore, what you must NEVER
do is generate the *.BEHX11 and *.BEHX12 files with use
of the temporary BIGBOSOR4 and BOSDEC, then run the
"stand-alone" BIGBOSOR4 (which is always the permanent
version of BIGBOSOR4) using those *.BEHX11 and *.BEHX12
files as input to the stand-alone version of BIGBOSOR4.
All of the other *.BEHXxxx files generated via the
temporary versions of BIGBOSOR4 and BOSDEC are okay
because those models do not involve "lumping" the
propellant mass into the middle layer of the tank wall.
In order to get plots of the free vibration modes, you
must generate appropriate *.BEHX11 and *.BEHX12 files by
first copying the "permanent" versions of addbosor4
(addbosor4.regular) and bosdec (bosdec.tank) into
../bosdec/sources/addbosor4.src and ..bosdec/sources/bosdec.src,
respectively, then run "genprograms", and then execute the
case called "*" with use of ITYPE=2 in the *.OPT file.
Then, when you follow the directions listed in the file,
bigbosor4.input.test.BEHX.files,
you will obtain the plots you want.
***************************************************
==============================================================
