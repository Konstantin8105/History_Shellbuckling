 10.1  Are you correcting, adding to, or using an existing file?
 10.2   
       In this program, yes or no or help answers to prompts for your
       input must be in the form Y or N or H, respectively. (capital
       letter, one character only, please!)
 
       Usually, your answer will be N. However, if you are rerunning
       BEGIN or DECIDE or MAINSETUP or CHANGE, and you have a good
       partial or complete file NAME.BEG or NAME.DEC or NAME.OPT or
       NAME.CHG, respectively, and you want to complete your inter-
       active session or simply rerun BEGIN or DECIDE or MAINSETUP or
       CHANGE, then answer Y.
 
       Note that you may only add entries after the last entry in the
       existing file. In order to change the file in other respects,
       you must edit it using the VAX edit mode.
 
 20.1  Do you want a tutorial session and tutorial output?
 20.2
       If you answer Y, you will see explanations after
       most prompts. The prompts and further explanations of them
       will be reproduced on your output file.
 
 93.0 
       Now you start to provide input data. You will be prompted by
       short questions. If you need help, just type H as an
       answer to the prompt instead of the datum called for. In most
       instances you will then be given more information on the datum
       you must provide. It may be a good idea to run the tutorial
       option if you are a new user of this program.
 
 300.0 This is the DIPLOT program. It was written by Karen Neier for
       general use and modified by D. Bushnell for special application
       with GENOPT, in which it is used to plot design variables,
       design margins, and the objective for all design iterations.

 310.1 Choose device number (2 - 6) (Type H for HELP)
 310.2 
       Current choices for devices are:
  
          2  means  VT-100-R
          3  means  TEK 4114
          4  means  TEK 4105
          5  means  TEK 4107
          6  means  METAFILE (At Lockheed Dept. 93-30, the laser printer)

       If you wish to change this choice, you will have to reprogram
       SUBROUTINE DINIT accordingly.  SUB. DINIT is in the DIPLOT.NEW
       library.

 382.0 
       For optimized designs the design margins and objective may be
       sensitive to small changes in the design variables. This
       ITYPE = 3 analysis branch allows you to obtain plots of design
       margins and objective v. any design variable that you choose.
       (To get plots you execute OPTIMIZE followed by CHOOSEPLOT/DIPLOT).
 
       Next, you will be asked to select a design variable, its
       starting value VARBEG, its ending value VAREND, and the number
       of steps NSTEPS from the starting value to the ending value.

 384.1 Choose a design variable (1, 2, 3, ...), IBVAR
 384.2 
       Choose an integer from the left-hand column.
 
 386.1 Starting value of the design parameter, VARBEG
 386.2 
       Use starting and ending values that are not too far from
       the value you obtained via optimization.
 
 388.1 Ending value of the design parameter, VAREND
 388.2 
       Use starting and ending values that are not too far from
       the value you obtained via optimization.
 
 390.1 Do you want to use the default for the number of steps?
 390.2 
       The default value of the number of steps, NSTEPS, is 29
       If you do not want the default value, use a value for
       NSTEPS that is less than 29
 
 392.1 Number of steps from VARBEG to VAREND. NSTEPS
 392.2 
       NSTEPS must be less than or equal to 29   .

 400.0 
       You must provide input data, IBEHAV, for EACH LOAD SET.
       Provide IBEHAV for the next load set.
 
       Because of excessive time required for computer runs, you
       may not want to run all the analyses listed next.

       Please indicate, by choosing numbers at the left-hand margin,
       which of the analyses you do NOT want to run. Choose one at
       a time. 

       If you want to run ALL the analyses, just hit zero (0).

 405.1 Choose an analysis you DON'T want (1, 2,..), IBEHAV
 405.2 
       Choose an integer from the left-hand column.
       If you want to include ALL behaviors in your analysis,
       type zero (0)

 410.1 Any more analysis types NOT wanted (Y or N) ?
 510.1 Choose a decision variable (1,2,3,...)
 510.2 
       Use an index from the left-hand column of the table above.

 514.1 Any design variables to be plotted v. iterations (Y or N)?
 514.2 
       Usually you answer Y. However, you may have plotted all
       the design parameters you want, and still have more design
       margins to plot.  The plots will show the design variables you
       next choose versus design iterations from the beginning of the
       case through the iteration most recently completed. 

 515.1 Choose a variable to be plotted v. iterations (1,2,3,..)
 515.2 
       Use an index from the left-hand column of the table above.

 516.1 Any design margins to be plotted v. iterations (Y or N)?
 516.2 
       Usually you answer Y. However, you may have plotted all
       the design margins you want, and still have more design
       variables to plot.  The plots will show the design margins you
       next choose versus design iterations from the beginning of the
       case through the iteration most recently completed. 

 517.1 Choose a margin to be plotted v. iterations (1,2,3,..)
 517.2 
       Use an index from the left-hand column of the table above.

 520.1 Lower bound of variable no.
 530.1 Upper bound of variable no.

 533.0
       You will next be asked if this particular decision variable
       should have its movement during optimization cycles especially
       restricted. It is sometimes necessary to ensure that certain
       of the decision variables don't change too much in successive
       optimization cycles. This is often true for decision variables
       such as angles that may have widely separated lower and upper
       bounds (such as lower bound = 5.0 degrees and upper bound =
       90 degrees) and for which the behavior is quite sensitive to
       changes in this decision variable. In most cases you will
       probably answer "no" (n or N) to the following prompting
       question. However, if this decision variable is especially
       critical, you may well wish to answer "yes" (y or Y). If you
       answer y or Y you will then be asked to provide a maximum
       move for this especially critical decision variable. For
       example, for an angle in degrees you might well specify
       that the maximum move be 5.0 degrees in one optimization cycle.

 535.1 Do you want especially to restrict variable no.
 535.2 
       If you answer "yes" (y or Y), you will next be asked to
       provide the maximum amount by which this decision variable
       can change during the next optimization cycle.

 537.1 Maximum permitted change in variable no.
 537.2 
       If this decision variable is an angle in degrees, then
       specify something like 5.0 degrees.

 540.1 Any more decision variables (Y or N) ?
 544.1 Any more design variables to be plotted (Y or N) ?
 545.1 Any more margins to be plotted (Y or N) ?
 547.1 Give maximum value (positive) to be included in plot frame.
 547.2 
       Margins can vary widely. In order to prevent scaling problems
       in the plots, it is best to limit the magnitude of the maximum
       number to be included in the plot frame. 1 - 5 is a good number
       to use here. You might use a number such as 0.1 or 0.2 if many
       margins are clustered near zero and you want to see each of
       them more clearly on the plots.
 
 548.0
       Next, choose linked variables.
 
       A linked variable is a variable that is not a decision
       variable, but is expressed in terms of decision variables,
       thus:
   
        (linked variable)  =  C1*(decision variable no. j1)**D1
                             +C2*(decision variable no. j2)**D2
                             +C3*(decision variable no. j3)**D3
                             +etc (up to max. of 5 terms)
                             +C0
 
        in which C1, C2,..;  and C0, and D1, D2... are constants.
        For example, 
        suppose you have a problem in which the area of a plate
        is fixed, but either the length or width may be a decision
        variable. Suppose we arbitrarily choose the length to be
        the decision variable, then we know that
 
                     WIDTH = AREA/LENGTH
 
        From the general expression above, C0 = 0.0, C1 = AREA,
        and D1 = -1.  Decision variable no. j1 is LENGTH.

        NOTE: YOU MAY USE THE SIMPLE POLYNOMIAL LINKING JUST EXPLAINED
              OR YOU MAY DEFINE YOUR OWN LINKING EXPRESSION IN
              SUBROUTINE USRLNK OF THE BEHAVIOR.F FILE.

 550.1 Any linked variables (Y or N) ?
 550.2  
       A linked variable is a variable that is not a decision
       variable, but is expressed in terms of decision variables,
       thus:
   
        (linked variable)  =  C1*(decision variable no. j1)**D1
                             +C2*(decision variable no. j2)**D2
                             +C3*(decision variable no. j3)**D3
                             +etc (up to max. of 5 terms)
                             +C0
 
        in which C1, C2,..;  and C0, and D1, D2... are constants.
        For example, 
        suppose you have a problem in which the area of a plate
        is fixed, but either the length or width may be a decision
        variable. Suppose we arbitrarily choose the length to be
        the decision variable, then we know that
 
                     WIDTH = AREA/LENGTH
 
        From the general expression above, C0 = 0.0, C1 = AREA,
        and D1 = -1.  Decision variable no. j1 is LENGTH.
 
        NOTE: YOU MAY USE THE SIMPLE POLYNOMIAL LINKING JUST EXPLAINED
              OR YOU MAY DEFINE YOUR OWN LINKING EXPRESSION IN
              SUBROUTINE USRLNK OF THE BEHAVIOR.F FILE.

 560.1 Choose a linked variable (1,2,3,...)
 560.2 
       Use an index from the left-hand column of the table above.

 565.1 Choose type of linking (1=polynomial; 2=user-defined)
 565.2 
       If you choose user-defined linking you must modify the
       USRLNK subroutine in the BEHAVIOR.F file.  Then recompile
       using the "partial" option of the "GENPROGRAMS" command.
 
 570.1 To which variable is this variable linked?
 570.2 
       Pick an index from the left-hand column of the table above.
 
 580.1 Assign a value to the linking coefficient, C(j)
 580.2  
       A linked variable is a variable that is not a decision
       variable, but is expressed in terms of decision variables,
       thus:
   
        (linked variable)  =  C1*(decision variable no. j1)**D1
                             +C2*(decision variable no. j2)**D2
                             +C3*(decision variable no. j3)**D3
                             +etc (up to max. of 5 terms)
                             +C0
 
        in which C1, C2,..;  and C0, and D1, D2... are constants.
        For example, 
        suppose you have a problem in which the area of a plate
        is fixed, but either the length or width may be a decision
        variable. Suppose we arbitrarily choose the length to be
        the decision variable, then we know that
 
                     WIDTH = AREA/LENGTH
 
        From the general expression above, C0 = 0.0, C1 = AREA,
        and D1 = -1.  Decision variable no. j1 is LENGTH.
 
 584.1 To what power is the decision variable raised?
 584.2
       What is the value of D(j)?
  
 587.1 Any other decision variables in the linking expression?
 587.2 
       A general expression for a linked variable has the form:
   
        (linked variable)  =  C1*(decision variable no. j1)**D1
                             +C2*(decision variable no. j2)**D2
                             +C3*(decision variable no. j3)**D3
                             +etc (up to max. of 5 terms)
                             +C0
 
       in which C1, C2,..;  and C0, and D1, D2... are constants.
 
 588.1 Any constant C0 in the linking expression?
 588.2 
       A general expression for a linked variable has the form:
   
       (linked variable)  =  C1*(decision variable no. j1)**D1
                            +C2*(decision variable no. j2)**D2
                            +C3*(decision variable no. j3)**D3
                            +etc (up to max. of 5 terms)
                            +C0
 
       in which C1, C2,..;  and C0, and D1, D2... are constants.

 589.1 Give the value of C0 in the linking expression. C0
 589.2 
       A general expression for a linked variable has the form:
   
       (linked variable)  =  C1*(decision variable no. j1)**D1
                            +C2*(decision variable no. j2)**D2
                            +C3*(decision variable no. j3)**D3
                            +etc (up to max. of 5 terms)
                            +C0
 
       in which C1, C2,..;  and C0, and D1, D2... are constants.

 590.1 Any more linked variables (Y or N) ?
 595.0 
       Next, establish inequality relations among variables
       of the two forms:
 
        1.0 > f(v1,v2,v3,...)    or   1.0 < f(v1,v2,v3,...) 
 
       in which the expression f(v1,v2,v3,...) has the form:
 
         f(v1,v2,v3,...) = C0 +C1*v1**D1 +C2*v2**D2 +C3*v3**D3 + ...
                              +etc (up to max. of 15 terms).
 
       The variables, v1, v2, v3,..., can be any of the variables
       that are decision variables or potential candidates for
       decision variables or linked variables.
 
 600.1 Any inequality relations among variables? (type H)
 600.2 
       You may want to impose lower and upper bounds on linked
       variables, or you may want to force certain expressions
       involving combinations of variables to be larger than or
       less than certain values.  For example, you may want to
       force the height of a stiffener segment to be no more than
       15 times its total thickness. Or you may want the length
       of a plate always to be greater than 1.5 times its width.
       
       The inequality relations have either of the two forms:
        1.0 > f(v1,v2,v3,...)    or   1.0 < f(v1,v2,v3,...) 
       in which the expression f(v1,v2,v3,...) has the form:
         f(v1,v2,v3,...) = C0 +C1*v1**D1 +C2*v2**D2 +C3*v3**D3 + ...
                              +etc (up to max. of 15 terms).
       The variables, v1, v2, v3,..., can be any of the variables
       that are decision variables or potential candidates for
       decision variables or linked variables.
 
 601.1 Want to see an example of how to calculate C0, C1, D1,..?
 602.0
       For example, suppose that you want to impose the condition
       that the area of a rectangular plate be greater than 50.
       Let v1 = length of plate;  v2 = width of plate. You want
            v1*v2 > 50                              (1)
       The expression (1) must be expressed in the form
              1.0 > C0 + C1*v1**D1 + C2*v2**D2      (2)
       If we: (a) divide both sides of (1) by v2 (assume v2 is positive!);
              (b) subtract v1 from both sides of (1); and
              (c) add 1.0 to both sides of (1), we obtain
                    1.0 > 1.0 -v1 +50/v2            (3)
       From (3) we easily deduce that in (2): C0 = 1.0; C1 = -1.0;
       D1 = 1.0; C2 = 50; and D2 = -1.0.  Eq.(3) represents the
       first type of expression given above. The actual value of
       the constraint, CONSTR, used later by the optimizer would be
                  CONSTR = 2. - (1.0 -v1 +50/v2).
       This constraint is critical if its value is less than 1.0.
 
 603.1 Identify the type of inequality expression (1 or 2)
 603.2 
       The inequality relations have either of the two forms:
 
           Type 1 is:     1.0 > f(v1,v2,v3,...) 
 
           Type 2 is:     1.0 < f(v1,v2,v3,...) 
 
       in which the expression f(v1,v2,v3,...) has the form:
 
         f(v1,v2,v3,...) = C0 +C1*v1**D1 +C2*v2**D2 +C3*v3**D3 + ...
                              +etc (up to max. of 15 terms).
 
 604.0
       Now start building the expression: C0 +C1*v1**D1 +C2*v2**D2 +...
       You are allowed up to 45 terms in the expression, including C0.
 
 606.1 Give a value to the constant, C0
 606.2 
       The inequality relations have either of the two forms:
 
        1.0 > f(v1,v2,v3,...)    or   1.0 < f(v1,v2,v3,...) 
 
       in which the expression f(v1,v2,v3,...) has the form:
 
         f(v1,v2,v3,...) = C0 +C1*v1**D1 +C2*v2**D2 +C3*v3**D3 + ...
                              +etc (up to max. of 15 terms).
 
       The variables, v1, v2, v3,..., can be any of the variables
       that are decision variables or potential candidates for
       decision variables or linked variables.
 
 608.1 Choose a variable from the list above (1, 2, 3,...)
 608.2 
       Use an index from the left-hand column of the list above.
   
 610.1 Choose a value for the coefficient, C1
 610.2
       You are building the expression: C0 +C1*v1**D1 +C2*v2**D2 +...
 
 620.1 Choose a value for the power, D1
 620.2 
       You are building the expression: C0 +C1*v1**D1 +C2*v2**D2 +...
 
 630.1 Any more terms in the expression: C0 +C1*v1**D1 +C2*v2**D2 +...
 630.2
       You are allowed up to 45 terms in the expression, including C0.
 
 635.1 Choose a variable from the list above (1, 2, 3,...)
 635.2 
       Use an index from the left-hand column of the list above.
   
 640.1 Choose a value for the coefficient, Cn
 640.2
       You are building the expression: C0 +C1*v1**D1 +C2*v2**D2 +...
       You are allowed up to 45 terms in the expression, including C0.
 
 645.1 Choose a value for the power, Dn
 645.2 
       You are building the expression: C0 +C1*v1**D1 +C2*v2**D2 +...
       You are allowed up to 45 terms in the expression, including C0.
 
 650.1 Are there any more inequality expressions?
 650.2 
       The inequality relations have either of the two forms:
 
        1.0 > f(v1,v2,v3,...)    or   1.0 < f(v1,v2,v3,...) 
 
       in which the expression f(v1,v2,v3,...) has the form:
 
         f(v1,v2,v3,...) = C0 +C1*v1**D1 +C2*v2**D2 +C3*v3**D3 + ...
                              +etc (up to max. of 15 terms).
 
       The variables, v1, v2, v3,..., can be any of the variables
       that are decision variables or potential candidates for
       decision variables or linked variables.
 
 680.1 Any escape variables (Y or N) ?
 680.2 
       An escape variable is a variable that when increased 
       drives the design toward the feasible region. For example, in
       designs which are buckling-critical, local and general
       instability represent two constraint conditions that bound the
       feasible region. Increasing the thicknesses of any parts while
       keeping all other dimensions the same drives the design toward
       the feasible region (makes buckling less critical). Hence, a
       thickness should always be chosen as an escape variable. Other
       variables, such as winding angles, should  not be used
       as escape variables, since their increase might well result in
       a decrease in the buckling load, hence driving the design toward
       the infeasible region.

       NOTE: YOU MUST INCLUDE THE WORD "THICKNESS", SPELLED CORRECTLY,
             IN THE DEFINITIONS OF VARIABLES THAT ARE THICKNESSES!
             DOING THIS ALLOWS THE DEFAULT OPTION FOR THE CHOICE OF
             ESCAPE VARIABLES.
 
 682.1 Want to have escape variables chosen by default?
 682.2 
       Generally answer Y.  This code will then automatically choose
       as escape variables all of the thicknesses that are decision
       variables. This is usually the best strategy and use of the
       default option saves you the trouble of doing it interactively.
 
       NOTE: YOU MUST INCLUDE THE WORD "THICKNESS", SPELLED CORRECTLY,
             IN THE DEFINITIONS OF VARIABLES THAT ARE THICKNESSES!
             DOING THIS ALLOWS THE DEFAULT OPTION FOR THE CHOICE OF
             ESCAPE VARIABLES. THE CHOICE OF ESCAPE VARIABLES IS
             MADE BY SEARCHING OVER ALL DECISION VARIABLES AND CHOOSING
             ONLY THOSE WITH THE WORD "THICKNESS" IN THEIR DEFINITIONS.

 685.1 Choose an escape variable (1, 2, 3, . . .)
 685.2  
       An escape variable is a variable that when increased drives the
       drives the design toward the feasible region. For example, in
       designs which are buckling-critical, local and general
       instability represent two constraint conditions that bound the
       feasible region. Increasing the thicknesses of any parts while
       keeping all other dimensions the same drives the design toward
       the feasible region (makes buckling less critical). Hence, a
       thickness should always be chosen as an escape variable. Other
       variables, such as winding angles, should probably not be used
        as escape variables, since their increase might well result in
       a decrease in the buckling load, hence driving the design toward
       the infeasible region.
  
 687.1 Any more escape variables (Y or N) ?
 690.1 NLOADS= number of environments (e.g. loads) (usually 1)
 690.2 
        The thing you are designing may be subjected to a number
       of different environments during its lifetime. The optimum
       design should be feasible for all of the environments.
 
 700.1 NPRINT= output index (0=GOOD, 1=ok, 2=debug, 3=too much)
 700.2 
       Usually use 0  .
 
 710.1 Choose type of analysis (1=opt., 2=fixed, 3=sensit.) ITYPE
 710.2  
       ITYPE = 1  means an optimization analysis will be performed.
                  Make sure that you have chosen decision variables,
                  linked variables, and escape variables via DECIDE.
 
       ITYPE = 2  means analysis of a fixed design will be performed.
                  (no design iterations)

       ITYPE = 3 means that margins and objective will be calculated
                 with all design variables fixed except one user-selected
                 variable. Margins and the objective will be calculated
                 for a sequence of designs in which the user-selected
                 variable is incremented from a user-selected starting
                 value to a user-selected ending value.

 715.0
       Next you will be asked for the number of design iterations.
       This is the number of iterations corresponding to a single
       execution of "OPTIMIZE", not the total number of iterations
       to be processed for your entire case. It is almost always
       best to use a small number like 5 iterations. The best
       optimization strategy is explained in connection with Fig. 83
       on p. 582 of the long 1987 PANDA2 paper, "PANDA2 - Program
       for minimum weight design of stiffened, composite, locally
       buckled panels. Computers & Structures, Vol. 25, No. 4,
       pp. 469 - 605, 1987. You should get an optimum design by
       several executions of "OPTIMIZE" with 5 iterations in each
       execution. Better yet, use SUPEROPT. With many executions of
       "OPTIMIZE" and few design iterations with each execution you
       obtain the most efficient convergence to an optimum design.
       When you execute SUPEROPT you get more "starting" designs
       per SUPEROPT run when you use a small number like 5 for the
       number of iterations, therefore a more complete exploration of
       design space in the search for the best "global" optimum design.
       The developer of GENOPT almost always uses 5 iterations.

 720.1 How many design iterations in this run (3 to 25)?
 720.2 
       Choose a number between 3 and 25, usually 5 to 8.
       If the design margins seem to jump around quite a
       bit, or if the objective cycles from iteration set to
       iteration set, use a high number of iterations (25).

 723.1 Take "shortcuts" for perturbed designs (Y or N)?
 723.2 
       If you answer "Y" IFAST will be set to 1. Otherwise, IFAST = 0

       This prompt allows you to use IFAST in SUBROUTINE STRUCT or in one
       or more of the "behavior" subroutines, BEHXi, i = 1, 2, 3,...
       in order to speed up optimization cycles. It is usually best,
       however, to answer "N", since that choice leads to more accurate
       values for the gradients of the behavioral constraint conditions.
 
       For example, if you are computing buckling modal imperfection
       shapes: Do you want to recompute them for the PERTURBED designs
       or do you want to use the same buckling modal imperfection shapes
       computed for the UNPERTURBED (current) design for the PERTURBED
       designs also? Recomputing often means higher constraint gradients
       but usually leads to better "global" optimum designs.

 725.1 Choose 1 or 2 or 3 or 4 or 5 for IDESIGN
 725.2 
       IDESIGN controls the quality of the best acceptable design,
       as follows:

       IDESIGN  accept only the best "---" design   minimum allowable
                                                     design margin
        1     "FEASIBLE"                                -0.01
        2     "FEASIBLE or ALMOST FEASIBLE"             -0.05
        3     "FEASIBLE or ALMOST FEASIBLE or
               MILDLY UNFEASIBLE"                       -0.10
        4     "FEASIBLE or ALMOST FEASIBLE or
               MILDLY UNFEASIBLE or MORE UNFEASIBLE"    -0.15
        5     "FEASIBLE or ALMOST FEASIBLE or
               MILDLY UNFEASIBLE or MORE UNFEASIBLE     -0.20
               or MOSTLY UNFEASIBLE"

       These choices are permitted because there are many cases
       for which design iterations "wallow" in a region of design
       space for which the design is in the range from "ALMOST
       FEASIBLE" to "MOSTLY UNFEASIBLE". The best "MOSTLY
       UNFEASIBLE" design may be a lot better (e.g. weigh much less)
       than the best "ALMOST FEASIBLE" design, and the GENOPT user
       may be willing to accept a few "MOSTLY UNFEASIBLE" margins,
       depending upon what particular behavior(s) are "MOSTLY
       UNFEASIBLE". For example, in the design of a shell structure
       for which the maximum stress is generated mostly from bending,
       the GENOPT user may feel that there is considerable residual
       strength in the shell even if its extreme fibers are stressed
       well beyond their elastic limit. Hence, if the behavioral
       constraint is violated because the maximum allowable elastic
       stress has been exceeded, this GENOPT user may feel that the
       optimized design will still be safe.

 730.0 
       Next, choose a control for move limits to be used during
       optimization cycles. By "move limits" we are referring to
       the size of the boxes that appear in Fig. 2 of the paper,
       "GENOPT - a program that writes user-friendly optimization code",
       Int. J. Solids and Structures, Vol. 26, pp 1173- 1210, 1990.
       You are given five choices: IMOVE = 1 or 2 or 3 or 4 or 5:

       IMOVE = 1 means SMOVE = 0.10
       IMOVE = 2 means SMOVE = 0.50
       IMOVE = 3 means SMOVE = 0.01
       IMOVE = 4 means SMOVE = 0.02
       IMOVE = 5 means SMOVE = 0.05
       IMOVE = 6 means SMOVE = 0.005

       Small SMOVE (initial move limit) keeps the boxes small and
       leads to the requirement for many "OPTIMIZE" commands to
       obtain an optimum design; the "conservative" approach may
       be boring, but it may be the most reliable.  "Liberal" move
       limits allow bigger boxes, generally leading to the need for
       fewer "OPTIMIZEs".  However, the decision variables may
       jump around a lot and have difficulty converging to those
       corresponding to an optimum design.

       THE BEST CHOICE INITIALLY IS TO USE IMOVE = 1

       For early optimization cycles you can choose "liberal" move
       limits, changing to more "conservative" move limits after
       several "OPTIMIZEs".

       In practical problems (such as realistic design problems
       as opposed to mathematical "toy" problems) it is best to
       choose "conservative" move limits.

 740.1 Choose 1 or 2 or 3 or 4 or 5 or 6 for move limits, IMOVE
 740.2 
       IMOVE = 1 means that decision variables will generally
                 change by less than 10 percent of their current
                 values in each optimization cycle (except for
                 occasional "jumps" that may occur on the initial
                 cycle corresponding to each "OPTIMIZE" command).
                 **** Ordinarily you should use this choice. ****

       IMOVE = 2 means that decision variables will generally
                 change by less than 50 percent of their current
                 values in each optimization cycle (except for
                 occasional "jumps" that may occur on the initial
                 cycle corresponding to each "OPTIMIZE" command).

       IMOVE = 3 means that decision variables will generally
                 change by less than 1.0 percent of their current
                 values in each optimization cycle (except for
                 occasional "jumps" that may occur on the initial
                 cycle corresponding to each "OPTIMIZE" command).
                 You may want to use this choice: 1. if you already
                 have a "global" optimum design from a SUPEROPT run,
                 and 2. you want to explore more in the immediate
                 neighborhood of the "global" optimum that you have
                 already determined from your previous SUPEROPT run.

       IMOVE = 4 means that decision variables will generally
                 change by less than 2.0 percent in each optimization
                 cycle. See "IMOVE = 3" for more.

       IMOVE = 5 means that decision variables will generally
                 change by less than 5.0 percent in each optimization
                 cycle. See "IMOVE = 3" for more. You may want to
                 use this option if the margins are "jumpy" from
                 optimization cycle to cycle.

       IMOVE = 6 means that decision variables will generally
                 change by less than 0.50 percent of their current
                 values in each optimization cycle.

 742.1 Do you want default (RATIO=10) for initial move limit jump?
 742.2 
       In the first optimization cycle following each "OPTIMIZE"
       command the upper and lower bounds for each decision variable
       (x) for that cycle may be expanded ("jumped").  Whether or not
       this "move limit jump" occurs depends on the RATIO of the
       absolute values of the upper (xmax) and lower (xmin) bounds
       that were established by the user in "DECIDE" to the current
       value of the decision variable:

       If abs(xmax/x)/2**k > RATIO the current upper bound is expanded.
       If abs(xmin/x)/2**k > RATIO the current lower bound is expanded.

       in which k represents the number of times a "jump" has occurred
       in previous executions of "OPTIMIZE" since the last time "DECIDE"
       or "CHANGE" were used.  The default value of RATIO is 10.

       The purposes of the "move limit jump" are: (1) to enable decision
       variables that are near zero to escape this neighborhood,  and
       (2) to permit exploration of an expanded segment of the domain
       of the decision variable in the search for an optimum.

       If you want to prevent the "jump" set RATIO very large.
      
 743.1 Provide a value for the "move limit jump" ratio, RATIO
 743.2 
       If zero is included in the domain of any decision variable
       it may be best to use the default value, RATIO = 10.

       If any of your decision values has lower and upper bounds
       that span many orders of magnitude, it may be best to set
       RATIO to a large number. 

       If in doubt, use the default value.

 745.1 Do you want the default perturbation (dx/x = 0.05)?
 745.2 
       See Fig. 1 and associated discussion on p. 1179 of the paper
       "GENOPT - a program that writes user-friendly optimization code",
       Int. J. of Solids and Structures, Vol. 26, pp 1173- 1210, 1990.
       In order to get gradients of the behavioral constraints the
       decision variables for the current design are perturbed one
       at a time and the behavior is calculated for each perturbation.
       The default perturbation is five per cent of the value of
       each decision variable, x(i), i = 1, 2, 3... NDV.

       Usually you will answer Y.  However, if there is difficulty
       obtaining convergence to an optimum, or if the constraint
       conditions jump around a lot from design iteration to design
       iteration, then you might want to try a smaller perturbation,
       such as 0.01 or 0.005.  Do not use a perturbation larger than
       the default value of 0.05.

 746.1 Amount by which decision variables are perturbed, dx/x
 746.2 
       Try 0.01 or 0.005.

 747.1 Do you want to have dx/x modified by GENOPT?
 747.2 
       For ordinary structures problems you should probably
       answer N .  If you answer Y GENOPT will modify the
       size of the perturbation, dx/x, by a factor that depends
       on the history of the evolution of the design during
       optimization cycles: the perturbation will be increased
       by the ratio XAVE(IDV)/X(IDV), in which XAVE(IDV) is the
       average value of the IDVth decision variable over the
       last several design cycles and X(IDV) is the current
       value of that decision variable. If XAVE(IDV)/X(IDV) is
       less than 1.0, then the perturbation dx/x is not modified.

 748.1 Do you want to reset total iterations to zero (Type H)?
 748.2 
       GENOPT accumulates results from all iterations from the
       start of the case. These results can be plotted via the
       processors CHOOSEPLOT and DIPLOT.  It is possible that
       you may no longer want to plot results from previous runs;
       you may want to make a "fresh" start, but with use of the
       current design state rather than the original design
       state from the NAME.BEG file.  You can do this by answering
       Y to this question.  Then ITRTOT will be set to zero.
       Likely occasions to reset ITRTOT to zero are:
       1. If you started from a very bad design state;
       2. If you used CHANGE and you don't want previous results
          to show on the plots;
       3. If the total number of iterations is approaching the
          maximum allowable value of 200;
       4. If you already have lots of iterations and the plots
          look too messy.

       NOTE: DON'T FORGET TO CHANGE THE ANSWER BACK TO "N" AFTER
             THE NEXT "OPTIMIZE" RUN. OTHERWISE ITERATIONS FROM
             MULTIPLE "OPTIMIZEs" WILL NOT ACCUMULATE.

 749.1 Choose IAUTOF=1 or 2 or 3 or 4 or 5 or 6 or 7 to change X(i)
 749.2
       X(i) is the vector of decision variables. In AUTOCHANGE the
       decision variables, X(i), i = 1, 2, ... NDEC, are changed
       in one of the six following ways, that is, the index
       you must provide now (named "IAUTOF") can be one of the
       following: 1 or 2 or 3 or 4 or 5 or 6:

       If IAUTOF = 1 the formula used to change the vector X(i)
       is as follows:

          X(I) = Y(I)*(1. + DVARS(I))

       in which Y(I) is the original vector of decision variables,
       DVARS(I) is given by DVARS(I) = 2.0*DVAR(I) - 0.5, and
       DVAR(I) is a vector of random numbers between 0. and 1.0.
       This is the only formula that existed before August, 2009,
       when no index, IAUTOF, existed.

       If IAUTOF = 2 the formula used to change the vector X(i)
       in AUTOCHANGE is the same as for IAUTOF = 1 except that
       DVARS(I) =1.5*DVAR(I)-0.5 instead of DVARS(I) =2.0*DVAR(I)-0.5.

       If IAUTOF = 3 the formula used to change the vector X(i)
       in AUTOCHANGE is as follows:

          X(I) = (VUB(I) - VLB(I))*DVAR(I) + VLB(I)

       in which VUB(I) is the vector of upper bounds of the decision
       variables, VLB(I) is the vector of lower bounds of the decision
       variables, and DVAR(I) is a vector of random numbers between 0.0
       and 1.0. (DVAR(I) is the same for IAUTOF = 1 or 2 or 3). The
       choice, IAUTOF = 3, may work well if there do not exist huge
       differences between VUB(I) and VLB(I), I = 1, 2, ... NDEC, in
       which NDEC is the number of decision variables.

       If IAUTOF = 4 or 5 or 6 the formula used to change the vector
       X(i) in AUTOCHANGE is as follows:
       For IAUTOF = 4: X(I) = Y(I)*(1. + 0.7*DVARS(I))
       For IAUTOF = 5: X(I) = Y(I)*(1. + 0.4*DVARS(I))
       For IAUTOF = 6: X(I) = Y(I)*(1. + 0.2*DVARS(I))
       in which DVARS(I) =1.5*DVAR(I)-0.5 and DVAR is the same as
       for IAUTOF = 1, 2, or 3. IAUTOF = 4 or 5 or 6 might be used
       in cases when it is useful to search for another optimum design
       in increasingly restricted neighborhoods of the local optimum
       design, Y(i), that exists just before the execution of
       AUTOCHANGE.

       IF IAUTOF = 7 the formula used to change the vector X(i)
       in AUTOCHANGE is the same as for IAUTOF = 2.

       The preferred choice is IAUTOF = 1 . However, there may be some
       global optimization problems for which either IAUTOF = 2 or
       IAUTOF = 3 are better choices. SUGGESTION: Optimize first with
       IAUTOF = 1, then re-optimize with IAUTOF = 2 and then possibly
       re-optimize again with IAUTOF = 3. Then try IAUTOF = 4 or 5
       or 6 if the previous choices of IAUTOF have not worked well.
 
 750.0 
       This program permits you to change certain quantities without
       starting over from the beginning (without having to use BEGIN).
   
       Parameters that you can change are segregated into three sets:
   
          1. parameters that are "elegible" to be decision variables;
          2. parameters that are always considered to be fixed
             during design iterations: they are not elegible
             to be decision variables;
          3. parameters that describe the environment (loads, temps)
          4. parameters that are allowables, such as max. stress.
          5. parameters that are factors of safety.
 
       You will next be asked if you want to change any parameters in
       set no. 1, and if so, which; then you will be asked the same
       questions relative to parameter sets  2, 3, 4, and 5.
 
 760.1 Do you want to change any values in Parameter Set No. 1?
 760.2  
       Parameter Set No. 1 contains all parameters that are elegible
       to be decision variables. (Note that they may not actually be
       decision variables; they are merely elegible to be so.)
   
 770.1 Number of parameter to change (1, 2, 3, . .)
 770.2 
       Choose an index from the left-most column in the above table.
 
 780.1 New value of the parameter
 780.2 
       Remember to change lower and upper bounds via DECIDE if such
       a change is required to be consistent with the new value of
       the parameter.
 
 790.1 Want to change any other parameters in this set?
 800.1 Do you want to change values of any "fixed" parameters?
 800.2 
       This means changing values of parameters that can never be
       decision variables, that is parameters that remain constant
       during optimization and are not among the set of parameters
       from which decision variables are allowed to be selected.
 
 810.1 Do you want to change any loads?
 810.2
       What is mean here is any parameters that characterize the
       environment (loads, temperatures)
 
 820.1 Do you want to change values of allowables?
 820.2 
       Allowables include parameters such as maximum allowable stress,
       minimum allowable frequency, maximum allowable displacement, etc.
       We are not referring here to lower and upper bounds of decisiion
       variables, which can only be changed by rerunning DECIDE.
 
 830.1 Do you want to change any factors of safety?
 830.2 
       The factors of safety are related to behavioral variables,
       such as stress, buckling load factors, frequency, etc.
 
 850.1 Do you want to get more plots before your next "SUPEROPT"?
 850.2  
       Make sure to get all the plots you want before executing
       SUPEROPT again.  If you answer N , the total number of design
       iterations will get reset to zero, and the design history will
       be lost. If your answer Y, the total number of design iterations
       will not be reset to zero. (However, in that case a subsequent
       execution of SUPEROPT will not yield any useful information).

       Just make sure you do all the CHOOSEPLOT/DIPLOT executions you
       need to before you answer N .  If this is the last set of plots
       you need from the previous execution of SUPEROPT, then answer N 

 900.0 DUMMY
