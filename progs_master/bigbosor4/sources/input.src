C=DECK      INPUT
      PROGRAM INPUT
C+---------------------------------------------------------------------+
C+---------------------------------------------------------------------+
#if hp700
$hp9000_800 intrinsics
#endif
C
C  PURPOSE IS TO ALLOW USER TO PROVIDE INPUT DATA FOR BOSOR4
C  INTERACTIVELY.
C
      CHARACTER*1 ANS, upcase
      CHARACTER*28 CASE
#if cnvx
      external signal_handler
      integer dummyint, signal
      dummyint = signal(2, signal_handler, -1)
#endif
#if sgi
      integer signal_handler
      external signal_handler
      integer dummyint, signal
      dummyint = signal(2, signal_handler, -1)
#endif
#if star
      integer signal_handler
      external signal_handler
      call signal(2, signal_handler)
#endif
C
#if hp700
C     call getarg(2, case)
      call getarg(1, case)
#else
      call getarg(1, case)
#endif
c
C BEG JULY 1989
C  VAX VERSION OPEN STATEMENT...
C        OPEN(UNIT=10,FILE='FOR010.DAT',STATUS='SCRATCH')
C UNIX VERSION OPEN STATEMENT...
         OPEN(UNIT=10,STATUS='SCRATCH')
C END JULY 1989
C
      WRITE(6,'(1X,A)')' '
      WRITE(6,'(1X,A)')' Do you want to provide data for a new'
      WRITE(6,'(1X,A)')' structural segment, or to add data to'
      WRITE(6,'(1X,A)')' that for an existing structural segment?'
      WRITE(6,'(1X,A,$)')' (Please answer Y or N) '
      READ(5,'(A)') ANS
C
      IF (upcase(ANS).EQ.'Y') GO TO 10
      WRITE(6,'(1X,A)')' '
      WRITE(6,'(1X,A)')' Have you supplied data for all structural'
      WRITE(6,'(1X,A,$)')' segments ? (Please answer Y or N) '
      READ(5,'(A)') ANS
      IF (upcase(ANS).EQ.'N') GO TO 10
      WRITE(6,'(1X,A)')' '
      WRITE(6,'(1X,A,$)')' Do you want to supply global data (Y or N)? '
      READ(5,'(A)') ANS
      IF (upcase(ANS).EQ.'N') GO TO 20
      GO TO 15
C
   10 CONTINUE
      CALL SEGMT(CASE)
C
      WRITE(6,'(1X,A)')' '
      WRITE(6,'(1X,A,$)')' Want to add more structural segments? '
      READ(5,'(A)') ANS
      IF (upcase(ANS).EQ.'Y') GO TO 10
      WRITE(6,'(1X,A)')' '
      WRITE(6,'(1X,A)')' Have you supplied data for all structural'
      WRITE(6,'(1X,A,$)')' segments? (Please answer Y or N) '
      READ(5,'(A)') ANS
      IF (upcase(ANS).EQ.'N') GO TO 20
   15 CONTINUE
      WRITE(6,'(1X,A)')' '
      WRITE(6,'(1X,A)')' Next, give global input and input for'
      WRITE(6,'(1X,A)')' constraint conditions. Do you want to'
      WRITE(6,'(1X,A,$)')' supply these data now (Y or N)? '
      READ(5,'(A)') ANS
      IF (upcase(ANS).EQ.'N') GO TO 20
C
      CALL BOUNDY(CASE)
C
   20 CONTINUE
C
      WRITE(6,'(1X,A)')' '
      WRITE(6,'(1X,A)')' If you have completed input for all structural'
      WRITE(6,'(1X,A)')' segments and for the constraint conditions,'
      WRITE(6,'(1X,A)')' next give the command ASSEMBLE  .'
C
      END
C
C
C
C=DECK      BOUNDARY
C
C  PURPOSE IS TO SET UP DATA FOR GLOBAL DATA AND BOUNDARY CONDITIONS.
C
      SUBROUTINE BOUNDY(CASE)
C+---------------------------------------------------------------------+
C+---------------------------------------------------------------------+
      COMMON/PRMFIL/IFILE,IFILE2,IOUT,IPRM(5)   
      COMMON/PRMOUT/IFILE3,IFILE4,IFILE8,IFILE9,IFIL11   
      COMMON/INDAT/INFILE
      CHARACTER*4 ANSOUT,  CHARAC
      CHARACTER*28 CASE
      LOGICAL ANSL1     
      logical exists
C
      IFILE = 2   
      IFILE2= 4   
      IFILE3 = 7  
C
C FOLLOWING USED FOR VAX/VMS..
C     OPEN(UNIT=2,FILE='BOSOR4:PROMPT.DAT',STATUS='OLD',READONLY)
C     OPEN(UNIT=4,FILE='BOSOR4:PROMPT2.DAT',STATUS='OLD',READONLY)
C     OPEN(UNIT=7,FILE='BOSOR4:PROMPT3.DAT',STATUS='OLD',READONLY)
C END VAX/VMS OPEN STATEMENTS
C
C FOLLOWING USED FOR UNIX...
      OPEN(UNIT=IFILE,FILE='PROMPT.DAT',STATUS='OLD')
      OPEN(UNIT=IFILE2,FILE='PROMPT2.DAT',STATUS='OLD')
      OPEN(UNIT=IFILE3,FILE='PROMPT3.DAT',STATUS='OLD')
#if rs6k
      rewind(IFILE)
      rewind(IFILE2)
      rewind(IFILE3)
#endif
C END UNIX OPEN STATEMENTS
C
      inquire(FILE=case, EXIST=exists)
      if (exists) then
	OPEN(UNIT=17, FILE=case, STATUS='OLD')
#if rs6k
        rewind(17)
#endif
      else
	OPEN(UNIT=17, FILE=case, STATUS='NEW')
      endif
C
C BEG JAN 2010
      CALL NFILEB(IFILE3,INFILE,IOUT,NSEG,INDIC,IPRE,INDSIG,CASE,
     1            IPRISM)
C END JAN 2010
C
      IF (INDSIG.EQ.1.AND.INDIC.EQ.3) INDIC = 4
C
C
C BEG JAN 2010
      CALL GLOB2(2,INDSIG,INDIC,THETAM,IPRE,NSEG,IPRISM)
C END JAN 2010
C
      REWIND IFILE
      CALL DATUM (IFILE,60,0,0,INT,REALL,CHARAC,IOUT,0,1)   
C     
    2 CONTINUE    
      DO 100 ISEG = 1,NSEG    
C     
      WRITE(6,*)' CONSTRAINT CONDITIONS FOR SEGMENT NO. ISEG =',ISEG    
      WRITE(IOUT,35) ISEG,ISEG,ISEG,ISEG
   35 FORMAT(6X,'H',9X,'$'/
     1 6X,'H',9X,'$ CONSTRAINT CONDITIONS FOR SEGMENT NO.',4I5)
      REWIND IFILE
      CALL POLES
      CALL BOUND
      CALL JUNCTQ
C
  100 CONTINUE
C
C BEG FEB 2014
C     CALL RIGID(INDIC)
      CALL RIGID(2,INDIC)
C END FEB 2014
      CALL GLOB3(2,INDIC,THETAM,IPRE,NSEG)
C
      CLOSE(UNIT=IOUT,STATUS='KEEP')
      RETURN
      END
C=DECK      NFILEB
C BEG JAN 2010
      SUBROUTINE NFILEB(IFILE3,INFILE,IOUT,NSEG,INDIC,IPRE,INDSIG,
     1                  FNAME,IPRISM)
C END JAN 2010
C+---------------------------------------------------------------------+
C+---------------------------------------------------------------------+
C
C    PURPOSE IS TO NAME THE OUTPUT FILE AND OPEN FILES.
C
C  INPUT DATA...
C
C  IFILE3 = FILE WHERE PROMPTS ARE STORED (PROMPT3.DAT)
C  INFILE = UNIT NUMBER FOR INPUT DATA (5 OR 25)
C
C  OUTPUT DATA...
C
C  IOUT   = UNIT NUMBER FOR IMAGE OF INTERACTIVE SESSION
C  NSEG  = NUMBER OF SEGMENTS (FILE VERSION NUMBER MINUS ONE)
      CHARACTER*33 VNAME
C BEG JUL 2001
C     character*2 CN
      character*3 CN
C END JUL 2001
      character*28 FNAME
      CHARACTER*4 ANSOUT,CHARAC
      LOGICAL ANSL1
C
      IOUT = 17
      INFILE = 5
      REWIND IFILE3
      CALL DATUM(IFILE3,580,1,1,NSEG,REALL,CHARAC,10,0,1)
C BEG JAN 2010
      CALL RENEW(0,INDSIG,INDIC,THETAM,IPRE,IPRISM)
C END JAN 2010
C
      N = NSEG + 1
      IF(N.GE.10) THEN
C BEG JUL 2001
         IF (N.GE.100) THEN
            WRITE(CN,'(I3)') N
         ELSE 
            WRITE(CN,'(I2)') N
         ENDIF 
C END JUL 2001
      ELSE
         WRITE(CN,'(I1)') N
      ENDIF
C
      I=INDEX(FNAME,' ')
      IF(I.NE.0) THEN
         VNAME=FNAME(:I-1)//'.SEG'//CN
      ELSE
         VNAME=FNAME//'.SEG'//CN
      ENDIF
C
      CALL REREAD(IOUT,IFILE3,INFILE,VNAME)
C
      RETURN
      END
C=DECK      RENEW
C BEG JAN 2010
      SUBROUTINE RENEW(IFLAG,INDSIG,INDIC,THETAM,IPRE,IPRISM)
C END JAN 2010
C+---------------------------------------------------------------------+
C+---------------------------------------------------------------------+
C
C   PURPOSE IS TO RE-ESTABLISH INDIC, THETAM, IPRE, and IPRISM, WHICH ARE
C   THE ONLY FOUR PARAMETERS THAT ARE NEEDED WHEN EACH SEGMENT IS READ IN.
C
      COMMON/PRMFIL/IFILE,IFILE2,IOUT,IPRM(5)   
      COMMON/PRMOUT/IFILE3,IFILE4,IFILE8,IFILE9,IFIL11   
      COMMON/INDAT/INFILE
      CHARACTER*4 CHARAC
C
      REWIND IFILE
        CALL DATUM(IFILE,2,1,2,INDIC,REALL,CHARAC,10,0,1)   
        IF(INDIC.EQ.4)CALL DATUM(IFILE,6,1,2,IPRE,REALL,CHARAC,10,0,1)  
C BEG JAN 2010
      IF (IFLAG.EQ.0.AND.INDIC.EQ.4.AND.IPRE.EQ.0) THEN
         CALL DATUM(IFILE,40,1,2,IPRISM,REALL,CHARAC,10,0,1)
         REWIND IFILE
      ENDIF
C END JAN 2010
        IF (INDIC.NE.4) IPRE = 1    
        INDSIG = 0
        IF (INDIC.EQ.4.AND.IPRE.EQ.1) INDSIG = 1
C
      THETAM = 0.
C BEG JAN 1993
      IF (INDIC.LT.3.OR.IFLAG.EQ.0) RETURN
C END JAN 1993
      IF (INDIC.EQ.4.AND.IPRE.EQ.0) RETURN
    9 CONTINUE    
      CALL DATUM(IFILE,29,1,2,INT,THETAM,CHARAC,10,0,1)   
      IF (THETAM.LT.5.0.OR.THETAM.GT.180.1) THEN
       WRITE(6,*)' THETAM MUST BE IN THE RANGE FROM 5 TO 180 DEG.'
       BACKSPACE(IOUT)  
       REWIND IFILE     
       GO TO 9    
      ENDIF 
      RETURN
      END
C
C
C
C=DECK      SEGMENT
C
C  PURPOSE IS TO SET UP DATA FOR A SINGLE SEGMENT.
C
      SUBROUTINE SEGMT(CASE)
C+---------------------------------------------------------------------+
C+---------------------------------------------------------------------+
      COMMON/PRMFIL/IFILE,IFILE2,IOUT,IPRM(5)   
      COMMON/PRMOUT/IFILE3,IFILE4,IFILE8,IFILE9,IFIL11   
      COMMON/INDAT/INFILE
      COMMON/SEGEND/R1,Z1,R2,Z2,IFLAG1,IFLAG2,IFLAG3,IFLAG4,ISEG
      CHARACTER*4 ANSOUT,CHARAC
      CHARACTER*28 CASE
      LOGICAL ANSL1     
      logical exists
C
      IFLAG1 = 1
      IFLAG2 = 0
      IFLAG3 = 0
      IFILE = 2   
      IFILE2= 4   
      IFILE3 = 7  
C
C FOLLOWING USED FOR VAX/VMS..
C     OPEN(UNIT=2,FILE='BOSOR4:PROMPT.DAT',STATUS='OLD',READONLY)
C     OPEN(UNIT=4,FILE='BOSOR4:PROMPT2.DAT',STATUS='OLD',READONLY)
C     OPEN(UNIT=7,FILE='BOSOR4:PROMPT3.DAT',STATUS='OLD',READONLY)
C END VAX/VMS OPEN STATEMENTS
C
C FOLLOWING USED FOR UNIX...
      OPEN(UNIT=IFILE,FILE='PROMPT.DAT',STATUS='OLD')
      OPEN(UNIT=IFILE2,FILE='PROMPT2.DAT',STATUS='OLD')
      OPEN(UNIT=IFILE3,FILE='PROMPT3.DAT',STATUS='OLD')
#if rs6k
      rewind(IFILE)
      rewind(IFILE2)
      rewind(IFILE3)
#endif
C END UNIX OPEN STATEMENTS
C
      inquire(FILE=case, EXIST=exists)
      if (exists) then
	OPEN(UNIT=17, FILE=case, STATUS='OLD')
#if rs6k
        rewind(17)
#endif
      else
	OPEN(UNIT=17, FILE=case, STATUS='NEW')
      endif
C
      CALL NFILE(IFILE3,INFILE,IOUT,ISEG,INDIC,IPRE,THETAM,INDSIG,CASE)
C
C BEG JAN 2010
      IF (ISEG.EQ.1) CALL GLOB1(INDSIG,INDIC,THETAM,IPRE,NSEG,IPRISM)
C END JAN 2010
      IF (INDSIG.EQ.1.AND.INDIC.EQ.4) INDIC = 3
      REWIND IFILE2
      IF (ISEG.EQ.1)
     1CALL DATUM(IFILE2,100,0,0,INT,REALL,CHARAC,IOUT,0,1)
      WRITE(IOUT,35) ISEG,ISEG,ISEG,ISEG,ISEG,ISEG,ISEG,ISEG
   35 FORMAT(6X,'H',9X,'$'/6X,'H',9X,'$ SEGMENT NUMBER',8I5)
C
      CALL MESHQ
      CALL GEOMQ
      CALL IMPERQ
      CALL REFSUR
      IFLAG2 = 1
      CALL RINGS(NRINGS)
      IFLAG2 = 0
C   ELASTIC FOUNDATION STIFFNESS...
      REWIND IFILE2
      CALL DATUM(IFILE2,190,1,2,INT,FSTIF,CHARAC,IOUT,0,1)
      IF (IPRE.NE.0) CALL LINLOD(INDIC,NRINGS,THETAM)
      IF (IPRE.NE.0) CALL DISLOD(INDIC,THETAM)
      IF (IPRE.EQ.0) CALL GETPSQ(ISEG)
      CALL WALL
C
      REWIND IFILE3
      CALL DATUM(IFILE3,610,1,1,INT,REALL,ANSOUT,IOUT,0,1)
      IF (ANSL1('N',ANSOUT,INFILE)) GO TO 50
   50 CONTINUE
C
      CLOSE(UNIT=IOUT,STATUS='KEEP')
      RETURN
      END
C=DECK      NFILE
      SUBROUTINE NFILE(IFILE3,INFILE,IOUT,ISEG,INDIC,IPRE,THETAM,INDSIG,
     1                 FNAME)
C+---------------------------------------------------------------------+
C+---------------------------------------------------------------------+
C
C    PURPOSE IS TO NAME THE OUTPUT FILE AND OPEN FILES.
C
C  INPUT DATA...
C
C  IFILE3 = FILE WHERE PROMPTS ARE STORED (PROMPT3.DAT)
C  INFILE = UNIT NUMBER FOR INPUT DATA (5 OR 25)
C
C  OUTPUT DATA...
C
C  IOUT   = UNIT NUMBER FOR IMAGE OF INTERACTIVE SESSION
C  ISEG  = SEGMENT NUMBER (FILE VERSION NUMBER)
C
      CHARACTER*33 VNAME
C BEG JUL 2001
C     character*2 CN
      character*3 CN
C END JUL 2001
      character*28 FNAME
      CHARACTER*4 ANSOUT,CHARAC
      LOGICAL ANSL1
C
      IOUT = 17
      INFILE = 5
C
      REWIND IFILE3
      CALL DATUM(IFILE3,570,1,1,ISEG, REALL,CHARAC,10,0,1)
C BEG JAN 2010
      IF (ISEG.GT.1) CALL RENEW(1,INDSIG,INDIC,THETAM,IPRE,IPRISM)
C END JAN 2010
C
      IF(ISEG.GE.10) THEN
C BEG JUL 2001
         IF (ISEG.GE.100) THEN
            WRITE(CN,'(I3)') ISEG 
         ELSE 
            WRITE(CN,'(I2)') ISEG 
         ENDIF 
C END JUL 2001
      ELSE
         WRITE(CN,'(I1)') ISEG
      ENDIF
C
      I=INDEX(FNAME,' ')
      IF(I.NE.0) THEN
         VNAME=FNAME(:I-1)//'.SEG'//CN
      ELSE
         VNAME=FNAME//'.SEG'//CN
      ENDIF
C
      CALL REREAD(IOUT,IFILE3,INFILE,VNAME)
      RETURN
      END
