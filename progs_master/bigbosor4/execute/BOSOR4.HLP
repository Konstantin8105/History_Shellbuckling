C=DECK      HELP
> BOSOR4
? COM        DE         FI
? OV       PRO
*
.    Help on various BOSOR4 features can be obtained by typing
.
.            HELP4 TOPIC SUBTOPIC
.
.    in which TOPIC stands for a key word such as COMMAND, DEBUG,
.    FILES, OVERVIEW, or PROGRAMS; and SUBTOPIC stands for another
.    key word belonging as a subtopic under either COMMAND, DEBUG,
.    FILES, OVERVIEW, or PROGRAMS.  For example,
.
.            HELP4 COMMAND INPUT
.
.    will give you information about providing input data for BOSOR.
.
!    Information is available on the following topics:
!
! COMMAND        DEBUG         FILES
! OVERVIEW       PROGRAMS
!
! Next, please type HELP4 TOPIC, in which TOPIC stands for one of the
! topics listed above.
*
C=DECK      COMMAND
> COM
? ASS    BOSORALL    BOSORPLOT    CLE
? GETLIB      GETS      INP       MOD
? RESET       REST      BOSOR4L   PLO   
*
.   COMMANDS
.   
!   Information is available on:
!  
! ASSEMBLE    BOSORALL    BOSORPLOT    CLEANUP
! GETLIB      GETSEGS     INPUT        MODIFY
! RESETUP     RESTART     BOSOR4LOG    PLOT
!
! Next, please type HELP4 COMMAND SUBTOPIC, in which SUBTOPIC stands
! for one of the subtopics listed above.
*
> ASS
?
*
.   ASSEMBLE
.
.      Causes files 'NAME'.SEGi,  i = 1, 2, ....(NSEG+1), to be
.      concatenated into a single file, 'NAME'.ALL, in which 'NAME'
.      is the name you have assigned to the model and NSEG is the
.      number of structural segments in the model.
.
.     FORMAT:
.
.                    ASSEMBLE
.
.     EXAMPLE OF USE IN A RUNSTREAM:
.
.                    INPUT            (supply data for a segment)
.                    INPUT            (supply data for another segment)
.                    INPUT            (supply data for boundary cond.)
.                    ASSEMBLE         (concatenate 'NAME'.SEG files)
*
:
> BOSORALL
?
*
.   BOSORALL
.
.      Causes initiation of a batch run of BOSOR4.  The preprocessor
.      (BOSORREAD), mainprocessor (BOSORMAIN), and postprocessor
.      (BOSORPOST), are run in sequence. Note that plots are obtained
.      from execution of a separate processor, BOSORPLOT.
.
.      Output from a successful run is stored in 'NAME'.OUT;3. Output
.      from a run that bombed is stored in two places: 'NAME'.OUT;n,
.      in which n is less than 3; and 'NAME'.ERR. If the run bombed in
.      the preprocessor, output will be stored only in 'NAME'.ERR; If
.      the run bombed in the mainprocessor, the preprocessor output
.      will be stored in 'NAME'.OUT;1 and the mainprocessor output up
.      to the point of the bomb will be stored in 'NAME'.ERR;  if the
.      run bombed in the postprocessor, the pre- and mainprocessor
.      output will be stored in 'NAME'.OUT;2 and the postprocessor
.      output up to the point of the bomb will be stored in 'NAME'.ERR.
.
.     FORMAT:
.                    BOSORALL
.
.     EXAMPLE OF USE IN A RUNSTREAM:
.
.                    INPUT            (supply data for a segment)
.                    INPUT            (supply data for boundary cond.)
.                    ASSEMBLE         (concatenate 'NAME'.SEG files)
.                    BOSORALL         (run the case, except plotting)
*
:
> BOSORPLOT
?
*
.   BOSORPLOT
.
.      Causes initiation of batch run of plotting processor.
.
.     FORMAT:
.
.                   BOSORPLOT
.
.     EXAMPLE OF USE IN A RUNSTREAM:
.
.                    INPUT            (supply data for a segment)
.                    INPUT            (supply data for boundary cond.)
.                    ASSEMBLE         (concatenate 'NAME'.SEG files)
.                    BOSORALL         (run the case, except plotting)
.                    BOSORPLOT        (obtain plot files *.PLV)
*
:
> CLE
?
*
.   CLEANUP
.
.      After a batch run, there are many files left in your
.      subdirectory. CLEANUP deletes all of these except for the
.      'NAME'.DOC file and a copy of the 'NAME'.DOC file, which it
.      calls 'NAME'.ALL. Do not use CLEANUP unless you are certain
.      that your 'NAME'.DOC file is good.
.
.     FORMAT:
.
.                   CLEANUP
*
:
> GETLIB
?
*
.   GETLIB
.
.      Assembles 'PROGRAM'.OBJ into a library 'PROGRAM'.OLB and
.      deletes 'PROGRAM'.OBJ.
.
.     FORMAT:
.
.                 GETLIB      or       @GETLIB
*
:
> GETS
?
*
.   GETSEGS
.
.      Decomposes the latest 'NAME'.DOC file into 'NAME'.SEG files.
.      GETSEGS is very useful in modifying cases.  It is almost always
.      best to modify 'NAME'.SEG files rather than the much longer
.      'NAME'.ALL or 'NAME'.DOC files. The new 'NAME'.SEG files can
.      then easily be reassembled into a new 'NAME'.ALL file.
.
.     FORMAT:
.
.                   GETSEGS
*
:
> INP
?
*
.   INPUT
.
.      You supply input data for BOSOR following this command. The
.      input data are stored on files 'NAME'.SEGn, where 'NAME' is
.      the name you give the model and  n  is the structural segment
.      number or  n = NSEG+1  if you are supplying data pertaining
.      to the entire structure.  (NSEG is the number of structural
.      segments)
.
.      Ordinarily, you supply the input data interactively.
.      However, if you make a mistake part way through
.      or want to quit part way through, INPUT will later
.      accept a partially completed 'NAME'.SEG file as input, and
.      process it in a "batch" mode up to the point you were at when
.      you previously quit the interactive session. INPUT will then
.      return control to you for further interactive processing.
.
.     FORMAT:
.
.                   INPUT
*
:
> MOD
?
*
.   MODIFY
.      This command allows you to edit files with the names 'NAME'.SEG.
.      You first answer questions pertaining to a particular category of
.      structural information. This short interactive session produces
.      a file with a name such as GEOM.QUE (for meridional geometry),
.      RINGS.QUE (for discrete rings), LINELOADS.QUE (for line loads),
.      CONSTRAIN.QUE (for constraint conditions), etc.  Following the
.      short interactive session, (which you can bypass if a suitable
.      *.QUE file already exists), MODIFY automatically inserts this
.      *.QUE file into the proper position in the 'NAME'.SEG file and,
.      if you wish, tests the new 'NAME'.SEG file.
.
.MODIFY works because of certain key phrases embedded in the 'NAME'.SEG
.files.  These key phrases tell MODIFY where the new data should
.be inserted.  Because of this, MODIFY should only be used with NAME.SEG
.files that have been generated from a good NAME.DOC file via the
.utility GETSEGS. (GETSEGS disassembles the NAME.DOC file into NAME.SEG
.files.) MODIFY may not work when you apply it to NAME.SEG files that
.have been generated in some shortcut manner, such as by means copying
.from other segments or otherwise using the VAX editor to generate
.NAME.SEG files.
.
.  RECOMMENDED WAY TO MODIFY AN EXISTING CASE:
.
.   1. Always start with the NAME.DOC file (assuming this file
.      is a good one, that is, it was generated by a successful run).
.
.   2. Generate new NAME.SEG files via the following two commands:
.
.            CLEANUP       (delete all NAME.* files except .DOC & .ALL)
.            GETSEGS       (decompose NAME.DOC into NAME.SEG files)
.
.   3. Give the MODIFY command as many times as necessary in order to
.      convert the NAME.SEG files to their new forms. (NOTE: it may be
.      necessary to issue the MODIFY command more than once for a given
.      segment; see HELP4 FILES QUE for categories of input data that
.      can be modified via the MODIFY command).
.
.   4. When you are satisfied that your NAME.SEG files now represent
.      the modified case, type the command ASSEMBLE.
.
.   5. Run BOSOR4 again via the BOSORALL command.
.
.
.  EXAMPLE OF A RUNSTREAM IN WHICH YOU RUN A CASE FOR ONE TYPE
.  OF ANALYSIS (MODAL VIBRATION, INDIC = 2) AND SUBSEQUENTLY YOU RUN
.  THE SAME STRUCTURAL MODEL TO CHECK FOR BIFURCATION BUCKLING (INDIC=1)
.
.        INPUT       (provide all input data for modal vibration case)
.        ASSEMBLE    (assemble NAME.SEG files into NAME.ALL)
.        BOSORALL    (run BOSOR4 pre-, main-, and post-processors)
.        BOSORPLOT   (get plots for modal vibration case)
.        CLEANUP     (delete all NAME.* files except NAME.DOC & .ALL)
.        GETSEGS     (decompose NAME.DOC into NAME.SEG files)
.        MODIFY      (modify global data at beginning of NAME.SEG1
.                     to provide the new value of INDIC [INDIC = 1])
.        MODIFY      (add line loads to Segment 1)
.        MODIFY      (add distributed loads to Segment 1)
.        MODIFY      (change discretization in Segment 1)
.        MODIFY      (modify global data at beginning of the file
.                     NAME.SEG(NSEG+1), where NSEG=no. of segments.)
.        ASSEMBLE    (assemble modified NAME.SEG files into NAME.ALL)
.        BOSORALL    (run BOSOR4 pre-, main-, post-processors)
.        BOSORPLOT   (get plots of buckling modes)
*
:
> RESET 
?
*
.   RESETUP
.
.      RESETUP may be used in two ways:
.
.       1. to continue the same type of analysis in a separate
.          run without having to start from the beginning.
.          (e.g. calculate vibration frequencies or buckling loads
.           for more circumferential wave numbers after some
.           circumferential wave numbers have already been explored.)
.
.       2. to find response (stress and/or buckling) of a structure
.          to base excitation.  In this option the original run
.          must have been for modal vibrations with n = 0 or n = 1
.          circumferential waves.
.
.     FORMAT:
.                  RESETUP
.
.     USE IN A TYPICAL RUNSTREAM:
.                  RESETUP          (You provide data interactively)
.                  RESTART          (You launch a batch run)
.                  BOSORPLOT        (You get new plots)
*
:
> REST
?
*
.   RESTART
.
.      This command initiates a batch run of the mainprocessor and
.      postprecessor.  It must always be preceded by  RESETUP.
.      Output from a successful batch run is stored in a new
.      version of 'NAME'.OUT.
.      Output from an unsuccessful batch run is stored in 'NAME'.ERR.
.
.    FORMAT:
.               RESTART
.
.    USE IN A TYPICAL RUNSTREAM:
.
.               RESETUP            (You provide data interactively)
.               RESTART            (You launch a batch run)
.               BOSORPLOT          (You get new plots)
.
*
:
> BOSOR4L
?
*
.   BOSOR4LOG
.
.      This command activates commands for execution of BOSOR4. The
.      activated commands can be seen by your typing HELP4 OVERVIEW LOG
.
.      NOTE: You must include a statement such as
.
.               $ BOSOR4LOG :== @DISK:[USERNAME.BOSOR4]BOSOR4
.
.      in your LOGIN.COM in order to run BOSOR4.
.
.    FORMAT:
.
.                BOSOR4LOG
.
*
:
> PLO
?
*
.   PLOT
.
.      This command is used to produce hard copies of plots at
.      Lockheed Palo Alto Research Laboratories. You must have
.      PARM.PLV and VECTOR.PLV files before you give this command
.      or whatever the equivalent command is at your facility.
.
.    FORMAT:
.                  PLOT
.
*
:
:
C=DECK      DEBUG
> DE
? ALL      BAT      GEN      SEG
*
.   DEBUG
.
!   Information is available on:
!
! ALL      BATCH      GENERAL      SEGMENT
!
! Next, please type HELP4 DEBUG SUBTOPIC, in which SUBTOPIC stands for
! one of the subtopics listed above.
*
> ALL
?
*
.   DEBUGGING a 'NAME'.ALL file...
.
.      If the batch run terminated within the BOSOR preprocessor
.      (BOSORREAD), then something is probably wrong with your file
.      'NAME'.ALL.  The error can usually be easily found by inspec-
.      tion of the 'NAME'.DOC file, which ends just where the error
.      occurred. It is possible that incorrect input in one of the
.      earlier data triggered the bomb, so look carefully at several
.      entries preceeding the last one in the 'NAME'.DOC file.
.
.      Correct the appropriate 'NAME'.SEG file and reassemble a new
.      'NAME'.ALL file via the command  ASSEMBLE.  It is best not
.      merely to fix the 'NAME'.ALL file, because the error will still
.      be present in one or more of your 'NAME'.SEG files, which you
.      may want to use again later.
*
:
> BAT
?
*
.   TRACKING DOWN ERRORS IN BATCH RUNS...
.
.In this section it is assumed that the input file 'NAME'.ALL has been
.successfully assembled. For directions concerning errors committed
.while generating input for a given segment, see DEBUG SEGMENT.
.
.(1) The BOSORALL.LOG file is stored in the main directory.  This file
.contains the system's error messages.
.
.(2) Diagnostic messages are written to files called
.          'NAME'.ERR      and         'NAME'.OUT
.'NAME'.ERR will appear in the subdirectory from which the batch
.run was made only if an error termination occurred.
.
.(3) If the error occurred in the preprocessor (BOSORREAD), it will be
.useful to list the file 'NAME'.DOC, which contains a sort of copy of
.the input deck up to the point at which the error was encountered.
.Knowing what the last line of this file is provides a very important
.clue as to the source of the error.
*
:
> GEN
?
*
.   SOME GENERAL TIPS ON AVOIDING ERRORS AND DEBUGGING INPUT...
.
.      1. Do as much of your debugging at the segment level as
.         possible.  That is, do everything you can to insure that
.         your 'NAME'.SEG files are correct before you assemble them
.         into the much larger and therefore harder-to-edit file,
.         'NAME'.ALL.  If you have generated 'NAME'.SEG files via
.         shortcuts, such as copying from other files or VAX editing,
.         run these files thru INPUT before assembling the 'NAME'.ALL
.         file.
.
.      2. If failure occurred in the preprocessor (BOSORREAD), inspect
.         the 'NAME'.DOC file.  The last line of it will point to the
.         error. Also, look at the end of the 'NAME'.ERR file.
.
.      3. If you are fairly certain that there is a bug in one or
.         more of the BOSOR processors, write or call the developer:
.                    Dr. David Bushnell, Dept. 93-30/251
.                    Lockheed Palo Alto Research Laboratories
.                    3251 Hanover St., Palo Alto, CA  94304
.                    (415) 424-3237
*
:
> SEG
?
*
.   RECOVERY FROM ERRORS DURING SEGMENT-BY-SEGMENT INTERACTIVE INPUT...
.It often happens that as you are answering the many questions you
.inadvertently hit a wrong key which causes a bomb or you hit a wrong
.key followed by return. The procedure for recovering from these types
.of errors is as follows:
. 1. Do a CONTROL Y to get out of the interactive session and back in
.    the VAX command mode.
. 2. Edit the 'NAME'.SEGn file with which you were currently working
.    in order to remove any wrong entries at its end.
. 3. Give the command  INPUT
. 4. An early question asks "Are you correcting an existing file?"
.    Answer this question YES or Y .
.
.In this procedure, the portion of the 'NAME'.SEGn file up to where you
.were when you bombed or erred is used as input rather than your
.terminal keyboard. Therefore, you do not have to answer interactively
.all the questions preceeding your error.  When the system reaches the
.end of the 'NAME'.SEGn file, it gives control back to you. You then
.complete the interactive session as if nothing bad had happened.
*
:
:
C=DECK      FILES
> FI
? GEN
? ALL     BLK     DOC     ERR     FOR     LAB
? OUT     PLT     PLV     QUE     RAN     RES
? NEW     OBJ     OLB     EXE     COM     BAT
? CASE
*
.
.   FILES
.
!    Information is available on:
! GENERAL
! ALL     BLK     DOC     ERR     FOR     LAB
! OUT     PLT     PLV     QUE     RAN     RES
! NEW     OBJ     OLB     EXE     COM     BAT
! CASE
!
! Next, please type HELP4 FILES SUBTOPIC, in which SUBTOPIC stands
! for one of the subtopics listed above.
*
> GEN
?
*
.   GENERAL INFORMATION ON FILES....
.
.      Runs of BOSOR generate many files. Most of these files have
.      a name such as 'NAME'.SEGn  or  'NAME'.ALL  ,  etc., in which
.      'NAME' is a name that you assign the case.  The most important
.      of these files from the user's viewpoint are:
.
.     'NAME'.SEGn   'NAME'.ALL   'NAME'.DOC    'NAME'.OUT   'NAME'.ERR
*
:
> ALL
?
*
.  ALL           ('NAME'.ALL  file)       FILE TYPE:  SYMBOLIC
.
.      'NAME'.ALL  is a concatenation of the 'NAME'.SEGn files, 
.                  n = 1, 2, 3, . . . NSEG + 1, where 'NAME' is the
.                  name that you assign the case and NSEG is the
.                  number of structural segments in the entire shell.
.                  This file must be present before the command
.                  BOSORALL is given.
*
:
> BLK
?
*
.  BLK           ('NAME'.BLK  file)       FILE TYPE:  BINARY
.
.      'NAME'.BLK  contains contents of labelled common blocks. This
.                  file must be present before the command RUN RESTART
.                  or the command  RESTART are given.
*
:
> DOC
?
*
.  DOC           ('NAME'.DOC  file)       FILE TYPE:  SYMBOLIC
.
.      'NAME'.DOC is a re-annotated copy of 'NAME'.ALL.  'NAME'.DOC
.                 is generated by the BOSOR preprocessor BOSORREAD.
.                 It represents a completely annotated input "deck"
.                 for BOSOR if execution of the preprocessor BOSORREAD
.                 was successful. This is an important file for
.                 documenting the case and for using as a starting
.                 point when generating other cases by modification
.                 via the utilities GETSEGS and MODIFY.
*
:
> ERR
?
*
.  ERR           ('NAME'.ERR  file)       FILE TYPE:  SYMBOLIC
.
.      'NAME'.ERR  contains list output.  This file will not be
.                 present if the case ran successfully. If the
.                 case bombed, it will contain whatever output
.                 had been generated in the processor (pre-, main-
.                 or post-) that happened to be executing at the
.                 time the case bombed out.  List this file for
.                 debugging purposes.
*
:
> FOR
?
*
.  FOR           (FOR0XX.DAT  files)      FILE TYPES:  SYMBOLIC/BINARY
.
.      FOR0XX.DAT files are generated at various times during execu-
.                 tion of various processors. They are scratch files
.                 and needn't concern the user.
*
:
> LAB
?
*
.  LAB           ('NAME'.LAB  file)       FILE TYPE:  SYMBOLIC
.
.      'NAME'.LAB  contains labels for plots.  This file must exist
.                  before the command  BOSORPLOT is given.
*
:
> OUT
?
*
.  OUT           ('NAME'.OUT  file)       FILE TYPE:  SYMBOLIC
.
.      'NAME'.OUT  contains list output.  The version number will
.                  be 3 if the case ran successfully to completion
.                  following the  BOSORALL command.  The version number
.                  will be 1 if the case bombed in the mainprocessor
.                  (BOSORMAIN) and 2 if the case bombed in the post-
.                  processor (BOSORPOST). In such abnormal terminations
.                  a new 'NAME'.ERR file will be present and should be
.                  listed.
*
:
> PLT
?
*
.  PLT           ('NAME'.PLT  file)       FILE TYPE:  BINARY
.
.      'NAME'.PLT  contains data for plots.  This file must exist
.                  before the command  BOSORPLOT is given.
*
:
> PLV
?
*
.  PLV           (VECTR1.PLV and PARM.PLV files)     TYPE:  BINARY
.
.      *.PLV      files contain data for plotter. These files are
.                 generated via the command  BOSORPLOT.  You can obtain
.                 hard copies of your plots by giving whatever command
.                 is appropriate at your facility. (PLOT at LPARL).
*
:
> QUE
?
*
.  QUE  Various files generated via the command  MODIFY (index),
.       as listed below:
.     ===========================================================
.     Index    Type of BOSOR input data             File generated
.     -----------------------------------------------------------
.       1      nodal point distribution in segment       MESH.QUE
.       2      shape of meridian of segment              GEOM.QUE
.       3      location of reference surface in wall  REFSURF.QUE
.       4      initial imperfection shape in segment   IMPERF.QUE
.       5      discrete rings in segment                RINGS.QUE
.       6      line loads in segment                LINELOADS.QUE
.       7      distributed (surface) loads in seg.  DISTLOADS.QUE
.       8      wall construction of segment              WALL.QUE
.       9      smeared stiffeners in segment          SMEARED.QUE
.      10      direct input of prestress            PRESTRESS.QUE
.      11      constraint conditions of segment     CONSTRAIN.QUE
.      12      rigid body motion prevention         RIGIDBODY.QUE
.      13      global parameters at beginning         GLOBAL1.QUE
.      14      global parameters after segment data   GLOBAL2.QUE
.      15      output indicators                      GLOBAL3.QUE
.     =============================================================
*
:
> RAN
?
*
.  RAN           ('NAME'.RAN  file)           FILE TYPE:  BINARY
.
.      'NAME'.RAN  contains data base. Must be present for execution
.                  of BOSORMAIN, BOSORPOST, BOSORPLOT, or RESTART.
*
:
> RES
?
*
.  RES           ('NAME'.RES  file)           FILE TYPE:  SYMBOLIC
.
.      'NAME'.RES  a file used by the RESETUP utility for continuing
.                  cases via RESTART.
*
:
> NEW
?
*
.   NEW           (These are source decks for BOSOR4.  List follows:)

.ARRAYS.NEW;1            102/104     17-AUG-1985 09:53
.ASSEMBLE.NEW;1            5/8       23-AUG-1985 17:18
.B4MAIN.NEW;1             43/44      22-AUG-1985 13:43
.B4POST.NEW;1             58/60      29-AUG-1985 07:19
.B4READ.NEW;1             91/92      27-AUG-1985 08:13
.BPLOTC.NEW;1             23/24      18-DEC-1984 00:00
.BPLOTD.NEW;1             71/72      18-DEC-1984 00:00
.BUCKLE.NEW;1             43/44      18-DEC-1984 00:00
.FELIPPA.NEW;1            51/52      18-DEC-1984 00:00
.GEOM.NEW;1               80/80      12-FEB-1985 00:00
.GETSEGS.NEW;1             7/8       26-AUG-1985 15:40
.HELP4.NEW;1               2/4       18-DEC-1984 00:00
.INPUT.NEW;1              19/20      26-AUG-1985 16:03
.MODE.NEW;1               56/56      18-DEC-1984 00:00
.MODIFY.NEW;1             24/24      24-AUG-1985 15:48
.PLOT.NEW;1              125/128     18-DEC-1984 00:00
.PRE.NEW;1                98/100     29-AUG-1985 17:05
.PROMPTER.NEW;1           29/32      29-AUG-1985 13:40
.QUESTIONS.NEW;1         176/176     27-AUG-1985 08:41
.RESETUP.NEW;1            31/32      28-AUG-1985 14:20
.RFIVE.NEW;1              65/68      17-AUG-1985 11:37
.RZLG.NEW;1              115/116     19-AUG-1985 16:38
.STOGET.NEW;1             38/40      27-AUG-1985 08:50
.UTIL.NEW;1              110/112     30-AUG-1985 06:53
.WALL.NEW;1              178/180     28-AUG-1985 09:21
.Total of 25 files, 1640/1676 blocks.
*
:
> OBJ
?
*
.   OBJ          (These object decks must be kept in BOSOR4 directory:)
.
.BLIOMF.OBJ;1             11/12      31-AUG-1985 15:01
.URNDM.OBJ;1               2/4        6-NOV-1984 00:00
.Total of 2 files, 13/16 blocks.
*
:
> OLB
?
*
.   OLB          (These are BOSOR4 libraries. List follows:)
.ARRAYS.OLB;1             67/68      17-AUG-1985 09:54
.ASSEMBLE.OLB;1           10/12      23-AUG-1985 17:19
.B4MAIN.OLB;1             28/28      22-AUG-1985 13:43
.B4POST.OLB;1             49/52      29-AUG-1985 07:19
.B4READ.OLB;1             73/76      27-AUG-1985 08:14
.BPLOTC.OLB;1             12/12      11-DEC-1984 00:00
.BPLOTD.OLB;1             28/28      11-DEC-1984 00:00
.BUCKLE.OLB;1             35/36      29-OCT-1983 00:00
.FELIPPA.OLB;1            17/20       2-AUG-1983 00:00
.GASP.OLB;3               15/16      31-AUG-1985 14:45
.GASPOLD.OLB;3             8/8       31-AUG-1985 15:15
.GEOM.OLB;1               65/68      12-FEB-1985 00:00
.GETSEGS.OLB;1            10/12      26-AUG-1985 15:41
.HELP4.OLB;1               5/8       24-AUG-1983 00:00
.INPUT.OLB;1              23/24      26-AUG-1985 12:31
.MODE.OLB;1               40/40       7-DEC-1984 00:00
.MODIFY.OLB;1             26/28      24-AUG-1985 15:48
.PLOT.OLB;1               78/80       9-NOV-1984 00:00
.PRE.OLB;1                68/68      29-AUG-1985 17:06
.PROMPTER.OLB;1           27/28      29-AUG-1985 13:41
.QUESTIONS.OLB;1         149/152     27-AUG-1985 08:43
.RESETUP.OLB;1            30/32      28-AUG-1985 14:21
.RESTART.OLB;1            38/40      24-AUG-1985 16:20
.RFIVE.OLB;1              47/48      17-AUG-1985 11:37
.RZLG.OLB;1               89/92      19-AUG-1985 16:38
.STOGET.OLB;1             49/52      27-AUG-1985 08:51
.UTIL.OLB;4               69/72      31-AUG-1985 14:52
.WALL.OLB;1              139/140     28-AUG-1985 09:23
.Total of 28 files, 1294/1340 blocks.
*
:
> EXE
?
*
.   EXE          (These are the executable elements in BOSOR4:)
.
.ASSEMBLE.EXE;1            7/8       29-AUG-1985 16:29
.BOSORMAIN.EXE;2         229/232     31-AUG-1985 15:17
.BOSORPLOT.EXE;1         232/232     11-DEC-1984 00:00
.BOSORPOST.EXE;2         171/172     31-AUG-1985 15:16
.BOSORREAD.EXE;2         382/384     31-AUG-1985 15:15
.GETSEGS.EXE;1             7/8       29-AUG-1985 16:30
.HELP4.EXE;1              13/16      24-AUG-1985 17:42
.INPUT.EXE;1             136/136     29-AUG-1985 16:30
.MODIFY.EXE;1            152/152     29-AUG-1985 16:31
.RESETUP.EXE;1            61/64      29-AUG-1985 16:31
.Total of 10 files, 1390/1404 blocks.
*
:
> COM
?
*
.   COM          (These are the BOSOR4 procedures. List follows:)
.ASSEMBLE.COM;1            1/4       28-AUG-1985 14:18
.BOSOR4.COM;1              4/4       26-AUG-1985 13:24
.BOSORALL.COM;1            1/4        5-JUN-1985 13:13
.BOSORDATA.COM;1           1/4       18-DEC-1984 00:00
.BOSORPLOT.COM;1           1/4        5-JUN-1985 13:16
.BOSORPOST.COM;1           1/4        5-JUN-1985 13:16
.BOSORREAD.COM;1           1/4       18-DEC-1984 00:00
.CHECKFILE.COM;1           5/8       18-DEC-1984 00:00
.CLEANUP.COM;1             3/4       18-DEC-1984 00:00
.FOREIGN.COM;1             4/4       24-AUG-1985 17:48
.GETLIB.COM;1              1/4       18-DEC-1984 00:00
.GETSEGS.COM;1             1/4       28-AUG-1985 14:17
.INPUT.COM;1               1/4       28-AUG-1985 14:17
.LINKASSEMBLE.COM;1        1/4       23-AUG-1985 11:04
.LINKBMAIN.COM;3           1/4       31-AUG-1985 15:18
.LINKBMAINVAX.COM;3        1/4       31-AUG-1985 15:17
.LINKBPOST.COM;2           1/4       31-AUG-1985 14:55
.LINKBPOSTVAX.COM;2        1/4       31-AUG-1985 15:08
.LINKBREAD.COM;2           1/4       31-AUG-1985 14:54
.LINKBREADVAX.COM;2        1/4       31-AUG-1985 15:06
.LINKGETSEGS.COM;1         1/4       22-AUG-1985 15:40
.LINKHELP.COM;1            1/4       18-DEC-1984 00:00
.LINKINPUT.COM;1           1/4       24-AUG-1985 14:17
.LINKMODIFY.COM;1          1/4       24-AUG-1985 15:10
.LINKPLOT.COM;3            1/4       31-AUG-1985 15:03
.LINKRESETUP.COM;1         1/4       24-AUG-1985 16:25
.LOGIN.COM;1               8/8       18-DEC-1984 00:00
.MODIFY.COM;1              1/4       28-AUG-1985 14:16
.QUEUE.COM;1               3/4       18-DEC-1984 00:00
.RESETUP.COM;1             1/4       28-AUG-1985 14:16
.RESTART.COM;1             1/4        5-JUN-1985 13:15
.Total of 31 files, 52/132 blocks.
*
:
> BAT
?
*
.   BAT          (These are the BOSOR4 batch procedures. List follows:)
.BOSORALL.BAT;1            4/4       24-AUG-1985 13:18
.BOSORPLOT.BAT;1           2/4       29-JUN-1985 12:04
.BOSORPOST.BAT;1           2/4       18-DEC-1984 00:00
.BOSORREAD.BAT;1           3/4       18-DEC-1984 00:00
.RESTART.BAT;1             3/4       24-AUG-1985 17:31
.Total of 5 files, 14/20 blocks.
*
:
> CASE
?
*
.   CASE          (These are BOSOR4 sample cases. List follows:)
. CASE NO.    TITLE    BLOCKS       DATE/TIME OF RUN   CPU SECONDS  INDIC
.
.INPUT DATA...
.CASE.1;1  ALUM FRAME   26/27      21-AUG-1983 00:00        37          1
.CASE.2;1  AL FRAME 2   17/18      21-AUG-1983 00:00        24          1
.CASE.3;1  FLAT PLATE   11/12      21-AUG-1983 00:00        23          0
.CASE.3A;1 FLAT PLATE, RUN AS LAYERED COMPOSITE, WITH STRESS OUTPUT
.CASE.4;1  CYL 3 LOAD   18/18      21-AUG-1983 00:00        58          3
.CASE.5;1  HEMI. VIB    11/12      21-AUG-1983 00:00        29          2
.CASE.6;1  HOT CONE     27/27      21-AUG-1983 00:00        97          4
.CASE.7;1  SPHER CAP    12/12      21-AUG-1983 00:00        38         -2
.CASE.8;1  HARM. EXIT.  15/15      21-AUG-1983 00:00        25          3
.CASE.9;1  MODAL VIBS.  16/18      21-AUG-1983 00:00        35          2
.CASE.9A;2 RANDOM EXI.   4/6       18-APR-1988 10:23  RESTART DEMONSTRATION
.CASE.9B;1 HARMONIC EX.  4/6       18-APR-1988 10:14  RESTART DEMONSTRATION
.CASE.10;1 RECT. PLATE, UNIFORM PRESSURE, LINEAR THEORY, "TORUS" MODEL
.
.OUTPUT DATA...
.CASE1.OUT;2            51/51      15-APR-1988 14:50
.CASE2.OUT;2            36/36      15-APR-1988 14:55
.CASE3.OUT;2            29/30      15-APR-1988 14:58
.CASE3A.OUT;3           59/60      18-APR-1988 11:11
.CASE4.OUT;2            92/93      15-APR-1988 15:02
.CASE5.OUT;2            43/45      18-APR-1988 09:23
.CASE6.OUT;2           169/171     18-APR-1988 09:29
.CASE7.OUT;2            35/36      18-APR-1988 09:33
.CASE8.OUT;2            48/48      18-APR-1988 09:37
.CASE9.OUT;2            67/69      18-APR-1988 09:41
.CASE9A.OUT;2           41/42      18-APR-1988 10:36
.CASE9B.OUT;2           27/27      18-APR-1988 10:38
.CASE10.OUT;2           78/78      18-APR-1988 11:21
.Total of 26 files, 965/1038 blocks.
*
:
:
C=DECK      OVERVIEW
> OV
? ANAL      HOW       SAM       SUM        EX       DOC      LOG
*
.   OVERVIEW
.
!   Information is available on:
! 
! ANALYSES      HOWTORUN       SAMPLERUN       SUMMARY
! EXPERT        DOCUMENTS      LOGIN
!
! Next, please type HELP4 OVERVIEW SUBTOPIC, in which SUBTOPIC stands
! for one of the subtopics listed above.
*
> ANAL
?
*
.   TYPES OF ANALYSES AVAILABLE WITH BOSOR4...
.
.   The type of analysis is governed by a control integer INDIC:
.
. INDIC =
.      0= nonlinear axisymmetric stress (and collapse) analysis,
.     -2= stability determinant calculated for increasing load,
.     -1= bifurcation buckling with nonlinear prebuckling analysis,
.      1= bifurcation buckling with "linear"  prebuckling analysis;
.         (Actually the prebuckling analysis is the same as for
.          INDIC = -1.  However, the applied load is never changed
.          during a case.  Linear behavior is exhibited as long as
.          the user applies a load that is very small compared to
.          the design load.)
.
.      2= modal vibration with axisymmetric nonlinear prestress.
.      3= linear nonsymmetric stress analysis;
.      4= bifurcation buckling with linear nonsymmetric prebuckling.
.
.    BOSOR4 will also do response to harmonic loads and response of a
. structure at resonance to harmonic or random excitation of a base to
. which the structure is attached. Buckling under harmonic or random
. base excitation can also be calculated.
.
. BOSOR4 will also calculate body forces corresponding to rigid body
. dynamics of free-free complex shell structures subjected to non-self-
. equilibrating loads. These body forces are automatically included in
. Load Sets A and B if the user indicates that rigid body motions are
. possible under the boundary conditions supplied.
*
:
> HOW
?
*
.   HOW TO RUN BOSOR...
.
.      You first activate BOSOR4 commands via the command BOSOR4LOG.
.      This command must be given before you do any BOSOR4 work.
.      Input data are then prepared interactively via the INPUT
.      command or a series of INPUT commands. Files with the name
.      'NAME'.SEGn ,  n = 1, 2, 3, . . .(NSEG+1), in which 'NAME' is
.      a name you assign to the case and NSEG is the number of
.      structural segments in the model, are then concatenated into
.      a single file, 'NAME'.ALL, via  ASSEMBLE.  Then a batch run
.      is initiated via the command  BOSORALL.  Plots are obtained
.      via the command  BOSORPLOT.
.
.      SAMPLE RUNSTREAM:
.
.             BOSOR4LOG       (You activate the BOSOR4 commands.)
.             INPUT           (You supply data interactively. It is
.                              automatically stored on 'NAME'.SEGn)
.             ASSEMBLE        ('NAME'.SEGn files are concatenated into
.                              a single file, 'NAME'.ALL)
.             BOSORALL        (A batch run through the BOSOR4 pre- ,
.                              main-, and post-processors is initiated)
.             BOSORPLOT       (Plot files *.PLV are generated)
*
:
> SAM
?
*
.   SAMPLE RUNSTREAM  (Set up case, run, restart, modify, run again)
.      INPUT             You supply data interactively for segments
.      ASSEMBLE          You cause segment data & b.c.'s to be concat.
.      BOSORALL          You launch a batch run of the case
.      BOSORPLOT         You launch a batch run for plots
.      RESETUP           You decide to do more analysis, same model
.                        (Interactive input is required from you now.)
.      RESTART           You launch a batch run for more analysis on
.                        the same model. (example: additional circum-
.                        ferential wave numbers for bifurcation buckling)
.      BOSORPLOT         You launch batch run for plots
.
.      CLEANUP           Get rid of all NAME.* files except .DOC & .ALL
.      GETSEGS           NAME.DOC file broken down into segments
.      MODIFY            One of the segments modified in some way
.      MODIFY            Another segment modified (e.g. ring added)
.      MODIFY            Same segment modified again (e.g. more nodes)
.      MODIFY            Same segment modified again (e.g. new loading)
.      ASSEMBLE          Segment data reassembled
.      BOSORALL          You launch another batch run for modified model
.      BOSORPLOT         You launch a batch run for plots
*
:
> SUM
?
*
.   SUMMARY of purpose of BOSOR4...
.
.In BOSOR4 a complex, branched, stiffened shell of revolution is
.treated as an assemblage of shell segments or branches, each with its
.own geometry (flat, cylindrical, spherical, etc), loading, wall
.construction, and material properties.  In this version of BOSOR4 you
.provide the input data in a "conversationally" interactive mode on a
.segment-by-segment basis.
.
.Before beginning an interactive session you should already have
.decided how to divide the structure that you are analyzing into
.segments and branches, and you should have available to you all
.dimensions and material properties and loading.  You should also
.have decided what kind of analysis to perform. 
.
.You provide input data interactively.  The prompting
.information contains references to page numbers and figures and
.tables that are contained in:
.
."BOSOR4--Program for stress, buckling, and vibration of complex shells
.of revolution", STRUCTURAL MECHANICS SOFTWARE SERIES,Vol. I, edited by
.N. Perrone and W. Pilkey, Univ. Press of Virginia,Charlottesville,
.pp. 11-143 (1977).  This is the user's manual for earlier BOSOR4's.
.
.For many examples of shell buckling, discussions of imperfection
.sensitivity, and descriptions of the physics of shell buckling
.from an engineer's point of view, please see the book,
.COMPUTERIZED BUCKLING ANALYSIS OF SHELLS, by D. Bushnell,
.published by Martinus Nijhoff, Kluwer Academic Publishers,
.190 Old Derby St., Hingham, MA 02043, or P.O. Box 163, 3300 AD,
.Dordrecht, The Netherlands, 1985.
*
:
> EX
?
*
.   SUGGESTIONS FOR EXPERT USERS OF BOSOR4
.
.      When you have run quite a few cases on BOSOR, you may want to
.      modify models by editing the 'NAME'.DOC file or 'NAME'.SEG files
.      directly, rather than use the MODIFY utility. Perhaps this will
.      be quicker.  You can always use the INPUT command to check
.      'NAME'.SEG files generated in this way.
.
.      The BOSOR data files 'NAME'.SEG, 'NAME'.ALL, 'NAME'.DOC ,
.      contain a single datum per line whenever they are generated via
.      BOSOR utilities rather than via VAX editing by you.  However,
.      as an expert user, you may wish to take advantage of the ability
.      of the input-handling routines to accept more than one datum on
.      a line. For example, you can provide for geometry of a cylinder
.      as follows:
.                    100., 0., 100., 50.
.
.      in which R1 = 100. ;   Z1 = 0. ;   R2 = 100. ;   Z2 = 50.,
.      rather than allow one line for each of these quantities.  The
.      'NAME'.SEG and 'NAME'.ALL files will have the data on one line,
.      but the 'NAME'.DOC file, following a successful run, will have
.      each datum on its own line with proper annotation.
*
:
> DOC
?
*
.   DOCUMENTATION FOR BOSOR4....
.
.      (A) BACKGROUND MATERIAL ON SHELL BUCKLING....
.
.           "Buckling of Shells--Pitfall for Designers", AIAA Journal,
.            Vol. 19, No. 9, September, 1981, pp. 1183-1226
.
.           "Computerized Analysis of Shells--Governing Equations",
.            Computers & Structures, Vol. 18, No. 3, pp.471-536, 1984
.
.            COMPUTERIZED ANALYSIS OF SHELL BUCKLING by D. Bushnell,
.            Martinus Nijhoff, members of Kluwer group,
.            Kluwer Academic Publishers, 190 Old Derby St., Hingham,
.            Mass. 02043, and P.O. Box 163, 3300 AD, Dordrecht, The
.            Netherlands.  Published late in 1985.
.
.      (B) MATERIAL NEEDED FOR USE OF THE BOSOR4 COMPUTER PROGRAM...
.
.           "BOSOR4--Program for stress, buckling, and vibration of
.            complex shells of revolution," in STRUCTURAL MECHANICS
.            SOFTWARE SERIES, vol. 1, Univ. Press of Virginia, pp11-143,
.            1977
.
.            BOSOR4.STORY  (file contained herein that describes the
.                           UNIX version of BOSOR4)
.
.            bosor4.news   (file describing BOSOR4 changes)
.
.            HELP4         (interactive help file, data in BOSOR4.HLP)
.
.            CASE.n        (input data for test cases)
.            CASEn.OUT     (list output from test cases)
*
:
> LOG
?
*
.   STATEMENTS THAT MUST BE ACTIVATED IN ORDER TO RUN BOSOR4...
.
.$ ASSIGN DISK:[USERNAME.BOSOR4] BOSOR4
.$ help4     :==  $BOSOR4:help4.exe
.$ modify    :==  @bosor4:modify
.$ input     :==  @bosor4:input
.$ getsegs   :==  @bosor4:getsegs
.$ cleanup   :==  @bosor4:cleanup
.$ assemble  :==  @bosor4:assemble
.$ bosorall  :==  @bosor4:bosorall
.$ bosorplot :==  @bosor4:bosorplot
.$ resetup   :==  @bosor4:resetup
.$ restart   :==  @bosor4:restart
.
.   These statements are included in the file BOSOR4.COM  .
.   They are activated by:
.      1. Your including the statement
.               $ BOSOR4LOG :== @DISK:[USERNAME.BOSOR4]BOSOR4
.         in your LOGIN.COM, and
.      2. Your typing the command   BOSOR4LOG
*
:
:
C=DECK      PROGRAMS
> PRO
? ASSEMBLE      BOSORREAD     BOSORMAIN     BOSORPOST     BOSORPLOT
? RESETUP       INPUT         GETSEGS       MODIFY
*
.  PROGRAMS
.
!    Information is available on:
!
! ASSEMBLE      BOSORREAD     BOSORMAIN     BOSORPOST     BOSORPLOT
! RESETUP       INPUT         GETSEGS       MODIFY
!
! Next, please type HELP4 PROGRAMS SUBTOPIC, in which SUBTOPIC stands
! for one of the subtopics listed above.
*
> ASSEMBLE
?
*
.   ASSEMBLE
.
.      This program concatenates the NAME.SEGn, n = 1, 2,..(NSEG+1)
.      files into a single file called NAME.ALL.  The NAME.ALL file
.      is the file used as input for the batch run initiated by the
.      command BOSORALL.
*
:
> MODIFY
?
*
.   MODIFY
.
.      User generates blocks of input data stored in annotated files
.      that are subsequently used to edit 'NAME'.SEG files, thereby
.      permitting extensive modifications of a case without setting
.      the whole segment up interactively.  The annotated files are
.      called *.QUE, in which * is a name such as MESH, GEOM, RINGS,
.      LINELOADS, DISTLOADS, WALL, etc. (See COMMAND MODIFY)
*
:
> GETSEGS
?
*
.   GETSEGS
.
.      Starting with a NAME.DOC file generated from a previously
.      successfully run case called NAME, the processor GETSEGS
.      divides the DOC file into NAME.SEGn, n = 1, 2,...(NSEG+1)
.      segment files.  You should use GETSEGS before you use
.      MODIFY.
*
:
> INPUT
?
*
.   INPUT
.
.      Data for one structural segment are called from the user in an
.      interactive mode or in a "batch" mode.  A file called 
.      'NAME'.SEGn is generated, where n is the number of the segment
.      that the user is working on.
.
.      Data pertaining to the entire structure and constraint condition
.      data are called from the user in an interactive mode or in a
.      "batch" mode.  Data are stored on a file 'NAME'.SEG(NSEG+1),
.      where NSEG is the number of segments in the structural model.
*
:
> BOSORREAD
?
*
.   BOSORREAD
.
.      The input data from 'NAME'.ALL, which is a concatenation of the
.      'NAME'.SEGn  files, n = 1, 2, 3, . . . (NSEG+1), are read in
.      and a new annotated file, 'NAME'.DOC, is generated.  The input
.      data are massaged as needed for the BOSOR4 mainprocessor.
.      Output is written to 'NAME'.OUT.
*
:
> BOSORMAIN
?
*
.   BOSORMAIN
.
.      The main part of the calculations of the case are performed.
.      Output is written to 'NAME'.OUT.
*
:
> BOSORPOST
?
*
.   BOSORPOST
.
.      The solution vectors from BOSORMAIN are processed.  Output is
.      written to the files 'NAME'.OUT for list output and 'NAME'.PLT
.      and 'NAME'.LAB for plotting.
*
:
> BOSORPLOT
?
*
.   BOSORPLOT
.
.      The input plot file, 'NAME'.PLT, is used to generate output
.      files VECTOR.PLV and PARM.PLV, suitable for plotting on a
.      variety of devices.
*
:
> RESETUP
?
*
.   RESETUP
.
.      Cases can be continued for further ranges of parameters, such
.      as further values of n, the number of circumferential waves.
.
.      Response to base excitation can be determined, provided that a
.      modal vibration analysis has just been run. Random vibrations,
.      harmonic excitation at resonance, and shock are included.
*
:
:
