C=DECK CC2H
      subroutine    CC2H
     $                    (c, h, n)
C+---------------------------------------------------------------------+
C|    CC2H copies a Fortran 77 CHARACTER string into a Hollerith       |
C|    string.  This "conversion" is needed to fool the compiler and    |
C|    the block i/o system, in order to input/output char data.        |
C+---------------------------------------------------------------------+
C|    The calling sequence is:                                         |
C|                                                                     |
C|        CALL     CC2H  (C, H, N)                                     |
C|                                                                     |
C|    Inputs -                                                         |
C|                                                                     |
C|      C          Source character string.                            |
C|      H          Target Hollerith string.                            |
C|      N          Number of characters to be moved.                   |
C|                 No operation if N le 0.                             |
C|                                                                     |
C|    Outputs -                                                        |
C|                                                                     |
C|      H          Updated Hollerith string.                           |
C+---------------------------------------------------------------------+
      implicit      none
#if defined(unix) || defined(linux)

#ifdef alpha
C+---------------------------------------------------------------------+
C|                  T Y P E   &   D I M E N S I O N                    |
C+---------------------------------------------------------------------+
      character*1   c(*)
      integer       h(*), n
      integer       ich, iwd, jch, k, lcs, nask(4), nwd
C+---------------------------------------------------------------------+
C|                  D A T A                                            |
C+---------------------------------------------------------------------+
      data          nask(1) / z'FFFFFF00' /,
     $              nask(2) / z'FFFF00FF' /,
     $              nask(3) / z'FF00FFFF' /,
     $              nask(4) / z'00FFFFFF' /
C+---------------------------------------------------------------------+
C|                  L O G I C                                          |
C+---------------------------------------------------------------------+
      do 1000  k = 1,n
        iwd    =   (k-1)/4 + 1
        nwd    =   k - 4*(iwd-1)
        lcs    =   8 * (nwd - 1)
        ich    =   lshift (ichar(c(k)),lcs)
        jch    =   and (h(iwd), nask(nwd))
        h(iwd) =   or  (jch, ich)
 1000 continue
#else
#ifdef ardent
C+---------------------------------------------------------------------+
C|                  T Y P E   &   D I M E N S I O N                    |
C+---------------------------------------------------------------------+
      character*1   c(*)
      integer       h(*), n
      integer       ich, iwd, jch, k, lcs, nask(4), nwd
C+---------------------------------------------------------------------+
C|                  D A T A                                            |
C+---------------------------------------------------------------------+
      data          nask(1) / '00FFFFFF'X /,
     $              nask(2) / 'FF00FFFF'X /,
     $              nask(3) / 'FFFF00FF'X /,
     $              nask(4) / 'FFFFFF00'X /
C+---------------------------------------------------------------------+
C|                  L O G I C                                          |
C+---------------------------------------------------------------------+
      do 1000  k = 1,n
        iwd     =  (k - 1)/4 + 1
        lcs     =  8 * (4*iwd - k)
        nwd     =  k - 4*(iwd-1)
        ich     =  ISHFT (ICHAR (c(k)), lcs)
        jch     =  IAND (h(iwd), nask(nwd))
        h(iwd)  =  IOR  (jch, ich)
 1000 continue
#else
#ifdef convex
C+---------------------------------------------------------------------+
C|                  T Y P E   &   D I M E N S I O N                    |
C+---------------------------------------------------------------------+
      character     c(*)
      integer       n, k
      integer*1     h(*)
C+---------------------------------------------------------------------+
C|                  L O G I C                                          |
C+---------------------------------------------------------------------+
      do 1000  k = 1,n
        h(k)  =  ICHAR(c(k))
 1000 continue
#else
#ifdef cray
C+---------------------------------------------------------------------+
C|                  T Y P E   &   D I M E N S I O N                    |
C+---------------------------------------------------------------------+
      character*1   c(*)
      integer       h(*), ich, iwd, jch, k, lcs, n
C+---------------------------------------------------------------------+
C|                  L O G I C                                          |
C+---------------------------------------------------------------------+
      do 1000  k = 1,n
        iwd     =  (k - 1)/8 + 1
        lcs     =  8*( 8*iwd - (k-1))
        ich     =  SHIFT(ICHAR(c(k)),56)
        jch     =  AND (h(iwd),SHIFT(MASK(72),lcs) )
        h(iwd)  =  OR (jch, SHIFT(ich,lcs))
 1000 continue
#else
#ifdef dec3100
C+---------------------------------------------------------------------+
C|                  T Y P E   &   D I M E N S I O N                    |
C+---------------------------------------------------------------------+
      character*1   c(*)
      integer       h(*), n
      integer       ich, iwd, jch, k, lcs, nask(4), nwd
C+---------------------------------------------------------------------+
C|                  D A T A                                            |
C+---------------------------------------------------------------------+
      data          nask(1) / z'FFFFFF00' /,
     $              nask(2) / z'FFFF00FF' /,
     $              nask(3) / z'FF00FFFF' /,
     $              nask(4) / z'00FFFFFF' /
C+---------------------------------------------------------------------+
C|                  L O G I C                                          |
C+---------------------------------------------------------------------+
      do 1000  k = 1,n
        iwd     =  (k-1)/4 + 1
        lcs     =  8 * (k-1)
        nwd     =  k - 4*(iwd-1)
        ich     =  lshift (ichar(c(k)),lcs)
        jch     =  and (h(iwd), nask(nwd))
        h(iwd)  =  or  (jch, ich)
 1000 continue
#else
#ifdef hp
C+---------------------------------------------------------------------+
C|                  T Y P E   &   D I M E N S I O N                    |
C+---------------------------------------------------------------------+
      character*1   c(*)
      integer       n
      logical*1     h(*)
C
      integer       k
C+---------------------------------------------------------------------+
C|                  L O G I C                                          |
C+---------------------------------------------------------------------+
      do 1000  k = 1,n
        h(k) = IAND (ICHAR(c(k)), 127)
 1000 continue
#else
#ifdef ibm
C+---------------------------------------------------------------------+
C|                  T Y P E   &   D I M E N S I O N                    |
C+---------------------------------------------------------------------+
      character     c(*)
      integer       n, k
      character     h(*)
C+---------------------------------------------------------------------+
C|                  L O G I C                                          |
C+---------------------------------------------------------------------+
      do 1000  k = 1,n
        h(k)  =  c(k)
 1000 continue
#else
#ifdef i386
C+---------------------------------------------------------------------+
C|                  T Y P E   &   D I M E N S I O N                    |
C+---------------------------------------------------------------------+
      character*1   c(*)
      integer       h(*), n
      integer       ich, iwd, jch, k, lcs, nask(4), nwd
C+---------------------------------------------------------------------+
C|                  D A T A                                            |
C+---------------------------------------------------------------------+
      data          nask(1) / z'FFFFFF00' /,
     $              nask(2) / z'FFFF00FF' /,
     $              nask(3) / z'FF00FFFF' /,
     $              nask(4) / z'00FFFFFF' /
C+---------------------------------------------------------------------+
C|                  L O G I C                                          |
C+---------------------------------------------------------------------+
      do 1000  k = 1,n
        iwd     =  (k-1)/4 + 1
        lcs     =  8 * (k-1)
        nwd     =  k - 4*(iwd-1)
        ich     =  lshift (ichar(c(k)),lcs)
        jch     =  and (h(iwd), nask(nwd))
        h(iwd)  =  or  (jch, ich)
 1000 continue
#else
#ifdef sparc
C+---------------------------------------------------------------------+
C|                  T Y P E   &   D I M E N S I O N                    |
C+---------------------------------------------------------------------+
      character*1   c(*)
      integer       h(*), n
      integer       ich, iwd, jch, k, lcs, nask(4), nwd
C+---------------------------------------------------------------------+
C|                  D A T A                                            |
C+---------------------------------------------------------------------+
      data          nask(1) / z'00FFFFFF' /,
     $              nask(2) / z'FF00FFFF' /,
     $              nask(3) / z'FFFF00FF' /,
     $              nask(4) / z'FFFFFF00' /
C+---------------------------------------------------------------------+
C|                  L O G I C                                          |
C+---------------------------------------------------------------------+
      do 1000  k = 1,n
        iwd     =  (k - 1)/4 + 1
        lcs     =  8 * (4*iwd - k)
        nwd     =  k - 4*(iwd-1)
        ich     =  lshift (ichar(c(k)),lcs)
        jch     =  and (h(iwd), nask(nwd))
        h(iwd)  =  or  (jch, ich)
 1000 continue
#else
#ifdef vax
C+---------------------------------------------------------------------+
C|                  T Y P E   &   D I M E N S I O N                    |
C+---------------------------------------------------------------------+
      character*1   c(*)
      integer       h(*), n, k
      integer       ich, iwd, jch, k, lcs, nask(4), nwd
C+---------------------------------------------------------------------+
C|                  D A T A                                            |
C+---------------------------------------------------------------------+
      data          nask(1) / z'FFFFFF00' /,
     $              nask(2) / z'FFFF00FF' /,
     $              nask(3) / z'FF00FFFF' /,
     $              nask(4) / z'00FFFFFF' /
C+---------------------------------------------------------------------+
C|                  L O G I C                                          |
C+---------------------------------------------------------------------+
      do 1000  k = 1,n
        iwd     =  (k - 1)/4 + 1
        lcs     =  24 - 8 * (4*iwd - k)
        nwd     =  k - 4*(iwd-1)
        ich     =  lshift (ichar(c(k)),lcs)
        jch     =  and (h(iwd), nask(nwd))
        h(iwd)  =  or  (jch, ich)
 1000 continue
#else
C+---------------------------------------------------------------------+
C|                  T Y P E   &   D I M E N S I O N                    |
C+---------------------------------------------------------------------+
      character*1   c(*)
      integer       h(*), n
      integer       ich, iwd, jch, k, lcs, nask(4), nwd
C+---------------------------------------------------------------------+
C|                  D A T A                                            |
C+---------------------------------------------------------------------+
      data          nask(1) / z'00FFFFFF' /,
     $              nask(2) / z'FF00FFFF' /,
     $              nask(3) / z'FFFF00FF' /,
     $              nask(4) / z'FFFFFF00' /
C+---------------------------------------------------------------------+
C|                  L O G I C                                          |
C+---------------------------------------------------------------------+
      do 1000  k = 1,n
        iwd     =  (k - 1)/4 + 1
        lcs     =  8 * (4*iwd - k)
        nwd     =  k - 4*(iwd-1)
        ich     =  lshift (ichar(c(k)),lcs)
        jch     =  and (h(iwd), nask(nwd))
        h(iwd)  =  or  (jch, ich)
 1000 continue
#endif
#endif
#endif
#endif
#endif
#endif
#endif
#endif
#endif
#endif

#else

#ifdef cdc
C+---------------------------------------------------------------------+
C|                  T Y P E   &   D I M E N S I O N                    |
C+---------------------------------------------------------------------+
      character*1   c(1)
      integer       h(*), k, lh, m, n
C+---------------------------------------------------------------------+
C|                  L O G I C                                          |
C+---------------------------------------------------------------------+
      do 1000  k = 1,n
        i       =  SHIFT(ICHAR(c(k)), 54)
        lh      =  (k - 1)/10
        m       =  6*(11 - k + 10*lh)
        h(lh+1) =  OR (h(lh+1).and.SHIFT(-MASK(6),m), SHIFT( i,m))
 1000 continue
#else
#ifdef cray
C+---------------------------------------------------------------------+
C|                  T Y P E   &   D I M E N S I O N                    |
C+---------------------------------------------------------------------+
      character*1   c(*)
      integer       h(*), ich, iwd, jch, k, lcs, n
C+---------------------------------------------------------------------+
C|                  L O G I C                                          |
C+---------------------------------------------------------------------+
      do 1000  k = 1,n
        iwd     =  (k - 1)/8 + 1
        lcs     =  8*( 8*iwd - (k-1))
        ich     =  SHIFT(ICHAR(c(k)),56)
        jch     =  AND (h(iwd),SHIFT(MASK(72),lcs) )
        h(iwd)  =  OR (jch, SHIFT(ich,lcs))
 1000 continue
#else
#ifdef dps8
C+---------------------------------------------------------------------+
C|                  T Y P E   &   D I M E N S I O N                    |
C+---------------------------------------------------------------------+
      character*1   c(*)
      integer       h(*), ich, iwd, jch, k, lcs, mask, n
C+---------------------------------------------------------------------+
C|                  D A T A                                            |
C+---------------------------------------------------------------------+
      data          mask / 12O000777777777 /
C+---------------------------------------------------------------------+
C|                  L O G I C                                          |
C+---------------------------------------------------------------------+
      do 1000  k = 1,n
        iwd     =  (k - 1)/4 + 1
        lcs     =  9 * (4*iwd - (k-1))
        ich     =  ISC(ICHAR(c(k)),27)
        jch     =  IAND (h(iwd),ISC(mask,lcs) )
        h(iwd)  =  IOR (jch, ISC(ich,lcs))
 1000 continue
#else
#ifdef fps
C+---------------------------------------------------------------------+
C|                  T Y P E   &   D I M E N S I O N                    |
C+---------------------------------------------------------------------+
      character*1   c(*)
      integer       h(*), ich, iwd,  k, pos, n
C+---------------------------------------------------------------------+
C|                  L O G I C                                          |
C+---------------------------------------------------------------------+
      do 1000  k = 1,n
        iwd     =  (k - 1)/8 + 1
        pos     =  8*((k-1) - 8*(iwd-1))
        ich     =  ICHAR(c(k))
        h(iwd)  =  INSERT (h(iwd), pos, 8, ich)
 1000 continue
#else
#ifdef ibm
C+---------------------------------------------------------------------+
C|                  T Y P E   &   D I M E N S I O N                    |
C+---------------------------------------------------------------------+
      character     c(*)
      integer       n, k
      logical*1     h(*)
C+---------------------------------------------------------------------+
C|                  L O G I C                                          |
C+---------------------------------------------------------------------+
      do 1000  k = 1,n
        h(k)  =  IAND (ICHAR(c(k)), 127)
 1000 continue
#else
#ifdef sperry
C+---------------------------------------------------------------------+
C|                  T Y P E   &   D I M E N S I O N                    |
C+---------------------------------------------------------------------+
      character*1   c(*)
      integer       h(*), iwd, k, lcs, n
C+---------------------------------------------------------------------+
C|                  L O G I C                                          |
C+---------------------------------------------------------------------+
      do 1000  k = 1,n
        iwd     =  (k - 1)/4 + 1
        lcs     =  9 * (4*iwd - (k-1))
        BITS (lcs+1, 9, h(iwd)) = ICHAR(c(k))
 1000 continue
#else
#ifdef vax
C+---------------------------------------------------------------------+
C|                  T Y P E   &   D I M E N S I O N                    |
C+---------------------------------------------------------------------+
      character     c(*)
      integer       n, k
      logical*1     h(*)
C+---------------------------------------------------------------------+
C|                  L O G I C                                          |
C+---------------------------------------------------------------------+
      do 1000  k = 1,n
        h(k)  =  IAND (ICHAR(c(k)), 127)
 1000 continue
#else
C+---------------------------------------------------------------------+
C|                  T Y P E   &   D I M E N S I O N                    |
C+---------------------------------------------------------------------+
      character*(*) c
      integer       k, m1, m2, n
      logical*1     h(*)
C+---------------------------------------------------------------------+
C|                  L O G I C                                          |
C+---------------------------------------------------------------------+
      m1 =    0
      do 1000  k = 1,(n+127)/128
        m2    =  MIN(m1+n-128*(k-1),m1+128)
        read (c(m1+1:m2),'(128A1)'),  (h(i),i=m1+1,m2)
        m1    =  m2
 1000 continue
#endif
#endif
#endif
#endif
#endif
#endif
#endif

#endif

      return
      end

